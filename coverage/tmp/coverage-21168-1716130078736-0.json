{"result":[{"scriptId":"6","url":"node:internal/per_context/primordials","functions":[{"functionName":"SafeIterator","ranges":[{"startOffset":9830,"endOffset":9903,"count":74}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":9909,"endOffset":9960,"count":632}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9966,"endOffset":10013,"count":41}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11625,"endOffset":11694,"count":34}],"isBlockCoverage":false},{"functionName":"SafeMap","ranges":[{"startOffset":12376,"endOffset":12404,"count":1034}],"isBlockCoverage":false},{"functionName":"SafeSet","ranges":[{"startOffset":12718,"endOffset":12746,"count":1035}],"isBlockCoverage":false},{"functionName":"SafeFinalizationRegistry","ranges":[{"startOffset":13184,"endOffset":13240,"count":2}],"isBlockCoverage":false},{"functionName":"SafeWeakRef","ranges":[{"startOffset":13400,"endOffset":13438,"count":23}],"isBlockCoverage":false},{"functionName":"SafePromise","ranges":[{"startOffset":13594,"endOffset":13636,"count":90}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14153,"endOffset":14434,"count":15}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14301,"endOffset":14428,"count":15}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14332,"endOffset":14381,"count":15}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15792,"endOffset":16364,"count":28}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15828,"endOffset":16363,"count":28}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16229,"endOffset":16341,"count":34}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16716,"endOffset":17182,"count":56}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16752,"endOffset":17181,"count":56}],"isBlockCoverage":false},{"functionName":"onFulfilled","ranges":[{"startOffset":16887,"endOffset":16968,"count":68}],"isBlockCoverage":false}]},{"scriptId":"9","url":"node:internal/bootstrap/realm","functions":[{"functionName":"binding","ranges":[{"startOffset":4800,"endOffset":5665,"count":2},{"startOffset":4928,"endOffset":4955,"count":0},{"startOffset":5145,"endOffset":5338,"count":0},{"startOffset":5461,"endOffset":5664,"count":0}],"isBlockCoverage":true},{"functionName":"internalBinding","ranges":[{"startOffset":6164,"endOffset":6433,"count":126}],"isBlockCoverage":false},{"functionName":"canBeRequiredByUsers","ranges":[{"startOffset":9768,"endOffset":9845,"count":748}],"isBlockCoverage":true},{"functionName":"canBeRequiredWithoutScheme","ranges":[{"startOffset":9858,"endOffset":9954,"count":4904}],"isBlockCoverage":true},{"functionName":"normalizeRequirableId","ranges":[{"startOffset":9967,"endOffset":10323,"count":3544},{"startOffset":10044,"endOffset":10211,"count":0},{"startOffset":10267,"endOffset":10293,"count":362},{"startOffset":10293,"endOffset":10322,"count":3182}],"isBlockCoverage":true},{"functionName":"getCanBeRequiredByUsersWithoutSchemeList","ranges":[{"startOffset":10596,"endOffset":10707,"count":1}],"isBlockCoverage":true},{"functionName":"compileForPublicLoader","ranges":[{"startOffset":10872,"endOffset":11549,"count":370},{"startOffset":10954,"endOffset":11150,"count":0},{"startOffset":11216,"endOffset":11518,"count":25},{"startOffset":11479,"endOffset":11483,"count":0}],"isBlockCoverage":true},{"functionName":"compileForInternalLoader","ranges":[{"startOffset":12869,"endOffset":13717,"count":1741}],"isBlockCoverage":false},{"functionName":"requireBuiltin","ranges":[{"startOffset":13923,"endOffset":14298,"count":1374}],"isBlockCoverage":false},{"functionName":"requireWithFallbackInDeps","ranges":[{"startOffset":14418,"endOffset":14701,"count":64},{"startOffset":14516,"endOffset":14571,"count":12},{"startOffset":14571,"endOffset":14663,"count":52},{"startOffset":14614,"endOffset":14663,"count":0}],"isBlockCoverage":true}]},{"scriptId":"10","url":"node:internal/errors","functions":[{"functionName":"defaultPrepareStackTrace","ranges":[{"startOffset":2396,"endOffset":2879,"count":2},{"startOffset":2601,"endOffset":2677,"count":0},{"startOffset":2767,"endOffset":2798,"count":0}],"isBlockCoverage":true},{"functionName":"setInternalPrepareStackTrace","ranges":[{"startOffset":2883,"endOffset":2976,"count":1}],"isBlockCoverage":true},{"functionName":"prepareStackTraceCallback","ranges":[{"startOffset":3818,"endOffset":4975,"count":27},{"startOffset":4029,"endOffset":4149,"count":0},{"startOffset":4462,"endOffset":4974,"count":0}],"isBlockCoverage":true},{"functionName":"ErrorPrepareStackTrace","ranges":[{"startOffset":5045,"endOffset":5146,"count":2}],"isBlockCoverage":true},{"functionName":"hideStackFrames","ranges":[{"startOffset":15191,"endOffset":15499,"count":20}],"isBlockCoverage":false},{"functionName":"wrappedFn","ranges":[{"startOffset":15225,"endOffset":15438,"count":2555}],"isBlockCoverage":false}]},{"scriptId":"11","url":"node:internal/assert","functions":[{"functionName":"assert","ranges":[{"startOffset":167,"endOffset":322,"count":1132},{"startOffset":216,"endOffset":319,"count":0}],"isBlockCoverage":true}]},{"scriptId":"12","url":"node:internal/bootstrap/node","functions":[{"functionName":"get","ranges":[{"startOffset":3929,"endOffset":3981,"count":155}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3988,"endOffset":4048,"count":2}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4198,"endOffset":4236,"count":2}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4243,"endOffset":4676,"count":1},{"startOffset":4303,"endOffset":4594,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8236,"endOffset":8402,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":8507,"endOffset":8711,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":13188,"endOffset":13226,"count":1449}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":14132,"endOffset":14169,"count":1924}],"isBlockCoverage":true}]},{"scriptId":"13","url":"node:internal/timers","functions":[{"functionName":"","ranges":[{"startOffset":4504,"endOffset":4531,"count":1}],"isBlockCoverage":true},{"functionName":"initAsyncResource","ranges":[{"startOffset":5702,"endOffset":5986,"count":67},{"startOffset":5933,"endOffset":5983,"count":0}],"isBlockCoverage":true},{"functionName":"Timeout","ranges":[{"startOffset":6096,"endOffset":7172,"count":14},{"startOffset":6220,"endOffset":6243,"count":13},{"startOffset":6246,"endOffset":6606,"count":1},{"startOffset":6280,"endOffset":6530,"count":0},{"startOffset":6974,"endOffset":6981,"count":6},{"startOffset":6982,"endOffset":6988,"count":8},{"startOffset":7047,"endOffset":7061,"count":13}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":7588,"endOffset":7734,"count":6}],"isBlockCoverage":true},{"functionName":"TimersList","ranges":[{"startOffset":7960,"endOffset":8273,"count":9}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":8871,"endOffset":9060,"count":53},{"startOffset":8915,"endOffset":8993,"count":0}],"isBlockCoverage":true},{"functionName":"incRefCount","ranges":[{"startOffset":9707,"endOffset":9878,"count":13},{"startOffset":9763,"endOffset":9875,"count":8}],"isBlockCoverage":true},{"functionName":"decRefCount","ranges":[{"startOffset":9882,"endOffset":10054,"count":13},{"startOffset":9938,"endOffset":10051,"count":8}],"isBlockCoverage":true},{"functionName":"insert","ranges":[{"startOffset":11247,"endOffset":12007,"count":14},{"startOffset":11585,"endOffset":11977,"count":9},{"startOffset":11826,"endOffset":11972,"count":3}],"isBlockCoverage":true},{"functionName":"setUnrefTimeout","ranges":[{"startOffset":12011,"endOffset":12277,"count":1}],"isBlockCoverage":true},{"functionName":"compareTimersLists","ranges":[{"startOffset":12894,"endOffset":13108,"count":7},{"startOffset":12998,"endOffset":13083,"count":0}],"isBlockCoverage":true},{"functionName":"setPosition","ranges":[{"startOffset":13112,"endOffset":13185,"count":13}],"isBlockCoverage":true},{"functionName":"processImmediate","ranges":[{"startOffset":13507,"endOffset":15503,"count":53},{"startOffset":13587,"endOffset":13612,"count":0},{"startOffset":14063,"endOffset":14078,"count":0},{"startOffset":14402,"endOffset":14501,"count":0},{"startOffset":15082,"endOffset":15140,"count":0},{"startOffset":15150,"endOffset":15345,"count":52},{"startOffset":15247,"endOffset":15268,"count":0},{"startOffset":15345,"endOffset":15428,"count":52},{"startOffset":15428,"endOffset":15457,"count":0},{"startOffset":15457,"endOffset":15502,"count":52}],"isBlockCoverage":true},{"functionName":"processTimers","ranges":[{"startOffset":15511,"endOffset":16019,"count":1},{"startOffset":15821,"endOffset":15833,"count":0},{"startOffset":15857,"endOffset":16018,"count":0}],"isBlockCoverage":true},{"functionName":"Immediate","ranges":[{"startOffset":18778,"endOffset":19114,"count":53}],"isBlockCoverage":true},{"functionName":"ref","ranges":[{"startOffset":19120,"endOffset":19396,"count":53}],"isBlockCoverage":true}]},{"scriptId":"14","url":"node:internal/async_hooks","functions":[{"functionName":"newAsyncId","ranges":[{"startOffset":14965,"endOffset":15037,"count":223}],"isBlockCoverage":true},{"functionName":"getOrSetAsyncId","ranges":[{"startOffset":15041,"endOffset":15237,"count":5},{"startOffset":15182,"endOffset":15236,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultTriggerAsyncId","ranges":[{"startOffset":15426,"endOffset":15722,"count":223},{"startOffset":15644,"endOffset":15686,"count":202},{"startOffset":15686,"endOffset":15721,"count":21}],"isBlockCoverage":true},{"functionName":"defaultTriggerAsyncIdScope","ranges":[{"startOffset":16055,"endOffset":16561,"count":28},{"startOffset":16167,"endOffset":16198,"count":0}],"isBlockCoverage":true},{"functionName":"hasHooks","ranges":[{"startOffset":16565,"endOffset":16630,"count":1070}],"isBlockCoverage":true},{"functionName":"enabledHooksExist","ranges":[{"startOffset":16634,"endOffset":16695,"count":208}],"isBlockCoverage":true},{"functionName":"initHooksExist","ranges":[{"startOffset":16699,"endOffset":16756,"count":223}],"isBlockCoverage":true},{"functionName":"destroyHooksExist","ranges":[{"startOffset":16823,"endOffset":16886,"count":220}],"isBlockCoverage":true},{"functionName":"emitBeforeScript","ranges":[{"startOffset":17398,"endOffset":17579,"count":209},{"startOffset":17550,"endOffset":17576,"count":0}],"isBlockCoverage":true},{"functionName":"emitAfterScript","ranges":[{"startOffset":17585,"endOffset":17710,"count":208},{"startOffset":17651,"endOffset":17676,"count":0}],"isBlockCoverage":true},{"functionName":"hasAsyncIdStack","ranges":[{"startOffset":17937,"endOffset":18002,"count":2}],"isBlockCoverage":true},{"functionName":"pushAsyncContext","ranges":[{"startOffset":18072,"endOffset":18652,"count":209},{"startOffset":18296,"endOffset":18346,"count":0}],"isBlockCoverage":true},{"functionName":"popAsyncContext","ranges":[{"startOffset":18721,"endOffset":19347,"count":208},{"startOffset":18839,"endOffset":18852,"count":0},{"startOffset":18933,"endOffset":19042,"count":0}],"isBlockCoverage":true}]},{"scriptId":"15","url":"node:internal/validators","functions":[{"functionName":"isInt32","ranges":[{"startOffset":1111,"endOffset":1172,"count":1086}],"isBlockCoverage":true},{"functionName":"parseFileMode","ranges":[{"startOffset":1931,"endOffset":2253,"count":16},{"startOffset":2026,"endOffset":2199,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2512,"endOffset":2900,"count":4},{"startOffset":2634,"endOffset":2688,"count":0},{"startOffset":2730,"endOffset":2784,"count":0},{"startOffset":2829,"endOffset":2895,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3158,"endOffset":3632,"count":6},{"startOffset":3332,"endOffset":3402,"count":0},{"startOffset":3437,"endOffset":3507,"count":0},{"startOffset":3545,"endOffset":3627,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3882,"endOffset":4327,"count":16},{"startOffset":3953,"endOffset":4019,"count":0},{"startOffset":4052,"endOffset":4118,"count":0},{"startOffset":4143,"endOffset":4146,"count":0},{"startOffset":4246,"endOffset":4324,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4529,"endOffset":4644,"count":8454}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4898,"endOffset":5355,"count":39},{"startOffset":4978,"endOffset":5032,"count":0},{"startOffset":5055,"endOffset":5069,"count":33},{"startOffset":5087,"endOffset":5101,"count":32},{"startOffset":5125,"endOffset":5139,"count":6},{"startOffset":5141,"endOffset":5162,"count":33},{"startOffset":5165,"endOffset":5352,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5554,"endOffset":5896,"count":8},{"startOffset":5626,"endOffset":5893,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5701,"endOffset":5763,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6102,"endOffset":6219,"count":5},{"startOffset":6161,"endOffset":6216,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6585,"endOffset":7633,"count":26},{"startOffset":6677,"endOffset":6925,"count":3},{"startOffset":6729,"endOffset":6803,"count":0},{"startOffset":6844,"endOffset":6918,"count":0},{"startOffset":6925,"endOffset":7628,"count":23},{"startOffset":7041,"endOffset":7058,"count":20},{"startOffset":7060,"endOffset":7134,"count":0},{"startOffset":7236,"endOffset":7258,"count":0},{"startOffset":7260,"endOffset":7334,"count":0},{"startOffset":7495,"endOffset":7545,"count":0},{"startOffset":7547,"endOffset":7621,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8203,"endOffset":8387,"count":1},{"startOffset":8245,"endOffset":8273,"count":0},{"startOffset":8274,"endOffset":8304,"count":0},{"startOffset":8306,"endOffset":8382,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11357,"endOffset":11593,"count":1},{"startOffset":11423,"endOffset":11590,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12335,"endOffset":12705,"count":12},{"startOffset":12413,"endOffset":12440,"count":5},{"startOffset":12478,"endOffset":12519,"count":5},{"startOffset":12601,"endOffset":12614,"count":5},{"startOffset":12617,"endOffset":12682,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13318,"endOffset":13437,"count":801}],"isBlockCoverage":false}]},{"scriptId":"16","url":"node:internal/util","functions":[{"functionName":"getDeprecationWarningEmitter","ranges":[{"startOffset":2444,"endOffset":3114,"count":34}],"isBlockCoverage":false},{"functionName":"shouldEmitWarning","ranges":[{"startOffset":2545,"endOffset":2555,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2595,"endOffset":3110,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":3887,"endOffset":4974,"count":34}],"isBlockCoverage":false},{"functionName":"deprecated","ranges":[{"startOffset":4263,"endOffset":4574,"count":0}],"isBlockCoverage":false},{"functionName":"assertCrypto","ranges":[{"startOffset":5258,"endOffset":5335,"count":5},{"startOffset":5306,"endOffset":5332,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeEncoding","ranges":[{"startOffset":5519,"endOffset":5653,"count":1107},{"startOffset":5590,"endOffset":5608,"count":19},{"startOffset":5610,"endOffset":5624,"count":1092},{"startOffset":5624,"endOffset":5652,"count":15}],"isBlockCoverage":true},{"functionName":"slowCases","ranges":[{"startOffset":5657,"endOffset":7509,"count":15},{"startOffset":5713,"endOffset":5972,"count":0},{"startOffset":5978,"endOffset":6117,"count":0},{"startOffset":6123,"endOffset":6546,"count":0},{"startOffset":6589,"endOffset":6605,"count":0},{"startOffset":6634,"endOffset":6653,"count":0},{"startOffset":6671,"endOffset":6765,"count":0},{"startOffset":6767,"endOffset":6923,"count":0},{"startOffset":6925,"endOffset":6955,"count":0},{"startOffset":6961,"endOffset":7116,"count":0},{"startOffset":7122,"endOffset":7280,"count":0},{"startOffset":7286,"endOffset":7449,"count":0},{"startOffset":7455,"endOffset":7501,"count":0}],"isBlockCoverage":true},{"functionName":"filterDuplicateStrings","ranges":[{"startOffset":7788,"endOffset":8139,"count":1},{"startOffset":7906,"endOffset":8081,"count":52},{"startOffset":8001,"endOffset":8035,"count":0}],"isBlockCoverage":true},{"functionName":"cachedResult","ranges":[{"startOffset":8143,"endOffset":8306,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8196,"endOffset":8302,"count":1}],"isBlockCoverage":true},{"functionName":"promisify","ranges":[{"startOffset":11255,"endOffset":13172,"count":22},{"startOffset":11378,"endOffset":11434,"count":1},{"startOffset":11525,"endOffset":11811,"count":0},{"startOffset":12952,"endOffset":13118,"count":70}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":12017,"endOffset":12553,"count":0}],"isBlockCoverage":false},{"functionName":"spliceOne","ranges":[{"startOffset":13751,"endOffset":13882,"count":21},{"startOffset":13834,"endOffset":13864,"count":0}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":15244,"endOffset":15424,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15303,"endOffset":15420,"count":10},{"startOffset":15340,"endOffset":15419,"count":5}],"isBlockCoverage":true},{"functionName":"exposeInterface","ranges":[{"startOffset":16207,"endOffset":16435,"count":2}],"isBlockCoverage":false},{"functionName":"defineLazyProperties","ranges":[{"startOffset":16957,"endOffset":17928,"count":1}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":17182,"endOffset":17331,"count":12}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":17439,"endOffset":17642,"count":12}],"isBlockCoverage":true},{"functionName":"defineReplaceableLazyAttribute","ranges":[{"startOffset":17932,"endOffset":18873,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18151,"endOffset":18397,"count":6},{"startOffset":18200,"endOffset":18255,"count":0},{"startOffset":18281,"endOffset":18314,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":18509,"endOffset":18583,"count":0}],"isBlockCoverage":false},{"functionName":"exposeLazyInterfaces","ranges":[{"startOffset":18877,"endOffset":18979,"count":1}],"isBlockCoverage":false},{"functionName":"lazyDOMExceptionClass","ranges":[{"startOffset":19033,"endOffset":19132,"count":1}],"isBlockCoverage":true},{"functionName":"setOwnProperty","ranges":[{"startOffset":20221,"endOffset":20419,"count":1957}],"isBlockCoverage":true},{"functionName":"getInternalGlobal","ranges":[{"startOffset":20444,"endOffset":20726,"count":1007},{"startOffset":20506,"endOffset":20697,"count":1}],"isBlockCoverage":true},{"functionName":"SideEffectFreeRegExpPrototypeExec","ranges":[{"startOffset":20730,"endOffset":20946,"count":1006}],"isBlockCoverage":true},{"functionName":"getCrossRelmRegex","ranges":[{"startOffset":20995,"endOffset":21803,"count":472},{"startOffset":21093,"endOffset":21107,"count":471},{"startOffset":21107,"endOffset":21178,"count":1},{"startOffset":21178,"endOffset":21196,"count":0},{"startOffset":21196,"endOffset":21300,"count":1},{"startOffset":21300,"endOffset":21318,"count":0},{"startOffset":21318,"endOffset":21362,"count":1},{"startOffset":21362,"endOffset":21380,"count":0},{"startOffset":21380,"endOffset":21421,"count":1},{"startOffset":21421,"endOffset":21439,"count":0},{"startOffset":21439,"endOffset":21481,"count":1},{"startOffset":21481,"endOffset":21499,"count":0},{"startOffset":21499,"endOffset":21540,"count":1},{"startOffset":21540,"endOffset":21558,"count":0},{"startOffset":21558,"endOffset":21802,"count":1}],"isBlockCoverage":true},{"functionName":"SideEffectFreeRegExpPrototypeSymbolReplace","ranges":[{"startOffset":21807,"endOffset":21963,"count":472}],"isBlockCoverage":true},{"functionName":"getLazy","ranges":[{"startOffset":22500,"endOffset":22722,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22584,"endOffset":22718,"count":5633},{"startOffset":22629,"endOffset":22694,"count":3}],"isBlockCoverage":true},{"functionName":"setupCoverageHooks","ranges":[{"startOffset":22851,"endOffset":23545,"count":1},{"startOffset":23331,"endOffset":23513,"count":0}],"isBlockCoverage":true},{"functionName":"guessHandleType","ranges":[{"startOffset":23622,"endOffset":23722,"count":2}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":23726,"endOffset":24300,"count":23}],"isBlockCoverage":false},{"functionName":"WeakReference","ranges":[{"startOffset":23805,"endOffset":23874,"count":23}],"isBlockCoverage":true},{"functionName":"incRef","ranges":[{"startOffset":23880,"endOffset":24107,"count":0}],"isBlockCoverage":false},{"functionName":"decRef","ranges":[{"startOffset":24113,"endOffset":24247,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24253,"endOffset":24297,"count":0}],"isBlockCoverage":false}]},{"scriptId":"17","url":"node:internal/options","functions":[{"functionName":"getCLIOptionsFromBinding","ranges":[{"startOffset":481,"endOffset":620,"count":2458},{"startOffset":539,"endOffset":595,"count":1}],"isBlockCoverage":true},{"functionName":"getAliasesFromBinding","ranges":[{"startOffset":624,"endOffset":760,"count":1}],"isBlockCoverage":true},{"functionName":"getEmbedderOptions","ranges":[{"startOffset":764,"endOffset":913,"count":4},{"startOffset":821,"endOffset":883,"count":1}],"isBlockCoverage":true},{"functionName":"refreshOptions","ranges":[{"startOffset":917,"endOffset":1001,"count":1}],"isBlockCoverage":true},{"functionName":"getOptionValue","ranges":[{"startOffset":1005,"endOffset":1278,"count":2457},{"startOffset":1129,"endOffset":1233,"count":8},{"startOffset":1233,"endOffset":1274,"count":2449}],"isBlockCoverage":true},{"functionName":"get options","ranges":[{"startOffset":1785,"endOffset":1845,"count":1}],"isBlockCoverage":true},{"functionName":"get aliases","ranges":[{"startOffset":1850,"endOffset":1907,"count":1}],"isBlockCoverage":true}]},{"scriptId":"18","url":"node:internal/util/types","functions":[{"functionName":"isTypedArray","ranges":[{"startOffset":139,"endOffset":244,"count":26}],"isBlockCoverage":true},{"functionName":"isUint8Array","ranges":[{"startOffset":248,"endOffset":356,"count":2539}],"isBlockCoverage":true},{"functionName":"isBigInt64Array","ranges":[{"startOffset":1280,"endOffset":1394,"count":5}],"isBlockCoverage":true}]},{"scriptId":"19","url":"node:internal/linkedlist","functions":[{"functionName":"remove","ranges":[{"startOffset":275,"endOffset":513,"count":26}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":572,"endOffset":1037,"count":14},{"startOffset":624,"endOffset":641,"count":0}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":1041,"endOffset":1103,"count":7}],"isBlockCoverage":true}]},{"scriptId":"20","url":"node:internal/priority_queue","functions":[{"functionName":"insert","ranges":[{"startOffset":717,"endOffset":909,"count":9},{"startOffset":857,"endOffset":874,"count":0}],"isBlockCoverage":true},{"functionName":"peek","ranges":[{"startOffset":915,"endOffset":955,"count":1}],"isBlockCoverage":true},{"functionName":"percolateDown","ranges":[{"startOffset":1022,"endOffset":1708,"count":1},{"startOffset":1243,"endOffset":1613,"count":0}],"isBlockCoverage":true},{"functionName":"percolateUp","ranges":[{"startOffset":1714,"endOffset":2220,"count":9},{"startOffset":1895,"endOffset":2125,"count":7},{"startOffset":1986,"endOffset":1992,"count":4},{"startOffset":1992,"endOffset":2125,"count":3}],"isBlockCoverage":true},{"functionName":"removeAt","ranges":[{"startOffset":2226,"endOffset":2568,"count":7},{"startOffset":2390,"endOffset":2404,"count":6},{"startOffset":2406,"endOffset":2563,"count":1},{"startOffset":2427,"endOffset":2477,"count":0},{"startOffset":2488,"endOffset":2510,"count":0}],"isBlockCoverage":true}]},{"scriptId":"21","url":"node:internal/util/inspect","functions":[{"functionName":"stylizeNoColor","ranges":[{"startOffset":17750,"endOffset":17798,"count":2}],"isBlockCoverage":true},{"functionName":"formatNumber","ranges":[{"startOffset":54267,"endOffset":55081,"count":2},{"startOffset":54461,"endOffset":54503,"count":0},{"startOffset":54547,"endOffset":55080,"count":0}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":74682,"endOffset":74765,"count":172}],"isBlockCoverage":true},{"functionName":"formatWithOptions","ranges":[{"startOffset":74769,"endOffset":74964,"count":17}],"isBlockCoverage":true},{"functionName":"formatNumberNoColor","ranges":[{"startOffset":74968,"endOffset":75156,"count":2}],"isBlockCoverage":true},{"functionName":"formatWithOptionsInternal","ranges":[{"startOffset":75352,"endOffset":79500,"count":189},{"startOffset":75522,"endOffset":79293,"count":187},{"startOffset":75552,"endOffset":75581,"count":172},{"startOffset":75581,"endOffset":75672,"count":15},{"startOffset":75672,"endOffset":79124,"count":265},{"startOffset":75729,"endOffset":79117,"count":29},{"startOffset":75885,"endOffset":76680,"count":27},{"startOffset":75994,"endOffset":76085,"count":0},{"startOffset":76124,"endOffset":76215,"count":0},{"startOffset":76253,"endOffset":76298,"count":0},{"startOffset":76299,"endOffset":76356,"count":0},{"startOffset":76420,"endOffset":76643,"count":0},{"startOffset":76694,"endOffset":76782,"count":0},{"startOffset":76796,"endOffset":77229,"count":2},{"startOffset":76905,"endOffset":76996,"count":0},{"startOffset":77035,"endOffset":77087,"count":0},{"startOffset":77243,"endOffset":77341,"count":0},{"startOffset":77355,"endOffset":77590,"count":0},{"startOffset":77604,"endOffset":78085,"count":0},{"startOffset":78099,"endOffset":78438,"count":0},{"startOffset":78452,"endOffset":78541,"count":0},{"startOffset":78555,"endOffset":78690,"count":0},{"startOffset":78704,"endOffset":78789,"count":0},{"startOffset":78837,"endOffset":78916,"count":20},{"startOffset":78982,"endOffset":79108,"count":0},{"startOffset":79124,"endOffset":79288,"count":15},{"startOffset":79293,"endOffset":79323,"count":17},{"startOffset":79323,"endOffset":79482,"count":0},{"startOffset":79482,"endOffset":79499,"count":17}],"isBlockCoverage":true}]},{"scriptId":"22","url":"node:internal/util/debuglog","functions":[{"functionName":"initializeDebugEnv","ranges":[{"startOffset":523,"endOffset":1008,"count":1},{"startOffset":617,"endOffset":961,"count":0}],"isBlockCoverage":true},{"functionName":"testEnabled","ranges":[{"startOffset":898,"endOffset":955,"count":0}],"isBlockCoverage":false},{"functionName":"testEnabled","ranges":[{"startOffset":988,"endOffset":999,"count":14}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":1449,"endOffset":1457,"count":7332}],"isBlockCoverage":true},{"functionName":"debuglogImpl","ranges":[{"startOffset":1586,"endOffset":2160,"count":13},{"startOffset":1662,"endOffset":2130,"count":7},{"startOffset":1682,"endOffset":2080,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1774,"endOffset":2072,"count":0}],"isBlockCoverage":false},{"functionName":"debuglog","ranges":[{"startOffset":2386,"endOffset":3452,"count":16}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":2418,"endOffset":2517,"count":14}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":2533,"endOffset":2939,"count":13},{"startOffset":2788,"endOffset":2818,"count":8},{"startOffset":2826,"endOffset":2865,"count":2},{"startOffset":2873,"endOffset":2927,"count":3}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":2971,"endOffset":3044,"count":1}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":3004,"endOffset":3017,"count":0}],"isBlockCoverage":false},{"functionName":"logger","ranges":[{"startOffset":3064,"endOffset":3265,"count":13},{"startOffset":3114,"endOffset":3144,"count":8},{"startOffset":3152,"endOffset":3191,"count":2},{"startOffset":3199,"endOffset":3253,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3339,"endOffset":3375,"count":1}],"isBlockCoverage":true}]},{"scriptId":"23","url":"node:events","functions":[{"functionName":"EventEmitter","ranges":[{"startOffset":6723,"endOffset":6794,"count":83}],"isBlockCoverage":false},{"functionName":"checkListener","ranges":[{"startOffset":8298,"endOffset":8378,"count":557}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8491,"endOffset":8541,"count":83}],"isBlockCoverage":true},{"functionName":"EventEmitter.init","ranges":[{"startOffset":10241,"endOffset":10931,"count":83}],"isBlockCoverage":false},{"functionName":"addCatch","ranges":[{"startOffset":10936,"endOffset":11515,"count":20},{"startOffset":11026,"endOffset":11458,"count":0},{"startOffset":11464,"endOffset":11512,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11235,"endOffset":11449,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxListeners","ranges":[{"startOffset":12354,"endOffset":12473,"count":1}],"isBlockCoverage":true},{"functionName":"_getMaxListeners","ranges":[{"startOffset":12478,"endOffset":12631,"count":81},{"startOffset":12598,"endOffset":12630,"count":0}],"isBlockCoverage":true},{"functionName":"emit","ranges":[{"startOffset":13830,"endOffset":16212,"count":320}],"isBlockCoverage":false},{"functionName":"_addListener","ranges":[{"startOffset":16217,"endOffset":18166,"count":365}],"isBlockCoverage":false},{"functionName":"addListener","ranges":[{"startOffset":18352,"endOffset":18446,"count":365}],"isBlockCoverage":false},{"functionName":"onceWrapper","ranges":[{"startOffset":18855,"endOffset":19127,"count":47},{"startOffset":19023,"endOffset":19062,"count":37},{"startOffset":19062,"endOffset":19124,"count":10}],"isBlockCoverage":true},{"functionName":"_onceWrap","ranges":[{"startOffset":19131,"endOffset":19378,"count":85}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":19577,"endOffset":19708,"count":85}],"isBlockCoverage":true},{"functionName":"removeListener","ranges":[{"startOffset":20342,"endOffset":21799,"count":107},{"startOffset":20496,"endOffset":20508,"count":0},{"startOffset":20585,"endOffset":20597,"count":3},{"startOffset":20597,"endOffset":20629,"count":104},{"startOffset":20629,"endOffset":20658,"count":49},{"startOffset":20660,"endOffset":21043,"count":72},{"startOffset":20728,"endOffset":20777,"count":52},{"startOffset":20777,"endOffset":21034,"count":20},{"startOffset":20812,"endOffset":20871,"count":0},{"startOffset":20962,"endOffset":21023,"count":0},{"startOffset":21043,"endOffset":21770,"count":32},{"startOffset":21165,"endOffset":21309,"count":48},{"startOffset":21203,"endOffset":21235,"count":21},{"startOffset":21237,"endOffset":21298,"count":32},{"startOffset":21350,"endOffset":21362,"count":0},{"startOffset":21405,"endOffset":21418,"count":11},{"startOffset":21418,"endOffset":21584,"count":21},{"startOffset":21488,"endOffset":21535,"count":1},{"startOffset":21630,"endOffset":21653,"count":22},{"startOffset":21717,"endOffset":21761,"count":0},{"startOffset":21770,"endOffset":21798,"count":104}],"isBlockCoverage":true},{"functionName":"removeAllListeners","ranges":[{"startOffset":22131,"endOffset":23573,"count":3},{"startOffset":22245,"endOffset":22257,"count":0},{"startOffset":22407,"endOffset":22500,"count":0},{"startOffset":22538,"endOffset":22691,"count":0},{"startOffset":22757,"endOffset":23572,"count":0}],"isBlockCoverage":true},{"functionName":"_listeners","ranges":[{"startOffset":23578,"endOffset":23988,"count":14},{"startOffset":23692,"endOffset":23702,"count":3},{"startOffset":23702,"endOffset":23779,"count":11},{"startOffset":23779,"endOffset":23789,"count":1},{"startOffset":23789,"endOffset":23905,"count":10},{"startOffset":23890,"endOffset":23904,"count":0},{"startOffset":23905,"endOffset":23959,"count":0},{"startOffset":23960,"endOffset":23984,"count":0}],"isBlockCoverage":true},{"functionName":"listeners","ranges":[{"startOffset":24186,"endOffset":24255,"count":14}],"isBlockCoverage":true},{"functionName":"listenerCount","ranges":[{"startOffset":25230,"endOffset":25965,"count":73},{"startOffset":25334,"endOffset":25947,"count":64},{"startOffset":25419,"endOffset":25571,"count":0},{"startOffset":25607,"endOffset":25942,"count":5},{"startOffset":25638,"endOffset":25900,"count":0},{"startOffset":25947,"endOffset":25964,"count":68}],"isBlockCoverage":true},{"functionName":"arrayClone","ranges":[{"startOffset":26228,"endOffset":26712,"count":50},{"startOffset":26404,"endOffset":26436,"count":39},{"startOffset":26442,"endOffset":26482,"count":11},{"startOffset":26488,"endOffset":26536,"count":0},{"startOffset":26542,"endOffset":26598,"count":0},{"startOffset":26604,"endOffset":26668,"count":0},{"startOffset":26673,"endOffset":26711,"count":0}],"isBlockCoverage":true}]},{"scriptId":"24","url":"node:buffer","functions":[{"functionName":"validateOffset","ranges":[{"startOffset":3314,"endOffset":3399,"count":2}],"isBlockCoverage":true},{"functionName":"createPool","ranges":[{"startOffset":4040,"endOffset":4204,"count":3}],"isBlockCoverage":false},{"functionName":"alignPool","ranges":[{"startOffset":4223,"endOffset":4351,"count":41}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8358,"endOffset":8386,"count":2}],"isBlockCoverage":true},{"functionName":"from","ranges":[{"startOffset":8655,"endOffset":9652,"count":58}],"isBlockCoverage":false},{"functionName":"alloc","ranges":[{"startOffset":11535,"endOffset":11814,"count":8},{"startOffset":11648,"endOffset":11661,"count":0},{"startOffset":11662,"endOffset":11673,"count":0},{"startOffset":11675,"endOffset":11779,"count":0}],"isBlockCoverage":true},{"functionName":"allocUnsafe","ranges":[{"startOffset":11999,"endOffset":12104,"count":9}],"isBlockCoverage":true},{"functionName":"allocUnsafeSlow","ranges":[{"startOffset":12352,"endOffset":12471,"count":15}],"isBlockCoverage":true},{"functionName":"allocate","ranges":[{"startOffset":12804,"endOffset":13149,"count":9},{"startOffset":12848,"endOffset":12884,"count":4},{"startOffset":12884,"endOffset":13110,"count":5},{"startOffset":12974,"endOffset":12987,"count":0},{"startOffset":13110,"endOffset":13148,"count":0}],"isBlockCoverage":true},{"functionName":"fromStringFast","ranges":[{"startOffset":13153,"endOffset":13716,"count":47}],"isBlockCoverage":false},{"functionName":"fromString","ranges":[{"startOffset":13720,"endOffset":14161,"count":47}],"isBlockCoverage":false},{"functionName":"fromArrayBuffer","ranges":[{"startOffset":14165,"endOffset":14891,"count":6},{"startOffset":14313,"endOffset":14413,"count":0},{"startOffset":14495,"endOffset":14540,"count":0},{"startOffset":14603,"endOffset":14835,"count":0}],"isBlockCoverage":true},{"functionName":"fromArrayLike","ranges":[{"startOffset":14895,"endOffset":15302,"count":5},{"startOffset":14954,"endOffset":14978,"count":0},{"startOffset":15080,"endOffset":15093,"count":0},{"startOffset":15268,"endOffset":15301,"count":0}],"isBlockCoverage":true},{"functionName":"fromObject","ranges":[{"startOffset":15306,"endOffset":15623,"count":5},{"startOffset":15365,"endOffset":15396,"count":0},{"startOffset":15441,"endOffset":15481,"count":0},{"startOffset":15518,"endOffset":15575,"count":0},{"startOffset":15577,"endOffset":15620,"count":0}],"isBlockCoverage":true},{"functionName":"isBuffer","ranges":[{"startOffset":15666,"endOffset":15722,"count":174}],"isBlockCoverage":true},{"functionName":"isEncoding","ranges":[{"startOffset":16108,"endOffset":16262,"count":1100}],"isBlockCoverage":true},{"functionName":"base64ByteLength","ranges":[{"startOffset":17522,"endOffset":17799,"count":34},{"startOffset":17647,"endOffset":17655,"count":21},{"startOffset":17733,"endOffset":17741,"count":12}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":17941,"endOffset":18005,"count":11}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":18019,"endOffset":18065,"count":32}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":19431,"endOffset":19456,"count":4}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":19470,"endOffset":19535,"count":4}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":19931,"endOffset":19982,"count":34}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":19996,"endOffset":20062,"count":18}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":20076,"endOffset":20124,"count":1}],"isBlockCoverage":true},{"functionName":"getEncodingOps","ranges":[{"startOffset":21419,"endOffset":23291,"count":78},{"startOffset":21509,"endOffset":21814,"count":37},{"startOffset":21573,"endOffset":21814,"count":0},{"startOffset":21820,"endOffset":22247,"count":6},{"startOffset":21861,"endOffset":21885,"count":2},{"startOffset":21885,"endOffset":21944,"count":4},{"startOffset":21944,"endOffset":22247,"count":0},{"startOffset":22253,"endOffset":22411,"count":0},{"startOffset":22417,"endOffset":22577,"count":0},{"startOffset":22583,"endOffset":22972,"count":35},{"startOffset":22659,"endOffset":22685,"count":0},{"startOffset":22746,"endOffset":22860,"count":0},{"startOffset":22871,"endOffset":22972,"count":0},{"startOffset":22978,"endOffset":23113,"count":0},{"startOffset":23119,"endOffset":23283,"count":0}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":23295,"endOffset":23823,"count":6},{"startOffset":23370,"endOffset":23591,"count":0},{"startOffset":23647,"endOffset":23656,"count":0},{"startOffset":23676,"endOffset":23786,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":24752,"endOffset":25361,"count":34},{"startOffset":24825,"endOffset":24875,"count":1},{"startOffset":24875,"endOffset":24932,"count":33},{"startOffset":24932,"endOffset":24942,"count":0},{"startOffset":24942,"endOffset":25009,"count":33},{"startOffset":24974,"endOffset":24984,"count":0},{"startOffset":25009,"endOffset":25037,"count":33},{"startOffset":25037,"endOffset":25049,"count":0},{"startOffset":25056,"endOffset":25066,"count":33},{"startOffset":25066,"endOffset":25089,"count":0},{"startOffset":25089,"endOffset":25118,"count":33},{"startOffset":25118,"endOffset":25128,"count":0},{"startOffset":25128,"endOffset":25167,"count":33},{"startOffset":25167,"endOffset":25201,"count":0},{"startOffset":25201,"endOffset":25276,"count":33},{"startOffset":25276,"endOffset":25317,"count":0},{"startOffset":25317,"endOffset":25360,"count":33}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":32977,"endOffset":34028,"count":2},{"startOffset":33085,"endOffset":33143,"count":0},{"startOffset":33209,"endOffset":33238,"count":0},{"startOffset":33240,"endOffset":33373,"count":0},{"startOffset":33516,"endOffset":33551,"count":0},{"startOffset":33650,"endOffset":33781,"count":0},{"startOffset":33812,"endOffset":33858,"count":0},{"startOffset":33933,"endOffset":33974,"count":0}],"isBlockCoverage":true},{"functionName":"adjustOffset","ranges":[{"startOffset":34306,"endOffset":34755,"count":4},{"startOffset":34550,"endOffset":34591,"count":2},{"startOffset":34591,"endOffset":34657,"count":0},{"startOffset":34657,"endOffset":34708,"count":2},{"startOffset":34708,"endOffset":34742,"count":0},{"startOffset":34743,"endOffset":34751,"count":0}],"isBlockCoverage":true},{"functionName":"subarray","ranges":[{"startOffset":34787,"endOffset":35096,"count":2},{"startOffset":34954,"endOffset":34965,"count":0},{"startOffset":35014,"endOffset":35017,"count":0}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":35126,"endOffset":35194,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":41945,"endOffset":41980,"count":1}],"isBlockCoverage":true}]},{"scriptId":"25","url":"node:internal/buffer","functions":[{"functionName":"checkBounds","ranges":[{"startOffset":1229,"endOffset":1449,"count":2},{"startOffset":1395,"endOffset":1446,"count":0}],"isBlockCoverage":true},{"functionName":"checkInt","ranges":[{"startOffset":1453,"endOffset":2092,"count":2},{"startOffset":1550,"endOffset":2048,"count":0}],"isBlockCoverage":true},{"functionName":"writeU_Int32BE","ranges":[{"startOffset":22494,"endOffset":22821,"count":2}],"isBlockCoverage":true},{"functionName":"writeInt32BE","ranges":[{"startOffset":25230,"endOffset":25347,"count":2}],"isBlockCoverage":true},{"functionName":"FastBuffer","ranges":[{"startOffset":27324,"endOffset":27426,"count":86}],"isBlockCoverage":false},{"functionName":"markAsUntransferable","ranges":[{"startOffset":30813,"endOffset":31066,"count":3}],"isBlockCoverage":false},{"functionName":"createUnsafeBuffer","ranges":[{"startOffset":31351,"endOffset":31494,"count":18}],"isBlockCoverage":false},{"functionName":"reconnectZeroFillToggle","ranges":[{"startOffset":31755,"endOffset":31829,"count":1}],"isBlockCoverage":true}]},{"scriptId":"26","url":"node:internal/worker/js_transferable","functions":[{"functionName":"makeTransferable","ranges":[{"startOffset":1354,"endOffset":2023,"count":1},{"startOffset":1485,"endOffset":1496,"count":0},{"startOffset":1735,"endOffset":1901,"count":0}],"isBlockCoverage":true}]},{"scriptId":"27","url":"node:internal/process/per_thread","functions":[{"functionName":"exit","ranges":[{"startOffset":4950,"endOffset":6117,"count":1},{"startOffset":5153,"endOffset":5193,"count":0}],"isBlockCoverage":true},{"functionName":"buildAllowedFlags","ranges":[{"startOffset":8339,"endOffset":12566,"count":1},{"startOffset":8635,"endOffset":8934,"count":168},{"startOffset":8688,"endOffset":8929,"count":130},{"startOffset":8787,"endOffset":8922,"count":66},{"startOffset":9414,"endOffset":9845,"count":23},{"startOffset":9469,"endOffset":9840,"count":11},{"startOffset":9561,"endOffset":9630,"count":2},{"startOffset":9697,"endOffset":9766,"count":0}],"isBlockCoverage":true},{"functionName":"isAccepted","ranges":[{"startOffset":8940,"endOffset":9361,"count":29},{"startOffset":9011,"endOffset":9025,"count":28},{"startOffset":9027,"endOffset":9039,"count":2},{"startOffset":9039,"endOffset":9118,"count":27},{"startOffset":9118,"endOffset":9291,"count":2},{"startOffset":9170,"endOffset":9217,"count":1},{"startOffset":9291,"endOffset":9360,"count":25}],"isBlockCoverage":true},{"functionName":"trimLeadingDashes","ranges":[{"startOffset":9882,"endOffset":9944,"count":207}],"isBlockCoverage":true},{"functionName":"NodeEnvironmentFlagsSet","ranges":[{"startOffset":10262,"endOffset":10341,"count":1}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":10349,"endOffset":10421,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":10429,"endOffset":10505,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":10513,"endOffset":10567,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":10575,"endOffset":11407,"count":1},{"startOffset":11314,"endOffset":11406,"count":0}],"isBlockCoverage":true},{"functionName":"entries","ranges":[{"startOffset":11415,"endOffset":11584,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":11592,"endOffset":11774,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":11782,"endOffset":11845,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":11853,"endOffset":12020,"count":0}],"isBlockCoverage":false},{"functionName":"toggleTraceCategoryState","ranges":[{"startOffset":12762,"endOffset":13102,"count":1},{"startOffset":12843,"endOffset":13024,"count":0},{"startOffset":13056,"endOffset":13099,"count":0}],"isBlockCoverage":true}]},{"scriptId":"28","url":"node:internal/fs/utils","functions":[{"functionName":"assertEncoding","ranges":[{"startOffset":3858,"endOffset":4063,"count":2483},{"startOffset":3910,"endOffset":3941,"count":1085},{"startOffset":3943,"endOffset":4060,"count":0}],"isBlockCoverage":true},{"functionName":"getOptions","ranges":[{"startOffset":7858,"endOffset":8505,"count":2503},{"startOffset":7943,"endOffset":7975,"count":2483},{"startOffset":7977,"endOffset":8011,"count":20},{"startOffset":8011,"endOffset":8050,"count":2483},{"startOffset":8050,"endOffset":8172,"count":1080},{"startOffset":8172,"endOffset":8296,"count":1403},{"startOffset":8211,"endOffset":8296,"count":0},{"startOffset":8296,"endOffset":8415,"count":2483},{"startOffset":8415,"endOffset":8481,"count":0},{"startOffset":8481,"endOffset":8504,"count":2483}],"isBlockCoverage":true},{"functionName":"StatsBase","ranges":[{"startOffset":9878,"endOffset":10197,"count":5}],"isBlockCoverage":true},{"functionName":"StatsBase.isDirectory","ranges":[{"startOffset":10235,"endOffset":10294,"count":3}],"isBlockCoverage":true},{"functionName":"StatsBase.isFile","ranges":[{"startOffset":10328,"endOffset":10387,"count":2}],"isBlockCoverage":true},{"functionName":"StatsBase.isSymbolicLink","ranges":[{"startOffset":10633,"endOffset":10692,"count":2}],"isBlockCoverage":true},{"functionName":"msFromTimeSpec","ranges":[{"startOffset":11012,"endOffset":11096,"count":20}],"isBlockCoverage":true},{"functionName":"dateFromMs","ranges":[{"startOffset":11596,"endOffset":11710,"count":20}],"isBlockCoverage":true},{"functionName":"Stats","ranges":[{"startOffset":12915,"endOffset":13470,"count":5}],"isBlockCoverage":true},{"functionName":"Stats._checkModeProperty","ranges":[{"startOffset":13820,"endOffset":14056,"count":7},{"startOffset":13939,"endOffset":14008,"count":0}],"isBlockCoverage":true},{"functionName":"getStatsFromBinding","ranges":[{"startOffset":14181,"endOffset":15283,"count":5},{"startOffset":14262,"endOffset":14799,"count":0}],"isBlockCoverage":true},{"functionName":"stringToFlags","ranges":[{"startOffset":15705,"endOffset":17001,"count":1101},{"startOffset":15787,"endOffset":15845,"count":0},{"startOffset":15870,"endOffset":15898,"count":5},{"startOffset":15898,"endOffset":15953,"count":1096},{"startOffset":15959,"endOffset":15970,"count":0},{"startOffset":15993,"endOffset":16030,"count":0},{"startOffset":16036,"endOffset":16062,"count":0},{"startOffset":16068,"endOffset":16080,"count":0},{"startOffset":16103,"endOffset":16139,"count":0},{"startOffset":16147,"endOffset":16194,"count":0},{"startOffset":16200,"endOffset":16211,"count":0},{"startOffset":16234,"endOffset":16291,"count":0},{"startOffset":16299,"endOffset":16345,"count":0},{"startOffset":16351,"endOffset":16362,"count":0},{"startOffset":16385,"endOffset":16440,"count":0},{"startOffset":16448,"endOffset":16496,"count":0},{"startOffset":16502,"endOffset":16513,"count":0},{"startOffset":16536,"endOffset":16594,"count":0},{"startOffset":16600,"endOffset":16611,"count":0},{"startOffset":16634,"endOffset":16692,"count":0},{"startOffset":16700,"endOffset":16747,"count":0},{"startOffset":16753,"endOffset":16764,"count":0},{"startOffset":16787,"endOffset":16843,"count":0},{"startOffset":16849,"endOffset":16860,"count":0},{"startOffset":16883,"endOffset":16939,"count":0},{"startOffset":16944,"endOffset":17000,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18019,"endOffset":18493,"count":1},{"startOffset":18076,"endOffset":18166,"count":0},{"startOffset":18188,"endOffset":18278,"count":0},{"startOffset":18320,"endOffset":18488,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19101,"endOffset":19833,"count":2534},{"startOffset":19164,"endOffset":19186,"count":0},{"startOffset":19188,"endOffset":19297,"count":0},{"startOffset":19494,"endOffset":19514,"count":0},{"startOffset":19585,"endOffset":19654,"count":0},{"startOffset":19675,"endOffset":19832,"count":0}],"isBlockCoverage":true},{"functionName":"possiblyTransformPath","ranges":[{"startOffset":20212,"endOffset":20731,"count":1136},{"startOffset":20282,"endOffset":20712,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20776,"endOffset":20938,"count":1136}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20983,"endOffset":21112,"count":2},{"startOffset":21035,"endOffset":21056,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26985,"endOffset":27573,"count":1},{"startOffset":27110,"endOffset":27570,"count":0}],"isBlockCoverage":true}]},{"scriptId":"29","url":"node:internal/process/permission","functions":[{"functionName":"isEnabled","ranges":[{"startOffset":330,"endOffset":580,"count":5645},{"startOffset":391,"endOffset":539,"count":1}],"isBlockCoverage":true}]},{"scriptId":"30","url":"node:path","functions":[{"functionName":"isPathSeparator","ranges":[{"startOffset":1770,"endOffset":1876,"count":1832405},{"startOffset":1841,"endOffset":1872,"count":1828195}],"isBlockCoverage":true},{"functionName":"isWindowsDeviceRoot","ranges":[{"startOffset":1963,"endOffset":2136,"count":49957},{"startOffset":2036,"endOffset":2063,"count":46608},{"startOffset":2065,"endOffset":2132,"count":11483},{"startOffset":2104,"endOffset":2131,"count":8134}],"isBlockCoverage":true},{"functionName":"normalizeString","ranges":[{"startOffset":2202,"endOffset":4212,"count":23357},{"startOffset":2425,"endOffset":4194,"count":1708597},{"startOffset":2460,"endOffset":2502,"count":1685240},{"startOffset":2502,"endOffset":2597,"count":23357},{"startOffset":2547,"endOffset":2553,"count":22416},{"startOffset":2553,"endOffset":2597,"count":941},{"startOffset":2597,"endOffset":2632,"count":1686181},{"startOffset":2632,"endOffset":4090,"count":153282},{"startOffset":2665,"endOffset":2678,"count":147047},{"startOffset":2680,"endOffset":2707,"count":7815},{"startOffset":2707,"endOffset":4044,"count":145467},{"startOffset":2729,"endOffset":3793,"count":453},{"startOffset":2759,"endOffset":2785,"count":269},{"startOffset":2786,"endOffset":2861,"count":41},{"startOffset":2862,"endOffset":2937,"count":41},{"startOffset":2939,"endOffset":3648,"count":412},{"startOffset":2972,"endOffset":3462,"count":228},{"startOffset":3094,"endOffset":3173,"count":0},{"startOffset":3462,"endOffset":3637,"count":184},{"startOffset":3490,"endOffset":3637,"count":0},{"startOffset":3648,"endOffset":3784,"count":225},{"startOffset":3713,"endOffset":3731,"count":41},{"startOffset":3732,"endOffset":3738,"count":184},{"startOffset":3793,"endOffset":4044,"count":145014},{"startOffset":3841,"endOffset":3910,"count":122856},{"startOffset":3910,"endOffset":3987,"count":22158},{"startOffset":4044,"endOffset":4090,"count":153054},{"startOffset":4090,"endOffset":4189,"count":1532899},{"startOffset":4118,"endOffset":4132,"count":17375},{"startOffset":4134,"endOffset":4157,"count":2543},{"startOffset":4157,"endOffset":4189,"count":1530356}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":4964,"endOffset":9889,"count":22415},{"startOffset":5127,"endOffset":9422,"count":31265},{"startOffset":5165,"endOffset":5345,"count":31246},{"startOffset":5303,"endOffset":5336,"count":1},{"startOffset":5345,"endOffset":6310,"count":19},{"startOffset":5425,"endOffset":6310,"count":0},{"startOffset":6310,"endOffset":6534,"count":31264},{"startOffset":6534,"endOffset":6699,"count":4},{"startOffset":6699,"endOffset":8719,"count":31260},{"startOffset":6732,"endOffset":8254,"count":0},{"startOffset":8290,"endOffset":8361,"count":30123},{"startOffset":8363,"endOffset":8719,"count":22415},{"startOffset":8719,"endOffset":8752,"count":31264},{"startOffset":8752,"endOffset":9080,"count":22415},{"startOffset":8794,"endOffset":9017,"count":0},{"startOffset":9080,"endOffset":9112,"count":31264},{"startOffset":9112,"endOffset":9180,"count":4},{"startOffset":9180,"endOffset":9415,"count":31260},{"startOffset":9346,"endOffset":9374,"count":22415},{"startOffset":9376,"endOffset":9406,"count":22411},{"startOffset":9833,"endOffset":9883,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":9961,"endOffset":13124,"count":942},{"startOffset":10071,"endOffset":10082,"count":0},{"startOffset":10255,"endOffset":10412,"count":0},{"startOffset":10445,"endOffset":12177,"count":0},{"startOffset":12213,"endOffset":12281,"count":5},{"startOffset":12283,"endOffset":12619,"count":4},{"startOffset":12773,"endOffset":12784,"count":0},{"startOffset":12813,"endOffset":12827,"count":1},{"startOffset":12836,"endOffset":12847,"count":1},{"startOffset":12951,"endOffset":12964,"count":1},{"startOffset":12996,"endOffset":13051,"count":938},{"startOffset":13023,"endOffset":13036,"count":0},{"startOffset":13051,"endOffset":13097,"count":4},{"startOffset":13098,"endOffset":13118,"count":0}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":13197,"endOffset":13626,"count":1872},{"startOffset":13308,"endOffset":13321,"count":0},{"startOffset":13462,"endOffset":13497,"count":1854},{"startOffset":13498,"endOffset":13557,"count":579},{"startOffset":13558,"endOffset":13619,"count":154}],"isBlockCoverage":true},{"functionName":"join","ranges":[{"startOffset":13701,"endOffset":15911,"count":5},{"startOffset":13752,"endOffset":13763,"count":0},{"startOffset":13846,"endOffset":14075,"count":11},{"startOffset":13987,"endOffset":14012,"count":5},{"startOffset":14012,"endOffset":14059,"count":6},{"startOffset":14116,"endOffset":14127,"count":0},{"startOffset":15016,"endOffset":15479,"count":0},{"startOffset":15690,"endOffset":15723,"count":0},{"startOffset":15803,"endOffset":15860,"count":0}],"isBlockCoverage":true},{"functionName":"relative","ranges":[{"startOffset":16218,"endOffset":20101,"count":1},{"startOffset":16336,"endOffset":16346,"count":0},{"startOffset":16470,"endOffset":16480,"count":0},{"startOffset":16610,"endOffset":16620,"count":0},{"startOffset":16803,"endOffset":16831,"count":0},{"startOffset":17059,"endOffset":17085,"count":0},{"startOffset":17300,"endOffset":17326,"count":0},{"startOffset":17533,"endOffset":17557,"count":0},{"startOffset":17706,"endOffset":17713,"count":0},{"startOffset":17789,"endOffset":18031,"count":41},{"startOffset":17940,"endOffset":17946,"count":0},{"startOffset":18006,"endOffset":18024,"count":3},{"startOffset":18171,"endOffset":18236,"count":0},{"startOffset":18584,"endOffset":18789,"count":0},{"startOffset":18798,"endOffset":19343,"count":0},{"startOffset":19350,"endOffset":20100,"count":0}],"isBlockCoverage":true},{"functionName":"toNamespacedPath","ranges":[{"startOffset":20173,"endOffset":21304,"count":10909},{"startOffset":20313,"endOffset":20325,"count":0},{"startOffset":20419,"endOffset":20431,"count":0},{"startOffset":20511,"endOffset":20930,"count":0},{"startOffset":21279,"endOffset":21303,"count":0}],"isBlockCoverage":true},{"functionName":"dirname","ranges":[{"startOffset":21376,"endOffset":24011,"count":4007},{"startOffset":21484,"endOffset":21495,"count":0},{"startOffset":21616,"endOffset":21780,"count":0},{"startOffset":21843,"endOffset":23263,"count":0},{"startOffset":23464,"endOffset":23467,"count":0},{"startOffset":23597,"endOffset":23854,"count":45720},{"startOffset":23663,"endOffset":23752,"count":4006},{"startOffset":23752,"endOffset":23847,"count":41714},{"startOffset":23878,"endOffset":23958,"count":1},{"startOffset":23916,"endOffset":23927,"count":0}],"isBlockCoverage":true},{"functionName":"basename","ranges":[{"startOffset":24114,"endOffset":26969,"count":978},{"startOffset":24177,"endOffset":24207,"count":0},{"startOffset":24705,"endOffset":24725,"count":0},{"startOffset":24726,"endOffset":24757,"count":0},{"startOffset":24759,"endOffset":26325,"count":0},{"startOffset":26378,"endOffset":26871,"count":11386},{"startOffset":26444,"endOffset":26675,"count":978},{"startOffset":26675,"endOffset":26864,"count":10408},{"startOffset":26697,"endOffset":26864,"count":978},{"startOffset":26902,"endOffset":26912,"count":0}],"isBlockCoverage":true},{"functionName":"extname","ranges":[{"startOffset":27041,"endOffset":29176,"count":8},{"startOffset":27622,"endOffset":27689,"count":5},{"startOffset":27691,"endOffset":27729,"count":5},{"startOffset":27784,"endOffset":28768,"count":94},{"startOffset":27876,"endOffset":28130,"count":8},{"startOffset":28102,"endOffset":28130,"count":0},{"startOffset":28130,"endOffset":28154,"count":86},{"startOffset":28154,"endOffset":28316,"count":8},{"startOffset":28316,"endOffset":28347,"count":86},{"startOffset":28347,"endOffset":28553,"count":10},{"startOffset":28466,"endOffset":28479,"count":8},{"startOffset":28479,"endOffset":28544,"count":2},{"startOffset":28553,"endOffset":28761,"count":76},{"startOffset":28580,"endOffset":28761,"count":60},{"startOffset":29014,"endOffset":29047,"count":0},{"startOffset":29048,"endOffset":29087,"count":0},{"startOffset":29090,"endOffset":29116,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":29412,"endOffset":34318,"count":2},{"startOffset":29567,"endOffset":29578,"count":0},{"startOffset":29707,"endOffset":29971,"count":0},{"startOffset":30032,"endOffset":31247,"count":0},{"startOffset":31407,"endOffset":31570,"count":0},{"startOffset":31681,"endOffset":31854,"count":0},{"startOffset":32314,"endOffset":33292,"count":46},{"startOffset":32400,"endOffset":32654,"count":2},{"startOffset":32626,"endOffset":32654,"count":0},{"startOffset":32654,"endOffset":32678,"count":44},{"startOffset":32678,"endOffset":32840,"count":2},{"startOffset":32840,"endOffset":32871,"count":44},{"startOffset":32871,"endOffset":33077,"count":0},{"startOffset":33077,"endOffset":33285,"count":44},{"startOffset":33104,"endOffset":33285,"count":0},{"startOffset":33345,"endOffset":33444,"count":0},{"startOffset":33445,"endOffset":33626,"count":0},{"startOffset":33713,"endOffset":33924,"count":0},{"startOffset":34257,"endOffset":34294,"count":0}],"isBlockCoverage":true}]},{"scriptId":"32","url":"node:internal/url","functions":[{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3639,"endOffset":4469,"count":1231}],"isBlockCoverage":false},{"functionName":"get hasPort","ranges":[{"startOffset":4237,"endOffset":4304,"count":5}],"isBlockCoverage":true},{"functionName":"get hasSearch","ranges":[{"startOffset":4310,"endOffset":4387,"count":1121}],"isBlockCoverage":true},{"functionName":"get hasHash","ranges":[{"startOffset":4393,"endOffset":4466,"count":1116}],"isBlockCoverage":true},{"functionName":"isURL","ranges":[{"startOffset":22482,"endOffset":22609,"count":2912},{"startOffset":22534,"endOffset":22550,"count":386},{"startOffset":22551,"endOffset":22577,"count":386},{"startOffset":22578,"endOffset":22604,"count":386}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":22613,"endOffset":33593,"count":1231}],"isBlockCoverage":false},{"functionName":"setURLSearchParamsModified","ranges":[{"startOffset":22749,"endOffset":23246,"count":0}],"isBlockCoverage":false},{"functionName":"URL","ranges":[{"startOffset":23258,"endOffset":23587,"count":1231},{"startOffset":23330,"endOffset":23380,"count":0},{"startOffset":23490,"endOffset":23523,"count":626}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23593,"endOffset":24338,"count":0}],"isBlockCoverage":false},{"functionName":"#getSearchFromContext","ranges":[{"startOffset":24344,"endOffset":24684,"count":40},{"startOffset":24415,"endOffset":24683,"count":0}],"isBlockCoverage":true},{"functionName":"#getSearchFromParams","ranges":[{"startOffset":24690,"endOffset":24804,"count":0}],"isBlockCoverage":false},{"functionName":"#ensureSearchParamsUpdated","ranges":[{"startOffset":24810,"endOffset":25256,"count":1257},{"startOffset":25081,"endOffset":25251,"count":0}],"isBlockCoverage":true},{"functionName":"#updateContext","ranges":[{"startOffset":25511,"endOffset":27199,"count":1161},{"startOffset":25621,"endOffset":25642,"count":35},{"startOffset":25643,"endOffset":25742,"count":0},{"startOffset":26464,"endOffset":27194,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":27205,"endOffset":27394,"count":401}],"isBlockCoverage":true},{"functionName":"get href","ranges":[{"startOffset":27400,"endOffset":27589,"count":816}],"isBlockCoverage":true},{"functionName":"set href","ranges":[{"startOffset":27595,"endOffset":27819,"count":0}],"isBlockCoverage":false},{"functionName":"get origin","ranges":[{"startOffset":27840,"endOffset":28738,"count":0}],"isBlockCoverage":false},{"functionName":"get protocol","ranges":[{"startOffset":28744,"endOffset":28850,"count":1101}],"isBlockCoverage":true},{"functionName":"set protocol","ranges":[{"startOffset":28856,"endOffset":29034,"count":0}],"isBlockCoverage":false},{"functionName":"get username","ranges":[{"startOffset":29040,"endOffset":29272,"count":5},{"startOffset":29127,"endOffset":29251,"count":0}],"isBlockCoverage":true},{"functionName":"set username","ranges":[{"startOffset":29278,"endOffset":29456,"count":0}],"isBlockCoverage":false},{"functionName":"get password","ranges":[{"startOffset":29462,"endOffset":29690,"count":5},{"startOffset":29547,"endOffset":29669,"count":0}],"isBlockCoverage":true},{"functionName":"set password","ranges":[{"startOffset":29696,"endOffset":29874,"count":0}],"isBlockCoverage":false},{"functionName":"get host","ranges":[{"startOffset":29880,"endOffset":30322,"count":5},{"startOffset":29986,"endOffset":30013,"count":0},{"startOffset":30197,"endOffset":30223,"count":0}],"isBlockCoverage":true},{"functionName":"set host","ranges":[{"startOffset":30328,"endOffset":30498,"count":0}],"isBlockCoverage":false},{"functionName":"get hostname","ranges":[{"startOffset":30504,"endOffset":30793,"count":477},{"startOffset":30673,"endOffset":30700,"count":0}],"isBlockCoverage":true},{"functionName":"set hostname","ranges":[{"startOffset":30799,"endOffset":30977,"count":0}],"isBlockCoverage":false},{"functionName":"get port","ranges":[{"startOffset":30983,"endOffset":31096,"count":5},{"startOffset":31075,"endOffset":31095,"count":0}],"isBlockCoverage":true},{"functionName":"set port","ranges":[{"startOffset":31102,"endOffset":31272,"count":0}],"isBlockCoverage":false},{"functionName":"get pathname","ranges":[{"startOffset":31278,"endOffset":31578,"count":1081},{"startOffset":31346,"endOffset":31398,"count":0},{"startOffset":31431,"endOffset":31481,"count":0}],"isBlockCoverage":true},{"functionName":"set pathname","ranges":[{"startOffset":31584,"endOffset":31762,"count":0}],"isBlockCoverage":false},{"functionName":"get search","ranges":[{"startOffset":31768,"endOffset":31969,"count":40}],"isBlockCoverage":true},{"functionName":"set search","ranges":[{"startOffset":31975,"endOffset":32184,"count":35}],"isBlockCoverage":true},{"functionName":"get searchParams","ranges":[{"startOffset":32205,"endOffset":32571,"count":0}],"isBlockCoverage":false},{"functionName":"get hash","ranges":[{"startOffset":32577,"endOffset":32797,"count":35},{"startOffset":32622,"endOffset":32684,"count":0},{"startOffset":32712,"endOffset":32796,"count":0}],"isBlockCoverage":true},{"functionName":"set hash","ranges":[{"startOffset":32803,"endOffset":32973,"count":35}],"isBlockCoverage":true},{"functionName":"toJSON","ranges":[{"startOffset":32979,"endOffset":33166,"count":0}],"isBlockCoverage":false},{"functionName":"canParse","ranges":[{"startOffset":33179,"endOffset":33590,"count":0}],"isBlockCoverage":false},{"functionName":"getPathFromURLWin32","ranges":[{"startOffset":41582,"endOffset":43112,"count":472},{"startOffset":41729,"endOffset":42108,"count":37177},{"startOffset":41761,"endOffset":42103,"count":0},{"startOffset":42266,"endOffset":42712,"count":0},{"startOffset":42996,"endOffset":43064,"count":0}],"isBlockCoverage":true},{"functionName":"fileURLToPath","ranges":[{"startOffset":43657,"endOffset":44004,"count":472},{"startOffset":43726,"endOffset":43747,"count":114},{"startOffset":43747,"endOffset":43843,"count":358},{"startOffset":43779,"endOffset":43843,"count":0},{"startOffset":43883,"endOffset":43924,"count":0},{"startOffset":43973,"endOffset":44000,"count":0}],"isBlockCoverage":true},{"functionName":"encodePathChars","ranges":[{"startOffset":44838,"endOffset":45627,"count":236},{"startOffset":44933,"endOffset":45004,"count":0},{"startOffset":45080,"endOffset":45128,"count":0},{"startOffset":45135,"endOffset":45208,"count":0},{"startOffset":45268,"endOffset":45339,"count":0},{"startOffset":45399,"endOffset":45477,"count":0},{"startOffset":45537,"endOffset":45604,"count":0}],"isBlockCoverage":true},{"functionName":"pathToFileURL","ranges":[{"startOffset":45631,"endOffset":47654,"count":236},{"startOffset":45731,"endOffset":46519,"count":0},{"startOffset":46870,"endOffset":46922,"count":0},{"startOffset":46929,"endOffset":46945,"count":0},{"startOffset":47411,"endOffset":47483,"count":0},{"startOffset":47542,"endOffset":47610,"count":0}],"isBlockCoverage":true},{"functionName":"toPathIfFileURL","ranges":[{"startOffset":47658,"endOffset":47799,"count":2534},{"startOffset":47735,"endOffset":47756,"count":2506},{"startOffset":47756,"endOffset":47798,"count":28}],"isBlockCoverage":true}]},{"scriptId":"35","url":"node:internal/process/task_queues","functions":[{"functionName":"setHasTickScheduled","ranges":[{"startOffset":1109,"endOffset":1197,"count":130},{"startOffset":1186,"endOffset":1189,"count":87},{"startOffset":1190,"endOffset":1193,"count":43}],"isBlockCoverage":true},{"functionName":"processTicksAndRejections","ranges":[{"startOffset":1511,"endOffset":2522,"count":43},{"startOffset":1569,"endOffset":2399,"count":57},{"startOffset":1616,"endOffset":2372,"count":154},{"startOffset":1823,"endOffset":1858,"count":7},{"startOffset":1858,"endOffset":2241,"count":147},{"startOffset":1948,"endOffset":1981,"count":65},{"startOffset":1995,"endOffset":2037,"count":67},{"startOffset":2051,"endOffset":2102,"count":15},{"startOffset":2116,"endOffset":2176,"count":0},{"startOffset":2190,"endOffset":2217,"count":0},{"startOffset":2306,"endOffset":2327,"count":0}],"isBlockCoverage":true},{"functionName":"nextTick","ranges":[{"startOffset":2670,"endOffset":3575,"count":154},{"startOffset":2775,"endOffset":2782,"count":0},{"startOffset":2834,"endOffset":2848,"count":7},{"startOffset":2854,"endOffset":2891,"count":65},{"startOffset":2897,"endOffset":2948,"count":67},{"startOffset":2954,"endOffset":3019,"count":15},{"startOffset":3025,"endOffset":3172,"count":0},{"startOffset":3204,"endOffset":3230,"count":87},{"startOffset":3485,"endOffset":3545,"count":0}],"isBlockCoverage":true}]},{"scriptId":"36","url":"node:internal/process/promises","functions":[{"functionName":"setHasRejectionToWarn","ranges":[{"startOffset":2232,"endOffset":2324,"count":44},{"startOffset":2313,"endOffset":2316,"count":1},{"startOffset":2317,"endOffset":2320,"count":43}],"isBlockCoverage":true},{"functionName":"getUnhandledRejectionsMode","ranges":[{"startOffset":2557,"endOffset":3106,"count":1},{"startOffset":2716,"endOffset":2770,"count":0},{"startOffset":2776,"endOffset":2834,"count":0},{"startOffset":2840,"endOffset":2896,"count":0},{"startOffset":2902,"endOffset":2956,"count":0},{"startOffset":2962,"endOffset":3043,"count":0}],"isBlockCoverage":true},{"functionName":"promiseRejectHandler","ranges":[{"startOffset":3110,"endOffset":3697,"count":2},{"startOffset":3211,"endOffset":3278,"count":1},{"startOffset":3303,"endOffset":3394,"count":1},{"startOffset":3400,"endOffset":3485,"count":1},{"startOffset":3491,"endOffset":3588,"count":0},{"startOffset":3594,"endOffset":3689,"count":0}],"isBlockCoverage":true},{"functionName":"unhandledRejection","ranges":[{"startOffset":4141,"endOffset":4719,"count":1}],"isBlockCoverage":true},{"functionName":"emit","ranges":[{"startOffset":4204,"endOffset":4403,"count":0}],"isBlockCoverage":false},{"functionName":"handledRejection","ranges":[{"startOffset":4723,"endOffset":5573,"count":1},{"startOffset":4930,"endOffset":5449,"count":0},{"startOffset":5496,"endOffset":5534,"count":0},{"startOffset":5541,"endOffset":5570,"count":0}],"isBlockCoverage":true},{"functionName":"processPromiseRejections","ranges":[{"startOffset":6892,"endOffset":10162,"count":43},{"startOffset":7053,"endOffset":7237,"count":0},{"startOffset":7305,"endOffset":10063,"count":1},{"startOffset":7500,"endOffset":8791,"count":0},{"startOffset":8801,"endOffset":8911,"count":0},{"startOffset":8921,"endOffset":9090,"count":0},{"startOffset":9100,"endOffset":9545,"count":0},{"startOffset":9555,"endOffset":9840,"count":0},{"startOffset":9857,"endOffset":10063,"count":0}],"isBlockCoverage":true}]},{"scriptId":"37","url":"node:internal/fixed_queue","functions":[{"functionName":"isEmpty","ranges":[{"startOffset":3143,"endOffset":3197,"count":422}],"isBlockCoverage":true},{"functionName":"isFull","ranges":[{"startOffset":3203,"endOffset":3272,"count":154}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3278,"endOffset":3368,"count":154}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3374,"endOffset":3596,"count":211},{"startOffset":3470,"endOffset":3482,"count":57},{"startOffset":3482,"endOffset":3595,"count":154}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":3724,"endOffset":3773,"count":211}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3779,"endOffset":4050,"count":154},{"startOffset":3821,"endOffset":4018,"count":0}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":4056,"endOffset":4320,"count":211},{"startOffset":4151,"endOffset":4172,"count":144},{"startOffset":4174,"endOffset":4297,"count":0}],"isBlockCoverage":true}]},{"scriptId":"38","url":"node:async_hooks","functions":[{"functionName":"AsyncResource","ranges":[{"startOffset":4726,"endOffset":5958,"count":2},{"startOffset":5008,"endOffset":5029,"count":0},{"startOffset":5267,"endOffset":5348,"count":0},{"startOffset":5506,"endOffset":5675,"count":0},{"startOffset":5733,"endOffset":5953,"count":0}],"isBlockCoverage":true},{"functionName":"runInAsyncScope","ranges":[{"startOffset":5964,"endOffset":6293,"count":2}],"isBlockCoverage":true}]},{"scriptId":"39","url":"node:timers","functions":[{"functionName":"","ranges":[{"startOffset":1904,"endOffset":1931,"count":1}],"isBlockCoverage":true},{"functionName":"unenroll","ranges":[{"startOffset":2460,"endOffset":3679,"count":12},{"startOffset":2515,"endOffset":2522,"count":0},{"startOffset":2587,"endOffset":2633,"count":0},{"startOffset":2727,"endOffset":2765,"count":0},{"startOffset":2772,"endOffset":2807,"count":0},{"startOffset":3210,"endOffset":3568,"count":7}],"isBlockCoverage":true},{"functionName":"setTimeout","ranges":[{"startOffset":4408,"endOffset":5093,"count":7},{"startOffset":4581,"endOffset":4588,"count":0},{"startOffset":4621,"endOffset":4664,"count":0},{"startOffset":4670,"endOffset":4719,"count":0},{"startOffset":4725,"endOffset":4952,"count":0}],"isBlockCoverage":true},{"functionName":"clearTimeout","ranges":[{"startOffset":5430,"endOffset":5809,"count":70},{"startOffset":5474,"endOffset":5493,"count":12},{"startOffset":5495,"endOffset":5566,"count":12},{"startOffset":5566,"endOffset":5628,"count":58},{"startOffset":5630,"endOffset":5806,"count":0}],"isBlockCoverage":true},{"functionName":"setInterval","ranges":[{"startOffset":6058,"endOffset":6745,"count":6},{"startOffset":6233,"endOffset":6240,"count":0},{"startOffset":6273,"endOffset":6316,"count":0},{"startOffset":6322,"endOffset":6371,"count":0},{"startOffset":6377,"endOffset":6604,"count":0}],"isBlockCoverage":true},{"functionName":"clearInterval","ranges":[{"startOffset":6849,"endOffset":7152,"count":5}],"isBlockCoverage":true},{"functionName":"setImmediate","ranges":[{"startOffset":7826,"endOffset":8403,"count":53},{"startOffset":8021,"endOffset":8064,"count":0},{"startOffset":8070,"endOffset":8119,"count":0},{"startOffset":8125,"endOffset":8352,"count":0}],"isBlockCoverage":true}]},{"scriptId":"40","url":"node:internal/process/execution","functions":[{"functionName":"tryGetCwd","ranges":[{"startOffset":931,"endOffset":1270,"count":1},{"startOffset":995,"endOffset":1267,"count":0}],"isBlockCoverage":true}]},{"scriptId":"41","url":"node:internal/vm","functions":[{"functionName":"isContext","ranges":[{"startOffset":848,"endOffset":946,"count":3}],"isBlockCoverage":true},{"functionName":"getHostDefinedOptionId","ranges":[{"startOffset":1414,"endOffset":2767,"count":2},{"startOffset":1627,"endOffset":1670,"count":0},{"startOffset":1719,"endOffset":1940,"count":0},{"startOffset":2219,"endOffset":2766,"count":0}],"isBlockCoverage":true},{"functionName":"registerImportModuleDynamically","ranges":[{"startOffset":3079,"endOffset":3781,"count":958},{"startOffset":3315,"endOffset":3391,"count":956},{"startOffset":3392,"endOffset":3464,"count":956},{"startOffset":3485,"endOffset":3780,"count":0}],"isBlockCoverage":true},{"functionName":"internalCompileFunction","ranges":[{"startOffset":5213,"endOffset":6075,"count":956},{"startOffset":5676,"endOffset":5751,"count":0},{"startOffset":5780,"endOffset":5839,"count":0},{"startOffset":5897,"endOffset":5972,"count":0}],"isBlockCoverage":true}]},{"scriptId":"43","url":"node:internal/source_map/source_map_cache","functions":[{"functionName":"","ranges":[{"startOffset":372,"endOffset":399,"count":1}],"isBlockCoverage":true},{"functionName":"getSourceMapsEnabled","ranges":[{"startOffset":1727,"endOffset":1792,"count":132}],"isBlockCoverage":true},{"functionName":"setSourceMapsEnabled","ranges":[{"startOffset":1796,"endOffset":2398,"count":1},{"startOffset":1908,"endOffset":2096,"count":0}],"isBlockCoverage":true},{"functionName":"extractSourceURLMagicComment","ranges":[{"startOffset":2402,"endOffset":3018,"count":132},{"startOffset":2709,"endOffset":2744,"count":0},{"startOffset":2800,"endOffset":2938,"count":0},{"startOffset":2940,"endOffset":3017,"count":0}],"isBlockCoverage":true},{"functionName":"maybeCacheSourceMap","ranges":[{"startOffset":3481,"endOffset":5425,"count":132},{"startOffset":3685,"endOffset":3705,"count":0},{"startOffset":3708,"endOffset":3715,"count":0},{"startOffset":3866,"endOffset":3965,"count":0},{"startOffset":4003,"endOffset":4071,"count":0},{"startOffset":4163,"endOffset":4182,"count":0},{"startOffset":4488,"endOffset":4502,"count":0},{"startOffset":4530,"endOffset":4724,"count":0},{"startOffset":4753,"endOffset":5031,"count":0},{"startOffset":5361,"endOffset":5417,"count":0}],"isBlockCoverage":true},{"functionName":"dataFromUrl","ranges":[{"startOffset":5976,"endOffset":6512,"count":132},{"startOffset":6117,"endOffset":6193,"count":32},{"startOffset":6201,"endOffset":6283,"count":0},{"startOffset":6296,"endOffset":6509,"count":100}],"isBlockCoverage":true},{"functionName":"lineLengths","ranges":[{"startOffset":6707,"endOffset":7521,"count":132},{"startOffset":6882,"endOffset":7457,"count":1126853},{"startOffset":7265,"endOffset":7288,"count":1104293},{"startOffset":7289,"endOffset":7312,"count":1104293},{"startOffset":7314,"endOffset":7452,"count":22560}],"isBlockCoverage":true},{"functionName":"sourceMapFromFile","ranges":[{"startOffset":7527,"endOffset":7817,"count":100},{"startOffset":7761,"endOffset":7814,"count":0}],"isBlockCoverage":true},{"functionName":"sourceMapFromDataUrl","ranges":[{"startOffset":7915,"endOffset":8605,"count":32},{"startOffset":8325,"endOffset":8331,"count":0},{"startOffset":8457,"endOffset":8516,"count":0},{"startOffset":8521,"endOffset":8602,"count":0}],"isBlockCoverage":true},{"functionName":"sourcesToAbsolute","ranges":[{"startOffset":8883,"endOffset":9299,"count":132}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8962,"endOffset":9151,"count":132},{"startOffset":9053,"endOffset":9103,"count":0}],"isBlockCoverage":true}]},{"scriptId":"44","url":"node:internal/bootstrap/web/exposed-wildcard","functions":[{"functionName":"","ranges":[{"startOffset":932,"endOffset":1165,"count":1}],"isBlockCoverage":true}]},{"scriptId":"46","url":"node:internal/console/constructor","functions":[{"functionName":"lazyUtilColors","ranges":[{"startOffset":1957,"endOffset":2060,"count":17}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":6036,"endOffset":6706,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6253,"endOffset":6351,"count":51},{"startOffset":6287,"endOffset":6310,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":6364,"endOffset":6394,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6530,"endOffset":6632,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6645,"endOffset":6675,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":8344,"endOffset":9834,"count":17},{"startOffset":8575,"endOffset":8589,"count":0},{"startOffset":8665,"endOffset":8691,"count":0},{"startOffset":8732,"endOffset":8932,"count":0},{"startOffset":8993,"endOffset":9021,"count":0},{"startOffset":9471,"endOffset":9761,"count":0}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":9934,"endOffset":10359,"count":17},{"startOffset":10155,"endOffset":10281,"count":0},{"startOffset":10327,"endOffset":10351,"count":0}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":10457,"endOffset":10641,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11087,"endOffset":11921,"count":17},{"startOffset":11362,"endOffset":11380,"count":0},{"startOffset":11404,"endOffset":11442,"count":0},{"startOffset":11444,"endOffset":11916,"count":0}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":11957,"endOffset":12046,"count":17}],"isBlockCoverage":true},{"functionName":"initializeGlobalConsole","ranges":[{"startOffset":21114,"endOffset":22133,"count":1},{"startOffset":21444,"endOffset":22132,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22023,"endOffset":22128,"count":0}],"isBlockCoverage":false}]},{"scriptId":"48","url":"node:internal/event_target","functions":[{"functionName":"initEventTarget","ranges":[{"startOffset":13954,"endOffset":14178,"count":1}],"isBlockCoverage":true},{"functionName":"defineEventHandler","ranges":[{"startOffset":30551,"endOffset":32062,"count":6}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":30714,"endOffset":30853,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":30958,"endOffset":31816,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitterMixin","ranges":[{"startOffset":32092,"endOffset":32800,"count":1},{"startOffset":32534,"endOffset":32700,"count":18}],"isBlockCoverage":true},{"functionName":"MixedEventEmitter","ranges":[{"startOffset":32163,"endOffset":32308,"count":15}],"isBlockCoverage":true}]},{"scriptId":"49","url":"node:util","functions":[{"functionName":"inherits","ranges":[{"startOffset":6662,"endOffset":7319,"count":94},{"startOffset":6750,"endOffset":6807,"count":0},{"startOffset":6869,"endOffset":6936,"count":0},{"startOffset":6981,"endOffset":7114,"count":0}],"isBlockCoverage":true}]},{"scriptId":"53","url":"node:internal/bootstrap/switches/is_main_thread","functions":[{"functionName":"createWritableStdioStream","ranges":[{"startOffset":1470,"endOffset":3134,"count":2},{"startOffset":1773,"endOffset":1972,"count":0},{"startOffset":1980,"endOffset":1992,"count":0},{"startOffset":1998,"endOffset":2733,"count":0},{"startOffset":2741,"endOffset":3004,"count":0}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":2936,"endOffset":2985,"count":0}],"isBlockCoverage":false},{"functionName":"addCleanup","ranges":[{"startOffset":3780,"endOffset":3875,"count":2},{"startOffset":3835,"endOffset":3872,"count":0}],"isBlockCoverage":true},{"functionName":"getStdout","ranges":[{"startOffset":3879,"endOffset":4591,"count":16},{"startOffset":3917,"endOffset":3931,"count":15},{"startOffset":3931,"endOffset":4590,"count":1}],"isBlockCoverage":true},{"functionName":"cleanupStdout","ranges":[{"startOffset":4248,"endOffset":4431,"count":0}],"isBlockCoverage":false},{"functionName":"getStderr","ranges":[{"startOffset":4595,"endOffset":5305,"count":39},{"startOffset":4633,"endOffset":4647,"count":38},{"startOffset":4647,"endOffset":5304,"count":1}],"isBlockCoverage":true},{"functionName":"cleanupStderr","ranges":[{"startOffset":4962,"endOffset":5145,"count":0}],"isBlockCoverage":false}]},{"scriptId":"54","url":"node:internal/v8/startup_snapshot","functions":[{"functionName":"isBuildingSnapshot","ranges":[{"startOffset":453,"endOffset":526,"count":8}],"isBlockCoverage":false},{"functionName":"runDeserializeCallbacks","ranges":[{"startOffset":869,"endOffset":1047,"count":1},{"startOffset":949,"endOffset":1044,"count":0}],"isBlockCoverage":true}]},{"scriptId":"55","url":"node:internal/process/signal","functions":[{"functionName":"isSignal","ranges":[{"startOffset":254,"endOffset":352,"count":5}],"isBlockCoverage":false},{"functionName":"startListeningIfSignal","ranges":[{"startOffset":419,"endOffset":948,"count":5}],"isBlockCoverage":false}]},{"scriptId":"56","url":"node:fs","functions":[{"functionName":"isFileType","ranges":[{"startOffset":5478,"endOffset":5745,"count":13044},{"startOffset":5682,"endOffset":5702,"count":1469}],"isBlockCoverage":true},{"functionName":"existsSync","ranges":[{"startOffset":7918,"endOffset":8097,"count":2},{"startOffset":7996,"endOffset":8027,"count":0}],"isBlockCoverage":true},{"functionName":"tryStatSync","ranges":[{"startOffset":10823,"endOffset":11061,"count":1},{"startOffset":10968,"endOffset":10980,"count":0},{"startOffset":10982,"endOffset":11041,"count":0}],"isBlockCoverage":true},{"functionName":"tryCreateBuffer","ranges":[{"startOffset":11065,"endOffset":11389,"count":1},{"startOffset":11187,"endOffset":11241,"count":0},{"startOffset":11332,"endOffset":11344,"count":0},{"startOffset":11346,"endOffset":11363,"count":0}],"isBlockCoverage":true},{"functionName":"tryReadSync","ranges":[{"startOffset":11393,"endOffset":11658,"count":1},{"startOffset":11598,"endOffset":11610,"count":0},{"startOffset":11612,"endOffset":11629,"count":0}],"isBlockCoverage":true},{"functionName":"readFileSync","ranges":[{"startOffset":11893,"endOffset":13589,"count":1086},{"startOffset":12018,"endOffset":12049,"count":5},{"startOffset":12051,"endOffset":12227,"count":1085},{"startOffset":12227,"endOffset":12314,"count":1},{"startOffset":12314,"endOffset":12320,"count":0},{"startOffset":12321,"endOffset":12361,"count":1},{"startOffset":12452,"endOffset":12462,"count":1},{"startOffset":12463,"endOffset":12466,"count":0},{"startOffset":12601,"endOffset":12626,"count":0},{"startOffset":12626,"endOffset":12889,"count":1},{"startOffset":12889,"endOffset":13269,"count":0},{"startOffset":13269,"endOffset":13334,"count":1},{"startOffset":13334,"endOffset":13433,"count":0},{"startOffset":13433,"endOffset":13497,"count":1},{"startOffset":13455,"endOffset":13497,"count":0},{"startOffset":13497,"endOffset":13525,"count":1},{"startOffset":13525,"endOffset":13568,"count":0},{"startOffset":13568,"endOffset":13588,"count":1}],"isBlockCoverage":true},{"functionName":"closeSync","ranges":[{"startOffset":14149,"endOffset":14214,"count":1}],"isBlockCoverage":true},{"functionName":"openSync","ranges":[{"startOffset":15250,"endOffset":15465,"count":1}],"isBlockCoverage":true},{"functionName":"readSync","ranges":[{"startOffset":19058,"endOffset":20128,"count":1},{"startOffset":19286,"endOffset":19562,"count":0},{"startOffset":19594,"endOffset":19617,"count":0},{"startOffset":19714,"endOffset":19735,"count":0},{"startOffset":19770,"endOffset":19903,"count":0}],"isBlockCoverage":true},{"functionName":"readdirSync","ranges":[{"startOffset":40045,"endOffset":40571,"count":4},{"startOffset":40185,"endOffset":40253,"count":0},{"startOffset":40282,"endOffset":40337,"count":0},{"startOffset":40532,"endOffset":40558,"count":0}],"isBlockCoverage":true},{"functionName":"lstatSync","ranges":[{"startOffset":43661,"endOffset":44007,"count":2},{"startOffset":43947,"endOffset":43966,"count":0}],"isBlockCoverage":true},{"functionName":"statSync","ranges":[{"startOffset":44234,"endOffset":44586,"count":27},{"startOffset":44516,"endOffset":44545,"count":0},{"startOffset":44545,"endOffset":44585,"count":3}],"isBlockCoverage":true},{"functionName":"splitRoot","ranges":[{"startOffset":70771,"endOffset":70869,"count":1006}],"isBlockCoverage":true},{"functionName":"encodeRealpathResult","ranges":[{"startOffset":71120,"endOffset":71415,"count":1006},{"startOffset":71206,"endOffset":71236,"count":0},{"startOffset":71257,"endOffset":71414,"count":0}],"isBlockCoverage":true},{"functionName":"nextPart","ranges":[{"startOffset":71543,"endOffset":71811,"count":7256},{"startOffset":71600,"endOffset":71790,"count":80258},{"startOffset":71735,"endOffset":71763,"count":74008},{"startOffset":71774,"endOffset":71783,"count":6250},{"startOffset":71790,"endOffset":71810,"count":1006}],"isBlockCoverage":true},{"functionName":"realpathSync","ranges":[{"startOffset":72097,"endOffset":76045,"count":1398},{"startOffset":72224,"endOffset":72244,"count":0},{"startOffset":72411,"endOffset":72448,"count":392},{"startOffset":72448,"endOffset":73226,"count":1006},{"startOffset":73172,"endOffset":73195,"count":0},{"startOffset":73226,"endOffset":73368,"count":1006},{"startOffset":73368,"endOffset":75968,"count":7256},{"startOffset":73484,"endOffset":73620,"count":1006},{"startOffset":73620,"endOffset":73782,"count":6250},{"startOffset":73902,"endOffset":74045,"count":5787},{"startOffset":73995,"endOffset":74021,"count":0},{"startOffset":74045,"endOffset":74114,"count":1469},{"startOffset":74152,"endOffset":74203,"count":0},{"startOffset":74203,"endOffset":75428,"count":1469},{"startOffset":74505,"endOffset":74532,"count":0},{"startOffset":74667,"endOffset":75346,"count":0},{"startOffset":75391,"endOffset":75421,"count":0},{"startOffset":75428,"endOffset":75753,"count":0},{"startOffset":75755,"endOffset":75963,"count":0},{"startOffset":75968,"endOffset":75984,"count":1006}],"isBlockCoverage":true},{"functionName":"lazyLoadStreams","ranges":[{"startOffset":84616,"endOffset":84813,"count":1}],"isBlockCoverage":true},{"functionName":"get ReadStream","ranges":[{"startOffset":87293,"endOffset":87364,"count":1}],"isBlockCoverage":true}]},{"scriptId":"57","url":"node:internal/blob","functions":[{"functionName":"Blob","ranges":[{"startOffset":3295,"endOffset":4444,"count":1},{"startOffset":3457,"endOffset":3538,"count":0},{"startOffset":3745,"endOffset":3768,"count":0},{"startOffset":3777,"endOffset":3837,"count":0},{"startOffset":4067,"endOffset":4110,"count":0},{"startOffset":4299,"endOffset":4310,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3902,"endOffset":4025,"count":0}],"isBlockCoverage":false}]},{"scriptId":"58","url":"node:internal/encoding","functions":[{"functionName":"validateDecoder","ranges":[{"startOffset":1538,"endOffset":1666,"count":15},{"startOffset":1621,"endOffset":1663,"count":0}],"isBlockCoverage":true},{"functionName":"getEncodingFromLabel","ranges":[{"startOffset":9726,"endOffset":9909,"count":3},{"startOffset":9839,"endOffset":9908,"count":0}],"isBlockCoverage":true},{"functionName":"TextEncoder","ranges":[{"startOffset":9936,"endOffset":9984,"count":7}],"isBlockCoverage":false},{"functionName":"TextDecoder","ranges":[{"startOffset":11672,"endOffset":12581,"count":3},{"startOffset":11934,"endOffset":11981,"count":0},{"startOffset":12069,"endOffset":12092,"count":0},{"startOffset":12134,"endOffset":12162,"count":0},{"startOffset":12529,"endOffset":12574,"count":0}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":12868,"endOffset":13417,"count":15},{"startOffset":13110,"endOffset":13416,"count":0}],"isBlockCoverage":true}]},{"scriptId":"60","url":"node:internal/webstreams/util","functions":[{"functionName":"isBrandCheck","ranges":[{"startOffset":2696,"endOffset":2866,"count":10}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2737,"endOffset":2862,"count":0}],"isBlockCoverage":false}]},{"scriptId":"61","url":"node:url","functions":[{"functionName":"Url","ranges":[{"startOffset":2217,"endOffset":2506,"count":21}],"isBlockCoverage":true},{"functionName":"urlParse","ranges":[{"startOffset":3555,"endOffset":4177,"count":8},{"startOffset":3684,"endOffset":4016,"count":0},{"startOffset":4046,"endOffset":4057,"count":0}],"isBlockCoverage":true},{"functionName":"isIpv6Hostname","ranges":[{"startOffset":4181,"endOffset":4410,"count":5},{"startOffset":4302,"endOffset":4401,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":5249,"endOffset":15656,"count":8},{"startOffset":5733,"endOffset":6842,"count":264},{"startOffset":6003,"endOffset":6075,"count":7},{"startOffset":6031,"endOffset":6040,"count":0},{"startOffset":6075,"endOffset":6230,"count":257},{"startOffset":6091,"endOffset":6170,"count":0},{"startOffset":6186,"endOffset":6230,"count":0},{"startOffset":6357,"endOffset":6413,"count":0},{"startOffset":6423,"endOffset":6465,"count":0},{"startOffset":6500,"endOffset":6567,"count":0},{"startOffset":6577,"endOffset":6748,"count":3},{"startOffset":6764,"endOffset":6837,"count":0},{"startOffset":6943,"endOffset":7556,"count":7},{"startOffset":6973,"endOffset":7215,"count":6},{"startOffset":7094,"endOffset":7144,"count":0},{"startOffset":7153,"endOffset":7208,"count":0},{"startOffset":7215,"endOffset":7551,"count":1},{"startOffset":7384,"endOffset":7551,"count":0},{"startOffset":7585,"endOffset":7596,"count":2},{"startOffset":7597,"endOffset":7606,"count":2},{"startOffset":7608,"endOffset":8193,"count":2},{"startOffset":7714,"endOffset":8188,"count":0},{"startOffset":8272,"endOffset":8411,"count":5},{"startOffset":8676,"endOffset":8684,"count":2},{"startOffset":8685,"endOffset":8710,"count":0},{"startOffset":8771,"endOffset":8830,"count":5},{"startOffset":8849,"endOffset":8896,"count":4},{"startOffset":8898,"endOffset":8963,"count":4},{"startOffset":9031,"endOffset":9072,"count":4},{"startOffset":9041,"endOffset":9071,"count":1},{"startOffset":9075,"endOffset":13753,"count":5},{"startOffset":9610,"endOffset":11083,"count":43},{"startOffset":9658,"endOffset":9672,"count":0},{"startOffset":9682,"endOffset":9702,"count":0},{"startOffset":9712,"endOffset":9921,"count":0},{"startOffset":9931,"endOffset":9947,"count":0},{"startOffset":9957,"endOffset":9980,"count":0},{"startOffset":9990,"endOffset":10008,"count":0},{"startOffset":10018,"endOffset":10041,"count":0},{"startOffset":10051,"endOffset":10071,"count":0},{"startOffset":10081,"endOffset":10110,"count":0},{"startOffset":10120,"endOffset":10150,"count":0},{"startOffset":10160,"endOffset":10185,"count":0},{"startOffset":10195,"endOffset":10223,"count":0},{"startOffset":10233,"endOffset":10256,"count":0},{"startOffset":10266,"endOffset":10295,"count":0},{"startOffset":10305,"endOffset":10329,"count":0},{"startOffset":10339,"endOffset":10525,"count":0},{"startOffset":10535,"endOffset":10550,"count":0},{"startOffset":10560,"endOffset":10584,"count":3},{"startOffset":10594,"endOffset":10785,"count":3},{"startOffset":10795,"endOffset":11024,"count":0},{"startOffset":11070,"endOffset":11076,"count":3},{"startOffset":11124,"endOffset":11221,"count":0},{"startOffset":11247,"endOffset":11311,"count":2},{"startOffset":11311,"endOffset":11407,"count":3},{"startOffset":11612,"endOffset":11631,"count":1},{"startOffset":11983,"endOffset":12018,"count":0},{"startOffset":12161,"endOffset":13395,"count":4},{"startOffset":12188,"endOffset":12311,"count":0},{"startOffset":13324,"endOffset":13379,"count":0},{"startOffset":13423,"endOffset":13440,"count":0},{"startOffset":13476,"endOffset":13481,"count":1},{"startOffset":13622,"endOffset":13748,"count":0},{"startOffset":14148,"endOffset":14391,"count":190},{"startOffset":14217,"endOffset":14293,"count":0},{"startOffset":14331,"endOffset":14352,"count":0},{"startOffset":14354,"endOffset":14386,"count":0},{"startOffset":14421,"endOffset":14770,"count":0},{"startOffset":14798,"endOffset":14930,"count":0},{"startOffset":14983,"endOffset":15027,"count":0},{"startOffset":15064,"endOffset":15077,"count":0},{"startOffset":15148,"endOffset":15169,"count":5},{"startOffset":15174,"endOffset":15250,"count":0},{"startOffset":15290,"endOffset":15313,"count":4},{"startOffset":15314,"endOffset":15331,"count":4},{"startOffset":15333,"endOffset":15365,"count":2},{"startOffset":15419,"endOffset":15433,"count":1},{"startOffset":15435,"endOffset":15535,"count":7},{"startOffset":15466,"endOffset":15471,"count":0}],"isBlockCoverage":true},{"functionName":"getHostname","ranges":[{"startOffset":15690,"endOffset":16658,"count":5},{"startOffset":15785,"endOffset":16639,"count":40},{"startOffset":16098,"endOffset":16634,"count":0}],"isBlockCoverage":true},{"functionName":"autoEscapeStr","ranges":[{"startOffset":17738,"endOffset":18466,"count":8},{"startOffset":17858,"endOffset":18234,"count":190},{"startOffset":18012,"endOffset":18229,"count":0},{"startOffset":18311,"endOffset":18465,"count":0}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":20452,"endOffset":22913,"count":14},{"startOffset":20516,"endOffset":20593,"count":0},{"startOffset":20628,"endOffset":20633,"count":3},{"startOffset":20667,"endOffset":20672,"count":1},{"startOffset":20762,"endOffset":20798,"count":8},{"startOffset":20798,"endOffset":21050,"count":6},{"startOffset":20823,"endOffset":21050,"count":0},{"startOffset":21080,"endOffset":21113,"count":0},{"startOffset":21115,"endOffset":21169,"count":0},{"startOffset":21210,"endOffset":21226,"count":0},{"startOffset":21253,"endOffset":21303,"count":11},{"startOffset":21317,"endOffset":21333,"count":0},{"startOffset":21426,"endOffset":21847,"count":572},{"startOffset":21474,"endOffset":21646,"count":0},{"startOffset":21654,"endOffset":21835,"count":0},{"startOffset":21868,"endOffset":22010,"count":0},{"startOffset":22145,"endOffset":22177,"count":6},{"startOffset":22179,"endOffset":22646,"count":8},{"startOffset":22203,"endOffset":22210,"count":0},{"startOffset":22293,"endOffset":22319,"count":0},{"startOffset":22353,"endOffset":22641,"count":0},{"startOffset":22704,"endOffset":22739,"count":0},{"startOffset":22746,"endOffset":22764,"count":0},{"startOffset":22779,"endOffset":22825,"count":0},{"startOffset":22832,"endOffset":22854,"count":0}],"isBlockCoverage":true},{"functionName":"urlResolve","ranges":[{"startOffset":22918,"endOffset":23019,"count":3}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":23047,"endOffset":23150,"count":3}],"isBlockCoverage":true},{"functionName":"resolveObject","ranges":[{"startOffset":23335,"endOffset":32729,"count":3},{"startOffset":23407,"endOffset":23501,"count":0},{"startOffset":23613,"endOffset":23680,"count":36},{"startOffset":23904,"endOffset":23966,"count":1},{"startOffset":23966,"endOffset":24048,"count":2},{"startOffset":24048,"endOffset":24069,"count":0},{"startOffset":24071,"endOffset":24615,"count":0},{"startOffset":24615,"endOffset":24643,"count":2},{"startOffset":24643,"endOffset":24683,"count":0},{"startOffset":24685,"endOffset":26507,"count":0},{"startOffset":26507,"endOffset":26586,"count":2},{"startOffset":26630,"endOffset":26691,"count":2},{"startOffset":26728,"endOffset":26742,"count":2},{"startOffset":26743,"endOffset":26801,"count":0},{"startOffset":26875,"endOffset":26904,"count":2},{"startOffset":26906,"endOffset":26911,"count":0},{"startOffset":26951,"endOffset":26982,"count":2},{"startOffset":26984,"endOffset":26989,"count":0},{"startOffset":27035,"endOffset":27082,"count":2},{"startOffset":27376,"endOffset":27958,"count":0},{"startOffset":27958,"endOffset":27978,"count":2},{"startOffset":27978,"endOffset":28523,"count":0},{"startOffset":28523,"endOffset":29896,"count":2},{"startOffset":28661,"endOffset":28674,"count":0},{"startOffset":28813,"endOffset":29896,"count":0},{"startOffset":29896,"endOffset":29923,"count":2},{"startOffset":29923,"endOffset":30231,"count":0},{"startOffset":30231,"endOffset":30486,"count":2},{"startOffset":30486,"endOffset":30502,"count":0},{"startOffset":30503,"endOffset":30524,"count":0},{"startOffset":30526,"endOffset":30565,"count":2},{"startOffset":30567,"endOffset":30581,"count":2},{"startOffset":30772,"endOffset":31005,"count":14},{"startOffset":30821,"endOffset":30859,"count":0},{"startOffset":30884,"endOffset":30935,"count":0},{"startOffset":30949,"endOffset":31000,"count":0},{"startOffset":31005,"endOffset":31098,"count":2},{"startOffset":31098,"endOffset":31115,"count":0},{"startOffset":31117,"endOffset":31180,"count":0},{"startOffset":31180,"endOffset":31221,"count":2},{"startOffset":31222,"endOffset":31277,"count":0},{"startOffset":31279,"endOffset":31311,"count":0},{"startOffset":31311,"endOffset":31338,"count":2},{"startOffset":31338,"endOffset":31379,"count":1},{"startOffset":31381,"endOffset":31410,"count":0},{"startOffset":31410,"endOffset":31453,"count":2},{"startOffset":31453,"endOffset":31507,"count":0},{"startOffset":31560,"endOffset":32079,"count":0},{"startOffset":32079,"endOffset":32109,"count":2},{"startOffset":32109,"endOffset":32143,"count":0},{"startOffset":32165,"endOffset":32179,"count":2},{"startOffset":32181,"endOffset":32213,"count":0},{"startOffset":32213,"endOffset":32240,"count":2},{"startOffset":32240,"endOffset":32300,"count":0},{"startOffset":32300,"endOffset":32419,"count":2},{"startOffset":32419,"endOffset":32444,"count":0},{"startOffset":32446,"endOffset":32571,"count":2},{"startOffset":32502,"endOffset":32506,"count":0},{"startOffset":32544,"endOffset":32559,"count":0},{"startOffset":32571,"endOffset":32617,"count":2},{"startOffset":32654,"endOffset":32673,"count":0}],"isBlockCoverage":true},{"functionName":"parseHost","ranges":[{"startOffset":32760,"endOffset":33044,"count":5},{"startOffset":32859,"endOffset":33006,"count":0},{"startOffset":33020,"endOffset":33041,"count":4}],"isBlockCoverage":true},{"functionName":"pathToFileURL","ranges":[{"startOffset":33270,"endOffset":33370,"count":1}],"isBlockCoverage":true}]},{"scriptId":"63","url":"node:internal/modules/cjs/loader","functions":[{"functionName":"","ranges":[{"startOffset":3639,"endOffset":3730,"count":1},{"startOffset":3686,"endOffset":3722,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3781,"endOffset":3824,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":5266,"endOffset":5692,"count":6620},{"startOffset":5366,"endOffset":5467,"count":5967},{"startOffset":5444,"endOffset":5462,"count":1589},{"startOffset":5467,"endOffset":5542,"count":5031},{"startOffset":5542,"endOffset":5556,"count":4378},{"startOffset":5558,"endOffset":5671,"count":1216},{"startOffset":5671,"endOffset":5691,"count":5031}],"isBlockCoverage":true},{"functionName":"updateChildren","ranges":[{"startOffset":6203,"endOffset":6410,"count":2134},{"startOffset":6276,"endOffset":6286,"count":2105},{"startOffset":6304,"endOffset":6357,"count":2105},{"startOffset":6314,"endOffset":6356,"count":1144},{"startOffset":6359,"endOffset":6407,"count":2089}],"isBlockCoverage":true},{"functionName":"reportModuleToWatchMode","ranges":[{"startOffset":6533,"endOffset":6693,"count":3454},{"startOffset":6615,"endOffset":6630,"count":0},{"startOffset":6632,"endOffset":6690,"count":0}],"isBlockCoverage":true},{"functionName":"reportModuleNotFoundToWatchMode","ranges":[{"startOffset":6884,"endOffset":7127,"count":222},{"startOffset":6986,"endOffset":7001,"count":0},{"startOffset":7003,"endOffset":7124,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7072,"endOffset":7114,"count":0}],"isBlockCoverage":false},{"functionName":"Module","ranges":[{"startOffset":7307,"endOffset":8084,"count":978},{"startOffset":7630,"endOffset":7640,"count":0},{"startOffset":7659,"endOffset":8030,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10131,"endOffset":10158,"count":1}],"isBlockCoverage":true},{"functionName":"initializeCJS","ranges":[{"startOffset":10902,"endOffset":11416,"count":1}],"isBlockCoverage":true},{"functionName":"tryPackage","ranges":[{"startOffset":12332,"endOffset":13646,"count":394},{"startOffset":12457,"endOffset":12540,"count":184},{"startOffset":12540,"endOffset":12637,"count":210},{"startOffset":12637,"endOffset":12682,"count":21},{"startOffset":12683,"endOffset":12751,"count":2},{"startOffset":12778,"endOffset":13625,"count":0},{"startOffset":13625,"endOffset":13645,"count":210}],"isBlockCoverage":true},{"functionName":"tryFile","ranges":[{"startOffset":14015,"endOffset":14285,"count":3102},{"startOffset":14106,"endOffset":14117,"count":1867},{"startOffset":14117,"endOffset":14147,"count":1235},{"startOffset":14147,"endOffset":14175,"count":0},{"startOffset":14176,"endOffset":14199,"count":1235},{"startOffset":14202,"endOffset":14247,"count":0},{"startOffset":14247,"endOffset":14284,"count":1235}],"isBlockCoverage":true},{"functionName":"tryExtensions","ranges":[{"startOffset":14558,"endOffset":14787,"count":1614},{"startOffset":14648,"endOffset":14767,"count":2845},{"startOffset":14730,"endOffset":14762,"count":999},{"startOffset":14767,"endOffset":14786,"count":615}],"isBlockCoverage":true},{"functionName":"findLongestRegisteredExtension","ranges":[{"startOffset":14977,"endOffset":15465,"count":978},{"startOffset":15206,"endOffset":15445,"count":980},{"startOffset":15259,"endOffset":15272,"count":0},{"startOffset":15412,"endOffset":15440,"count":971},{"startOffset":15445,"endOffset":15464,"count":7}],"isBlockCoverage":true},{"functionName":"trySelfParentPath","ranges":[{"startOffset":15594,"endOffset":15899,"count":1591},{"startOffset":15647,"endOffset":15664,"count":13},{"startOffset":15664,"endOffset":15726,"count":1578},{"startOffset":15726,"endOffset":15896,"count":0}],"isBlockCoverage":true},{"functionName":"trySelf","ranges":[{"startOffset":16114,"endOffset":17070,"count":1591},{"startOffset":16174,"endOffset":16191,"count":13},{"startOffset":16191,"endOffset":16316,"count":1578},{"startOffset":16317,"endOffset":16342,"count":368},{"startOffset":16344,"endOffset":16369,"count":1210},{"startOffset":16369,"endOffset":16419,"count":368},{"startOffset":16419,"endOffset":16447,"count":0},{"startOffset":16447,"endOffset":16617,"count":368},{"startOffset":16509,"endOffset":16586,"count":0},{"startOffset":16617,"endOffset":17067,"count":0}],"isBlockCoverage":true},{"functionName":"resolveExports","ranges":[{"startOffset":17432,"endOffset":18270,"count":1570},{"startOffset":17642,"endOffset":17657,"count":937},{"startOffset":17673,"endOffset":17684,"count":937},{"startOffset":17684,"endOffset":17788,"count":633},{"startOffset":17788,"endOffset":17810,"count":411},{"startOffset":17812,"endOffset":18267,"count":47},{"startOffset":18098,"endOffset":18262,"count":0}],"isBlockCoverage":true},{"functionName":"Module._findPath","ranges":[{"startOffset":18572,"endOffset":22789,"count":1592},{"startOffset":18684,"endOffset":18709,"count":15},{"startOffset":18709,"endOffset":18774,"count":1577},{"startOffset":18749,"endOffset":18774,"count":0},{"startOffset":18911,"endOffset":18936,"count":229},{"startOffset":18936,"endOffset":19533,"count":1363},{"startOffset":19083,"endOffset":19532,"count":1362},{"startOffset":19163,"endOffset":19525,"count":2},{"startOffset":19413,"endOffset":19504,"count":1},{"startOffset":19610,"endOffset":20075,"count":937},{"startOffset":19719,"endOffset":19805,"count":182},{"startOffset":19806,"endOffset":20068,"count":182},{"startOffset":19904,"endOffset":19976,"count":181},{"startOffset":19978,"endOffset":20066,"count":0},{"startOffset":20122,"endOffset":20281,"count":937},{"startOffset":20241,"endOffset":20276,"count":184},{"startOffset":20281,"endOffset":20346,"count":1363},{"startOffset":20346,"endOffset":22767,"count":2179},{"startOffset":20491,"endOffset":20501,"count":1995},{"startOffset":20502,"endOffset":20599,"count":1981},{"startOffset":20537,"endOffset":20575,"count":0},{"startOffset":20607,"endOffset":20632,"count":595},{"startOffset":20632,"endOffset":20662,"count":1584},{"startOffset":20662,"endOffset":20807,"count":1570},{"startOffset":20757,"endOffset":20800,"count":47},{"startOffset":20807,"endOffset":20943,"count":1537},{"startOffset":20943,"endOffset":22214,"count":1534},{"startOffset":20966,"endOffset":21970,"count":127},{"startOffset":21000,"endOffset":21195,"count":126},{"startOffset":21056,"endOffset":21118,"count":0},{"startOffset":21195,"endOffset":21961,"count":1},{"startOffset":21249,"endOffset":21899,"count":0},{"startOffset":21995,"endOffset":22207,"count":1407},{"startOffset":22077,"endOffset":22139,"count":1198},{"startOffset":22214,"endOffset":22236,"count":1537},{"startOffset":22236,"endOffset":22247,"count":616},{"startOffset":22249,"endOffset":22481,"count":394},{"startOffset":22353,"endOffset":22411,"count":3},{"startOffset":22481,"endOffset":22503,"count":1537},{"startOffset":22503,"endOffset":22582,"count":1315},{"startOffset":22582,"endOffset":22767,"count":222},{"startOffset":22767,"endOffset":22788,"count":1}],"isBlockCoverage":true},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":23133,"endOffset":24744,"count":997},{"startOffset":23638,"endOffset":23713,"count":0},{"startOffset":23715,"endOffset":23762,"count":0},{"startOffset":23892,"endOffset":24718,"count":71059},{"startOffset":24286,"endOffset":24327,"count":64862},{"startOffset":24328,"endOffset":24361,"count":64862},{"startOffset":24363,"endOffset":24581,"count":7194},{"startOffset":24391,"endOffset":24537,"count":6133},{"startOffset":24581,"endOffset":24711,"count":63865},{"startOffset":24601,"endOffset":24711,"count":19281},{"startOffset":24637,"endOffset":24665,"count":13148},{"startOffset":24665,"endOffset":24702,"count":6133}],"isBlockCoverage":true},{"functionName":"Module._resolveLookupPaths","ranges":[{"startOffset":26297,"endOffset":27625,"count":1591},{"startOffset":26378,"endOffset":26447,"count":0},{"startOffset":26535,"endOffset":26738,"count":1089},{"startOffset":26617,"endOffset":26668,"count":809},{"startOffset":26669,"endOffset":26737,"count":0},{"startOffset":26740,"endOffset":27080,"count":502},{"startOffset":26804,"endOffset":26819,"count":489},{"startOffset":26821,"endOffset":26934,"count":489},{"startOffset":26934,"endOffset":26976,"count":13},{"startOffset":27068,"endOffset":27074,"count":0},{"startOffset":27080,"endOffset":27151,"count":1089},{"startOffset":27152,"endOffset":27171,"count":1089},{"startOffset":27173,"endOffset":27429,"count":0},{"startOffset":27429,"endOffset":27624,"count":1089}],"isBlockCoverage":true},{"functionName":"getExportsForCircularRequire","ranges":[{"startOffset":29123,"endOffset":29782,"count":14},{"startOffset":29295,"endOffset":29593,"count":2},{"startOffset":29595,"endOffset":29751,"count":2}],"isBlockCoverage":true},{"functionName":"Module._load","ranges":[{"startOffset":30461,"endOffset":33711,"count":2489},{"startOffset":30546,"endOffset":31393,"count":2476},{"startOffset":31013,"endOffset":31388,"count":531},{"startOffset":31197,"endOffset":31271,"count":10},{"startOffset":31271,"endOffset":31318,"count":521},{"startOffset":31318,"endOffset":31388,"count":0},{"startOffset":31393,"endOffset":31448,"count":1958},{"startOffset":31448,"endOffset":31730,"count":8},{"startOffset":31581,"endOffset":31643,"count":0},{"startOffset":31730,"endOffset":31887,"count":1950},{"startOffset":31887,"endOffset":32268,"count":625},{"startOffset":31969,"endOffset":32213,"count":20},{"startOffset":32067,"endOffset":32094,"count":16},{"startOffset":32096,"endOffset":32166,"count":4},{"startOffset":32166,"endOffset":32213,"count":16},{"startOffset":32213,"endOffset":32263,"count":605},{"startOffset":32268,"endOffset":32330,"count":1340},{"startOffset":32330,"endOffset":32416,"count":362},{"startOffset":32416,"endOffset":32518,"count":978},{"startOffset":32518,"endOffset":32549,"count":962},{"startOffset":32568,"endOffset":32713,"count":1},{"startOffset":32713,"endOffset":32822,"count":978},{"startOffset":32822,"endOffset":32893,"count":966},{"startOffset":32893,"endOffset":33680,"count":978},{"startOffset":33005,"endOffset":33420,"count":0},{"startOffset":33445,"endOffset":33488,"count":977},{"startOffset":33489,"endOffset":33603,"count":976},{"startOffset":33605,"endOffset":33675,"count":2},{"startOffset":33680,"endOffset":33710,"count":978}],"isBlockCoverage":true},{"functionName":"Module._resolveFilename","ranges":[{"startOffset":34184,"endOffset":37410,"count":1953},{"startOffset":34282,"endOffset":34309,"count":362},{"startOffset":34309,"endOffset":34363,"count":1591},{"startOffset":34363,"endOffset":34382,"count":0},{"startOffset":34384,"endOffset":35508,"count":0},{"startOffset":35508,"endOffset":35607,"count":1591},{"startOffset":35607,"endOffset":35655,"count":0},{"startOffset":35657,"endOffset":36316,"count":0},{"startOffset":36316,"endOffset":36482,"count":1591},{"startOffset":36482,"endOffset":36683,"count":0},{"startOffset":36683,"endOffset":36827,"count":1591},{"startOffset":36827,"endOffset":36847,"count":1590},{"startOffset":36847,"endOffset":36963,"count":1},{"startOffset":36963,"endOffset":37038,"count":6},{"startOffset":37019,"endOffset":37031,"count":0},{"startOffset":37038,"endOffset":37409,"count":1}],"isBlockCoverage":true},{"functionName":"finalizeEsmResolution","ranges":[{"startOffset":37847,"endOffset":38442,"count":47},{"startOffset":38047,"endOffset":38179,"count":0},{"startOffset":38303,"endOffset":38441,"count":0}],"isBlockCoverage":true},{"functionName":"Module.load","ranges":[{"startOffset":39113,"endOffset":39849,"count":978},{"startOffset":39457,"endOffset":39487,"count":0},{"startOffset":39489,"endOffset":39543,"count":0}],"isBlockCoverage":true},{"functionName":"Module.require","ranges":[{"startOffset":40144,"endOffset":40455,"count":2476},{"startOffset":40206,"endOffset":40327,"count":0}],"isBlockCoverage":true},{"functionName":"wrapSafe","ranges":[{"startOffset":41047,"endOffset":43525,"count":956},{"startOffset":41270,"endOffset":42058,"count":0},{"startOffset":42919,"endOffset":42966,"count":0},{"startOffset":42967,"endOffset":43009,"count":0},{"startOffset":43011,"endOffset":43076,"count":0},{"startOffset":43165,"endOffset":43265,"count":132},{"startOffset":43302,"endOffset":43522,"count":0}],"isBlockCoverage":true},{"functionName":"Module._compile","ranges":[{"startOffset":43854,"endOffset":45731,"count":956},{"startOffset":43948,"endOffset":43958,"count":0},{"startOffset":43977,"endOffset":44134,"count":0},{"startOffset":44272,"endOffset":44296,"count":0},{"startOffset":44298,"endOffset":45055,"count":0},{"startOffset":45285,"endOffset":45315,"count":13},{"startOffset":45377,"endOffset":45519,"count":0},{"startOffset":45689,"endOffset":45710,"count":13}],"isBlockCoverage":true},{"functionName":"Module._extensions..js","ranges":[{"startOffset":45916,"endOffset":47892,"count":956},{"startOffset":46081,"endOffset":46089,"count":16},{"startOffset":46091,"endOffset":46159,"count":16},{"startOffset":46159,"endOffset":46221,"count":940},{"startOffset":46271,"endOffset":47850,"count":949},{"startOffset":46335,"endOffset":46357,"count":0},{"startOffset":46455,"endOffset":47845,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..json","ranges":[{"startOffset":48081,"endOffset":48502,"count":21},{"startOffset":48194,"endOffset":48204,"count":0},{"startOffset":48223,"endOffset":48328,"count":0},{"startOffset":48415,"endOffset":48499,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..node","ranges":[{"startOffset":48691,"endOffset":49042,"count":1},{"startOffset":48748,"endOffset":48758,"count":0},{"startOffset":48777,"endOffset":48930,"count":0}],"isBlockCoverage":true},{"functionName":"Module._initPaths","ranges":[{"startOffset":50802,"endOffset":51795,"count":1},{"startOffset":50870,"endOffset":50890,"count":0},{"startOffset":50946,"endOffset":50971,"count":0},{"startOffset":51201,"endOffset":51250,"count":0},{"startOffset":51509,"endOffset":51656,"count":0}],"isBlockCoverage":true}]},{"scriptId":"64","url":"node:internal/modules/helpers","functions":[{"functionName":"","ranges":[{"startOffset":1221,"endOffset":1248,"count":1}],"isBlockCoverage":true},{"functionName":"toRealPath","ranges":[{"startOffset":1732,"endOffset":1868,"count":1363}],"isBlockCoverage":true},{"functionName":"initializeCjsConditions","ranges":[{"startOffset":1991,"endOffset":2394,"count":1},{"startOffset":2173,"endOffset":2177,"count":0}],"isBlockCoverage":true},{"functionName":"getCjsConditions","ranges":[{"startOffset":2466,"endOffset":2598,"count":47},{"startOffset":2532,"endOffset":2570,"count":0}],"isBlockCoverage":true},{"functionName":"loadBuiltinModule","ranges":[{"startOffset":2832,"endOffset":3222,"count":370},{"startOffset":2922,"endOffset":2941,"count":0}],"isBlockCoverage":true},{"functionName":"lazyModule","ranges":[{"startOffset":3322,"endOffset":3438,"count":956},{"startOffset":3367,"endOffset":3415,"count":1}],"isBlockCoverage":true},{"functionName":"makeRequireFunction","ranges":[{"startOffset":4041,"endOffset":6657,"count":956},{"startOffset":4183,"endOffset":4248,"count":0},{"startOffset":4319,"endOffset":5627,"count":0}],"isBlockCoverage":true},{"functionName":"require","ranges":[{"startOffset":4466,"endOffset":5621,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":5650,"endOffset":5793,"count":2474}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":5987,"endOffset":6136,"count":0}],"isBlockCoverage":false},{"functionName":"paths","ranges":[{"startOffset":6289,"endOffset":6414,"count":0}],"isBlockCoverage":false},{"functionName":"stripBOM","ranges":[{"startOffset":6877,"endOffset":7037,"count":21},{"startOffset":6960,"endOffset":7015,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeReferrerURL","ranges":[{"startOffset":9613,"endOffset":10135,"count":133},{"startOffset":9719,"endOffset":9748,"count":0},{"startOffset":9890,"endOffset":9990,"count":0},{"startOffset":9992,"endOffset":10134,"count":0}],"isBlockCoverage":true},{"functionName":"hasStartedUserCJSExecution","ranges":[{"startOffset":11023,"endOffset":11099,"count":1}],"isBlockCoverage":true},{"functionName":"setHasStartedUserCJSExecution","ranges":[{"startOffset":11104,"endOffset":11183,"count":956}],"isBlockCoverage":true},{"functionName":"hasStartedUserESMExecution","ranges":[{"startOffset":11188,"endOffset":11264,"count":1}],"isBlockCoverage":true},{"functionName":"setHasStartedUserESMExecution","ranges":[{"startOffset":11269,"endOffset":11348,"count":1}],"isBlockCoverage":true}]},{"scriptId":"65","url":"node:internal/modules/package_json_reader","functions":[{"functionName":"read","ranges":[{"startOffset":1159,"endOffset":3995,"count":6430},{"startOffset":1256,"endOffset":1295,"count":5861},{"startOffset":1295,"endOffset":1996,"count":569},{"startOffset":1996,"endOffset":2005,"count":0},{"startOffset":2006,"endOffset":2020,"count":0},{"startOffset":2021,"endOffset":2043,"count":569},{"startOffset":2069,"endOffset":3942,"count":246},{"startOffset":2141,"endOffset":2751,"count":0},{"startOffset":3050,"endOffset":3084,"count":169},{"startOffset":3086,"endOffset":3128,"count":169},{"startOffset":3190,"endOffset":3238,"count":27},{"startOffset":3300,"endOffset":3348,"count":0},{"startOffset":3462,"endOffset":3521,"count":15},{"startOffset":3493,"endOffset":3520,"count":9},{"startOffset":3523,"endOffset":3565,"count":15},{"startOffset":3601,"endOffset":3802,"count":1},{"startOffset":3724,"endOffset":3778,"count":0},{"startOffset":3831,"endOffset":3937,"count":0},{"startOffset":3942,"endOffset":3994,"count":569}],"isBlockCoverage":true},{"functionName":"readPackage","ranges":[{"startOffset":4069,"endOffset":4161,"count":6237}],"isBlockCoverage":true},{"functionName":"readPackageScope","ranges":[{"startOffset":4385,"endOffset":5229,"count":2528},{"startOffset":4576,"endOffset":5164,"count":5210},{"startOffset":4830,"endOffset":4876,"count":0},{"startOffset":4878,"endOffset":4907,"count":0},{"startOffset":4975,"endOffset":5004,"count":0},{"startOffset":5077,"endOffset":5159,"count":2528},{"startOffset":5164,"endOffset":5228,"count":0}],"isBlockCoverage":true}]},{"scriptId":"66","url":"node:internal/modules/esm/utils","functions":[{"functionName":"getDefaultConditions","ranges":[{"startOffset":1170,"endOffset":1279,"count":36}],"isBlockCoverage":true},{"functionName":"getDefaultConditionsSet","ranges":[{"startOffset":1416,"endOffset":1534,"count":35}],"isBlockCoverage":true},{"functionName":"initializeDefaultConditions","ranges":[{"startOffset":1690,"endOffset":2084,"count":1},{"startOffset":1876,"endOffset":1880,"count":0}],"isBlockCoverage":true},{"functionName":"getConditionsSet","ranges":[{"startOffset":2160,"endOffset":2528,"count":35},{"startOffset":2274,"endOffset":2488,"count":0}],"isBlockCoverage":true},{"functionName":"registerModule","ranges":[{"startOffset":4729,"endOffset":5406,"count":15},{"startOffset":5058,"endOffset":5277,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5961,"endOffset":6015,"count":1}],"isBlockCoverage":true},{"functionName":"defaultImportModuleDynamically","ranges":[{"startOffset":6407,"endOffset":6617,"count":1}],"isBlockCoverage":true},{"functionName":"importModuleDynamicallyCallback","ranges":[{"startOffset":7261,"endOffset":8502,"count":1},{"startOffset":7559,"endOffset":7714,"count":0},{"startOffset":8029,"endOffset":8501,"count":0}],"isBlockCoverage":true},{"functionName":"initializeESM","ranges":[{"startOffset":8823,"endOffset":9216,"count":1}],"isBlockCoverage":true},{"functionName":"forceDefaultLoader","ranges":[{"startOffset":9351,"endOffset":9416,"count":1}],"isBlockCoverage":true}]},{"scriptId":"67","url":"node:internal/process/pre_execution","functions":[{"functionName":"prepareMainThreadExecution","ranges":[{"startOffset":1114,"endOffset":1304,"count":1}],"isBlockCoverage":true},{"functionName":"prepareExecution","ranges":[{"startOffset":2572,"endOffset":4832,"count":1},{"startOffset":3566,"endOffset":3673,"count":0},{"startOffset":4580,"endOffset":4746,"count":0}],"isBlockCoverage":true},{"functionName":"setupSymbolDisposePolyfill","ranges":[{"startOffset":4836,"endOffset":5594,"count":1}],"isBlockCoverage":true},{"functionName":"setupUserModules","ranges":[{"startOffset":5598,"endOffset":6284,"count":1}],"isBlockCoverage":true},{"functionName":"refreshRuntimeOptions","ranges":[{"startOffset":6288,"endOffset":6346,"count":1}],"isBlockCoverage":true},{"functionName":"patchProcessObject","ranges":[{"startOffset":6782,"endOffset":9203,"count":1},{"startOffset":7823,"endOffset":7877,"count":0}],"isBlockCoverage":true},{"functionName":"addReadOnlyProcessAlias","ranges":[{"startOffset":9207,"endOffset":9499,"count":13},{"startOffset":9330,"endOffset":9496,"count":1}],"isBlockCoverage":true},{"functionName":"setupWarningHandler","ranges":[{"startOffset":9503,"endOffset":10041,"count":1},{"startOffset":9889,"endOffset":10033,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9919,"endOffset":10024,"count":0}],"isBlockCoverage":false},{"functionName":"setupUndici","ranges":[{"startOffset":10120,"endOffset":10551,"count":1},{"startOffset":10195,"endOffset":10361,"count":0},{"startOffset":10457,"endOffset":10548,"count":0}],"isBlockCoverage":true},{"functionName":"setupWebCrypto","ranges":[{"startOffset":10659,"endOffset":11642,"count":1},{"startOffset":10796,"endOffset":10815,"count":0},{"startOffset":11322,"endOffset":11639,"count":0}],"isBlockCoverage":true},{"functionName":"cryptoThisCheck","ranges":[{"startOffset":10997,"endOffset":11177,"count":0}],"isBlockCoverage":false},{"functionName":"get crypto","ranges":[{"startOffset":11487,"endOffset":11588,"count":0}],"isBlockCoverage":false},{"functionName":"setupCodeCoverage","ranges":[{"startOffset":11646,"endOffset":12178,"count":1}],"isBlockCoverage":true},{"functionName":"setupCustomEvent","ranges":[{"startOffset":12288,"endOffset":12572,"count":1},{"startOffset":12429,"endOffset":12448,"count":0}],"isBlockCoverage":true},{"functionName":"setupStacktracePrinterOnSigint","ranges":[{"startOffset":12576,"endOffset":12809,"count":1},{"startOffset":12681,"endOffset":12808,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReport","ranges":[{"startOffset":12813,"endOffset":13072,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":12963,"endOffset":13061,"count":0}],"isBlockCoverage":false},{"functionName":"setupDebugEnv","ranges":[{"startOffset":13076,"endOffset":13312,"count":1},{"startOffset":13229,"endOffset":13309,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReportSignalHandlers","ranges":[{"startOffset":13377,"endOffset":13570,"count":1},{"startOffset":13466,"endOffset":13567,"count":0}],"isBlockCoverage":true},{"functionName":"initializeHeapSnapshotSignalHandlers","ranges":[{"startOffset":13574,"endOffset":14331,"count":1},{"startOffset":13774,"endOffset":14328,"count":0}],"isBlockCoverage":true},{"functionName":"doWriteHeapSnapshot","ranges":[{"startOffset":13892,"endOffset":14049,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14247,"endOffset":14321,"count":0}],"isBlockCoverage":false},{"functionName":"setupTraceCategoryState","ranges":[{"startOffset":14335,"endOffset":14598,"count":1}],"isBlockCoverage":true},{"functionName":"setupInspectorHooks","ranges":[{"startOffset":14602,"endOffset":15197,"count":1}],"isBlockCoverage":true},{"functionName":"initializeDeprecations","ranges":[{"startOffset":15397,"endOffset":17408,"count":1},{"startOffset":16134,"endOffset":16444,"count":16},{"startOffset":16180,"endOffset":16417,"count":0},{"startOffset":16768,"endOffset":16973,"count":0},{"startOffset":17003,"endOffset":17405,"count":0}],"isBlockCoverage":true},{"functionName":"setupChildProcessIpcChannel","ranges":[{"startOffset":17412,"endOffset":17994,"count":1},{"startOffset":17489,"endOffset":17991,"count":0}],"isBlockCoverage":true},{"functionName":"initializeClusterIPC","ranges":[{"startOffset":17998,"endOffset":18275,"count":1},{"startOffset":18086,"endOffset":18272,"count":0}],"isBlockCoverage":true},{"functionName":"initializePermission","ranges":[{"startOffset":18279,"endOffset":20386,"count":1},{"startOffset":18423,"endOffset":19967,"count":0}],"isBlockCoverage":true},{"functionName":"binding","ranges":[{"startOffset":18448,"endOffset":18537,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20211,"endOffset":20376,"count":5},{"startOffset":20291,"endOffset":20369,"count":0}],"isBlockCoverage":true},{"functionName":"readPolicyFromDisk","ranges":[{"startOffset":20390,"endOffset":22257,"count":1},{"startOffset":20520,"endOffset":22254,"count":0}],"isBlockCoverage":true},{"functionName":"initializeCJSLoader","ranges":[{"startOffset":22261,"endOffset":22385,"count":1}],"isBlockCoverage":true},{"functionName":"initializeESMLoader","ranges":[{"startOffset":22389,"endOffset":22987,"count":1},{"startOffset":22731,"endOffset":22984,"count":0}],"isBlockCoverage":true},{"functionName":"initializeSourceMapsHandlers","ranges":[{"startOffset":22991,"endOffset":23194,"count":1}],"isBlockCoverage":true},{"functionName":"initializeFrozenIntrinsics","ranges":[{"startOffset":23198,"endOffset":23461,"count":1},{"startOffset":23284,"endOffset":23458,"count":0}],"isBlockCoverage":true},{"functionName":"loadPreloadModules","ranges":[{"startOffset":23465,"endOffset":23824,"count":1},{"startOffset":23662,"endOffset":23821,"count":0}],"isBlockCoverage":true},{"functionName":"markBootstrapComplete","ranges":[{"startOffset":23828,"endOffset":23924,"count":1}],"isBlockCoverage":true}]},{"scriptId":"69","url":"node:internal/modules/run_main","functions":[{"functionName":"resolveMainPath","ranges":[{"startOffset":334,"endOffset":1524,"count":1},{"startOffset":512,"endOffset":619,"count":0},{"startOffset":918,"endOffset":929,"count":0},{"startOffset":1163,"endOffset":1494,"count":0}],"isBlockCoverage":true},{"functionName":"shouldUseESMLoader","ranges":[{"startOffset":1691,"endOffset":3179,"count":1},{"startOffset":1798,"endOffset":1814,"count":0},{"startOffset":2300,"endOffset":2316,"count":0},{"startOffset":2435,"endOffset":2451,"count":0},{"startOffset":2515,"endOffset":2532,"count":0},{"startOffset":2762,"endOffset":2796,"count":0},{"startOffset":2845,"endOffset":3171,"count":0}],"isBlockCoverage":true},{"functionName":"executeUserEntryPoint","ranges":[{"startOffset":4616,"endOffset":5024,"count":1},{"startOffset":4799,"endOffset":4844,"count":0}],"isBlockCoverage":true}]},{"scriptId":"70","url":"node:internal/dns/utils","functions":[{"functionName":"lazyBinding","ranges":[{"startOffset":507,"endOffset":599,"count":2}],"isBlockCoverage":true},{"functionName":"validateTimeout","ranges":[{"startOffset":979,"endOffset":1130,"count":1}],"isBlockCoverage":true},{"functionName":"validateTries","ranges":[{"startOffset":1134,"endOffset":1273,"count":1}],"isBlockCoverage":true},{"functionName":"ResolverBase","ranges":[{"startOffset":1678,"endOffset":2036,"count":1},{"startOffset":1926,"endOffset":1985,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2042,"endOffset":2181,"count":1}],"isBlockCoverage":true},{"functionName":"initializeDns","ranges":[{"startOffset":5671,"endOffset":6073,"count":1},{"startOffset":5818,"endOffset":5931,"count":0},{"startOffset":5983,"endOffset":6072,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6010,"endOffset":6068,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultResolver","ranges":[{"startOffset":6354,"endOffset":6642,"count":1}],"isBlockCoverage":true},{"functionName":"bindDefaultResolver","ranges":[{"startOffset":6723,"endOffset":6950,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6858,"endOffset":6945,"count":15}],"isBlockCoverage":true},{"functionName":"validateHints","ranges":[{"startOffset":6954,"endOffset":7178,"count":1},{"startOffset":7115,"endOffset":7175,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultVerbatim","ranges":[{"startOffset":7594,"endOffset":7664,"count":1}],"isBlockCoverage":true},{"functionName":"createResolverClass","ranges":[{"startOffset":7860,"endOffset":8991,"count":1}],"isBlockCoverage":true}]},{"scriptId":"71","url":"node:internal/net","functions":[{"functionName":"isIPv4","ranges":[{"startOffset":1053,"endOffset":1331,"count":13}],"isBlockCoverage":true},{"functionName":"isIPv6","ranges":[{"startOffset":1335,"endOffset":1613,"count":3}],"isBlockCoverage":true},{"functionName":"isIP","ranges":[{"startOffset":1617,"endOffset":1707,"count":13},{"startOffset":1654,"endOffset":1663,"count":10},{"startOffset":1663,"endOffset":1682,"count":3},{"startOffset":1682,"endOffset":1691,"count":0},{"startOffset":1691,"endOffset":1706,"count":3}],"isBlockCoverage":true}]},{"scriptId":"72","url":"node:internal/bootstrap/switches/does_own_process_state","functions":[{"functionName":"wrappedCwd","ranges":[{"startOffset":3922,"endOffset":4029,"count":38},{"startOffset":3976,"endOffset":4005,"count":1}],"isBlockCoverage":true}]},{"scriptId":"79","url":"node:internal/main/run_main_module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1211,"count":1}],"isBlockCoverage":false}]},{"scriptId":"80","url":"node:vm","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13228,"count":1}],"isBlockCoverage":false},{"functionName":"isContext","ranges":[{"startOffset":2459,"endOffset":2586,"count":3}],"isBlockCoverage":true},{"functionName":"Script","ranges":[{"startOffset":2633,"endOffset":4132,"count":1},{"startOffset":2738,"endOffset":2786,"count":0},{"startOffset":3297,"endOffset":3362,"count":0},{"startOffset":3985,"endOffset":4056,"count":0}],"isBlockCoverage":true},{"functionName":"runInThisContext","ranges":[{"startOffset":4138,"endOffset":4439,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":4445,"endOffset":4840,"count":1},{"startOffset":4663,"endOffset":4701,"count":0},{"startOffset":4703,"endOffset":4777,"count":0}],"isBlockCoverage":true},{"functionName":"runInNewContext","ranges":[{"startOffset":4846,"endOffset":5020,"count":1}],"isBlockCoverage":true},{"functionName":"validateContext","ranges":[{"startOffset":5027,"endOffset":5251,"count":1},{"startOffset":5113,"endOffset":5248,"count":0}],"isBlockCoverage":true},{"functionName":"getRunInContextArgs","ranges":[{"startOffset":5255,"endOffset":5963,"count":1},{"startOffset":5460,"endOffset":5527,"count":0}],"isBlockCoverage":true},{"functionName":"getContextOptions","ranges":[{"startOffset":5967,"endOffset":7061,"count":2},{"startOffset":6027,"endOffset":6037,"count":0},{"startOffset":6371,"endOffset":6434,"count":0},{"startOffset":6487,"endOffset":6919,"count":0},{"startOffset":6969,"endOffset":7032,"count":0}],"isBlockCoverage":true},{"functionName":"createContext","ranges":[{"startOffset":7099,"endOffset":8492,"count":2},{"startOffset":7201,"endOffset":7521,"count":1},{"startOffset":7521,"endOffset":7562,"count":0},{"startOffset":7562,"endOffset":7605,"count":1},{"startOffset":7605,"endOffset":7662,"count":0},{"startOffset":7662,"endOffset":7745,"count":1},{"startOffset":7745,"endOffset":7932,"count":0},{"startOffset":7932,"endOffset":8491,"count":1}],"isBlockCoverage":true},{"functionName":"createScript","ranges":[{"startOffset":8496,"endOffset":8574,"count":1}],"isBlockCoverage":true},{"functionName":"sigintHandlersWrap","ranges":[{"startOffset":8732,"endOffset":9207,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":9211,"endOffset":9621,"count":0}],"isBlockCoverage":false},{"functionName":"runInNewContext","ranges":[{"startOffset":9625,"endOffset":9984,"count":1},{"startOffset":9718,"endOffset":9762,"count":0}],"isBlockCoverage":true},{"functionName":"runInThisContext","ranges":[{"startOffset":9988,"endOffset":10179,"count":0}],"isBlockCoverage":false},{"functionName":"compileFunction","ranges":[{"startOffset":10183,"endOffset":11820,"count":0}],"isBlockCoverage":false},{"functionName":"measureMemory","ranges":[{"startOffset":12109,"endOffset":12693,"count":0}],"isBlockCoverage":false}]},{"scriptId":"81","url":"evalmachine.<anonymous>","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4,"count":1}],"isBlockCoverage":true}]},{"scriptId":"82","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/bin/mocha.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4009,"count":1},{"startOffset":1592,"endOffset":1658,"count":0},{"startOffset":2098,"endOffset":2188,"count":0},{"startOffset":2268,"endOffset":3913,"count":0}],"isBlockCoverage":true},{"functionName":"disableTimeouts","ranges":[{"startOffset":831,"endOffset":957,"count":0}],"isBlockCoverage":false},{"functionName":"trimV8Option","ranges":[{"startOffset":1183,"endOffset":1263,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1340,"endOffset":1467,"count":10},{"startOffset":1372,"endOffset":1422,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1537,"endOffset":1564,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1630,"endOffset":1657,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2057,"endOffset":2081,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2454,"endOffset":2467,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2927,"endOffset":3103,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3155,"endOffset":3909,"count":0}],"isBlockCoverage":false}]},{"scriptId":"83","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/cli/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7612,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1933,"endOffset":2063,"count":10}],"isBlockCoverage":true},{"functionName":"Object.assign","ranges":[{"startOffset":1989,"endOffset":2054,"count":2},{"startOffset":2039,"endOffset":2042,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2152,"endOffset":2240,"count":32}],"isBlockCoverage":true},{"functionName":"Object.assign","ranges":[{"startOffset":2201,"endOffset":2238,"count":7},{"startOffset":2224,"endOffset":2233,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2621,"endOffset":2665,"count":20}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":2970,"endOffset":4343,"count":2},{"startOffset":3424,"endOffset":3441,"count":0},{"startOffset":4114,"endOffset":4203,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3455,"endOffset":3756,"count":2},{"startOffset":3567,"endOffset":3732,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4070,"endOffset":4085,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4263,"endOffset":4316,"count":0}],"isBlockCoverage":false},{"functionName":"loadRc","ranges":[{"startOffset":4727,"endOffset":4873,"count":1},{"startOffset":4841,"endOffset":4861,"count":0}],"isBlockCoverage":true},{"functionName":"loadPkgRc","ranges":[{"startOffset":5309,"endOffset":6046,"count":1},{"startOffset":5370,"endOffset":5394,"count":0},{"startOffset":5589,"endOffset":5695,"count":0},{"startOffset":5767,"endOffset":6023,"count":0}],"isBlockCoverage":true},{"functionName":"loadOptions","ranges":[{"startOffset":6719,"endOffset":7509,"count":1},{"startOffset":6945,"endOffset":6967,"count":0},{"startOffset":7277,"endOffset":7282,"count":0},{"startOffset":7294,"endOffset":7299,"count":0},{"startOffset":7367,"endOffset":7433,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6889,"endOffset":6921,"count":6}],"isBlockCoverage":true}]},{"scriptId":"84","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/ansi-colors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5874,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":32,"endOffset":101,"count":0}],"isBlockCoverage":false},{"functionName":"identity","ranges":[{"startOffset":120,"endOffset":130,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":409,"endOffset":5812,"count":1},{"startOffset":527,"endOffset":586,"count":0}],"isBlockCoverage":true},{"functionName":"ansi","ranges":[{"startOffset":603,"endOffset":1269,"count":42}],"isBlockCoverage":true},{"functionName":"style.wrap","ranges":[{"startOffset":826,"endOffset":1246,"count":3},{"startOffset":881,"endOffset":924,"count":0},{"startOffset":1183,"endOffset":1230,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":1287,"endOffset":1403,"count":3},{"startOffset":1355,"endOffset":1369,"count":0}],"isBlockCoverage":true},{"functionName":"style","ranges":[{"startOffset":1422,"endOffset":1868,"count":3},{"startOffset":1481,"endOffset":1491,"count":0},{"startOffset":1526,"endOffset":1539,"count":0},{"startOffset":1574,"endOffset":1584,"count":0},{"startOffset":1714,"endOffset":1782,"count":0}],"isBlockCoverage":true},{"functionName":"define","ranges":[{"startOffset":1888,"endOffset":2429,"count":42},{"startOffset":1995,"endOffset":2022,"count":5}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2145,"endOffset":2200,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2208,"endOffset":2417,"count":3},{"startOffset":2352,"endOffset":2377,"count":0}],"isBlockCoverage":true},{"functionName":"color","ranges":[{"startOffset":2236,"endOffset":2270,"count":3}],"isBlockCoverage":true},{"functionName":"colors.hasColor.colors.hasAnsi","ranges":[{"startOffset":4269,"endOffset":4397,"count":0}],"isBlockCoverage":false},{"functionName":"colors.alias","ranges":[{"startOffset":4417,"endOffset":5181,"count":2},{"startOffset":4475,"endOffset":4490,"count":0},{"startOffset":4535,"endOffset":4646,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4891,"endOffset":4946,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4954,"endOffset":5169,"count":2},{"startOffset":5098,"endOffset":5127,"count":0}],"isBlockCoverage":true},{"functionName":"color","ranges":[{"startOffset":4982,"endOffset":5016,"count":0}],"isBlockCoverage":false},{"functionName":"colors.theme","ranges":[{"startOffset":5201,"endOffset":5407,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5436,"endOffset":5604,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5631,"endOffset":5641,"count":0}],"isBlockCoverage":false}]},{"scriptId":"85","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/ansi-colors/symbols.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1533,"count":1},{"startOffset":1106,"endOffset":1111,"count":0},{"startOffset":1143,"endOffset":1148,"count":0},{"startOffset":1260,"endOffset":1267,"count":0}],"isBlockCoverage":true}]},{"scriptId":"86","url":"node:internal/modules/esm/resolve","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":47075,"count":1}],"isBlockCoverage":false},{"functionName":"emitTrailingSlashPatternDeprecation","ranges":[{"startOffset":2876,"endOffset":3524,"count":0}],"isBlockCoverage":false},{"functionName":"emitInvalidSegmentDeprecation","ranges":[{"startOffset":4051,"endOffset":4808,"count":0}],"isBlockCoverage":false},{"functionName":"emitLegacyIndexDeprecation","ranges":[{"startOffset":5255,"endOffset":6464,"count":15},{"startOffset":5356,"endOffset":5375,"count":0},{"startOffset":5458,"endOffset":5469,"count":14},{"startOffset":5469,"endOffset":5625,"count":1},{"startOffset":5625,"endOffset":5996,"count":0},{"startOffset":5996,"endOffset":6461,"count":1},{"startOffset":6039,"endOffset":6461,"count":0}],"isBlockCoverage":true},{"functionName":"legacyMainResolve","ranges":[{"startOffset":7600,"endOffset":8377,"count":15},{"startOffset":7770,"endOffset":7856,"count":0},{"startOffset":7898,"endOffset":7909,"count":0},{"startOffset":8125,"endOffset":8152,"count":13},{"startOffset":8153,"endOffset":8157,"count":2}],"isBlockCoverage":true},{"functionName":"finalizeResolution","ranges":[{"startOffset":9175,"endOffset":10689,"count":35},{"startOffset":9312,"endOffset":9469,"count":0},{"startOffset":9536,"endOffset":9725,"count":0},{"startOffset":9816,"endOffset":9853,"count":0},{"startOffset":9922,"endOffset":10016,"count":0},{"startOffset":10039,"endOffset":10334,"count":0},{"startOffset":10588,"endOffset":10593,"count":0}],"isBlockCoverage":true},{"functionName":"importNotDefined","ranges":[{"startOffset":11112,"endOffset":11327,"count":0}],"isBlockCoverage":false},{"functionName":"exportsNotFound","ranges":[{"startOffset":11732,"endOffset":11931,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidSubpath","ranges":[{"startOffset":12580,"endOffset":12969,"count":0}],"isBlockCoverage":false},{"functionName":"invalidPackageTarget","ranges":[{"startOffset":13436,"endOffset":13824,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTargetString","ranges":[{"startOffset":15202,"endOffset":18033,"count":52},{"startOffset":15383,"endOffset":15394,"count":0},{"startOffset":15395,"endOffset":15431,"count":0},{"startOffset":15433,"endOffset":15519,"count":0},{"startOffset":15571,"endOffset":16141,"count":0},{"startOffset":16235,"endOffset":16859,"count":0},{"startOffset":17084,"endOffset":17170,"count":0},{"startOffset":17216,"endOffset":18032,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15909,"endOffset":15922,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16448,"endOffset":16461,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16597,"endOffset":16610,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17354,"endOffset":17367,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17598,"endOffset":17611,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17962,"endOffset":17975,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayIndex","ranges":[{"startOffset":18232,"endOffset":18380,"count":59},{"startOffset":18330,"endOffset":18376,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePackageTarget","ranges":[{"startOffset":19190,"endOffset":21506,"count":83},{"startOffset":19385,"endOffset":19543,"count":52},{"startOffset":19543,"endOffset":21386,"count":31},{"startOffset":19575,"endOffset":20454,"count":6},{"startOffset":19607,"endOffset":19635,"count":0},{"startOffset":19965,"endOffset":20119,"count":0},{"startOffset":20160,"endOffset":20189,"count":0},{"startOffset":20225,"endOffset":20285,"count":0},{"startOffset":20321,"endOffset":20384,"count":0},{"startOffset":20386,"endOffset":20454,"count":0},{"startOffset":20454,"endOffset":21386,"count":25},{"startOffset":20609,"endOffset":20844,"count":59},{"startOffset":20669,"endOffset":20837,"count":0},{"startOffset":20888,"endOffset":21307,"count":46},{"startOffset":20947,"endOffset":20969,"count":43},{"startOffset":20971,"endOffset":21300,"count":25},{"startOffset":21247,"endOffset":21260,"count":0},{"startOffset":21307,"endOffset":21386,"count":0},{"startOffset":21386,"endOffset":21505,"count":0}],"isBlockCoverage":true},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":21798,"endOffset":22762,"count":52},{"startOffset":21931,"endOffset":21947,"count":0},{"startOffset":22004,"endOffset":22021,"count":0},{"startOffset":22166,"endOffset":22729,"count":199},{"startOffset":22279,"endOffset":22338,"count":52},{"startOffset":22338,"endOffset":22724,"count":147},{"startOffset":22394,"endOffset":22724,"count":0}],"isBlockCoverage":true},{"functionName":"packageExportsResolve","ranges":[{"startOffset":23270,"endOffset":25920,"count":52},{"startOffset":23481,"endOffset":23520,"count":2},{"startOffset":23933,"endOffset":24009,"count":0},{"startOffset":24043,"endOffset":25919,"count":0}],"isBlockCoverage":true},{"functionName":"patternKeyCompare","ranges":[{"startOffset":26303,"endOffset":26870,"count":0}],"isBlockCoverage":false},{"functionName":"packageImportsResolve","ranges":[{"startOffset":27368,"endOffset":29883,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageType","ranges":[{"startOffset":30003,"endOffset":30119,"count":48}],"isBlockCoverage":true},{"functionName":"parsePackageName","ranges":[{"startOffset":30291,"endOffset":31381,"count":20},{"startOffset":30486,"endOffset":30722,"count":0},{"startOffset":30787,"endOffset":30839,"count":0},{"startOffset":31016,"endOffset":31053,"count":0},{"startOffset":31082,"endOffset":31204,"count":0},{"startOffset":31267,"endOffset":31321,"count":0}],"isBlockCoverage":true},{"functionName":"packageResolve","ranges":[{"startOffset":31714,"endOffset":33842,"count":20},{"startOffset":31829,"endOffset":31877,"count":0},{"startOffset":32185,"endOffset":32222,"count":0},{"startOffset":32224,"endOffset":32344,"count":0},{"startOffset":32526,"endOffset":33622,"count":73},{"startOffset":32789,"endOffset":33073,"count":53},{"startOffset":32868,"endOffset":32906,"count":0},{"startOffset":33073,"endOffset":33258,"count":20},{"startOffset":33258,"endOffset":33378,"count":5},{"startOffset":33378,"endOffset":33527,"count":15},{"startOffset":33527,"endOffset":33622,"count":0},{"startOffset":33622,"endOffset":33841,"count":0}],"isBlockCoverage":true},{"functionName":"isBareSpecifier","ranges":[{"startOffset":33959,"endOffset":34071,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":34196,"endOffset":34483,"count":70},{"startOffset":34267,"endOffset":34463,"count":28},{"startOffset":34326,"endOffset":34342,"count":10},{"startOffset":34342,"endOffset":34458,"count":18},{"startOffset":34463,"endOffset":34482,"count":42}],"isBlockCoverage":true},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":34638,"endOffset":34833,"count":70},{"startOffset":34725,"endOffset":34742,"count":0},{"startOffset":34772,"endOffset":34788,"count":0}],"isBlockCoverage":true},{"functionName":"moduleResolve","ranges":[{"startOffset":35205,"endOffset":36615,"count":35},{"startOffset":35398,"endOffset":35418,"count":0},{"startOffset":35730,"endOffset":35962,"count":14},{"startOffset":35794,"endOffset":35957,"count":0},{"startOffset":35962,"endOffset":36481,"count":21},{"startOffset":36018,"endOffset":36092,"count":0},{"startOffset":36156,"endOffset":36476,"count":20},{"startOffset":36192,"endOffset":36247,"count":0},{"startOffset":36249,"endOffset":36406,"count":0},{"startOffset":36520,"endOffset":36548,"count":0}],"isBlockCoverage":true},{"functionName":"resolveAsCommonJS","ranges":[{"startOffset":36823,"endOffset":38696,"count":0}],"isBlockCoverage":false},{"functionName":"checkIfDisallowedImport","ranges":[{"startOffset":39086,"endOffset":40499,"count":35},{"startOffset":39399,"endOffset":40491,"count":0}],"isBlockCoverage":true},{"functionName":"throwIfInvalidParentURL","ranges":[{"startOffset":40645,"endOffset":40925,"count":35},{"startOffset":40723,"endOffset":40776,"count":0},{"startOffset":40814,"endOffset":40834,"count":0},{"startOffset":40836,"endOffset":40922,"count":0}],"isBlockCoverage":true},{"functionName":"defaultResolve","ranges":[{"startOffset":41560,"endOffset":45321,"count":35},{"startOffset":41720,"endOffset":41730,"count":0},{"startOffset":41732,"endOffset":42564,"count":0},{"startOffset":42674,"endOffset":42715,"count":0},{"startOffset":42818,"endOffset":42879,"count":14},{"startOffset":42879,"endOffset":42929,"count":21},{"startOffset":42929,"endOffset":43207,"count":15},{"startOffset":43106,"endOffset":43198,"count":0},{"startOffset":43215,"endOffset":43276,"count":0},{"startOffset":43282,"endOffset":43319,"count":20},{"startOffset":43664,"endOffset":43687,"count":0},{"startOffset":43763,"endOffset":43773,"count":0},{"startOffset":43804,"endOffset":43851,"count":0},{"startOffset":43914,"endOffset":44431,"count":0},{"startOffset":44596,"endOffset":44618,"count":0},{"startOffset":44652,"endOffset":45086,"count":0}],"isBlockCoverage":true},{"functionName":"decorateErrorWithCommonJSHints","ranges":[{"startOffset":45592,"endOffset":46217,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":46664,"endOffset":47069,"count":0}],"isBlockCoverage":false}]},{"scriptId":"87","url":"node:internal/modules/esm/package_config","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2284,"count":1}],"isBlockCoverage":false},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":1099,"endOffset":2228,"count":68},{"startOffset":1219,"endOffset":1961,"count":173},{"startOffset":1355,"endOffset":1377,"count":0},{"startOffset":1573,"endOffset":1610,"count":68},{"startOffset":1610,"endOffset":1934,"count":105},{"startOffset":1934,"endOffset":1956,"count":0},{"startOffset":1961,"endOffset":2227,"count":0}],"isBlockCoverage":true}]},{"scriptId":"88","url":"node:internal/modules/esm/get_format","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6880,"count":1}],"isBlockCoverage":false},{"functionName":"node:","ranges":[{"startOffset":984,"endOffset":1015,"count":0}],"isBlockCoverage":false},{"functionName":"getDataProtocolModuleFormat","ranges":[{"startOffset":1087,"endOffset":1310,"count":0}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":1597,"endOffset":1968,"count":50},{"startOffset":1699,"endOffset":1951,"count":152},{"startOffset":1763,"endOffset":1799,"count":0},{"startOffset":1809,"endOffset":1939,"count":50},{"startOffset":1898,"endOffset":1902,"count":0},{"startOffset":1951,"endOffset":1967,"count":0}],"isBlockCoverage":true},{"functionName":"underNodeModules","ranges":[{"startOffset":2206,"endOffset":2431,"count":0}],"isBlockCoverage":false},{"functionName":"getFileProtocolModuleFormat","ranges":[{"startOffset":2580,"endOffset":5490,"count":50},{"startOffset":2753,"endOffset":3994,"count":48},{"startOffset":2834,"endOffset":2869,"count":20},{"startOffset":2869,"endOffset":3006,"count":28},{"startOffset":3006,"endOffset":3369,"count":0},{"startOffset":3377,"endOffset":3502,"count":0},{"startOffset":3510,"endOffset":3982,"count":28},{"startOffset":3792,"endOffset":3945,"count":0},{"startOffset":3994,"endOffset":4016,"count":2},{"startOffset":4016,"endOffset":5189,"count":0},{"startOffset":5189,"endOffset":5268,"count":2},{"startOffset":5268,"endOffset":5489,"count":0}],"isBlockCoverage":true},{"functionName":"getHttpProtocolModuleFormat","ranges":[{"startOffset":5633,"endOffset":5988,"count":0}],"isBlockCoverage":false},{"functionName":"defaultGetFormatWithoutErrors","ranges":[{"startOffset":6140,"endOffset":6381,"count":50},{"startOffset":6296,"endOffset":6320,"count":0}],"isBlockCoverage":true},{"functionName":"defaultGetFormat","ranges":[{"startOffset":6533,"endOffset":6762,"count":0}],"isBlockCoverage":false}]},{"scriptId":"89","url":"node:internal/modules/esm/formats","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1861,"count":1}],"isBlockCoverage":false},{"functionName":"mimeToFormat","ranges":[{"startOffset":687,"endOffset":1035,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatOfExtensionlessFile","ranges":[{"startOffset":1413,"endOffset":1760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"90","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/node_modules/yargs-parser/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41467,"count":1},{"startOffset":40159,"endOffset":40203,"count":0},{"startOffset":40344,"endOffset":40542,"count":0},{"startOffset":40579,"endOffset":40583,"count":0}],"isBlockCoverage":true},{"functionName":"camelCase","ranges":[{"startOffset":96,"endOffset":904,"count":0}],"isBlockCoverage":false},{"functionName":"decamelize","ranges":[{"startOffset":905,"endOffset":1404,"count":0}],"isBlockCoverage":false},{"functionName":"looksLikeNumber","ranges":[{"startOffset":1405,"endOffset":1728,"count":2},{"startOffset":1482,"endOffset":1495,"count":0},{"startOffset":1535,"endOffset":1547,"count":0},{"startOffset":1590,"endOffset":1602,"count":0},{"startOffset":1649,"endOffset":1662,"count":0}],"isBlockCoverage":true},{"functionName":"tokenizeArgString","ranges":[{"startOffset":1730,"endOffset":2515,"count":2},{"startOffset":1882,"endOffset":2514,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1835,"endOffset":1874,"count":2},{"startOffset":1862,"endOffset":1870,"count":0}],"isBlockCoverage":true},{"functionName":"YargsParser","ranges":[{"startOffset":2552,"endOffset":2603,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":2608,"endOffset":38682,"count":2},{"startOffset":4252,"endOffset":4257,"count":0},{"startOffset":4405,"endOffset":4411,"count":0},{"startOffset":5215,"endOffset":5220,"count":0},{"startOffset":5858,"endOffset":5863,"count":0},{"startOffset":6019,"endOffset":6024,"count":0},{"startOffset":6182,"endOffset":6187,"count":0},{"startOffset":7286,"endOffset":7860,"count":0},{"startOffset":8585,"endOffset":8637,"count":0},{"startOffset":8745,"endOffset":9301,"count":0},{"startOffset":9349,"endOffset":9385,"count":0},{"startOffset":9387,"endOffset":9657,"count":0},{"startOffset":9766,"endOffset":10975,"count":0},{"startOffset":11020,"endOffset":11219,"count":0},{"startOffset":11262,"endOffset":11285,"count":0},{"startOffset":11287,"endOffset":11894,"count":0},{"startOffset":11937,"endOffset":11960,"count":0},{"startOffset":11962,"endOffset":14821,"count":0},{"startOffset":14865,"endOffset":14903,"count":0},{"startOffset":14904,"endOffset":14965,"count":0},{"startOffset":14967,"endOffset":15066,"count":0},{"startOffset":15102,"endOffset":15186,"count":0},{"startOffset":15245,"endOffset":15325,"count":0},{"startOffset":15690,"endOffset":15715,"count":0},{"startOffset":15893,"endOffset":15911,"count":0},{"startOffset":15925,"endOffset":15949,"count":0},{"startOffset":16096,"endOffset":16128,"count":0},{"startOffset":16130,"endOffset":16287,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5246,"endOffset":5824,"count":20},{"startOffset":5311,"endOffset":5320,"count":0},{"startOffset":5680,"endOffset":5742,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5380,"endOffset":5627,"count":170}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5889,"endOffset":5986,"count":44}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6050,"endOffset":6149,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6213,"endOffset":6312,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6375,"endOffset":6473,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6540,"endOffset":6641,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6735,"endOffset":6923,"count":40}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7031,"endOffset":7225,"count":84}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7432,"endOffset":7513,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7638,"endOffset":7834,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7969,"endOffset":8126,"count":8},{"startOffset":8018,"endOffset":8023,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8033,"endOffset":8114,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15758,"endOffset":15863,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15975,"endOffset":16043,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16169,"endOffset":16209,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16219,"endOffset":16275,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16384,"endOffset":16399,"count":40}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16410,"endOffset":16662,"count":46},{"startOffset":16479,"endOffset":16501,"count":0},{"startOffset":16503,"endOffset":16612,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16558,"endOffset":16581,"count":0}],"isBlockCoverage":false},{"functionName":"pushPositional","ranges":[{"startOffset":16683,"endOffset":16954,"count":2},{"startOffset":16837,"endOffset":16878,"count":0}],"isBlockCoverage":true},{"functionName":"eatNargs","ranges":[{"startOffset":16963,"endOffset":18584,"count":0}],"isBlockCoverage":false},{"functionName":"eatArray","ranges":[{"startOffset":18593,"endOffset":20377,"count":0}],"isBlockCoverage":false},{"functionName":"setArg","ranges":[{"startOffset":20386,"endOffset":22249,"count":2},{"startOffset":20444,"endOffset":20484,"count":0},{"startOffset":20486,"endOffset":20683,"count":0},{"startOffset":20858,"endOffset":21063,"count":1},{"startOffset":21100,"endOffset":21132,"count":0},{"startOffset":21134,"endOffset":21611,"count":0},{"startOffset":21666,"endOffset":21704,"count":0},{"startOffset":21706,"endOffset":22239,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20537,"endOffset":20616,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20903,"endOffset":21047,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21195,"endOffset":21595,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21806,"endOffset":22223,"count":0}],"isBlockCoverage":false},{"functionName":"addNewAlias","ranges":[{"startOffset":22258,"endOffset":22603,"count":0}],"isBlockCoverage":false},{"functionName":"processValue","ranges":[{"startOffset":22612,"endOffset":23717,"count":2},{"startOffset":22686,"endOffset":22739,"count":0},{"startOffset":22740,"endOffset":22789,"count":0},{"startOffset":22791,"endOffset":22862,"count":0},{"startOffset":22952,"endOffset":23054,"count":0},{"startOffset":23114,"endOffset":23175,"count":0},{"startOffset":23274,"endOffset":23327,"count":0},{"startOffset":23329,"endOffset":23381,"count":0},{"startOffset":23436,"endOffset":23473,"count":0},{"startOffset":23475,"endOffset":23681,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23124,"endOffset":23174,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23553,"endOffset":23594,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCoerceNumber","ranges":[{"startOffset":23726,"endOffset":24370,"count":13},{"startOffset":23826,"endOffset":23840,"count":0},{"startOffset":23858,"endOffset":23871,"count":0},{"startOffset":23925,"endOffset":23962,"count":5},{"startOffset":23963,"endOffset":23987,"count":4},{"startOffset":23989,"endOffset":24334,"count":2},{"startOffset":24057,"endOffset":24090,"count":0},{"startOffset":24091,"endOffset":24152,"count":0},{"startOffset":24258,"endOffset":24320,"count":0}],"isBlockCoverage":true},{"functionName":"setConfig","ranges":[{"startOffset":24379,"endOffset":26014,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24583,"endOffset":26002,"count":0}],"isBlockCoverage":false},{"functionName":"setConfigObject","ranges":[{"startOffset":26023,"endOffset":26699,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26104,"endOffset":26687,"count":3},{"startOffset":26201,"endOffset":26219,"count":0},{"startOffset":26273,"endOffset":26290,"count":1},{"startOffset":26291,"endOffset":26315,"count":1},{"startOffset":26316,"endOffset":26348,"count":0},{"startOffset":26350,"endOffset":26422,"count":0},{"startOffset":26504,"endOffset":26582,"count":1},{"startOffset":26547,"endOffset":26581,"count":0},{"startOffset":26584,"endOffset":26655,"count":2}],"isBlockCoverage":true},{"functionName":"setConfigObjects","ranges":[{"startOffset":26708,"endOffset":26952,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26832,"endOffset":26926,"count":3}],"isBlockCoverage":true},{"functionName":"applyEnvVars","ranges":[{"startOffset":26961,"endOffset":27837,"count":4},{"startOffset":27076,"endOffset":27145,"count":0},{"startOffset":27146,"endOffset":27150,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27226,"endOffset":27825,"count":0}],"isBlockCoverage":false},{"functionName":"applyCoercions","ranges":[{"startOffset":27846,"endOffset":28693,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27979,"endOffset":28681,"count":16},{"startOffset":28035,"endOffset":28667,"count":11},{"startOffset":28159,"endOffset":28649,"count":9},{"startOffset":28334,"endOffset":28339,"count":1},{"startOffset":28547,"endOffset":28627,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28355,"endOffset":28494,"count":14}],"isBlockCoverage":true},{"functionName":"setPlaceholderKeys","ranges":[{"startOffset":28702,"endOffset":28994,"count":0}],"isBlockCoverage":false},{"functionName":"applyDefaultsAndAliases","ranges":[{"startOffset":29003,"endOffset":29620,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29120,"endOffset":29608,"count":26},{"startOffset":29187,"endOffset":29594,"count":15},{"startOffset":29309,"endOffset":29331,"count":7},{"startOffset":29366,"endOffset":29371,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29381,"endOffset":29574,"count":10},{"startOffset":29479,"endOffset":29486,"count":0}],"isBlockCoverage":true},{"functionName":"hasKey","ranges":[{"startOffset":29629,"endOffset":30054,"count":39},{"startOffset":29981,"endOffset":29994,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29810,"endOffset":29876,"count":0}],"isBlockCoverage":false},{"functionName":"setKey","ranges":[{"startOffset":30063,"endOffset":32512,"count":27},{"startOffset":31162,"endOffset":31198,"count":0},{"startOffset":31200,"endOffset":31444,"count":0},{"startOffset":31484,"endOffset":31543,"count":0},{"startOffset":31588,"endOffset":32082,"count":0},{"startOffset":32141,"endOffset":32213,"count":4},{"startOffset":32189,"endOffset":32198,"count":0},{"startOffset":32213,"endOffset":32502,"count":23},{"startOffset":32271,"endOffset":32324,"count":0},{"startOffset":32325,"endOffset":32377,"count":0},{"startOffset":32380,"endOffset":32437,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30251,"endOffset":30866,"count":0}],"isBlockCoverage":false},{"functionName":"extendAliases","ranges":[{"startOffset":32521,"endOffset":34114,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32580,"endOffset":34102,"count":8},{"startOffset":32629,"endOffset":32634,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32644,"endOffset":34086,"count":68},{"startOffset":32729,"endOffset":32736,"count":16},{"startOffset":32736,"endOffset":32801,"count":52},{"startOffset":32801,"endOffset":32806,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32868,"endOffset":33295,"count":98},{"startOffset":32923,"endOffset":32963,"count":14},{"startOffset":32965,"endOffset":33273,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33357,"endOffset":33810,"count":98},{"startOffset":33413,"endOffset":33431,"count":62},{"startOffset":33432,"endOffset":33472,"count":0},{"startOffset":33474,"endOffset":33788,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33860,"endOffset":34066,"count":46}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33957,"endOffset":34041,"count":58}],"isBlockCoverage":true},{"functionName":"checkAllAliases","ranges":[{"startOffset":34123,"endOffset":34408,"count":69},{"startOffset":34218,"endOffset":34223,"count":18},{"startOffset":34373,"endOffset":34389,"count":22},{"startOffset":34390,"endOffset":34397,"count":47}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34317,"endOffset":34342,"count":103}],"isBlockCoverage":true},{"functionName":"hasAnyFlag","ranges":[{"startOffset":34417,"endOffset":34715,"count":0}],"isBlockCoverage":false},{"functionName":"hasFlagsMatching","ranges":[{"startOffset":34724,"endOffset":35004,"count":0}],"isBlockCoverage":false},{"functionName":"hasAllShortFlags","ranges":[{"startOffset":35013,"endOffset":35859,"count":0}],"isBlockCoverage":false},{"functionName":"isUnknownOptionAsArg","ranges":[{"startOffset":35868,"endOffset":35999,"count":2},{"startOffset":35965,"endOffset":35988,"count":0}],"isBlockCoverage":true},{"functionName":"isUnknownOption","ranges":[{"startOffset":36008,"endOffset":36666,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":36675,"endOffset":37002,"count":0}],"isBlockCoverage":false},{"functionName":"defaultForType","ranges":[{"startOffset":37011,"endOffset":37243,"count":0}],"isBlockCoverage":false},{"functionName":"guessType","ranges":[{"startOffset":37252,"endOffset":37702,"count":0}],"isBlockCoverage":false},{"functionName":"isUndefined","ranges":[{"startOffset":37711,"endOffset":37786,"count":2}],"isBlockCoverage":true},{"functionName":"checkConfiguration","ranges":[{"startOffset":37795,"endOffset":38367,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37870,"endOffset":38355,"count":0}],"isBlockCoverage":false},{"functionName":"combineAliases","ranges":[{"startOffset":38685,"endOffset":39887,"count":2},{"startOffset":39025,"endOffset":39513,"count":40},{"startOffset":39091,"endOffset":39503,"count":380},{"startOffset":39284,"endOffset":39489,"count":0},{"startOffset":39503,"endOffset":39513,"count":380},{"startOffset":39513,"endOffset":39519,"count":40}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38846,"endOffset":38924,"count":40}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39149,"endOffset":39243,"count":810}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39544,"endOffset":39862,"count":40}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39607,"endOffset":39682,"count":86}],"isBlockCoverage":true},{"functionName":"increment","ranges":[{"startOffset":39888,"endOffset":39962,"count":27},{"startOffset":39945,"endOffset":39955,"count":0}],"isBlockCoverage":true},{"functionName":"sanitizeKey","ranges":[{"startOffset":39963,"endOffset":40067,"count":27},{"startOffset":40028,"endOffset":40049,"count":0}],"isBlockCoverage":true},{"functionName":"env","ranges":[{"startOffset":40649,"endOffset":40682,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":40780,"endOffset":41087,"count":0}],"isBlockCoverage":false},{"functionName":"Parser","ranges":[{"startOffset":41112,"endOffset":41220,"count":0}],"isBlockCoverage":false},{"functionName":"yargsParser.detailed","ranges":[{"startOffset":41245,"endOffset":41315,"count":2}],"isBlockCoverage":true}]},{"scriptId":"91","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/cli/run-option-metadata.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2203,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1613,"endOffset":1923,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1763,"endOffset":1905,"count":42},{"startOffset":1834,"endOffset":1839,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1861,"endOffset":1899,"count":23}],"isBlockCoverage":true},{"functionName":"exports.isMochaFlag","ranges":[{"startOffset":2134,"endOffset":2201,"count":10}],"isBlockCoverage":true}]},{"scriptId":"92","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/cli/one-and-dones.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1549,"count":1}],"isBlockCoverage":true},{"functionName":"showKeys","ranges":[{"startOffset":510,"endOffset":996,"count":0}],"isBlockCoverage":false},{"functionName":"list-interfaces","ranges":[{"startOffset":1181,"endOffset":1224,"count":0}],"isBlockCoverage":false},{"functionName":"list-reporters","ranges":[{"startOffset":1309,"endOffset":1351,"count":0}],"isBlockCoverage":false}]},{"scriptId":"93","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/mocha.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38091,"count":1}],"isBlockCoverage":true},{"functionName":"exports.afterEach","ranges":[{"startOffset":2162,"endOffset":2278,"count":0}],"isBlockCoverage":false},{"functionName":"exports.after","ranges":[{"startOffset":2296,"endOffset":2413,"count":0}],"isBlockCoverage":false},{"functionName":"exports.beforeEach","ranges":[{"startOffset":2436,"endOffset":2538,"count":0}],"isBlockCoverage":false},{"functionName":"exports.before","ranges":[{"startOffset":2557,"endOffset":2660,"count":0}],"isBlockCoverage":false},{"functionName":"exports.describe","ranges":[{"startOffset":2681,"endOffset":2781,"count":0}],"isBlockCoverage":false},{"functionName":"exports.describe.only","ranges":[{"startOffset":2807,"endOffset":2924,"count":0}],"isBlockCoverage":false},{"functionName":"exports.describe.skip","ranges":[{"startOffset":2950,"endOffset":3067,"count":0}],"isBlockCoverage":false},{"functionName":"exports.it","ranges":[{"startOffset":3082,"endOffset":3175,"count":0}],"isBlockCoverage":false},{"functionName":"exports.it.only","ranges":[{"startOffset":3195,"endOffset":3293,"count":0}],"isBlockCoverage":false},{"functionName":"exports.it.skip","ranges":[{"startOffset":3313,"endOffset":3411,"count":0}],"isBlockCoverage":false},{"functionName":"exports.run","ranges":[{"startOffset":3712,"endOffset":3781,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha","ranges":[{"startOffset":6063,"endOffset":8426,"count":1},{"startOffset":6777,"endOffset":6780,"count":0},{"startOffset":6834,"endOffset":6874,"count":0},{"startOffset":7220,"endOffset":7264,"count":0},{"startOffset":8272,"endOffset":8336,"count":0},{"startOffset":8341,"endOffset":8424,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7116,"endOffset":7185,"count":14},{"startOffset":7155,"endOffset":7181,"count":1}],"isBlockCoverage":true},{"functionName":"Mocha.bail","ranges":[{"startOffset":8665,"endOffset":8734,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.addFile","ranges":[{"startOffset":9079,"endOffset":9138,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.reporter","ranges":[{"startOffset":9715,"endOffset":10867,"count":1},{"startOffset":9800,"endOffset":9840,"count":0},{"startOffset":9880,"endOffset":9889,"count":0},{"startOffset":10130,"endOffset":10644,"count":0}],"isBlockCoverage":true},{"functionName":"Mocha.ui","ranges":[{"startOffset":11201,"endOffset":11708,"count":1},{"startOffset":11270,"endOffset":11299,"count":0},{"startOffset":11319,"endOffset":11327,"count":0},{"startOffset":11397,"endOffset":11559,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11634,"endOffset":11688,"count":1}],"isBlockCoverage":true},{"functionName":"Mocha.loadFiles","ranges":[{"startOffset":12243,"endOffset":12579,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.loadFilesAsync","ranges":[{"startOffset":13433,"endOffset":13874,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13594,"endOffset":13679,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13685,"endOffset":13849,"count":1}],"isBlockCoverage":true},{"functionName":"Mocha.unloadFile","ranges":[{"startOffset":14088,"endOffset":14304,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.unloadFiles","ranges":[{"startOffset":14746,"endOffset":15110,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.fgrep","ranges":[{"startOffset":15465,"endOffset":15565,"count":1},{"startOffset":15516,"endOffset":15564,"count":0}],"isBlockCoverage":true},{"functionName":"Mocha.grep","ranges":[{"startOffset":16706,"endOffset":16994,"count":1},{"startOffset":16748,"endOffset":16938,"count":0}],"isBlockCoverage":true},{"functionName":"Mocha.invert","ranges":[{"startOffset":17265,"endOffset":17325,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.checkLeaks","ranges":[{"startOffset":17621,"endOffset":17711,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.cleanReferencesAfterRun","ranges":[{"startOffset":18109,"endOffset":18231,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.dispose","ranges":[{"startOffset":18526,"endOffset":18861,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.fullTrace","ranges":[{"startOffset":19124,"endOffset":19211,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.global","ranges":[{"startOffset":19632,"endOffset":19847,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19757,"endOffset":19828,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.color","ranges":[{"startOffset":20229,"endOffset":20304,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.inlineDiffs","ranges":[{"startOffset":20604,"endOffset":20697,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.diff","ranges":[{"startOffset":20954,"endOffset":21026,"count":1}],"isBlockCoverage":true},{"functionName":"Mocha.timeout","ranges":[{"startOffset":21599,"endOffset":21663,"count":1}],"isBlockCoverage":true},{"functionName":"Mocha.retries","ranges":[{"startOffset":22032,"endOffset":22096,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.slow","ranges":[{"startOffset":22473,"endOffset":22534,"count":1}],"isBlockCoverage":true},{"functionName":"Mocha.asyncOnly","ranges":[{"startOffset":22825,"endOffset":22912,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.noHighlighting","ranges":[{"startOffset":23054,"endOffset":23122,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.allowUncaught","ranges":[{"startOffset":23393,"endOffset":23492,"count":0}],"isBlockCoverage":false},{"functionName":"delay","ranges":[{"startOffset":23759,"endOffset":23823,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.dryRun","ranges":[{"startOffset":24070,"endOffset":24148,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.failZero","ranges":[{"startOffset":24399,"endOffset":24483,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.forbidOnly","ranges":[{"startOffset":24748,"endOffset":24838,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.forbidPending","ranges":[{"startOffset":25124,"endOffset":25223,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha._guardRunningStateTransition","ranges":[{"startOffset":25390,"endOffset":26074,"count":1},{"startOffset":25447,"endOffset":25624,"count":0},{"startOffset":25731,"endOffset":26072,"count":0}],"isBlockCoverage":true},{"functionName":"Mocha.run","ranges":[{"startOffset":27096,"endOffset":29423,"count":1},{"startOffset":27216,"endOffset":27281,"count":0},{"startOffset":27331,"endOffset":27358,"count":0},{"startOffset":28024,"endOffset":28076,"count":0},{"startOffset":28176,"endOffset":28235,"count":0}],"isBlockCoverage":true},{"functionName":"done","ranges":[{"startOffset":28363,"endOffset":28676,"count":0}],"isBlockCoverage":false},{"functionName":"runAsync","ranges":[{"startOffset":28698,"endOffset":29130,"count":1},{"startOffset":28814,"endOffset":28858,"count":0},{"startOffset":28959,"endOffset":29037,"count":0},{"startOffset":29039,"endOffset":29129,"count":0}],"isBlockCoverage":true},{"functionName":"rootHooks","ranges":[{"startOffset":29583,"endOffset":30141,"count":0}],"isBlockCoverage":false},{"functionName":"parallelMode","ranges":[{"startOffset":30822,"endOffset":31629,"count":0}],"isBlockCoverage":false},{"functionName":"lazyLoadFiles","ranges":[{"startOffset":32058,"endOffset":32188,"count":1}],"isBlockCoverage":true},{"functionName":"globalSetup","ranges":[{"startOffset":32480,"endOffset":32679,"count":1}],"isBlockCoverage":true},{"functionName":"globalTeardown","ranges":[{"startOffset":32983,"endOffset":33206,"count":1}],"isBlockCoverage":true},{"functionName":"runGlobalSetup","ranges":[{"startOffset":33679,"endOffset":33972,"count":0}],"isBlockCoverage":false},{"functionName":"runGlobalTeardown","ranges":[{"startOffset":34449,"endOffset":34765,"count":0}],"isBlockCoverage":false},{"functionName":"_runGlobalFixtures","ranges":[{"startOffset":35039,"endOffset":35216,"count":0}],"isBlockCoverage":false},{"functionName":"enableGlobalSetup","ranges":[{"startOffset":35444,"endOffset":35558,"count":1}],"isBlockCoverage":true},{"functionName":"enableGlobalTeardown","ranges":[{"startOffset":35795,"endOffset":35919,"count":1}],"isBlockCoverage":true},{"functionName":"hasGlobalSetupFixtures","ranges":[{"startOffset":36079,"endOffset":36167,"count":1}],"isBlockCoverage":true},{"functionName":"hasGlobalTeardownFixtures","ranges":[{"startOffset":36335,"endOffset":36433,"count":0}],"isBlockCoverage":false}]},{"scriptId":"94","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/escape-string-regexp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":457,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":455,"count":0}],"isBlockCoverage":false}]},{"scriptId":"95","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/reporters/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":946,"count":1}],"isBlockCoverage":true}]},{"scriptId":"96","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/reporters/base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12917,"count":1},{"startOffset":1078,"endOffset":1119,"count":0},{"startOffset":2421,"endOffset":2480,"count":0}],"isBlockCoverage":true},{"functionName":"getBrowserWindowSize","ranges":[{"startOffset":436,"endOffset":636,"count":0}],"isBlockCoverage":false},{"functionName":"exports.color","ranges":[{"startOffset":2116,"endOffset":2265,"count":18},{"startOffset":2165,"endOffset":2194,"count":0}],"isBlockCoverage":true},{"functionName":"hide","ranges":[{"startOffset":2668,"endOffset":2736,"count":0}],"isBlockCoverage":false},{"functionName":"show","ranges":[{"startOffset":2747,"endOffset":2815,"count":0}],"isBlockCoverage":false},{"functionName":"deleteLine","ranges":[{"startOffset":2832,"endOffset":2898,"count":0}],"isBlockCoverage":false},{"functionName":"beginningOfLine","ranges":[{"startOffset":2920,"endOffset":2986,"count":0}],"isBlockCoverage":false},{"functionName":"CR","ranges":[{"startOffset":2995,"endOffset":3158,"count":0}],"isBlockCoverage":false},{"functionName":"exports.showDiff","ranges":[{"startOffset":3198,"endOffset":3346,"count":2}],"isBlockCoverage":true},{"functionName":"stringifyDiffObjs","ranges":[{"startOffset":3350,"endOffset":3555,"count":1},{"startOffset":3418,"endOffset":3450,"count":0}],"isBlockCoverage":true},{"functionName":"exports.generateDiff","ranges":[{"startOffset":3866,"endOffset":4645,"count":0}],"isBlockCoverage":false},{"functionName":"getFullErrorStack","ranges":[{"startOffset":4828,"endOffset":5757,"count":0}],"isBlockCoverage":false},{"functionName":"exports.list","ranges":[{"startOffset":5985,"endOffset":7454,"count":0}],"isBlockCoverage":false},{"functionName":"Base","ranges":[{"startOffset":7754,"endOffset":8837,"count":1},{"startOffset":7842,"endOffset":7899,"count":0},{"startOffset":7925,"endOffset":7930,"count":0},{"startOffset":8090,"endOffset":8132,"count":0},{"startOffset":8169,"endOffset":8202,"count":0},{"startOffset":8204,"endOffset":8259,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8290,"endOffset":8502,"count":4},{"startOffset":8345,"endOffset":8379,"count":0},{"startOffset":8422,"endOffset":8458,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8535,"endOffset":8833,"count":2},{"startOffset":8581,"endOffset":8618,"count":1},{"startOffset":8672,"endOffset":8695,"count":0},{"startOffset":8697,"endOffset":8769,"count":0}],"isBlockCoverage":true},{"functionName":"Base.epilogue","ranges":[{"startOffset":8982,"endOffset":9601,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":9727,"endOffset":9828,"count":0}],"isBlockCoverage":false},{"functionName":"inlineDiff","ranges":[{"startOffset":10000,"endOffset":10558,"count":0}],"isBlockCoverage":false},{"functionName":"unifiedDiff","ranges":[{"startOffset":10738,"endOffset":11540,"count":0}],"isBlockCoverage":false},{"functionName":"errorDiff","ranges":[{"startOffset":11685,"endOffset":12037,"count":0}],"isBlockCoverage":false},{"functionName":"colorLines","ranges":[{"startOffset":12180,"endOffset":12325,"count":0}],"isBlockCoverage":false},{"functionName":"sameType","ranges":[{"startOffset":12538,"endOffset":12619,"count":2}],"isBlockCoverage":true}]},{"scriptId":"97","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7236,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":174,"endOffset":223,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":301,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":432,"endOffset":480,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":567,"endOffset":624,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":702,"endOffset":750,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":835,"endOffset":890,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":972,"endOffset":1028,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1104,"endOffset":1149,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1226,"endOffset":1273,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1354,"endOffset":1405,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1484,"endOffset":1534,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1613,"endOffset":1663,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1744,"endOffset":1796,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1875,"endOffset":1925,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1999,"endOffset":2044,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2128,"endOffset":2184,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2272,"endOffset":2332,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2412,"endOffset":2464,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2552,"endOffset":2609,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2697,"endOffset":2754,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":4100,"endOffset":4197,"count":1},{"startOffset":4174,"endOffset":4194,"count":0}],"isBlockCoverage":true}]},{"scriptId":"98","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/diff/base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30923,"count":1}],"isBlockCoverage":true},{"functionName":"Diff","ranges":[{"startOffset":158,"endOffset":176,"count":7}],"isBlockCoverage":true},{"functionName":"diff","ranges":[{"startOffset":260,"endOffset":4471,"count":0}],"isBlockCoverage":false},{"functionName":"pushComponent","ranges":[{"startOffset":4546,"endOffset":5074,"count":0}],"isBlockCoverage":false},{"functionName":"extractCommon","ranges":[{"startOffset":5149,"endOffset":5720,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":5788,"endOffset":6029,"count":0}],"isBlockCoverage":false},{"functionName":"removeEmpty","ranges":[{"startOffset":6102,"endOffset":6280,"count":0}],"isBlockCoverage":false},{"functionName":"castInput","ranges":[{"startOffset":6351,"endOffset":6400,"count":0}],"isBlockCoverage":false},{"functionName":"tokenize","ranges":[{"startOffset":6470,"endOffset":6528,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":6594,"endOffset":6647,"count":0}],"isBlockCoverage":false},{"functionName":"buildValues","ranges":[{"startOffset":6652,"endOffset":8673,"count":0}],"isBlockCoverage":false},{"functionName":"clonePath","ranges":[{"startOffset":8675,"endOffset":8785,"count":0}],"isBlockCoverage":false}]},{"scriptId":"99","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/diff/character.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1671,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":327,"endOffset":424,"count":1},{"startOffset":401,"endOffset":421,"count":0}],"isBlockCoverage":true},{"functionName":"diffChars","ranges":[{"startOffset":688,"endOffset":789,"count":0}],"isBlockCoverage":false}]},{"scriptId":"100","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/diff/word.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8786,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":464,"endOffset":561,"count":1},{"startOffset":538,"endOffset":558,"count":0}],"isBlockCoverage":true},{"functionName":"wordDiff.equals","ranges":[{"startOffset":1546,"endOffset":1789,"count":0}],"isBlockCoverage":false},{"functionName":"wordDiff.tokenize","ranges":[{"startOffset":1812,"endOffset":2493,"count":0}],"isBlockCoverage":false},{"functionName":"diffWords","ranges":[{"startOffset":2496,"endOffset":2853,"count":0}],"isBlockCoverage":false},{"functionName":"diffWordsWithSpace","ranges":[{"startOffset":2855,"endOffset":2960,"count":0}],"isBlockCoverage":false}]},{"scriptId":"101","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/util/params.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1752,"count":1}],"isBlockCoverage":true},{"functionName":"generateOptions","ranges":[{"startOffset":174,"endOffset":502,"count":0}],"isBlockCoverage":false}]},{"scriptId":"102","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/diff/line.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5686,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":460,"endOffset":557,"count":1},{"startOffset":534,"endOffset":554,"count":0}],"isBlockCoverage":true},{"functionName":"lineDiff.tokenize","ranges":[{"startOffset":826,"endOffset":1483,"count":0}],"isBlockCoverage":false},{"functionName":"diffLines","ranges":[{"startOffset":1486,"endOffset":1584,"count":0}],"isBlockCoverage":false},{"functionName":"diffTrimmedLines","ranges":[{"startOffset":1586,"endOffset":1956,"count":0}],"isBlockCoverage":false}]},{"scriptId":"103","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/diff/sentence.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2090,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":334,"endOffset":431,"count":1},{"startOffset":408,"endOffset":428,"count":0}],"isBlockCoverage":true},{"functionName":"sentenceDiff.tokenize","ranges":[{"startOffset":716,"endOffset":783,"count":0}],"isBlockCoverage":false},{"functionName":"diffSentences","ranges":[{"startOffset":786,"endOffset":892,"count":0}],"isBlockCoverage":false}]},{"scriptId":"104","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/diff/css.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1966,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":317,"endOffset":414,"count":1},{"startOffset":391,"endOffset":411,"count":0}],"isBlockCoverage":true},{"functionName":"cssDiff.tokenize","ranges":[{"startOffset":679,"endOffset":738,"count":0}],"isBlockCoverage":false},{"functionName":"diffCss","ranges":[{"startOffset":741,"endOffset":836,"count":0}],"isBlockCoverage":false}]},{"scriptId":"105","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/diff/json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12937,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":440,"endOffset":537,"count":1},{"startOffset":514,"endOffset":534,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":539,"endOffset":917,"count":0}],"isBlockCoverage":false},{"functionName":"jsonDiff.castInput","ranges":[{"startOffset":1625,"endOffset":2249,"count":0}],"isBlockCoverage":false},{"functionName":"jsonDiff.equals","ranges":[{"startOffset":2270,"endOffset":2565,"count":0}],"isBlockCoverage":false},{"functionName":"diffJson","ranges":[{"startOffset":2568,"endOffset":2663,"count":0}],"isBlockCoverage":false},{"functionName":"canonicalize","ranges":[{"startOffset":2859,"endOffset":4359,"count":0}],"isBlockCoverage":false}]},{"scriptId":"106","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/diff/array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2300,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":325,"endOffset":422,"count":1},{"startOffset":399,"endOffset":419,"count":0}],"isBlockCoverage":true},{"functionName":"arrayDiff.tokenize","ranges":[{"startOffset":695,"endOffset":739,"count":0}],"isBlockCoverage":false},{"functionName":"arrayDiff.join.arrayDiff.removeEmpty","ranges":[{"startOffset":783,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"diffArrays","ranges":[{"startOffset":822,"endOffset":922,"count":0}],"isBlockCoverage":false}]},{"scriptId":"107","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/patch/apply.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19926,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":450,"endOffset":547,"count":1},{"startOffset":524,"endOffset":544,"count":0}],"isBlockCoverage":true},{"functionName":"applyPatch","ranges":[{"startOffset":573,"endOffset":4807,"count":0}],"isBlockCoverage":false},{"functionName":"applyPatches","ranges":[{"startOffset":4872,"endOffset":5728,"count":0}],"isBlockCoverage":false}]},{"scriptId":"108","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/patch/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17908,"count":1}],"isBlockCoverage":true},{"functionName":"parsePatch","ranges":[{"startOffset":164,"endOffset":4730,"count":0}],"isBlockCoverage":false}]},{"scriptId":"109","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/util/distance-iterator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4641,"count":1}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":340,"endOffset":1483,"count":0}],"isBlockCoverage":false}]},{"scriptId":"110","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/patch/merge.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":50907,"count":1}],"isBlockCoverage":true},{"functionName":"_toConsumableArray","ranges":[{"startOffset":482,"endOffset":635,"count":0}],"isBlockCoverage":false},{"functionName":"_nonIterableSpread","ranges":[{"startOffset":637,"endOffset":827,"count":0}],"isBlockCoverage":false},{"functionName":"_unsupportedIterableToArray","ranges":[{"startOffset":829,"endOffset":1245,"count":0}],"isBlockCoverage":false},{"functionName":"_iterableToArray","ranges":[{"startOffset":1247,"endOffset":1377,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayWithoutHoles","ranges":[{"startOffset":1379,"endOffset":1470,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayLikeToArray","ranges":[{"startOffset":1472,"endOffset":1655,"count":0}],"isBlockCoverage":false},{"functionName":"calcLineCount","ranges":[{"startOffset":1681,"endOffset":2135,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":2137,"endOffset":5016,"count":0}],"isBlockCoverage":false},{"functionName":"loadPatch","ranges":[{"startOffset":5018,"endOffset":5874,"count":0}],"isBlockCoverage":false},{"functionName":"fileNameChanged","ranges":[{"startOffset":5876,"endOffset":5982,"count":0}],"isBlockCoverage":false},{"functionName":"selectField","ranges":[{"startOffset":5984,"endOffset":6172,"count":0}],"isBlockCoverage":false},{"functionName":"hunkBefore","ranges":[{"startOffset":6174,"endOffset":6301,"count":0}],"isBlockCoverage":false},{"functionName":"cloneHunk","ranges":[{"startOffset":6303,"endOffset":6502,"count":0}],"isBlockCoverage":false},{"functionName":"mergeLines","ranges":[{"startOffset":6504,"endOffset":9249,"count":0}],"isBlockCoverage":false},{"functionName":"mutualChange","ranges":[{"startOffset":9251,"endOffset":11898,"count":0}],"isBlockCoverage":false},{"functionName":"removal","ranges":[{"startOffset":11900,"endOffset":12608,"count":0}],"isBlockCoverage":false},{"functionName":"conflict","ranges":[{"startOffset":12610,"endOffset":12754,"count":0}],"isBlockCoverage":false},{"functionName":"insertLeading","ranges":[{"startOffset":12756,"endOffset":12979,"count":0}],"isBlockCoverage":false},{"functionName":"insertTrailing","ranges":[{"startOffset":12981,"endOffset":13145,"count":0}],"isBlockCoverage":false},{"functionName":"collectChange","ranges":[{"startOffset":13147,"endOffset":13641,"count":0}],"isBlockCoverage":false},{"functionName":"collectContext","ranges":[{"startOffset":13643,"endOffset":14910,"count":0}],"isBlockCoverage":false},{"functionName":"allRemoves","ranges":[{"startOffset":14912,"endOffset":15044,"count":0}],"isBlockCoverage":false},{"functionName":"skipRemoveSuperset","ranges":[{"startOffset":15046,"endOffset":15360,"count":0}],"isBlockCoverage":false},{"functionName":"calcOldNewLineCount","ranges":[{"startOffset":15362,"endOffset":16317,"count":0}],"isBlockCoverage":false}]},{"scriptId":"111","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/patch/create.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23453,"count":1}],"isBlockCoverage":true},{"functionName":"_toConsumableArray","ranges":[{"startOffset":410,"endOffset":563,"count":0}],"isBlockCoverage":false},{"functionName":"_nonIterableSpread","ranges":[{"startOffset":565,"endOffset":755,"count":0}],"isBlockCoverage":false},{"functionName":"_unsupportedIterableToArray","ranges":[{"startOffset":757,"endOffset":1173,"count":0}],"isBlockCoverage":false},{"functionName":"_iterableToArray","ranges":[{"startOffset":1175,"endOffset":1305,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayWithoutHoles","ranges":[{"startOffset":1307,"endOffset":1398,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayLikeToArray","ranges":[{"startOffset":1400,"endOffset":1583,"count":0}],"isBlockCoverage":false},{"functionName":"structuredPatch","ranges":[{"startOffset":1609,"endOffset":6811,"count":0}],"isBlockCoverage":false},{"functionName":"formatPatch","ranges":[{"startOffset":6813,"endOffset":7832,"count":0}],"isBlockCoverage":false},{"functionName":"createTwoFilesPatch","ranges":[{"startOffset":7834,"endOffset":8051,"count":0}],"isBlockCoverage":false},{"functionName":"createPatch","ranges":[{"startOffset":8053,"endOffset":8231,"count":0}],"isBlockCoverage":false}]},{"scriptId":"112","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/util/array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2026,"count":1}],"isBlockCoverage":true},{"functionName":"arrayEqual","ranges":[{"startOffset":207,"endOffset":322,"count":0}],"isBlockCoverage":false},{"functionName":"arrayStartsWith","ranges":[{"startOffset":324,"endOffset":548,"count":0}],"isBlockCoverage":false}]},{"scriptId":"113","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/convert/dmp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2255,"count":1}],"isBlockCoverage":true},{"functionName":"convertChangesToDMP","ranges":[{"startOffset":248,"endOffset":609,"count":0}],"isBlockCoverage":false}]},{"scriptId":"114","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/convert/xml.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3359,"count":1}],"isBlockCoverage":true},{"functionName":"convertChangesToXML","ranges":[{"startOffset":182,"endOffset":613,"count":0}],"isBlockCoverage":false},{"functionName":"escapeHTML","ranges":[{"startOffset":615,"endOffset":793,"count":0}],"isBlockCoverage":false}]},{"scriptId":"115","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3024,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":792,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":916,"endOffset":1999,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2097,"endOffset":2414,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2511,"endOffset":2847,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2883,"endOffset":3023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"116","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17611,"count":1}],"isBlockCoverage":true},{"functionName":"exports.escape","ranges":[{"startOffset":797,"endOffset":879,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isString","ranges":[{"startOffset":1012,"endOffset":1064,"count":16}],"isBlockCoverage":true},{"functionName":"exports.slug","ranges":[{"startOffset":1188,"endOffset":1321,"count":0}],"isBlockCoverage":false},{"functionName":"exports.clean","ranges":[{"startOffset":1473,"endOffset":2125,"count":0}],"isBlockCoverage":false},{"functionName":"emptyRepresentation","ranges":[{"startOffset":2587,"endOffset":2829,"count":0}],"isBlockCoverage":false},{"functionName":"canonicalType","ranges":[{"startOffset":3685,"endOffset":3994,"count":9},{"startOffset":3744,"endOffset":3773,"count":0},{"startOffset":3799,"endOffset":3823,"count":0},{"startOffset":3857,"endOffset":3883,"count":0}],"isBlockCoverage":true},{"functionName":"type","ranges":[{"startOffset":4617,"endOffset":5093,"count":0}],"isBlockCoverage":false},{"functionName":"exports.stringify","ranges":[{"startOffset":5713,"endOffset":6740,"count":2},{"startOffset":5864,"endOffset":6085,"count":0},{"startOffset":6224,"endOffset":6252,"count":0},{"startOffset":6254,"endOffset":6412,"count":0},{"startOffset":6464,"endOffset":6739,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6293,"endOffset":6373,"count":0}],"isBlockCoverage":false},{"functionName":"jsonStringify","ranges":[{"startOffset":6901,"endOffset":8944,"count":2},{"startOffset":7045,"endOffset":7067,"count":0},{"startOffset":7133,"endOffset":7138,"count":0},{"startOffset":7139,"endOffset":7144,"count":0},{"startOffset":7180,"endOffset":7185,"count":0},{"startOffset":7186,"endOffset":7191,"count":0},{"startOffset":7252,"endOffset":7267,"count":0},{"startOffset":7274,"endOffset":7302,"count":0},{"startOffset":8527,"endOffset":8930,"count":0},{"startOffset":8931,"endOffset":8936,"count":0}],"isBlockCoverage":true},{"functionName":"repeat","ranges":[{"startOffset":7332,"endOffset":7392,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":7396,"endOffset":8501,"count":2},{"startOffset":7463,"endOffset":7475,"count":0},{"startOffset":7482,"endOffset":7545,"count":0},{"startOffset":7552,"endOffset":7565,"count":0},{"startOffset":7572,"endOffset":7654,"count":0},{"startOffset":7661,"endOffset":7676,"count":0},{"startOffset":7683,"endOffset":7697,"count":0},{"startOffset":7704,"endOffset":7718,"count":0},{"startOffset":7774,"endOffset":7798,"count":0},{"startOffset":7819,"endOffset":7825,"count":0},{"startOffset":7877,"endOffset":7942,"count":0},{"startOffset":7949,"endOffset":8094,"count":0},{"startOffset":8101,"endOffset":8328,"count":0},{"startOffset":8335,"endOffset":8465,"count":0}],"isBlockCoverage":true},{"functionName":"canonicalize","ranges":[{"startOffset":9846,"endOffset":11434,"count":0}],"isBlockCoverage":false},{"functionName":"exports.stackTraceFilter","ranges":[{"startOffset":11805,"endOffset":13136,"count":1},{"startOffset":11919,"endOffset":11936,"count":0},{"startOffset":12026,"endOffset":12170,"count":0}],"isBlockCoverage":true},{"functionName":"isMochaInternal","ranges":[{"startOffset":12174,"endOffset":12382,"count":16},{"startOffset":12282,"endOffset":12324,"count":8},{"startOffset":12325,"endOffset":12371,"count":8}],"isBlockCoverage":true},{"functionName":"isNodeInternal","ranges":[{"startOffset":12386,"endOffset":12670,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12681,"endOffset":13133,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12757,"endOffset":13093,"count":16},{"startOffset":12814,"endOffset":12887,"count":8},{"startOffset":12889,"endOffset":12919,"count":0},{"startOffset":12919,"endOffset":12990,"count":8},{"startOffset":12990,"endOffset":13044,"count":6},{"startOffset":13044,"endOffset":13092,"count":8}],"isBlockCoverage":true},{"functionName":"isPromise","ranges":[{"startOffset":13281,"endOffset":13418,"count":0}],"isBlockCoverage":false},{"functionName":"clamp","ranges":[{"startOffset":13656,"endOffset":13744,"count":17}],"isBlockCoverage":true},{"functionName":"exports.noop","ranges":[{"startOffset":13797,"endOffset":13811,"count":0}],"isBlockCoverage":false},{"functionName":"exports.createMap","ranges":[{"startOffset":14716,"endOffset":14851,"count":5}],"isBlockCoverage":true},{"functionName":"exports.defineConstants","ranges":[{"startOffset":15341,"endOffset":15554,"count":5},{"startOffset":15425,"endOffset":15504,"count":0}],"isBlockCoverage":true},{"functionName":"cwd","ranges":[{"startOffset":15679,"endOffset":15721,"count":4}],"isBlockCoverage":true},{"functionName":"isBrowser","ranges":[{"startOffset":15871,"endOffset":15930,"count":2}],"isBlockCoverage":true},{"functionName":"castArray","ranges":[{"startOffset":16435,"endOffset":16738,"count":5},{"startOffset":16490,"endOffset":16510,"count":0},{"startOffset":16533,"endOffset":16557,"count":0},{"startOffset":16648,"endOffset":16677,"count":0},{"startOffset":16718,"endOffset":16737,"count":0}],"isBlockCoverage":true},{"functionName":"exports.uniqueID","ranges":[{"startOffset":17090,"endOffset":17214,"count":17},{"startOffset":17144,"endOffset":17199,"count":357}],"isBlockCoverage":true},{"functionName":"exports.assignNewMochaID","ranges":[{"startOffset":17244,"endOffset":17393,"count":17}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":17341,"endOffset":17371,"count":0}],"isBlockCoverage":false},{"functionName":"exports.getMochaID","ranges":[{"startOffset":17532,"endOffset":17609,"count":0}],"isBlockCoverage":false}]},{"scriptId":"117","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/he/he.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":100883,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":61,"endOffset":100874,"count":1},{"startOffset":500,"endOffset":535,"count":0},{"startOffset":100447,"endOffset":100481,"count":0},{"startOffset":100482,"endOffset":100497,"count":0},{"startOffset":100501,"endOffset":100547,"count":0},{"startOffset":100689,"endOffset":100813,"count":0},{"startOffset":100816,"endOffset":100871,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":92347,"endOffset":92434,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":92453,"endOffset":92630,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":92646,"endOffset":92997,"count":0}],"isBlockCoverage":false},{"functionName":"codePointToSymbol","ranges":[{"startOffset":93093,"endOffset":94044,"count":0}],"isBlockCoverage":false},{"functionName":"hexEscape","ranges":[{"startOffset":94064,"endOffset":94149,"count":0}],"isBlockCoverage":false},{"functionName":"decEscape","ranges":[{"startOffset":94169,"endOffset":94226,"count":0}],"isBlockCoverage":false},{"functionName":"parseError","ranges":[{"startOffset":94247,"endOffset":94311,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":94409,"endOffset":97437,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":97673,"endOffset":99781,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":99934,"endOffset":100103,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":100512,"endOffset":100542,"count":0}],"isBlockCoverage":false}]},{"scriptId":"118","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3065,"count":1},{"startOffset":254,"endOffset":278,"count":0},{"startOffset":382,"endOffset":406,"count":0}],"isBlockCoverage":true},{"functionName":"envForceColor","ranges":[{"startOffset":408,"endOffset":672,"count":2},{"startOffset":462,"endOffset":670,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":674,"endOffset":832,"count":2},{"startOffset":725,"endOffset":745,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":834,"endOffset":2729,"count":2},{"startOffset":990,"endOffset":1031,"count":0},{"startOffset":1081,"endOffset":1099,"count":0},{"startOffset":1125,"endOffset":1141,"count":0},{"startOffset":1251,"endOffset":1269,"count":0},{"startOffset":1299,"endOffset":1317,"count":0},{"startOffset":1354,"endOffset":1381,"count":0},{"startOffset":1383,"endOffset":1399,"count":0},{"startOffset":1458,"endOffset":1476,"count":0},{"startOffset":1844,"endOffset":1847,"count":0},{"startOffset":1852,"endOffset":2728,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1989,"endOffset":2008,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":2731,"endOffset":2909,"count":2}],"isBlockCoverage":true}]},{"scriptId":"119","url":"node:os","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10195,"count":1}],"isBlockCoverage":false},{"functionName":"getCheckedFunction","ranges":[{"startOffset":2088,"endOffset":2343,"count":4}],"isBlockCoverage":true},{"functionName":"checkError","ranges":[{"startOffset":2148,"endOffset":2338,"count":3},{"startOffset":2247,"endOffset":2316,"count":0}],"isBlockCoverage":true},{"functionName":"getOSRelease","ranges":[{"startOffset":2742,"endOffset":2755,"count":5}],"isBlockCoverage":true},{"functionName":"getOSType","ranges":[{"startOffset":2808,"endOffset":2818,"count":2}],"isBlockCoverage":true},{"functionName":"getOSVersion","ranges":[{"startOffset":2874,"endOffset":2887,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine","ranges":[{"startOffset":2941,"endOffset":2954,"count":0}],"isBlockCoverage":false},{"functionName":"getAvailableParallelism.<computed>","ranges":[{"startOffset":3004,"endOffset":3035,"count":0}],"isBlockCoverage":false},{"functionName":"getFreeMem.<computed>","ranges":[{"startOffset":3070,"endOffset":3088,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname.<computed>","ranges":[{"startOffset":3124,"endOffset":3143,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion.<computed>","ranges":[{"startOffset":3180,"endOffset":3200,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType.<computed>","ranges":[{"startOffset":3234,"endOffset":3251,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease.<computed>","ranges":[{"startOffset":3288,"endOffset":3308,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine.<computed>","ranges":[{"startOffset":3343,"endOffset":3361,"count":0}],"isBlockCoverage":false},{"functionName":"getHomeDirectory.<computed>","ranges":[{"startOffset":3402,"endOffset":3426,"count":0}],"isBlockCoverage":false},{"functionName":"getTotalMem.<computed>","ranges":[{"startOffset":3462,"endOffset":3481,"count":0}],"isBlockCoverage":false},{"functionName":"getUptime.<computed>","ranges":[{"startOffset":3515,"endOffset":3532,"count":0}],"isBlockCoverage":false},{"functionName":"loadavg","ranges":[{"startOffset":3679,"endOffset":3782,"count":0}],"isBlockCoverage":false},{"functionName":"cpus","ranges":[{"startOffset":4079,"endOffset":4527,"count":0}],"isBlockCoverage":false},{"functionName":"arch","ranges":[{"startOffset":4563,"endOffset":4607,"count":0}],"isBlockCoverage":false},{"functionName":"arch.<computed>","ranges":[{"startOffset":4635,"endOffset":4653,"count":0}],"isBlockCoverage":false},{"functionName":"platform","ranges":[{"startOffset":4690,"endOffset":4742,"count":1}],"isBlockCoverage":true},{"functionName":"platform.<computed>","ranges":[{"startOffset":4774,"endOffset":4796,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir","ranges":[{"startOffset":4833,"endOffset":5457,"count":1},{"startOffset":4915,"endOffset":4945,"count":0},{"startOffset":4946,"endOffset":5018,"count":0},{"startOffset":5084,"endOffset":5133,"count":0},{"startOffset":5142,"endOffset":5183,"count":0},{"startOffset":5188,"endOffset":5436,"count":0}],"isBlockCoverage":true},{"functionName":"tmpdir.<computed>","ranges":[{"startOffset":5487,"endOffset":5501,"count":0}],"isBlockCoverage":false},{"functionName":"endianness","ranges":[{"startOffset":5543,"endOffset":5592,"count":0}],"isBlockCoverage":false},{"functionName":"endianness.<computed>","ranges":[{"startOffset":5626,"endOffset":5643,"count":0}],"isBlockCoverage":false},{"functionName":"countBinaryOnes","ranges":[{"startOffset":5735,"endOffset":5993,"count":13}],"isBlockCoverage":true},{"functionName":"getCIDR","ranges":[{"startOffset":5997,"endOffset":6985,"count":3},{"startOffset":6195,"endOffset":6259,"count":1},{"startOffset":6306,"endOffset":6948,"count":59},{"startOffset":6339,"endOffset":6424,"count":46},{"startOffset":6376,"endOffset":6405,"count":43},{"startOffset":6405,"endOffset":6424,"count":3},{"startOffset":6424,"endOffset":6943,"count":16},{"startOffset":6553,"endOffset":6627,"count":3},{"startOffset":6582,"endOffset":6618,"count":0},{"startOffset":6627,"endOffset":6936,"count":13},{"startOffset":6811,"endOffset":6927,"count":2},{"startOffset":6848,"endOffset":6888,"count":0}],"isBlockCoverage":true},{"functionName":"networkInterfaces","ranges":[{"startOffset":7209,"endOffset":7930,"count":1},{"startOffset":7337,"endOffset":7351,"count":0},{"startOffset":7396,"endOffset":7907,"count":3},{"startOffset":7722,"endOffset":7746,"count":1},{"startOffset":7825,"endOffset":7861,"count":1},{"startOffset":7861,"endOffset":7902,"count":2}],"isBlockCoverage":true},{"functionName":"setPriority","ranges":[{"startOffset":8021,"endOffset":8323,"count":0}],"isBlockCoverage":false},{"functionName":"getPriority","ranges":[{"startOffset":8387,"endOffset":8655,"count":0}],"isBlockCoverage":false},{"functionName":"userInfo","ranges":[{"startOffset":8973,"endOffset":9277,"count":0}],"isBlockCoverage":false}]},{"scriptId":"120","url":"node:tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5230,"count":1}],"isBlockCoverage":false},{"functionName":"isatty","ranges":[{"startOffset":1576,"endOffset":1685,"count":34}],"isBlockCoverage":true},{"functionName":"ReadStream","ranges":[{"startOffset":1689,"endOffset":2179,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.setRawMode","ranges":[{"startOffset":2333,"endOffset":2563,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":2568,"endOffset":3571,"count":2},{"startOffset":2639,"endOffset":2666,"count":0},{"startOffset":2705,"endOffset":2734,"count":0},{"startOffset":2820,"endOffset":2867,"count":0}],"isBlockCoverage":true},{"functionName":"WriteStream._refreshSize","ranges":[{"startOffset":3873,"endOffset":4328,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.cursorTo","ranges":[{"startOffset":4387,"endOffset":4530,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.moveCursor","ranges":[{"startOffset":4568,"endOffset":4717,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearLine","ranges":[{"startOffset":4754,"endOffset":4896,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearScreenDown","ranges":[{"startOffset":4939,"endOffset":5077,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.getWindowSize","ranges":[{"startOffset":5118,"endOffset":5170,"count":1}],"isBlockCoverage":true}]},{"scriptId":"121","url":"node:net","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":69957,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1656,"endOffset":1683,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":4177,"endOffset":4185,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":4609,"endOffset":4705,"count":6},{"startOffset":4667,"endOffset":4697,"count":0}],"isBlockCoverage":true},{"functionName":"createHandle","ranges":[{"startOffset":4709,"endOffset":5108,"count":0}],"isBlockCoverage":false},{"functionName":"getNewAsyncId","ranges":[{"startOffset":5114,"endOffset":5255,"count":26},{"startOffset":5210,"endOffset":5229,"count":0}],"isBlockCoverage":true},{"functionName":"isPipeName","ranges":[{"startOffset":5261,"endOffset":5346,"count":7},{"startOffset":5318,"endOffset":5342,"count":0}],"isBlockCoverage":true},{"functionName":"createServer","ranges":[{"startOffset":5559,"endOffset":5665,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":5903,"endOffset":6320,"count":5},{"startOffset":6137,"endOffset":6205,"count":0},{"startOffset":6230,"endOffset":6277,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultAutoSelectFamily","ranges":[{"startOffset":6324,"endOffset":6401,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamily","ranges":[{"startOffset":6405,"endOffset":6524,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultAutoSelectFamilyAttemptTimeout","ranges":[{"startOffset":6528,"endOffset":6633,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamilyAttemptTimeout","ranges":[{"startOffset":6637,"endOffset":6832,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeArgs","ranges":[{"startOffset":7338,"endOffset":8097,"count":12},{"startOffset":7409,"endOffset":7494,"count":0},{"startOffset":7575,"endOffset":7591,"count":5},{"startOffset":7593,"endOffset":7649,"count":5},{"startOffset":7649,"endOffset":7906,"count":7},{"startOffset":7677,"endOffset":7735,"count":0},{"startOffset":7830,"endOffset":7860,"count":2},{"startOffset":7862,"endOffset":7901,"count":1},{"startOffset":7984,"endOffset":8040,"count":6}],"isBlockCoverage":true},{"functionName":"initSocketHandle","ranges":[{"startOffset":8173,"endOffset":8798,"count":19},{"startOffset":8345,"endOffset":8795,"count":13},{"startOffset":8540,"endOffset":8790,"count":0}],"isBlockCoverage":true},{"functionName":"closeSocketHandle","ranges":[{"startOffset":8802,"endOffset":9154,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8923,"endOffset":9144,"count":10},{"startOffset":9028,"endOffset":9137,"count":0}],"isBlockCoverage":true},{"functionName":"Socket","ranges":[{"startOffset":9414,"endOffset":14188,"count":13},{"startOffset":9475,"endOffset":9502,"count":0},{"startOffset":9517,"endOffset":9529,"count":12},{"startOffset":9531,"endOffset":9666,"count":0},{"startOffset":9683,"endOffset":9703,"count":12},{"startOffset":9714,"endOffset":9734,"count":12},{"startOffset":9736,"endOffset":9992,"count":0},{"startOffset":10014,"endOffset":10037,"count":12},{"startOffset":10055,"endOffset":10259,"count":0},{"startOffset":10840,"endOffset":10866,"count":0},{"startOffset":11285,"endOffset":11396,"count":7},{"startOffset":11396,"endOffset":12680,"count":6},{"startOffset":11432,"endOffset":12680,"count":0},{"startOffset":12770,"endOffset":12848,"count":0},{"startOffset":12849,"endOffset":12896,"count":0},{"startOffset":12898,"endOffset":13121,"count":0},{"startOffset":13641,"endOffset":13670,"count":7},{"startOffset":13672,"endOffset":13946,"count":7},{"startOffset":13706,"endOffset":13880,"count":0},{"startOffset":13912,"endOffset":13941,"count":5},{"startOffset":13972,"endOffset":14026,"count":0}],"isBlockCoverage":true},{"functionName":"_unrefTimer","ranges":[{"startOffset":14366,"endOffset":14501,"count":48},{"startOffset":14471,"endOffset":14493,"count":0}],"isBlockCoverage":true},{"functionName":"Socket._final","ranges":[{"startOffset":14626,"endOffset":15268,"count":10},{"startOffset":14742,"endOffset":14846,"count":0},{"startOffset":14876,"endOffset":14888,"count":0},{"startOffset":15177,"endOffset":15189,"count":0},{"startOffset":15218,"endOffset":15265,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14818,"endOffset":14839,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":15273,"endOffset":15425,"count":10}],"isBlockCoverage":true},{"functionName":"writeAfterFIN","ranges":[{"startOffset":15637,"endOffset":16165,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._onTimeout","ranges":[{"startOffset":16252,"endOffset":16771,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setNoDelay","ranges":[{"startOffset":16808,"endOffset":17200,"count":6},{"startOffset":16936,"endOffset":16942,"count":0},{"startOffset":16978,"endOffset":17035,"count":1},{"startOffset":17035,"endOffset":17100,"count":5},{"startOffset":17102,"endOffset":17179,"count":0},{"startOffset":17179,"endOffset":17199,"count":5}],"isBlockCoverage":true},{"functionName":"Socket.setKeepAlive","ranges":[{"startOffset":17239,"endOffset":17871,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":17905,"endOffset":17951,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18042,"endOffset":18088,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18173,"endOffset":18231,"count":10}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":18349,"endOffset":18675,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18770,"endOffset":18854,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18947,"endOffset":18994,"count":5}],"isBlockCoverage":true},{"functionName":"tryReadStart","ranges":[{"startOffset":19006,"endOffset":19263,"count":10},{"startOffset":19212,"endOffset":19260,"count":0}],"isBlockCoverage":true},{"functionName":"Socket._read","ranges":[{"startOffset":19358,"endOffset":19690,"count":21},{"startOffset":19510,"endOffset":19526,"count":15},{"startOffset":19528,"endOffset":19623,"count":6},{"startOffset":19623,"endOffset":19687,"count":15},{"startOffset":19656,"endOffset":19687,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19597,"endOffset":19616,"count":5}],"isBlockCoverage":true},{"functionName":"Socket.end","ranges":[{"startOffset":19720,"endOffset":19880,"count":10}],"isBlockCoverage":true},{"functionName":"Socket.resetAndDestroy","ranges":[{"startOffset":19920,"endOffset":20284,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.pause","ranges":[{"startOffset":20314,"endOffset":20663,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resume","ranges":[{"startOffset":20696,"endOffset":20886,"count":23},{"startOffset":20730,"endOffset":20749,"count":0},{"startOffset":20750,"endOffset":20765,"count":0},{"startOffset":20766,"endOffset":20797,"count":0},{"startOffset":20799,"endOffset":20830,"count":0}],"isBlockCoverage":true},{"functionName":"Socket.read","ranges":[{"startOffset":20917,"endOffset":21109,"count":32},{"startOffset":20952,"endOffset":20971,"count":0},{"startOffset":20972,"endOffset":20987,"count":0},{"startOffset":20988,"endOffset":21019,"count":0},{"startOffset":21021,"endOffset":21052,"count":0}],"isBlockCoverage":true},{"functionName":"onReadableStreamEnd","ranges":[{"startOffset":21160,"endOffset":21263,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.destroySoon","ranges":[{"startOffset":21300,"endOffset":21455,"count":10},{"startOffset":21389,"endOffset":21404,"count":0}],"isBlockCoverage":true},{"functionName":"Socket._destroy","ranges":[{"startOffset":21490,"endOffset":23056,"count":10},{"startOffset":21800,"endOffset":21806,"count":0},{"startOffset":22031,"endOffset":22284,"count":0},{"startOffset":22325,"endOffset":22565,"count":0},{"startOffset":22794,"endOffset":22868,"count":0},{"startOffset":22892,"endOffset":23053,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22108,"endOffset":22196,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22508,"endOffset":22556,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._reset","ranges":[{"startOffset":23087,"endOffset":23190,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getpeername","ranges":[{"startOffset":23227,"endOffset":23534,"count":0}],"isBlockCoverage":false},{"functionName":"protoGetter","ranges":[{"startOffset":23539,"endOffset":23728,"count":9}],"isBlockCoverage":true},{"functionName":"bytesRead","ranges":[{"startOffset":23757,"endOffset":23850,"count":0}],"isBlockCoverage":false},{"functionName":"remoteAddress","ranges":[{"startOffset":23885,"endOffset":23953,"count":0}],"isBlockCoverage":false},{"functionName":"remoteFamily","ranges":[{"startOffset":23987,"endOffset":24053,"count":0}],"isBlockCoverage":false},{"functionName":"remotePort","ranges":[{"startOffset":24085,"endOffset":24147,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getsockname","ranges":[{"startOffset":24187,"endOffset":24472,"count":0}],"isBlockCoverage":false},{"functionName":"localAddress","ranges":[{"startOffset":24507,"endOffset":24574,"count":0}],"isBlockCoverage":false},{"functionName":"localPort","ranges":[{"startOffset":24607,"endOffset":24668,"count":0}],"isBlockCoverage":false},{"functionName":"localFamily","ranges":[{"startOffset":24701,"endOffset":24766,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":24809,"endOffset":24858,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writeGeneric","ranges":[{"startOffset":24896,"endOffset":25842,"count":32},{"startOffset":25122,"endOffset":25478,"count":5},{"startOffset":25478,"endOffset":25563,"count":27},{"startOffset":25563,"endOffset":25622,"count":0},{"startOffset":25622,"endOffset":25682,"count":27},{"startOffset":25682,"endOffset":25718,"count":7},{"startOffset":25718,"endOffset":25777,"count":20},{"startOffset":25777,"endOffset":25801,"count":27},{"startOffset":25801,"endOffset":25839,"count":0}],"isBlockCoverage":true},{"functionName":"connect","ranges":[{"startOffset":25220,"endOffset":25337,"count":5}],"isBlockCoverage":true},{"functionName":"onClose","ranges":[{"startOffset":25345,"endOffset":25426,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writev","ranges":[{"startOffset":25876,"endOffset":25946,"count":7}],"isBlockCoverage":true},{"functionName":"Socket._write","ranges":[{"startOffset":25979,"endOffset":26062,"count":20}],"isBlockCoverage":true},{"functionName":"_bytesDispatched","ranges":[{"startOffset":26260,"endOffset":26366,"count":0}],"isBlockCoverage":false},{"functionName":"bytesWritten","ranges":[{"startOffset":26400,"endOffset":27363,"count":0}],"isBlockCoverage":false},{"functionName":"checkBindError","ranges":[{"startOffset":27371,"endOffset":28188,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnect","ranges":[{"startOffset":28194,"endOffset":30359,"count":5},{"startOffset":28458,"endOffset":29114,"count":0},{"startOffset":29645,"endOffset":29711,"count":0},{"startOffset":29716,"endOffset":29881,"count":0},{"startOffset":29896,"endOffset":30158,"count":0},{"startOffset":30232,"endOffset":30356,"count":0}],"isBlockCoverage":true},{"functionName":"internalConnectMultiple","ranges":[{"startOffset":30365,"endOffset":33399,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":33430,"endOffset":35086,"count":6},{"startOffset":33780,"endOffset":33812,"count":5},{"startOffset":33814,"endOffset":33847,"count":5},{"startOffset":33847,"endOffset":33898,"count":1},{"startOffset":33984,"endOffset":34021,"count":5},{"startOffset":34119,"endOffset":34145,"count":0},{"startOffset":34147,"endOffset":34171,"count":0},{"startOffset":34259,"endOffset":34282,"count":0},{"startOffset":34289,"endOffset":34345,"count":0},{"startOffset":34399,"endOffset":34435,"count":0},{"startOffset":34461,"endOffset":34549,"count":0},{"startOffset":34686,"endOffset":34725,"count":0},{"startOffset":34868,"endOffset":35017,"count":0}],"isBlockCoverage":true},{"functionName":"reinitializeHandle","ranges":[{"startOffset":35131,"endOffset":35292,"count":0}],"isBlockCoverage":false},{"functionName":"socketToDnsFamily","ranges":[{"startOffset":35297,"endOffset":35452,"count":1},{"startOffset":35360,"endOffset":35389,"count":0},{"startOffset":35395,"endOffset":35424,"count":0}],"isBlockCoverage":true},{"functionName":"lookupAndConnect","ranges":[{"startOffset":35456,"endOffset":39515,"count":6},{"startOffset":35576,"endOffset":35590,"count":0},{"startOffset":35691,"endOffset":35713,"count":0},{"startOffset":35715,"endOffset":35774,"count":0},{"startOffset":35795,"endOffset":35854,"count":0},{"startOffset":35929,"endOffset":35956,"count":5},{"startOffset":35958,"endOffset":36087,"count":0},{"startOffset":36169,"endOffset":36243,"count":0},{"startOffset":36354,"endOffset":36558,"count":0},{"startOffset":36754,"endOffset":37069,"count":5},{"startOffset":37069,"endOffset":37108,"count":1},{"startOffset":37108,"endOffset":37159,"count":0},{"startOffset":37159,"endOffset":37309,"count":1},{"startOffset":37337,"endOffset":37367,"count":0},{"startOffset":37368,"endOffset":37398,"count":0},{"startOffset":37399,"endOffset":37428,"count":0},{"startOffset":37430,"endOffset":37473,"count":0},{"startOffset":37473,"endOffset":37625,"count":1},{"startOffset":37657,"endOffset":37680,"count":1},{"startOffset":37681,"endOffset":37697,"count":1},{"startOffset":37698,"endOffset":37717,"count":1},{"startOffset":37719,"endOffset":38133,"count":1},{"startOffset":38133,"endOffset":39514,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":36829,"endOffset":37049,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37841,"endOffset":38111,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38189,"endOffset":39510,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnectMultiple","ranges":[{"startOffset":39519,"endOffset":43733,"count":1}],"isBlockCoverage":true},{"functionName":"emitLookup","ranges":[{"startOffset":39710,"endOffset":43728,"count":1}],"isBlockCoverage":true},{"functionName":"emitLookup","ranges":[{"startOffset":39761,"endOffset":43721,"count":0}],"isBlockCoverage":false},{"functionName":"connectErrorNT","ranges":[{"startOffset":43737,"endOffset":43798,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":43827,"endOffset":44025,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":44057,"endOffset":44261,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnect","ranges":[{"startOffset":44268,"endOffset":46016,"count":5},{"startOffset":44442,"endOffset":44461,"count":0},{"startOffset":44636,"endOffset":44688,"count":0},{"startOffset":44726,"endOffset":44753,"count":0},{"startOffset":44914,"endOffset":44942,"count":0},{"startOffset":44944,"endOffset":45025,"count":0},{"startOffset":45304,"endOffset":45325,"count":0},{"startOffset":45327,"endOffset":45387,"count":0},{"startOffset":45392,"endOffset":46013,"count":0}],"isBlockCoverage":true},{"functionName":"addClientAbortSignalOption","ranges":[{"startOffset":46020,"endOffset":46460,"count":0}],"isBlockCoverage":false},{"functionName":"createConnectionError","ranges":[{"startOffset":46464,"endOffset":47003,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnectMultiple","ranges":[{"startOffset":47007,"endOffset":48364,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnectMultipleTimeout","ranges":[{"startOffset":48368,"endOffset":48876,"count":0}],"isBlockCoverage":false},{"functionName":"addServerAbortSignalOption","ranges":[{"startOffset":48880,"endOffset":49338,"count":6},{"startOffset":48990,"endOffset":49335,"count":0}],"isBlockCoverage":true},{"functionName":"onAborted","ranges":[{"startOffset":49101,"endOffset":49132,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":49342,"endOffset":51007,"count":6},{"startOffset":49428,"endOffset":49475,"count":0},{"startOffset":49546,"endOffset":49664,"count":0},{"startOffset":49808,"endOffset":49866,"count":0},{"startOffset":49871,"endOffset":49950,"count":0},{"startOffset":50012,"endOffset":50215,"count":0},{"startOffset":50269,"endOffset":50464,"count":0},{"startOffset":50702,"endOffset":50710,"count":0}],"isBlockCoverage":true},{"functionName":"toNumber","ranges":[{"startOffset":51123,"endOffset":51188,"count":12},{"startOffset":51174,"endOffset":51177,"count":11},{"startOffset":51178,"endOffset":51185,"count":1}],"isBlockCoverage":true},{"functionName":"createServerHandle","ranges":[{"startOffset":51259,"endOffset":52767,"count":6},{"startOffset":51481,"endOffset":51491,"count":0},{"startOffset":51493,"endOffset":51818,"count":0},{"startOffset":51840,"endOffset":51861,"count":0},{"startOffset":51863,"endOffset":52121,"count":0},{"startOffset":52214,"endOffset":52221,"count":0},{"startOffset":52222,"endOffset":52230,"count":0},{"startOffset":52264,"endOffset":52272,"count":0},{"startOffset":52294,"endOffset":52539,"count":0},{"startOffset":52625,"endOffset":52680,"count":0},{"startOffset":52700,"endOffset":52744,"count":0}],"isBlockCoverage":true},{"functionName":"setupListenHandle","ranges":[{"startOffset":52771,"endOffset":55199,"count":6},{"startOffset":53081,"endOffset":53143,"count":0},{"startOffset":53464,"endOffset":53560,"count":0},{"startOffset":53681,"endOffset":53746,"count":0},{"startOffset":53784,"endOffset":53939,"count":0},{"startOffset":54387,"endOffset":54759,"count":0},{"startOffset":54996,"endOffset":55009,"count":0}],"isBlockCoverage":true},{"functionName":"emitErrorNT","ranges":[{"startOffset":55270,"endOffset":55334,"count":0}],"isBlockCoverage":false},{"functionName":"emitListeningNT","ranges":[{"startOffset":55340,"endOffset":55459,"count":6}],"isBlockCoverage":true},{"functionName":"listenInCluster","ranges":[{"startOffset":55465,"endOffset":56904,"count":6},{"startOffset":55654,"endOffset":55683,"count":1},{"startOffset":55711,"endOffset":55723,"count":0},{"startOffset":55975,"endOffset":56903,"count":0}],"isBlockCoverage":true},{"functionName":"listenOnPrimaryHandle","ranges":[{"startOffset":56306,"endOffset":56901,"count":0}],"isBlockCoverage":false},{"functionName":"Server.listen","ranges":[{"startOffset":56936,"endOffset":61204,"count":6},{"startOffset":57083,"endOffset":57133,"count":0},{"startOffset":57156,"endOffset":57195,"count":1},{"startOffset":57317,"endOffset":57327,"count":1},{"startOffset":57362,"endOffset":57372,"count":0},{"startOffset":57610,"endOffset":57778,"count":0},{"startOffset":57931,"endOffset":57949,"count":0},{"startOffset":57951,"endOffset":58050,"count":0},{"startOffset":58415,"endOffset":58435,"count":0},{"startOffset":58470,"endOffset":58499,"count":0},{"startOffset":58728,"endOffset":58763,"count":0},{"startOffset":58938,"endOffset":59066,"count":0},{"startOffset":59346,"endOffset":59518,"count":0},{"startOffset":59520,"endOffset":60996,"count":0},{"startOffset":60999,"endOffset":61203,"count":0}],"isBlockCoverage":true},{"functionName":"lookupAndListen","ranges":[{"startOffset":61209,"endOffset":61768,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":61854,"endOffset":61899,"count":0}],"isBlockCoverage":false},{"functionName":"Server.address","ranges":[{"startOffset":61980,"endOffset":62285,"count":10},{"startOffset":62013,"endOffset":62040,"count":5},{"startOffset":62042,"endOffset":62206,"count":5},{"startOffset":62127,"endOffset":62184,"count":0},{"startOffset":62206,"endOffset":62266,"count":5},{"startOffset":62232,"endOffset":62266,"count":0},{"startOffset":62266,"endOffset":62284,"count":5}],"isBlockCoverage":true},{"functionName":"onconnection","ranges":[{"startOffset":62290,"endOffset":64258,"count":5},{"startOffset":62437,"endOffset":62516,"count":0},{"startOffset":62546,"endOffset":62589,"count":0},{"startOffset":62591,"endOffset":63386,"count":0},{"startOffset":63821,"endOffset":63849,"count":0},{"startOffset":63851,"endOffset":64027,"count":0},{"startOffset":64187,"endOffset":64255,"count":0}],"isBlockCoverage":true},{"functionName":"Server.getConnections","ranges":[{"startOffset":64415,"endOffset":65203,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":65235,"endOffset":66163,"count":5},{"startOffset":65333,"endOffset":65440,"count":0},{"startOffset":65603,"endOffset":66097,"count":0}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":65361,"endOffset":65431,"count":0}],"isBlockCoverage":false},{"functionName":"onWorkerClose","ranges":[{"startOffset":65670,"endOffset":65784,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":66207,"endOffset":66332,"count":0}],"isBlockCoverage":false},{"functionName":"Server._emitCloseIfDrained","ranges":[{"startOffset":66376,"endOffset":66775,"count":10},{"startOffset":66451,"endOffset":66471,"count":5},{"startOffset":66473,"endOffset":66774,"count":5}],"isBlockCoverage":true},{"functionName":"emitCloseNT","ranges":[{"startOffset":66782,"endOffset":66868,"count":5}],"isBlockCoverage":true},{"functionName":"Server.<computed>","ranges":[{"startOffset":66930,"endOffset":67102,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":67331,"endOffset":67367,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":67372,"endOffset":67413,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":67498,"endOffset":67529,"count":353}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":67534,"endOffset":67570,"count":23}],"isBlockCoverage":true},{"functionName":"Server._setupWorker","ranges":[{"startOffset":67612,"endOffset":67860,"count":0}],"isBlockCoverage":false},{"functionName":"Server.ref","ranges":[{"startOffset":67888,"endOffset":67993,"count":0}],"isBlockCoverage":false},{"functionName":"Server.unref","ranges":[{"startOffset":68023,"endOffset":68129,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":68279,"endOffset":68968,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":69009,"endOffset":69257,"count":0}],"isBlockCoverage":false},{"functionName":"get BlockList","ranges":[{"startOffset":69393,"endOffset":69498,"count":0}],"isBlockCoverage":false},{"functionName":"get SocketAddress","ranges":[{"startOffset":69503,"endOffset":69628,"count":0}],"isBlockCoverage":false}]},{"scriptId":"122","url":"node:stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4937,"count":1}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":2466,"endOffset":2631,"count":0}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":3069,"endOffset":3212,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4228,"endOffset":4262,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4366,"endOffset":4409,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4508,"endOffset":4551,"count":0}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":4723,"endOffset":4934,"count":0}],"isBlockCoverage":false}]},{"scriptId":"123","url":"node:internal/streams/operators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11229,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":1062,"endOffset":1665,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":1669,"endOffset":4920,"count":0}],"isBlockCoverage":false},{"functionName":"asIndexedPairs","ranges":[{"startOffset":4924,"endOffset":5414,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":5418,"endOffset":5571,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":5575,"endOffset":5912,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":5916,"endOffset":6063,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":6067,"endOffset":6448,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":6452,"endOffset":6791,"count":0}],"isBlockCoverage":false},{"functionName":"ReduceAwareErrMissingArgs","ranges":[{"startOffset":7012,"endOffset":7129,"count":0}],"isBlockCoverage":false},{"functionName":"reduce","ranges":[{"startOffset":7136,"endOffset":8624,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":8628,"endOffset":9073,"count":0}],"isBlockCoverage":false},{"functionName":"flatMap","ranges":[{"startOffset":9077,"endOffset":9278,"count":0}],"isBlockCoverage":false},{"functionName":"toIntegerOrInfinity","ranges":[{"startOffset":9282,"endOffset":9615,"count":0}],"isBlockCoverage":false},{"functionName":"drop","ranges":[{"startOffset":9619,"endOffset":10189,"count":0}],"isBlockCoverage":false},{"functionName":"take","ranges":[{"startOffset":10193,"endOffset":10890,"count":0}],"isBlockCoverage":false}]},{"scriptId":"124","url":"node:internal/abort_controller","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12938,"count":1}],"isBlockCoverage":false},{"functionName":"lazyMessageChannel","ranges":[{"startOffset":1710,"endOffset":1846,"count":0}],"isBlockCoverage":false},{"functionName":"lazyMakeTransferable","ranges":[{"startOffset":1850,"endOffset":2012,"count":0}],"isBlockCoverage":false},{"functionName":"customInspect","ranges":[{"startOffset":2496,"endOffset":2764,"count":0}],"isBlockCoverage":false},{"functionName":"validateThisAbortSignal","ranges":[{"startOffset":2768,"endOffset":2896,"count":0}],"isBlockCoverage":false},{"functionName":"setWeakAbortSignalTimeout","ranges":[{"startOffset":3488,"endOffset":3902,"count":0}],"isBlockCoverage":false},{"functionName":"AbortSignal","ranges":[{"startOffset":3949,"endOffset":4011,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":4053,"endOffset":4139,"count":0}],"isBlockCoverage":false},{"functionName":"get reason","ranges":[{"startOffset":4177,"endOffset":4259,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfAborted","ranges":[{"startOffset":4265,"endOffset":4386,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4392,"endOffset":4525,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":4609,"endOffset":4756,"count":0}],"isBlockCoverage":false},{"functionName":"timeout","ranges":[{"startOffset":4840,"endOffset":5110,"count":0}],"isBlockCoverage":false},{"functionName":"any","ranges":[{"startOffset":5203,"endOffset":6576,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6582,"endOffset":7364,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7370,"endOffset":7730,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7736,"endOffset":8366,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8372,"endOffset":8636,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8642,"endOffset":9105,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal","ranges":[{"startOffset":9112,"endOffset":9198,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal.<computed>","ranges":[{"startOffset":9244,"endOffset":9252,"count":0}],"isBlockCoverage":false},{"functionName":"createAbortSignal","ranges":[{"startOffset":9755,"endOffset":10181,"count":0}],"isBlockCoverage":false},{"functionName":"abortSignal","ranges":[{"startOffset":10185,"endOffset":10559,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":10563,"endOffset":11248,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortSignal","ranges":[{"startOffset":11403,"endOffset":11599,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortController","ranges":[{"startOffset":11676,"endOffset":11767,"count":0}],"isBlockCoverage":false},{"functionName":"aborted","ranges":[{"startOffset":11868,"endOffset":12466,"count":0}],"isBlockCoverage":false}]},{"scriptId":"125","url":"node:internal/streams/end-of-stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8687,"count":1}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":939,"endOffset":1036,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":1052,"endOffset":1060,"count":0}],"isBlockCoverage":false},{"functionName":"eos","ranges":[{"startOffset":1065,"endOffset":7220,"count":0}],"isBlockCoverage":false},{"functionName":"eosWeb","ranges":[{"startOffset":7224,"endOffset":8140,"count":0}],"isBlockCoverage":false},{"functionName":"finished","ranges":[{"startOffset":8144,"endOffset":8623,"count":0}],"isBlockCoverage":false}]},{"scriptId":"126","url":"node:internal/streams/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9298,"count":1}],"isBlockCoverage":false},{"functionName":"isReadableNodeStream","ranges":[{"startOffset":1152,"endOffset":1581,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableNodeStream","ranges":[{"startOffset":1585,"endOffset":1812,"count":0}],"isBlockCoverage":false},{"functionName":"isDuplexNodeStream","ranges":[{"startOffset":1816,"endOffset":2022,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeStream","ranges":[{"startOffset":2026,"endOffset":2307,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableStream","ranges":[{"startOffset":2311,"endOffset":2533,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableStream","ranges":[{"startOffset":2537,"endOffset":2712,"count":0}],"isBlockCoverage":false},{"functionName":"isTransformStream","ranges":[{"startOffset":2716,"endOffset":2890,"count":0}],"isBlockCoverage":false},{"functionName":"isWebStream","ranges":[{"startOffset":2894,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"isIterable","ranges":[{"startOffset":3012,"endOffset":3348,"count":0}],"isBlockCoverage":false},{"functionName":"isDestroyed","ranges":[{"startOffset":3352,"endOffset":3621,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableEnded","ranges":[{"startOffset":3648,"endOffset":3946,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableFinished","ranges":[{"startOffset":3977,"endOffset":4384,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableEnded","ranges":[{"startOffset":4416,"endOffset":4724,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableFinished","ranges":[{"startOffset":4752,"endOffset":5109,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":5113,"endOffset":5420,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":5424,"endOffset":5728,"count":0}],"isBlockCoverage":false},{"functionName":"isFinished","ranges":[{"startOffset":5732,"endOffset":6064,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableErrored","ranges":[{"startOffset":6068,"endOffset":6290,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableErrored","ranges":[{"startOffset":6294,"endOffset":6516,"count":0}],"isBlockCoverage":false},{"functionName":"isClosed","ranges":[{"startOffset":6520,"endOffset":7049,"count":0}],"isBlockCoverage":false},{"functionName":"isOutgoingMessage","ranges":[{"startOffset":7053,"endOffset":7312,"count":0}],"isBlockCoverage":false},{"functionName":"isServerResponse","ranges":[{"startOffset":7316,"endOffset":7448,"count":0}],"isBlockCoverage":false},{"functionName":"isServerRequest","ranges":[{"startOffset":7452,"endOffset":7646,"count":0}],"isBlockCoverage":false},{"functionName":"willEmitClose","ranges":[{"startOffset":7650,"endOffset":8001,"count":0}],"isBlockCoverage":false},{"functionName":"isDisturbed","ranges":[{"startOffset":8005,"endOffset":8155,"count":0}],"isBlockCoverage":false},{"functionName":"isErrored","ranges":[{"startOffset":8159,"endOffset":8474,"count":0}],"isBlockCoverage":false}]},{"scriptId":"127","url":"node:internal/streams/compose","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5703,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":566,"endOffset":5700,"count":0}],"isBlockCoverage":false}]},{"scriptId":"128","url":"node:internal/streams/pipeline","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12793,"count":1}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":1107,"endOffset":1554,"count":0}],"isBlockCoverage":false},{"functionName":"popCallback","ranges":[{"startOffset":1558,"endOffset":1892,"count":0}],"isBlockCoverage":false},{"functionName":"makeAsyncIterable","ranges":[{"startOffset":1896,"endOffset":2191,"count":0}],"isBlockCoverage":false},{"functionName":"fromReadable","ranges":[{"startOffset":2195,"endOffset":2375,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToNode","ranges":[{"startOffset":2379,"endOffset":3479,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToWeb","ranges":[{"startOffset":3483,"endOffset":4108,"count":0}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":4112,"endOffset":4207,"count":0}],"isBlockCoverage":false},{"functionName":"pipelineImpl","ranges":[{"startOffset":4211,"endOffset":10885,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":10889,"endOffset":12743,"count":0}],"isBlockCoverage":false}]},{"scriptId":"129","url":"node:internal/streams/destroy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7714,"count":1}],"isBlockCoverage":false},{"functionName":"checkError","ranges":[{"startOffset":518,"endOffset":841,"count":40},{"startOffset":563,"endOffset":838,"count":0}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":955,"endOffset":1871,"count":25},{"startOffset":1128,"endOffset":1132,"count":10},{"startOffset":1152,"endOffset":1185,"count":15},{"startOffset":1187,"endOffset":1232,"count":20},{"startOffset":1238,"endOffset":1321,"count":5},{"startOffset":1275,"endOffset":1296,"count":0},{"startOffset":1321,"endOffset":1513,"count":20},{"startOffset":1513,"endOffset":1549,"count":10},{"startOffset":1549,"endOffset":1697,"count":20},{"startOffset":1697,"endOffset":1808,"count":0},{"startOffset":1808,"endOffset":1870,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1724,"endOffset":1801,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":1875,"endOffset":2535,"count":20},{"startOffset":2493,"endOffset":2532,"count":0}],"isBlockCoverage":true},{"functionName":"onDestroy","ranges":[{"startOffset":1938,"endOffset":2434,"count":20},{"startOffset":1981,"endOffset":2004,"count":0},{"startOffset":2143,"endOffset":2180,"count":10},{"startOffset":2268,"endOffset":2292,"count":0},{"startOffset":2309,"endOffset":2371,"count":0}],"isBlockCoverage":true},{"functionName":"emitErrorCloseNT","ranges":[{"startOffset":2539,"endOffset":2629,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":2633,"endOffset":2970,"count":20},{"startOffset":2742,"endOffset":2781,"count":10},{"startOffset":2850,"endOffset":2883,"count":10},{"startOffset":2936,"endOffset":2967,"count":10}],"isBlockCoverage":true},{"functionName":"emitErrorNT","ranges":[{"startOffset":2974,"endOffset":3340,"count":0}],"isBlockCoverage":false},{"functionName":"undestroy","ranges":[{"startOffset":3344,"endOffset":4063,"count":19}],"isBlockCoverage":true},{"functionName":"errorOrDestroy","ranges":[{"startOffset":4067,"endOffset":5244,"count":0}],"isBlockCoverage":false},{"functionName":"construct","ranges":[{"startOffset":5248,"endOffset":5687,"count":0}],"isBlockCoverage":false},{"functionName":"constructNT","ranges":[{"startOffset":5691,"endOffset":6467,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":6471,"endOffset":6569,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseLegacy","ranges":[{"startOffset":6573,"endOffset":6635,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorCloseLegacy","ranges":[{"startOffset":6639,"endOffset":6762,"count":0}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":6800,"endOffset":7613,"count":0}],"isBlockCoverage":false}]},{"scriptId":"130","url":"node:internal/streams/duplex","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6692,"count":1}],"isBlockCoverage":false},{"functionName":"Duplex","ranges":[{"startOffset":2312,"endOffset":4348,"count":13},{"startOffset":2378,"endOffset":2405,"count":0},{"startOffset":3118,"endOffset":3258,"count":0},{"startOffset":3298,"endOffset":3478,"count":0},{"startOffset":3533,"endOffset":3559,"count":0},{"startOffset":3615,"endOffset":3643,"count":0},{"startOffset":3700,"endOffset":3730,"count":0},{"startOffset":3788,"endOffset":3820,"count":0},{"startOffset":3876,"endOffset":3904,"count":0},{"startOffset":3964,"endOffset":4000,"count":0},{"startOffset":4035,"endOffset":4072,"count":0},{"startOffset":4077,"endOffset":4121,"count":0},{"startOffset":4189,"endOffset":4345,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4224,"endOffset":4338,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5520,"endOffset":5738,"count":46},{"startOffset":5620,"endOffset":5653,"count":0},{"startOffset":5698,"endOffset":5730,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":5745,"endOffset":6013,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":6094,"endOffset":6262,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.fromWeb","ranges":[{"startOffset":6283,"endOffset":6405,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.toWeb","ranges":[{"startOffset":6425,"endOffset":6516,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.from","ranges":[{"startOffset":6553,"endOffset":6689,"count":0}],"isBlockCoverage":false}]},{"scriptId":"131","url":"node:internal/streams/legacy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3376,"count":1}],"isBlockCoverage":false},{"functionName":"Stream","ranges":[{"startOffset":140,"endOffset":190,"count":43}],"isBlockCoverage":true},{"functionName":"Stream.pipe","ranges":[{"startOffset":308,"endOffset":2188,"count":0}],"isBlockCoverage":false},{"functionName":"eventNames","ranges":[{"startOffset":2223,"endOffset":2497,"count":0}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":2502,"endOffset":3325,"count":0}],"isBlockCoverage":false}]},{"scriptId":"132","url":"node:internal/streams/readable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":53051,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1894,"endOffset":1921,"count":1}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":2925,"endOffset":2933,"count":0}],"isBlockCoverage":false},{"functionName":"makeBitMapDescriptor","ranges":[{"startOffset":3859,"endOffset":4090,"count":19}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3937,"endOffset":3981,"count":177}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3988,"endOffset":4080,"count":164},{"startOffset":4019,"endOffset":4039,"count":29},{"startOffset":4039,"endOffset":4073,"count":135}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6309,"endOffset":6399,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6406,"endOffset":6579,"count":19},{"startOffset":6437,"endOffset":6520,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6662,"endOffset":6762,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6769,"endOffset":7006,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7081,"endOffset":7171,"count":7},{"startOffset":7135,"endOffset":7156,"count":5},{"startOffset":7157,"endOffset":7163,"count":2}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":7178,"endOffset":7351,"count":5},{"startOffset":7292,"endOffset":7344,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7427,"endOffset":7519,"count":2},{"startOffset":7482,"endOffset":7504,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":7526,"endOffset":7702,"count":5},{"startOffset":7642,"endOffset":7695,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7777,"endOffset":7882,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7889,"endOffset":8165,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableState","ranges":[{"startOffset":8183,"endOffset":10228,"count":23},{"startOffset":8590,"endOffset":8618,"count":0},{"startOffset":8637,"endOffset":8647,"count":13},{"startOffset":8648,"endOffset":8677,"count":13},{"startOffset":8684,"endOffset":8712,"count":0},{"startOffset":8965,"endOffset":9002,"count":0},{"startOffset":9201,"endOffset":9229,"count":13},{"startOffset":9355,"endOffset":9385,"count":0},{"startOffset":9670,"endOffset":9699,"count":0},{"startOffset":9700,"endOffset":9730,"count":0},{"startOffset":9781,"endOffset":9944,"count":0},{"startOffset":10123,"endOffset":10225,"count":0}],"isBlockCoverage":true},{"functionName":"onConstructed","ranges":[{"startOffset":10274,"endOffset":10395,"count":0}],"isBlockCoverage":false},{"functionName":"Readable","ranges":[{"startOffset":10400,"endOffset":11476,"count":10},{"startOffset":10470,"endOffset":10499,"count":0},{"startOffset":11010,"endOffset":11036,"count":0},{"startOffset":11094,"endOffset":11126,"count":0},{"startOffset":11186,"endOffset":11222,"count":0},{"startOffset":11257,"endOffset":11294,"count":0},{"startOffset":11367,"endOffset":11473,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11402,"endOffset":11466,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._destroy","ranges":[{"startOffset":11617,"endOffset":11651,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":11704,"endOffset":11744,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":11790,"endOffset":12053,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.push","ranges":[{"startOffset":12288,"endOffset":12564,"count":22},{"startOffset":12493,"endOffset":12560,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.unshift","ranges":[{"startOffset":12663,"endOffset":12936,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftByteMode","ranges":[{"startOffset":12943,"endOffset":14025,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftObjectMode","ranges":[{"startOffset":14029,"endOffset":14278,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftValue","ranges":[{"startOffset":14282,"endOffset":14624,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkPushByteMode","ranges":[{"startOffset":14628,"endOffset":16054,"count":22},{"startOffset":14723,"endOffset":14813,"count":10},{"startOffset":14813,"endOffset":14850,"count":12},{"startOffset":14850,"endOffset":15021,"count":0},{"startOffset":15021,"endOffset":15366,"count":12},{"startOffset":15082,"endOffset":15366,"count":0},{"startOffset":15366,"endOffset":15403,"count":12},{"startOffset":15405,"endOffset":15513,"count":0},{"startOffset":15513,"endOffset":15555,"count":12},{"startOffset":15555,"endOffset":15642,"count":0},{"startOffset":15642,"endOffset":15701,"count":12},{"startOffset":15701,"endOffset":15726,"count":0},{"startOffset":15726,"endOffset":15800,"count":12},{"startOffset":15800,"endOffset":15812,"count":5},{"startOffset":15814,"endOffset":15977,"count":5},{"startOffset":15893,"endOffset":15972,"count":0},{"startOffset":15977,"endOffset":16053,"count":12}],"isBlockCoverage":true},{"functionName":"readableAddChunkPushObjectMode","ranges":[{"startOffset":16058,"endOffset":16679,"count":0}],"isBlockCoverage":false},{"functionName":"canPushMore","ranges":[{"startOffset":16683,"endOffset":17019,"count":12},{"startOffset":16993,"endOffset":17014,"count":0}],"isBlockCoverage":true},{"functionName":"addChunk","ranges":[{"startOffset":17023,"endOffset":17996,"count":12},{"startOffset":17170,"endOffset":17191,"count":5},{"startOffset":17193,"endOffset":17519,"count":5},{"startOffset":17342,"endOffset":17390,"count":0},{"startOffset":17519,"endOffset":17960,"count":7},{"startOffset":17616,"endOffset":17619,"count":0},{"startOffset":17657,"endOffset":17829,"count":0},{"startOffset":17934,"endOffset":17955,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.isPaused","ranges":[{"startOffset":18030,"endOffset":18188,"count":5}],"isBlockCoverage":true},{"functionName":"Readable.setEncoding","ranges":[{"startOffset":18255,"endOffset":18845,"count":5},{"startOffset":18637,"endOffset":18680,"count":0},{"startOffset":18765,"endOffset":18792,"count":0}],"isBlockCoverage":true},{"functionName":"computeNewHighWaterMark","ranges":[{"startOffset":18910,"endOffset":19276,"count":0}],"isBlockCoverage":false},{"functionName":"howMuchToRead","ranges":[{"startOffset":19393,"endOffset":19888,"count":74},{"startOffset":19442,"endOffset":19499,"count":35},{"startOffset":19465,"endOffset":19498,"count":28},{"startOffset":19506,"endOffset":19515,"count":54},{"startOffset":19515,"endOffset":19565,"count":20},{"startOffset":19565,"endOffset":19574,"count":0},{"startOffset":19574,"endOffset":19783,"count":20},{"startOffset":19706,"endOffset":19752,"count":7},{"startOffset":19752,"endOffset":19783,"count":13},{"startOffset":19783,"endOffset":19880,"count":0},{"startOffset":19881,"endOffset":19884,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.read","ranges":[{"startOffset":19988,"endOffset":24802,"count":74},{"startOffset":20176,"endOffset":20196,"count":35},{"startOffset":20196,"endOffset":20265,"count":39},{"startOffset":20227,"endOffset":20265,"count":0},{"startOffset":20436,"endOffset":20485,"count":0},{"startOffset":20509,"endOffset":20544,"count":35},{"startOffset":20735,"endOffset":20782,"count":39},{"startOffset":20783,"endOffset":20939,"count":10},{"startOffset":20868,"endOffset":20895,"count":0},{"startOffset":20941,"endOffset":21125,"count":0},{"startOffset":21239,"endOffset":21272,"count":67},{"startOffset":21274,"endOffset":21353,"count":31},{"startOffset":21312,"endOffset":21330,"count":26},{"startOffset":21353,"endOffset":22677,"count":43},{"startOffset":22677,"endOffset":22718,"count":9},{"startOffset":22720,"endOffset":23113,"count":43},{"startOffset":23113,"endOffset":23194,"count":25},{"startOffset":23194,"endOffset":23837,"count":18},{"startOffset":23387,"endOffset":23418,"count":16},{"startOffset":23513,"endOffset":23567,"count":0},{"startOffset":23800,"endOffset":23832,"count":0},{"startOffset":23837,"endOffset":23871,"count":43},{"startOffset":23871,"endOffset":23896,"count":7},{"startOffset":23896,"endOffset":23921,"count":36},{"startOffset":23921,"endOffset":23945,"count":43},{"startOffset":23945,"endOffset":24042,"count":36},{"startOffset":24021,"endOffset":24024,"count":0},{"startOffset":24042,"endOffset":24231,"count":7},{"startOffset":24125,"endOffset":24173,"count":0},{"startOffset":24231,"endOffset":24261,"count":43},{"startOffset":24261,"endOffset":24628,"count":41},{"startOffset":24432,"endOffset":24463,"count":36},{"startOffset":24563,"endOffset":24596,"count":20},{"startOffset":24605,"endOffset":24623,"count":5},{"startOffset":24628,"endOffset":24651,"count":43},{"startOffset":24651,"endOffset":24709,"count":7},{"startOffset":24711,"endOffset":24782,"count":7},{"startOffset":24782,"endOffset":24801,"count":43}],"isBlockCoverage":true},{"functionName":"onEofChunk","ranges":[{"startOffset":24807,"endOffset":25795,"count":10},{"startOffset":24907,"endOffset":24914,"count":0},{"startOffset":24967,"endOffset":24989,"count":5},{"startOffset":24990,"endOffset":24996,"count":5},{"startOffset":25014,"endOffset":25207,"count":5},{"startOffset":25065,"endOffset":25080,"count":0},{"startOffset":25082,"endOffset":25202,"count":0},{"startOffset":25276,"endOffset":25483,"count":8},{"startOffset":25483,"endOffset":25792,"count":2}],"isBlockCoverage":true},{"functionName":"emitReadable","ranges":[{"startOffset":26001,"endOffset":26341,"count":8}],"isBlockCoverage":true},{"functionName":"emitReadable_","ranges":[{"startOffset":26345,"endOffset":27035,"count":10},{"startOffset":26951,"endOffset":26994,"count":0},{"startOffset":26995,"endOffset":27010,"count":0}],"isBlockCoverage":true},{"functionName":"maybeReadMore","ranges":[{"startOffset":27394,"endOffset":27606,"count":12},{"startOffset":27507,"endOffset":27603,"count":5}],"isBlockCoverage":true},{"functionName":"maybeReadMore_","ranges":[{"startOffset":27610,"endOffset":29474,"count":5},{"startOffset":29178,"endOffset":29248,"count":0}],"isBlockCoverage":true},{"functionName":"Readable._read","ranges":[{"startOffset":29751,"endOffset":29819,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pipe","ranges":[{"startOffset":29850,"endOffset":34518,"count":0}],"isBlockCoverage":false},{"functionName":"pipeOnDrain","ranges":[{"startOffset":34523,"endOffset":35220,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unpipe","ranges":[{"startOffset":35254,"endOffset":35986,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.on","ranges":[{"startOffset":36116,"endOffset":37154,"count":219},{"startOffset":36252,"endOffset":36692,"count":28},{"startOffset":36486,"endOffset":36506,"count":0},{"startOffset":36692,"endOffset":37134,"count":191},{"startOffset":36721,"endOffset":37134,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeListener","ranges":[{"startOffset":37252,"endOffset":37978,"count":82},{"startOffset":37458,"endOffset":37852,"count":0},{"startOffset":37876,"endOffset":37911,"count":7},{"startOffset":37913,"endOffset":37958,"count":7}],"isBlockCoverage":true},{"functionName":"Readable.removeAllListeners","ranges":[{"startOffset":38084,"endOffset":38693,"count":3},{"startOffset":38279,"endOffset":38673,"count":0}],"isBlockCoverage":true},{"functionName":"updateReadableListening","ranges":[{"startOffset":38698,"endOffset":39420,"count":0}],"isBlockCoverage":false},{"functionName":"nReadingNextTick","ranges":[{"startOffset":39424,"endOffset":39515,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.resume","ranges":[{"startOffset":39673,"endOffset":40196,"count":43},{"startOffset":39765,"endOffset":40115,"count":21},{"startOffset":40035,"endOffset":40084,"count":0}],"isBlockCoverage":true},{"functionName":"resume","ranges":[{"startOffset":40201,"endOffset":40379,"count":21}],"isBlockCoverage":true},{"functionName":"resume_","ranges":[{"startOffset":40383,"endOffset":40708,"count":21},{"startOffset":40512,"endOffset":40539,"count":16},{"startOffset":40690,"endOffset":40705,"count":8}],"isBlockCoverage":true},{"functionName":"Readable.pause","ranges":[{"startOffset":40739,"endOffset":41062,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":41067,"endOffset":41222,"count":31},{"startOffset":41192,"endOffset":41217,"count":35},{"startOffset":41218,"endOffset":41219,"count":7}],"isBlockCoverage":true},{"functionName":"Readable.wrap","ranges":[{"startOffset":41411,"endOffset":42479,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":42526,"endOffset":42580,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.iterator","ranges":[{"startOffset":42615,"endOffset":42763,"count":0}],"isBlockCoverage":false},{"functionName":"streamToAsyncIterator","ranges":[{"startOffset":42768,"endOffset":43025,"count":0}],"isBlockCoverage":false},{"functionName":"createAsyncIterator","ranges":[{"startOffset":43029,"endOffset":44153,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44380,"endOffset":44777,"count":28},{"startOffset":44725,"endOffset":44743,"count":23},{"startOffset":44744,"endOffset":44769,"count":23}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":44784,"endOffset":44919,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45007,"endOffset":45073,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45161,"endOffset":45375,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45469,"endOffset":45537,"count":10}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":45624,"endOffset":45708,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45796,"endOffset":45858,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":45870,"endOffset":45983,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46065,"endOffset":46121,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46207,"endOffset":46297,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46381,"endOffset":46468,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46543,"endOffset":46629,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46679,"endOffset":46765,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46842,"endOffset":46931,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":46938,"endOffset":47237,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":47318,"endOffset":47408,"count":18},{"startOffset":47393,"endOffset":47400,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":47558,"endOffset":47605,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":47691,"endOffset":47751,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":47758,"endOffset":47926,"count":0}],"isBlockCoverage":false},{"functionName":"fromList","ranges":[{"startOffset":48243,"endOffset":50793,"count":7},{"startOffset":48329,"endOffset":48341,"count":0},{"startOffset":48492,"endOffset":48543,"count":0},{"startOffset":48663,"endOffset":48778,"count":5},{"startOffset":48778,"endOffset":49154,"count":2},{"startOffset":48805,"endOffset":48843,"count":0},{"startOffset":48927,"endOffset":49154,"count":0},{"startOffset":49159,"endOffset":50554,"count":0},{"startOffset":50641,"endOffset":50773,"count":0}],"isBlockCoverage":true},{"functionName":"endReadable","ranges":[{"startOffset":50797,"endOffset":51031,"count":31}],"isBlockCoverage":true},{"functionName":"endReadableNT","ranges":[{"startOffset":51035,"endOffset":51954,"count":31},{"startOffset":51225,"endOffset":51246,"count":10},{"startOffset":51248,"endOffset":51951,"count":10},{"startOffset":51337,"endOffset":51370,"count":0},{"startOffset":51372,"endOffset":51428,"count":0},{"startOffset":51664,"endOffset":51874,"count":0}],"isBlockCoverage":true},{"functionName":"endWritableNT","ranges":[{"startOffset":51958,"endOffset":52124,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.from","ranges":[{"startOffset":52144,"endOffset":52215,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":52285,"endOffset":52453,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.fromWeb","ranges":[{"startOffset":52476,"endOffset":52614,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.toWeb","ranges":[{"startOffset":52636,"endOffset":52774,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":52795,"endOffset":53048,"count":0}],"isBlockCoverage":false}]},{"scriptId":"133","url":"node:internal/streams/add-abort-signal","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1763,"count":1}],"isBlockCoverage":false},{"functionName":"validateAbortSignal","ranges":[{"startOffset":581,"endOffset":745,"count":0}],"isBlockCoverage":false},{"functionName":"addAbortSignal","ranges":[{"startOffset":782,"endOffset":1099,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.addAbortSignalNoValidate","ranges":[{"startOffset":1146,"endOffset":1760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"134","url":"node:internal/streams/state","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1382,"count":1}],"isBlockCoverage":false},{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":300,"endOffset":470,"count":36},{"startOffset":399,"endOffset":422,"count":10},{"startOffset":423,"endOffset":466,"count":26},{"startOffset":460,"endOffset":466,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultHighWaterMark","ranges":[{"startOffset":474,"endOffset":606,"count":25},{"startOffset":542,"endOffset":574,"count":0}],"isBlockCoverage":true},{"functionName":"setDefaultHighWaterMark","ranges":[{"startOffset":610,"endOffset":828,"count":0}],"isBlockCoverage":false},{"functionName":"getHighWaterMark","ranges":[{"startOffset":832,"endOffset":1277,"count":36},{"startOffset":981,"endOffset":1199,"count":22},{"startOffset":1026,"endOffset":1166,"count":0},{"startOffset":1199,"endOffset":1276,"count":14}],"isBlockCoverage":true}]},{"scriptId":"135","url":"node:string_decoder","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5307,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeEncoding","ranges":[{"startOffset":2236,"endOffset":2494,"count":7},{"startOffset":2338,"endOffset":2475,"count":0}],"isBlockCoverage":true},{"functionName":"StringDecoder","ranges":[{"startOffset":2713,"endOffset":2916,"count":7}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":3248,"endOffset":3644,"count":7},{"startOffset":3307,"endOffset":3318,"count":0},{"startOffset":3356,"endOffset":3509,"count":0},{"startOffset":3540,"endOffset":3596,"count":0}],"isBlockCoverage":true},{"functionName":"end","ranges":[{"startOffset":3930,"endOffset":4128,"count":7},{"startOffset":3998,"endOffset":4020,"count":0},{"startOffset":4075,"endOffset":4110,"count":0}],"isBlockCoverage":true},{"functionName":"text","ranges":[{"startOffset":4348,"endOffset":4509,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4654,"endOffset":4871,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4969,"endOffset":5034,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5133,"endOffset":5251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"136","url":"node:internal/streams/from","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4549,"count":1}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":255,"endOffset":4521,"count":0}],"isBlockCoverage":false}]},{"scriptId":"137","url":"node:internal/streams/writable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34230,"count":1}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2697,"endOffset":2714,"count":5}],"isBlockCoverage":true},{"functionName":"makeBitMapDescriptor","ranges":[{"startOffset":3803,"endOffset":4034,"count":20}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3881,"endOffset":3925,"count":13}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3932,"endOffset":4024,"count":190},{"startOffset":3963,"endOffset":3983,"count":19},{"startOffset":3983,"endOffset":4017,"count":171}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7077,"endOffset":7155,"count":60},{"startOffset":7124,"endOffset":7145,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":7162,"endOffset":7335,"count":19},{"startOffset":7193,"endOffset":7276,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7411,"endOffset":7511,"count":117},{"startOffset":7462,"endOffset":7496,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":7518,"endOffset":7800,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7883,"endOffset":7983,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7990,"endOffset":8227,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8375,"endOffset":8452,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8459,"endOffset":8632,"count":27},{"startOffset":8573,"endOffset":8625,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8827,"endOffset":8927,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8934,"endOffset":9140,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9216,"endOffset":9294,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9301,"endOffset":9475,"count":0}],"isBlockCoverage":false},{"functionName":"WritableState","ranges":[{"startOffset":9493,"endOffset":11852,"count":13},{"startOffset":9776,"endOffset":9804,"count":0},{"startOffset":9870,"endOffset":9898,"count":0},{"startOffset":10195,"endOffset":10232,"count":0},{"startOffset":10288,"endOffset":10319,"count":0},{"startOffset":10583,"endOffset":10613,"count":0},{"startOffset":10875,"endOffset":10881,"count":0},{"startOffset":10914,"endOffset":10943,"count":0},{"startOffset":10944,"endOffset":10974,"count":0},{"startOffset":11025,"endOffset":11239,"count":0}],"isBlockCoverage":true},{"functionName":"resetBuffer","ranges":[{"startOffset":11856,"endOffset":12025,"count":23}],"isBlockCoverage":true},{"functionName":"getBuffer","ranges":[{"startOffset":12065,"endOffset":12196,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12296,"endOffset":12409,"count":0}],"isBlockCoverage":false},{"functionName":"onConstructed","ranges":[{"startOffset":12461,"endOffset":12655,"count":0}],"isBlockCoverage":false},{"functionName":"Writable","ranges":[{"startOffset":12660,"endOffset":13810,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":13896,"endOffset":14105,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.pipe","ranges":[{"startOffset":14210,"endOffset":14280,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":14285,"endOffset":15715,"count":39},{"startOffset":14392,"endOffset":14419,"count":34},{"startOffset":14421,"endOffset":14442,"count":5},{"startOffset":14468,"endOffset":14515,"count":0},{"startOffset":14584,"endOffset":14689,"count":24},{"startOffset":14658,"endOffset":14681,"count":0},{"startOffset":14689,"endOffset":14811,"count":15},{"startOffset":14754,"endOffset":14811,"count":0},{"startOffset":14850,"endOffset":14997,"count":34},{"startOffset":14903,"endOffset":14990,"count":0},{"startOffset":14997,"endOffset":15308,"count":5},{"startOffset":15068,"endOffset":15308,"count":0},{"startOffset":15368,"endOffset":15419,"count":0},{"startOffset":15465,"endOffset":15517,"count":0},{"startOffset":15532,"endOffset":15627,"count":0}],"isBlockCoverage":true},{"functionName":"Writable.write","ranges":[{"startOffset":15746,"endOffset":15944,"count":39},{"startOffset":15802,"endOffset":15835,"count":32},{"startOffset":15837,"endOffset":15885,"count":17}],"isBlockCoverage":true},{"functionName":"Writable.cork","ranges":[{"startOffset":15975,"endOffset":16078,"count":15}],"isBlockCoverage":true},{"functionName":"Writable.uncork","ranges":[{"startOffset":16111,"endOffset":16362,"count":15},{"startOffset":16234,"endOffset":16276,"count":10}],"isBlockCoverage":true},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":16407,"endOffset":16740,"count":0}],"isBlockCoverage":false},{"functionName":"writeOrBuffer","ranges":[{"startOffset":16935,"endOffset":18154,"count":39},{"startOffset":17053,"endOffset":17056,"count":0},{"startOffset":17191,"endOffset":17611,"count":22},{"startOffset":17237,"endOffset":17315,"count":10},{"startOffset":17427,"endOffset":17451,"count":10},{"startOffset":17453,"endOffset":17499,"count":10},{"startOffset":17542,"endOffset":17561,"count":15},{"startOffset":17563,"endOffset":17606,"count":10},{"startOffset":17611,"endOffset":17858,"count":17},{"startOffset":17927,"endOffset":17967,"count":0}],"isBlockCoverage":true},{"functionName":"doWrite","ranges":[{"startOffset":18158,"endOffset":18608,"count":10},{"startOffset":18405,"endOffset":18454,"count":0},{"startOffset":18480,"endOffset":18517,"count":7},{"startOffset":18517,"endOffset":18577,"count":3}],"isBlockCoverage":true},{"functionName":"onwriteError","ranges":[{"startOffset":18612,"endOffset":19008,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":19012,"endOffset":21680,"count":27},{"startOffset":19132,"endOffset":19209,"count":0},{"startOffset":19329,"endOffset":19334,"count":0},{"startOffset":19470,"endOffset":20104,"count":0},{"startOffset":20156,"endOffset":20199,"count":5},{"startOffset":20217,"endOffset":21617,"count":22},{"startOffset":20279,"endOffset":20300,"count":0},{"startOffset":20671,"endOffset":21032,"count":0},{"startOffset":21086,"endOffset":21148,"count":1},{"startOffset":21150,"endOffset":21210,"count":1},{"startOffset":21210,"endOffset":21610,"count":21},{"startOffset":21462,"endOffset":21610,"count":0},{"startOffset":21617,"endOffset":21672,"count":5}],"isBlockCoverage":true},{"functionName":"afterWriteTick","ranges":[{"startOffset":21684,"endOffset":21875,"count":21}],"isBlockCoverage":true},{"functionName":"afterWrite","ranges":[{"startOffset":21879,"endOffset":22408,"count":26},{"startOffset":22060,"endOffset":22081,"count":0},{"startOffset":22101,"endOffset":22169,"count":0},{"startOffset":22195,"endOffset":22240,"count":27},{"startOffset":22286,"endOffset":22317,"count":0},{"startOffset":22360,"endOffset":22405,"count":5}],"isBlockCoverage":true},{"functionName":"errorBuffer","ranges":[{"startOffset":22483,"endOffset":23052,"count":0}],"isBlockCoverage":false},{"functionName":"clearBuffer","ranges":[{"startOffset":23121,"endOffset":24843,"count":20},{"startOffset":23293,"endOffset":23523,"count":10},{"startOffset":23523,"endOffset":23542,"count":0},{"startOffset":23542,"endOffset":23638,"count":10},{"startOffset":23638,"endOffset":23655,"count":7},{"startOffset":23657,"endOffset":24294,"count":7},{"startOffset":23760,"endOffset":23765,"count":0},{"startOffset":24063,"endOffset":24073,"count":0},{"startOffset":24074,"endOffset":24091,"count":0},{"startOffset":24294,"endOffset":24800,"count":3},{"startOffset":24429,"endOffset":24432,"count":0},{"startOffset":24553,"endOffset":24588,"count":0},{"startOffset":24660,"endOffset":24795,"count":0},{"startOffset":24800,"endOffset":24842,"count":10}],"isBlockCoverage":true},{"functionName":"callback","ranges":[{"startOffset":23768,"endOffset":23881,"count":7},{"startOffset":23828,"endOffset":23874,"count":19}],"isBlockCoverage":true},{"functionName":"Writable._write","ranges":[{"startOffset":24875,"endOffset":25050,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.end","ranges":[{"startOffset":25118,"endOffset":26818,"count":10},{"startOffset":25226,"endOffset":25290,"count":0},{"startOffset":25332,"endOffset":25380,"count":0},{"startOffset":25419,"endOffset":25531,"count":0},{"startOffset":25602,"endOffset":25651,"count":0},{"startOffset":25666,"endOffset":25694,"count":0},{"startOffset":26178,"endOffset":26376,"count":0},{"startOffset":26412,"endOffset":26797,"count":0}],"isBlockCoverage":true},{"functionName":"needFinish","ranges":[{"startOffset":26823,"endOffset":27266,"count":25}],"isBlockCoverage":true},{"functionName":"onFinish","ranges":[{"startOffset":27270,"endOffset":27916,"count":10},{"startOffset":27355,"endOffset":27435,"count":0},{"startOffset":27470,"endOffset":27581,"count":0}],"isBlockCoverage":true},{"functionName":"prefinish","ranges":[{"startOffset":27920,"endOffset":28464,"count":15},{"startOffset":28018,"endOffset":28037,"count":5},{"startOffset":28037,"endOffset":28120,"count":10},{"startOffset":28122,"endOffset":28367,"count":10},{"startOffset":28273,"endOffset":28330,"count":0},{"startOffset":28367,"endOffset":28461,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28226,"endOffset":28263,"count":10}],"isBlockCoverage":true},{"functionName":"finishMaybe","ranges":[{"startOffset":28468,"endOffset":28986,"count":15},{"startOffset":28603,"endOffset":28978,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28678,"endOffset":28846,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":28990,"endOffset":29655,"count":10},{"startOffset":29614,"endOffset":29647,"count":0}],"isBlockCoverage":true},{"functionName":"callFinishedCallbacks","ranges":[{"startOffset":29659,"endOffset":29988,"count":10},{"startOffset":29767,"endOffset":29987,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":30077,"endOffset":30182,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30235,"endOffset":30343,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":30350,"endOffset":30606,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30658,"endOffset":31072,"count":60}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":31079,"endOffset":31218,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31278,"endOffset":31399,"count":10},{"startOffset":31384,"endOffset":31391,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":31461,"endOffset":31584,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31642,"endOffset":31740,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31797,"endOffset":31916,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31977,"endOffset":32133,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32198,"endOffset":32298,"count":20}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":32356,"endOffset":32452,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32510,"endOffset":32603,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":32678,"endOffset":32778,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32842,"endOffset":33106,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.destroy","ranges":[{"startOffset":33189,"endOffset":33479,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._destroy","ranges":[{"startOffset":33570,"endOffset":33604,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.<computed>","ranges":[{"startOffset":33657,"endOffset":33697,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":33767,"endOffset":33935,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.fromWeb","ranges":[{"startOffset":33958,"endOffset":34096,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.toWeb","ranges":[{"startOffset":34118,"endOffset":34227,"count":0}],"isBlockCoverage":false}]},{"scriptId":"138","url":"node:stream/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":961,"count":1}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":336,"endOffset":907,"count":0}],"isBlockCoverage":false}]},{"scriptId":"139","url":"node:internal/streams/transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7325,"count":1}],"isBlockCoverage":false},{"functionName":"Transform","ranges":[{"startOffset":4001,"endOffset":5623,"count":0}],"isBlockCoverage":true},{"functionName":"final","ranges":[{"startOffset":5627,"endOffset":6097,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":6101,"endOffset":6186,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._transform","ranges":[{"startOffset":6262,"endOffset":6359,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._write","ranges":[{"startOffset":6393,"endOffset":7158,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._read","ranges":[{"startOffset":7191,"endOffset":7322,"count":0}],"isBlockCoverage":false}]},{"scriptId":"140","url":"node:internal/streams/passthrough","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1809,"count":1}],"isBlockCoverage":false},{"functionName":"PassThrough","ranges":[{"startOffset":1566,"endOffset":1713,"count":0}],"isBlockCoverage":false},{"functionName":"PassThrough._transform","ranges":[{"startOffset":1752,"endOffset":1806,"count":0}],"isBlockCoverage":false}]},{"scriptId":"141","url":"node:internal/stream_base_commons","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7337,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1047,"endOffset":1074,"count":0}],"isBlockCoverage":false},{"functionName":"handleWriteReq","ranges":[{"startOffset":1198,"endOffset":2086,"count":20},{"startOffset":1302,"endOffset":1475,"count":0},{"startOffset":1481,"endOffset":1495,"count":3},{"startOffset":1501,"endOffset":1566,"count":3},{"startOffset":1572,"endOffset":1584,"count":17},{"startOffset":1590,"endOffset":1652,"count":17},{"startOffset":1658,"endOffset":1721,"count":0},{"startOffset":1727,"endOffset":1739,"count":0},{"startOffset":1745,"endOffset":1758,"count":0},{"startOffset":1764,"endOffset":1779,"count":0},{"startOffset":1785,"endOffset":1850,"count":0},{"startOffset":1856,"endOffset":2078,"count":0}],"isBlockCoverage":true},{"functionName":"onWriteComplete","ranges":[{"startOffset":2090,"endOffset":2806,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteWrap","ranges":[{"startOffset":2810,"endOffset":3059,"count":27}],"isBlockCoverage":true},{"functionName":"writevGeneric","ranges":[{"startOffset":3063,"endOffset":3725,"count":7},{"startOffset":3228,"endOffset":3329,"count":0},{"startOffset":3423,"endOffset":3540,"count":19}],"isBlockCoverage":true},{"functionName":"writeGeneric","ranges":[{"startOffset":3729,"endOffset":3940,"count":20}],"isBlockCoverage":true},{"functionName":"afterWriteDispatched","ranges":[{"startOffset":3944,"endOffset":4261,"count":27},{"startOffset":4116,"endOffset":4171,"count":0}],"isBlockCoverage":true},{"functionName":"onStreamRead","ranges":[{"startOffset":4265,"endOffset":6272,"count":5},{"startOffset":4578,"endOffset":4845,"count":0},{"startOffset":5034,"endOffset":5232,"count":0},{"startOffset":5256,"endOffset":6269,"count":0}],"isBlockCoverage":true},{"functionName":"setStreamTimeout","ranges":[{"startOffset":6276,"endOffset":7114,"count":0}],"isBlockCoverage":false}]},{"scriptId":"142","url":"node:diagnostics_channel","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10083,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":768,"endOffset":1198,"count":1}],"isBlockCoverage":false},{"functionName":"#finalizers","ranges":[{"startOffset":849,"endOffset":887,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":895,"endOffset":1015,"count":23}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1021,"endOffset":1071,"count":23},{"startOffset":1058,"endOffset":1063,"count":0}],"isBlockCoverage":true},{"functionName":"incRef","ranges":[{"startOffset":1077,"endOffset":1133,"count":0}],"isBlockCoverage":false},{"functionName":"decRef","ranges":[{"startOffset":1139,"endOffset":1195,"count":0}],"isBlockCoverage":false},{"functionName":"markActive","ranges":[{"startOffset":1202,"endOffset":1412,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMarkInactive","ranges":[{"startOffset":1416,"endOffset":1792,"count":0}],"isBlockCoverage":false},{"functionName":"defaultTransform","ranges":[{"startOffset":1796,"endOffset":1848,"count":0}],"isBlockCoverage":false},{"functionName":"wrapStoreRun","ranges":[{"startOffset":1852,"endOffset":2194,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":2280,"endOffset":2454,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":2460,"endOffset":2747,"count":0}],"isBlockCoverage":false},{"functionName":"bindStore","ranges":[{"startOffset":2753,"endOffset":2925,"count":0}],"isBlockCoverage":false},{"functionName":"unbindStore","ranges":[{"startOffset":2931,"endOffset":3141,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":3147,"endOffset":3192,"count":0}],"isBlockCoverage":false},{"functionName":"publish","ranges":[{"startOffset":3198,"endOffset":3518,"count":0}],"isBlockCoverage":false},{"functionName":"runStores","ranges":[{"startOffset":3524,"endOffset":3876,"count":0}],"isBlockCoverage":false},{"functionName":"Channel","ranges":[{"startOffset":3902,"endOffset":4049,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4062,"endOffset":4251,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":4257,"endOffset":4345,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":4351,"endOffset":4390,"count":0}],"isBlockCoverage":false},{"functionName":"bindStore","ranges":[{"startOffset":4396,"endOffset":4492,"count":0}],"isBlockCoverage":false},{"functionName":"unbindStore","ranges":[{"startOffset":4498,"endOffset":4537,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":4543,"endOffset":4589,"count":30}],"isBlockCoverage":true},{"functionName":"publish","ranges":[{"startOffset":4595,"endOffset":4607,"count":0}],"isBlockCoverage":false},{"functionName":"runStores","ranges":[{"startOffset":4613,"endOffset":4702,"count":0}],"isBlockCoverage":false},{"functionName":"channel","ranges":[{"startOffset":4747,"endOffset":5022,"count":23},{"startOffset":4827,"endOffset":4842,"count":0},{"startOffset":4877,"endOffset":4904,"count":0},{"startOffset":4906,"endOffset":4988,"count":0}],"isBlockCoverage":true},{"functionName":"subscribe","ranges":[{"startOffset":5026,"endOffset":5118,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":5122,"endOffset":5218,"count":0}],"isBlockCoverage":false},{"functionName":"hasSubscribers","ranges":[{"startOffset":5222,"endOffset":5362,"count":0}],"isBlockCoverage":false},{"functionName":"assertChannel","ranges":[{"startOffset":5461,"endOffset":5607,"count":0}],"isBlockCoverage":false},{"functionName":"TracingChannel","ranges":[{"startOffset":5637,"endOffset":6810,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":6816,"endOffset":6974,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":6980,"endOffset":7225,"count":0}],"isBlockCoverage":false},{"functionName":"traceSync","ranges":[{"startOffset":7231,"endOffset":7673,"count":0}],"isBlockCoverage":false},{"functionName":"tracePromise","ranges":[{"startOffset":7679,"endOffset":8816,"count":0}],"isBlockCoverage":false},{"functionName":"traceCallback","ranges":[{"startOffset":8822,"endOffset":9866,"count":0}],"isBlockCoverage":false},{"functionName":"tracingChannel","ranges":[{"startOffset":9873,"endOffset":9963,"count":0}],"isBlockCoverage":false}]},{"scriptId":"143","url":"node:internal/perf/observe","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17335,"count":1}],"isBlockCoverage":false},{"functionName":"queuePending","ranges":[{"startOffset":2721,"endOffset":2992,"count":0}],"isBlockCoverage":false},{"functionName":"getObserverType","ranges":[{"startOffset":2996,"endOffset":3344,"count":16},{"startOffset":3053,"endOffset":3102,"count":0},{"startOffset":3108,"endOffset":3163,"count":0},{"startOffset":3169,"endOffset":3222,"count":10},{"startOffset":3228,"endOffset":3279,"count":5},{"startOffset":3285,"endOffset":3336,"count":1}],"isBlockCoverage":true},{"functionName":"maybeDecrementObserverCounts","ranges":[{"startOffset":3348,"endOffset":3783,"count":0}],"isBlockCoverage":false},{"functionName":"maybeIncrementObserverCount","ranges":[{"startOffset":3787,"endOffset":4140,"count":0}],"isBlockCoverage":false},{"functionName":"performanceObserverSorter","ranges":[{"startOffset":4220,"endOffset":4289,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceObserverEntryList","ranges":[{"startOffset":4334,"endOffset":4568,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":4574,"endOffset":4716,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":4722,"endOffset":5035,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":5041,"endOffset":5548,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5554,"endOffset":5811,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6178,"endOffset":9904,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":10405,"endOffset":10614,"count":0}],"isBlockCoverage":false},{"functionName":"bufferUserTiming","ranges":[{"startOffset":10680,"endOffset":11735,"count":0}],"isBlockCoverage":false},{"functionName":"bufferResourceTiming","ranges":[{"startOffset":12032,"endOffset":13328,"count":0}],"isBlockCoverage":false},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":13419,"endOffset":13696,"count":0}],"isBlockCoverage":false},{"functionName":"setDispatchBufferFull","ranges":[{"startOffset":13700,"endOffset":13767,"count":1}],"isBlockCoverage":true},{"functionName":"clearEntriesFromBuffer","ranges":[{"startOffset":13771,"endOffset":14386,"count":0}],"isBlockCoverage":false},{"functionName":"filterBufferMapByNameAndType","ranges":[{"startOffset":14390,"endOffset":15256,"count":0}],"isBlockCoverage":false},{"functionName":"observerCallback","ranges":[{"startOffset":15260,"endOffset":16412,"count":0}],"isBlockCoverage":false},{"functionName":"hasObserver","ranges":[{"startOffset":16453,"endOffset":16575,"count":16}],"isBlockCoverage":true},{"functionName":"startPerf","ranges":[{"startOffset":16581,"endOffset":16696,"count":0}],"isBlockCoverage":false},{"functionName":"stopPerf","ranges":[{"startOffset":16700,"endOffset":17029,"count":0}],"isBlockCoverage":false}]},{"scriptId":"144","url":"node:internal/perf/performance_entry","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3412,"count":1}],"isBlockCoverage":false},{"functionName":"isPerformanceEntry","ranges":[{"startOffset":703,"endOffset":778,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceEntry","ranges":[{"startOffset":810,"endOffset":1180,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":1186,"endOffset":1289,"count":0}],"isBlockCoverage":false},{"functionName":"get entryType","ranges":[{"startOffset":1295,"endOffset":1413,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":1419,"endOffset":1537,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1543,"endOffset":1658,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1664,"endOffset":1917,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":1923,"endOffset":2153,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceEntry","ranges":[{"startOffset":2385,"endOffset":2523,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":2646,"endOffset":2759,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2765,"endOffset":3025,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceNodeEntry","ranges":[{"startOffset":3032,"endOffset":3242,"count":0}],"isBlockCoverage":false}]},{"scriptId":"145","url":"node:internal/tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6722,"count":1}],"isBlockCoverage":false},{"functionName":"warnOnDeactivatedColors","ranges":[{"startOffset":2629,"endOffset":3102,"count":0}],"isBlockCoverage":false},{"functionName":"getColorDepth","ranges":[{"startOffset":3265,"endOffset":6375,"count":18},{"startOffset":3472,"endOffset":3846,"count":0},{"startOffset":4195,"endOffset":4223,"count":0},{"startOffset":4342,"endOffset":4449,"count":1},{"startOffset":4747,"endOffset":4802,"count":0},{"startOffset":4809,"endOffset":5599,"count":0},{"startOffset":5605,"endOffset":5622,"count":0},{"startOffset":5628,"endOffset":5669,"count":0},{"startOffset":5675,"endOffset":5723,"count":0},{"startOffset":5728,"endOffset":5796,"count":0},{"startOffset":5798,"endOffset":6374,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5068,"endOffset":5089,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6158,"endOffset":6211,"count":0}],"isBlockCoverage":false},{"functionName":"hasColors","ranges":[{"startOffset":6379,"endOffset":6662,"count":0}],"isBlockCoverage":false}]},{"scriptId":"146","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/has-flag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":330,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":328,"count":32},{"startOffset":102,"endOffset":106,"count":0},{"startOffset":128,"endOffset":133,"count":0},{"startOffset":262,"endOffset":325,"count":0}],"isBlockCoverage":true}]},{"scriptId":"147","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/log-symbols/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":414,"count":1},{"startOffset":402,"endOffset":412,"count":0}],"isBlockCoverage":true}]},{"scriptId":"148","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/chalk/source/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6073,"count":1},{"startOffset":1532,"endOffset":1764,"count":44},{"startOffset":2057,"endOffset":2352,"count":8},{"startOffset":2386,"endOffset":2752,"count":8},{"startOffset":5968,"endOffset":5971,"count":0}],"isBlockCoverage":true},{"functionName":"applyOptions","ranges":[{"startOffset":430,"endOffset":809,"count":2},{"startOffset":477,"endOffset":558,"count":1},{"startOffset":560,"endOffset":638,"count":0},{"startOffset":729,"endOffset":732,"count":0},{"startOffset":778,"endOffset":790,"count":1},{"startOffset":791,"endOffset":806,"count":1}],"isBlockCoverage":true},{"functionName":"ChalkClass","ranges":[{"startOffset":832,"endOffset":941,"count":0}],"isBlockCoverage":false},{"functionName":"chalkFactory","ranges":[{"startOffset":966,"endOffset":1408,"count":2}],"isBlockCoverage":true},{"functionName":"chalk.template","ranges":[{"startOffset":1048,"endOffset":1106,"count":0}],"isBlockCoverage":false},{"functionName":"chalk.template.constructor","ranges":[{"startOffset":1235,"endOffset":1340,"count":0}],"isBlockCoverage":false},{"functionName":"Chalk","ranges":[{"startOffset":1411,"endOffset":1469,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1559,"endOffset":1758,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1786,"endOffset":1933,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2080,"endOffset":2346,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2476,"endOffset":2746,"count":0}],"isBlockCoverage":false},{"functionName":"Object.defineProperties","ranges":[{"startOffset":2792,"endOffset":2800,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2848,"endOffset":2892,"count":8}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2896,"endOffset":2946,"count":0}],"isBlockCoverage":false},{"functionName":"createStyler","ranges":[{"startOffset":2976,"endOffset":3250,"count":4},{"startOffset":3101,"endOffset":3184,"count":0}],"isBlockCoverage":true},{"functionName":"createBuilder","ranges":[{"startOffset":3275,"endOffset":4073,"count":4}],"isBlockCoverage":true},{"functionName":"builder","ranges":[{"startOffset":3323,"endOffset":3790,"count":8},{"startOffset":3373,"endOffset":3402,"count":0},{"startOffset":3404,"endOffset":3556,"count":0},{"startOffset":3763,"endOffset":3785,"count":0}],"isBlockCoverage":true},{"functionName":"applyStyle","ranges":[{"startOffset":4095,"endOffset":5135,"count":8},{"startOffset":4148,"endOffset":4190,"count":0},{"startOffset":4248,"endOffset":4269,"count":0},{"startOffset":4346,"endOffset":4675,"count":0},{"startOffset":5012,"endOffset":5095,"count":0}],"isBlockCoverage":true},{"functionName":"chalkTag","ranges":[{"startOffset":5169,"endOffset":5764,"count":0}],"isBlockCoverage":false}]},{"scriptId":"149","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/ansi-styles/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4139,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi16","ranges":[{"startOffset":34,"endOffset":129,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi256","ranges":[{"startOffset":152,"endOffset":255,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi16m","ranges":[{"startOffset":278,"endOffset":402,"count":0}],"isBlockCoverage":false},{"functionName":"ansi2ansi","ranges":[{"startOffset":423,"endOffset":429,"count":0}],"isBlockCoverage":false},{"functionName":"rgb2rgb","ranges":[{"startOffset":447,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"setLazyProperty","ranges":[{"startOffset":496,"endOffset":786,"count":36}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":575,"endOffset":737,"count":0}],"isBlockCoverage":false},{"functionName":"makeDynamicStyles","ranges":[{"startOffset":879,"endOffset":1400,"count":0}],"isBlockCoverage":false},{"functionName":"assembleStyles","ranges":[{"startOffset":1403,"endOffset":4021,"count":6},{"startOffset":2869,"endOffset":3201,"count":18},{"startOffset":2929,"endOffset":3108,"count":264}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3401,"endOffset":3464,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3509,"endOffset":3574,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3619,"endOffset":3678,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3722,"endOffset":3784,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3831,"endOffset":3895,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3942,"endOffset":4000,"count":0}],"isBlockCoverage":false}]},{"scriptId":"150","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2748,"count":1},{"startOffset":250,"endOffset":270,"count":0},{"startOffset":374,"endOffset":394,"count":0},{"startOffset":422,"endOffset":646,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":648,"endOffset":806,"count":2},{"startOffset":699,"endOffset":719,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":808,"endOffset":2439,"count":2},{"startOffset":881,"endOffset":897,"count":0},{"startOffset":985,"endOffset":1001,"count":0},{"startOffset":1030,"endOffset":1046,"count":0},{"startOffset":1080,"endOffset":1107,"count":0},{"startOffset":1109,"endOffset":1125,"count":0},{"startOffset":1184,"endOffset":1202,"count":0},{"startOffset":1570,"endOffset":1573,"count":0},{"startOffset":1578,"endOffset":2438,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1706,"endOffset":1725,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":2441,"endOffset":2570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"151","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/chalk/source/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1035,"count":1}],"isBlockCoverage":true},{"functionName":"stringReplaceAll","ranges":[{"startOffset":40,"endOffset":505,"count":0}],"isBlockCoverage":false},{"functionName":"stringEncaseCRLFWithFirstIndex","ranges":[{"startOffset":547,"endOffset":959,"count":0}],"isBlockCoverage":false}]},{"scriptId":"152","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/is-unicode-supported/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":313,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":311,"count":1},{"startOffset":75,"endOffset":94,"count":0},{"startOffset":228,"endOffset":270,"count":0},{"startOffset":271,"endOffset":308,"count":0}],"isBlockCoverage":true}]},{"scriptId":"153","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/runner.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34228,"count":1},{"startOffset":5791,"endOffset":5810,"count":0}],"isBlockCoverage":true},{"functionName":"Runner","ranges":[{"startOffset":3983,"endOffset":5631,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4396,"endOffset":4678,"count":6},{"startOffset":4467,"endOffset":4481,"count":0},{"startOffset":4483,"endOffset":4641,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4719,"endOffset":4773,"count":12}],"isBlockCoverage":true},{"functionName":"Runner.unhandled","ranges":[{"startOffset":4947,"endOffset":5626,"count":0}],"isBlockCoverage":false},{"functionName":"Runner._addEventListener","ranges":[{"startOffset":6139,"endOffset":7047,"count":11},{"startOffset":6388,"endOffset":6442,"count":1},{"startOffset":6443,"endOffset":6511,"count":0},{"startOffset":6516,"endOffset":6633,"count":0},{"startOffset":6731,"endOffset":6765,"count":1},{"startOffset":6770,"endOffset":6781,"count":10},{"startOffset":6849,"endOffset":6881,"count":0}],"isBlockCoverage":true},{"functionName":"Runner._removeEventListener","ranges":[{"startOffset":7358,"endOffset":7971,"count":2},{"startOffset":7486,"endOffset":7886,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.dispose","ranges":[{"startOffset":8147,"endOffset":8477,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.grep","ranges":[{"startOffset":8731,"endOffset":8896,"count":1}],"isBlockCoverage":true},{"functionName":"Runner.grepTotal","ranges":[{"startOffset":9094,"endOffset":9350,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9167,"endOffset":9329,"count":24},{"startOffset":9258,"endOffset":9287,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.globalProps","ranges":[{"startOffset":9465,"endOffset":9691,"count":1},{"startOffset":9579,"endOffset":9672,"count":8},{"startOffset":9617,"endOffset":9640,"count":6},{"startOffset":9640,"endOffset":9672,"count":2}],"isBlockCoverage":true},{"functionName":"Runner.globals","ranges":[{"startOffset":9859,"endOffset":10036,"count":2},{"startOffset":9901,"endOffset":9932,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.checkGlobals","ranges":[{"startOffset":10130,"endOffset":10674,"count":18},{"startOffset":10189,"endOffset":10672,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10603,"endOffset":10616,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.fail","ranges":[{"startOffset":11450,"endOffset":12479,"count":2},{"startOffset":11529,"endOffset":11538,"count":0},{"startOffset":11540,"endOffset":11557,"count":0},{"startOffset":11604,"endOffset":11789,"count":0},{"startOffset":11917,"endOffset":11951,"count":0},{"startOffset":12277,"endOffset":12377,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.hook","ranges":[{"startOffset":12631,"endOffset":15427,"count":52},{"startOffset":12678,"endOffset":12690,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":12776,"endOffset":15370,"count":64},{"startOffset":12835,"endOffset":12861,"count":51},{"startOffset":12861,"endOffset":12935,"count":13},{"startOffset":12935,"endOffset":12993,"count":0},{"startOffset":12993,"endOffset":13171,"count":13},{"startOffset":13033,"endOffset":13118,"count":1},{"startOffset":13118,"endOffset":13171,"count":12},{"startOffset":13171,"endOffset":13335,"count":13},{"startOffset":13335,"endOffset":13443,"count":3},{"startOffset":13443,"endOffset":15369,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13381,"endOffset":13435,"count":0}],"isBlockCoverage":false},{"functionName":"cbHookRun","ranges":[{"startOffset":13458,"endOffset":14859,"count":12},{"startOffset":13541,"endOffset":13591,"count":0},{"startOffset":13642,"endOffset":14589,"count":0},{"startOffset":14604,"endOffset":14726,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14193,"endOffset":14255,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14289,"endOffset":14353,"count":0}],"isBlockCoverage":false},{"functionName":"setHookTitle","ranges":[{"startOffset":14867,"endOffset":15366,"count":25},{"startOffset":14943,"endOffset":14956,"count":3},{"startOffset":15002,"endOffset":15093,"count":12},{"startOffset":15093,"endOffset":15360,"count":13},{"startOffset":15157,"endOffset":15211,"count":12},{"startOffset":15211,"endOffset":15286,"count":1},{"startOffset":15271,"endOffset":15275,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15393,"endOffset":15423,"count":52}],"isBlockCoverage":true},{"functionName":"Runner.hooks","ranges":[{"startOffset":15649,"endOffset":16064,"count":12}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":15726,"endOffset":16039,"count":48},{"startOffset":15790,"endOffset":15841,"count":12},{"startOffset":15841,"endOffset":16038,"count":36}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15863,"endOffset":16033,"count":36},{"startOffset":15895,"endOffset":16000,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.hookUp","ranges":[{"startOffset":16205,"endOffset":16322,"count":6}],"isBlockCoverage":true},{"functionName":"Runner.hookDown","ranges":[{"startOffset":16471,"endOffset":16578,"count":6}],"isBlockCoverage":true},{"functionName":"Runner.parents","ranges":[{"startOffset":16715,"endOffset":16871,"count":12},{"startOffset":16797,"endOffset":16852,"count":24}],"isBlockCoverage":true},{"functionName":"Runner.runTest","ranges":[{"startOffset":16996,"endOffset":17439,"count":6},{"startOffset":17037,"endOffset":17067,"count":0},{"startOffset":17126,"endOffset":17143,"count":0},{"startOffset":17167,"endOffset":17199,"count":0},{"startOffset":17315,"endOffset":17376,"count":0},{"startOffset":17407,"endOffset":17437,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17240,"endOffset":17286,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.runTests","ranges":[{"startOffset":17621,"endOffset":22218,"count":8}],"isBlockCoverage":true},{"functionName":"hookErr","ranges":[{"startOffset":17713,"endOffset":18418,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":18422,"endOffset":22159,"count":14},{"startOffset":18509,"endOffset":18523,"count":11},{"startOffset":18525,"endOffset":18550,"count":0},{"startOffset":18573,"endOffset":18599,"count":0},{"startOffset":18614,"endOffset":18664,"count":0},{"startOffset":18741,"endOffset":18767,"count":8},{"startOffset":18767,"endOffset":18854,"count":6},{"startOffset":18854,"endOffset":18883,"count":0},{"startOffset":18883,"endOffset":18900,"count":6},{"startOffset":18900,"endOffset":19540,"count":0},{"startOffset":19540,"endOffset":19610,"count":6},{"startOffset":19610,"endOffset":19901,"count":0},{"startOffset":19901,"endOffset":22158,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20039,"endOffset":22153,"count":6},{"startOffset":20138,"endOffset":20709,"count":0},{"startOffset":20725,"endOffset":20780,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20606,"endOffset":20699,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20840,"endOffset":22145,"count":6},{"startOffset":20947,"endOffset":21307,"count":0},{"startOffset":21322,"endOffset":21949,"count":2},{"startOffset":21405,"endOffset":21775,"count":0},{"startOffset":21949,"endOffset":22144,"count":4}],"isBlockCoverage":true},{"functionName":"Runner.runSuite","ranges":[{"startOffset":22391,"endOffset":24036,"count":8},{"startOffset":22570,"endOffset":22584,"count":5},{"startOffset":22587,"endOffset":22643,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":22712,"endOffset":23608,"count":15},{"startOffset":22756,"endOffset":23106,"count":0},{"startOffset":23129,"endOffset":23157,"count":0},{"startOffset":23208,"endOffset":23236,"count":8},{"startOffset":23236,"endOffset":23467,"count":7},{"startOffset":23467,"endOffset":23558,"count":0},{"startOffset":23558,"endOffset":23604,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23494,"endOffset":23550,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":23612,"endOffset":23876,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23780,"endOffset":23870,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23938,"endOffset":24032,"count":8},{"startOffset":23968,"endOffset":23996,"count":0}],"isBlockCoverage":true},{"functionName":"Runner._uncaught","ranges":[{"startOffset":24882,"endOffset":27547,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.run","ranges":[{"startOffset":27914,"endOffset":29933,"count":1},{"startOffset":28000,"endOffset":28005,"count":0},{"startOffset":28062,"endOffset":28079,"count":0},{"startOffset":29611,"endOffset":29871,"count":0}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":28065,"endOffset":28079,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":28096,"endOffset":28291,"count":0}],"isBlockCoverage":false},{"functionName":"begin","ranges":[{"startOffset":28310,"endOffset":28518,"count":1}],"isBlockCoverage":true},{"functionName":"prepare","ranges":[{"startOffset":28539,"endOffset":28913,"count":1},{"startOffset":28642,"endOffset":28731,"count":0},{"startOffset":28800,"endOffset":28888,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29045,"endOffset":29092,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29149,"endOffset":29288,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.linkPartialObjects","ranges":[{"startOffset":30774,"endOffset":30809,"count":0}],"isBlockCoverage":false},{"functionName":"runAsync","ranges":[{"startOffset":31197,"endOffset":31304,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31255,"endOffset":31300,"count":1}],"isBlockCoverage":true},{"functionName":"Runner.abort","ranges":[{"startOffset":31439,"endOffset":31522,"count":0}],"isBlockCoverage":false},{"functionName":"isParallelMode","ranges":[{"startOffset":31723,"endOffset":31768,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.workerReporter","ranges":[{"startOffset":32118,"endOffset":32214,"count":0}],"isBlockCoverage":false},{"functionName":"filterLeaks","ranges":[{"startOffset":32362,"endOffset":33400,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":33615,"endOffset":33715,"count":2},{"startOffset":33669,"endOffset":33712,"count":0}],"isBlockCoverage":true},{"functionName":"thrown2Error","ranges":[{"startOffset":33878,"endOffset":34031,"count":0}],"isBlockCoverage":false}]},{"scriptId":"154","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/pending.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":221,"count":1}],"isBlockCoverage":true},{"functionName":"Pending","ranges":[{"startOffset":165,"endOffset":220,"count":0}],"isBlockCoverage":false}]},{"scriptId":"155","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":314,"count":1},{"startOffset":218,"endOffset":264,"count":0}],"isBlockCoverage":true}]},{"scriptId":"156","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4685,"count":1},{"startOffset":816,"endOffset":832,"count":0},{"startOffset":1454,"endOffset":1555,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":334,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1779,"endOffset":1819,"count":159}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1828,"endOffset":2286,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":2362,"endOffset":2501,"count":19},{"startOffset":2425,"endOffset":2464,"count":0}],"isBlockCoverage":true},{"functionName":"formatArgs","ranges":[{"startOffset":2574,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":3010,"endOffset":3125,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3214,"endOffset":3298,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3379,"endOffset":3636,"count":1},{"startOffset":3424,"endOffset":3462,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3753,"endOffset":3799,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":3964,"endOffset":4167,"count":19},{"startOffset":4100,"endOffset":4165,"count":0}],"isBlockCoverage":true},{"functionName":"formatters.o","ranges":[{"startOffset":4332,"endOffset":4488,"count":0}],"isBlockCoverage":false},{"functionName":"formatters.O","ranges":[{"startOffset":4581,"endOffset":4683,"count":0}],"isBlockCoverage":false}]},{"scriptId":"157","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/debug/src/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6289,"count":1}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":108,"endOffset":6263,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":422,"endOffset":464,"count":9}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":1012,"endOffset":1290,"count":19},{"startOffset":1108,"endOffset":1213,"count":298}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1460,"endOffset":3626,"count":19}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1585,"endOffset":2796,"count":104},{"startOffset":1668,"endOffset":1795,"count":0},{"startOffset":1963,"endOffset":2763,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2147,"endOffset":2619,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3149,"endOffset":3415,"count":104},{"startOffset":3190,"endOffset":3225,"count":0},{"startOffset":3278,"endOffset":3384,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3425,"endOffset":3460,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3629,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3993,"endOffset":4609,"count":1},{"startOffset":4205,"endOffset":4217,"count":0},{"startOffset":4366,"endOffset":4602,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":4695,"endOffset":4920,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":5063,"endOffset":5450,"count":0}],"isBlockCoverage":false},{"functionName":"toNamespace","ranges":[{"startOffset":5568,"endOffset":5704,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":5793,"endOffset":5902,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":6021,"endOffset":6197,"count":0}],"isBlockCoverage":false}]},{"scriptId":"158","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/debug/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3023,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":791,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":915,"endOffset":1998,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2096,"endOffset":2413,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2510,"endOffset":2846,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2882,"endOffset":3022,"count":0}],"isBlockCoverage":false}]},{"scriptId":"159","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/runnable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10634,"count":1}],"isBlockCoverage":true},{"functionName":"Runnable","ranges":[{"startOffset":774,"endOffset":1152,"count":9},{"startOffset":861,"endOffset":866,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1078,"endOffset":1128,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.reset","ranges":[{"startOffset":1329,"endOffset":1459,"count":15}],"isBlockCoverage":true},{"functionName":"Runnable.timeout","ranges":[{"startOffset":2161,"endOffset":2654,"count":33},{"startOffset":2202,"endOffset":2233,"count":24},{"startOffset":2233,"endOffset":2264,"count":9},{"startOffset":2264,"endOffset":2296,"count":0},{"startOffset":2296,"endOffset":2484,"count":9},{"startOffset":2486,"endOffset":2514,"count":0},{"startOffset":2514,"endOffset":2607,"count":9},{"startOffset":2607,"endOffset":2637,"count":0},{"startOffset":2637,"endOffset":2653,"count":9}],"isBlockCoverage":true},{"functionName":"Runnable.slow","ranges":[{"startOffset":2814,"endOffset":3035,"count":17},{"startOffset":2854,"endOffset":2882,"count":9},{"startOffset":2884,"endOffset":2912,"count":8},{"startOffset":2912,"endOffset":2943,"count":9},{"startOffset":2943,"endOffset":2975,"count":0},{"startOffset":2975,"endOffset":3034,"count":9}],"isBlockCoverage":true},{"functionName":"Runnable.skip","ranges":[{"startOffset":3143,"endOffset":3235,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.isPending","ranges":[{"startOffset":3360,"endOffset":3442,"count":33}],"isBlockCoverage":true},{"functionName":"Runnable.isFailed","ranges":[{"startOffset":3562,"endOffset":3646,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.isPassed","ranges":[{"startOffset":3766,"endOffset":3850,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.retries","ranges":[{"startOffset":3938,"endOffset":4032,"count":11},{"startOffset":3978,"endOffset":4009,"count":2},{"startOffset":4009,"endOffset":4031,"count":9}],"isBlockCoverage":true},{"functionName":"Runnable.currentRetry","ranges":[{"startOffset":4120,"endOffset":4224,"count":2},{"startOffset":4196,"endOffset":4223,"count":0}],"isBlockCoverage":true},{"functionName":"Runnable.fullTitle","ranges":[{"startOffset":4420,"endOffset":4472,"count":30}],"isBlockCoverage":true},{"functionName":"Runnable.titlePath","ranges":[{"startOffset":4670,"endOffset":4740,"count":30}],"isBlockCoverage":true},{"functionName":"Runnable.clearTimeout","ranges":[{"startOffset":4822,"endOffset":4865,"count":24}],"isBlockCoverage":true},{"functionName":"Runnable.resetTimeout","ranges":[{"startOffset":4947,"endOffset":5237,"count":6},{"startOffset":5024,"endOffset":5041,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5091,"endOffset":5229,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.globals","ranges":[{"startOffset":5384,"endOffset":5504,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.run","ranges":[{"startOffset":5617,"endOffset":9166,"count":19},{"startOffset":5772,"endOffset":5784,"count":0},{"startOffset":6578,"endOffset":6712,"count":0},{"startOffset":6773,"endOffset":7458,"count":0},{"startOffset":7524,"endOffset":7724,"count":0}],"isBlockCoverage":true},{"functionName":"multiple","ranges":[{"startOffset":5927,"endOffset":6090,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":6108,"endOffset":6451,"count":18},{"startOffset":6181,"endOffset":6202,"count":0},{"startOffset":6222,"endOffset":6257,"count":0},{"startOffset":6358,"endOffset":6379,"count":16},{"startOffset":6380,"endOffset":6389,"count":0},{"startOffset":6391,"endOffset":6434,"count":0}],"isBlockCoverage":true},{"functionName":"asyncSkip","ranges":[{"startOffset":6878,"endOffset":7077,"count":0}],"isBlockCoverage":false},{"functionName":"callFn","ranges":[{"startOffset":7728,"endOffset":8431,"count":19},{"startOffset":7796,"endOffset":7832,"count":6},{"startOffset":7834,"endOffset":8207,"count":6},{"startOffset":8207,"endOffset":8427,"count":12},{"startOffset":8241,"endOffset":8406,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7890,"endOffset":8072,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8082,"endOffset":8192,"count":2},{"startOffset":8124,"endOffset":8180,"count":0}],"isBlockCoverage":true},{"functionName":"callFnAsync","ranges":[{"startOffset":8435,"endOffset":9164,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable._timeoutError","ranges":[{"startOffset":9349,"endOffset":9615,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.toValueOrError","ranges":[{"startOffset":10408,"endOffset":10599,"count":0}],"isBlockCoverage":false}]},{"scriptId":"160","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15639,"count":1}],"isBlockCoverage":true},{"functionName":"emitWarning","ranges":[{"startOffset":350,"endOffset":561,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":753,"endOffset":903,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":1062,"endOffset":1111,"count":0}],"isBlockCoverage":false},{"functionName":"createNoFilesMatchPatternError","ranges":[{"startOffset":4375,"endOffset":4554,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidReporterError","ranges":[{"startOffset":4856,"endOffset":5032,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidInterfaceError","ranges":[{"startOffset":5341,"endOffset":5504,"count":0}],"isBlockCoverage":false},{"functionName":"createUnsupportedError","ranges":[{"startOffset":5752,"endOffset":5878,"count":0}],"isBlockCoverage":false},{"functionName":"createMissingArgumentError","ranges":[{"startOffset":6204,"endOffset":6342,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidArgumentTypeError","ranges":[{"startOffset":6687,"endOffset":6936,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidArgumentValueError","ranges":[{"startOffset":7319,"endOffset":7607,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidExceptionError","ranges":[{"startOffset":7870,"endOffset":8067,"count":0}],"isBlockCoverage":false},{"functionName":"createFatalError","ranges":[{"startOffset":8297,"endOffset":8471,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidLegacyPluginError","ranges":[{"startOffset":8820,"endOffset":9158,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidPluginError","ranges":[{"startOffset":9598,"endOffset":9755,"count":0}],"isBlockCoverage":false},{"functionName":"createMochaInstanceAlreadyDisposedError","ranges":[{"startOffset":10106,"endOffset":10390,"count":0}],"isBlockCoverage":false},{"functionName":"createMochaInstanceAlreadyRunningError","ranges":[{"startOffset":10602,"endOffset":10794,"count":0}],"isBlockCoverage":false},{"functionName":"createMultipleDoneError","ranges":[{"startOffset":11082,"endOffset":11849,"count":0}],"isBlockCoverage":false},{"functionName":"createForbiddenExclusivityError","ranges":[{"startOffset":12086,"endOffset":12341,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidPluginDefinitionError","ranges":[{"startOffset":12641,"endOffset":12827,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidPluginImplementationError","ranges":[{"startOffset":13287,"endOffset":13537,"count":0}],"isBlockCoverage":false},{"functionName":"createTimeoutError","ranges":[{"startOffset":13803,"endOffset":13974,"count":0}],"isBlockCoverage":false},{"functionName":"createUnparsableFileError","ranges":[{"startOffset":14240,"endOffset":14383,"count":0}],"isBlockCoverage":false},{"functionName":"isMochaError","ranges":[{"startOffset":14609,"endOffset":14687,"count":0}],"isBlockCoverage":false}]},{"scriptId":"161","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/suite.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15436,"count":1}],"isBlockCoverage":true},{"functionName":"Suite.create","ranges":[{"startOffset":714,"endOffset":882,"count":7}],"isBlockCoverage":true},{"functionName":"Suite","ranges":[{"startOffset":1284,"endOffset":2125,"count":8},{"startOffset":1355,"endOffset":1549,"count":0}],"isBlockCoverage":true},{"functionName":"Context","ranges":[{"startOffset":1574,"endOffset":1595,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2056,"endOffset":2100,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.reset","ranges":[{"startOffset":2290,"endOffset":2601,"count":8}],"isBlockCoverage":true},{"functionName":"doReset","ranges":[{"startOffset":2330,"endOffset":2392,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.clone","ranges":[{"startOffset":2705,"endOffset":2961,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.timeout","ranges":[{"startOffset":3194,"endOffset":3521,"count":24},{"startOffset":3235,"endOffset":3266,"count":16},{"startOffset":3266,"endOffset":3297,"count":8},{"startOffset":3297,"endOffset":3329,"count":0},{"startOffset":3329,"endOffset":3520,"count":8}],"isBlockCoverage":true},{"functionName":"Suite.retries","ranges":[{"startOffset":3694,"endOffset":3848,"count":23},{"startOffset":3734,"endOffset":3765,"count":16},{"startOffset":3765,"endOffset":3826,"count":7},{"startOffset":3826,"endOffset":3830,"count":0}],"isBlockCoverage":true},{"functionName":"Suite.slow","ranges":[{"startOffset":4017,"endOffset":4209,"count":24},{"startOffset":4058,"endOffset":4086,"count":16},{"startOffset":4086,"endOffset":4117,"count":8},{"startOffset":4117,"endOffset":4149,"count":0},{"startOffset":4149,"endOffset":4208,"count":8}],"isBlockCoverage":true},{"functionName":"Suite.bail","ranges":[{"startOffset":4371,"endOffset":4506,"count":14},{"startOffset":4414,"endOffset":4505,"count":7}],"isBlockCoverage":true},{"functionName":"Suite.isPending","ranges":[{"startOffset":4625,"endOffset":4707,"count":108},{"startOffset":4677,"endOffset":4703,"count":66}],"isBlockCoverage":true},{"functionName":"Suite._createHook","ranges":[{"startOffset":4896,"endOffset":5129,"count":3}],"isBlockCoverage":true},{"functionName":"Suite.beforeAll","ranges":[{"startOffset":5312,"endOffset":5672,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.afterAll","ranges":[{"startOffset":5853,"endOffset":6210,"count":1},{"startOffset":5900,"endOffset":5922,"count":0},{"startOffset":6039,"endOffset":6053,"count":0}],"isBlockCoverage":true},{"functionName":"Suite.beforeEach","ranges":[{"startOffset":6395,"endOffset":6758,"count":1},{"startOffset":6442,"endOffset":6464,"count":0},{"startOffset":6583,"endOffset":6597,"count":0}],"isBlockCoverage":true},{"functionName":"Suite.afterEach","ranges":[{"startOffset":6941,"endOffset":7301,"count":1},{"startOffset":6988,"endOffset":7010,"count":0},{"startOffset":7128,"endOffset":7142,"count":0}],"isBlockCoverage":true},{"functionName":"Suite.addSuite","ranges":[{"startOffset":7433,"endOffset":7713,"count":7}],"isBlockCoverage":true},{"functionName":"Suite.addTest","ranges":[{"startOffset":7850,"endOffset":8095,"count":6}],"isBlockCoverage":true},{"functionName":"Suite.fullTitle","ranges":[{"startOffset":8279,"endOffset":8331,"count":15}],"isBlockCoverage":true},{"functionName":"Suite.titlePath","ranges":[{"startOffset":8517,"endOffset":8699,"count":131},{"startOffset":8569,"endOffset":8627,"count":86},{"startOffset":8646,"endOffset":8680,"count":86}],"isBlockCoverage":true},{"functionName":"Suite.total","ranges":[{"startOffset":8824,"endOffset":8966,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8872,"endOffset":8935,"count":7}],"isBlockCoverage":true},{"functionName":"Suite.eachTest","ranges":[{"startOffset":9172,"endOffset":9301,"count":29}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9236,"endOffset":9282,"count":20}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":9422,"endOffset":9510,"count":0}],"isBlockCoverage":false},{"functionName":"hasOnly","ranges":[{"startOffset":9659,"endOffset":9843,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9781,"endOffset":9835,"count":7}],"isBlockCoverage":true},{"functionName":"filterOnly","ranges":[{"startOffset":9962,"endOffset":10999,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.appendOnlySuite","ranges":[{"startOffset":11139,"endOffset":11191,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.markOnly","ranges":[{"startOffset":11275,"endOffset":11342,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.appendOnlyTest","ranges":[{"startOffset":11474,"endOffset":11523,"count":0}],"isBlockCoverage":false},{"functionName":"getHooks","ranges":[{"startOffset":11646,"endOffset":11700,"count":52}],"isBlockCoverage":true},{"functionName":"Suite.dispose","ranges":[{"startOffset":11800,"endOffset":11909,"count":0}],"isBlockCoverage":false},{"functionName":"cleanReferences","ranges":[{"startOffset":12309,"endOffset":12879,"count":7},{"startOffset":12843,"endOffset":12877,"count":6}],"isBlockCoverage":true},{"functionName":"cleanArrReferences","ranges":[{"startOffset":12340,"endOffset":12451,"count":28},{"startOffset":12416,"endOffset":12447,"count":2}],"isBlockCoverage":true},{"functionName":"serialize","ranges":[{"startOffset":13048,"endOffset":13341,"count":0}],"isBlockCoverage":false}]},{"scriptId":"162","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/hook.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1787,"count":1}],"isBlockCoverage":true},{"functionName":"Hook","ranges":[{"startOffset":354,"endOffset":438,"count":3}],"isBlockCoverage":true},{"functionName":"Hook.reset","ranges":[{"startOffset":580,"endOffset":656,"count":3}],"isBlockCoverage":true},{"functionName":"Hook.error","ranges":[{"startOffset":793,"endOffset":927,"count":12},{"startOffset":903,"endOffset":926,"count":0}],"isBlockCoverage":true},{"functionName":"serialize","ranges":[{"startOffset":1095,"endOffset":1785,"count":0}],"isBlockCoverage":false}]},{"scriptId":"163","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/reporters/dot.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1897,"count":1}],"isBlockCoverage":true},{"functionName":"Dot","ranges":[{"startOffset":749,"endOffset":1784,"count":0}],"isBlockCoverage":false}]},{"scriptId":"164","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/reporters/doc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2309,"count":1}],"isBlockCoverage":true},{"functionName":"Doc","ranges":[{"startOffset":690,"endOffset":2267,"count":0}],"isBlockCoverage":false}]},{"scriptId":"165","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/reporters/tap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7044,"count":1}],"isBlockCoverage":true},{"functionName":"TAP","ranges":[{"startOffset":851,"endOffset":1731,"count":0}],"isBlockCoverage":false},{"functionName":"title","ranges":[{"startOffset":1956,"endOffset":2025,"count":0}],"isBlockCoverage":false},{"functionName":"println","ranges":[{"startOffset":2232,"endOffset":2378,"count":0}],"isBlockCoverage":false},{"functionName":"createProducer","ranges":[{"startOffset":2683,"endOffset":2990,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer","ranges":[{"startOffset":3150,"endOffset":3175,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writeVersion","ranges":[{"startOffset":3291,"endOffset":3305,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writePlan","ranges":[{"startOffset":3481,"endOffset":3534,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writePass","ranges":[{"startOffset":3761,"endOffset":3822,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writePending","ranges":[{"startOffset":4062,"endOffset":4132,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writeFail","ranges":[{"startOffset":4407,"endOffset":4477,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writeEpilogue","ranges":[{"startOffset":4661,"endOffset":4981,"count":0}],"isBlockCoverage":false},{"functionName":"TAP12Producer","ranges":[{"startOffset":5249,"endOffset":5647,"count":0}],"isBlockCoverage":false},{"functionName":"TAP13Producer","ranges":[{"startOffset":6013,"endOffset":6911,"count":0}],"isBlockCoverage":false}]},{"scriptId":"166","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/reporters/json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3634,"count":1}],"isBlockCoverage":true},{"functionName":"JSONReporter","ranges":[{"startOffset":882,"endOffset":2305,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":2458,"endOffset":2781,"count":0}],"isBlockCoverage":false},{"functionName":"cleanCycles","ranges":[{"startOffset":2921,"endOffset":3315,"count":0}],"isBlockCoverage":false},{"functionName":"errorJSON","ranges":[{"startOffset":3431,"endOffset":3583,"count":0}],"isBlockCoverage":false}]},{"scriptId":"167","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/reporters/html.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9553,"count":1}],"isBlockCoverage":true},{"functionName":"HTML","ranges":[{"startOffset":1410,"endOffset":6638,"count":0}],"isBlockCoverage":false},{"functionName":"makeUrl","ranges":[{"startOffset":6765,"endOffset":7108,"count":0}],"isBlockCoverage":false},{"functionName":"HTML.suiteURL","ranges":[{"startOffset":7196,"endOffset":7253,"count":0}],"isBlockCoverage":false},{"functionName":"HTML.testURL","ranges":[{"startOffset":7339,"endOffset":7394,"count":0}],"isBlockCoverage":false},{"functionName":"HTML.addCodeToggle","ranges":[{"startOffset":7568,"endOffset":7881,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":7942,"endOffset":8043,"count":0}],"isBlockCoverage":false},{"functionName":"fragment","ranges":[{"startOffset":8118,"endOffset":8468,"count":0}],"isBlockCoverage":false},{"functionName":"hideSuitesWithout","ranges":[{"startOffset":8590,"endOffset":8864,"count":0}],"isBlockCoverage":false},{"functionName":"unhide","ranges":[{"startOffset":8900,"endOffset":9087,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":9190,"endOffset":9320,"count":0}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":9371,"endOffset":9526,"count":0}],"isBlockCoverage":false}]},{"scriptId":"168","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/browser/progress.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2713,"count":1}],"isBlockCoverage":true},{"functionName":"Progress","ranges":[{"startOffset":158,"endOffset":283,"count":0}],"isBlockCoverage":false},{"functionName":"Progress.size","ranges":[{"startOffset":430,"endOffset":485,"count":0}],"isBlockCoverage":false},{"functionName":"Progress.text","ranges":[{"startOffset":624,"endOffset":679,"count":0}],"isBlockCoverage":false},{"functionName":"Progress.fontSize","ranges":[{"startOffset":827,"endOffset":886,"count":0}],"isBlockCoverage":false},{"functionName":"Progress.font","ranges":[{"startOffset":1018,"endOffset":1077,"count":0}],"isBlockCoverage":false},{"functionName":"Progress.update","ranges":[{"startOffset":1210,"endOffset":1261,"count":0}],"isBlockCoverage":false},{"functionName":"Progress.draw","ranges":[{"startOffset":1401,"endOffset":2711,"count":0}],"isBlockCoverage":false}]},{"scriptId":"169","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/reporters/list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1905,"count":1}],"isBlockCoverage":true},{"functionName":"List","ranges":[{"startOffset":854,"endOffset":1786,"count":0}],"isBlockCoverage":false}]},{"scriptId":"170","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/reporters/min.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1091,"count":1}],"isBlockCoverage":true},{"functionName":"Min","ranges":[{"startOffset":674,"endOffset":977,"count":0}],"isBlockCoverage":false}]},{"scriptId":"171","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/reporters/spec.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2338,"count":1}],"isBlockCoverage":true},{"functionName":"Spec","ranges":[{"startOffset":879,"endOffset":2216,"count":1}],"isBlockCoverage":true},{"functionName":"indent","ranges":[{"startOffset":1003,"endOffset":1064,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1095,"endOffset":1135,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1170,"endOffset":1275,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1308,"endOffset":1396,"count":7},{"startOffset":1360,"endOffset":1392,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1432,"endOffset":1544,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1577,"endOffset":2025,"count":4},{"startOffset":1800,"endOffset":2021,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2058,"endOffset":2155,"count":2}],"isBlockCoverage":true}]},{"scriptId":"172","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/reporters/nyan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5570,"count":1}],"isBlockCoverage":true},{"functionName":"NyanCat","ranges":[{"startOffset":760,"endOffset":1658,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.draw","ranges":[{"startOffset":1798,"endOffset":1932,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.drawScoreboard","ranges":[{"startOffset":2080,"endOffset":2429,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.appendRainbow","ranges":[{"startOffset":2513,"endOffset":2850,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.drawRainbow","ranges":[{"startOffset":2930,"endOffset":3194,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.drawNyanCat","ranges":[{"startOffset":3273,"endOffset":4070,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.face","ranges":[{"startOffset":4165,"endOffset":4379,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.cursorUp","ranges":[{"startOffset":4479,"endOffset":4540,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.cursorDown","ranges":[{"startOffset":4644,"endOffset":4705,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.generateColors","ranges":[{"startOffset":4813,"endOffset":5169,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.rainbowify","ranges":[{"startOffset":5306,"endOffset":5531,"count":0}],"isBlockCoverage":false}]},{"scriptId":"173","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/reporters/xunit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4878,"count":1}],"isBlockCoverage":true},{"functionName":"XUnit","ranges":[{"startOffset":1066,"endOffset":2746,"count":0}],"isBlockCoverage":false},{"functionName":"XUnit.done","ranges":[{"startOffset":2946,"endOffset":3097,"count":0}],"isBlockCoverage":false},{"functionName":"XUnit.write","ranges":[{"startOffset":3188,"endOffset":3415,"count":0}],"isBlockCoverage":false},{"functionName":"XUnit.test","ranges":[{"startOffset":3510,"endOffset":4297,"count":0}],"isBlockCoverage":false},{"functionName":"tag","ranges":[{"startOffset":4416,"endOffset":4825,"count":0}],"isBlockCoverage":false}]},{"scriptId":"174","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/reporters/markdown.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2434,"count":1}],"isBlockCoverage":true},{"functionName":"Markdown","ranges":[{"startOffset":753,"endOffset":2381,"count":0}],"isBlockCoverage":false}]},{"scriptId":"175","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/reporters/progress.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2517,"count":1}],"isBlockCoverage":true},{"functionName":"Progress","ranges":[{"startOffset":781,"endOffset":2405,"count":0}],"isBlockCoverage":false}]},{"scriptId":"176","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/reporters/landing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2518,"count":1}],"isBlockCoverage":true},{"functionName":"Landing","ranges":[{"startOffset":948,"endOffset":2401,"count":0}],"isBlockCoverage":false}]},{"scriptId":"177","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/reporters/json-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2079,"count":1}],"isBlockCoverage":true},{"functionName":"JSONStream","ranges":[{"startOffset":677,"endOffset":1248,"count":0}],"isBlockCoverage":false},{"functionName":"writeEvent","ranges":[{"startOffset":1492,"endOffset":1576,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":1812,"endOffset":2019,"count":0}],"isBlockCoverage":false}]},{"scriptId":"178","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/nodejs/esm-utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3533,"count":1}],"isBlockCoverage":true},{"functionName":"forward","ranges":[{"startOffset":75,"endOffset":81,"count":1}],"isBlockCoverage":true},{"functionName":"formattedImport","ranges":[{"startOffset":108,"endOffset":1086,"count":1},{"startOffset":273,"endOffset":1033,"count":0},{"startOffset":1037,"endOffset":1085,"count":0}],"isBlockCoverage":true},{"functionName":"exports.doImport","ranges":[{"startOffset":1108,"endOffset":1134,"count":1}],"isBlockCoverage":true},{"functionName":"exports.requireOrImport","ranges":[{"startOffset":1163,"endOffset":3093,"count":1},{"startOffset":1232,"endOffset":1285,"count":0},{"startOffset":1369,"endOffset":3091,"count":0}],"isBlockCoverage":true},{"functionName":"dealWithExports","ranges":[{"startOffset":3096,"endOffset":3242,"count":1},{"startOffset":3153,"endOffset":3185,"count":0}],"isBlockCoverage":true},{"functionName":"exports.loadFilesAsync","ranges":[{"startOffset":3269,"endOffset":3531,"count":1}],"isBlockCoverage":true}]},{"scriptId":"179","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/stats-collector.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2220,"count":1}],"isBlockCoverage":true},{"functionName":"createStatsCollector","ranges":[{"startOffset":1329,"endOffset":2179,"count":1},{"startOffset":1520,"endOffset":1577,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1635,"endOffset":1682,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1716,"endOffset":1772,"count":8},{"startOffset":1750,"endOffset":1767,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1804,"endOffset":1841,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1873,"endOffset":1912,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1947,"endOffset":1985,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2016,"endOffset":2052,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2084,"endOffset":2175,"count":0}],"isBlockCoverage":false}]},{"scriptId":"180","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/interfaces/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":155,"count":1}],"isBlockCoverage":true}]},{"scriptId":"181","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/interfaces/bdd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2512,"count":1}],"isBlockCoverage":true},{"functionName":"bddInterface","ranges":[{"startOffset":544,"endOffset":2448,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":635,"endOffset":2444,"count":1},{"startOffset":926,"endOffset":955,"count":0}],"isBlockCoverage":true},{"functionName":"context.describe.context.context","ranges":[{"startOffset":1135,"endOffset":1248,"count":7}],"isBlockCoverage":true},{"functionName":"context.xdescribe.context.xcontext.context.describe.skip","ranges":[{"startOffset":1380,"endOffset":1515,"count":0}],"isBlockCoverage":false},{"functionName":"context.describe.only","ranges":[{"startOffset":1587,"endOffset":1698,"count":0}],"isBlockCoverage":false},{"functionName":"context.it.context.specify","ranges":[{"startOffset":1872,"endOffset":2095,"count":6},{"startOffset":1953,"endOffset":1981,"count":0}],"isBlockCoverage":true},{"functionName":"context.it.only","ranges":[{"startOffset":2165,"endOffset":2254,"count":0}],"isBlockCoverage":false},{"functionName":"context.xit.context.xspecify.context.it.skip","ranges":[{"startOffset":2375,"endOffset":2439,"count":0}],"isBlockCoverage":false}]},{"scriptId":"182","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2635,"count":1}],"isBlockCoverage":true},{"functionName":"Test","ranges":[{"startOffset":557,"endOffset":870,"count":6},{"startOffset":608,"endOffset":796,"count":0}],"isBlockCoverage":true},{"functionName":"Test.reset","ranges":[{"startOffset":1031,"endOffset":1133,"count":12}],"isBlockCoverage":true},{"functionName":"Test.retriedTest","ranges":[{"startOffset":1215,"endOffset":1317,"count":6},{"startOffset":1290,"endOffset":1316,"count":0}],"isBlockCoverage":true},{"functionName":"Test.markOnly","ranges":[{"startOffset":1417,"endOffset":1468,"count":0}],"isBlockCoverage":false},{"functionName":"Test.clone","ranges":[{"startOffset":1494,"endOffset":1857,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2051,"endOffset":2633,"count":0}],"isBlockCoverage":false}]},{"scriptId":"183","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/interfaces/tdd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2341,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":625,"endOffset":2243,"count":0}],"isBlockCoverage":false}]},{"scriptId":"184","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/interfaces/qunit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2135,"count":1}],"isBlockCoverage":true},{"functionName":"qUnitInterface","ranges":[{"startOffset":648,"endOffset":2088,"count":0}],"isBlockCoverage":false}]},{"scriptId":"185","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/interfaces/exports.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1428,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":460,"endOffset":1360,"count":0}],"isBlockCoverage":false}]},{"scriptId":"186","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/context.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1440,"count":1}],"isBlockCoverage":true},{"functionName":"Context","ranges":[{"startOffset":152,"endOffset":173,"count":1}],"isBlockCoverage":true},{"functionName":"Context.runnable","ranges":[{"startOffset":338,"endOffset":475,"count":19},{"startOffset":385,"endOffset":417,"count":0}],"isBlockCoverage":true},{"functionName":"Context.timeout","ranges":[{"startOffset":610,"endOffset":742,"count":0}],"isBlockCoverage":false},{"functionName":"Context.slow","ranges":[{"startOffset":885,"endOffset":1011,"count":0}],"isBlockCoverage":false},{"functionName":"Context.skip","ranges":[{"startOffset":1108,"endOffset":1149,"count":0}],"isBlockCoverage":false},{"functionName":"Context.retries","ranges":[{"startOffset":1308,"endOffset":1438,"count":0}],"isBlockCoverage":false}]},{"scriptId":"187","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/cli/run-helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7263,"count":1}],"isBlockCoverage":true},{"functionName":"exitMochaLater","ranges":[{"startOffset":735,"endOffset":825,"count":0}],"isBlockCoverage":false},{"functionName":"exitMocha","ranges":[{"startOffset":1056,"endOffset":1783,"count":0}],"isBlockCoverage":false},{"functionName":"exports.list","ranges":[{"startOffset":2002,"endOffset":2080,"count":12},{"startOffset":2030,"endOffset":2059,"count":6},{"startOffset":2060,"endOffset":2080,"count":6}],"isBlockCoverage":true},{"functionName":"exports.handleRequires","ranges":[{"startOffset":2350,"endOffset":3208,"count":1},{"startOffset":2511,"endOffset":3038,"count":0},{"startOffset":3123,"endOffset":3188,"count":0}],"isBlockCoverage":true},{"functionName":"singleRun","ranges":[{"startOffset":3637,"endOffset":3922,"count":1},{"startOffset":3890,"endOffset":3901,"count":0}],"isBlockCoverage":true},{"functionName":"parallelRun","ranges":[{"startOffset":4327,"endOffset":4656,"count":0}],"isBlockCoverage":false},{"functionName":"exports.runMocha","ranges":[{"startOffset":5119,"endOffset":5616,"count":1},{"startOffset":5452,"endOffset":5507,"count":0},{"startOffset":5534,"endOffset":5547,"count":0}],"isBlockCoverage":true},{"functionName":"exports.validateLegacyPlugin","ranges":[{"startOffset":6197,"endOffset":7261,"count":2},{"startOffset":6470,"endOffset":6595,"count":0},{"startOffset":6877,"endOffset":7259,"count":0}],"isBlockCoverage":true},{"functionName":"createUnknownError","ranges":[{"startOffset":6626,"endOffset":6782,"count":0}],"isBlockCoverage":false}]},{"scriptId":"188","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/cli/watch-run.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10757,"count":1}],"isBlockCoverage":true},{"functionName":"exports.watchParallelRun","ranges":[{"startOffset":1013,"endOffset":2625,"count":0}],"isBlockCoverage":false},{"functionName":"exports.watchRun","ranges":[{"startOffset":3277,"endOffset":4728,"count":0}],"isBlockCoverage":false},{"functionName":"createWatcher","ranges":[{"startOffset":5520,"endOffset":7787,"count":0}],"isBlockCoverage":false},{"functionName":"createRerunner","ranges":[{"startOffset":8168,"endOffset":9165,"count":0}],"isBlockCoverage":false},{"functionName":"getWatchedFiles","ranges":[{"startOffset":9392,"endOffset":9605,"count":0}],"isBlockCoverage":false},{"functionName":"hideCursor","ranges":[{"startOffset":9678,"endOffset":9726,"count":0}],"isBlockCoverage":false},{"functionName":"showCursor","ranges":[{"startOffset":9799,"endOffset":9847,"count":0}],"isBlockCoverage":false},{"functionName":"eraseLine","ranges":[{"startOffset":9917,"endOffset":9963,"count":0}],"isBlockCoverage":false},{"functionName":"blastCache","ranges":[{"startOffset":10124,"endOffset":10312,"count":0}],"isBlockCoverage":false}]},{"scriptId":"189","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/chokidar/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28364,"count":1}],"isBlockCoverage":true},{"functionName":"arrify","ranges":[{"startOffset":1627,"endOffset":1681,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":1699,"endOffset":1877,"count":0}],"isBlockCoverage":false},{"functionName":"unifyPaths","ranges":[{"startOffset":1899,"endOffset":2164,"count":0}],"isBlockCoverage":false},{"functionName":"toUnix","ranges":[{"startOffset":2322,"endOffset":2619,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePathToUnix","ranges":[{"startOffset":2754,"endOffset":2803,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeIgnored","ranges":[{"startOffset":2831,"endOffset":3002,"count":0}],"isBlockCoverage":false},{"functionName":"getAbsolutePath","ranges":[{"startOffset":3029,"endOffset":3223,"count":0}],"isBlockCoverage":false},{"functionName":"undef","ranges":[{"startOffset":3240,"endOffset":3278,"count":0}],"isBlockCoverage":false},{"functionName":"DirEntry","ranges":[{"startOffset":3456,"endOffset":3612,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":3616,"endOffset":3745,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":3749,"endOffset":4084,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":4088,"endOffset":4181,"count":0}],"isBlockCoverage":false},{"functionName":"getChildren","ranges":[{"startOffset":4227,"endOffset":4328,"count":0}],"isBlockCoverage":false},{"functionName":"dispose","ranges":[{"startOffset":4332,"endOffset":4473,"count":0}],"isBlockCoverage":false},{"functionName":"WatchHelper","ranges":[{"startOffset":4560,"endOffset":5278,"count":0}],"isBlockCoverage":false},{"functionName":"checkGlobSymlink","ranges":[{"startOffset":5282,"endOffset":5763,"count":0}],"isBlockCoverage":false},{"functionName":"entryPath","ranges":[{"startOffset":5767,"endOffset":5905,"count":0}],"isBlockCoverage":false},{"functionName":"filterPath","ranges":[{"startOffset":5909,"endOffset":6326,"count":0}],"isBlockCoverage":false},{"functionName":"getDirParts","ranges":[{"startOffset":6330,"endOffset":6644,"count":0}],"isBlockCoverage":false},{"functionName":"filterDir","ranges":[{"startOffset":6648,"endOffset":7167,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher","ranges":[{"startOffset":7511,"endOffset":11137,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":11450,"endOffset":13176,"count":0}],"isBlockCoverage":false},{"functionName":"unwatch","ranges":[{"startOffset":13387,"endOffset":14065,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":14166,"endOffset":14930,"count":0}],"isBlockCoverage":false},{"functionName":"getWatched","ranges":[{"startOffset":15005,"endOffset":15255,"count":0}],"isBlockCoverage":false},{"functionName":"emitWithAll","ranges":[{"startOffset":15257,"endOffset":15361,"count":0}],"isBlockCoverage":false},{"functionName":"_emit","ranges":[{"startOffset":15770,"endOffset":18071,"count":0}],"isBlockCoverage":false},{"functionName":"_handleError","ranges":[{"startOffset":18246,"endOffset":18522,"count":0}],"isBlockCoverage":false},{"functionName":"_throttle","ranges":[{"startOffset":18818,"endOffset":19552,"count":0}],"isBlockCoverage":false},{"functionName":"_incrReadyCount","ranges":[{"startOffset":19554,"endOffset":19604,"count":0}],"isBlockCoverage":false},{"functionName":"_awaitWriteFinish","ranges":[{"startOffset":20051,"endOffset":21407,"count":0}],"isBlockCoverage":false},{"functionName":"_getGlobIgnored","ranges":[{"startOffset":21409,"endOffset":21473,"count":0}],"isBlockCoverage":false},{"functionName":"_isIgnored","ranges":[{"startOffset":21647,"endOffset":22247,"count":0}],"isBlockCoverage":false},{"functionName":"_isntIgnored","ranges":[{"startOffset":22249,"endOffset":22316,"count":0}],"isBlockCoverage":false},{"functionName":"_getWatchHelpers","ranges":[{"startOffset":22613,"endOffset":22852,"count":0}],"isBlockCoverage":false},{"functionName":"_getWatchedDir","ranges":[{"startOffset":23050,"endOffset":23318,"count":0}],"isBlockCoverage":false},{"functionName":"_hasReadPermissions","ranges":[{"startOffset":23583,"endOffset":23859,"count":0}],"isBlockCoverage":false},{"functionName":"_remove","ranges":[{"startOffset":24165,"endOffset":26854,"count":0}],"isBlockCoverage":false},{"functionName":"_closePath","ranges":[{"startOffset":26920,"endOffset":27060,"count":0}],"isBlockCoverage":false},{"functionName":"_closeFile","ranges":[{"startOffset":27130,"endOffset":27286,"count":0}],"isBlockCoverage":false},{"functionName":"_addPathCloser","ranges":[{"startOffset":27349,"endOffset":27532,"count":0}],"isBlockCoverage":false},{"functionName":"_readdirp","ranges":[{"startOffset":27534,"endOffset":27932,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":28233,"endOffset":28338,"count":0}],"isBlockCoverage":false}]},{"scriptId":"190","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/readdirp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8876,"count":1},{"startOffset":1153,"endOffset":1180,"count":0}],"isBlockCoverage":true},{"functionName":"isNormalFlowError","ranges":[{"startOffset":942,"endOffset":985,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1055,"endOffset":1082,"count":2}],"isBlockCoverage":true},{"functionName":"normalizeFilter","ranges":[{"startOffset":1208,"endOffset":2067,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultOptions","ranges":[{"startOffset":2119,"endOffset":2430,"count":0}],"isBlockCoverage":false},{"functionName":"ReaddirpStream","ranges":[{"startOffset":2434,"endOffset":3722,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":3726,"endOffset":5128,"count":0}],"isBlockCoverage":false},{"functionName":"_exploreDir","ranges":[{"startOffset":5132,"endOffset":5336,"count":0}],"isBlockCoverage":false},{"functionName":"_formatEntry","ranges":[{"startOffset":5340,"endOffset":5774,"count":0}],"isBlockCoverage":false},{"functionName":"_onError","ranges":[{"startOffset":5778,"endOffset":5924,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntryType","ranges":[{"startOffset":5928,"endOffset":7108,"count":0}],"isBlockCoverage":false},{"functionName":"_includeAsFile","ranges":[{"startOffset":7112,"endOffset":7258,"count":0}],"isBlockCoverage":false},{"functionName":"readdirp","ranges":[{"startOffset":7820,"endOffset":8455,"count":0}],"isBlockCoverage":false},{"functionName":"readdirpPromise","ranges":[{"startOffset":8482,"endOffset":8738,"count":0}],"isBlockCoverage":false}]},{"scriptId":"191","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/picomatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":60,"count":1}],"isBlockCoverage":true}]},{"scriptId":"192","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/picomatch/lib/picomatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9956,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":204,"endOffset":264,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch","ranges":[{"startOffset":1018,"endOffset":2836,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.test","ranges":[{"startOffset":3384,"endOffset":4185,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.matchBase","ranges":[{"startOffset":4600,"endOffset":4787,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.isMatch","ranges":[{"startOffset":5423,"endOffset":5484,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.parse","ranges":[{"startOffset":5894,"endOffset":6062,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.scan","ranges":[{"startOffset":6697,"endOffset":6737,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.compileRe","ranges":[{"startOffset":7228,"endOffset":7738,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.makeRe","ranges":[{"startOffset":8611,"endOffset":9117,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.toRegex","ranges":[{"startOffset":9579,"endOffset":9807,"count":0}],"isBlockCoverage":false}]},{"scriptId":"193","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/picomatch/lib/scan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9189,"count":1}],"isBlockCoverage":true},{"functionName":"isPathSeparator","ranges":[{"startOffset":665,"endOffset":746,"count":0}],"isBlockCoverage":false},{"functionName":"depth","ranges":[{"startOffset":763,"endOffset":863,"count":0}],"isBlockCoverage":false},{"functionName":"scan","ranges":[{"startOffset":1512,"endOffset":9163,"count":0}],"isBlockCoverage":false}]},{"scriptId":"194","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/picomatch/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1885,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isObject","ranges":[{"startOffset":242,"endOffset":311,"count":0}],"isBlockCoverage":false},{"functionName":"exports.hasRegexChars","ranges":[{"startOffset":337,"endOffset":373,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isRegexChar","ranges":[{"startOffset":397,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeRegex","ranges":[{"startOffset":474,"endOffset":528,"count":0}],"isBlockCoverage":false},{"functionName":"exports.toPosixSlashes","ranges":[{"startOffset":555,"endOffset":595,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeBackslashes","ranges":[{"startOffset":626,"endOffset":738,"count":0}],"isBlockCoverage":false},{"functionName":"exports.supportsLookbehinds","ranges":[{"startOffset":771,"endOffset":960,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isWindows","ranges":[{"startOffset":983,"endOffset":1132,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeLast","ranges":[{"startOffset":1156,"endOffset":1401,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removePrefix","ranges":[{"startOffset":1427,"endOffset":1584,"count":0}],"isBlockCoverage":false},{"functionName":"exports.wrapOutput","ranges":[{"startOffset":1608,"endOffset":1883,"count":0}],"isBlockCoverage":false}]},{"scriptId":"195","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/picomatch/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4448,"count":1}],"isBlockCoverage":true},{"functionName":"extglobChars","ranges":[{"startOffset":3985,"endOffset":4324,"count":0}],"isBlockCoverage":false},{"functionName":"globChars","ranges":[{"startOffset":4365,"endOffset":4444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"196","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/picomatch/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27763,"count":1}],"isBlockCoverage":true},{"functionName":"expandRange","ranges":[{"startOffset":287,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxError","ranges":[{"startOffset":713,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":950,"endOffset":25216,"count":0}],"isBlockCoverage":false},{"functionName":"parse.fastpaths","ranges":[{"startOffset":25439,"endOffset":27736,"count":0}],"isBlockCoverage":false}]},{"scriptId":"197","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/anymatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3180,"count":1}],"isBlockCoverage":true},{"functionName":"arrify","ranges":[{"startOffset":432,"endOffset":477,"count":0}],"isBlockCoverage":false},{"functionName":"createPattern","ranges":[{"startOffset":598,"endOffset":944,"count":0}],"isBlockCoverage":false},{"functionName":"matchPatterns","ranges":[{"startOffset":1145,"endOffset":1958,"count":0}],"isBlockCoverage":false},{"functionName":"anymatch","ranges":[{"startOffset":2124,"endOffset":3121,"count":0}],"isBlockCoverage":false}]},{"scriptId":"198","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/normalize-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1024,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":176,"endOffset":1022,"count":0}],"isBlockCoverage":false}]},{"scriptId":"199","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/glob-parent/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1120,"count":1}],"isBlockCoverage":true},{"functionName":"globParent","ranges":[{"startOffset":461,"endOffset":1118,"count":0}],"isBlockCoverage":false}]},{"scriptId":"200","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/is-glob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3628,"count":1}],"isBlockCoverage":true},{"functionName":"strictCheck","ranges":[{"startOffset":247,"endOffset":2745,"count":0}],"isBlockCoverage":false},{"functionName":"relaxedCheck","ranges":[{"startOffset":2767,"endOffset":3304,"count":0}],"isBlockCoverage":false},{"functionName":"isGlob","ranges":[{"startOffset":3324,"endOffset":3626,"count":0}],"isBlockCoverage":false}]},{"scriptId":"201","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/is-extglob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":441,"count":1}],"isBlockCoverage":true},{"functionName":"isExtglob","ranges":[{"startOffset":168,"endOffset":439,"count":0}],"isBlockCoverage":false}]},{"scriptId":"202","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/braces/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4375,"count":1}],"isBlockCoverage":true},{"functionName":"braces","ranges":[{"startOffset":543,"endOffset":1030,"count":0}],"isBlockCoverage":false},{"functionName":"braces.parse","ranges":[{"startOffset":1359,"endOffset":1405,"count":0}],"isBlockCoverage":false},{"functionName":"braces.stringify","ranges":[{"startOffset":1795,"endOffset":1959,"count":0}],"isBlockCoverage":false},{"functionName":"braces.compile","ranges":[{"startOffset":2407,"endOffset":2550,"count":0}],"isBlockCoverage":false},{"functionName":"braces.expand","ranges":[{"startOffset":3141,"endOffset":3541,"count":0}],"isBlockCoverage":false},{"functionName":"braces.create","ranges":[{"startOffset":4118,"endOffset":4319,"count":0}],"isBlockCoverage":false}]},{"scriptId":"203","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/braces/lib/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":700,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":67,"endOffset":697,"count":0}],"isBlockCoverage":false}]},{"scriptId":"204","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/braces/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2451,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isInteger","ranges":[{"startOffset":35,"endOffset":232,"count":0}],"isBlockCoverage":false},{"functionName":"exports.find","ranges":[{"startOffset":292,"endOffset":351,"count":0}],"isBlockCoverage":false},{"functionName":"exports.exceedsLimit","ranges":[{"startOffset":419,"endOffset":626,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeNode","ranges":[{"startOffset":712,"endOffset":985,"count":0}],"isBlockCoverage":false},{"functionName":"exports.encloseBrace","ranges":[{"startOffset":1097,"endOffset":1266,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isInvalidBrace","ranges":[{"startOffset":1347,"endOffset":1680,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isOpenOrClose","ranges":[{"startOffset":1767,"endOffset":1906,"count":0}],"isBlockCoverage":false},{"functionName":"exports.reduce","ranges":[{"startOffset":1969,"endOffset":2127,"count":0}],"isBlockCoverage":false},{"functionName":"exports.flatten","ranges":[{"startOffset":2177,"endOffset":2449,"count":0}],"isBlockCoverage":false}]},{"scriptId":"205","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/braces/lib/compile.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1415,"count":1}],"isBlockCoverage":true},{"functionName":"compile","ranges":[{"startOffset":102,"endOffset":1386,"count":0}],"isBlockCoverage":false}]},{"scriptId":"206","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/fill-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6315,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":265,"endOffset":334,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":355,"endOffset":439,"count":0}],"isBlockCoverage":false},{"functionName":"isValidValue","ranges":[{"startOffset":463,"endOffset":558,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":578,"endOffset":607,"count":0}],"isBlockCoverage":false},{"functionName":"zeros","ranges":[{"startOffset":624,"endOffset":817,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":838,"endOffset":986,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":1001,"endOffset":1295,"count":0}],"isBlockCoverage":false},{"functionName":"toMaxLen","ranges":[{"startOffset":1315,"endOffset":1552,"count":0}],"isBlockCoverage":false},{"functionName":"toSequence","ranges":[{"startOffset":1574,"endOffset":2208,"count":0}],"isBlockCoverage":false},{"functionName":"toRange","ranges":[{"startOffset":2227,"endOffset":2480,"count":0}],"isBlockCoverage":false},{"functionName":"toRegex","ranges":[{"startOffset":2499,"endOffset":2758,"count":0}],"isBlockCoverage":false},{"functionName":"rangeError","ranges":[{"startOffset":2780,"endOffset":2874,"count":0}],"isBlockCoverage":false},{"functionName":"invalidRange","ranges":[{"startOffset":2898,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"invalidStep","ranges":[{"startOffset":3031,"endOffset":3176,"count":0}],"isBlockCoverage":false},{"functionName":"fillNumbers","ranges":[{"startOffset":3199,"endOffset":4682,"count":0}],"isBlockCoverage":false},{"functionName":"fillLetters","ranges":[{"startOffset":4705,"endOffset":5486,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":5502,"endOffset":6289,"count":0}],"isBlockCoverage":false}]},{"scriptId":"207","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/to-regex-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6481,"count":1}],"isBlockCoverage":true},{"functionName":"toRegexRange","ranges":[{"startOffset":235,"endOffset":2177,"count":0}],"isBlockCoverage":false},{"functionName":"collatePatterns","ranges":[{"startOffset":2180,"endOffset":2554,"count":0}],"isBlockCoverage":false},{"functionName":"splitToRanges","ranges":[{"startOffset":2556,"endOffset":3037,"count":0}],"isBlockCoverage":false},{"functionName":"rangeToPattern","ranges":[{"startOffset":3159,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"splitToPatterns","ranges":[{"startOffset":3834,"endOffset":4632,"count":0}],"isBlockCoverage":false},{"functionName":"filterPatterns","ranges":[{"startOffset":4634,"endOffset":5094,"count":0}],"isBlockCoverage":false},{"functionName":"zip","ranges":[{"startOffset":5120,"endOffset":5233,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":5235,"endOffset":5298,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":5300,"endOffset":5380,"count":0}],"isBlockCoverage":false},{"functionName":"countNines","ranges":[{"startOffset":5382,"endOffset":5478,"count":0}],"isBlockCoverage":false},{"functionName":"countZeros","ranges":[{"startOffset":5480,"endOffset":5571,"count":0}],"isBlockCoverage":false},{"functionName":"toQuantifier","ranges":[{"startOffset":5573,"endOffset":5741,"count":0}],"isBlockCoverage":false},{"functionName":"toCharacterClass","ranges":[{"startOffset":5743,"endOffset":5837,"count":0}],"isBlockCoverage":false},{"functionName":"hasPadding","ranges":[{"startOffset":5839,"endOffset":5899,"count":0}],"isBlockCoverage":false},{"functionName":"padZeros","ranges":[{"startOffset":5901,"endOffset":6311,"count":0}],"isBlockCoverage":false},{"functionName":"toRegexRange.clearCache","ranges":[{"startOffset":6382,"endOffset":6413,"count":0}],"isBlockCoverage":false}]},{"scriptId":"208","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/is-number/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":411,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":184,"endOffset":409,"count":0}],"isBlockCoverage":false}]},{"scriptId":"209","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/braces/lib/expand.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2780,"count":1}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":143,"endOffset":810,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":828,"endOffset":2752,"count":0}],"isBlockCoverage":false}]},{"scriptId":"210","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/braces/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6913,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":576,"endOffset":6886,"count":0}],"isBlockCoverage":false}]},{"scriptId":"211","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/braces/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1593,"count":1}],"isBlockCoverage":true}]},{"scriptId":"212","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/chokidar/lib/nodefs-handler.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20067,"count":1}],"isBlockCoverage":true},{"functionName":"foreach","ranges":[{"startOffset":725,"endOffset":818,"count":0}],"isBlockCoverage":false},{"functionName":"addAndConvert","ranges":[{"startOffset":843,"endOffset":1013,"count":0}],"isBlockCoverage":false},{"functionName":"clearItem","ranges":[{"startOffset":1034,"endOffset":1159,"count":0}],"isBlockCoverage":false},{"functionName":"delFromSet","ranges":[{"startOffset":1181,"endOffset":1362,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptySet","ranges":[{"startOffset":1384,"endOffset":1435,"count":0}],"isBlockCoverage":false},{"functionName":"createFsWatchInstance","ranges":[{"startOffset":2240,"endOffset":2860,"count":0}],"isBlockCoverage":false},{"functionName":"fsWatchBroadcast","ranges":[{"startOffset":3167,"endOffset":3352,"count":0}],"isBlockCoverage":false},{"functionName":"setFsWatchListener","ranges":[{"startOffset":3691,"endOffset":5797,"count":0}],"isBlockCoverage":false},{"functionName":"setFsWatchFileListener","ranges":[{"startOffset":6374,"endOffset":8442,"count":0}],"isBlockCoverage":false},{"functionName":"NodeFsHandler","ranges":[{"startOffset":8539,"endOffset":8640,"count":0}],"isBlockCoverage":false},{"functionName":"_watchWithNodeFs","ranges":[{"startOffset":8844,"endOffset":9693,"count":0}],"isBlockCoverage":false},{"functionName":"_handleFile","ranges":[{"startOffset":9953,"endOffset":12010,"count":0}],"isBlockCoverage":false},{"functionName":"_handleSymlink","ranges":[{"startOffset":12337,"endOffset":13370,"count":0}],"isBlockCoverage":false},{"functionName":"_handleRead","ranges":[{"startOffset":13372,"endOffset":15882,"count":0}],"isBlockCoverage":false},{"functionName":"_handleDir","ranges":[{"startOffset":16330,"endOffset":17387,"count":0}],"isBlockCoverage":false},{"functionName":"_addToNodeFs","ranges":[{"startOffset":17835,"endOffset":20030,"count":0}],"isBlockCoverage":false}]},{"scriptId":"213","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/is-binary-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":239,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":164,"endOffset":237,"count":0}],"isBlockCoverage":false}]},{"scriptId":"214","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/binary-extensions/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":54,"count":1}],"isBlockCoverage":true}]},{"scriptId":"215","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/chokidar/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1834,"count":1}],"isBlockCoverage":true},{"functionName":"exports.EMPTY_FN","ranges":[{"startOffset":1626,"endOffset":1634,"count":0}],"isBlockCoverage":false},{"functionName":"exports.IDENTITY_FN","ranges":[{"startOffset":1658,"endOffset":1668,"count":0}],"isBlockCoverage":false}]},{"scriptId":"216","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/chokidar/lib/fsevents-handler.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16274,"count":1},{"startOffset":243,"endOffset":264,"count":0},{"startOffset":282,"endOffset":561,"count":0}],"isBlockCoverage":true},{"functionName":"Depth","ranges":[{"startOffset":973,"endOffset":1018,"count":0}],"isBlockCoverage":false},{"functionName":"createFSEventsInstance","ranges":[{"startOffset":2064,"endOffset":2151,"count":0}],"isBlockCoverage":false},{"functionName":"setFSEventsListener","ranges":[{"startOffset":2552,"endOffset":4873,"count":0}],"isBlockCoverage":false},{"functionName":"couldConsolidate","ranges":[{"startOffset":4978,"endOffset":5217,"count":0}],"isBlockCoverage":false},{"functionName":"canUse","ranges":[{"startOffset":5294,"endOffset":5339,"count":0}],"isBlockCoverage":false},{"functionName":"calcDepth","ranges":[{"startOffset":5422,"endOffset":5544,"count":0}],"isBlockCoverage":false},{"functionName":"sameTypes","ranges":[{"startOffset":5680,"endOffset":5883,"count":0}],"isBlockCoverage":false},{"functionName":"FsEventsHandler","ranges":[{"startOffset":5981,"endOffset":6019,"count":0}],"isBlockCoverage":false},{"functionName":"checkIgnored","ranges":[{"startOffset":6020,"endOffset":6324,"count":0}],"isBlockCoverage":false},{"functionName":"addOrChange","ranges":[{"startOffset":6326,"endOffset":6555,"count":0}],"isBlockCoverage":false},{"functionName":"checkExists","ranges":[{"startOffset":6557,"endOffset":7223,"count":0}],"isBlockCoverage":false},{"functionName":"handleEvent","ranges":[{"startOffset":7225,"endOffset":8519,"count":0}],"isBlockCoverage":false},{"functionName":"_watchWithFsEvents","ranges":[{"startOffset":8907,"endOffset":10901,"count":0}],"isBlockCoverage":false},{"functionName":"_handleFsEventsSymlink","ranges":[{"startOffset":11236,"endOffset":12319,"count":0}],"isBlockCoverage":false},{"functionName":"emitAdd","ranges":[{"startOffset":12384,"endOffset":12857,"count":0}],"isBlockCoverage":false},{"functionName":"initWatch","ranges":[{"startOffset":12859,"endOffset":13124,"count":0}],"isBlockCoverage":false},{"functionName":"_addToFsEvents","ranges":[{"startOffset":13464,"endOffset":16203,"count":0}],"isBlockCoverage":false}]},{"scriptId":"217","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/cli/collect-files.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2740,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":696,"endOffset":2270,"count":1},{"startOffset":1506,"endOffset":1533,"count":0},{"startOffset":1749,"endOffset":2098,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":837,"endOffset":1415,"count":1},{"startOffset":1221,"endOffset":1411,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":963,"endOffset":1107,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1011,"endOffset":1095,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1131,"endOffset":1165,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1625,"endOffset":1659,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2163,"endOffset":2245,"count":0}],"isBlockCoverage":false}]},{"scriptId":"218","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/node_modules/minimatch/minimatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27216,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":35,"endOffset":267,"count":0}],"isBlockCoverage":false},{"functionName":"charSet","ranges":[{"startOffset":1274,"endOffset":1347,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1298,"endOffset":1342,"count":17}],"isBlockCoverage":true},{"functionName":"minimatch.filter","ranges":[{"startOffset":1617,"endOffset":1692,"count":0}],"isBlockCoverage":false},{"functionName":"ext","ranges":[{"startOffset":1706,"endOffset":1836,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.defaults","ranges":[{"startOffset":1859,"endOffset":2677,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.braceExpand","ranges":[{"startOffset":2957,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":3030,"endOffset":3358,"count":0}],"isBlockCoverage":false},{"functionName":"assertValidPattern","ranges":[{"startOffset":3424,"endOffset":3619,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.makeRe","ranges":[{"startOffset":4321,"endOffset":4391,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.match","ranges":[{"startOffset":4411,"endOffset":4615,"count":0}],"isBlockCoverage":false},{"functionName":"globUnescape","ranges":[{"startOffset":4670,"endOffset":4700,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":4722,"endOffset":4772,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch","ranges":[{"startOffset":4794,"endOffset":5152,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":5156,"endOffset":5167,"count":0}],"isBlockCoverage":false},{"functionName":"make","ranges":[{"startOffset":5171,"endOffset":6377,"count":0}],"isBlockCoverage":false},{"functionName":"parseNegate","ranges":[{"startOffset":6381,"endOffset":6740,"count":0}],"isBlockCoverage":false},{"functionName":"matchOne","ranges":[{"startOffset":6972,"endOffset":12131,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":12135,"endOffset":12206,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":12210,"endOffset":23228,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe","ranges":[{"startOffset":23232,"endOffset":25589,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":25593,"endOffset":27104,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":27115,"endOffset":27180,"count":0}],"isBlockCoverage":false}]},{"scriptId":"219","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/node_modules/minimatch/lib/path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":151,"count":1},{"startOffset":136,"endOffset":150,"count":0}],"isBlockCoverage":true}]},{"scriptId":"220","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/brace-expansion/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4992,"count":1}],"isBlockCoverage":true},{"functionName":"numeric","ranges":[{"startOffset":298,"endOffset":406,"count":0}],"isBlockCoverage":false},{"functionName":"escapeBraces","ranges":[{"startOffset":408,"endOffset":645,"count":0}],"isBlockCoverage":false},{"functionName":"unescapeBraces","ranges":[{"startOffset":647,"endOffset":876,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommaParts","ranges":[{"startOffset":1040,"endOffset":1506,"count":0}],"isBlockCoverage":false},{"functionName":"expandTop","ranges":[{"startOffset":1508,"endOffset":2085,"count":0}],"isBlockCoverage":false},{"functionName":"embrace","ranges":[{"startOffset":2087,"endOffset":2138,"count":0}],"isBlockCoverage":false},{"functionName":"isPadded","ranges":[{"startOffset":2139,"endOffset":2192,"count":0}],"isBlockCoverage":false},{"functionName":"lte","ranges":[{"startOffset":2194,"endOffset":2233,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":2234,"endOffset":2273,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":2275,"endOffset":4990,"count":0}],"isBlockCoverage":false}]},{"scriptId":"221","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/balanced-match/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1219,"count":1}],"isBlockCoverage":true},{"functionName":"balanced","ranges":[{"startOffset":41,"endOffset":368,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMatch","ranges":[{"startOffset":370,"endOffset":455,"count":0}],"isBlockCoverage":false},{"functionName":"range","ranges":[{"startOffset":481,"endOffset":1218,"count":0}],"isBlockCoverage":false}]},{"scriptId":"222","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/cli/lookup-files.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4277,"count":1}],"isBlockCoverage":true},{"functionName":"isHiddenOnUnix","ranges":[{"startOffset":1057,"endOffset":1108,"count":0}],"isBlockCoverage":false},{"functionName":"hasMatchingExtname","ranges":[{"startOffset":1618,"endOffset":1747,"count":0}],"isBlockCoverage":false},{"functionName":"lookupFiles","ranges":[{"startOffset":2409,"endOffset":4275,"count":1},{"startOffset":2712,"endOffset":3009,"count":0},{"startOffset":3151,"endOffset":3292,"count":0},{"startOffset":3314,"endOffset":3428,"count":0},{"startOffset":3433,"endOffset":4274,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2820,"endOffset":2866,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3541,"endOffset":4254,"count":0}],"isBlockCoverage":false}]},{"scriptId":"223","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/node_modules/glob/glob.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19444,"count":1}],"isBlockCoverage":true},{"functionName":"glob","ranges":[{"startOffset":2095,"endOffset":2406,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":2516,"endOffset":2744,"count":1},{"startOffset":2595,"endOffset":2618,"count":0}],"isBlockCoverage":true},{"functionName":"glob.hasMagic","ranges":[{"startOffset":2762,"endOffset":3119,"count":1},{"startOffset":2944,"endOffset":2956,"count":0},{"startOffset":2984,"endOffset":2995,"count":0},{"startOffset":3039,"endOffset":3101,"count":3},{"startOffset":3086,"endOffset":3097,"count":1},{"startOffset":3101,"endOffset":3118,"count":0}],"isBlockCoverage":true},{"functionName":"Glob","ranges":[{"startOffset":3157,"endOffset":4587,"count":1},{"startOffset":3233,"endOffset":3274,"count":0},{"startOffset":3307,"endOffset":3426,"count":0},{"startOffset":3463,"endOffset":3500,"count":0},{"startOffset":3924,"endOffset":4043,"count":0},{"startOffset":4196,"endOffset":4586,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3988,"endOffset":4038,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":4362,"endOffset":4585,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._finish","ranges":[{"startOffset":4614,"endOffset":4817,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._realpath","ranges":[{"startOffset":4846,"endOffset":5161,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._realpathSet","ranges":[{"startOffset":5193,"endOffset":6009,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._mark","ranges":[{"startOffset":6034,"endOffset":6080,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._makeAbs","ranges":[{"startOffset":6108,"endOffset":6157,"count":0}],"isBlockCoverage":false},{"functionName":"Glob.abort","ranges":[{"startOffset":6182,"endOffset":6240,"count":0}],"isBlockCoverage":false},{"functionName":"Glob.pause","ranges":[{"startOffset":6265,"endOffset":6352,"count":0}],"isBlockCoverage":false},{"functionName":"Glob.resume","ranges":[{"startOffset":6378,"endOffset":6960,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._process","ranges":[{"startOffset":6988,"endOffset":8837,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processReaddir","ranges":[{"startOffset":8872,"endOffset":9108,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processReaddir2","ranges":[{"startOffset":9144,"endOffset":11188,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._emitMatch","ranges":[{"startOffset":11218,"endOffset":11786,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdirInGlobStar","ranges":[{"startOffset":11824,"endOffset":12626,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdir","ranges":[{"startOffset":12654,"endOffset":13171,"count":0}],"isBlockCoverage":false},{"functionName":"readdirCb","ranges":[{"startOffset":13173,"endOffset":13353,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdirEntries","ranges":[{"startOffset":13388,"endOffset":13885,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdirError","ranges":[{"startOffset":13918,"endOffset":15003,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processGlobStar","ranges":[{"startOffset":15039,"endOffset":15269,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processGlobStar2","ranges":[{"startOffset":15307,"endOffset":16454,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processSimple","ranges":[{"startOffset":16488,"endOffset":16744,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processSimple2","ranges":[{"startOffset":16778,"endOffset":17460,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._stat","ranges":[{"startOffset":17527,"endOffset":18918,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._stat2","ranges":[{"startOffset":18944,"endOffset":19443,"count":0}],"isBlockCoverage":false}]},{"scriptId":"224","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/fs.realpath/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1308,"count":1}],"isBlockCoverage":true},{"functionName":"newError","ranges":[{"startOffset":386,"endOffset":548,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":550,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":867,"endOffset":1123,"count":0}],"isBlockCoverage":false},{"functionName":"monkeypatch","ranges":[{"startOffset":1125,"endOffset":1210,"count":0}],"isBlockCoverage":false},{"functionName":"unmonkeypatch","ranges":[{"startOffset":1212,"endOffset":1307,"count":0}],"isBlockCoverage":false}]},{"scriptId":"225","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/fs.realpath/old.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8542,"count":1},{"startOffset":1341,"endOffset":1377,"count":0},{"startOffset":2534,"endOffset":2583,"count":0},{"startOffset":2754,"endOffset":2793,"count":0}],"isBlockCoverage":true},{"functionName":"rethrow","ranges":[{"startOffset":1380,"endOffset":2224,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCallback","ranges":[{"startOffset":2226,"endOffset":2308,"count":0}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":2818,"endOffset":5360,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":5383,"endOffset":8540,"count":0}],"isBlockCoverage":false}]},{"scriptId":"226","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/node_modules/glob/node_modules/minimatch/minimatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28818,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":35,"endOffset":267,"count":0}],"isBlockCoverage":false},{"functionName":"charSet","ranges":[{"startOffset":1274,"endOffset":1347,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1298,"endOffset":1342,"count":17}],"isBlockCoverage":true},{"functionName":"minimatch.filter","ranges":[{"startOffset":1617,"endOffset":1692,"count":0}],"isBlockCoverage":false},{"functionName":"ext","ranges":[{"startOffset":1706,"endOffset":1836,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.defaults","ranges":[{"startOffset":1859,"endOffset":2677,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.braceExpand","ranges":[{"startOffset":2957,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":3030,"endOffset":3358,"count":2},{"startOffset":3330,"endOffset":3357,"count":0}],"isBlockCoverage":true},{"functionName":"assertValidPattern","ranges":[{"startOffset":3424,"endOffset":3619,"count":10},{"startOffset":3472,"endOffset":3520,"count":0},{"startOffset":3565,"endOffset":3617,"count":0}],"isBlockCoverage":true},{"functionName":"minimatch.makeRe","ranges":[{"startOffset":4321,"endOffset":4391,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.match","ranges":[{"startOffset":4411,"endOffset":4615,"count":0}],"isBlockCoverage":false},{"functionName":"globUnescape","ranges":[{"startOffset":4670,"endOffset":4700,"count":4}],"isBlockCoverage":true},{"functionName":"charUnescape","ranges":[{"startOffset":4722,"endOffset":4757,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":4779,"endOffset":4829,"count":0}],"isBlockCoverage":false},{"functionName":"braExpEscape","ranges":[{"startOffset":4851,"endOffset":4885,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch","ranges":[{"startOffset":4907,"endOffset":5471,"count":2},{"startOffset":4991,"endOffset":5003,"count":0},{"startOffset":5140,"endOffset":5185,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":5475,"endOffset":5486,"count":50}],"isBlockCoverage":true},{"functionName":"make","ranges":[{"startOffset":5490,"endOffset":6696,"count":2},{"startOffset":5644,"endOffset":5672,"count":0},{"startOffset":5674,"endOffset":5720,"count":0},{"startOffset":5739,"endOffset":5783,"count":0},{"startOffset":5951,"endOffset":5999,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":5964,"endOffset":5999,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6347,"endOffset":6371,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6451,"endOffset":6490,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6608,"endOffset":6636,"count":2}],"isBlockCoverage":true},{"functionName":"parseNegate","ranges":[{"startOffset":6700,"endOffset":7058,"count":2},{"startOffset":6754,"endOffset":6905,"count":0},{"startOffset":6912,"endOffset":7057,"count":0}],"isBlockCoverage":true},{"functionName":"matchOne","ranges":[{"startOffset":7290,"endOffset":12449,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":12453,"endOffset":12524,"count":2}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":12528,"endOffset":24830,"count":6},{"startOffset":12663,"endOffset":12758,"count":0},{"startOffset":12783,"endOffset":12792,"count":0},{"startOffset":14261,"endOffset":14287,"count":36},{"startOffset":14294,"endOffset":19953,"count":36},{"startOffset":14410,"endOffset":14671,"count":0},{"startOffset":14735,"endOffset":14829,"count":0},{"startOffset":14839,"endOffset":15031,"count":0},{"startOffset":15117,"endOffset":15126,"count":0},{"startOffset":15135,"endOffset":15144,"count":2},{"startOffset":15153,"endOffset":15162,"count":2},{"startOffset":15171,"endOffset":15180,"count":2},{"startOffset":15189,"endOffset":16094,"count":2},{"startOffset":15408,"endOffset":15558,"count":0},{"startOffset":16061,"endOffset":16077,"count":0},{"startOffset":16104,"endOffset":16993,"count":0},{"startOffset":17003,"endOffset":17582,"count":0},{"startOffset":17592,"endOffset":18060,"count":0},{"startOffset":18126,"endOffset":18427,"count":0},{"startOffset":18437,"endOffset":19697,"count":0},{"startOffset":19707,"endOffset":19928,"count":34},{"startOffset":19829,"endOffset":19855,"count":4},{"startOffset":19844,"endOffset":19854,"count":0},{"startOffset":19857,"endOffset":19893,"count":4},{"startOffset":20076,"endOffset":20472,"count":0},{"startOffset":20890,"endOffset":21940,"count":0},{"startOffset":22045,"endOffset":22092,"count":0},{"startOffset":22601,"endOffset":23486,"count":0},{"startOffset":23696,"endOffset":23727,"count":2},{"startOffset":23754,"endOffset":23792,"count":2},{"startOffset":23871,"endOffset":23906,"count":0},{"startOffset":24002,"endOffset":24014,"count":0},{"startOffset":24016,"endOffset":24088,"count":0},{"startOffset":24256,"endOffset":24298,"count":4},{"startOffset":24298,"endOffset":24333,"count":2},{"startOffset":24333,"endOffset":24338,"count":0},{"startOffset":24339,"endOffset":24343,"count":2},{"startOffset":24475,"endOffset":24826,"count":0}],"isBlockCoverage":true},{"functionName":"patternStart","ranges":[{"startOffset":13393,"endOffset":13520,"count":2},{"startOffset":13428,"endOffset":13432,"count":0},{"startOffset":13466,"endOffset":13500,"count":0}],"isBlockCoverage":true},{"functionName":"subPatternStart","ranges":[{"startOffset":13549,"endOffset":13679,"count":0}],"isBlockCoverage":false},{"functionName":"clearStateChar","ranges":[{"startOffset":13709,"endOffset":14215,"count":42},{"startOffset":13738,"endOffset":14209,"count":2},{"startOffset":13960,"endOffset":14037,"count":0},{"startOffset":14048,"endOffset":14107,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21124,"endOffset":21702,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe","ranges":[{"startOffset":24834,"endOffset":27191,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":27195,"endOffset":28706,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":28717,"endOffset":28782,"count":0}],"isBlockCoverage":false}]},{"scriptId":"227","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/node_modules/glob/node_modules/minimatch/lib/path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":151,"count":1},{"startOffset":136,"endOffset":150,"count":0}],"isBlockCoverage":true}]},{"scriptId":"228","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/inherits/inherits.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":250,"count":1},{"startOffset":108,"endOffset":117,"count":0},{"startOffset":154,"endOffset":249,"count":0}],"isBlockCoverage":true}]},{"scriptId":"229","url":"node:assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33297,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadComparison","ranges":[{"startOffset":2839,"endOffset":3027,"count":0}],"isBlockCoverage":false},{"functionName":"escapeFn","ranges":[{"startOffset":3624,"endOffset":3672,"count":0}],"isBlockCoverage":false},{"functionName":"innerFail","ranges":[{"startOffset":4244,"endOffset":4364,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":4534,"endOffset":5553,"count":0}],"isBlockCoverage":false},{"functionName":"findColumn","ranges":[{"startOffset":5676,"endOffset":6641,"count":0}],"isBlockCoverage":false},{"functionName":"getCode","ranges":[{"startOffset":6645,"endOffset":8325,"count":0}],"isBlockCoverage":false},{"functionName":"parseCode","ranges":[{"startOffset":8329,"endOffset":9784,"count":0}],"isBlockCoverage":false},{"functionName":"getErrMessage","ranges":[{"startOffset":9788,"endOffset":13269,"count":0}],"isBlockCoverage":false},{"functionName":"innerOk","ranges":[{"startOffset":13273,"endOffset":13905,"count":11},{"startOffset":13335,"endOffset":13902,"count":0}],"isBlockCoverage":true},{"functionName":"ok","ranges":[{"startOffset":14046,"endOffset":14109,"count":11}],"isBlockCoverage":true},{"functionName":"equal","ranges":[{"startOffset":14379,"endOffset":14765,"count":0}],"isBlockCoverage":false},{"functionName":"notEqual","ranges":[{"startOffset":14994,"endOffset":15384,"count":0}],"isBlockCoverage":false},{"functionName":"deepEqual","ranges":[{"startOffset":15593,"endOffset":15972,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepEqual","ranges":[{"startOffset":16187,"endOffset":16574,"count":0}],"isBlockCoverage":false},{"functionName":"deepStrictEqual","ranges":[{"startOffset":16828,"endOffset":17231,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepStrictEqual","ranges":[{"startOffset":17491,"endOffset":17902,"count":0}],"isBlockCoverage":false},{"functionName":"strictEqual","ranges":[{"startOffset":18116,"endOffset":18442,"count":0}],"isBlockCoverage":false},{"functionName":"notStrictEqual","ranges":[{"startOffset":18663,"endOffset":18997,"count":6},{"startOffset":18745,"endOffset":18806,"count":0},{"startOffset":18842,"endOffset":18994,"count":0}],"isBlockCoverage":true},{"functionName":"Comparison","ranges":[{"startOffset":19024,"endOffset":19419,"count":0}],"isBlockCoverage":false},{"functionName":"compareExceptionKey","ranges":[{"startOffset":19426,"endOffset":20171,"count":0}],"isBlockCoverage":false},{"functionName":"expectedException","ranges":[{"startOffset":20175,"endOffset":23683,"count":0}],"isBlockCoverage":false},{"functionName":"getActual","ranges":[{"startOffset":23687,"endOffset":23835,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsPromise","ranges":[{"startOffset":23839,"endOffset":24211,"count":0}],"isBlockCoverage":false},{"functionName":"waitForActual","ranges":[{"startOffset":24215,"endOffset":24952,"count":0}],"isBlockCoverage":false},{"functionName":"expectsError","ranges":[{"startOffset":24956,"endOffset":26623,"count":0}],"isBlockCoverage":false},{"functionName":"hasMatchingError","ranges":[{"startOffset":26627,"endOffset":27263,"count":0}],"isBlockCoverage":false},{"functionName":"expectsNoError","ranges":[{"startOffset":27267,"endOffset":27941,"count":0}],"isBlockCoverage":false},{"functionName":"throws","ranges":[{"startOffset":28107,"endOffset":28203,"count":0}],"isBlockCoverage":false},{"functionName":"rejects","ranges":[{"startOffset":28390,"endOffset":28504,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotThrow","ranges":[{"startOffset":28674,"endOffset":28770,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotReject","ranges":[{"startOffset":28944,"endOffset":29058,"count":0}],"isBlockCoverage":false},{"functionName":"ifError","ranges":[{"startOffset":29193,"endOffset":31035,"count":0}],"isBlockCoverage":false},{"functionName":"internalMatch","ranges":[{"startOffset":31040,"endOffset":32156,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":32361,"endOffset":32455,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotMatch","ranges":[{"startOffset":32672,"endOffset":32780,"count":0}],"isBlockCoverage":false},{"functionName":"strict","ranges":[{"startOffset":32980,"endOffset":33051,"count":0}],"isBlockCoverage":false}]},{"scriptId":"230","url":"node:internal/assert/assertion_error","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17596,"count":1}],"isBlockCoverage":false},{"functionName":"copyError","ranges":[{"startOffset":1496,"endOffset":1798,"count":0}],"isBlockCoverage":false},{"functionName":"inspectValue","ranges":[{"startOffset":1802,"endOffset":2429,"count":0}],"isBlockCoverage":false},{"functionName":"createErrDiff","ranges":[{"startOffset":2433,"endOffset":11401,"count":0}],"isBlockCoverage":false},{"functionName":"addEllipsis","ranges":[{"startOffset":11405,"endOffset":11717,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError","ranges":[{"startOffset":11761,"endOffset":16588,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":16594,"endOffset":16671,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16677,"endOffset":17555,"count":0}],"isBlockCoverage":false}]},{"scriptId":"231","url":"node:internal/util/colors","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1162,"count":1}],"isBlockCoverage":false},{"functionName":"lazyInternalTTY","ranges":[{"startOffset":35,"endOffset":133,"count":0}],"isBlockCoverage":false},{"functionName":"shouldColorize","ranges":[{"startOffset":260,"endOffset":527,"count":18},{"startOffset":333,"endOffset":394,"count":0},{"startOffset":514,"endOffset":520,"count":0}],"isBlockCoverage":true},{"functionName":"refresh","ranges":[{"startOffset":532,"endOffset":1126,"count":1},{"startOffset":703,"endOffset":707,"count":0},{"startOffset":764,"endOffset":768,"count":0},{"startOffset":825,"endOffset":829,"count":0},{"startOffset":887,"endOffset":891,"count":0},{"startOffset":946,"endOffset":950,"count":0},{"startOffset":1006,"endOffset":1010,"count":0},{"startOffset":1064,"endOffset":1068,"count":0}],"isBlockCoverage":true}]},{"scriptId":"232","url":"node:internal/assert/calltracker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3605,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":489,"endOffset":1564,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1568,"endOffset":3570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"233","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/node_modules/glob/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12019,"count":1}],"isBlockCoverage":true},{"functionName":"globSync","ranges":[{"startOffset":500,"endOffset":789,"count":1},{"startOffset":606,"endOffset":740,"count":0}],"isBlockCoverage":true},{"functionName":"GlobSync","ranges":[{"startOffset":791,"endOffset":1418,"count":1},{"startOffset":850,"endOffset":889,"count":0},{"startOffset":958,"endOffset":1092,"count":0},{"startOffset":1133,"endOffset":1170,"count":0},{"startOffset":1233,"endOffset":1244,"count":0}],"isBlockCoverage":true},{"functionName":"GlobSync._finish","ranges":[{"startOffset":1449,"endOffset":2009,"count":1},{"startOffset":1522,"endOffset":1985,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1569,"endOffset":1980,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._process","ranges":[{"startOffset":2042,"endOffset":3629,"count":2},{"startOffset":2236,"endOffset":2250,"count":4},{"startOffset":2425,"endOffset":2510,"count":1},{"startOffset":2516,"endOffset":2680,"count":0},{"startOffset":2686,"endOffset":2915,"count":1},{"startOffset":2919,"endOffset":3022,"count":1},{"startOffset":3022,"endOffset":3032,"count":0},{"startOffset":3032,"endOffset":3294,"count":1},{"startOffset":3180,"endOffset":3271,"count":0},{"startOffset":3294,"endOffset":3400,"count":1},{"startOffset":3400,"endOffset":3406,"count":0},{"startOffset":3406,"endOffset":3482,"count":1},{"startOffset":3482,"endOffset":3549,"count":0},{"startOffset":3549,"endOffset":3627,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3095,"endOffset":3166,"count":3},{"startOffset":3147,"endOffset":3150,"count":2},{"startOffset":3151,"endOffset":3158,"count":1}],"isBlockCoverage":true},{"functionName":"GlobSync._processReaddir","ranges":[{"startOffset":3669,"endOffset":5627,"count":1},{"startOffset":3848,"endOffset":3854,"count":0},{"startOffset":4187,"endOffset":4420,"count":2},{"startOffset":4240,"endOffset":4248,"count":0},{"startOffset":4281,"endOffset":4291,"count":0},{"startOffset":4293,"endOffset":4327,"count":0},{"startOffset":4388,"endOffset":4410,"count":1},{"startOffset":4537,"endOffset":4543,"count":0},{"startOffset":4792,"endOffset":4805,"count":0},{"startOffset":4807,"endOffset":5294,"count":0},{"startOffset":5525,"endOffset":5557,"count":0}],"isBlockCoverage":true},{"functionName":"GlobSync._emitMatch","ranges":[{"startOffset":5662,"endOffset":6050,"count":1},{"startOffset":5714,"endOffset":5720,"count":0},{"startOffset":5813,"endOffset":5830,"count":0},{"startOffset":5866,"endOffset":5872,"count":0},{"startOffset":5969,"endOffset":5975,"count":0},{"startOffset":6035,"endOffset":6048,"count":0}],"isBlockCoverage":true},{"functionName":"GlobSync._readdirInGlobStar","ranges":[{"startOffset":6093,"endOffset":6805,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdir","ranges":[{"startOffset":6837,"endOffset":7268,"count":1},{"startOffset":6898,"endOffset":6929,"count":0},{"startOffset":6935,"endOffset":6970,"count":0},{"startOffset":7004,"endOffset":7125,"count":0},{"startOffset":7202,"endOffset":7266,"count":0}],"isBlockCoverage":true},{"functionName":"GlobSync._readdirEntries","ranges":[{"startOffset":7307,"endOffset":7788,"count":1},{"startOffset":7504,"endOffset":7517,"count":0},{"startOffset":7519,"endOffset":7710,"count":0}],"isBlockCoverage":true},{"functionName":"GlobSync._readdirError","ranges":[{"startOffset":7825,"endOffset":8689,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._processGlobStar","ranges":[{"startOffset":8729,"endOffset":9827,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._processSimple","ranges":[{"startOffset":9865,"endOffset":10611,"count":1},{"startOffset":10182,"endOffset":10188,"count":0},{"startOffset":10225,"endOffset":10241,"count":0},{"startOffset":10243,"endOffset":10472,"count":0}],"isBlockCoverage":true},{"functionName":"GlobSync._stat","ranges":[{"startOffset":10682,"endOffset":11862,"count":1},{"startOffset":10800,"endOffset":10812,"count":0},{"startOffset":10860,"endOffset":11190,"count":0},{"startOffset":11320,"endOffset":11470,"count":0},{"startOffset":11513,"endOffset":11619,"count":0},{"startOffset":11741,"endOffset":11748,"count":0},{"startOffset":11815,"endOffset":11830,"count":0},{"startOffset":11836,"endOffset":11848,"count":0}],"isBlockCoverage":true},{"functionName":"GlobSync._mark","ranges":[{"startOffset":11891,"endOffset":11937,"count":2}],"isBlockCoverage":true},{"functionName":"GlobSync._makeAbs","ranges":[{"startOffset":11969,"endOffset":12018,"count":3}],"isBlockCoverage":true}]},{"scriptId":"234","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/node_modules/glob/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6263,"count":1}],"isBlockCoverage":true},{"functionName":"ownProp","ranges":[{"startOffset":195,"endOffset":286,"count":4}],"isBlockCoverage":true},{"functionName":"alphasort","ranges":[{"startOffset":456,"endOffset":519,"count":0}],"isBlockCoverage":false},{"functionName":"setupIgnores","ranges":[{"startOffset":521,"endOffset":745,"count":2},{"startOffset":638,"endOffset":665,"count":0},{"startOffset":693,"endOffset":743,"count":0}],"isBlockCoverage":true},{"functionName":"ignoreMap","ranges":[{"startOffset":795,"endOffset":1088,"count":0}],"isBlockCoverage":false},{"functionName":"setopts","ranges":[{"startOffset":1090,"endOffset":3510,"count":2},{"startOffset":1154,"endOffset":1166,"count":0},{"startOffset":1240,"endOffset":1270,"count":0},{"startOffset":1272,"endOffset":1400,"count":0},{"startOffset":1463,"endOffset":1506,"count":0},{"startOffset":1935,"endOffset":1951,"count":1},{"startOffset":2619,"endOffset":2712,"count":0},{"startOffset":3009,"endOffset":3034,"count":0}],"isBlockCoverage":true},{"functionName":"finish","ranges":[{"startOffset":3512,"endOffset":4829,"count":1},{"startOffset":3579,"endOffset":3583,"count":0},{"startOffset":3754,"endOffset":3990,"count":0},{"startOffset":4077,"endOffset":4099,"count":0},{"startOffset":4737,"endOffset":4807,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4129,"endOffset":4177,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4473,"endOffset":4694,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4754,"endOffset":4806,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":4831,"endOffset":5282,"count":2},{"startOffset":5034,"endOffset":5043,"count":0},{"startOffset":5051,"endOffset":5059,"count":0},{"startOffset":5096,"endOffset":5114,"count":0},{"startOffset":5133,"endOffset":5264,"count":0}],"isBlockCoverage":true},{"functionName":"makeAbs","ranges":[{"startOffset":5303,"endOffset":5658,"count":6},{"startOffset":5373,"endOffset":5412,"count":0},{"startOffset":5449,"endOffset":5466,"count":0},{"startOffset":5493,"endOffset":5534,"count":0}],"isBlockCoverage":true},{"functionName":"isIgnored","ranges":[{"startOffset":5854,"endOffset":6068,"count":1},{"startOffset":5931,"endOffset":6067,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5959,"endOffset":6065,"count":0}],"isBlockCoverage":false},{"functionName":"childrenIgnored","ranges":[{"startOffset":6070,"endOffset":6262,"count":1},{"startOffset":6153,"endOffset":6261,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6181,"endOffset":6259,"count":0}],"isBlockCoverage":false}]},{"scriptId":"235","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/inflight/inflight.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1365,"count":1}],"isBlockCoverage":true},{"functionName":"inflight","ranges":[{"startOffset":125,"endOffset":274,"count":0}],"isBlockCoverage":false},{"functionName":"makeres","ranges":[{"startOffset":276,"endOffset":1223,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":1225,"endOffset":1364,"count":0}],"isBlockCoverage":false}]},{"scriptId":"236","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/wrappy/wrappy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":905,"count":1}],"isBlockCoverage":true},{"functionName":"wrappy","ranges":[{"startOffset":301,"endOffset":904,"count":4},{"startOffset":344,"endOffset":365,"count":0},{"startOffset":403,"endOffset":447,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":475,"endOffset":516,"count":0}],"isBlockCoverage":false},{"functionName":"wrapper","ranges":[{"startOffset":539,"endOffset":902,"count":0}],"isBlockCoverage":false}]},{"scriptId":"237","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/once/once.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":935,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":123,"endOffset":427,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":430,"endOffset":610,"count":1}],"isBlockCoverage":true},{"functionName":"f","ranges":[{"startOffset":461,"endOffset":578,"count":0}],"isBlockCoverage":false},{"functionName":"onceStrict","ranges":[{"startOffset":612,"endOffset":934,"count":0}],"isBlockCoverage":false}]},{"scriptId":"238","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/plugin-loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8391,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":611,"endOffset":923,"count":0}],"isBlockCoverage":false},{"functionName":"finalize","ranges":[{"startOffset":929,"endOffset":1838,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":2005,"endOffset":2484,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":2660,"endOffset":3142,"count":0}],"isBlockCoverage":false},{"functionName":"PluginLoader","ranges":[{"startOffset":3633,"endOffset":4623,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4435,"endOffset":4487,"count":3}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":4723,"endOffset":5868,"count":3},{"startOffset":4798,"endOffset":4924,"count":0},{"startOffset":4956,"endOffset":5097,"count":0},{"startOffset":5181,"endOffset":5312,"count":0},{"startOffset":5405,"endOffset":5418,"count":0},{"startOffset":5468,"endOffset":5630,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":6119,"endOffset":6956,"count":0}],"isBlockCoverage":false},{"functionName":"finalize","ranges":[{"startOffset":7385,"endOffset":7889,"count":1},{"startOffset":7528,"endOffset":7801,"count":3},{"startOffset":7560,"endOffset":7795,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":8016,"endOffset":8126,"count":1}],"isBlockCoverage":true}]},{"scriptId":"239","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/cli/config.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2624,"count":1}],"isBlockCoverage":true},{"functionName":"yaml","ranges":[{"startOffset":880,"endOffset":950,"count":0}],"isBlockCoverage":false},{"functionName":"js","ranges":[{"startOffset":958,"endOffset":1365,"count":0}],"isBlockCoverage":false},{"functionName":"json","ranges":[{"startOffset":1375,"endOffset":1480,"count":0}],"isBlockCoverage":false},{"functionName":"exports.loadConfig","ranges":[{"startOffset":1723,"endOffset":2244,"count":0}],"isBlockCoverage":false},{"functionName":"exports.findConfig","ranges":[{"startOffset":2437,"endOffset":2622,"count":1},{"startOffset":2539,"endOffset":2601,"count":0}],"isBlockCoverage":true}]},{"scriptId":"240","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/node_modules/find-up/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1940,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":185,"endOffset":1023,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":1048,"endOffset":1825,"count":2},{"startOffset":1116,"endOffset":1121,"count":1},{"startOffset":1559,"endOffset":1823,"count":5},{"startOffset":1650,"endOffset":1666,"count":0},{"startOffset":1685,"endOffset":1736,"count":1},{"startOffset":1736,"endOffset":1764,"count":4},{"startOffset":1764,"endOffset":1780,"count":1},{"startOffset":1780,"endOffset":1823,"count":3}],"isBlockCoverage":true},{"functionName":"runMatcher","ranges":[{"startOffset":1216,"endOffset":1491,"count":5},{"startOffset":1323,"endOffset":1490,"count":0}],"isBlockCoverage":true}]},{"scriptId":"241","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/node_modules/locate-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1329,"count":1}],"isBlockCoverage":true},{"functionName":"checkType","ranges":[{"startOffset":288,"endOffset":414,"count":5},{"startOffset":358,"endOffset":413,"count":0}],"isBlockCoverage":true},{"functionName":"matchType","ranges":[{"startOffset":434,"endOffset":498,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":518,"endOffset":920,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":945,"endOffset":1327,"count":5},{"startOffset":1133,"endOffset":1147,"count":0},{"startOffset":1178,"endOffset":1325,"count":25},{"startOffset":1285,"endOffset":1309,"count":1},{"startOffset":1314,"endOffset":1322,"count":24},{"startOffset":1325,"endOffset":1326,"count":4}],"isBlockCoverage":true}]},{"scriptId":"242","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/node_modules/p-locate/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1157,"count":1}],"isBlockCoverage":true},{"functionName":"EndError","ranges":[{"startOffset":82,"endOffset":138,"count":0}],"isBlockCoverage":false},{"functionName":"testElement","ranges":[{"startOffset":213,"endOffset":261,"count":0}],"isBlockCoverage":false},{"functionName":"finder","ranges":[{"startOffset":347,"endOffset":490,"count":0}],"isBlockCoverage":false},{"functionName":"pLocate","ranges":[{"startOffset":509,"endOffset":1128,"count":0}],"isBlockCoverage":false}]},{"scriptId":"243","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/node_modules/p-limit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1521,"count":1}],"isBlockCoverage":true},{"functionName":"pLimit","ranges":[{"startOffset":68,"endOffset":1493,"count":0}],"isBlockCoverage":false}]},{"scriptId":"244","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/yocto-queue/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":949,"count":1}],"isBlockCoverage":true},{"functionName":"Node","ranges":[{"startOffset":38,"endOffset":159,"count":0}],"isBlockCoverage":false},{"functionName":"Queue","ranges":[{"startOffset":277,"endOffset":311,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":314,"endOffset":511,"count":0}],"isBlockCoverage":false},{"functionName":"dequeue","ranges":[{"startOffset":514,"endOffset":664,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":667,"endOffset":749,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":752,"endOffset":788,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":791,"endOffset":921,"count":0}],"isBlockCoverage":false}]},{"scriptId":"245","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/path-exists/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":347,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":134,"endOffset":230,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":255,"endOffset":345,"count":0}],"isBlockCoverage":false}]},{"scriptId":"246","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/cli/node-flags.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2844,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isNodeFlag","ranges":[{"startOffset":1079,"endOffset":1831,"count":12},{"startOffset":1125,"endOffset":1360,"count":2},{"startOffset":1252,"endOffset":1360,"count":0},{"startOffset":1360,"endOffset":1595,"count":10},{"startOffset":1595,"endOffset":1607,"count":1},{"startOffset":1608,"endOffset":1630,"count":1},{"startOffset":1632,"endOffset":1659,"count":10},{"startOffset":1660,"endOffset":1824,"count":10}],"isBlockCoverage":true},{"functionName":"exports.impliesNoTimeouts","ranges":[{"startOffset":2107,"endOffset":2135,"count":0}],"isBlockCoverage":false},{"functionName":"exports.unparseNodeFlags","ranges":[{"startOffset":2636,"endOffset":2842,"count":0}],"isBlockCoverage":false}]},{"scriptId":"247","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/yargs-unparser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5238,"count":1}],"isBlockCoverage":true},{"functionName":"isAlias","ranges":[{"startOffset":175,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"hasDefaultValue","ranges":[{"startOffset":356,"endOffset":442,"count":0}],"isBlockCoverage":false},{"functionName":"isCamelCased","ranges":[{"startOffset":444,"endOffset":639,"count":0}],"isBlockCoverage":false},{"functionName":"keyToFlag","ranges":[{"startOffset":641,"endOffset":722,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommand","ranges":[{"startOffset":724,"endOffset":1760,"count":0}],"isBlockCoverage":false},{"functionName":"unparseOption","ranges":[{"startOffset":1762,"endOffset":2598,"count":0}],"isBlockCoverage":false},{"functionName":"unparsePositional","ranges":[{"startOffset":2600,"endOffset":3641,"count":0}],"isBlockCoverage":false},{"functionName":"unparseOptions","ranges":[{"startOffset":3643,"endOffset":4320,"count":0}],"isBlockCoverage":false},{"functionName":"unparseEndOfOptions","ranges":[{"startOffset":4322,"endOffset":4477,"count":0}],"isBlockCoverage":false},{"functionName":"unparser","ranges":[{"startOffset":4544,"endOffset":5209,"count":0}],"isBlockCoverage":false}]},{"scriptId":"248","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/flat/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3970,"count":1}],"isBlockCoverage":true},{"functionName":"isBuffer","ranges":[{"startOffset":82,"endOffset":238,"count":0}],"isBlockCoverage":false},{"functionName":"keyIdentity","ranges":[{"startOffset":240,"endOffset":283,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":285,"endOffset":1284,"count":0}],"isBlockCoverage":false},{"functionName":"unflatten","ranges":[{"startOffset":1286,"endOffset":3969,"count":0}],"isBlockCoverage":false}]},{"scriptId":"249","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/yargs-unparser/node_modules/camelcase/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3272,"count":1}],"isBlockCoverage":true},{"functionName":"preserveCamelCase","ranges":[{"startOffset":464,"endOffset":1410,"count":0}],"isBlockCoverage":false},{"functionName":"preserveConsecutiveUppercase","ranges":[{"startOffset":1450,"endOffset":1573,"count":0}],"isBlockCoverage":false},{"functionName":"postProcess","ranges":[{"startOffset":1596,"endOffset":1855,"count":0}],"isBlockCoverage":false},{"functionName":"camelCase","ranges":[{"startOffset":1876,"endOffset":3157,"count":0}],"isBlockCoverage":false}]},{"scriptId":"250","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/yargs-unparser/node_modules/decamelize/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":446,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"251","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/is-plain-obj/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":245,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":243,"count":0}],"isBlockCoverage":false}]},{"scriptId":"252","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/cli/cli.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2923,"count":1},{"startOffset":2901,"endOffset":2922,"count":0}],"isBlockCoverage":true},{"functionName":"exports.main","ranges":[{"startOffset":1380,"endOffset":2716,"count":1},{"startOffset":1743,"endOffset":1763,"count":0},{"startOffset":2466,"endOffset":2470,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2005,"endOffset":2227,"count":0}],"isBlockCoverage":false}]},{"scriptId":"253","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/yargs/yargs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":457,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.applyExtends","ranges":[{"startOffset":275,"endOffset":375,"count":0}],"isBlockCoverage":false}]},{"scriptId":"254","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/yargs/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":107596,"count":1},{"startOffset":106038,"endOffset":106046,"count":0},{"startOffset":106089,"endOffset":106097,"count":0},{"startOffset":106144,"endOffset":106159,"count":0},{"startOffset":106537,"endOffset":106543,"count":0},{"startOffset":106884,"endOffset":106928,"count":0},{"startOffset":107069,"endOffset":107253,"count":0}],"isBlockCoverage":true},{"functionName":"YError","ranges":[{"startOffset":81,"endOffset":219,"count":0}],"isBlockCoverage":false},{"functionName":"applyExtends","ranges":[{"startOffset":268,"endOffset":1455,"count":1},{"startOffset":437,"endOffset":1299,"count":0},{"startOffset":1367,"endOffset":1401,"count":0}],"isBlockCoverage":true},{"functionName":"checkForCircularExtends","ranges":[{"startOffset":1456,"endOffset":1642,"count":0}],"isBlockCoverage":false},{"functionName":"getPathToDefaultConfig","ranges":[{"startOffset":1643,"endOffset":1746,"count":0}],"isBlockCoverage":false},{"functionName":"mergeDeep","ranges":[{"startOffset":1747,"endOffset":2225,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommand","ranges":[{"startOffset":2227,"endOffset":3279,"count":249},{"startOffset":2519,"endOffset":2566,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2718,"endOffset":3249,"count":498},{"startOffset":2833,"endOffset":2865,"count":2},{"startOffset":2879,"endOffset":2895,"count":2},{"startOffset":2925,"endOffset":3077,"count":218},{"startOffset":3077,"endOffset":3243,"count":280}],"isBlockCoverage":true},{"functionName":"argsert","ranges":[{"startOffset":3360,"endOffset":5273,"count":251},{"startOffset":3829,"endOffset":3867,"count":291},{"startOffset":3881,"endOffset":3892,"count":48},{"startOffset":3924,"endOffset":3938,"count":8},{"startOffset":3985,"endOffset":4124,"count":0},{"startOffset":4240,"endOffset":4367,"count":0},{"startOffset":5219,"endOffset":5271,"count":0}],"isBlockCoverage":true},{"functionName":"parseArgs","ranges":[{"startOffset":3401,"endOffset":3648,"count":251},{"startOffset":3476,"endOffset":3522,"count":6},{"startOffset":3535,"endOffset":3641,"count":245}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4400,"endOffset":4756,"count":279},{"startOffset":4663,"endOffset":4719,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4555,"endOffset":4600,"count":611},{"startOffset":4585,"endOffset":4600,"count":332}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4791,"endOffset":5206,"count":216},{"startOffset":4856,"endOffset":4863,"count":62},{"startOffset":4863,"endOffset":5113,"count":154},{"startOffset":5113,"endOffset":5169,"count":0},{"startOffset":5169,"endOffset":5205,"count":154}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5005,"endOffset":5050,"count":201},{"startOffset":5035,"endOffset":5050,"count":55}],"isBlockCoverage":true},{"functionName":"guessType","ranges":[{"startOffset":5274,"endOffset":5442,"count":433},{"startOffset":5328,"endOffset":5359,"count":32},{"startOffset":5359,"endOffset":5417,"count":401},{"startOffset":5387,"endOffset":5417,"count":0},{"startOffset":5417,"endOffset":5441,"count":401}],"isBlockCoverage":true},{"functionName":"argumentTypeError","ranges":[{"startOffset":5443,"endOffset":5661,"count":0}],"isBlockCoverage":false},{"functionName":"isPromise","ranges":[{"startOffset":5663,"endOffset":5810,"count":7},{"startOffset":5756,"endOffset":5806,"count":4}],"isBlockCoverage":true},{"functionName":"assertNotStrictEqual","ranges":[{"startOffset":5812,"endOffset":5937,"count":6}],"isBlockCoverage":true},{"functionName":"assertSingleKey","ranges":[{"startOffset":5938,"endOffset":6034,"count":0}],"isBlockCoverage":false},{"functionName":"objectKeys","ranges":[{"startOffset":6035,"endOffset":6098,"count":30}],"isBlockCoverage":true},{"functionName":"objFilter","ranges":[{"startOffset":6100,"endOffset":6334,"count":26}],"isBlockCoverage":true},{"functionName":"filter","ranges":[{"startOffset":6143,"endOffset":6153,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6210,"endOffset":6314,"count":9},{"startOffset":6259,"endOffset":6308,"count":8}],"isBlockCoverage":true},{"functionName":"globalMiddlewareFactory","ranges":[{"startOffset":6336,"endOffset":7171,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6409,"endOffset":7168,"count":1},{"startOffset":6599,"endOffset":6964,"count":0}],"isBlockCoverage":true},{"functionName":"commandMiddlewareFactory","ranges":[{"startOffset":7172,"endOffset":7409,"count":4},{"startOffset":7273,"endOffset":7408,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7307,"endOffset":7405,"count":0}],"isBlockCoverage":false},{"functionName":"applyMiddleware","ranges":[{"startOffset":7410,"endOffset":8413,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7629,"endOffset":8403,"count":2},{"startOffset":7719,"endOffset":7783,"count":1},{"startOffset":7783,"endOffset":8056,"count":0},{"startOffset":8056,"endOffset":8397,"count":1},{"startOffset":8156,"endOffset":8176,"count":0},{"startOffset":8194,"endOffset":8222,"count":0},{"startOffset":8358,"endOffset":8386,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7830,"endOffset":7947,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7971,"endOffset":8044,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8290,"endOffset":8340,"count":1}],"isBlockCoverage":true},{"functionName":"getProcessArgvBinIndex","ranges":[{"startOffset":8415,"endOffset":8516,"count":0}],"isBlockCoverage":false},{"functionName":"isBundledElectronApp","ranges":[{"startOffset":8517,"endOffset":8603,"count":0}],"isBlockCoverage":false},{"functionName":"isElectronApp","ranges":[{"startOffset":8604,"endOffset":8672,"count":0}],"isBlockCoverage":false},{"functionName":"hideBin","ranges":[{"startOffset":8673,"endOffset":8752,"count":0}],"isBlockCoverage":false},{"functionName":"getProcessArgvBin","ranges":[{"startOffset":8753,"endOffset":8836,"count":0}],"isBlockCoverage":false},{"functionName":"whichModule","ranges":[{"startOffset":8968,"endOffset":9273,"count":0}],"isBlockCoverage":false},{"functionName":"command","ranges":[{"startOffset":9314,"endOffset":23717,"count":1}],"isBlockCoverage":true},{"functionName":"addHandler","ranges":[{"startOffset":9501,"endOffset":12153,"count":4},{"startOffset":9715,"endOffset":9729,"count":2},{"startOffset":9763,"endOffset":10015,"count":1},{"startOffset":9863,"endOffset":10005,"count":0},{"startOffset":10015,"endOffset":10686,"count":3},{"startOffset":10066,"endOffset":10460,"count":2},{"startOffset":10121,"endOffset":10155,"count":1},{"startOffset":10202,"endOffset":10219,"count":0},{"startOffset":10266,"endOffset":10315,"count":0},{"startOffset":10460,"endOffset":10686,"count":1},{"startOffset":10515,"endOffset":10686,"count":0},{"startOffset":10686,"endOffset":12147,"count":2},{"startOffset":11191,"endOffset":11203,"count":0},{"startOffset":11221,"endOffset":11246,"count":0},{"startOffset":11274,"endOffset":11463,"count":1},{"startOffset":11870,"endOffset":11875,"count":0},{"startOffset":12092,"endOffset":12137,"count":1}],"isBlockCoverage":true},{"functionName":"handler","ranges":[{"startOffset":9719,"endOffset":9728,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10813,"endOffset":10845,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10960,"endOffset":11145,"count":3},{"startOffset":11011,"endOffset":11102,"count":1},{"startOffset":11102,"endOffset":11144,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11492,"endOffset":11569,"count":0}],"isBlockCoverage":false},{"functionName":"addDirectory","ranges":[{"startOffset":12179,"endOffset":12983,"count":0}],"isBlockCoverage":false},{"functionName":"moduleName","ranges":[{"startOffset":12989,"endOffset":13214,"count":0}],"isBlockCoverage":false},{"functionName":"commandFromFilename","ranges":[{"startOffset":13219,"endOffset":13339,"count":0}],"isBlockCoverage":false},{"functionName":"extractDesc","ranges":[{"startOffset":13344,"endOffset":13639,"count":2},{"startOffset":13459,"endOffset":13611,"count":3},{"startOffset":13502,"endOffset":13519,"count":1},{"startOffset":13537,"endOffset":13549,"count":2},{"startOffset":13549,"endOffset":13611,"count":1},{"startOffset":13611,"endOffset":13638,"count":0}],"isBlockCoverage":true},{"functionName":"self.getCommands","ranges":[{"startOffset":13663,"endOffset":13720,"count":2}],"isBlockCoverage":true},{"functionName":"self.getCommandHandlers","ranges":[{"startOffset":13752,"endOffset":13766,"count":0}],"isBlockCoverage":false},{"functionName":"self.hasDefaultCommand","ranges":[{"startOffset":13797,"endOffset":13819,"count":1}],"isBlockCoverage":true},{"functionName":"runCommand","ranges":[{"startOffset":13843,"endOffset":18015,"count":1},{"startOffset":14297,"endOffset":14430,"count":0},{"startOffset":14678,"endOffset":14685,"count":0},{"startOffset":15081,"endOffset":15734,"count":0},{"startOffset":16691,"endOffset":16791,"count":0},{"startOffset":17547,"endOffset":17699,"count":0},{"startOffset":17731,"endOffset":17832,"count":0},{"startOffset":17930,"endOffset":17983,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15518,"endOffset":15594,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16639,"endOffset":16675,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17027,"endOffset":17178,"count":1},{"startOffset":17084,"endOffset":17160,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17207,"endOffset":17407,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17435,"endOffset":17531,"count":1}],"isBlockCoverage":true},{"functionName":"shouldUpdateUsage","ranges":[{"startOffset":18021,"endOffset":18189,"count":1}],"isBlockCoverage":true},{"functionName":"usageFromParentCommandsCommandHandler","ranges":[{"startOffset":18194,"endOffset":18616,"count":1},{"startOffset":18350,"endOffset":18410,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18491,"endOffset":18551,"count":0}],"isBlockCoverage":false},{"functionName":"self.runDefaultBuilderOn","ranges":[{"startOffset":18648,"endOffset":19382,"count":0}],"isBlockCoverage":false},{"functionName":"populatePositionals","ranges":[{"startOffset":19388,"endOffset":20228,"count":1},{"startOffset":19758,"endOffset":19875,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20076,"endOffset":20087,"count":0}],"isBlockCoverage":false},{"functionName":"populatePositional","ranges":[{"startOffset":20233,"endOffset":20567,"count":1},{"startOffset":20442,"endOffset":20561,"count":0}],"isBlockCoverage":true},{"functionName":"postProcessPositionals","ranges":[{"startOffset":20572,"endOffset":22332,"count":1},{"startOffset":21436,"endOffset":21443,"count":0},{"startOffset":21711,"endOffset":21801,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21115,"endOffset":21391,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21159,"endOffset":21379,"count":1},{"startOffset":21260,"endOffset":21284,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21927,"endOffset":22010,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22058,"endOffset":22314,"count":12},{"startOffset":22123,"endOffset":22300,"count":1},{"startOffset":22194,"endOffset":22232,"count":0}],"isBlockCoverage":true},{"functionName":"self.cmdToParseOptions","ranges":[{"startOffset":22362,"endOffset":23211,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22602,"endOffset":22893,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22928,"endOffset":23174,"count":1}],"isBlockCoverage":true},{"functionName":"self.reset","ranges":[{"startOffset":23230,"endOffset":23346,"count":1}],"isBlockCoverage":true},{"functionName":"self.freeze","ranges":[{"startOffset":23390,"endOffset":23510,"count":1}],"isBlockCoverage":true},{"functionName":"self.unfreeze","ranges":[{"startOffset":23532,"endOffset":23697,"count":1}],"isBlockCoverage":true},{"functionName":"isCommandBuilderDefinition","ranges":[{"startOffset":23718,"endOffset":23886,"count":1},{"startOffset":23805,"endOffset":23833,"count":0},{"startOffset":23834,"endOffset":23882,"count":0}],"isBlockCoverage":true},{"functionName":"isCommandAndAliases","ranges":[{"startOffset":23887,"endOffset":24039,"count":1},{"startOffset":23998,"endOffset":24037,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23941,"endOffset":23967,"count":2}],"isBlockCoverage":true},{"functionName":"isCommandBuilderCallback","ranges":[{"startOffset":24040,"endOffset":24128,"count":1}],"isBlockCoverage":true},{"functionName":"isCommandBuilderOptionDefinitions","ranges":[{"startOffset":24129,"endOffset":24224,"count":0}],"isBlockCoverage":false},{"functionName":"isCommandHandlerDefinition","ranges":[{"startOffset":24225,"endOffset":24328,"count":3},{"startOffset":24303,"endOffset":24325,"count":2}],"isBlockCoverage":true},{"functionName":"setBlocking","ranges":[{"startOffset":24330,"endOffset":24700,"count":0}],"isBlockCoverage":false},{"functionName":"usage","ranges":[{"startOffset":24702,"endOffset":43891,"count":1}],"isBlockCoverage":true},{"functionName":"failFn","ranges":[{"startOffset":24823,"endOffset":24872,"count":1}],"isBlockCoverage":true},{"functionName":"showHelpOnFailFn","ranges":[{"startOffset":24959,"endOffset":25277,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":25326,"endOffset":26442,"count":0}],"isBlockCoverage":false},{"functionName":"self.usage","ranges":[{"startOffset":26513,"endOffset":26763,"count":1},{"startOffset":26563,"endOffset":26658,"count":0},{"startOffset":26728,"endOffset":26733,"count":0}],"isBlockCoverage":true},{"functionName":"self.getUsage","ranges":[{"startOffset":26785,"endOffset":26821,"count":1}],"isBlockCoverage":true},{"functionName":"self.getUsageDisabled","ranges":[{"startOffset":26851,"endOffset":26894,"count":1}],"isBlockCoverage":true},{"functionName":"self.getPositionalGroupName","ranges":[{"startOffset":26930,"endOffset":26978,"count":82}],"isBlockCoverage":true},{"functionName":"self.example","ranges":[{"startOffset":27022,"endOffset":27100,"count":0}],"isBlockCoverage":false},{"functionName":"command","ranges":[{"startOffset":27144,"endOffset":27478,"count":2},{"startOffset":27244,"endOffset":27391,"count":1},{"startOffset":27432,"endOffset":27437,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27282,"endOffset":27379,"count":0}],"isBlockCoverage":false},{"functionName":"self.getCommands","ranges":[{"startOffset":27503,"endOffset":27517,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":27566,"endOffset":27994,"count":47},{"startOffset":27641,"endOffset":27745,"count":0},{"startOffset":27794,"endOffset":27919,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27673,"endOffset":27733,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27839,"endOffset":27907,"count":0}],"isBlockCoverage":false},{"functionName":"self.getDescriptions","ranges":[{"startOffset":28023,"endOffset":28041,"count":2}],"isBlockCoverage":true},{"functionName":"self.epilog","ranges":[{"startOffset":28083,"endOffset":28124,"count":1}],"isBlockCoverage":true},{"functionName":"self.wrap","ranges":[{"startOffset":28181,"endOffset":28241,"count":1}],"isBlockCoverage":true},{"functionName":"getWrap","ranges":[{"startOffset":28247,"endOffset":28390,"count":1},{"startOffset":28290,"endOffset":28363,"count":0}],"isBlockCoverage":true},{"functionName":"self.deferY18nLookup","ranges":[{"startOffset":28472,"endOffset":28506,"count":3}],"isBlockCoverage":true},{"functionName":"help","ranges":[{"startOffset":28524,"endOffset":38490,"count":1},{"startOffset":28585,"endOffset":28610,"count":0},{"startOffset":28720,"endOffset":28750,"count":0},{"startOffset":29989,"endOffset":30322,"count":0},{"startOffset":30362,"endOffset":32088,"count":0},{"startOffset":32143,"endOffset":32148,"count":0},{"startOffset":32194,"endOffset":32199,"count":0},{"startOffset":37472,"endOffset":38238,"count":0},{"startOffset":38271,"endOffset":38434,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29365,"endOffset":29476,"count":51}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29714,"endOffset":29947,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30698,"endOffset":30732,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30778,"endOffset":32054,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":32229,"endOffset":32355,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32297,"endOffset":32354,"count":1720},{"startOffset":32328,"endOffset":32333,"count":731}],"isBlockCoverage":true},{"functionName":"isLongSwitch","ranges":[{"startOffset":32575,"endOffset":32606,"count":123}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32680,"endOffset":32721,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32740,"endOffset":33283,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32874,"endOffset":33221,"count":43},{"startOffset":32948,"endOffset":32959,"count":22},{"startOffset":32959,"endOffset":33048,"count":21},{"startOffset":33048,"endOffset":33179,"count":840},{"startOffset":33100,"endOffset":33105,"count":357},{"startOffset":33145,"endOffset":33161,"count":0},{"startOffset":33179,"endOffset":33220,"count":21}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33305,"endOffset":33354,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33373,"endOffset":34439,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33461,"endOffset":34363,"count":43},{"startOffset":33557,"endOffset":33562,"count":21}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33589,"endOffset":34085,"count":67},{"startOffset":33690,"endOffset":33700,"count":1},{"startOffset":33700,"endOffset":34067,"count":66},{"startOffset":33808,"endOffset":33916,"count":0},{"startOffset":33993,"endOffset":33999,"count":47},{"startOffset":34032,"endOffset":34037,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34113,"endOffset":34287,"count":28},{"startOffset":34187,"endOffset":34190,"count":5},{"startOffset":34211,"endOffset":34287,"count":23},{"startOffset":34255,"endOffset":34258,"count":2},{"startOffset":34283,"endOffset":34287,"count":21}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34512,"endOffset":34574,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34594,"endOffset":34685,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34650,"endOffset":34684,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34773,"endOffset":34835,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34862,"endOffset":35142,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34937,"endOffset":35126,"count":42},{"startOffset":34999,"endOffset":35108,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":35187,"endOffset":37440,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":35300,"endOffset":37406,"count":43},{"startOffset":35401,"endOffset":35406,"count":0},{"startOffset":35523,"endOffset":35579,"count":0},{"startOffset":35651,"endOffset":35679,"count":23},{"startOffset":35749,"endOffset":35775,"count":0},{"startOffset":35846,"endOffset":35873,"count":8},{"startOffset":35947,"endOffset":35974,"count":2},{"startOffset":36044,"endOffset":36070,"count":10},{"startOffset":36141,"endOffset":36168,"count":2},{"startOffset":36466,"endOffset":36507,"count":0},{"startOffset":36609,"endOffset":36632,"count":0},{"startOffset":36725,"endOffset":36796,"count":0},{"startOffset":37341,"endOffset":37392,"count":0}],"isBlockCoverage":true},{"functionName":"deprecatedExtra","ranges":[{"startOffset":36209,"endOffset":36363,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37540,"endOffset":37631,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37663,"endOffset":38204,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":38324,"endOffset":38364,"count":0}],"isBlockCoverage":false},{"functionName":"maxWidth","ranges":[{"startOffset":38496,"endOffset":38973,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38647,"endOffset":38655,"count":441}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38690,"endOffset":38843,"count":441},{"startOffset":38752,"endOffset":38784,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeAliases","ranges":[{"startOffset":38978,"endOffset":40022,"count":1},{"startOffset":39148,"endOffset":39153,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39163,"endOffset":40014,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39211,"endOffset":40002,"count":25},{"startOffset":39283,"endOffset":39323,"count":0},{"startOffset":39390,"endOffset":39438,"count":0},{"startOffset":39512,"endOffset":39531,"count":0},{"startOffset":39603,"endOffset":39620,"count":0},{"startOffset":39693,"endOffset":39711,"count":0},{"startOffset":39787,"endOffset":39808,"count":0},{"startOffset":39880,"endOffset":39897,"count":0},{"startOffset":39970,"endOffset":39988,"count":0}],"isBlockCoverage":true},{"functionName":"self.cacheHelpMessage","ranges":[{"startOffset":40078,"endOffset":40138,"count":1}],"isBlockCoverage":true},{"functionName":"self.clearCachedHelpMessage","ranges":[{"startOffset":40174,"endOffset":40232,"count":1}],"isBlockCoverage":true},{"functionName":"addUngroupedKeys","ranges":[{"startOffset":40238,"endOffset":40737,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40397,"endOffset":40478,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40502,"endOffset":40701,"count":43},{"startOffset":40628,"endOffset":40691,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40591,"endOffset":40625,"count":47}],"isBlockCoverage":true},{"functionName":"filterHiddenOptions","ranges":[{"startOffset":40742,"endOffset":40918,"count":96},{"startOffset":40844,"endOffset":40910,"count":2}],"isBlockCoverage":true},{"functionName":"self.showHelp","ranges":[{"startOffset":40939,"endOffset":41158,"count":0}],"isBlockCoverage":false},{"functionName":"self.functionDescription","ranges":[{"startOffset":41191,"endOffset":41377,"count":0}],"isBlockCoverage":false},{"functionName":"stringifiedValues","ranges":[{"startOffset":41408,"endOffset":41806,"count":0}],"isBlockCoverage":false},{"functionName":"defaultString","ranges":[{"startOffset":41812,"endOffset":42459,"count":43},{"startOffset":41940,"endOffset":41962,"count":35},{"startOffset":41976,"endOffset":41988,"count":30},{"startOffset":41988,"endOffset":42021,"count":13},{"startOffset":42021,"endOffset":42074,"count":5},{"startOffset":42074,"endOffset":42424,"count":8},{"startOffset":42142,"endOffset":42227,"count":2},{"startOffset":42244,"endOffset":42338,"count":3},{"startOffset":42355,"endOffset":42400,"count":3},{"startOffset":42424,"endOffset":42458,"count":13}],"isBlockCoverage":true},{"functionName":"windowWidth","ranges":[{"startOffset":42464,"endOffset":42690,"count":0}],"isBlockCoverage":false},{"functionName":"self.version","ranges":[{"startOffset":42734,"endOffset":42771,"count":3}],"isBlockCoverage":true},{"functionName":"self.showVersion","ranges":[{"startOffset":42796,"endOffset":42889,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":42908,"endOffset":43213,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":43164,"endOffset":43184,"count":2}],"isBlockCoverage":true},{"functionName":"freeze","ranges":[{"startOffset":43257,"endOffset":43507,"count":1}],"isBlockCoverage":true},{"functionName":"unfreeze","ranges":[{"startOffset":43529,"endOffset":43871,"count":1}],"isBlockCoverage":true},{"functionName":"isIndentedText","ranges":[{"startOffset":43892,"endOffset":43962,"count":1114}],"isBlockCoverage":true},{"functionName":"addIndentation","ranges":[{"startOffset":43963,"endOffset":44147,"count":23},{"startOffset":44043,"endOffset":44104,"count":0}],"isBlockCoverage":true},{"functionName":"getIndentation","ranges":[{"startOffset":44148,"endOffset":44237,"count":484},{"startOffset":44212,"endOffset":44230,"count":279},{"startOffset":44231,"endOffset":44234,"count":205}],"isBlockCoverage":true},{"functionName":"getText","ranges":[{"startOffset":44238,"endOffset":44316,"count":607},{"startOffset":44295,"endOffset":44306,"count":279},{"startOffset":44307,"endOffset":44313,"count":328}],"isBlockCoverage":true},{"functionName":"completion","ranges":[{"startOffset":45697,"endOffset":50817,"count":1},{"startOffset":45973,"endOffset":46018,"count":0},{"startOffset":46056,"endOffset":46104,"count":0}],"isBlockCoverage":true},{"functionName":"setParsed","ranges":[{"startOffset":45860,"endOffset":45928,"count":1}],"isBlockCoverage":true},{"functionName":"getCompletion","ranges":[{"startOffset":46132,"endOffset":50219,"count":0}],"isBlockCoverage":false},{"functionName":"generateCompletionScript","ranges":[{"startOffset":50257,"endOffset":50686,"count":0}],"isBlockCoverage":false},{"functionName":"self.registerFunction","ranges":[{"startOffset":50751,"endOffset":50797,"count":0}],"isBlockCoverage":false},{"functionName":"isSyncCompletionFunction","ranges":[{"startOffset":50818,"endOffset":50917,"count":0}],"isBlockCoverage":false},{"functionName":"levenshtein","ranges":[{"startOffset":50919,"endOffset":51642,"count":0}],"isBlockCoverage":false},{"functionName":"validation","ranges":[{"startOffset":51683,"endOffset":63616,"count":1}],"isBlockCoverage":true},{"functionName":"nonOptionCount","ranges":[{"startOffset":51828,"endOffset":53555,"count":1},{"startOffset":51982,"endOffset":52001,"count":0},{"startOffset":52112,"endOffset":52187,"count":0},{"startOffset":52189,"endOffset":53549,"count":0}],"isBlockCoverage":true},{"functionName":"positionalCount","ranges":[{"startOffset":53584,"endOffset":53872,"count":1},{"startOffset":53664,"endOffset":53866,"count":0}],"isBlockCoverage":true},{"functionName":"requiredArguments","ranges":[{"startOffset":53903,"endOffset":54878,"count":1},{"startOffset":54082,"endOffset":54321,"count":0},{"startOffset":54343,"endOffset":54872,"count":0}],"isBlockCoverage":true},{"functionName":"unknownArguments","ranges":[{"startOffset":54908,"endOffset":56092,"count":0}],"isBlockCoverage":false},{"functionName":"unknownCommands","ranges":[{"startOffset":56121,"endOffset":56838,"count":0}],"isBlockCoverage":false},{"functionName":"isValidAndSomeAliasIsNotNew","ranges":[{"startOffset":56879,"endOffset":57325,"count":0}],"isBlockCoverage":false},{"functionName":"limitedChoices","ranges":[{"startOffset":57353,"endOffset":58401,"count":1},{"startOffset":57526,"endOffset":58400,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57561,"endOffset":58012,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58187,"endOffset":58368,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":58441,"endOffset":58549,"count":1}],"isBlockCoverage":true},{"functionName":"customChecks","ranges":[{"startOffset":58575,"endOffset":59234,"count":1},{"startOffset":58833,"endOffset":58952,"count":0},{"startOffset":58978,"endOffset":59071,"count":0},{"startOffset":59148,"endOffset":59218,"count":0}],"isBlockCoverage":true},{"functionName":"implies","ranges":[{"startOffset":59277,"endOffset":59940,"count":0}],"isBlockCoverage":false},{"functionName":"getImplied","ranges":[{"startOffset":59964,"endOffset":60017,"count":0}],"isBlockCoverage":false},{"functionName":"keyExists","ranges":[{"startOffset":60023,"endOffset":60422,"count":0}],"isBlockCoverage":false},{"functionName":"implications","ranges":[{"startOffset":60447,"endOffset":61176,"count":1},{"startOffset":60986,"endOffset":61170,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":60544,"endOffset":60953,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61075,"endOffset":61129,"count":0}],"isBlockCoverage":false},{"functionName":"conflicts","ranges":[{"startOffset":61225,"endOffset":61837,"count":16},{"startOffset":61378,"endOffset":61492,"count":0},{"startOffset":61574,"endOffset":61628,"count":4},{"startOffset":61667,"endOffset":61742,"count":2},{"startOffset":61742,"endOffset":61821,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":61417,"endOffset":61480,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61699,"endOffset":61726,"count":12}],"isBlockCoverage":true},{"functionName":"self.getConflicting","ranges":[{"startOffset":61865,"endOffset":61882,"count":0}],"isBlockCoverage":false},{"functionName":"conflictingFn","ranges":[{"startOffset":61907,"endOffset":62329,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":61972,"endOffset":62321,"count":13},{"startOffset":62015,"endOffset":62311,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":62058,"endOffset":62295,"count":0}],"isBlockCoverage":false},{"functionName":"recommendCommands","ranges":[{"startOffset":62360,"endOffset":62981,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":63000,"endOffset":63231,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":63067,"endOffset":63087,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":63135,"endOffset":63155,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":63189,"endOffset":63202,"count":0}],"isBlockCoverage":false},{"functionName":"freeze","ranges":[{"startOffset":63275,"endOffset":63401,"count":1}],"isBlockCoverage":true},{"functionName":"unfreeze","ranges":[{"startOffset":63423,"endOffset":63596,"count":1}],"isBlockCoverage":true},{"functionName":"YargsWithShim","ranges":[{"startOffset":63630,"endOffset":63701,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs","ranges":[{"startOffset":63702,"endOffset":105257,"count":1},{"startOffset":64430,"endOffset":64502,"count":0},{"startOffset":64730,"endOffset":64782,"count":0},{"startOffset":64784,"endOffset":64921,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self.scriptName","ranges":[{"startOffset":64155,"endOffset":64273,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":64540,"endOffset":64665,"count":1},{"startOffset":64655,"endOffset":64658,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self.getContext","ranges":[{"startOffset":65023,"endOffset":65036,"count":2}],"isBlockCoverage":true},{"functionName":"Yargs.self.exit","ranges":[{"startOffset":65107,"endOffset":65244,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.completion","ranges":[{"startOffset":65302,"endOffset":65839,"count":0}],"isBlockCoverage":false},{"functionName":"resetOptions","ranges":[{"startOffset":65895,"endOffset":68249,"count":2},{"startOffset":65985,"endOffset":65990,"count":1},{"startOffset":66064,"endOffset":66079,"count":1},{"startOffset":66080,"endOffset":66084,"count":1},{"startOffset":66155,"endOffset":66178,"count":1},{"startOffset":66191,"endOffset":66195,"count":1},{"startOffset":67651,"endOffset":67679,"count":1},{"startOffset":67680,"endOffset":67707,"count":1},{"startOffset":67757,"endOffset":67790,"count":1},{"startOffset":67803,"endOffset":67844,"count":1},{"startOffset":67888,"endOffset":67907,"count":1},{"startOffset":67920,"endOffset":67984,"count":1},{"startOffset":68025,"endOffset":68085,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":66262,"endOffset":66414,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":66483,"endOffset":66707,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":67323,"endOffset":67418,"count":16},{"startOffset":67370,"endOffset":67375,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":67384,"endOffset":67406,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":67451,"endOffset":67542,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":67510,"endOffset":67530,"count":4}],"isBlockCoverage":true},{"functionName":"freeze","ranges":[{"startOffset":68304,"endOffset":68860,"count":1}],"isBlockCoverage":true},{"functionName":"unfreeze","ranges":[{"startOffset":68865,"endOffset":69563,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.boolean","ranges":[{"startOffset":69583,"endOffset":69738,"count":5}],"isBlockCoverage":true},{"functionName":"Yargs.self.array","ranges":[{"startOffset":69757,"endOffset":69910,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.number","ranges":[{"startOffset":69930,"endOffset":70084,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.normalize","ranges":[{"startOffset":70107,"endOffset":70264,"count":2}],"isBlockCoverage":true},{"functionName":"Yargs.self.count","ranges":[{"startOffset":70283,"endOffset":70436,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.string","ranges":[{"startOffset":70456,"endOffset":70610,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.requiresArg","ranges":[{"startOffset":70635,"endOffset":70968,"count":14},{"startOffset":70790,"endOffset":70826,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self.skipValidation","ranges":[{"startOffset":70996,"endOffset":71158,"count":0}],"isBlockCoverage":false},{"functionName":"populateParserHintArray","ranges":[{"startOffset":71164,"endOffset":71363,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":71264,"endOffset":71355,"count":48}],"isBlockCoverage":true},{"functionName":"Yargs.self.nargs","ranges":[{"startOffset":71381,"endOffset":71595,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.choices","ranges":[{"startOffset":71616,"endOffset":71835,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.alias","ranges":[{"startOffset":71854,"endOffset":72069,"count":23}],"isBlockCoverage":true},{"functionName":"Yargs.self.default.self.defaults","ranges":[{"startOffset":72106,"endOffset":72786,"count":8},{"startOffset":72289,"endOffset":72408,"count":0},{"startOffset":72450,"endOffset":72673,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self.describe","ranges":[{"startOffset":72808,"endOffset":73003,"count":47}],"isBlockCoverage":true},{"functionName":"setKey","ranges":[{"startOffset":73009,"endOffset":73137,"count":47}],"isBlockCoverage":true},{"functionName":"demandOption","ranges":[{"startOffset":73142,"endOffset":73383,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.coerce","ranges":[{"startOffset":73440,"endOffset":73662,"count":6}],"isBlockCoverage":true},{"functionName":"populateParserHintSingleValueDictionary","ranges":[{"startOffset":73668,"endOffset":73891,"count":75}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":73810,"endOffset":73883,"count":75}],"isBlockCoverage":true},{"functionName":"populateParserHintArrayDictionary","ranges":[{"startOffset":73896,"endOffset":74148,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74032,"endOffset":74140,"count":22}],"isBlockCoverage":true},{"functionName":"populateParserHintDictionary","ranges":[{"startOffset":74153,"endOffset":74622,"count":98},{"startOffset":74270,"endOffset":74363,"count":0},{"startOffset":74422,"endOffset":74530,"count":1},{"startOffset":74469,"endOffset":74520,"count":20},{"startOffset":74530,"endOffset":74616,"count":97}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74296,"endOffset":74351,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":74382,"endOffset":74414,"count":98}],"isBlockCoverage":true},{"functionName":"sanitizeKey","ranges":[{"startOffset":74627,"endOffset":74747,"count":145},{"startOffset":74700,"endOffset":74721,"count":0}],"isBlockCoverage":true},{"functionName":"deleteFromParserHintObject","ranges":[{"startOffset":74752,"endOffset":75313,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74837,"endOffset":75252,"count":46},{"startOffset":74929,"endOffset":74936,"count":2},{"startOffset":74936,"endOffset":75017,"count":44},{"startOffset":75017,"endOffset":75139,"count":18},{"startOffset":75085,"endOffset":75125,"count":2},{"startOffset":75139,"endOffset":75242,"count":26},{"startOffset":75187,"endOffset":75242,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74869,"endOffset":74901,"count":46}],"isBlockCoverage":true},{"functionName":"config","ranges":[{"startOffset":75332,"endOffset":76111,"count":2},{"startOffset":75520,"endOffset":75542,"count":1},{"startOffset":75544,"endOffset":75770,"count":1},{"startOffset":75716,"endOffset":75721,"count":0},{"startOffset":75770,"endOffset":75810,"count":1},{"startOffset":75810,"endOffset":75877,"count":0},{"startOffset":75877,"endOffset":75963,"count":1},{"startOffset":75994,"endOffset":75999,"count":0},{"startOffset":76000,"endOffset":76007,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":76017,"endOffset":76082,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.example","ranges":[{"startOffset":76132,"endOffset":76460,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.command","ranges":[{"startOffset":76481,"endOffset":76865,"count":2}],"isBlockCoverage":true},{"functionName":"Yargs.self.commandDir","ranges":[{"startOffset":76889,"endOffset":77151,"count":0}],"isBlockCoverage":false},{"functionName":"demand","ranges":[{"startOffset":77202,"endOffset":78178,"count":0}],"isBlockCoverage":false},{"functionName":"demandCommand","ranges":[{"startOffset":78205,"endOffset":78685,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getDemandedOptions","ranges":[{"startOffset":78717,"endOffset":78794,"count":3}],"isBlockCoverage":true},{"functionName":"Yargs.self.getDemandedCommands","ranges":[{"startOffset":78827,"endOffset":78905,"count":2}],"isBlockCoverage":true},{"functionName":"deprecateOption","ranges":[{"startOffset":78934,"endOffset":79140,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getDeprecatedOptions","ranges":[{"startOffset":79174,"endOffset":79253,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.implies","ranges":[{"startOffset":79274,"endOffset":79456,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.conflicts","ranges":[{"startOffset":79479,"endOffset":79656,"count":4}],"isBlockCoverage":true},{"functionName":"Yargs.self.usage","ranges":[{"startOffset":79675,"endOffset":80345,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.epilogue.self.epilog","ranges":[{"startOffset":80381,"endOffset":80507,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.fail","ranges":[{"startOffset":80525,"endOffset":80647,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.onFinishCommand","ranges":[{"startOffset":80676,"endOffset":80805,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getHandlerFinishCommand","ranges":[{"startOffset":80842,"endOffset":80868,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.check","ranges":[{"startOffset":80887,"endOffset":81060,"count":1}],"isBlockCoverage":true},{"functionName":"global","ranges":[{"startOffset":81080,"endOffset":81557,"count":16},{"startOffset":81358,"endOffset":81530,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":81316,"endOffset":81346,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":81402,"endOffset":81518,"count":0}],"isBlockCoverage":false},{"functionName":"pkgConf","ranges":[{"startOffset":81578,"endOffset":82055,"count":0}],"isBlockCoverage":false},{"functionName":"pkgUp","ranges":[{"startOffset":82082,"endOffset":82959,"count":1},{"startOffset":82185,"endOffset":82204,"count":0},{"startOffset":82875,"endOffset":82892,"count":0},{"startOffset":82919,"endOffset":82924,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":82491,"endOffset":82716,"count":2},{"startOffset":82561,"endOffset":82702,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":83030,"endOffset":84057,"count":1},{"startOffset":83258,"endOffset":83453,"count":0},{"startOffset":83500,"endOffset":83589,"count":0},{"startOffset":83638,"endOffset":83719,"count":0},{"startOffset":83812,"endOffset":83832,"count":0},{"startOffset":83973,"endOffset":84008,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self._getParseContext","ranges":[{"startOffset":84087,"endOffset":84111,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self._hasParseCallback","ranges":[{"startOffset":84142,"endOffset":84157,"count":0}],"isBlockCoverage":false},{"functionName":"option","ranges":[{"startOffset":84192,"endOffset":87432,"count":43},{"startOffset":84332,"endOffset":84444,"count":1},{"startOffset":84444,"endOffset":87405,"count":42},{"startOffset":84501,"endOffset":84542,"count":0},{"startOffset":84623,"endOffset":84650,"count":0},{"startOffset":84741,"endOffset":84810,"count":0},{"startOffset":84905,"endOffset":84962,"count":0},{"startOffset":84997,"endOffset":85121,"count":0},{"startOffset":85153,"endOffset":85220,"count":4},{"startOffset":85255,"endOffset":85318,"count":8},{"startOffset":85362,"endOffset":85425,"count":0},{"startOffset":85467,"endOffset":85526,"count":0},{"startOffset":85555,"endOffset":85622,"count":1},{"startOffset":85654,"endOffset":85706,"count":2},{"startOffset":85736,"endOffset":85799,"count":0},{"startOffset":85828,"endOffset":85889,"count":6},{"startOffset":85917,"endOffset":85976,"count":39},{"startOffset":86032,"endOffset":86158,"count":0},{"startOffset":86210,"endOffset":86332,"count":0},{"startOffset":86386,"endOffset":86510,"count":0},{"startOffset":86564,"endOffset":86688,"count":0},{"startOffset":86740,"endOffset":86788,"count":0},{"startOffset":86838,"endOffset":86899,"count":0},{"startOffset":86940,"endOffset":87029,"count":5},{"startOffset":87066,"endOffset":87123,"count":0},{"startOffset":87181,"endOffset":87192,"count":0},{"startOffset":87260,"endOffset":87307,"count":1},{"startOffset":87341,"endOffset":87395,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":84371,"endOffset":84432,"count":41}],"isBlockCoverage":true},{"functionName":"Yargs.self.getOptions","ranges":[{"startOffset":87456,"endOffset":87469,"count":103}],"isBlockCoverage":true},{"functionName":"Yargs.self.positional","ranges":[{"startOffset":87493,"endOffset":89136,"count":1},{"startOffset":87619,"endOffset":87728,"count":0},{"startOffset":88450,"endOffset":88492,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88090,"endOffset":88311,"count":3},{"startOffset":88189,"endOffset":88241,"count":1},{"startOffset":88259,"endOffset":88274,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88676,"endOffset":89030,"count":4},{"startOffset":88778,"endOffset":88883,"count":1},{"startOffset":88853,"endOffset":88869,"count":0},{"startOffset":88883,"endOffset":89020,"count":3},{"startOffset":88940,"endOffset":88956,"count":0},{"startOffset":88978,"endOffset":89006,"count":0}],"isBlockCoverage":true},{"functionName":"group","ranges":[{"startOffset":89155,"endOffset":89676,"count":40},{"startOffset":89384,"endOffset":89442,"count":0},{"startOffset":89506,"endOffset":89511,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":89533,"endOffset":89647,"count":239},{"startOffset":89585,"endOffset":89598,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self.getGroups","ranges":[{"startOffset":89699,"endOffset":89747,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.env","ranges":[{"startOffset":89764,"endOffset":90002,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.wrap","ranges":[{"startOffset":90020,"endOffset":90162,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.strict","ranges":[{"startOffset":90206,"endOffset":90348,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getStrict","ranges":[{"startOffset":90371,"endOffset":90383,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.strictCommands","ranges":[{"startOffset":90443,"endOffset":90593,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getStrictCommands","ranges":[{"startOffset":90624,"endOffset":90644,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.strictOptions","ranges":[{"startOffset":90702,"endOffset":90851,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getStrictOptions","ranges":[{"startOffset":90881,"endOffset":90900,"count":0}],"isBlockCoverage":false},{"functionName":"parserConfiguration","ranges":[{"startOffset":90960,"endOffset":91113,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.getParserConfiguration","ranges":[{"startOffset":91149,"endOffset":91167,"count":5}],"isBlockCoverage":true},{"functionName":"Yargs.self.showHelp","ranges":[{"startOffset":91189,"endOffset":91534,"count":0}],"isBlockCoverage":false},{"functionName":"version","ranges":[{"startOffset":91582,"endOffset":92607,"count":2},{"startOffset":91775,"endOffset":91909,"count":1},{"startOffset":91946,"endOffset":92322,"count":1},{"startOffset":92070,"endOffset":92217,"count":0},{"startOffset":92259,"endOffset":92322,"count":0},{"startOffset":92374,"endOffset":92393,"count":0},{"startOffset":92413,"endOffset":92462,"count":1},{"startOffset":92492,"endOffset":92504,"count":0}],"isBlockCoverage":true},{"functionName":"guessVersion","ranges":[{"startOffset":92613,"endOffset":92714,"count":1},{"startOffset":92695,"endOffset":92707,"count":0}],"isBlockCoverage":true},{"functionName":"addHelpOpt","ranges":[{"startOffset":92773,"endOffset":93338,"count":2},{"startOffset":92941,"endOffset":93029,"count":1},{"startOffset":93066,"endOffset":93137,"count":0},{"startOffset":93180,"endOffset":93185,"count":1},{"startOffset":93186,"endOffset":93202,"count":1},{"startOffset":93270,"endOffset":93309,"count":1}],"isBlockCoverage":true},{"functionName":"addShowHiddenOpt","ranges":[{"startOffset":93484,"endOffset":93993,"count":0}],"isBlockCoverage":false},{"functionName":"hide","ranges":[{"startOffset":94011,"endOffset":94153,"count":1}],"isBlockCoverage":true},{"functionName":"showHelpOnFail","ranges":[{"startOffset":94181,"endOffset":94385,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.exitProcess","ranges":[{"startOffset":94438,"endOffset":94582,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getExitProcess","ranges":[{"startOffset":94610,"endOffset":94627,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.showCompletionScript","ranges":[{"startOffset":94661,"endOffset":94909,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getCompletion","ranges":[{"startOffset":94936,"endOffset":95084,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.locale","ranges":[{"startOffset":95104,"endOffset":95366,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.updateStrings.self.updateLocale","ranges":[{"startOffset":95413,"endOffset":95572,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.detectLocale","ranges":[{"startOffset":95627,"endOffset":95762,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getDetectLocale","ranges":[{"startOffset":95791,"endOffset":95809,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":95841,"endOffset":96077,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":96087,"endOffset":96327,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self._getLoggerInstance","ranges":[{"startOffset":96366,"endOffset":96379,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self._hasOutput","ranges":[{"startOffset":96403,"endOffset":96418,"count":3}],"isBlockCoverage":true},{"functionName":"Yargs.self._setHasOutput","ranges":[{"startOffset":96445,"endOffset":96484,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.recommendCommands","ranges":[{"startOffset":96542,"endOffset":96698,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getUsageInstance","ranges":[{"startOffset":96728,"endOffset":96741,"count":5}],"isBlockCoverage":true},{"functionName":"Yargs.self.getValidationInstance","ranges":[{"startOffset":96776,"endOffset":96794,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getCommandInstance","ranges":[{"startOffset":96826,"endOffset":96841,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.terminalWidth","ranges":[{"startOffset":96868,"endOffset":96947,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":97004,"endOffset":97038,"count":0}],"isBlockCoverage":false},{"functionName":"parseArgs","ranges":[{"startOffset":97096,"endOffset":102725,"count":2},{"startOffset":97242,"endOffset":97256,"count":1},{"startOffset":97788,"endOffset":97833,"count":0},{"startOffset":98002,"endOffset":98105,"count":0},{"startOffset":98221,"endOffset":98226,"count":0},{"startOffset":98347,"endOffset":98442,"count":0},{"startOffset":98723,"endOffset":98793,"count":0},{"startOffset":98868,"endOffset":100055,"count":1},{"startOffset":99107,"endOffset":99135,"count":0},{"startOffset":99137,"endOffset":99343,"count":0},{"startOffset":99834,"endOffset":99899,"count":0},{"startOffset":99900,"endOffset":99922,"count":0},{"startOffset":99924,"endOffset":100037,"count":0},{"startOffset":100055,"endOffset":100094,"count":1},{"startOffset":100094,"endOffset":100151,"count":0},{"startOffset":100152,"endOffset":100194,"count":0},{"startOffset":100196,"endOffset":100378,"count":0},{"startOffset":100392,"endOffset":100632,"count":0},{"startOffset":100632,"endOffset":100669,"count":1},{"startOffset":100669,"endOffset":101256,"count":0},{"startOffset":101256,"endOffset":102007,"count":1},{"startOffset":102007,"endOffset":102043,"count":0},{"startOffset":102045,"endOffset":102188,"count":0},{"startOffset":102188,"endOffset":102222,"count":1},{"startOffset":102222,"endOffset":102466,"count":0},{"startOffset":102485,"endOffset":102639,"count":0},{"startOffset":102639,"endOffset":102724,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":98256,"endOffset":98273,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":100946,"endOffset":101151,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":101329,"endOffset":101958,"count":13},{"startOffset":101378,"endOffset":101390,"count":0},{"startOffset":101392,"endOffset":101634,"count":0},{"startOffset":101683,"endOffset":101695,"count":0},{"startOffset":101697,"endOffset":101940,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":102103,"endOffset":102172,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self._postProcess","ranges":[{"startOffset":102751,"endOffset":103332,"count":3},{"startOffset":102857,"endOffset":102869,"count":1},{"startOffset":102869,"endOffset":102913,"count":2},{"startOffset":102913,"endOffset":103201,"count":1},{"startOffset":103239,"endOffset":103331,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self._copyDoubleDash","ranges":[{"startOffset":103361,"endOffset":103593,"count":1},{"startOffset":103439,"endOffset":103592,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self._parsePositionalNumbers","ranges":[{"startOffset":103630,"endOffset":103987,"count":1},{"startOffset":103680,"endOffset":103692,"count":0},{"startOffset":103768,"endOffset":103960,"count":0}],"isBlockCoverage":true},{"functionName":"runValidation","ranges":[{"startOffset":104015,"endOffset":104874,"count":1},{"startOffset":104146,"endOffset":104184,"count":0},{"startOffset":104344,"endOffset":104426,"count":0},{"startOffset":104446,"endOffset":104470,"count":0},{"startOffset":104472,"endOffset":104574,"count":0},{"startOffset":104607,"endOffset":104694,"count":0}],"isBlockCoverage":true},{"functionName":"guessLocale","ranges":[{"startOffset":104880,"endOffset":105201,"count":2},{"startOffset":104951,"endOffset":105042,"count":0},{"startOffset":105043,"endOffset":105079,"count":0},{"startOffset":105080,"endOffset":105120,"count":0},{"startOffset":105121,"endOffset":105143,"count":0}],"isBlockCoverage":true},{"functionName":"rebase","ranges":[{"startOffset":105273,"endOffset":105319,"count":1}],"isBlockCoverage":true},{"functionName":"isYargsInstance","ranges":[{"startOffset":105321,"endOffset":105406,"count":1}],"isBlockCoverage":true},{"functionName":"getEnv","ranges":[{"startOffset":105816,"endOffset":105865,"count":3}],"isBlockCoverage":true},{"functionName":"argv","ranges":[{"startOffset":106229,"endOffset":106247,"count":2}],"isBlockCoverage":true},{"functionName":"execPath","ranges":[{"startOffset":106293,"endOffset":106315,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":106331,"endOffset":106384,"count":0}],"isBlockCoverage":false}]},{"scriptId":"255","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/y18n/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6783,"count":1}],"isBlockCoverage":true},{"functionName":"Y18N","ranges":[{"startOffset":123,"endOffset":611,"count":1},{"startOffset":196,"endOffset":201,"count":0},{"startOffset":243,"endOffset":257,"count":0},{"startOffset":343,"endOffset":349,"count":0},{"startOffset":473,"endOffset":498,"count":0}],"isBlockCoverage":true},{"functionName":"__","ranges":[{"startOffset":616,"endOffset":1683,"count":171},{"startOffset":676,"endOffset":755,"count":0},{"startOffset":913,"endOffset":929,"count":0},{"startOffset":946,"endOffset":964,"count":0},{"startOffset":1025,"endOffset":1048,"count":0},{"startOffset":1157,"endOffset":1176,"count":0},{"startOffset":1178,"endOffset":1535,"count":0},{"startOffset":1655,"endOffset":1661,"count":0}],"isBlockCoverage":true},{"functionName":"cb","ranges":[{"startOffset":807,"endOffset":822,"count":171}],"isBlockCoverage":true},{"functionName":"cb","ranges":[{"startOffset":949,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__n","ranges":[{"startOffset":1688,"endOffset":3211,"count":0}],"isBlockCoverage":false},{"functionName":"setLocale","ranges":[{"startOffset":3216,"endOffset":3271,"count":0}],"isBlockCoverage":false},{"functionName":"getLocale","ranges":[{"startOffset":3276,"endOffset":3323,"count":0}],"isBlockCoverage":false},{"functionName":"updateLocale","ranges":[{"startOffset":3328,"endOffset":3607,"count":1},{"startOffset":3453,"endOffset":3601,"count":3}],"isBlockCoverage":true},{"functionName":"_taggedLiteral","ranges":[{"startOffset":3612,"endOffset":3952,"count":0}],"isBlockCoverage":false},{"functionName":"_enqueueWrite","ranges":[{"startOffset":3957,"endOffset":4101,"count":0}],"isBlockCoverage":false},{"functionName":"_processWriteQueue","ranges":[{"startOffset":4106,"endOffset":4746,"count":0}],"isBlockCoverage":false},{"functionName":"_readLocaleFile","ranges":[{"startOffset":4751,"endOffset":5465,"count":1},{"startOffset":5145,"endOffset":5411,"count":0}],"isBlockCoverage":true},{"functionName":"_resolveLocaleFile","ranges":[{"startOffset":5470,"endOffset":5946,"count":1},{"startOffset":5645,"endOffset":5672,"count":0},{"startOffset":5674,"endOffset":5919,"count":0}],"isBlockCoverage":true},{"functionName":"_fileExistsSync","ranges":[{"startOffset":5951,"endOffset":6014,"count":1}],"isBlockCoverage":true},{"functionName":"y18n$1","ranges":[{"startOffset":6017,"endOffset":6358,"count":1}],"isBlockCoverage":true},{"functionName":"exists","ranges":[{"startOffset":6537,"endOffset":6683,"count":1},{"startOffset":6628,"endOffset":6677,"count":0}],"isBlockCoverage":true},{"functionName":"y18n","ranges":[{"startOffset":6701,"endOffset":6757,"count":1}],"isBlockCoverage":true}]},{"scriptId":"256","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/yargs/node_modules/yargs-parser/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42313,"count":1},{"startOffset":41005,"endOffset":41049,"count":0},{"startOffset":41190,"endOffset":41388,"count":0},{"startOffset":41425,"endOffset":41429,"count":0}],"isBlockCoverage":true},{"functionName":"camelCase","ranges":[{"startOffset":96,"endOffset":980,"count":39},{"startOffset":172,"endOffset":200,"count":0},{"startOffset":297,"endOffset":323,"count":0},{"startOffset":325,"endOffset":352,"count":0},{"startOffset":511,"endOffset":537,"count":0},{"startOffset":564,"endOffset":946,"count":470},{"startOffset":633,"endOffset":727,"count":39},{"startOffset":752,"endOffset":783,"count":431},{"startOffset":768,"endOffset":782,"count":392},{"startOffset":785,"endOffset":837,"count":39},{"startOffset":837,"endOffset":936,"count":431}],"isBlockCoverage":true},{"functionName":"decamelize","ranges":[{"startOffset":981,"endOffset":1474,"count":34},{"startOffset":1089,"endOffset":1095,"count":0},{"startOffset":1165,"endOffset":1447,"count":368},{"startOffset":1289,"endOffset":1297,"count":34},{"startOffset":1299,"endOffset":1377,"count":34},{"startOffset":1377,"endOffset":1441,"count":334}],"isBlockCoverage":true},{"functionName":"looksLikeNumber","ranges":[{"startOffset":1475,"endOffset":1786,"count":24},{"startOffset":1552,"endOffset":1565,"count":0},{"startOffset":1605,"endOffset":1617,"count":2},{"startOffset":1617,"endOffset":1660,"count":22},{"startOffset":1660,"endOffset":1672,"count":0},{"startOffset":1672,"endOffset":1707,"count":22},{"startOffset":1707,"endOffset":1720,"count":0},{"startOffset":1720,"endOffset":1785,"count":22}],"isBlockCoverage":true},{"functionName":"tokenizeArgString","ranges":[{"startOffset":1788,"endOffset":2573,"count":3},{"startOffset":1940,"endOffset":2572,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1893,"endOffset":1932,"count":4},{"startOffset":1920,"endOffset":1928,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2605,"endOffset":2843,"count":1}],"isBlockCoverage":true},{"functionName":"YargsParser","ranges":[{"startOffset":2941,"endOffset":2992,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":2997,"endOffset":39528,"count":3},{"startOffset":4641,"endOffset":4646,"count":0},{"startOffset":4801,"endOffset":4806,"count":0},{"startOffset":4930,"endOffset":4945,"count":0},{"startOffset":5604,"endOffset":5609,"count":0},{"startOffset":6247,"endOffset":6252,"count":0},{"startOffset":6408,"endOffset":6413,"count":0},{"startOffset":6571,"endOffset":6576,"count":0},{"startOffset":6733,"endOffset":6738,"count":0},{"startOffset":6898,"endOffset":6903,"count":0},{"startOffset":7756,"endOffset":7918,"count":0},{"startOffset":9037,"endOffset":9089,"count":0},{"startOffset":9144,"endOffset":9222,"count":0},{"startOffset":9330,"endOffset":9886,"count":0},{"startOffset":9934,"endOffset":9970,"count":0},{"startOffset":9972,"endOffset":10242,"count":0},{"startOffset":10283,"endOffset":10349,"count":2},{"startOffset":10351,"endOffset":11560,"count":1},{"startOffset":10634,"endOffset":11528,"count":0},{"startOffset":11560,"endOffset":15980,"count":2},{"startOffset":11605,"endOffset":11804,"count":0},{"startOffset":11847,"endOffset":11870,"count":0},{"startOffset":11872,"endOffset":12479,"count":0},{"startOffset":12522,"endOffset":12545,"count":0},{"startOffset":12547,"endOffset":15406,"count":0},{"startOffset":15450,"endOffset":15488,"count":0},{"startOffset":15489,"endOffset":15550,"count":0},{"startOffset":15552,"endOffset":15651,"count":0},{"startOffset":15687,"endOffset":15771,"count":0},{"startOffset":15830,"endOffset":15910,"count":0},{"startOffset":16275,"endOffset":16300,"count":0},{"startOffset":16510,"endOffset":16534,"count":0},{"startOffset":16715,"endOffset":16872,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5635,"endOffset":6213,"count":21},{"startOffset":5700,"endOffset":5709,"count":0},{"startOffset":6069,"endOffset":6131,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5769,"endOffset":6016,"count":174}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6278,"endOffset":6375,"count":50}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6439,"endOffset":6538,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6602,"endOffset":6701,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6764,"endOffset":6862,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6929,"endOffset":7030,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7124,"endOffset":7312,"count":28}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7420,"endOffset":7614,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7821,"endOffset":7902,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8027,"endOffset":8223,"count":1},{"startOffset":8098,"endOffset":8128,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8358,"endOffset":8515,"count":16},{"startOffset":8407,"endOffset":8412,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8422,"endOffset":8503,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16343,"endOffset":16448,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16560,"endOffset":16628,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16754,"endOffset":16794,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16804,"endOffset":16860,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16969,"endOffset":16984,"count":47}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16995,"endOffset":17247,"count":52},{"startOffset":17088,"endOffset":17197,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17143,"endOffset":17166,"count":2}],"isBlockCoverage":true},{"functionName":"pushPositional","ranges":[{"startOffset":17268,"endOffset":17539,"count":2},{"startOffset":17422,"endOffset":17463,"count":0}],"isBlockCoverage":true},{"functionName":"eatNargs","ranges":[{"startOffset":17548,"endOffset":19169,"count":0}],"isBlockCoverage":false},{"functionName":"eatArray","ranges":[{"startOffset":19178,"endOffset":20962,"count":1},{"startOffset":19436,"endOffset":19469,"count":0},{"startOffset":19471,"endOffset":19524,"count":0},{"startOffset":19634,"endOffset":19657,"count":0},{"startOffset":19658,"endOffset":19688,"count":0},{"startOffset":19691,"endOffset":19900,"count":0},{"startOffset":19973,"endOffset":20066,"count":0},{"startOffset":20187,"endOffset":20210,"count":0},{"startOffset":20251,"endOffset":20284,"count":0},{"startOffset":20285,"endOffset":20318,"count":0},{"startOffset":20345,"endOffset":20351,"count":0},{"startOffset":20429,"endOffset":20452,"count":0},{"startOffset":20453,"endOffset":20483,"count":0},{"startOffset":20509,"endOffset":20515,"count":0},{"startOffset":20684,"endOffset":20799,"count":0},{"startOffset":20801,"endOffset":20894,"count":0}],"isBlockCoverage":true},{"functionName":"setArg","ranges":[{"startOffset":20971,"endOffset":22834,"count":28},{"startOffset":21029,"endOffset":21069,"count":3},{"startOffset":21071,"endOffset":21268,"count":3},{"startOffset":21443,"endOffset":21648,"count":20},{"startOffset":21685,"endOffset":21717,"count":0},{"startOffset":21719,"endOffset":22196,"count":0},{"startOffset":22251,"endOffset":22289,"count":2},{"startOffset":22291,"endOffset":22824,"count":2},{"startOffset":22354,"endOffset":22359,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21122,"endOffset":21201,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21488,"endOffset":21632,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21780,"endOffset":22180,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22391,"endOffset":22808,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":22535,"endOffset":22608,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":22634,"endOffset":22766,"count":2},{"startOffset":22707,"endOffset":22731,"count":0}],"isBlockCoverage":true},{"functionName":"addNewAlias","ranges":[{"startOffset":22843,"endOffset":23188,"count":4},{"startOffset":22915,"endOffset":22943,"count":2},{"startOffset":22946,"endOffset":23049,"count":2},{"startOffset":23089,"endOffset":23119,"count":3},{"startOffset":23122,"endOffset":23178,"count":1}],"isBlockCoverage":true},{"functionName":"processValue","ranges":[{"startOffset":23197,"endOffset":24302,"count":29},{"startOffset":23271,"endOffset":23324,"count":7},{"startOffset":23325,"endOffset":23374,"count":0},{"startOffset":23376,"endOffset":23447,"count":0},{"startOffset":23498,"endOffset":23535,"count":27},{"startOffset":23537,"endOffset":23639,"count":2},{"startOffset":23604,"endOffset":23625,"count":0},{"startOffset":23699,"endOffset":23760,"count":7},{"startOffset":23777,"endOffset":23806,"count":22},{"startOffset":23859,"endOffset":23912,"count":0},{"startOffset":23914,"endOffset":23966,"count":0},{"startOffset":24021,"endOffset":24058,"count":2},{"startOffset":24060,"endOffset":24266,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23709,"endOffset":23759,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24138,"endOffset":24179,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCoerceNumber","ranges":[{"startOffset":24311,"endOffset":24955,"count":44},{"startOffset":24411,"endOffset":24425,"count":28},{"startOffset":24443,"endOffset":24456,"count":2},{"startOffset":24456,"endOffset":24510,"count":42},{"startOffset":24510,"endOffset":24547,"count":30},{"startOffset":24548,"endOffset":24572,"count":28},{"startOffset":24574,"endOffset":24919,"count":24},{"startOffset":24642,"endOffset":24675,"count":2},{"startOffset":24676,"endOffset":24737,"count":2},{"startOffset":24778,"endOffset":24841,"count":22},{"startOffset":24843,"endOffset":24905,"count":2},{"startOffset":24919,"endOffset":24954,"count":42}],"isBlockCoverage":true},{"functionName":"setConfig","ranges":[{"startOffset":24964,"endOffset":26599,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25168,"endOffset":26587,"count":1},{"startOffset":25302,"endOffset":26573,"count":0}],"isBlockCoverage":true},{"functionName":"setConfigObject","ranges":[{"startOffset":26608,"endOffset":27284,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26689,"endOffset":27272,"count":30},{"startOffset":26786,"endOffset":26804,"count":0},{"startOffset":26858,"endOffset":26875,"count":9},{"startOffset":26876,"endOffset":26900,"count":9},{"startOffset":26901,"endOffset":26933,"count":0},{"startOffset":26935,"endOffset":27007,"count":0},{"startOffset":27089,"endOffset":27167,"count":3},{"startOffset":27132,"endOffset":27166,"count":0},{"startOffset":27169,"endOffset":27240,"count":27}],"isBlockCoverage":true},{"functionName":"setConfigObjects","ranges":[{"startOffset":27293,"endOffset":27537,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27417,"endOffset":27511,"count":3}],"isBlockCoverage":true},{"functionName":"applyEnvVars","ranges":[{"startOffset":27546,"endOffset":28422,"count":6},{"startOffset":27661,"endOffset":27730,"count":0},{"startOffset":27731,"endOffset":27735,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27811,"endOffset":28410,"count":0}],"isBlockCoverage":false},{"functionName":"applyCoercions","ranges":[{"startOffset":28431,"endOffset":29278,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28564,"endOffset":29266,"count":45},{"startOffset":28620,"endOffset":29252,"count":43},{"startOffset":28744,"endOffset":29234,"count":4},{"startOffset":28919,"endOffset":28924,"count":0},{"startOffset":29132,"endOffset":29212,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28940,"endOffset":29079,"count":6}],"isBlockCoverage":true},{"functionName":"setPlaceholderKeys","ranges":[{"startOffset":29287,"endOffset":29579,"count":0}],"isBlockCoverage":false},{"functionName":"applyDefaultsAndAliases","ranges":[{"startOffset":29588,"endOffset":30205,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29705,"endOffset":30193,"count":56},{"startOffset":29772,"endOffset":30179,"count":17},{"startOffset":29894,"endOffset":29916,"count":1},{"startOffset":29951,"endOffset":29956,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29966,"endOffset":30159,"count":12},{"startOffset":30064,"endOffset":30071,"count":0}],"isBlockCoverage":true},{"functionName":"hasKey","ranges":[{"startOffset":30214,"endOffset":30639,"count":98},{"startOffset":30566,"endOffset":30579,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30395,"endOffset":30461,"count":0}],"isBlockCoverage":false},{"functionName":"setKey","ranges":[{"startOffset":30648,"endOffset":33097,"count":70},{"startOffset":31747,"endOffset":31783,"count":0},{"startOffset":31785,"endOffset":32029,"count":0},{"startOffset":32069,"endOffset":32128,"count":0},{"startOffset":32173,"endOffset":32667,"count":0},{"startOffset":32726,"endOffset":32798,"count":16},{"startOffset":32774,"endOffset":32783,"count":0},{"startOffset":32798,"endOffset":33087,"count":54},{"startOffset":32856,"endOffset":32909,"count":0},{"startOffset":32910,"endOffset":32962,"count":0},{"startOffset":32965,"endOffset":33022,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30836,"endOffset":31451,"count":0}],"isBlockCoverage":false},{"functionName":"extendAliases","ranges":[{"startOffset":33106,"endOffset":34699,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33165,"endOffset":34687,"count":12},{"startOffset":33214,"endOffset":33219,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33229,"endOffset":34671,"count":173},{"startOffset":33314,"endOffset":33321,"count":83},{"startOffset":33321,"endOffset":33386,"count":90},{"startOffset":33386,"endOffset":33391,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33453,"endOffset":33880,"count":142},{"startOffset":33508,"endOffset":33548,"count":34},{"startOffset":33550,"endOffset":33858,"count":34}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33942,"endOffset":34395,"count":176},{"startOffset":33998,"endOffset":34016,"count":134},{"startOffset":34017,"endOffset":34057,"count":34},{"startOffset":34059,"endOffset":34373,"count":34},{"startOffset":34161,"endOffset":34200,"count":2},{"startOffset":34202,"endOffset":34347,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34445,"endOffset":34651,"count":86}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34542,"endOffset":34626,"count":130}],"isBlockCoverage":true},{"functionName":"checkAllAliases","ranges":[{"startOffset":34708,"endOffset":34993,"count":359},{"startOffset":34803,"endOffset":34808,"count":90},{"startOffset":34958,"endOffset":34974,"count":41},{"startOffset":34975,"endOffset":34982,"count":318}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34902,"endOffset":34927,"count":538}],"isBlockCoverage":true},{"functionName":"hasAnyFlag","ranges":[{"startOffset":35002,"endOffset":35300,"count":0}],"isBlockCoverage":false},{"functionName":"hasFlagsMatching","ranges":[{"startOffset":35309,"endOffset":35589,"count":0}],"isBlockCoverage":false},{"functionName":"hasAllShortFlags","ranges":[{"startOffset":35598,"endOffset":36444,"count":0}],"isBlockCoverage":false},{"functionName":"isUnknownOptionAsArg","ranges":[{"startOffset":36453,"endOffset":36584,"count":3},{"startOffset":36550,"endOffset":36573,"count":0}],"isBlockCoverage":true},{"functionName":"isUnknownOption","ranges":[{"startOffset":36593,"endOffset":37298,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":37307,"endOffset":37634,"count":0}],"isBlockCoverage":false},{"functionName":"defaultForType","ranges":[{"startOffset":37643,"endOffset":37979,"count":0}],"isBlockCoverage":false},{"functionName":"guessType","ranges":[{"startOffset":37988,"endOffset":38548,"count":0}],"isBlockCoverage":false},{"functionName":"isUndefined","ranges":[{"startOffset":38557,"endOffset":38632,"count":25}],"isBlockCoverage":true},{"functionName":"checkConfiguration","ranges":[{"startOffset":38641,"endOffset":39213,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38716,"endOffset":39201,"count":0}],"isBlockCoverage":false},{"functionName":"combineAliases","ranges":[{"startOffset":39531,"endOffset":40733,"count":3},{"startOffset":39871,"endOffset":40359,"count":47},{"startOffset":39937,"endOffset":40349,"count":485},{"startOffset":40130,"endOffset":40335,"count":0},{"startOffset":40349,"endOffset":40359,"count":485},{"startOffset":40359,"endOffset":40365,"count":47}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39692,"endOffset":39770,"count":47}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39995,"endOffset":40089,"count":1023}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40390,"endOffset":40708,"count":47}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40453,"endOffset":40528,"count":99}],"isBlockCoverage":true},{"functionName":"increment","ranges":[{"startOffset":40734,"endOffset":40808,"count":70},{"startOffset":40791,"endOffset":40801,"count":0}],"isBlockCoverage":true},{"functionName":"sanitizeKey","ranges":[{"startOffset":40809,"endOffset":40913,"count":70},{"startOffset":40874,"endOffset":40895,"count":0}],"isBlockCoverage":true},{"functionName":"env","ranges":[{"startOffset":41495,"endOffset":41528,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":41626,"endOffset":41933,"count":0}],"isBlockCoverage":false},{"functionName":"Parser","ranges":[{"startOffset":41958,"endOffset":42066,"count":0}],"isBlockCoverage":false},{"functionName":"yargsParser.detailed","ranges":[{"startOffset":42091,"endOffset":42161,"count":3}],"isBlockCoverage":true}]},{"scriptId":"257","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/yargs/node_modules/cliui/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9953,"count":1}],"isBlockCoverage":true},{"functionName":"UI","ranges":[{"startOffset":162,"endOffset":336,"count":1},{"startOffset":299,"endOffset":305,"count":0}],"isBlockCoverage":true},{"functionName":"span","ranges":[{"startOffset":341,"endOffset":428,"count":43}],"isBlockCoverage":true},{"functionName":"resetOutput","ranges":[{"startOffset":433,"endOffset":478,"count":0}],"isBlockCoverage":false},{"functionName":"div","ranges":[{"startOffset":483,"endOffset":956,"count":111},{"startOffset":529,"endOffset":566,"count":8},{"startOffset":627,"endOffset":657,"count":0},{"startOffset":659,"endOffset":719,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":750,"endOffset":897,"count":146},{"startOffset":800,"endOffset":863,"count":59},{"startOffset":863,"endOffset":896,"count":87}],"isBlockCoverage":true},{"functionName":"shouldApplyLayoutDSL","ranges":[{"startOffset":961,"endOffset":1101,"count":111},{"startOffset":1026,"endOffset":1056,"count":60},{"startOffset":1057,"endOffset":1094,"count":16}],"isBlockCoverage":true},{"functionName":"applyLayoutDSL","ranges":[{"startOffset":1106,"endOffset":2204,"count":0}],"isBlockCoverage":false},{"functionName":"colFromString","ranges":[{"startOffset":2209,"endOffset":2329,"count":59}],"isBlockCoverage":true},{"functionName":"measurePadding","ranges":[{"startOffset":2334,"endOffset":2546,"count":59}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":2551,"endOffset":2880,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2616,"endOffset":2676,"count":111}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2792,"endOffset":2812,"count":110}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2831,"endOffset":2848,"count":76}],"isBlockCoverage":true},{"functionName":"rowToString","ranges":[{"startOffset":2885,"endOffset":4770,"count":111}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2947,"endOffset":4740,"count":110}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3013,"endOffset":4567,"count":159},{"startOffset":3325,"endOffset":3418,"count":153},{"startOffset":3507,"endOffset":3533,"count":43},{"startOffset":3534,"endOffset":3546,"count":43},{"startOffset":3548,"endOffset":3830,"count":43},{"startOffset":3705,"endOffset":3812,"count":0},{"startOffset":3933,"endOffset":3948,"count":0},{"startOffset":3985,"endOffset":4058,"count":92},{"startOffset":4226,"endOffset":4300,"count":49},{"startOffset":4438,"endOffset":4457,"count":146},{"startOffset":4459,"endOffset":4553,"count":145}],"isBlockCoverage":true},{"functionName":"renderInline","ranges":[{"startOffset":4848,"endOffset":5613,"count":145},{"startOffset":4986,"endOffset":4989,"count":0},{"startOffset":5136,"endOffset":5174,"count":102},{"startOffset":5174,"endOffset":5291,"count":43},{"startOffset":5291,"endOffset":5378,"count":0},{"startOffset":5378,"endOffset":5428,"count":43},{"startOffset":5428,"endOffset":5466,"count":9},{"startOffset":5466,"endOffset":5612,"count":34}],"isBlockCoverage":true},{"functionName":"rasterize","ranges":[{"startOffset":5618,"endOffset":7065,"count":111}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5849,"endOffset":7035,"count":146},{"startOffset":6095,"endOffset":6176,"count":0},{"startOffset":6205,"endOffset":6389,"count":0},{"startOffset":6526,"endOffset":6530,"count":145}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6664,"endOffset":7023,"count":154},{"startOffset":6709,"endOffset":6764,"count":110},{"startOffset":6848,"endOffset":6977,"count":49},{"startOffset":6897,"endOffset":6959,"count":5}],"isBlockCoverage":true},{"functionName":"negatePadding","ranges":[{"startOffset":7070,"endOffset":7342,"count":305},{"startOffset":7125,"endOffset":7129,"count":0},{"startOffset":7202,"endOffset":7206,"count":127},{"startOffset":7230,"endOffset":7234,"count":213},{"startOffset":7271,"endOffset":7310,"count":0}],"isBlockCoverage":true},{"functionName":"columnWidths","ranges":[{"startOffset":7347,"endOffset":8184,"count":111},{"startOffset":7391,"endOffset":7519,"count":0},{"startOffset":7952,"endOffset":7988,"count":103},{"startOffset":7989,"endOffset":7992,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7420,"endOffset":7507,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7671,"endOffset":7866,"count":146},{"startOffset":7707,"endOffset":7826,"count":43},{"startOffset":7826,"endOffset":7865,"count":103}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8020,"endOffset":8176,"count":146},{"startOffset":8065,"endOffset":8144,"count":103},{"startOffset":8144,"endOffset":8175,"count":43}],"isBlockCoverage":true},{"functionName":"addBorder","ranges":[{"startOffset":8187,"endOffset":8433,"count":318},{"startOffset":8244,"endOffset":8416,"count":0}],"isBlockCoverage":true},{"functionName":"_minWidth","ranges":[{"startOffset":8512,"endOffset":8727,"count":103},{"startOffset":8570,"endOffset":8575,"count":0},{"startOffset":8617,"endOffset":8621,"count":60},{"startOffset":8668,"endOffset":8704,"count":0}],"isBlockCoverage":true},{"functionName":"getWindowWidth","ranges":[{"startOffset":8728,"endOffset":8952,"count":0}],"isBlockCoverage":false},{"functionName":"alignRight","ranges":[{"startOffset":8953,"endOffset":9156,"count":43},{"startOffset":9138,"endOffset":9155,"count":0}],"isBlockCoverage":true},{"functionName":"alignCenter","ranges":[{"startOffset":9157,"endOffset":9400,"count":0}],"isBlockCoverage":false},{"functionName":"cliui","ranges":[{"startOffset":9412,"endOffset":9653,"count":1},{"startOffset":9532,"endOffset":9540,"count":0},{"startOffset":9555,"endOffset":9574,"count":0},{"startOffset":9623,"endOffset":9631,"count":0}],"isBlockCoverage":true},{"functionName":"ui","ranges":[{"startOffset":9823,"endOffset":9930,"count":1}],"isBlockCoverage":true}]},{"scriptId":"258","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/string-width/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":923,"count":1}],"isBlockCoverage":true},{"functionName":"stringWidth","ranges":[{"startOffset":184,"endOffset":805,"count":1964},{"startOffset":252,"endOffset":268,"count":180},{"startOffset":268,"endOffset":326,"count":1784},{"startOffset":326,"endOffset":342,"count":0},{"startOffset":342,"endOffset":449,"count":1784},{"startOffset":449,"endOffset":787,"count":32615},{"startOffset":557,"endOffset":572,"count":0},{"startOffset":575,"endOffset":593,"count":0},{"startOffset":648,"endOffset":664,"count":0},{"startOffset":666,"endOffset":684,"count":0},{"startOffset":723,"endOffset":736,"count":0},{"startOffset":776,"endOffset":779,"count":0},{"startOffset":787,"endOffset":804,"count":1784}],"isBlockCoverage":true}]},{"scriptId":"259","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":154,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":152,"count":1843},{"startOffset":144,"endOffset":152,"count":0}],"isBlockCoverage":true}]},{"scriptId":"260","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/ansi-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":350,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":348,"count":1843},{"startOffset":327,"endOffset":338,"count":0}],"isBlockCoverage":true}]},{"scriptId":"261","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/is-fullwidth-code-point/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1756,"count":1}],"isBlockCoverage":true},{"functionName":"isFullwidthCodePoint","ranges":[{"startOffset":70,"endOffset":1667,"count":32615},{"startOffset":115,"endOffset":135,"count":0},{"startOffset":257,"endOffset":1626,"count":0},{"startOffset":1630,"endOffset":1649,"count":0}],"isBlockCoverage":true}]},{"scriptId":"262","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/emoji-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10286,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":10284,"count":1784}],"isBlockCoverage":true}]},{"scriptId":"263","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/wrap-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5772,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi","ranges":[{"startOffset":391,"endOffset":473,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsiHyperlink","ranges":[{"startOffset":501,"endOffset":586,"count":0}],"isBlockCoverage":false},{"functionName":"wordLengths","ranges":[{"startOffset":716,"endOffset":784,"count":138}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":748,"endOffset":783,"count":414}],"isBlockCoverage":true},{"functionName":"wrapWord","ranges":[{"startOffset":894,"endOffset":2106,"count":0}],"isBlockCoverage":false},{"functionName":"stringVisibleTrimSpacesRight","ranges":[{"startOffset":2205,"endOffset":2490,"count":145},{"startOffset":2296,"endOffset":2367,"count":152},{"startOffset":2338,"endOffset":2353,"count":145},{"startOffset":2353,"endOffset":2367,"count":7},{"startOffset":2397,"endOffset":2418,"count":138},{"startOffset":2418,"endOffset":2489,"count":7}],"isBlockCoverage":true},{"functionName":"exec","ranges":[{"startOffset":2725,"endOffset":5528,"count":146},{"startOffset":2815,"endOffset":2832,"count":8},{"startOffset":2832,"endOffset":3006,"count":138},{"startOffset":3006,"endOffset":4427,"count":414},{"startOffset":3181,"endOffset":3535,"count":276},{"startOffset":3211,"endOffset":3268,"count":0},{"startOffset":3270,"endOffset":3424,"count":0},{"startOffset":3447,"endOffset":3472,"count":0},{"startOffset":3674,"endOffset":4039,"count":0},{"startOffset":4084,"endOffset":4100,"count":7},{"startOffset":4101,"endOffset":4122,"count":7},{"startOffset":4124,"endOffset":4262,"count":7},{"startOffset":4160,"endOffset":4182,"count":0},{"startOffset":4184,"endOffset":4239,"count":0},{"startOffset":4307,"endOffset":4336,"count":7},{"startOffset":4338,"endOffset":4390,"count":0},{"startOffset":4427,"endOffset":4598,"count":138},{"startOffset":4598,"endOffset":5504,"count":2882},{"startOffset":4659,"endOffset":5083,"count":0},{"startOffset":5174,"endOffset":5316,"count":7},{"startOffset":5194,"endOffset":5242,"count":0},{"startOffset":5262,"endOffset":5269,"count":0},{"startOffset":5271,"endOffset":5312,"count":0},{"startOffset":5316,"endOffset":5501,"count":2875},{"startOffset":5346,"endOffset":5501,"count":7},{"startOffset":5366,"endOffset":5373,"count":0},{"startOffset":5375,"endOffset":5422,"count":0},{"startOffset":5442,"endOffset":5497,"count":0},{"startOffset":5504,"endOffset":5527,"count":138}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":5598,"endOffset":5770,"count":146}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5716,"endOffset":5752,"count":146}],"isBlockCoverage":true}]},{"scriptId":"264","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/escalade/sync/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":416,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":113,"endOffset":415,"count":1},{"startOffset":235,"endOffset":261,"count":0},{"startOffset":277,"endOffset":413,"count":2},{"startOffset":331,"endOffset":404,"count":1},{"startOffset":404,"endOffset":410,"count":0}],"isBlockCoverage":true}]},{"scriptId":"265","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/get-caller-file/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1108,"count":1}],"isBlockCoverage":true},{"functionName":"getCallerFile","ranges":[{"startOffset":233,"endOffset":1073,"count":0}],"isBlockCoverage":false}]},{"scriptId":"266","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/require-directory/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2867,"count":1}],"isBlockCoverage":true},{"functionName":"rename","ranges":[{"startOffset":238,"endOffset":280,"count":0}],"isBlockCoverage":false},{"functionName":"visit","ranges":[{"startOffset":293,"endOffset":333,"count":0}],"isBlockCoverage":false},{"functionName":"checkFileInclusion","ranges":[{"startOffset":340,"endOffset":1270,"count":0}],"isBlockCoverage":false},{"functionName":"requireDirectory","ranges":[{"startOffset":1272,"endOffset":2788,"count":0}],"isBlockCoverage":false}]},{"scriptId":"267","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/cli/commands.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":225,"count":1}],"isBlockCoverage":true}]},{"scriptId":"268","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/cli/init.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":958,"count":1}],"isBlockCoverage":true},{"functionName":"exports.builder","ranges":[{"startOffset":265,"endOffset":347,"count":0}],"isBlockCoverage":false},{"functionName":"exports.handler","ranges":[{"startOffset":368,"endOffset":956,"count":0}],"isBlockCoverage":false}]},{"scriptId":"269","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/cli/run.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10845,"count":1}],"isBlockCoverage":true},{"functionName":"exports.builder","ranges":[{"startOffset":1004,"endOffset":10591,"count":1}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":3546,"endOffset":3578,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":5551,"endOffset":6040,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7697,"endOffset":9836,"count":1},{"startOffset":8021,"endOffset":8060,"count":0},{"startOffset":8062,"endOffset":8255,"count":0},{"startOffset":8282,"endOffset":9334,"count":0},{"startOffset":9362,"endOffset":9584,"count":0},{"startOffset":9607,"endOffset":9810,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7808,"endOffset":7933,"count":2},{"startOffset":7840,"endOffset":7925,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9854,"endOffset":10466,"count":1},{"startOffset":10279,"endOffset":10460,"count":0}],"isBlockCoverage":true},{"functionName":"exports.handler","ranges":[{"startOffset":10612,"endOffset":10843,"count":1},{"startOffset":10751,"endOffset":10841,"count":0}],"isBlockCoverage":true}]},{"scriptId":"270","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mocha/lib/interfaces/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4803,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":551,"endOffset":4801,"count":1}],"isBlockCoverage":true},{"functionName":"shouldBeTested","ranges":[{"startOffset":729,"endOffset":928,"count":0}],"isBlockCoverage":false},{"functionName":"runWithSuite","ranges":[{"startOffset":1196,"endOffset":1292,"count":0}],"isBlockCoverage":false},{"functionName":"before","ranges":[{"startOffset":1423,"endOffset":1487,"count":0}],"isBlockCoverage":false},{"functionName":"after","ranges":[{"startOffset":1616,"endOffset":1679,"count":1}],"isBlockCoverage":true},{"functionName":"beforeEach","ranges":[{"startOffset":1815,"endOffset":1880,"count":1}],"isBlockCoverage":true},{"functionName":"afterEach","ranges":[{"startOffset":2014,"endOffset":2078,"count":1}],"isBlockCoverage":true},{"functionName":"only","ranges":[{"startOffset":2291,"endOffset":2488,"count":0}],"isBlockCoverage":false},{"functionName":"skip","ranges":[{"startOffset":2690,"endOffset":2782,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":3235,"endOffset":4269,"count":7},{"startOffset":3451,"endOffset":3490,"count":0},{"startOffset":3528,"endOffset":3568,"count":0},{"startOffset":3569,"endOffset":3603,"count":0},{"startOffset":3614,"endOffset":3691,"count":0},{"startOffset":3803,"endOffset":4238,"count":0}],"isBlockCoverage":true},{"functionName":"only","ranges":[{"startOffset":4446,"endOffset":4630,"count":0}],"isBlockCoverage":false},{"functionName":"skip","ranges":[{"startOffset":4733,"endOffset":4788,"count":0}],"isBlockCoverage":false}]},{"scriptId":"271","url":"node:internal/process/esm_loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1145,"count":1}],"isBlockCoverage":false},{"functionName":"get esmLoader","ranges":[{"startOffset":344,"endOffset":414,"count":1}],"isBlockCoverage":true},{"functionName":"loadESM","ranges":[{"startOffset":419,"endOffset":1138,"count":0}],"isBlockCoverage":false}]},{"scriptId":"272","url":"node:internal/modules/esm/loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22408,"count":1}],"isBlockCoverage":false},{"functionName":"newResolveCache","ranges":[{"startOffset":944,"endOffset":1077,"count":1}],"isBlockCoverage":true},{"functionName":"newLoadCache","ranges":[{"startOffset":1239,"endOffset":1363,"count":1}],"isBlockCoverage":true},{"functionName":"getTranslators","ranges":[{"startOffset":1531,"endOffset":1656,"count":29}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2370,"endOffset":15579,"count":1}],"isBlockCoverage":false},{"functionName":"ModuleLoader","ranges":[{"startOffset":3590,"endOffset":3788,"count":1},{"startOffset":3679,"endOffset":3738,"count":0}],"isBlockCoverage":true},{"functionName":"setCustomizations","ranges":[{"startOffset":5378,"endOffset":5629,"count":1},{"startOffset":5483,"endOffset":5567,"count":0}],"isBlockCoverage":true},{"functionName":"eval","ranges":[{"startOffset":5635,"endOffset":6666,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJob","ranges":[{"startOffset":7416,"endOffset":7654,"count":35}],"isBlockCoverage":true},{"functionName":"getModuleJobSync","ranges":[{"startOffset":7660,"endOffset":7900,"count":0}],"isBlockCoverage":false},{"functionName":"getJobFromResolveResult","ranges":[{"startOffset":7906,"endOffset":8505,"count":35},{"startOffset":8286,"endOffset":8350,"count":0},{"startOffset":8381,"endOffset":8481,"count":28}],"isBlockCoverage":true},{"functionName":"#createModuleJob","ranges":[{"startOffset":9156,"endOffset":10387,"count":28},{"startOffset":9661,"endOffset":9738,"count":0},{"startOffset":9885,"endOffset":9926,"count":0},{"startOffset":9984,"endOffset":9999,"count":0},{"startOffset":10001,"endOffset":10057,"count":0}],"isBlockCoverage":true},{"functionName":"callTranslator","ranges":[{"startOffset":9251,"endOffset":9573,"count":28},{"startOffset":9398,"endOffset":9480,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9670,"endOffset":9738,"count":0}],"isBlockCoverage":false},{"functionName":"moduleProvider","ranges":[{"startOffset":9748,"endOffset":9824,"count":28}],"isBlockCoverage":true},{"functionName":"import","ranges":[{"startOffset":10860,"endOffset":11089,"count":1}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":11160,"endOffset":11692,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":12162,"endOffset":12760,"count":35},{"startOffset":12251,"endOffset":12351,"count":0},{"startOffset":12550,"endOffset":12586,"count":0}],"isBlockCoverage":true},{"functionName":"resolveSync","ranges":[{"startOffset":12924,"endOffset":13207,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":13426,"endOffset":13777,"count":35}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":14069,"endOffset":14380,"count":28},{"startOffset":14208,"endOffset":14263,"count":0}],"isBlockCoverage":true},{"functionName":"loadSync","ranges":[{"startOffset":14386,"endOffset":14933,"count":0}],"isBlockCoverage":false},{"functionName":"validateLoadResult","ranges":[{"startOffset":14939,"endOffset":15094,"count":28},{"startOffset":14998,"endOffset":15089,"count":0}],"isBlockCoverage":true},{"functionName":"importMetaInitialize","ranges":[{"startOffset":15100,"endOffset":15442,"count":0}],"isBlockCoverage":false},{"functionName":"forceLoadHooks","ranges":[{"startOffset":15508,"endOffset":15576,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":15636,"endOffset":18210,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleLoader","ranges":[{"startOffset":18603,"endOffset":20297,"count":1},{"startOffset":19055,"endOffset":20243,"count":0}],"isBlockCoverage":true},{"functionName":"readableURIEncode","ranges":[{"startOffset":19132,"endOffset":19634,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19958,"endOffset":20046,"count":0}],"isBlockCoverage":false},{"functionName":"getHooksProxy","ranges":[{"startOffset":20417,"endOffset":20600,"count":0}],"isBlockCoverage":false},{"functionName":"register","ranges":[{"startOffset":21915,"endOffset":22326,"count":0}],"isBlockCoverage":false}]},{"scriptId":"273","url":"node:internal/modules/esm/module_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3999,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":292,"endOffset":319,"count":1}],"isBlockCoverage":true},{"functionName":"ResolveCache","ranges":[{"startOffset":875,"endOffset":903,"count":1}],"isBlockCoverage":true},{"functionName":"serializeKey","ranges":[{"startOffset":1259,"endOffset":1887,"count":35},{"startOffset":1677,"endOffset":1886,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1801,"endOffset":1867,"count":0}],"isBlockCoverage":false},{"functionName":"#getModuleCachedImports","ranges":[{"startOffset":1893,"endOffset":2115,"count":70},{"startOffset":2009,"endOffset":2083,"count":14}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2297,"endOffset":2401,"count":35}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2548,"endOffset":2680,"count":35}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":2686,"endOffset":2792,"count":0}],"isBlockCoverage":false},{"functionName":"LoadCache","ranges":[{"startOffset":2933,"endOffset":2961,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3011,"endOffset":3158,"count":35},{"startOffset":3144,"endOffset":3152,"count":7}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3162,"endOffset":3772,"count":28},{"startOffset":3386,"endOffset":3423,"count":0},{"startOffset":3425,"endOffset":3497,"count":0},{"startOffset":3583,"endOffset":3589,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":3776,"endOffset":3937,"count":0}],"isBlockCoverage":false}]},{"scriptId":"274","url":"node:internal/modules/esm/assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3993,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1369,"endOffset":1407,"count":5}],"isBlockCoverage":true},{"functionName":"validateAttributes","ranges":[{"startOffset":1840,"endOffset":3252,"count":28},{"startOffset":2039,"endOffset":2170,"count":0},{"startOffset":2246,"endOffset":2394,"count":0},{"startOffset":2666,"endOffset":2727,"count":0},{"startOffset":2735,"endOffset":2845,"count":0},{"startOffset":2853,"endOffset":3244,"count":0}],"isBlockCoverage":true},{"functionName":"handleInvalidType","ranges":[{"startOffset":3491,"endOffset":3916,"count":0}],"isBlockCoverage":false}]},{"scriptId":"275","url":"node:internal/modules/esm/translators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20775,"count":1}],"isBlockCoverage":false},{"functionName":"lazyTypes","ranges":[{"startOffset":538,"endOffset":657,"count":30},{"startOffset":585,"endOffset":603,"count":29},{"startOffset":603,"endOffset":656,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1268,"endOffset":1295,"count":1}],"isBlockCoverage":true},{"functionName":"getSource","ranges":[{"startOffset":2159,"endOffset":2290,"count":0}],"isBlockCoverage":false},{"functionName":"initCJSParse","ranges":[{"startOffset":2595,"endOffset":3006,"count":3},{"startOffset":2670,"endOffset":2747,"count":0},{"startOffset":2911,"endOffset":2998,"count":0}],"isBlockCoverage":true},{"functionName":"assertBufferSource","ranges":[{"startOffset":3635,"endOffset":4070,"count":30},{"startOffset":3713,"endOffset":3740,"count":15},{"startOffset":3742,"endOffset":3761,"count":0},{"startOffset":3857,"endOffset":3882,"count":0},{"startOffset":3903,"endOffset":3984,"count":0},{"startOffset":3985,"endOffset":3989,"count":0}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":4301,"endOffset":4574,"count":28},{"startOffset":4361,"endOffset":4377,"count":13},{"startOffset":4377,"endOffset":4509,"count":15},{"startOffset":4509,"endOffset":4528,"count":1},{"startOffset":4529,"endOffset":4538,"count":14}],"isBlockCoverage":true},{"functionName":"errPath","ranges":[{"startOffset":4700,"endOffset":4851,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":5337,"endOffset":5477,"count":0}],"isBlockCoverage":false},{"functionName":"moduleStrategy","ranges":[{"startOffset":5562,"endOffset":6236,"count":15},{"startOffset":5884,"endOffset":5974,"count":0}],"isBlockCoverage":true},{"functionName":"initializeImportMeta","ranges":[{"startOffset":6121,"endOffset":6177,"count":0}],"isBlockCoverage":false},{"functionName":"enrichCJSError","ranges":[{"startOffset":6469,"endOffset":7002,"count":0}],"isBlockCoverage":false},{"functionName":"loadCJSModule","ranges":[{"startOffset":7606,"endOffset":10595,"count":0}],"isBlockCoverage":false},{"functionName":"createCJSModuleWrap","ranges":[{"startOffset":11091,"endOffset":12608,"count":13},{"startOffset":11295,"endOffset":11300,"count":0},{"startOffset":11415,"endOffset":11448,"count":0},{"startOffset":11617,"endOffset":11640,"count":2},{"startOffset":11641,"endOffset":11670,"count":11},{"startOffset":11689,"endOffset":11747,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11809,"endOffset":12601,"count":13},{"startOffset":11889,"endOffset":11944,"count":12},{"startOffset":12096,"endOffset":12141,"count":0},{"startOffset":12185,"endOffset":12555,"count":48},{"startOffset":12290,"endOffset":12319,"count":2},{"startOffset":12319,"endOffset":12448,"count":46},{"startOffset":12448,"endOffset":12506,"count":0},{"startOffset":12506,"endOffset":12555,"count":46}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12772,"endOffset":12868,"count":0}],"isBlockCoverage":false},{"functionName":"commonjsStrategy","ranges":[{"startOffset":13060,"endOffset":13975,"count":13},{"startOffset":13194,"endOffset":13227,"count":3},{"startOffset":13712,"endOffset":13727,"count":0},{"startOffset":13857,"endOffset":13907,"count":0}],"isBlockCoverage":true},{"functionName":"cjsLoader","ranges":[{"startOffset":13479,"endOffset":13711,"count":12},{"startOffset":13622,"endOffset":13706,"count":0}],"isBlockCoverage":true},{"functionName":"cjsPreparseModuleExports","ranges":[{"startOffset":14171,"endOffset":16735,"count":16},{"startOffset":14357,"endOffset":14495,"count":0},{"startOffset":14814,"endOffset":14819,"count":0},{"startOffset":14828,"endOffset":14880,"count":0},{"startOffset":15063,"endOffset":16695,"count":3},{"startOffset":15940,"endOffset":15975,"count":0},{"startOffset":16195,"endOffset":16212,"count":0},{"startOffset":16213,"endOffset":16243,"count":0},{"startOffset":16628,"endOffset":16674,"count":13}],"isBlockCoverage":true},{"functionName":"builtinStrategy","ranges":[{"startOffset":16863,"endOffset":17280,"count":0}],"isBlockCoverage":false},{"functionName":"jsonStrategy","ranges":[{"startOffset":17396,"endOffset":19728,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19797,"endOffset":20771,"count":0}],"isBlockCoverage":false}]},{"scriptId":"276","url":"node:internal/modules/esm/module_job","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9202,"count":1}],"isBlockCoverage":false},{"functionName":"isCommonJSGlobalLikeNotDefinedError","ranges":[{"startOffset":1041,"endOffset":1176,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleJob","ranges":[{"startOffset":1421,"endOffset":3480,"count":28},{"startOffset":1960,"endOffset":2066,"count":0}],"isBlockCoverage":true},{"functionName":"link","ranges":[{"startOffset":2242,"endOffset":3087,"count":28}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2707,"endOffset":2916,"count":34}],"isBlockCoverage":true},{"functionName":"instantiate","ranges":[{"startOffset":3486,"endOffset":3636,"count":1}],"isBlockCoverage":true},{"functionName":"_instantiate","ranges":[{"startOffset":3642,"endOffset":7379,"count":1},{"startOffset":4115,"endOffset":4296,"count":0},{"startOffset":4356,"endOffset":7125,"count":0},{"startOffset":7174,"endOffset":7374,"count":28}],"isBlockCoverage":true},{"functionName":"addJobsToDependencyGraph","ranges":[{"startOffset":3743,"endOffset":4010,"count":35},{"startOffset":3805,"endOffset":3832,"count":7},{"startOffset":3832,"endOffset":4009,"count":28}],"isBlockCoverage":true},{"functionName":"runSync","ranges":[{"startOffset":7385,"endOffset":7835,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":7841,"endOffset":9118,"count":1},{"startOffset":8060,"endOffset":9059,"count":0}],"isBlockCoverage":true}]},{"scriptId":"277","url":"node:internal/modules/esm/load","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7875,"count":1}],"isBlockCoverage":false},{"functionName":"getSource","ranges":[{"startOffset":1275,"endOffset":2535,"count":15},{"startOffset":1550,"endOffset":2396,"count":0},{"startOffset":2410,"endOffset":2420,"count":0},{"startOffset":2422,"endOffset":2480,"count":0}],"isBlockCoverage":true},{"functionName":"getSourceSync","ranges":[{"startOffset":2725,"endOffset":3485,"count":0}],"isBlockCoverage":false},{"functionName":"defaultLoad","ranges":[{"startOffset":3615,"endOffset":5074,"count":28},{"startOffset":3807,"endOffset":3842,"count":0},{"startOffset":3843,"endOffset":3875,"count":0},{"startOffset":3877,"endOffset":4092,"count":0},{"startOffset":4250,"endOffset":4303,"count":0},{"startOffset":4335,"endOffset":4362,"count":13},{"startOffset":4364,"endOffset":4929,"count":15},{"startOffset":4550,"endOffset":4924,"count":0}],"isBlockCoverage":true},{"functionName":"defaultLoadSync","ranges":[{"startOffset":5607,"endOffset":6276,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfUnsupportedURLScheme","ranges":[{"startOffset":6473,"endOffset":7127,"count":28},{"startOffset":6708,"endOffset":6736,"count":0},{"startOffset":6737,"endOffset":6765,"count":0},{"startOffset":6766,"endOffset":6902,"count":0},{"startOffset":6908,"endOffset":7124,"count":0}],"isBlockCoverage":true},{"functionName":"throwUnknownModuleFormat","ranges":[{"startOffset":7515,"endOffset":7762,"count":0}],"isBlockCoverage":false}]},{"scriptId":"278","url":"node:internal/fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32269,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCpPromises","ranges":[{"startOffset":3282,"endOffset":3376,"count":0}],"isBlockCoverage":false},{"functionName":"lazyFsStreams","ranges":[{"startOffset":3442,"endOffset":3527,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3558,"endOffset":3608,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3614,"endOffset":10002,"count":15}],"isBlockCoverage":false},{"functionName":"FileHandle","ranges":[{"startOffset":3759,"endOffset":3943,"count":15},{"startOffset":3876,"endOffset":3880,"count":0}],"isBlockCoverage":true},{"functionName":"getAsyncId","ranges":[{"startOffset":3949,"endOffset":4008,"count":0}],"isBlockCoverage":false},{"functionName":"get fd","ranges":[{"startOffset":4014,"endOffset":4052,"count":32}],"isBlockCoverage":true},{"functionName":"appendFile","ranges":[{"startOffset":4058,"endOffset":4142,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":4148,"endOffset":4206,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":4212,"endOffset":4278,"count":0}],"isBlockCoverage":false},{"functionName":"datasync","ranges":[{"startOffset":4284,"endOffset":4338,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":4344,"endOffset":4390,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":4396,"endOffset":4507,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":4513,"endOffset":4596,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":4602,"endOffset":4671,"count":0}],"isBlockCoverage":false},{"functionName":"readLines","ranges":[{"startOffset":4677,"endOffset":4825,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":4831,"endOffset":4893,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":4899,"endOffset":4965,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":4971,"endOffset":5047,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":5053,"endOffset":5166,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":5172,"endOffset":5257,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":5263,"endOffset":5346,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":5360,"endOffset":6183,"count":15},{"startOffset":5395,"endOffset":5435,"count":0},{"startOffset":5468,"endOffset":5511,"count":0},{"startOffset":5746,"endOffset":6118,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5686,"endOffset":5728,"count":15}],"isBlockCoverage":true},{"functionName":"<computed>.SafePromisePrototypeFinally.<computed>","ranges":[{"startOffset":5833,"endOffset":5948,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5951,"endOffset":6100,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6190,"endOffset":6251,"count":0}],"isBlockCoverage":false},{"functionName":"readableWebStream","ranges":[{"startOffset":6456,"endOffset":8204,"count":0}],"isBlockCoverage":false},{"functionName":"createReadStream","ranges":[{"startOffset":8517,"endOffset":8671,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteStream","ranges":[{"startOffset":8990,"endOffset":9147,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9153,"endOffset":9568,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9574,"endOffset":9629,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9635,"endOffset":9725,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9731,"endOffset":9766,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9772,"endOffset":9999,"count":0}],"isBlockCoverage":false},{"functionName":"handleFdClose","ranges":[{"startOffset":10006,"endOffset":10388,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10120,"endOffset":10179,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10166,"endOffset":10178,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10186,"endOffset":10378,"count":0}],"isBlockCoverage":false},{"functionName":"handleFdSync","ranges":[{"startOffset":10392,"endOffset":10685,"count":0}],"isBlockCoverage":false},{"functionName":"fsCall","ranges":[{"startOffset":10689,"endOffset":11167,"count":0}],"isBlockCoverage":false},{"functionName":"checkAborted","ranges":[{"startOffset":11171,"endOffset":11294,"count":62},{"startOffset":11216,"endOffset":11225,"count":0},{"startOffset":11232,"endOffset":11291,"count":0}],"isBlockCoverage":true},{"functionName":"writeFileHandle","ranges":[{"startOffset":11298,"endOffset":12473,"count":0}],"isBlockCoverage":false},{"functionName":"readFileHandle","ranges":[{"startOffset":12477,"endOffset":14695,"count":15},{"startOffset":12632,"endOffset":12662,"count":0},{"startOffset":12954,"endOffset":12992,"count":0},{"startOffset":13027,"endOffset":13077,"count":0},{"startOffset":13113,"endOffset":13151,"count":0},{"startOffset":13352,"endOffset":14692,"count":17},{"startOffset":13405,"endOffset":13479,"count":3},{"startOffset":13626,"endOffset":13630,"count":0},{"startOffset":13719,"endOffset":13776,"count":2},{"startOffset":13778,"endOffset":14364,"count":15},{"startOffset":13873,"endOffset":13884,"count":1},{"startOffset":13885,"endOffset":13896,"count":14},{"startOffset":13943,"endOffset":14005,"count":0},{"startOffset":14056,"endOffset":14070,"count":0},{"startOffset":14072,"endOffset":14185,"count":0},{"startOffset":14218,"endOffset":14364,"count":0},{"startOffset":14364,"endOffset":14386,"count":2},{"startOffset":14386,"endOffset":14434,"count":0},{"startOffset":14434,"endOffset":14687,"count":2},{"startOffset":14491,"endOffset":14687,"count":0}],"isBlockCoverage":true},{"functionName":"access","ranges":[{"startOffset":14852,"endOffset":15079,"count":0}],"isBlockCoverage":false},{"functionName":"cp","ranges":[{"startOffset":15083,"endOffset":15357,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":15361,"endOffset":15727,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":15851,"endOffset":16183,"count":15}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":16187,"endOffset":17645,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":17649,"endOffset":17995,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":17999,"endOffset":19283,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":19287,"endOffset":19742,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":19746,"endOffset":20058,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":20062,"endOffset":20198,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":20202,"endOffset":20365,"count":0}],"isBlockCoverage":false},{"functionName":"rm","ranges":[{"startOffset":20369,"endOffset":20575,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":20579,"endOffset":20961,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":20965,"endOffset":21056,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":21060,"endOffset":21143,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":21147,"endOffset":21638,"count":0}],"isBlockCoverage":false},{"functionName":"readdirRecursive","ranges":[{"startOffset":21642,"endOffset":23377,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":23381,"endOffset":23823,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":23827,"endOffset":24071,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":24075,"endOffset":25168,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":25172,"endOffset":25353,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":25357,"endOffset":25632,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":25636,"endOffset":25908,"count":0}],"isBlockCoverage":false},{"functionName":"statfs","ranges":[{"startOffset":25912,"endOffset":26191,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":26195,"endOffset":26524,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":26528,"endOffset":26669,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":26673,"endOffset":26809,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":26813,"endOffset":27003,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":27007,"endOffset":27241,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":27245,"endOffset":27527,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":27531,"endOffset":27732,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":27736,"endOffset":28015,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":28019,"endOffset":28297,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":28301,"endOffset":28504,"count":0}],"isBlockCoverage":false},{"functionName":"lutimes","ranges":[{"startOffset":28508,"endOffset":28791,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":28795,"endOffset":29001,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":29005,"endOffset":29398,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":29402,"endOffset":30307,"count":0}],"isBlockCoverage":false},{"functionName":"isCustomIterable","ranges":[{"startOffset":30311,"endOffset":30427,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":30431,"endOffset":30677,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":30681,"endOffset":31036,"count":15},{"startOffset":30800,"endOffset":30806,"count":0},{"startOffset":30850,"endOffset":30887,"count":0}],"isBlockCoverage":true},{"functionName":"_watch","ranges":[{"startOffset":31040,"endOffset":31717,"count":0}],"isBlockCoverage":false}]},{"scriptId":"279","url":"node:internal/fs/dir","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8415,"count":1}],"isBlockCoverage":false},{"functionName":"Dir","ranges":[{"startOffset":1224,"endOffset":2064,"count":0}],"isBlockCoverage":false},{"functionName":"get path","ranges":[{"startOffset":2070,"endOffset":2115,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":2121,"endOffset":2190,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2196,"endOffset":3988,"count":0}],"isBlockCoverage":false},{"functionName":"processReadResult","ranges":[{"startOffset":3994,"endOffset":4259,"count":0}],"isBlockCoverage":false},{"functionName":"readSyncRecursive","ranges":[{"startOffset":4265,"endOffset":4867,"count":0}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":4873,"endOffset":5886,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":5892,"endOffset":6609,"count":0}],"isBlockCoverage":false},{"functionName":"closeSync","ranges":[{"startOffset":6615,"endOffset":7006,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":7012,"endOffset":7287,"count":0}],"isBlockCoverage":false},{"functionName":"opendir","ranges":[{"startOffset":7478,"endOffset":8083,"count":0}],"isBlockCoverage":false},{"functionName":"opendirSync","ranges":[{"startOffset":8087,"endOffset":8351,"count":0}],"isBlockCoverage":false}]},{"scriptId":"280","url":"node:internal/fs/watchers","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11649,"count":1}],"isBlockCoverage":false},{"functionName":"emitStop","ranges":[{"startOffset":1486,"endOffset":1536,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher","ranges":[{"startOffset":1540,"endOffset":1778,"count":0}],"isBlockCoverage":false},{"functionName":"onchange","ranges":[{"startOffset":1902,"endOffset":2270,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":2666,"endOffset":3532,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.start","ranges":[{"startOffset":3759,"endOffset":3767,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.stop","ranges":[{"startOffset":4019,"endOffset":4310,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":4402,"endOffset":4844,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.ref","ranges":[{"startOffset":4877,"endOffset":5166,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.unref","ranges":[{"startOffset":5201,"endOffset":5457,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher","ranges":[{"startOffset":5464,"endOffset":6464,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.<computed>","ranges":[{"startOffset":7011,"endOffset":7954,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.start","ranges":[{"startOffset":8177,"endOffset":8185,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.close","ranges":[{"startOffset":8312,"endOffset":8660,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.ref","ranges":[{"startOffset":8691,"endOffset":8763,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.unref","ranges":[{"startOffset":8796,"endOffset":8870,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":8875,"endOffset":8929,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9159,"endOffset":9195,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9200,"endOffset":9241,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":9282,"endOffset":11507,"count":0}],"isBlockCoverage":false}]},{"scriptId":"281","url":"node:internal/fs/recursive_watch","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7168,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadFsSync","ranges":[{"startOffset":747,"endOffset":836,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":871,"endOffset":7108,"count":0}],"isBlockCoverage":false}]},{"scriptId":"282","url":"node:internal/readline/interface","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40434,"count":1}],"isBlockCoverage":false},{"functionName":"InterfaceConstructor","ranges":[{"startOffset":3912,"endOffset":9623,"count":0}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":9871,"endOffset":9973,"count":0}],"isBlockCoverage":false},{"functionName":"get columns","ranges":[{"startOffset":9977,"endOffset":10092,"count":0}],"isBlockCoverage":false},{"functionName":"setPrompt","ranges":[{"startOffset":10208,"endOffset":10261,"count":0}],"isBlockCoverage":false},{"functionName":"getPrompt","ranges":[{"startOffset":10361,"endOffset":10406,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10412,"endOffset":10611,"count":0}],"isBlockCoverage":false},{"functionName":"prompt","ranges":[{"startOffset":10757,"endOffset":11019,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11025,"endOffset":11344,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11350,"endOffset":11601,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11607,"endOffset":11696,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11702,"endOffset":11876,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11882,"endOffset":12085,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12091,"endOffset":13303,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13309,"endOffset":14352,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":14442,"endOffset":14621,"count":0}],"isBlockCoverage":false},{"functionName":"pause","ranges":[{"startOffset":14708,"endOffset":14845,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":14943,"endOffset":15085,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":15370,"endOffset":15536,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15542,"endOffset":17321,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17327,"endOffset":18020,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18026,"endOffset":18438,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18444,"endOffset":20720,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20726,"endOffset":21199,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21205,"endOffset":21469,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21475,"endOffset":21969,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21975,"endOffset":22470,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22476,"endOffset":23258,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23264,"endOffset":23701,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23707,"endOffset":23992,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23998,"endOffset":24262,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24268,"endOffset":24534,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24540,"endOffset":24700,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24706,"endOffset":25400,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":25406,"endOffset":25561,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25567,"endOffset":25727,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25733,"endOffset":25925,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25931,"endOffset":26252,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26258,"endOffset":26579,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27023,"endOffset":27678,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27684,"endOffset":28413,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28491,"endOffset":29462,"count":0}],"isBlockCoverage":false},{"functionName":"getCursorPos","ranges":[{"startOffset":29649,"endOffset":29822,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29945,"endOffset":30525,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30565,"endOffset":39103,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39422,"endOffset":39813,"count":0}],"isBlockCoverage":false}]},{"scriptId":"283","url":"node:internal/readline/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12802,"count":1}],"isBlockCoverage":false},{"functionName":"CSI","ranges":[{"startOffset":403,"endOffset":605,"count":4},{"startOffset":567,"endOffset":582,"count":0}],"isBlockCoverage":true},{"functionName":"charLengthLeft","ranges":[{"startOffset":996,"endOffset":1267,"count":0}],"isBlockCoverage":false},{"functionName":"charLengthAt","ranges":[{"startOffset":1271,"endOffset":1540,"count":0}],"isBlockCoverage":false},{"functionName":"emitKeys","ranges":[{"startOffset":2298,"endOffset":12217,"count":0}],"isBlockCoverage":false},{"functionName":"commonPrefix","ranges":[{"startOffset":12250,"endOffset":12679,"count":0}],"isBlockCoverage":false}]},{"scriptId":"284","url":"node:internal/readline/callbacks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2886,"count":1}],"isBlockCoverage":false},{"functionName":"cursorTo","ranges":[{"startOffset":492,"endOffset":1200,"count":0}],"isBlockCoverage":false},{"functionName":"moveCursor","ranges":[{"startOffset":1270,"endOffset":1807,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":1963,"endOffset":2379,"count":0}],"isBlockCoverage":false},{"functionName":"clearScreenDown","ranges":[{"startOffset":2462,"endOffset":2796,"count":0}],"isBlockCoverage":false}]},{"scriptId":"285","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/dist/tests/user.test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4575,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":359,"endOffset":394,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":425,"endOffset":4572,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":465,"endOffset":720,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":737,"endOffset":777,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":808,"endOffset":1819,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":883,"endOffset":1811,"count":1},{"startOffset":1377,"endOffset":1810,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1858,"endOffset":2449,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1903,"endOffset":2441,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2483,"endOffset":2974,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2527,"endOffset":2966,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3007,"endOffset":3500,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3050,"endOffset":3492,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3537,"endOffset":4176,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3584,"endOffset":4168,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4213,"endOffset":4568,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4260,"endOffset":4560,"count":1}],"isBlockCoverage":true}]},{"scriptId":"286","url":"node:internal/deps/cjs-module-lexer/dist/lexer","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33616,"count":1}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":116,"endOffset":813,"count":16},{"startOffset":146,"endOffset":181,"count":0},{"startOffset":222,"endOffset":237,"count":0},{"startOffset":273,"endOffset":308,"count":1},{"startOffset":332,"endOffset":334,"count":0},{"startOffset":406,"endOffset":553,"count":0},{"startOffset":601,"endOffset":650,"count":3},{"startOffset":663,"endOffset":696,"count":0},{"startOffset":709,"endOffset":773,"count":48}],"isBlockCoverage":true},{"functionName":"B","ranges":[{"startOffset":813,"endOffset":1040,"count":51},{"startOffset":840,"endOffset":852,"count":50},{"startOffset":853,"endOffset":862,"count":48},{"startOffset":862,"endOffset":913,"count":3},{"startOffset":913,"endOffset":1023,"count":33},{"startOffset":958,"endOffset":1022,"count":0},{"startOffset":1023,"endOffset":1032,"count":3},{"startOffset":1032,"endOffset":1039,"count":0}],"isBlockCoverage":true},{"functionName":"E","ranges":[{"startOffset":1040,"endOffset":1141,"count":0}],"isBlockCoverage":false},{"functionName":"C","ranges":[{"startOffset":1141,"endOffset":1215,"count":16},{"startOffset":1192,"endOffset":1214,"count":87341}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":1221,"endOffset":33616,"count":3},{"startOffset":1245,"endOffset":33615,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1251,"endOffset":33611,"count":1},{"startOffset":33455,"endOffset":33524,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33505,"endOffset":33523,"count":0}],"isBlockCoverage":false}]},{"scriptId":"288","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/chai/chai.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":135659,"count":1},{"startOffset":14673,"endOffset":14692,"count":0},{"startOffset":17571,"endOffset":17905,"count":0},{"startOffset":18983,"endOffset":18990,"count":0},{"startOffset":22151,"endOffset":22169,"count":0},{"startOffset":22270,"endOffset":22295,"count":0},{"startOffset":22307,"endOffset":22355,"count":0},{"startOffset":32817,"endOffset":32826,"count":0},{"startOffset":59119,"endOffset":59128,"count":0}],"isBlockCoverage":true},{"functionName":"__name","ranges":[{"startOffset":104,"endOffset":179,"count":363}],"isBlockCoverage":true},{"functionName":"__commonJS","ranges":[{"startOffset":198,"endOffset":337,"count":1}],"isBlockCoverage":true},{"functionName":"__require","ranges":[{"startOffset":211,"endOffset":337,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":354,"endOffset":465,"count":3},{"startOffset":401,"endOffset":463,"count":36}],"isBlockCoverage":true},{"functionName":"(disabled):util","ranges":[{"startOffset":521,"endOffset":546,"count":1}],"isBlockCoverage":true},{"functionName":"addChainableMethod","ranges":[{"startOffset":651,"endOffset":675,"count":0}],"isBlockCoverage":false},{"functionName":"addLengthGuard","ranges":[{"startOffset":695,"endOffset":715,"count":0}],"isBlockCoverage":false},{"functionName":"addMethod","ranges":[{"startOffset":730,"endOffset":745,"count":13}],"isBlockCoverage":true},{"functionName":"addProperty","ranges":[{"startOffset":762,"endOffset":779,"count":6}],"isBlockCoverage":true},{"functionName":"checkError","ranges":[{"startOffset":795,"endOffset":820,"count":0}],"isBlockCoverage":false},{"functionName":"compareByInspect","ranges":[{"startOffset":842,"endOffset":864,"count":0}],"isBlockCoverage":false},{"functionName":"eql","ranges":[{"startOffset":873,"endOffset":895,"count":0}],"isBlockCoverage":false},{"functionName":"expectTypes","ranges":[{"startOffset":912,"endOffset":929,"count":0}],"isBlockCoverage":false},{"functionName":"flag","ranges":[{"startOffset":939,"endOffset":949,"count":1}],"isBlockCoverage":true},{"functionName":"getActual","ranges":[{"startOffset":964,"endOffset":979,"count":0}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":995,"endOffset":1012,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":1025,"endOffset":1038,"count":0}],"isBlockCoverage":false},{"functionName":"getOperator","ranges":[{"startOffset":1055,"endOffset":1072,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnEnumerableProperties","ranges":[{"startOffset":1104,"endOffset":1136,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnEnumerablePropertySymbols","ranges":[{"startOffset":1173,"endOffset":1210,"count":0}],"isBlockCoverage":false},{"functionName":"getPathInfo","ranges":[{"startOffset":1227,"endOffset":1244,"count":0}],"isBlockCoverage":false},{"functionName":"hasProperty","ranges":[{"startOffset":1261,"endOffset":1278,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":1291,"endOffset":1305,"count":0}],"isBlockCoverage":false},{"functionName":"isNaN","ranges":[{"startOffset":1316,"endOffset":1328,"count":0}],"isBlockCoverage":false},{"functionName":"isProxyEnabled","ranges":[{"startOffset":1348,"endOffset":1368,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":1382,"endOffset":1397,"count":0}],"isBlockCoverage":false},{"functionName":"objDisplay","ranges":[{"startOffset":1413,"endOffset":1429,"count":0}],"isBlockCoverage":false},{"functionName":"overwriteChainableMethod","ranges":[{"startOffset":1459,"endOffset":1489,"count":0}],"isBlockCoverage":false},{"functionName":"overwriteMethod","ranges":[{"startOffset":1510,"endOffset":1531,"count":0}],"isBlockCoverage":false},{"functionName":"overwriteProperty","ranges":[{"startOffset":1554,"endOffset":1577,"count":0}],"isBlockCoverage":false},{"functionName":"proxify","ranges":[{"startOffset":1590,"endOffset":1603,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":1613,"endOffset":1623,"count":0}],"isBlockCoverage":false},{"functionName":"transferFlags","ranges":[{"startOffset":1642,"endOffset":1661,"count":0}],"isBlockCoverage":false},{"functionName":"type","ranges":[{"startOffset":1671,"endOffset":1681,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleConstructor","ranges":[{"startOffset":1811,"endOffset":1838,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleInstance","ranges":[{"startOffset":1862,"endOffset":1886,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleMessage","ranges":[{"startOffset":1909,"endOffset":1932,"count":0}],"isBlockCoverage":false},{"functionName":"getConstructorName","ranges":[{"startOffset":1956,"endOffset":1980,"count":0}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":1996,"endOffset":2012,"count":0}],"isBlockCoverage":false},{"functionName":"isErrorInstance","ranges":[{"startOffset":2017,"endOffset":2141,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":2186,"endOffset":2280,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleInstance","ranges":[{"startOffset":2311,"endOffset":2422,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleConstructor","ranges":[{"startOffset":2473,"endOffset":2864,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleMessage","ranges":[{"startOffset":2921,"endOffset":3251,"count":0}],"isBlockCoverage":false},{"functionName":"getConstructorName","ranges":[{"startOffset":3300,"endOffset":3737,"count":0}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":3788,"endOffset":3992,"count":0}],"isBlockCoverage":false},{"functionName":"flag","ranges":[{"startOffset":4054,"endOffset":4264,"count":428},{"startOffset":4113,"endOffset":4167,"count":45},{"startOffset":4199,"endOffset":4228,"count":281},{"startOffset":4228,"endOffset":4262,"count":147}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":4314,"endOffset":4426,"count":19},{"startOffset":4409,"endOffset":4416,"count":0}],"isBlockCoverage":true},{"functionName":"type","ranges":[{"startOffset":4483,"endOffset":4806,"count":1},{"startOffset":4538,"endOffset":4567,"count":0},{"startOffset":4588,"endOffset":4612,"count":0},{"startOffset":4695,"endOffset":4722,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4943,"endOffset":5622,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":4983,"endOffset":5031,"count":1}],"isBlockCoverage":true},{"functionName":"get name","ranges":[{"startOffset":5045,"endOffset":5090,"count":1}],"isBlockCoverage":true},{"functionName":"get ok","ranges":[{"startOffset":5093,"endOffset":5125,"count":0}],"isBlockCoverage":false},{"functionName":"_AssertionError","ranges":[{"startOffset":5128,"endOffset":5443,"count":1},{"startOffset":5308,"endOffset":5326,"count":0},{"startOffset":5364,"endOffset":5439,"count":4}],"isBlockCoverage":true},{"functionName":"toJSON","ranges":[{"startOffset":5446,"endOffset":5620,"count":0}],"isBlockCoverage":false},{"functionName":"expectTypes","ranges":[{"startOffset":5658,"endOffset":6428,"count":0}],"isBlockCoverage":false},{"functionName":"getActual","ranges":[{"startOffset":6497,"endOffset":6577,"count":2},{"startOffset":6564,"endOffset":6574,"count":0}],"isBlockCoverage":true},{"functionName":"colorise","ranges":[{"startOffset":7590,"endOffset":7816,"count":0}],"isBlockCoverage":false},{"functionName":"normaliseOptions","ranges":[{"startOffset":7847,"endOffset":8588,"count":24},{"startOffset":8531,"endOffset":8568,"count":0}],"isBlockCoverage":true},{"functionName":"truncate","ranges":[{"startOffset":8635,"endOffset":9010,"count":24},{"startOffset":8814,"endOffset":8842,"count":0},{"startOffset":8844,"endOffset":8866,"count":0},{"startOffset":8895,"endOffset":8923,"count":0},{"startOffset":8925,"endOffset":8991,"count":0}],"isBlockCoverage":true},{"functionName":"inspectList","ranges":[{"startOffset":9041,"endOffset":10479,"count":0}],"isBlockCoverage":false},{"functionName":"quoteComplexKey","ranges":[{"startOffset":10516,"endOffset":10713,"count":0}],"isBlockCoverage":false},{"functionName":"inspectProperty","ranges":[{"startOffset":10758,"endOffset":11097,"count":0}],"isBlockCoverage":false},{"functionName":"inspectArray","ranges":[{"startOffset":11178,"endOffset":11740,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11862,"endOffset":12076,"count":0}],"isBlockCoverage":false},{"functionName":"inspectTypedArray","ranges":[{"startOffset":12095,"endOffset":13023,"count":0}],"isBlockCoverage":false},{"functionName":"inspectDate","ranges":[{"startOffset":13107,"endOffset":13451,"count":0}],"isBlockCoverage":false},{"functionName":"inspectFunction","ranges":[{"startOffset":13527,"endOffset":13837,"count":0}],"isBlockCoverage":false},{"functionName":"inspectMapEntry","ranges":[{"startOffset":13916,"endOffset":14139,"count":0}],"isBlockCoverage":false},{"functionName":"mapToEntries","ranges":[{"startOffset":14184,"endOffset":14324,"count":0}],"isBlockCoverage":false},{"functionName":"inspectMap","ranges":[{"startOffset":14363,"endOffset":14576,"count":0}],"isBlockCoverage":false},{"functionName":"isNaN","ranges":[{"startOffset":14677,"endOffset":14691,"count":0}],"isBlockCoverage":false},{"functionName":"inspectNumber","ranges":[{"startOffset":14694,"endOffset":15160,"count":2},{"startOffset":14757,"endOffset":14807,"count":0},{"startOffset":14835,"endOffset":14890,"count":0},{"startOffset":14919,"endOffset":14975,"count":0},{"startOffset":14996,"endOffset":15078,"count":0}],"isBlockCoverage":true},{"functionName":"inspectBigInt","ranges":[{"startOffset":15238,"endOffset":15430,"count":0}],"isBlockCoverage":false},{"functionName":"inspectRegExp","ranges":[{"startOffset":15508,"endOffset":15774,"count":0}],"isBlockCoverage":false},{"functionName":"arrayFromSet","ranges":[{"startOffset":15849,"endOffset":15976,"count":0}],"isBlockCoverage":false},{"functionName":"inspectSet","ranges":[{"startOffset":16015,"endOffset":16184,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":16612,"endOffset":16745,"count":0}],"isBlockCoverage":false},{"functionName":"inspectString","ranges":[{"startOffset":16772,"endOffset":16998,"count":22},{"startOffset":16852,"endOffset":16913,"count":0}],"isBlockCoverage":true},{"functionName":"inspectSymbol","ranges":[{"startOffset":17076,"endOffset":17259,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17383,"endOffset":17406,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17618,"endOffset":17880,"count":0}],"isBlockCoverage":false},{"functionName":"inspectObject","ranges":[{"startOffset":18004,"endOffset":18815,"count":0}],"isBlockCoverage":false},{"functionName":"inspectClass","ranges":[{"startOffset":18992,"endOffset":19330,"count":0}],"isBlockCoverage":false},{"functionName":"inspectArguments","ranges":[{"startOffset":19409,"endOffset":19585,"count":0}],"isBlockCoverage":false},{"functionName":"inspectObject2","ranges":[{"startOffset":19821,"endOffset":20477,"count":0}],"isBlockCoverage":false},{"functionName":"inspectAttribute","ranges":[{"startOffset":20554,"endOffset":20804,"count":0}],"isBlockCoverage":false},{"functionName":"inspectHTMLCollection","ranges":[{"startOffset":20851,"endOffset":20968,"count":0}],"isBlockCoverage":false},{"functionName":"inspectHTML","ranges":[{"startOffset":21025,"endOffset":21925,"count":0}],"isBlockCoverage":false},{"functionName":"undefined","ranges":[{"startOffset":22465,"endOffset":22526,"count":0}],"isBlockCoverage":false},{"functionName":"null","ranges":[{"startOffset":22536,"endOffset":22587,"count":0}],"isBlockCoverage":false},{"functionName":"boolean","ranges":[{"startOffset":22600,"endOffset":22661,"count":0}],"isBlockCoverage":false},{"functionName":"Boolean","ranges":[{"startOffset":22674,"endOffset":22735,"count":0}],"isBlockCoverage":false},{"functionName":"WeakSet","ranges":[{"startOffset":23261,"endOffset":23326,"count":0}],"isBlockCoverage":false},{"functionName":"WeakMap","ranges":[{"startOffset":23339,"endOffset":23404,"count":0}],"isBlockCoverage":false},{"functionName":"Generator","ranges":[{"startOffset":23759,"endOffset":23767,"count":0}],"isBlockCoverage":false},{"functionName":"DataView","ranges":[{"startOffset":23781,"endOffset":23789,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayBuffer","ranges":[{"startOffset":23806,"endOffset":23814,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23962,"endOffset":24616,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":24678,"endOffset":25821,"count":24},{"startOffset":24832,"endOffset":24840,"count":0},{"startOffset":24883,"endOffset":24935,"count":0},{"startOffset":25018,"endOffset":25047,"count":0},{"startOffset":25049,"endOffset":25288,"count":0},{"startOffset":25289,"endOffset":25296,"count":0},{"startOffset":25331,"endOffset":25348,"count":0},{"startOffset":25350,"endOffset":25446,"count":0},{"startOffset":25447,"endOffset":25478,"count":0},{"startOffset":25480,"endOffset":25820,"count":0}],"isBlockCoverage":true},{"functionName":"inspect2","ranges":[{"startOffset":29674,"endOffset":29940,"count":24},{"startOffset":29800,"endOffset":29807,"count":0},{"startOffset":29891,"endOffset":29901,"count":0}],"isBlockCoverage":true},{"functionName":"objDisplay","ranges":[{"startOffset":30003,"endOffset":30676,"count":2},{"startOffset":30176,"endOffset":30647,"count":0}],"isBlockCoverage":true},{"functionName":"getMessage2","ranges":[{"startOffset":30744,"endOffset":31298,"count":1},{"startOffset":30905,"endOffset":30914,"count":0},{"startOffset":30995,"endOffset":31007,"count":0},{"startOffset":31020,"endOffset":31025,"count":0},{"startOffset":31267,"endOffset":31289,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31061,"endOffset":31105,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31128,"endOffset":31175,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31198,"endOffset":31247,"count":1}],"isBlockCoverage":true},{"functionName":"transferFlags","ranges":[{"startOffset":31370,"endOffset":31860,"count":33},{"startOffset":31458,"endOffset":31518,"count":0},{"startOffset":31543,"endOffset":31606,"count":0},{"startOffset":31645,"endOffset":31657,"count":0},{"startOffset":31693,"endOffset":31858,"count":165},{"startOffset":31714,"endOffset":31801,"count":0}],"isBlockCoverage":true},{"functionName":"type2","ranges":[{"startOffset":31936,"endOffset":32299,"count":8},{"startOffset":31992,"endOffset":32021,"count":0},{"startOffset":32042,"endOffset":32066,"count":0},{"startOffset":32149,"endOffset":32176,"count":0}],"isBlockCoverage":true},{"functionName":"FakeMap","ranges":[{"startOffset":32323,"endOffset":32407,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32488,"endOffset":32538,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":32578,"endOffset":32748,"count":0}],"isBlockCoverage":false},{"functionName":"memoizeCompare","ranges":[{"startOffset":32828,"endOffset":33220,"count":8},{"startOffset":32985,"endOffset":33007,"count":0},{"startOffset":33080,"endOffset":33203,"count":0}],"isBlockCoverage":true},{"functionName":"memoizeSet","ranges":[{"startOffset":33263,"endOffset":33712,"count":8},{"startOffset":33424,"endOffset":33441,"count":0},{"startOffset":33514,"endOffset":33710,"count":4}],"isBlockCoverage":true},{"functionName":"deepEqual","ranges":[{"startOffset":33781,"endOffset":34167,"count":22},{"startOffset":33860,"endOffset":33881,"count":10},{"startOffset":33883,"endOffset":33963,"count":0},{"startOffset":34062,"endOffset":34092,"count":18},{"startOffset":34092,"endOffset":34166,"count":4}],"isBlockCoverage":true},{"functionName":"simpleEqual","ranges":[{"startOffset":34200,"endOffset":34647,"count":22},{"startOffset":34302,"endOffset":34389,"count":18},{"startOffset":34337,"endOffset":34384,"count":0},{"startOffset":34389,"endOffset":34432,"count":4},{"startOffset":34432,"endOffset":34513,"count":0},{"startOffset":34515,"endOffset":34537,"count":0},{"startOffset":34537,"endOffset":34605,"count":4},{"startOffset":34607,"endOffset":34630,"count":0},{"startOffset":34630,"endOffset":34646,"count":4}],"isBlockCoverage":true},{"functionName":"extensiveDeepEqual","ranges":[{"startOffset":34684,"endOffset":36141,"count":4},{"startOffset":34778,"endOffset":34783,"count":3},{"startOffset":34831,"endOffset":34838,"count":0},{"startOffset":34857,"endOffset":34876,"count":3},{"startOffset":35056,"endOffset":35091,"count":0},{"startOffset":35222,"endOffset":35258,"count":0},{"startOffset":35277,"endOffset":35685,"count":0},{"startOffset":35779,"endOffset":35877,"count":0}],"isBlockCoverage":true},{"functionName":"extensiveDeepEqualByType","ranges":[{"startOffset":36192,"endOffset":38310,"count":4},{"startOffset":36316,"endOffset":36330,"count":0},{"startOffset":36335,"endOffset":36349,"count":0},{"startOffset":36354,"endOffset":36369,"count":0},{"startOffset":36374,"endOffset":36465,"count":0},{"startOffset":36470,"endOffset":36485,"count":0},{"startOffset":36490,"endOffset":36504,"count":0},{"startOffset":36509,"endOffset":36525,"count":0},{"startOffset":36530,"endOffset":36545,"count":0},{"startOffset":36550,"endOffset":36616,"count":0},{"startOffset":36621,"endOffset":36731,"count":0},{"startOffset":36736,"endOffset":36753,"count":0},{"startOffset":36758,"endOffset":36775,"count":0},{"startOffset":36780,"endOffset":36798,"count":0},{"startOffset":36803,"endOffset":36828,"count":0},{"startOffset":36833,"endOffset":36851,"count":0},{"startOffset":36856,"endOffset":36875,"count":0},{"startOffset":36880,"endOffset":36898,"count":0},{"startOffset":36903,"endOffset":36922,"count":0},{"startOffset":36927,"endOffset":36947,"count":0},{"startOffset":36952,"endOffset":36972,"count":0},{"startOffset":36977,"endOffset":37062,"count":1},{"startOffset":37067,"endOffset":37142,"count":0},{"startOffset":37147,"endOffset":37237,"count":0},{"startOffset":37242,"endOffset":37376,"count":0},{"startOffset":37381,"endOffset":37504,"count":0},{"startOffset":37509,"endOffset":37591,"count":0},{"startOffset":37596,"endOffset":37678,"count":0},{"startOffset":37683,"endOffset":37709,"count":0},{"startOffset":37714,"endOffset":37740,"count":0},{"startOffset":37745,"endOffset":37775,"count":0},{"startOffset":37780,"endOffset":37804,"count":0},{"startOffset":37809,"endOffset":37839,"count":0},{"startOffset":37844,"endOffset":37875,"count":0},{"startOffset":37880,"endOffset":37965,"count":0},{"startOffset":37970,"endOffset":38088,"count":0},{"startOffset":38093,"endOffset":38118,"count":0},{"startOffset":38123,"endOffset":38221,"count":0},{"startOffset":38226,"endOffset":38304,"count":3}],"isBlockCoverage":true},{"functionName":"regexpEqual","ranges":[{"startOffset":38373,"endOffset":38501,"count":0}],"isBlockCoverage":false},{"functionName":"entriesEqual","ranges":[{"startOffset":38538,"endOffset":39171,"count":0}],"isBlockCoverage":false},{"functionName":"iterableEqual","ranges":[{"startOffset":39210,"endOffset":39609,"count":4},{"startOffset":39360,"endOffset":39383,"count":0},{"startOffset":39404,"endOffset":39426,"count":0},{"startOffset":39472,"endOffset":39592,"count":10},{"startOffset":39561,"endOffset":39588,"count":0}],"isBlockCoverage":true},{"functionName":"generatorEqual","ranges":[{"startOffset":39650,"endOffset":39831,"count":0}],"isBlockCoverage":false},{"functionName":"hasIteratorFunction","ranges":[{"startOffset":39874,"endOffset":40075,"count":0}],"isBlockCoverage":false},{"functionName":"getIteratorEntries","ranges":[{"startOffset":40128,"endOffset":40345,"count":0}],"isBlockCoverage":false},{"functionName":"getGeneratorEntries","ranges":[{"startOffset":40396,"endOffset":40680,"count":0}],"isBlockCoverage":false},{"functionName":"getEnumerableKeys","ranges":[{"startOffset":40733,"endOffset":40855,"count":6},{"startOffset":40813,"endOffset":40838,"count":18}],"isBlockCoverage":true},{"functionName":"getEnumerableSymbols","ranges":[{"startOffset":40904,"endOffset":41204,"count":6},{"startOffset":41061,"endOffset":41187,"count":0}],"isBlockCoverage":true},{"functionName":"keysEqual","ranges":[{"startOffset":41259,"endOffset":41580,"count":3},{"startOffset":41378,"endOffset":41400,"count":0},{"startOffset":41439,"endOffset":41563,"count":9},{"startOffset":41532,"endOffset":41559,"count":0}],"isBlockCoverage":true},{"functionName":"objectEqual","ranges":[{"startOffset":41613,"endOffset":42835,"count":3},{"startOffset":42214,"endOffset":42241,"count":0},{"startOffset":42325,"endOffset":42532,"count":0},{"startOffset":42534,"endOffset":42730,"count":0},{"startOffset":42731,"endOffset":42760,"count":0},{"startOffset":42761,"endOffset":42793,"count":0},{"startOffset":42795,"endOffset":42834,"count":0}],"isBlockCoverage":true},{"functionName":"isPrimitive","ranges":[{"startOffset":42872,"endOffset":42957,"count":40}],"isBlockCoverage":true},{"functionName":"mapSymbols","ranges":[{"startOffset":42994,"endOffset":43202,"count":6}],"isBlockCoverage":true},{"functionName":"mapSymbol","ranges":[{"startOffset":43061,"endOffset":43184,"count":18},{"startOffset":43124,"endOffset":43162,"count":0}],"isBlockCoverage":true},{"functionName":"hasProperty","ranges":[{"startOffset":43271,"endOffset":43410,"count":7},{"startOffset":43355,"endOffset":43378,"count":0}],"isBlockCoverage":true},{"functionName":"parsePath","ranges":[{"startOffset":43447,"endOffset":43966,"count":0}],"isBlockCoverage":false},{"functionName":"internalGetPathValue","ranges":[{"startOffset":43999,"endOffset":44531,"count":0}],"isBlockCoverage":false},{"functionName":"getPathInfo","ranges":[{"startOffset":44586,"endOffset":44952,"count":0}],"isBlockCoverage":false},{"functionName":"Assertion","ranges":[{"startOffset":45015,"endOffset":45282,"count":45}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":45373,"endOffset":45518,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":45527,"endOffset":45678,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45737,"endOffset":45870,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":45879,"endOffset":46018,"count":0}],"isBlockCoverage":false},{"functionName":"Assertion.addProperty","ranges":[{"startOffset":46047,"endOffset":46110,"count":42}],"isBlockCoverage":true},{"functionName":"Assertion.addMethod","ranges":[{"startOffset":46134,"endOffset":46195,"count":48}],"isBlockCoverage":true},{"functionName":"Assertion.addChainableMethod","ranges":[{"startOffset":46228,"endOffset":46334,"count":8}],"isBlockCoverage":true},{"functionName":"Assertion.overwriteProperty","ranges":[{"startOffset":46366,"endOffset":46435,"count":0}],"isBlockCoverage":false},{"functionName":"Assertion.overwriteMethod","ranges":[{"startOffset":46465,"endOffset":46532,"count":0}],"isBlockCoverage":false},{"functionName":"Assertion.overwriteChainableMethod","ranges":[{"startOffset":46571,"endOffset":46683,"count":0}],"isBlockCoverage":false},{"functionName":"Assertion.assert","ranges":[{"startOffset":46714,"endOffset":47460,"count":19},{"startOffset":46883,"endOffset":46904,"count":7},{"startOffset":46910,"endOffset":46927,"count":7},{"startOffset":46964,"endOffset":46981,"count":0},{"startOffset":46993,"endOffset":47458,"count":1},{"startOffset":47413,"endOffset":47426,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":47531,"endOffset":47584,"count":8}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":47595,"endOffset":47649,"count":0}],"isBlockCoverage":false},{"functionName":"isProxyEnabled","ranges":[{"startOffset":47694,"endOffset":47815,"count":125}],"isBlockCoverage":true},{"functionName":"addProperty","ranges":[{"startOffset":47892,"endOffset":48497,"count":48},{"startOffset":47963,"endOffset":47981,"count":17},{"startOffset":47982,"endOffset":47990,"count":31}],"isBlockCoverage":true},{"functionName":"getter","ranges":[{"startOffset":47965,"endOffset":47981,"count":19}],"isBlockCoverage":true},{"functionName":"propertyGetter","ranges":[{"startOffset":48076,"endOffset":48439,"count":19},{"startOffset":48134,"endOffset":48160,"count":0},{"startOffset":48162,"endOffset":48219,"count":0},{"startOffset":48301,"endOffset":48315,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48622,"endOffset":48636,"count":0}],"isBlockCoverage":false},{"functionName":"addLengthGuard","ranges":[{"startOffset":48649,"endOffset":49216,"count":61},{"startOffset":48745,"endOffset":48755,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":48805,"endOffset":49195,"count":0}],"isBlockCoverage":false},{"functionName":"getProperties","ranges":[{"startOffset":49295,"endOffset":49733,"count":0}],"isBlockCoverage":false},{"functionName":"proxify","ranges":[{"startOffset":49863,"endOffset":51327,"count":106},{"startOffset":49940,"endOffset":49951,"count":0}],"isBlockCoverage":true},{"functionName":"proxyGetter","ranges":[{"startOffset":50010,"endOffset":51303,"count":400},{"startOffset":50178,"endOffset":51126,"count":0},{"startOffset":51171,"endOffset":51199,"count":34},{"startOffset":51201,"endOffset":51253,"count":34}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50494,"endOffset":50891,"count":0}],"isBlockCoverage":false},{"functionName":"stringDistanceCapped","ranges":[{"startOffset":51356,"endOffset":52101,"count":0}],"isBlockCoverage":false},{"functionName":"addMethod","ranges":[{"startOffset":52188,"endOffset":52682,"count":61}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":52273,"endOffset":52571,"count":15},{"startOffset":52449,"endOffset":52463,"count":0},{"startOffset":52463,"endOffset":52570,"count":14}],"isBlockCoverage":true},{"functionName":"overwriteProperty","ranges":[{"startOffset":52755,"endOffset":53683,"count":0}],"isBlockCoverage":false},{"functionName":"overwriteMethod","ranges":[{"startOffset":53770,"endOffset":54672,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":54861,"endOffset":54875,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":54949,"endOffset":55117,"count":3},{"startOffset":55070,"endOffset":55082,"count":0}],"isBlockCoverage":true},{"functionName":"addChainableMethod","ranges":[{"startOffset":55194,"endOffset":57078,"count":8},{"startOffset":55307,"endOffset":55399,"count":2},{"startOffset":55488,"endOffset":55517,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":55355,"endOffset":55373,"count":0}],"isBlockCoverage":false},{"functionName":"chainableMethodGetter","ranges":[{"startOffset":55645,"endOffset":57013,"count":0}],"isBlockCoverage":false},{"functionName":"overwriteChainableMethod","ranges":[{"startOffset":57176,"endOffset":58135,"count":0}],"isBlockCoverage":false},{"functionName":"compareByInspect","ranges":[{"startOffset":58237,"endOffset":58317,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnEnumerablePropertySymbols","ranges":[{"startOffset":58418,"endOffset":58677,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnEnumerableProperties","ranges":[{"startOffset":58803,"endOffset":58919,"count":0}],"isBlockCoverage":false},{"functionName":"_isNaN","ranges":[{"startOffset":59014,"endOffset":59066,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectType","ranges":[{"startOffset":59164,"endOffset":59326,"count":1}],"isBlockCoverage":true},{"functionName":"getOperator","ranges":[{"startOffset":59365,"endOffset":59936,"count":1},{"startOffset":59520,"endOffset":59529,"count":0},{"startOffset":59557,"endOffset":59583,"count":0},{"startOffset":59621,"endOffset":59633,"count":0},{"startOffset":59646,"endOffset":59651,"count":0},{"startOffset":59665,"endOffset":59689,"count":0},{"startOffset":59718,"endOffset":59742,"count":0},{"startOffset":59811,"endOffset":59879,"count":0},{"startOffset":59898,"endOffset":59917,"count":0}],"isBlockCoverage":true},{"functionName":"getName","ranges":[{"startOffset":60001,"endOffset":60043,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp2","ranges":[{"startOffset":60072,"endOffset":60167,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":60438,"endOffset":60489,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":60521,"endOffset":60566,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":60599,"endOffset":60642,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":60677,"endOffset":60722,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":60754,"endOffset":60796,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":60832,"endOffset":60878,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":60910,"endOffset":60981,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61013,"endOffset":61084,"count":0}],"isBlockCoverage":false},{"functionName":"an","ranges":[{"startOffset":61395,"endOffset":62063,"count":0}],"isBlockCoverage":false},{"functionName":"SameValueZero","ranges":[{"startOffset":62161,"endOffset":62237,"count":0}],"isBlockCoverage":false},{"functionName":"includeChainingBehavior","ranges":[{"startOffset":62278,"endOffset":62349,"count":0}],"isBlockCoverage":false},{"functionName":"include","ranges":[{"startOffset":62410,"endOffset":65067,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":65426,"endOffset":65559,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":65592,"endOffset":65774,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":65811,"endOffset":66453,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":66487,"endOffset":66670,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":66703,"endOffset":66846,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":66884,"endOffset":67039,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":67071,"endOffset":67211,"count":0}],"isBlockCoverage":false},{"functionName":"assertExist","ranges":[{"startOffset":67214,"endOffset":67400,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":67559,"endOffset":68613,"count":0}],"isBlockCoverage":false},{"functionName":"checkArguments","ranges":[{"startOffset":68616,"endOffset":68846,"count":0}],"isBlockCoverage":false},{"functionName":"assertEqual","ranges":[{"startOffset":68993,"endOffset":69465,"count":5},{"startOffset":69041,"endOffset":69069,"count":0},{"startOffset":69132,"endOffset":69282,"count":0}],"isBlockCoverage":true},{"functionName":"assertEql","ranges":[{"startOffset":69629,"endOffset":69925,"count":3},{"startOffset":69675,"endOffset":69703,"count":0}],"isBlockCoverage":true},{"functionName":"assertAbove","ranges":[{"startOffset":70037,"endOffset":71750,"count":0}],"isBlockCoverage":false},{"functionName":"assertLeast","ranges":[{"startOffset":71919,"endOffset":73634,"count":0}],"isBlockCoverage":false},{"functionName":"assertBelow","ranges":[{"startOffset":73811,"endOffset":75525,"count":0}],"isBlockCoverage":false},{"functionName":"assertMost","ranges":[{"startOffset":75691,"endOffset":77401,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":77599,"endOffset":79572,"count":0}],"isBlockCoverage":false},{"functionName":"assertInstanceOf","ranges":[{"startOffset":79575,"endOffset":80388,"count":0}],"isBlockCoverage":false},{"functionName":"assertProperty","ranges":[{"startOffset":80541,"endOffset":82827,"count":7},{"startOffset":80598,"endOffset":80626,"count":0},{"startOffset":80830,"endOffset":80846,"count":0},{"startOffset":80869,"endOffset":81071,"count":0},{"startOffset":81109,"endOffset":81133,"count":0},{"startOffset":81134,"endOffset":81158,"count":0},{"startOffset":81160,"endOffset":81319,"count":0},{"startOffset":81339,"endOffset":81347,"count":0},{"startOffset":81349,"endOffset":81484,"count":0},{"startOffset":81523,"endOffset":81645,"count":0},{"startOffset":81734,"endOffset":81758,"count":0},{"startOffset":81784,"endOffset":81800,"count":0},{"startOffset":81829,"endOffset":81849,"count":0},{"startOffset":81924,"endOffset":81946,"count":0},{"startOffset":81964,"endOffset":81985,"count":0},{"startOffset":82006,"endOffset":82030,"count":0},{"startOffset":82097,"endOffset":82160,"count":0},{"startOffset":82186,"endOffset":82217,"count":0},{"startOffset":82282,"endOffset":82307,"count":0},{"startOffset":82520,"endOffset":82793,"count":4}],"isBlockCoverage":true},{"functionName":"isEql","ranges":[{"startOffset":81852,"endOffset":81881,"count":4}],"isBlockCoverage":true},{"functionName":"assertOwnProperty","ranges":[{"startOffset":82919,"endOffset":83036,"count":0}],"isBlockCoverage":false},{"functionName":"assertOwnPropertyDescriptor","ranges":[{"startOffset":83199,"endOffset":84250,"count":0}],"isBlockCoverage":false},{"functionName":"assertLengthChain","ranges":[{"startOffset":84473,"endOffset":84538,"count":0}],"isBlockCoverage":false},{"functionName":"assertLength","ranges":[{"startOffset":84587,"endOffset":85283,"count":0}],"isBlockCoverage":false},{"functionName":"assertMatch","ranges":[{"startOffset":85470,"endOffset":85701,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":85856,"endOffset":86227,"count":0}],"isBlockCoverage":false},{"functionName":"assertKeys","ranges":[{"startOffset":86230,"endOffset":88879,"count":0}],"isBlockCoverage":false},{"functionName":"assertThrows","ranges":[{"startOffset":88995,"endOffset":93235,"count":0}],"isBlockCoverage":false},{"functionName":"respondTo","ranges":[{"startOffset":93407,"endOffset":93813,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":93969,"endOffset":94014,"count":0}],"isBlockCoverage":false},{"functionName":"satisfy","ranges":[{"startOffset":94017,"endOffset":94363,"count":0}],"isBlockCoverage":false},{"functionName":"closeTo","ranges":[{"startOffset":94476,"endOffset":95263,"count":0}],"isBlockCoverage":false},{"functionName":"isSubsetOf","ranges":[{"startOffset":95380,"endOffset":96165,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":96231,"endOffset":97291,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":97328,"endOffset":97583,"count":0}],"isBlockCoverage":false},{"functionName":"oneOf","ranges":[{"startOffset":97586,"endOffset":98713,"count":0}],"isBlockCoverage":false},{"functionName":"assertChanges","ranges":[{"startOffset":98775,"endOffset":99754,"count":0}],"isBlockCoverage":false},{"functionName":"assertIncreases","ranges":[{"startOffset":99888,"endOffset":100937,"count":0}],"isBlockCoverage":false},{"functionName":"assertDecreases","ranges":[{"startOffset":101083,"endOffset":102132,"count":0}],"isBlockCoverage":false},{"functionName":"assertDelta","ranges":[{"startOffset":102278,"endOffset":102929,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":103042,"endOffset":103284,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":103319,"endOffset":103547,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":103582,"endOffset":103810,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":103845,"endOffset":104058,"count":0}],"isBlockCoverage":false},{"functionName":"expect","ranges":[{"startOffset":104094,"endOffset":104165,"count":12}],"isBlockCoverage":true},{"functionName":"expect.fail","ranges":[{"startOffset":104206,"endOffset":104468,"count":0}],"isBlockCoverage":false},{"functionName":"Should","ranges":[{"startOffset":104565,"endOffset":104577,"count":1}],"isBlockCoverage":true},{"functionName":"should","ranges":[{"startOffset":104589,"endOffset":104601,"count":1}],"isBlockCoverage":true},{"functionName":"loadShould","ranges":[{"startOffset":104606,"endOffset":106438,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":106556,"endOffset":106732,"count":0}],"isBlockCoverage":false},{"functionName":"assert.fail","ranges":[{"startOffset":106773,"endOffset":107035,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isOk","ranges":[{"startOffset":107051,"endOffset":107125,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotOk","ranges":[{"startOffset":107144,"endOffset":107225,"count":0}],"isBlockCoverage":false},{"functionName":"assert.equal","ranges":[{"startOffset":107242,"endOffset":107494,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notEqual","ranges":[{"startOffset":107514,"endOffset":107769,"count":0}],"isBlockCoverage":false},{"functionName":"assert.strictEqual","ranges":[{"startOffset":107792,"endOffset":107886,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notStrictEqual","ranges":[{"startOffset":107912,"endOffset":108013,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepEqual.assert.deepStrictEqual","ranges":[{"startOffset":108059,"endOffset":108149,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepEqual","ranges":[{"startOffset":108173,"endOffset":108270,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isAbove","ranges":[{"startOffset":108289,"endOffset":108382,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isAtLeast","ranges":[{"startOffset":108403,"endOffset":108502,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isBelow","ranges":[{"startOffset":108521,"endOffset":108614,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isAtMost","ranges":[{"startOffset":108634,"endOffset":108731,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isTrue","ranges":[{"startOffset":108749,"endOffset":108830,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotTrue","ranges":[{"startOffset":108851,"endOffset":108943,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isFalse","ranges":[{"startOffset":108962,"endOffset":109045,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotFalse","ranges":[{"startOffset":109067,"endOffset":109161,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNull","ranges":[{"startOffset":109179,"endOffset":109264,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotNull","ranges":[{"startOffset":109285,"endOffset":109377,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNaN","ranges":[{"startOffset":109394,"endOffset":109473,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotNaN","ranges":[{"startOffset":109493,"endOffset":109591,"count":0}],"isBlockCoverage":false},{"functionName":"assert.exists","ranges":[{"startOffset":109609,"endOffset":109688,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notExists","ranges":[{"startOffset":109709,"endOffset":109795,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isUndefined","ranges":[{"startOffset":109818,"endOffset":109910,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isDefined","ranges":[{"startOffset":109931,"endOffset":110025,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isCallable","ranges":[{"startOffset":110047,"endOffset":110145,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotCallable","ranges":[{"startOffset":110170,"endOffset":110275,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isObject","ranges":[{"startOffset":110295,"endOffset":110385,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotObject","ranges":[{"startOffset":110408,"endOffset":110505,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isArray","ranges":[{"startOffset":110524,"endOffset":110613,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotArray","ranges":[{"startOffset":110635,"endOffset":110731,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isString","ranges":[{"startOffset":110751,"endOffset":110841,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotString","ranges":[{"startOffset":110864,"endOffset":110961,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNumber","ranges":[{"startOffset":110981,"endOffset":111071,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotNumber","ranges":[{"startOffset":111094,"endOffset":111191,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isFinite","ranges":[{"startOffset":111211,"endOffset":111296,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isBoolean","ranges":[{"startOffset":111317,"endOffset":111409,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotBoolean","ranges":[{"startOffset":111433,"endOffset":111532,"count":0}],"isBlockCoverage":false},{"functionName":"assert.typeOf","ranges":[{"startOffset":111550,"endOffset":111642,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notTypeOf","ranges":[{"startOffset":111663,"endOffset":111774,"count":0}],"isBlockCoverage":false},{"functionName":"assert.instanceOf","ranges":[{"startOffset":111796,"endOffset":111901,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notInstanceOf","ranges":[{"startOffset":111926,"endOffset":112038,"count":0}],"isBlockCoverage":false},{"functionName":"assert.include","ranges":[{"startOffset":112057,"endOffset":112146,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notInclude","ranges":[{"startOffset":112168,"endOffset":112264,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepInclude","ranges":[{"startOffset":112287,"endOffset":112385,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepInclude","ranges":[{"startOffset":112411,"endOffset":112516,"count":0}],"isBlockCoverage":false},{"functionName":"assert.nestedInclude","ranges":[{"startOffset":112541,"endOffset":112643,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notNestedInclude","ranges":[{"startOffset":112671,"endOffset":112780,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepNestedInclude","ranges":[{"startOffset":112809,"endOffset":112920,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepNestedInclude","ranges":[{"startOffset":112952,"endOffset":113070,"count":0}],"isBlockCoverage":false},{"functionName":"assert.ownInclude","ranges":[{"startOffset":113092,"endOffset":113188,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notOwnInclude","ranges":[{"startOffset":113213,"endOffset":113316,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepOwnInclude","ranges":[{"startOffset":113342,"endOffset":113447,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepOwnInclude","ranges":[{"startOffset":113476,"endOffset":113588,"count":0}],"isBlockCoverage":false},{"functionName":"assert.match","ranges":[{"startOffset":113605,"endOffset":113691,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notMatch","ranges":[{"startOffset":113711,"endOffset":113804,"count":0}],"isBlockCoverage":false},{"functionName":"assert.property","ranges":[{"startOffset":113824,"endOffset":113925,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notProperty","ranges":[{"startOffset":113948,"endOffset":114056,"count":0}],"isBlockCoverage":false},{"functionName":"assert.propertyVal","ranges":[{"startOffset":114079,"endOffset":114193,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notPropertyVal","ranges":[{"startOffset":114219,"endOffset":114340,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepPropertyVal","ranges":[{"startOffset":114367,"endOffset":114490,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepPropertyVal","ranges":[{"startOffset":114520,"endOffset":114650,"count":0}],"isBlockCoverage":false},{"functionName":"assert.ownProperty","ranges":[{"startOffset":114673,"endOffset":114781,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notOwnProperty","ranges":[{"startOffset":114807,"endOffset":114922,"count":0}],"isBlockCoverage":false},{"functionName":"assert.ownPropertyVal","ranges":[{"startOffset":114948,"endOffset":115073,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notOwnPropertyVal","ranges":[{"startOffset":115102,"endOffset":115234,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepOwnPropertyVal","ranges":[{"startOffset":115264,"endOffset":115398,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepOwnPropertyVal","ranges":[{"startOffset":115431,"endOffset":115572,"count":0}],"isBlockCoverage":false},{"functionName":"assert.nestedProperty","ranges":[{"startOffset":115598,"endOffset":115712,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notNestedProperty","ranges":[{"startOffset":115741,"endOffset":115862,"count":0}],"isBlockCoverage":false},{"functionName":"assert.nestedPropertyVal","ranges":[{"startOffset":115891,"endOffset":116018,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notNestedPropertyVal","ranges":[{"startOffset":116050,"endOffset":116184,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepNestedPropertyVal","ranges":[{"startOffset":116217,"endOffset":116353,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepNestedPropertyVal","ranges":[{"startOffset":116389,"endOffset":116532,"count":0}],"isBlockCoverage":false},{"functionName":"assert.lengthOf","ranges":[{"startOffset":116552,"endOffset":116651,"count":0}],"isBlockCoverage":false},{"functionName":"assert.hasAnyKeys","ranges":[{"startOffset":116673,"endOffset":116776,"count":0}],"isBlockCoverage":false},{"functionName":"assert.hasAllKeys","ranges":[{"startOffset":116798,"endOffset":116901,"count":0}],"isBlockCoverage":false},{"functionName":"assert.containsAllKeys","ranges":[{"startOffset":116928,"endOffset":117039,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotHaveAnyKeys","ranges":[{"startOffset":117069,"endOffset":117184,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotHaveAllKeys","ranges":[{"startOffset":117214,"endOffset":117329,"count":0}],"isBlockCoverage":false},{"functionName":"assert.hasAnyDeepKeys","ranges":[{"startOffset":117355,"endOffset":117467,"count":0}],"isBlockCoverage":false},{"functionName":"assert.hasAllDeepKeys","ranges":[{"startOffset":117493,"endOffset":117605,"count":0}],"isBlockCoverage":false},{"functionName":"assert.containsAllDeepKeys","ranges":[{"startOffset":117636,"endOffset":117756,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotHaveAnyDeepKeys","ranges":[{"startOffset":117790,"endOffset":117914,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotHaveAllDeepKeys","ranges":[{"startOffset":117948,"endOffset":118072,"count":0}],"isBlockCoverage":false},{"functionName":"assert.throws","ranges":[{"startOffset":118090,"endOffset":118398,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotThrow","ranges":[{"startOffset":118422,"endOffset":118696,"count":0}],"isBlockCoverage":false},{"functionName":"assert.operator","ranges":[{"startOffset":118716,"endOffset":119668,"count":0}],"isBlockCoverage":false},{"functionName":"assert.closeTo","ranges":[{"startOffset":119687,"endOffset":119796,"count":0}],"isBlockCoverage":false},{"functionName":"assert.approximately","ranges":[{"startOffset":119821,"endOffset":119942,"count":0}],"isBlockCoverage":false},{"functionName":"assert.sameMembers","ranges":[{"startOffset":119965,"endOffset":120075,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notSameMembers","ranges":[{"startOffset":120101,"endOffset":120218,"count":0}],"isBlockCoverage":false},{"functionName":"assert.sameDeepMembers","ranges":[{"startOffset":120245,"endOffset":120364,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notSameDeepMembers","ranges":[{"startOffset":120394,"endOffset":120520,"count":0}],"isBlockCoverage":false},{"functionName":"assert.sameOrderedMembers","ranges":[{"startOffset":120550,"endOffset":120675,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notSameOrderedMembers","ranges":[{"startOffset":120708,"endOffset":120840,"count":0}],"isBlockCoverage":false},{"functionName":"assert.sameDeepOrderedMembers","ranges":[{"startOffset":120874,"endOffset":121008,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notSameDeepOrderedMembers","ranges":[{"startOffset":121045,"endOffset":121186,"count":0}],"isBlockCoverage":false},{"functionName":"assert.includeMembers","ranges":[{"startOffset":121212,"endOffset":121335,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notIncludeMembers","ranges":[{"startOffset":121364,"endOffset":121494,"count":0}],"isBlockCoverage":false},{"functionName":"assert.includeDeepMembers","ranges":[{"startOffset":121524,"endOffset":121656,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notIncludeDeepMembers","ranges":[{"startOffset":121689,"endOffset":121828,"count":0}],"isBlockCoverage":false},{"functionName":"assert.includeOrderedMembers","ranges":[{"startOffset":121861,"endOffset":121999,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notIncludeOrderedMembers","ranges":[{"startOffset":122035,"endOffset":122180,"count":0}],"isBlockCoverage":false},{"functionName":"assert.includeDeepOrderedMembers","ranges":[{"startOffset":122217,"endOffset":122364,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notIncludeDeepOrderedMembers","ranges":[{"startOffset":122404,"endOffset":122558,"count":0}],"isBlockCoverage":false},{"functionName":"assert.oneOf","ranges":[{"startOffset":122575,"endOffset":122674,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isIterable","ranges":[{"startOffset":122696,"endOffset":122974,"count":0}],"isBlockCoverage":false},{"functionName":"assert.changes","ranges":[{"startOffset":122993,"endOffset":123192,"count":0}],"isBlockCoverage":false},{"functionName":"assert.changesBy","ranges":[{"startOffset":123213,"endOffset":123532,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotChange","ranges":[{"startOffset":123557,"endOffset":123773,"count":0}],"isBlockCoverage":false},{"functionName":"assert.changesButNotBy","ranges":[{"startOffset":123800,"endOffset":124133,"count":0}],"isBlockCoverage":false},{"functionName":"assert.increases","ranges":[{"startOffset":124154,"endOffset":124364,"count":0}],"isBlockCoverage":false},{"functionName":"assert.increasesBy","ranges":[{"startOffset":124387,"endOffset":124710,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotIncrease","ranges":[{"startOffset":124737,"endOffset":124957,"count":0}],"isBlockCoverage":false},{"functionName":"assert.increasesButNotBy","ranges":[{"startOffset":124986,"endOffset":125323,"count":0}],"isBlockCoverage":false},{"functionName":"assert.decreases","ranges":[{"startOffset":125344,"endOffset":125554,"count":0}],"isBlockCoverage":false},{"functionName":"assert.decreasesBy","ranges":[{"startOffset":125577,"endOffset":125900,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotDecrease","ranges":[{"startOffset":125927,"endOffset":126147,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotDecreaseBy","ranges":[{"startOffset":126176,"endOffset":126516,"count":0}],"isBlockCoverage":false},{"functionName":"assert.decreasesButNotBy","ranges":[{"startOffset":126545,"endOffset":126882,"count":0}],"isBlockCoverage":false},{"functionName":"assert.ifError","ranges":[{"startOffset":126901,"endOffset":126950,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isExtensible","ranges":[{"startOffset":126974,"endOffset":127067,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotExtensible","ranges":[{"startOffset":127094,"endOffset":127194,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isSealed","ranges":[{"startOffset":127214,"endOffset":127299,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotSealed","ranges":[{"startOffset":127322,"endOffset":127414,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isFrozen","ranges":[{"startOffset":127434,"endOffset":127519,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotFrozen","ranges":[{"startOffset":127542,"endOffset":127634,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isEmpty","ranges":[{"startOffset":127653,"endOffset":127736,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotEmpty","ranges":[{"startOffset":127758,"endOffset":127848,"count":0}],"isBlockCoverage":false},{"functionName":"alias","ranges":[{"startOffset":127874,"endOffset":127947,"count":14}],"isBlockCoverage":true},{"functionName":"use","ranges":[{"startOffset":128337,"endOffset":128601,"count":1}],"isBlockCoverage":true}]},{"scriptId":"289","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/dist/src/server.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":728,"count":1},{"startOffset":453,"endOffset":459,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":239,"endOffset":297,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":310,"endOffset":339,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":474,"endOffset":531,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":633,"endOffset":705,"count":1}],"isBlockCoverage":true}]},{"scriptId":"290","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15,"count":1}],"isBlockCoverage":true}]},{"scriptId":"291","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/dist/src/services/registeruser.service.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2061,"count":1}],"isBlockCoverage":true},{"functionName":"createUser","ranges":[{"startOffset":156,"endOffset":615,"count":0}],"isBlockCoverage":false},{"functionName":"getUserById","ranges":[{"startOffset":620,"endOffset":955,"count":0}],"isBlockCoverage":false},{"functionName":"getAllUsers","ranges":[{"startOffset":960,"endOffset":1289,"count":0}],"isBlockCoverage":false},{"functionName":"updateUser","ranges":[{"startOffset":1294,"endOffset":1662,"count":0}],"isBlockCoverage":false},{"functionName":"deleteUser","ranges":[{"startOffset":1667,"endOffset":2012,"count":0}],"isBlockCoverage":false}]},{"scriptId":"292","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sinon/pkg/sinon-esm.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1150711,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":60,"endOffset":515,"count":1}],"isBlockCoverage":true},{"functionName":"r","ranges":[{"startOffset":71,"endOffset":506,"count":1},{"startOffset":460,"endOffset":469,"count":0}],"isBlockCoverage":true},{"functionName":"o","ranges":[{"startOffset":89,"endOffset":424,"count":358},{"startOffset":114,"endOffset":404,"count":159},{"startOffset":124,"endOffset":291,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":338,"endOffset":382,"count":357},{"startOffset":377,"endOffset":380,"count":0}],"isBlockCoverage":true},{"functionName":"1../sinon/behavior","ranges":[{"startOffset":523,"endOffset":2343,"count":1}],"isBlockCoverage":true},{"functionName":"createApi","ranges":[{"startOffset":1160,"endOffset":2339,"count":1}],"isBlockCoverage":true},{"functionName":"addBehavior","ranges":[{"startOffset":2121,"endOffset":2202,"count":0}],"isBlockCoverage":false},{"functionName":"2../sinon","ranges":[{"startOffset":2621,"endOffset":2736,"count":1}],"isBlockCoverage":true},{"functionName":"3../create-sinon-api","ranges":[{"startOffset":2755,"endOffset":2886,"count":1}],"isBlockCoverage":true},{"functionName":"4../util/core/times-in-words","ranges":[{"startOffset":2916,"endOffset":13464,"count":1}],"isBlockCoverage":true},{"functionName":"applyDefaults","ranges":[{"startOffset":3649,"endOffset":3879,"count":8},{"startOffset":3734,"endOffset":3877,"count":16}],"isBlockCoverage":true},{"functionName":"createAssertObject","ranges":[{"startOffset":4262,"endOffset":13365,"count":8},{"startOffset":4336,"endOffset":4341,"count":1}],"isBlockCoverage":true},{"functionName":"fail","ranges":[{"startOffset":4541,"endOffset":4965,"count":0}],"isBlockCoverage":false},{"functionName":"pass","ranges":[{"startOffset":4982,"endOffset":5029,"count":0}],"isBlockCoverage":false},{"functionName":"assertCallOrder","ranges":[{"startOffset":5051,"endOffset":6040,"count":0}],"isBlockCoverage":false},{"functionName":"assertCallCount","ranges":[{"startOffset":6062,"endOffset":6725,"count":0}],"isBlockCoverage":false},{"functionName":"expose","ranges":[{"startOffset":6744,"endOffset":7531,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":7549,"endOffset":8045,"count":0}],"isBlockCoverage":false},{"functionName":"verifyIsStub","ranges":[{"startOffset":8059,"endOffset":8695,"count":0}],"isBlockCoverage":false},{"functionName":"verifyIsValidAssertion","ranges":[{"startOffset":8701,"endOffset":9336,"count":0}],"isBlockCoverage":false},{"functionName":"failAssertion","ranges":[{"startOffset":9342,"endOffset":9516,"count":0}],"isBlockCoverage":false},{"functionName":"mirrorPropAsAssertion","ranges":[{"startOffset":9522,"endOffset":10580,"count":168},{"startOffset":9668,"endOffset":9730,"count":160}],"isBlockCoverage":true},{"functionName":"assert.<computed>","ranges":[{"startOffset":9755,"endOffset":10573,"count":0}],"isBlockCoverage":false},{"functionName":"exposedName","ranges":[{"startOffset":10586,"endOffset":10813,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11001,"endOffset":11059,"count":0}],"isBlockCoverage":false},{"functionName":"5../util/core/export-async-behaviors","ranges":[{"startOffset":13557,"endOffset":21950,"count":1}],"isBlockCoverage":true},{"functionName":"getCallback","ranges":[{"startOffset":14172,"endOffset":14973,"count":0}],"isBlockCoverage":false},{"functionName":"getCallbackError","ranges":[{"startOffset":14975,"endOffset":15700,"count":0}],"isBlockCoverage":false},{"functionName":"ensureArgs","ranges":[{"startOffset":15702,"endOffset":16118,"count":0}],"isBlockCoverage":false},{"functionName":"callCallback","ranges":[{"startOffset":16120,"endOffset":16854,"count":4},{"startOffset":16208,"endOffset":16829,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16494,"endOffset":16662,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":16884,"endOffset":17283,"count":19},{"startOffset":17125,"endOffset":17163,"count":0},{"startOffset":17165,"endOffset":17251,"count":0}],"isBlockCoverage":true},{"functionName":"isPresent","ranges":[{"startOffset":17301,"endOffset":17756,"count":0}],"isBlockCoverage":false},{"functionName":"invoke","ranges":[{"startOffset":17812,"endOffset":20256,"count":4},{"startOffset":18131,"endOffset":18176,"count":0},{"startOffset":18209,"endOffset":18355,"count":0},{"startOffset":18403,"endOffset":18507,"count":0},{"startOffset":18534,"endOffset":18573,"count":0},{"startOffset":18620,"endOffset":18721,"count":0},{"startOffset":18744,"endOffset":18808,"count":0},{"startOffset":18857,"endOffset":19036,"count":0},{"startOffset":19064,"endOffset":19145,"count":0},{"startOffset":19259,"endOffset":20255,"count":0}],"isBlockCoverage":true},{"functionName":"effectiveWrappedMethod","ranges":[{"startOffset":20287,"endOffset":20560,"count":0}],"isBlockCoverage":false},{"functionName":"onCall","ranges":[{"startOffset":20575,"endOffset":20645,"count":0}],"isBlockCoverage":false},{"functionName":"onFirstCall","ranges":[{"startOffset":20665,"endOffset":20735,"count":0}],"isBlockCoverage":false},{"functionName":"onSecondCall","ranges":[{"startOffset":20756,"endOffset":20828,"count":0}],"isBlockCoverage":false},{"functionName":"onThirdCall","ranges":[{"startOffset":20848,"endOffset":20918,"count":0}],"isBlockCoverage":false},{"functionName":"withArgs","ranges":[{"startOffset":20935,"endOffset":21250,"count":0}],"isBlockCoverage":false},{"functionName":"createBehavior","ranges":[{"startOffset":21256,"endOffset":21547,"count":35}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21309,"endOffset":21544,"count":19}],"isBlockCoverage":true},{"functionName":"addBehavior","ranges":[{"startOffset":21549,"endOffset":21760,"count":35}],"isBlockCoverage":true},{"functionName":"proto.<computed>","ranges":[{"startOffset":21606,"endOffset":21717,"count":19},{"startOffset":21703,"endOffset":21710,"count":0}],"isBlockCoverage":true},{"functionName":"6../util/core/get-property-descriptor","ranges":[{"startOffset":22070,"endOffset":22893,"count":1}],"isBlockCoverage":true},{"functionName":"collectMethod","ranges":[{"startOffset":22393,"endOffset":22628,"count":0}],"isBlockCoverage":false},{"functionName":"collectOwnMethods","ranges":[{"startOffset":22708,"endOffset":22853,"count":0}],"isBlockCoverage":false},{"functionName":"7.supports-color","ranges":[{"startOffset":22985,"endOffset":23788,"count":1}],"isBlockCoverage":true},{"functionName":"Colorizer","ranges":[{"startOffset":23073,"endOffset":23179,"count":1}],"isBlockCoverage":true},{"functionName":"colorize","ranges":[{"startOffset":23312,"endOffset":23472,"count":0}],"isBlockCoverage":false},{"functionName":"red","ranges":[{"startOffset":23478,"endOffset":23533,"count":0}],"isBlockCoverage":false},{"functionName":"green","ranges":[{"startOffset":23539,"endOffset":23596,"count":0}],"isBlockCoverage":false},{"functionName":"cyan","ranges":[{"startOffset":23602,"endOffset":23658,"count":0}],"isBlockCoverage":false},{"functionName":"white","ranges":[{"startOffset":23664,"endOffset":23721,"count":0}],"isBlockCoverage":false},{"functionName":"bold","ranges":[{"startOffset":23727,"endOffset":23782,"count":0}],"isBlockCoverage":false},{"functionName":"8../sandbox","ranges":[{"startOffset":23816,"endOffset":27161,"count":1}],"isBlockCoverage":true},{"functionName":"prepareSandboxFromConfig","ranges":[{"startOffset":24036,"endOffset":24591,"count":0}],"isBlockCoverage":false},{"functionName":"exposeValue","ranges":[{"startOffset":24593,"endOffset":24882,"count":0}],"isBlockCoverage":false},{"functionName":"createSandbox","ranges":[{"startOffset":26396,"endOffset":27125,"count":6},{"startOffset":26483,"endOffset":26606,"count":0},{"startOffset":26781,"endOffset":27124,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26818,"endOffset":27012,"count":0}],"isBlockCoverage":false},{"functionName":"9../stub","ranges":[{"startOffset":27205,"endOffset":28364,"count":1}],"isBlockCoverage":true},{"functionName":"isStub","ranges":[{"startOffset":27410,"endOffset":27480,"count":0}],"isBlockCoverage":false},{"functionName":"createStubInstance","ranges":[{"startOffset":27499,"endOffset":28360,"count":0}],"isBlockCoverage":false},{"functionName":"10../util/core/export-async-behaviors","ranges":[{"startOffset":28434,"endOffset":37595,"count":1}],"isBlockCoverage":true},{"functionName":"throwsException","ranges":[{"startOffset":28850,"endOffset":29436,"count":0}],"isBlockCoverage":false},{"functionName":"callsFake","ranges":[{"startOffset":29480,"endOffset":29656,"count":0}],"isBlockCoverage":false},{"functionName":"callsArg","ranges":[{"startOffset":29673,"endOffset":30048,"count":0}],"isBlockCoverage":false},{"functionName":"callsArgOn","ranges":[{"startOffset":30067,"endOffset":30451,"count":0}],"isBlockCoverage":false},{"functionName":"callsArgWith","ranges":[{"startOffset":30472,"endOffset":30868,"count":0}],"isBlockCoverage":false},{"functionName":"callsArgWith","ranges":[{"startOffset":30891,"endOffset":31294,"count":0}],"isBlockCoverage":false},{"functionName":"usingPromise","ranges":[{"startOffset":31315,"endOffset":31412,"count":0}],"isBlockCoverage":false},{"functionName":"yields","ranges":[{"startOffset":31427,"endOffset":31734,"count":0}],"isBlockCoverage":false},{"functionName":"yieldsRight","ranges":[{"startOffset":31754,"endOffset":32062,"count":0}],"isBlockCoverage":false},{"functionName":"yieldsOn","ranges":[{"startOffset":32079,"endOffset":32393,"count":0}],"isBlockCoverage":false},{"functionName":"yieldsTo","ranges":[{"startOffset":32410,"endOffset":32718,"count":0}],"isBlockCoverage":false},{"functionName":"yieldsToOn","ranges":[{"startOffset":32737,"endOffset":33017,"count":0}],"isBlockCoverage":false},{"functionName":"returns","ranges":[{"startOffset":33101,"endOffset":33418,"count":6}],"isBlockCoverage":true},{"functionName":"returnsArg","ranges":[{"startOffset":33437,"endOffset":33663,"count":0}],"isBlockCoverage":false},{"functionName":"throwsArg","ranges":[{"startOffset":33681,"endOffset":33905,"count":0}],"isBlockCoverage":false},{"functionName":"returnsThis","ranges":[{"startOffset":33925,"endOffset":34026,"count":0}],"isBlockCoverage":false},{"functionName":"resolves","ranges":[{"startOffset":34043,"endOffset":34394,"count":13}],"isBlockCoverage":true},{"functionName":"resolvesArg","ranges":[{"startOffset":34414,"endOffset":34924,"count":0}],"isBlockCoverage":false},{"functionName":"rejects","ranges":[{"startOffset":34940,"endOffset":35588,"count":0}],"isBlockCoverage":false},{"functionName":"resolvesThis","ranges":[{"startOffset":35609,"endOffset":35962,"count":0}],"isBlockCoverage":false},{"functionName":"callThrough","ranges":[{"startOffset":35982,"endOffset":36050,"count":0}],"isBlockCoverage":false},{"functionName":"callThroughWithNew","ranges":[{"startOffset":36077,"endOffset":36159,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":36171,"endOffset":36528,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":36540,"endOffset":37023,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":37037,"endOffset":37460,"count":0}],"isBlockCoverage":false},{"functionName":"11../proxy","ranges":[{"startOffset":37731,"endOffset":43958,"count":1}],"isBlockCoverage":true},{"functionName":"fake","ranges":[{"startOffset":38602,"endOffset":38781,"count":0}],"isBlockCoverage":false},{"functionName":"returns","ranges":[{"startOffset":39061,"endOffset":39212,"count":0}],"isBlockCoverage":false},{"functionName":"throws","ranges":[{"startOffset":39696,"endOffset":39855,"count":0}],"isBlockCoverage":false},{"functionName":"resolves","ranges":[{"startOffset":40135,"endOffset":40307,"count":0}],"isBlockCoverage":false},{"functionName":"rejects","ranges":[{"startOffset":40726,"endOffset":40906,"count":0}],"isBlockCoverage":false},{"functionName":"usingPromise","ranges":[{"startOffset":41210,"endOffset":41301,"count":0}],"isBlockCoverage":false},{"functionName":"yields","ranges":[{"startOffset":41616,"endOffset":42006,"count":0}],"isBlockCoverage":false},{"functionName":"yieldsAsync","ranges":[{"startOffset":42382,"endOffset":42823,"count":0}],"isBlockCoverage":false},{"functionName":"wrapFunc","ranges":[{"startOffset":42971,"endOffset":43663,"count":0}],"isBlockCoverage":false},{"functionName":"getError","ranges":[{"startOffset":43865,"endOffset":43955,"count":0}],"isBlockCoverage":false},{"functionName":"12../assert","ranges":[{"startOffset":44028,"endOffset":52573,"count":1}],"isBlockCoverage":true},{"functionName":"callCountInWords","ranges":[{"startOffset":44773,"endOffset":44926,"count":0}],"isBlockCoverage":false},{"functionName":"expectedCallCountInWords","ranges":[{"startOffset":44928,"endOffset":45423,"count":0}],"isBlockCoverage":false},{"functionName":"receivedMinCalls","ranges":[{"startOffset":45425,"endOffset":45607,"count":0}],"isBlockCoverage":false},{"functionName":"receivedMaxCalls","ranges":[{"startOffset":45609,"endOffset":45791,"count":0}],"isBlockCoverage":false},{"functionName":"verifyMatcher","ranges":[{"startOffset":45793,"endOffset":45959,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":46034,"endOffset":46243,"count":0}],"isBlockCoverage":false},{"functionName":"invoke","ranges":[{"startOffset":46258,"endOffset":46405,"count":0}],"isBlockCoverage":false},{"functionName":"atLeast","ranges":[{"startOffset":46421,"endOffset":46736,"count":0}],"isBlockCoverage":false},{"functionName":"atMost","ranges":[{"startOffset":46751,"endOffset":47065,"count":0}],"isBlockCoverage":false},{"functionName":"never","ranges":[{"startOffset":47079,"endOffset":47135,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":47148,"endOffset":47203,"count":0}],"isBlockCoverage":false},{"functionName":"twice","ranges":[{"startOffset":47217,"endOffset":47273,"count":0}],"isBlockCoverage":false},{"functionName":"thrice","ranges":[{"startOffset":47288,"endOffset":47345,"count":0}],"isBlockCoverage":false},{"functionName":"exactly","ranges":[{"startOffset":47361,"endOffset":47576,"count":0}],"isBlockCoverage":false},{"functionName":"met","ranges":[{"startOffset":47588,"endOffset":47665,"count":0}],"isBlockCoverage":false},{"functionName":"verifyCallAllowed","ranges":[{"startOffset":47691,"endOffset":50012,"count":0}],"isBlockCoverage":false},{"functionName":"allowsCall","ranges":[{"startOffset":50031,"endOffset":51076,"count":0}],"isBlockCoverage":false},{"functionName":"withArgs","ranges":[{"startOffset":51093,"endOffset":51192,"count":0}],"isBlockCoverage":false},{"functionName":"withExactArgs","ranges":[{"startOffset":51214,"endOffset":51355,"count":0}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":51366,"endOffset":51456,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":51473,"endOffset":52086,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":52101,"endOffset":52298,"count":0}],"isBlockCoverage":false},{"functionName":"pass","ranges":[{"startOffset":52311,"endOffset":52371,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":52384,"endOffset":52531,"count":0}],"isBlockCoverage":false},{"functionName":"13../mock-expectation","ranges":[{"startOffset":52754,"endOffset":58921,"count":1}],"isBlockCoverage":true},{"functionName":"mock","ranges":[{"startOffset":53476,"endOffset":53664,"count":0}],"isBlockCoverage":false},{"functionName":"each","ranges":[{"startOffset":53666,"endOffset":53768,"count":0}],"isBlockCoverage":false},{"functionName":"arrayEquals","ranges":[{"startOffset":53770,"endOffset":54005,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":54034,"endOffset":54285,"count":0}],"isBlockCoverage":false},{"functionName":"expects","ranges":[{"startOffset":54301,"endOffset":55161,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":55177,"endOffset":55416,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":55431,"endOffset":56202,"count":0}],"isBlockCoverage":false},{"functionName":"usingPromise","ranges":[{"startOffset":56223,"endOffset":56336,"count":0}],"isBlockCoverage":false},{"functionName":"invokeMethod","ranges":[{"startOffset":56357,"endOffset":58889,"count":0}],"isBlockCoverage":false},{"functionName":"14../fake","ranges":[{"startOffset":59104,"endOffset":61712,"count":1}],"isBlockCoverage":true},{"functionName":"getFakeExecutor","ranges":[{"startOffset":59676,"endOffset":59855,"count":0}],"isBlockCoverage":false},{"functionName":"promise","ranges":[{"startOffset":60156,"endOffset":61682,"count":0}],"isBlockCoverage":false},{"functionName":"15.@sinonjs/commons","ranges":[{"startOffset":61763,"endOffset":63566,"count":1}],"isBlockCoverage":true},{"functionName":"incrementCallCount","ranges":[{"startOffset":61906,"endOffset":62165,"count":4}],"isBlockCoverage":true},{"functionName":"createCallProperties","ranges":[{"startOffset":62199,"endOffset":62417,"count":8}],"isBlockCoverage":true},{"functionName":"delegateToCalls","ranges":[{"startOffset":62446,"endOffset":63562,"count":26}],"isBlockCoverage":true},{"functionName":"proxy.<computed>","ranges":[{"startOffset":62599,"endOffset":63559,"count":0}],"isBlockCoverage":false},{"functionName":"16.@sinonjs/commons","ranges":[{"startOffset":63596,"endOffset":71766,"count":1}],"isBlockCoverage":true},{"functionName":"throwYieldError","ranges":[{"startOffset":64239,"endOffset":64440,"count":0}],"isBlockCoverage":false},{"functionName":"calledOn","ranges":[{"startOffset":64476,"endOffset":64660,"count":0}],"isBlockCoverage":false},{"functionName":"calledWith","ranges":[{"startOffset":64679,"endOffset":65072,"count":0}],"isBlockCoverage":false},{"functionName":"calledWithMatch","ranges":[{"startOffset":65096,"endOffset":65566,"count":0}],"isBlockCoverage":false},{"functionName":"calledWithExactly","ranges":[{"startOffset":65592,"endOffset":65760,"count":0}],"isBlockCoverage":false},{"functionName":"notCalledWith","ranges":[{"startOffset":65782,"endOffset":65870,"count":0}],"isBlockCoverage":false},{"functionName":"notCalledWithMatch","ranges":[{"startOffset":65897,"endOffset":65995,"count":0}],"isBlockCoverage":false},{"functionName":"returned","ranges":[{"startOffset":66012,"endOffset":66095,"count":0}],"isBlockCoverage":false},{"functionName":"threw","ranges":[{"startOffset":66109,"endOffset":66330,"count":0}],"isBlockCoverage":false},{"functionName":"calledWithNew","ranges":[{"startOffset":66352,"endOffset":66461,"count":4}],"isBlockCoverage":true},{"functionName":"calledBefore","ranges":[{"startOffset":66482,"endOffset":66549,"count":0}],"isBlockCoverage":false},{"functionName":"calledAfter","ranges":[{"startOffset":66569,"endOffset":66636,"count":0}],"isBlockCoverage":false},{"functionName":"calledImmediatelyBefore","ranges":[{"startOffset":66668,"endOffset":66741,"count":0}],"isBlockCoverage":false},{"functionName":"calledImmediatelyAfter","ranges":[{"startOffset":66772,"endOffset":66845,"count":0}],"isBlockCoverage":false},{"functionName":"callArg","ranges":[{"startOffset":66861,"endOffset":66956,"count":0}],"isBlockCoverage":false},{"functionName":"callArgOn","ranges":[{"startOffset":66974,"endOffset":67095,"count":0}],"isBlockCoverage":false},{"functionName":"callArgWith","ranges":[{"startOffset":67115,"endOffset":67261,"count":0}],"isBlockCoverage":false},{"functionName":"callArgOnWith","ranges":[{"startOffset":67283,"endOffset":67452,"count":0}],"isBlockCoverage":false},{"functionName":"throwArg","ranges":[{"startOffset":67469,"endOffset":67712,"count":0}],"isBlockCoverage":false},{"functionName":"yield","ranges":[{"startOffset":67726,"endOffset":67823,"count":0}],"isBlockCoverage":false},{"functionName":"yieldOn","ranges":[{"startOffset":67839,"endOffset":68276,"count":0}],"isBlockCoverage":false},{"functionName":"yieldTo","ranges":[{"startOffset":68292,"endOffset":68436,"count":0}],"isBlockCoverage":false},{"functionName":"yieldToOn","ranges":[{"startOffset":68454,"endOffset":69030,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":69047,"endOffset":70062,"count":0}],"isBlockCoverage":false},{"functionName":"ensureArgIsAFunction","ranges":[{"startOffset":70091,"endOffset":70351,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":70455,"endOffset":70555,"count":0}],"isBlockCoverage":false},{"functionName":"createProxyCall","ranges":[{"startOffset":70784,"endOffset":71664,"count":20},{"startOffset":70946,"endOffset":71009,"count":0},{"startOffset":71064,"endOffset":71140,"count":15},{"startOffset":71227,"endOffset":71259,"count":5},{"startOffset":71260,"endOffset":71269,"count":0}],"isBlockCoverage":true},{"functionName":"17../proxy-call-util","ranges":[{"startOffset":71828,"endOffset":74675,"count":1}],"isBlockCoverage":true},{"functionName":"invoke","ranges":[{"startOffset":72222,"endOffset":74671,"count":4},{"startOffset":73078,"endOffset":73457,"count":0},{"startOffset":73551,"endOffset":73591,"count":0},{"startOffset":74612,"endOffset":74644,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":72551,"endOffset":72758,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":73742,"endOffset":73865,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":74329,"endOffset":74405,"count":0}],"isBlockCoverage":false},{"functionName":"18../proxy-call","ranges":[{"startOffset":74728,"endOffset":84838,"count":1}],"isBlockCoverage":true},{"functionName":"named","ranges":[{"startOffset":75355,"endOffset":75803,"count":0}],"isBlockCoverage":false},{"functionName":"matchingFakes","ranges":[{"startOffset":75967,"endOffset":76029,"count":0}],"isBlockCoverage":false},{"functionName":"getCall","ranges":[{"startOffset":76045,"endOffset":76568,"count":36},{"startOffset":76113,"endOffset":76233,"count":0},{"startOffset":76276,"endOffset":76312,"count":16},{"startOffset":76312,"endOffset":76567,"count":20}],"isBlockCoverage":true},{"functionName":"getCalls","ranges":[{"startOffset":76585,"endOffset":76768,"count":0}],"isBlockCoverage":false},{"functionName":"calledBefore","ranges":[{"startOffset":76789,"endOffset":77029,"count":0}],"isBlockCoverage":false},{"functionName":"calledAfter","ranges":[{"startOffset":77049,"endOffset":77234,"count":0}],"isBlockCoverage":false},{"functionName":"calledImmediatelyBefore","ranges":[{"startOffset":77266,"endOffset":77523,"count":0}],"isBlockCoverage":false},{"functionName":"calledImmediatelyAfter","ranges":[{"startOffset":77554,"endOffset":77810,"count":0}],"isBlockCoverage":false},{"functionName":"printf","ranges":[{"startOffset":77870,"endOffset":78415,"count":0}],"isBlockCoverage":false},{"functionName":"resetHistory","ranges":[{"startOffset":78436,"endOffset":79480,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":80526,"endOffset":80566,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":80682,"endOffset":80722,"count":0}],"isBlockCoverage":false},{"functionName":"createProxy","ranges":[{"startOffset":81061,"endOffset":81315,"count":19}],"isBlockCoverage":true},{"functionName":"wrapFunction","ranges":[{"startOffset":81317,"endOffset":84804,"count":19},{"startOffset":81642,"endOffset":81781,"count":7},{"startOffset":81790,"endOffset":81930,"count":4},{"startOffset":81939,"endOffset":82082,"count":8},{"startOffset":82091,"endOffset":82237,"count":0},{"startOffset":82246,"endOffset":82395,"count":0},{"startOffset":82404,"endOffset":82556,"count":0},{"startOffset":82565,"endOffset":82720,"count":0},{"startOffset":82729,"endOffset":82887,"count":0},{"startOffset":82896,"endOffset":83057,"count":0},{"startOffset":83066,"endOffset":83230,"count":0},{"startOffset":83239,"endOffset":83407,"count":0},{"startOffset":83416,"endOffset":83587,"count":0},{"startOffset":83596,"endOffset":83770,"count":0},{"startOffset":83779,"endOffset":83919,"count":0}],"isBlockCoverage":true},{"functionName":"proxy","ranges":[{"startOffset":81666,"endOffset":81761,"count":1}],"isBlockCoverage":true},{"functionName":"proxy","ranges":[{"startOffset":81814,"endOffset":81910,"count":2}],"isBlockCoverage":true},{"functionName":"proxy","ranges":[{"startOffset":81963,"endOffset":82062,"count":1}],"isBlockCoverage":true},{"functionName":"proxy","ranges":[{"startOffset":82115,"endOffset":82217,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":82270,"endOffset":82375,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":82428,"endOffset":82536,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":82589,"endOffset":82700,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":82753,"endOffset":82867,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":82920,"endOffset":83037,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":83090,"endOffset":83210,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":83264,"endOffset":83387,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":83441,"endOffset":83567,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":83621,"endOffset":83750,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":83804,"endOffset":83899,"count":0}],"isBlockCoverage":false},{"functionName":"19../util/core/walk-object","ranges":[{"startOffset":85022,"endOffset":85427,"count":1}],"isBlockCoverage":true},{"functionName":"filter","ranges":[{"startOffset":85127,"endOffset":85235,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":85237,"endOffset":85307,"count":0}],"isBlockCoverage":false},{"functionName":"restoreObject","ranges":[{"startOffset":85309,"endOffset":85391,"count":0}],"isBlockCoverage":false},{"functionName":"20../assert","ranges":[{"startOffset":85464,"endOffset":100847,"count":1}],"isBlockCoverage":true},{"functionName":"applyOnEach","ranges":[{"startOffset":86611,"endOffset":86845,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":86689,"endOffset":86763,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":86794,"endOffset":86841,"count":13}],"isBlockCoverage":true},{"functionName":"throwOnAccessors","ranges":[{"startOffset":86847,"endOffset":87149,"count":0}],"isBlockCoverage":false},{"functionName":"verifySameType","ranges":[{"startOffset":87151,"endOffset":87427,"count":0}],"isBlockCoverage":false},{"functionName":"checkForValidArguments","ranges":[{"startOffset":87429,"endOffset":87866,"count":0}],"isBlockCoverage":false},{"functionName":"Sandbox","ranges":[{"startOffset":88003,"endOffset":100783,"count":7}],"isBlockCoverage":true},{"functionName":"addToCollection","ranges":[{"startOffset":88277,"endOffset":88764,"count":19},{"startOffset":88386,"endOffset":88419,"count":0},{"startOffset":88430,"endOffset":88758,"count":0}],"isBlockCoverage":true},{"functionName":"getFakes","ranges":[{"startOffset":88933,"endOffset":88987,"count":0}],"isBlockCoverage":false},{"functionName":"createStubInstance","ranges":[{"startOffset":89023,"endOffset":89363,"count":0}],"isBlockCoverage":false},{"functionName":"inject","ranges":[{"startOffset":89387,"endOffset":90660,"count":0}],"isBlockCoverage":false},{"functionName":"mock","ranges":[{"startOffset":90682,"endOffset":90847,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":90870,"endOffset":90985,"count":0}],"isBlockCoverage":false},{"functionName":"resetBehavior","ranges":[{"startOffset":91016,"endOffset":91098,"count":0}],"isBlockCoverage":false},{"functionName":"resetHistory","ranges":[{"startOffset":91128,"endOffset":91388,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":91413,"endOffset":91877,"count":6},{"startOffset":91464,"endOffset":91619,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":91751,"endOffset":91806,"count":0}],"isBlockCoverage":false},{"functionName":"restoreContext","ranges":[{"startOffset":91909,"endOffset":92179,"count":6},{"startOffset":92003,"endOffset":92178,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":92043,"endOffset":92129,"count":0}],"isBlockCoverage":false},{"functionName":"getFakeRestorer","ranges":[{"startOffset":92417,"endOffset":93024,"count":0}],"isBlockCoverage":false},{"functionName":"verifyNotReplaced","ranges":[{"startOffset":93030,"endOffset":93437,"count":0}],"isBlockCoverage":false},{"functionName":"replace","ranges":[{"startOffset":93678,"endOffset":94206,"count":0}],"isBlockCoverage":false},{"functionName":"replaceUsingAccessor","ranges":[{"startOffset":94245,"endOffset":94785,"count":0}],"isBlockCoverage":false},{"functionName":"define","ranges":[{"startOffset":94809,"endOffset":95538,"count":0}],"isBlockCoverage":false},{"functionName":"replaceGetter","ranges":[{"startOffset":95569,"endOffset":96627,"count":0}],"isBlockCoverage":false},{"functionName":"replaceSetter","ranges":[{"startOffset":96658,"endOffset":97767,"count":0}],"isBlockCoverage":false},{"functionName":"commonPostInitSetup","ranges":[{"startOffset":97774,"endOffset":98597,"count":19},{"startOffset":97948,"endOffset":97977,"count":6},{"startOffset":98016,"endOffset":98248,"count":0},{"startOffset":98280,"endOffset":98471,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":98106,"endOffset":98180,"count":0}],"isBlockCoverage":false},{"functionName":"spy","ranges":[{"startOffset":98617,"endOffset":98762,"count":0}],"isBlockCoverage":false},{"functionName":"stub","ranges":[{"startOffset":98784,"endOffset":98934,"count":20}],"isBlockCoverage":true},{"functionName":"fake","ranges":[{"startOffset":99003,"endOffset":99132,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":99171,"endOffset":99494,"count":49}],"isBlockCoverage":true},{"functionName":"sandbox.fake.<computed>","ranges":[{"startOffset":99315,"endOffset":99477,"count":0}],"isBlockCoverage":false},{"functionName":"useFakeTimers","ranges":[{"startOffset":99526,"endOffset":99714,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":99738,"endOffset":99806,"count":0}],"isBlockCoverage":false},{"functionName":"verifyAndRestore","ranges":[{"startOffset":99840,"endOffset":100095,"count":0}],"isBlockCoverage":false},{"functionName":"useFakeServer","ranges":[{"startOffset":100126,"endOffset":100409,"count":0}],"isBlockCoverage":false},{"functionName":"useFakeXMLHttpRequest","ranges":[{"startOffset":100448,"endOffset":100591,"count":0}],"isBlockCoverage":false},{"functionName":"usingPromise","ranges":[{"startOffset":100621,"endOffset":100780,"count":0}],"isBlockCoverage":false},{"functionName":"21../colorizer","ranges":[{"startOffset":101166,"endOffset":105827,"count":1}],"isBlockCoverage":true},{"functionName":"colorSinonMatchText","ranges":[{"startOffset":101787,"endOffset":102232,"count":0}],"isBlockCoverage":false},{"functionName":"colorDiffText","ranges":[{"startOffset":102298,"endOffset":102716,"count":0}],"isBlockCoverage":false},{"functionName":"quoteStringValue","ranges":[{"startOffset":102782,"endOffset":102917,"count":0}],"isBlockCoverage":false},{"functionName":"c","ranges":[{"startOffset":102945,"endOffset":103027,"count":0}],"isBlockCoverage":false},{"functionName":"n","ranges":[{"startOffset":103037,"endOffset":103193,"count":0}],"isBlockCoverage":false},{"functionName":"D","ranges":[{"startOffset":103203,"endOffset":104852,"count":0}],"isBlockCoverage":false},{"functionName":"C","ranges":[{"startOffset":104862,"endOffset":105386,"count":0}],"isBlockCoverage":false},{"functionName":"t","ranges":[{"startOffset":105396,"endOffset":105630,"count":0}],"isBlockCoverage":false},{"functionName":"*","ranges":[{"startOffset":105642,"endOffset":105820,"count":0}],"isBlockCoverage":false},{"functionName":"22../proxy","ranges":[{"startOffset":105948,"endOffset":111557,"count":1}],"isBlockCoverage":true},{"functionName":"matches","ranges":[{"startOffset":106902,"endOffset":107175,"count":0}],"isBlockCoverage":false},{"functionName":"withArgs","ranges":[{"startOffset":107222,"endOffset":108231,"count":0}],"isBlockCoverage":false},{"functionName":"matchingFakes","ranges":[{"startOffset":108298,"endOffset":108446,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":108363,"endOffset":108438,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":108642,"endOffset":108761,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":108868,"endOffset":108987,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":109093,"endOffset":109213,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":109271,"endOffset":109387,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":109572,"endOffset":109688,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":109750,"endOffset":109929,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":110020,"endOffset":110223,"count":0}],"isBlockCoverage":false},{"functionName":"createSpy","ranges":[{"startOffset":110229,"endOffset":110723,"count":0}],"isBlockCoverage":false},{"functionName":"spy","ranges":[{"startOffset":110725,"endOffset":111510,"count":0}],"isBlockCoverage":false},{"functionName":"23../behavior","ranges":[{"startOffset":111797,"endOffset":119393,"count":1}],"isBlockCoverage":true},{"functionName":"createStub","ranges":[{"startOffset":112916,"endOffset":113995,"count":19},{"startOffset":113527,"endOffset":113542,"count":6},{"startOffset":113690,"endOffset":113718,"count":13},{"startOffset":113719,"endOffset":113725,"count":6},{"startOffset":113837,"endOffset":113846,"count":12}],"isBlockCoverage":true},{"functionName":"functionStub","ranges":[{"startOffset":113017,"endOffset":113474,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":113208,"endOffset":113375,"count":0}],"isBlockCoverage":false},{"functionName":"stub","ranges":[{"startOffset":113997,"endOffset":115935,"count":20},{"startOffset":114061,"endOffset":114181,"count":0},{"startOffset":114211,"endOffset":114279,"count":0},{"startOffset":114378,"endOffset":114501,"count":1},{"startOffset":114501,"endOffset":114704,"count":19},{"startOffset":114704,"endOffset":114735,"count":6},{"startOffset":114812,"endOffset":114833,"count":6},{"startOffset":114873,"endOffset":114907,"count":6},{"startOffset":114974,"endOffset":115016,"count":13},{"startOffset":115017,"endOffset":115129,"count":13},{"startOffset":115164,"endOffset":115212,"count":0},{"startOffset":115212,"endOffset":115241,"count":19},{"startOffset":115241,"endOffset":115277,"count":6},{"startOffset":115277,"endOffset":115385,"count":13},{"startOffset":115398,"endOffset":115404,"count":0},{"startOffset":115895,"endOffset":115898,"count":0},{"startOffset":115899,"endOffset":115932,"count":13}],"isBlockCoverage":true},{"functionName":"restore","ranges":[{"startOffset":115590,"endOffset":115847,"count":0}],"isBlockCoverage":false},{"functionName":"assertValidPropertyDescriptor","ranges":[{"startOffset":115937,"endOffset":116655,"count":19},{"startOffset":116020,"endOffset":116032,"count":13},{"startOffset":116034,"endOffset":116057,"count":6},{"startOffset":116057,"endOffset":116083,"count":13},{"startOffset":116083,"endOffset":116110,"count":6},{"startOffset":116111,"endOffset":116134,"count":0},{"startOffset":116136,"endOffset":116271,"count":0},{"startOffset":116271,"endOffset":116313,"count":13},{"startOffset":116315,"endOffset":116342,"count":0},{"startOffset":116344,"endOffset":116471,"count":0},{"startOffset":116471,"endOffset":116509,"count":13},{"startOffset":116509,"endOffset":116532,"count":0},{"startOffset":116534,"endOffset":116653,"count":0}],"isBlockCoverage":true},{"functionName":"isDataDescriptor","ranges":[{"startOffset":116657,"endOffset":116830,"count":13},{"startOffset":116736,"endOffset":116767,"count":0},{"startOffset":116768,"endOffset":116794,"count":0},{"startOffset":116795,"endOffset":116821,"count":0}],"isBlockCoverage":true},{"functionName":"getParentBehaviour","ranges":[{"startOffset":116872,"endOffset":116992,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultBehavior","ranges":[{"startOffset":116994,"endOffset":117181,"count":4},{"startOffset":117088,"endOffset":117131,"count":0},{"startOffset":117132,"endOffset":117172,"count":0}],"isBlockCoverage":true},{"functionName":"getCurrentBehavior","ranges":[{"startOffset":117183,"endOffset":117436,"count":4},{"startOffset":117334,"endOffset":117364,"count":0},{"startOffset":117373,"endOffset":117390,"count":0}],"isBlockCoverage":true},{"functionName":"resetBehavior","ranges":[{"startOffset":117512,"endOffset":117918,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":117932,"endOffset":118010,"count":0}],"isBlockCoverage":false},{"functionName":"onCall","ranges":[{"startOffset":118025,"endOffset":118201,"count":0}],"isBlockCoverage":false},{"functionName":"onFirstCall","ranges":[{"startOffset":118221,"endOffset":118282,"count":0}],"isBlockCoverage":false},{"functionName":"onSecondCall","ranges":[{"startOffset":118303,"endOffset":118365,"count":0}],"isBlockCoverage":false},{"functionName":"onThirdCall","ranges":[{"startOffset":118385,"endOffset":118446,"count":0}],"isBlockCoverage":false},{"functionName":"withArgs","ranges":[{"startOffset":118463,"endOffset":118855,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":118892,"endOffset":119138,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":119174,"endOffset":119343,"count":35}],"isBlockCoverage":true},{"functionName":"24.@sinonjs/commons","ranges":[{"startOffset":119739,"endOffset":120156,"count":1}],"isBlockCoverage":true},{"functionName":"throwOnFalsyObject","ranges":[{"startOffset":119853,"endOffset":120115,"count":20},{"startOffset":119918,"endOffset":119928,"count":14},{"startOffset":119930,"endOffset":120113,"count":0}],"isBlockCoverage":true},{"functionName":"25.@sinonjs/commons","ranges":[{"startOffset":120186,"endOffset":121047,"count":1}],"isBlockCoverage":true},{"functionName":"exportAsyncBehaviors","ranges":[{"startOffset":120352,"endOffset":121043,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":120466,"endOffset":121021,"count":37},{"startOffset":120636,"endOffset":120661,"count":9},{"startOffset":120663,"endOffset":120987,"count":9}],"isBlockCoverage":true},{"functionName":"acc.<computed>","ranges":[{"startOffset":120705,"endOffset":120972,"count":0}],"isBlockCoverage":false},{"functionName":"26.@sinonjs/commons","ranges":[{"startOffset":121077,"endOffset":126132,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":121471,"endOffset":122405,"count":1},{"startOffset":122260,"endOffset":122357,"count":10}],"isBlockCoverage":true},{"functionName":"constructor","ranges":[{"startOffset":121524,"endOffset":121571,"count":1}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":121591,"endOffset":121638,"count":1}],"isBlockCoverage":true},{"functionName":"valueOf","ranges":[{"startOffset":121657,"endOffset":121704,"count":1}],"isBlockCoverage":true},{"functionName":"toLocaleString","ranges":[{"startOffset":121730,"endOffset":121777,"count":1}],"isBlockCoverage":true},{"functionName":"prototype","ranges":[{"startOffset":121798,"endOffset":121845,"count":1}],"isBlockCoverage":true},{"functionName":"isPrototypeOf","ranges":[{"startOffset":121870,"endOffset":121917,"count":1}],"isBlockCoverage":true},{"functionName":"propertyIsEnumerable","ranges":[{"startOffset":121949,"endOffset":121996,"count":1}],"isBlockCoverage":true},{"functionName":"hasOwnProperty","ranges":[{"startOffset":122022,"endOffset":122069,"count":1}],"isBlockCoverage":true},{"functionName":"length","ranges":[{"startOffset":122087,"endOffset":122134,"count":1}],"isBlockCoverage":true},{"functionName":"unique","ranges":[{"startOffset":122152,"endOffset":122199,"count":1}],"isBlockCoverage":true},{"functionName":"extendCommon","ranges":[{"startOffset":122497,"endOffset":123226,"count":165},{"startOffset":122613,"endOffset":123204,"count":167},{"startOffset":122674,"endOffset":122793,"count":3171},{"startOffset":123029,"endOffset":123078,"count":0},{"startOffset":123079,"endOffset":123129,"count":0},{"startOffset":123140,"endOffset":123198,"count":0}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":123611,"endOffset":125358,"count":43}],"isBlockCoverage":true},{"functionName":"copyValue","ranges":[{"startOffset":123715,"endOffset":125348,"count":947},{"startOffset":124069,"endOffset":124107,"count":0},{"startOffset":124109,"endOffset":124148,"count":0},{"startOffset":124899,"endOffset":125278,"count":0}],"isBlockCoverage":true},{"functionName":"extendNonEnum","ranges":[{"startOffset":125750,"endOffset":126128,"count":122}],"isBlockCoverage":true},{"functionName":"copyProperty","ranges":[{"startOffset":125861,"endOffset":126118,"count":2224}],"isBlockCoverage":true},{"functionName":"27","ranges":[{"startOffset":126162,"endOffset":126862,"count":1}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":126228,"endOffset":126858,"count":0}],"isBlockCoverage":false},{"functionName":"28","ranges":[{"startOffset":126871,"endOffset":127337,"count":1}],"isBlockCoverage":true},{"functionName":"nextTick","ranges":[{"startOffset":126983,"endOffset":127043,"count":0}],"isBlockCoverage":false},{"functionName":"getNextTick","ranges":[{"startOffset":127062,"endOffset":127333,"count":1},{"startOffset":127227,"endOffset":127332,"count":0}],"isBlockCoverage":true},{"functionName":"29","ranges":[{"startOffset":127346,"endOffset":129160,"count":1}],"isBlockCoverage":true},{"functionName":"getPropertyDescriptor","ranges":[{"startOffset":128667,"endOffset":129116,"count":71},{"startOffset":128804,"endOffset":128856,"count":65},{"startOffset":128892,"endOffset":128967,"count":86},{"startOffset":128974,"endOffset":129027,"count":21},{"startOffset":129049,"endOffset":129090,"count":65}],"isBlockCoverage":true},{"functionName":"30","ranges":[{"startOffset":129169,"endOffset":129759,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":129572,"endOffset":129755,"count":20},{"startOffset":129620,"endOffset":129660,"count":14},{"startOffset":129661,"endOffset":129711,"count":14},{"startOffset":129712,"endOffset":129746,"count":0}],"isBlockCoverage":true},{"functionName":"31","ranges":[{"startOffset":129768,"endOffset":130140,"count":1}],"isBlockCoverage":true},{"functionName":"isNonExistentProperty","ranges":[{"startOffset":129941,"endOffset":130096,"count":20},{"startOffset":130027,"endOffset":130061,"count":14},{"startOffset":130062,"endOffset":130086,"count":14}],"isBlockCoverage":true},{"functionName":"32../get-property-descriptor","ranges":[{"startOffset":130149,"endOffset":130504,"count":1}],"isBlockCoverage":true},{"functionName":"isPropertyConfigurable","ranges":[{"startOffset":130267,"endOffset":130459,"count":0}],"isBlockCoverage":false},{"functionName":"33","ranges":[{"startOffset":130543,"endOffset":130785,"count":1}],"isBlockCoverage":true},{"functionName":"isRestorable","ranges":[{"startOffset":130592,"endOffset":130750,"count":0}],"isBlockCoverage":false},{"functionName":"34../get-next-tick","ranges":[{"startOffset":130794,"endOffset":131030,"count":1}],"isBlockCoverage":true},{"functionName":"35","ranges":[{"startOffset":131081,"endOffset":131742,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":131461,"endOffset":131652,"count":19}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":131658,"endOffset":131735,"count":13}],"isBlockCoverage":true},{"functionName":"36","ranges":[{"startOffset":131751,"endOffset":131953,"count":1}],"isBlockCoverage":true},{"functionName":"timesInWords","ranges":[{"startOffset":131867,"endOffset":131949,"count":0}],"isBlockCoverage":false},{"functionName":"37","ranges":[{"startOffset":131962,"endOffset":132423,"count":1}],"isBlockCoverage":true},{"functionName":"usePromiseLibrary","ranges":[{"startOffset":132053,"endOffset":132383,"count":19},{"startOffset":132161,"endOffset":132381,"count":0}],"isBlockCoverage":true},{"functionName":"38../get-property-descriptor","ranges":[{"startOffset":132432,"endOffset":134121,"count":1}],"isBlockCoverage":true},{"functionName":"walkObject","ranges":[{"startOffset":133023,"endOffset":134088,"count":0}],"isBlockCoverage":false},{"functionName":"39.@sinonjs/commons","ranges":[{"startOffset":134194,"endOffset":136060,"count":1}],"isBlockCoverage":true},{"functionName":"walkInternal","ranges":[{"startOffset":134314,"endOffset":135306,"count":0}],"isBlockCoverage":false},{"functionName":"walk","ranges":[{"startOffset":135957,"endOffset":136056,"count":0}],"isBlockCoverage":false},{"functionName":"40../extend","ranges":[{"startOffset":136090,"endOffset":144864,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":136198,"endOffset":136206,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":136574,"endOffset":136724,"count":13},{"startOffset":136648,"endOffset":136715,"count":0}],"isBlockCoverage":true},{"functionName":"mirrorProperties","ranges":[{"startOffset":136726,"endOffset":136906,"count":26},{"startOffset":136801,"endOffset":136904,"count":65},{"startOffset":136846,"endOffset":136898,"count":52}],"isBlockCoverage":true},{"functionName":"getAccessor","ranges":[{"startOffset":136908,"endOffset":137299,"count":26},{"startOffset":137107,"endOffset":137280,"count":52},{"startOffset":137159,"endOffset":137219,"count":0},{"startOffset":137230,"endOffset":137274,"count":0}],"isBlockCoverage":true},{"functionName":"wrapMethod","ranges":[{"startOffset":137406,"endOffset":144860,"count":13},{"startOffset":137471,"endOffset":137541,"count":0},{"startOffset":137580,"endOffset":137609,"count":0},{"startOffset":137611,"endOffset":137734,"count":0},{"startOffset":139400,"endOffset":139434,"count":0},{"startOffset":139550,"endOffset":139558,"count":0},{"startOffset":139662,"endOffset":139817,"count":0},{"startOffset":139866,"endOffset":139912,"count":0},{"startOffset":139923,"endOffset":140058,"count":0},{"startOffset":140078,"endOffset":140297,"count":0},{"startOffset":140897,"endOffset":140952,"count":7},{"startOffset":141190,"endOffset":141431,"count":0},{"startOffset":141437,"endOffset":141486,"count":0}],"isBlockCoverage":true},{"functionName":"checkWrappedMethod","ranges":[{"startOffset":137740,"endOffset":138841,"count":13},{"startOffset":137845,"endOffset":138054,"count":0},{"startOffset":138086,"endOffset":138116,"count":0},{"startOffset":138118,"endOffset":138307,"count":0},{"startOffset":138345,"endOffset":138607,"count":0},{"startOffset":138628,"endOffset":138835,"count":0}],"isBlockCoverage":true},{"functionName":"simplePropertyAssignment","ranges":[{"startOffset":138950,"endOffset":139152,"count":0}],"isBlockCoverage":false},{"functionName":"extendObjectWithWrappedMethods","ranges":[{"startOffset":141531,"endOffset":142338,"count":13},{"startOffset":141732,"endOffset":141750,"count":0},{"startOffset":142250,"endOffset":142322,"count":0}],"isBlockCoverage":true},{"functionName":"restore","ranges":[{"startOffset":142344,"endOffset":144838,"count":13},{"startOffset":142661,"endOffset":143869,"count":0},{"startOffset":143901,"endOffset":144046,"count":7},{"startOffset":143988,"endOffset":144000,"count":0},{"startOffset":144046,"endOffset":144162,"count":6},{"startOffset":144330,"endOffset":144408,"count":0},{"startOffset":144422,"endOffset":144571,"count":0},{"startOffset":144637,"endOffset":144832,"count":0}],"isBlockCoverage":true},{"functionName":"41../core/extend","ranges":[{"startOffset":144957,"endOffset":147304,"count":1}],"isBlockCoverage":true},{"functionName":"createClock","ranges":[{"startOffset":145292,"endOffset":145602,"count":0}],"isBlockCoverage":false},{"functionName":"addIfDefined","ranges":[{"startOffset":145654,"endOffset":145846,"count":2}],"isBlockCoverage":true},{"functionName":"exports.useFakeTimers","ranges":[{"startOffset":146025,"endOffset":146933,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":146966,"endOffset":147032,"count":0}],"isBlockCoverage":false},{"functionName":"42../prototypes/array","ranges":[{"startOffset":147379,"endOffset":148854,"count":1}],"isBlockCoverage":true},{"functionName":"hasCallsLeft","ranges":[{"startOffset":147498,"endOffset":147658,"count":0}],"isBlockCoverage":false},{"functionName":"checkAdjacentCalls","ranges":[{"startOffset":147680,"endOffset":148015,"count":0}],"isBlockCoverage":false},{"functionName":"calledInOrder","ranges":[{"startOffset":148584,"endOffset":148818,"count":0}],"isBlockCoverage":false},{"functionName":"43","ranges":[{"startOffset":148886,"endOffset":149238,"count":1}],"isBlockCoverage":true},{"functionName":"className","ranges":[{"startOffset":149090,"endOffset":149206,"count":0}],"isBlockCoverage":false},{"functionName":"44","ranges":[{"startOffset":149247,"endOffset":150637,"count":1}],"isBlockCoverage":true},{"functionName":"exports.wrap","ranges":[{"startOffset":149560,"endOffset":149798,"count":0}],"isBlockCoverage":false},{"functionName":"exports.defaultMsg","ranges":[{"startOffset":150049,"endOffset":150219,"count":0}],"isBlockCoverage":false},{"functionName":"exports.printWarning","ranges":[{"startOffset":150352,"endOffset":150633,"count":0}],"isBlockCoverage":false},{"functionName":"45","ranges":[{"startOffset":150646,"endOffset":151345,"count":1}],"isBlockCoverage":true},{"functionName":"every","ranges":[{"startOffset":150918,"endOffset":151341,"count":0}],"isBlockCoverage":false},{"functionName":"46","ranges":[{"startOffset":151354,"endOffset":152205,"count":1}],"isBlockCoverage":true},{"functionName":"functionName","ranges":[{"startOffset":151517,"endOffset":152201,"count":13},{"startOffset":151562,"endOffset":151588,"count":0},{"startOffset":151671,"endOffset":152024,"count":6},{"startOffset":152042,"endOffset":152199,"count":0}],"isBlockCoverage":true},{"functionName":"47","ranges":[{"startOffset":152214,"endOffset":152633,"count":1},{"startOffset":152461,"endOffset":152598,"count":0}],"isBlockCoverage":true},{"functionName":"48../called-in-order","ranges":[{"startOffset":152642,"endOffset":153135,"count":2}],"isBlockCoverage":true},{"functionName":"49../prototypes/array","ranges":[{"startOffset":153333,"endOffset":154180,"count":1}],"isBlockCoverage":true},{"functionName":"comparator","ranges":[{"startOffset":153499,"endOffset":153743,"count":0}],"isBlockCoverage":false},{"functionName":"orderByFirstCall","ranges":[{"startOffset":154062,"endOffset":154141,"count":0}],"isBlockCoverage":false},{"functionName":"50../copy-prototype-methods","ranges":[{"startOffset":154212,"endOffset":154370,"count":2}],"isBlockCoverage":true},{"functionName":"51../throws-on-proto","ranges":[{"startOffset":154408,"endOffset":155454,"count":2},{"startOffset":154865,"endOffset":154912,"count":0}],"isBlockCoverage":true},{"functionName":"copyPrototypeMethods","ranges":[{"startOffset":154931,"endOffset":155450,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":155113,"endOffset":155421,"count":268},{"startOffset":155210,"endOffset":155248,"count":8},{"startOffset":155248,"endOffset":155301,"count":260},{"startOffset":155301,"endOffset":155339,"count":10},{"startOffset":155339,"endOffset":155420,"count":250}],"isBlockCoverage":true},{"functionName":"52../copy-prototype-methods","ranges":[{"startOffset":155485,"endOffset":155646,"count":2}],"isBlockCoverage":true},{"functionName":"53../array","ranges":[{"startOffset":155684,"endOffset":155945,"count":2}],"isBlockCoverage":true},{"functionName":"54../copy-prototype-methods","ranges":[{"startOffset":156032,"endOffset":156188,"count":2}],"isBlockCoverage":true},{"functionName":"55../copy-prototype-methods","ranges":[{"startOffset":156226,"endOffset":156385,"count":2}],"isBlockCoverage":true},{"functionName":"56../copy-prototype-methods","ranges":[{"startOffset":156423,"endOffset":156579,"count":2}],"isBlockCoverage":true},{"functionName":"57../copy-prototype-methods","ranges":[{"startOffset":156617,"endOffset":156776,"count":2}],"isBlockCoverage":true},{"functionName":"58","ranges":[{"startOffset":156814,"endOffset":157593,"count":1},{"startOffset":157330,"endOffset":157557,"count":0}],"isBlockCoverage":true},{"functionName":"59.type-detect","ranges":[{"startOffset":157602,"endOffset":157901,"count":1}],"isBlockCoverage":true},{"functionName":"typeOf","ranges":[{"startOffset":157833,"endOffset":157897,"count":0}],"isBlockCoverage":false},{"functionName":"60","ranges":[{"startOffset":157927,"endOffset":158330,"count":1}],"isBlockCoverage":true},{"functionName":"valueToString","ranges":[{"startOffset":158074,"endOffset":158294,"count":1},{"startOffset":158266,"endOffset":158293,"count":0}],"isBlockCoverage":true},{"functionName":"61.@sinonjs/commons","ranges":[{"startOffset":158339,"endOffset":219819,"count":1},{"startOffset":158588,"endOffset":158624,"count":0}],"isBlockCoverage":true},{"functionName":"withGlobal","ranges":[{"startOffset":163392,"endOffset":219336,"count":1},{"startOffset":164842,"endOffset":164904,"count":0},{"startOffset":164983,"endOffset":165044,"count":0},{"startOffset":165121,"endOffset":165181,"count":0},{"startOffset":165256,"endOffset":165315,"count":0},{"startOffset":191927,"endOffset":192004,"count":0},{"startOffset":192121,"endOffset":192196,"count":0},{"startOffset":192234,"endOffset":192307,"count":0},{"startOffset":192344,"endOffset":192415,"count":0},{"startOffset":192535,"endOffset":192556,"count":0}],"isBlockCoverage":true},{"functionName":"NOOP","ranges":[{"startOffset":163654,"endOffset":163699,"count":0}],"isBlockCoverage":false},{"functionName":"NOOP_ARRAY","ranges":[{"startOffset":163724,"endOffset":163762,"count":0}],"isBlockCoverage":false},{"functionName":"isNumberFinite","ranges":[{"startOffset":165730,"endOffset":165879,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsNearInfiniteLimit","ranges":[{"startOffset":165992,"endOffset":166153,"count":0}],"isBlockCoverage":false},{"functionName":"resetIsNearInfiniteLimit","ranges":[{"startOffset":166182,"endOffset":166262,"count":0}],"isBlockCoverage":false},{"functionName":"parseTime","ranges":[{"startOffset":166533,"endOffset":167223,"count":0}],"isBlockCoverage":false},{"functionName":"nanoRemainder","ranges":[{"startOffset":167515,"endOffset":167775,"count":0}],"isBlockCoverage":false},{"functionName":"getEpoch","ranges":[{"startOffset":167935,"endOffset":168271,"count":0}],"isBlockCoverage":false},{"functionName":"inRange","ranges":[{"startOffset":168401,"endOffset":168510,"count":0}],"isBlockCoverage":false},{"functionName":"getInfiniteLoopError","ranges":[{"startOffset":168586,"endOffset":170878,"count":0}],"isBlockCoverage":false},{"functionName":"mirrorDateProperties","ranges":[{"startOffset":171010,"endOffset":172088,"count":0}],"isBlockCoverage":false},{"functionName":"createDate","ranges":[{"startOffset":172145,"endOffset":174259,"count":0}],"isBlockCoverage":false},{"functionName":"createIntl","ranges":[{"startOffset":174569,"endOffset":175852,"count":0}],"isBlockCoverage":false},{"functionName":"enqueueJob","ranges":[{"startOffset":175909,"endOffset":176116,"count":0}],"isBlockCoverage":false},{"functionName":"runJobs","ranges":[{"startOffset":176173,"endOffset":176714,"count":0}],"isBlockCoverage":false},{"functionName":"addTimer","ranges":[{"startOffset":176841,"endOffset":179689,"count":0}],"isBlockCoverage":false},{"functionName":"compareTimers","ranges":[{"startOffset":179857,"endOffset":180761,"count":0}],"isBlockCoverage":false},{"functionName":"firstTimerInRange","ranges":[{"startOffset":180889,"endOffset":181415,"count":0}],"isBlockCoverage":false},{"functionName":"firstTimer","ranges":[{"startOffset":181489,"endOffset":181854,"count":0}],"isBlockCoverage":false},{"functionName":"lastTimer","ranges":[{"startOffset":181928,"endOffset":182293,"count":0}],"isBlockCoverage":false},{"functionName":"callTimer","ranges":[{"startOffset":182371,"endOffset":182868,"count":0}],"isBlockCoverage":false},{"functionName":"getClearHandler","ranges":[{"startOffset":182980,"endOffset":183168,"count":0}],"isBlockCoverage":false},{"functionName":"getScheduleHandler","ranges":[{"startOffset":183283,"endOffset":183473,"count":0}],"isBlockCoverage":false},{"functionName":"createWarnOnce","ranges":[{"startOffset":183550,"endOffset":183732,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":183616,"endOffset":183725,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimer","ranges":[{"startOffset":183881,"endOffset":185784,"count":0}],"isBlockCoverage":false},{"functionName":"uninstall","ranges":[{"startOffset":185890,"endOffset":188329,"count":0}],"isBlockCoverage":false},{"functionName":"hijackMethod","ranges":[{"startOffset":188523,"endOffset":190225,"count":0}],"isBlockCoverage":false},{"functionName":"doIntervalTick","ranges":[{"startOffset":190315,"endOffset":190409,"count":0}],"isBlockCoverage":false},{"functionName":"createClock","ranges":[{"startOffset":192787,"endOffset":214285,"count":0}],"isBlockCoverage":false},{"functionName":"install","ranges":[{"startOffset":214417,"endOffset":219161,"count":0}],"isBlockCoverage":false},{"functionName":"62","ranges":[{"startOffset":219873,"endOffset":220145,"count":1}],"isBlockCoverage":true},{"functionName":"63../create-matcher/assert-matcher","ranges":[{"startOffset":220154,"endOffset":232449,"count":1}],"isBlockCoverage":true},{"functionName":"createMatcher","ranges":[{"startOffset":221643,"endOffset":222594,"count":15},{"startOffset":221834,"endOffset":221900,"count":0},{"startOffset":221932,"endOffset":222049,"count":0},{"startOffset":222133,"endOffset":222245,"count":0},{"startOffset":222267,"endOffset":222334,"count":0}],"isBlockCoverage":true},{"functionName":"m.test","ranges":[{"startOffset":222158,"endOffset":222238,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":222668,"endOffset":222700,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":222749,"endOffset":222822,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":222874,"endOffset":222923,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":222973,"endOffset":223014,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.same","ranges":[{"startOffset":223048,"endOffset":223205,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.in","ranges":[{"startOffset":223227,"endOffset":223585,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.typeOf","ranges":[{"startOffset":223611,"endOffset":223784,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":223694,"endOffset":223759,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.instanceOf","ranges":[{"startOffset":223814,"endOffset":224332,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyMatcher","ranges":[{"startOffset":224588,"endOffset":225313,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":224661,"endOffset":225310,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":225357,"endOffset":225510,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":225566,"endOffset":225642,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.hasNested","ranges":[{"startOffset":225682,"endOffset":226261,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.json","ranges":[{"startOffset":226423,"endOffset":226870,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.every","ranges":[{"startOffset":226895,"endOffset":227391,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.some","ranges":[{"startOffset":227415,"endOffset":227914,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.array.deepEquals","ranges":[{"startOffset":228004,"endOffset":228749,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.array.startsWith","ranges":[{"startOffset":228785,"endOffset":229124,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.array.endsWith","ranges":[{"startOffset":229158,"endOffset":229632,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.array.contains","ranges":[{"startOffset":229666,"endOffset":230007,"count":0}],"isBlockCoverage":false},{"functionName":"mapDeepEquals","ranges":[{"startOffset":230091,"endOffset":230642,"count":0}],"isBlockCoverage":false},{"functionName":"mapContains","ranges":[{"startOffset":230674,"endOffset":231026,"count":0}],"isBlockCoverage":false},{"functionName":"setDeepEquals","ranges":[{"startOffset":231110,"endOffset":231624,"count":0}],"isBlockCoverage":false},{"functionName":"setContains","ranges":[{"startOffset":231656,"endOffset":231976,"count":0}],"isBlockCoverage":false},{"functionName":"64../is-matcher","ranges":[{"startOffset":232792,"endOffset":233152,"count":1}],"isBlockCoverage":true},{"functionName":"assertMatcher","ranges":[{"startOffset":232999,"endOffset":233116,"count":0}],"isBlockCoverage":false},{"functionName":"65","ranges":[{"startOffset":233178,"endOffset":233851,"count":1}],"isBlockCoverage":true},{"functionName":"assertMethodExists","ranges":[{"startOffset":233597,"endOffset":233810,"count":0}],"isBlockCoverage":false},{"functionName":"66.@sinonjs/commons","ranges":[{"startOffset":233860,"endOffset":234539,"count":1}],"isBlockCoverage":true},{"functionName":"assertType","ranges":[{"startOffset":234287,"endOffset":234506,"count":11},{"startOffset":234385,"endOffset":234504,"count":0}],"isBlockCoverage":true},{"functionName":"67.@sinonjs/commons","ranges":[{"startOffset":234569,"endOffset":234965,"count":1}],"isBlockCoverage":true},{"functionName":"isIterable","ranges":[{"startOffset":234835,"endOffset":234932,"count":0}],"isBlockCoverage":false},{"functionName":"68../matcher-prototype","ranges":[{"startOffset":234995,"endOffset":235468,"count":1}],"isBlockCoverage":true},{"functionName":"isMatcher","ranges":[{"startOffset":235354,"endOffset":235436,"count":0}],"isBlockCoverage":false},{"functionName":"69.../deep-equal","ranges":[{"startOffset":235523,"endOffset":237221,"count":1}],"isBlockCoverage":true},{"functionName":"matchObject","ranges":[{"startOffset":236250,"endOffset":237187,"count":0}],"isBlockCoverage":false},{"functionName":"70.../create-matcher","ranges":[{"startOffset":237288,"endOffset":238609,"count":1}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":237376,"endOffset":237424,"count":0}],"isBlockCoverage":false},{"functionName":"matcherPrototype.or","ranges":[{"startOffset":237452,"endOffset":237995,"count":0}],"isBlockCoverage":false},{"functionName":"matcherPrototype.and","ranges":[{"startOffset":238021,"endOffset":238569,"count":0}],"isBlockCoverage":false},{"functionName":"71../match-object","ranges":[{"startOffset":238640,"endOffset":240801,"count":1}],"isBlockCoverage":true},{"functionName":"createTypeMap","ranges":[{"startOffset":239077,"endOffset":240764,"count":1}],"isBlockCoverage":true},{"functionName":"function","ranges":[{"startOffset":239127,"endOffset":239281,"count":15},{"startOffset":239230,"endOffset":239270,"count":0}],"isBlockCoverage":true},{"functionName":"number","ranges":[{"startOffset":239299,"endOffset":239514,"count":0}],"isBlockCoverage":false},{"functionName":"object","ranges":[{"startOffset":239532,"endOffset":240246,"count":0}],"isBlockCoverage":false},{"functionName":"regexp","ranges":[{"startOffset":240264,"endOffset":240436,"count":0}],"isBlockCoverage":false},{"functionName":"string","ranges":[{"startOffset":240454,"endOffset":240754,"count":0}],"isBlockCoverage":false},{"functionName":"72../get-class","ranges":[{"startOffset":240851,"endOffset":252056,"count":1}],"isBlockCoverage":true},{"functionName":"deepEqualCyclic","ranges":[{"startOffset":242752,"endOffset":251883,"count":0}],"isBlockCoverage":false},{"functionName":"deepEqualCyclic.use","ranges":[{"startOffset":251907,"endOffset":252017,"count":3}],"isBlockCoverage":true},{"functionName":"deepEqual","ranges":[{"startOffset":251937,"endOffset":252014,"count":0}],"isBlockCoverage":false},{"functionName":"73.@sinonjs/commons","ranges":[{"startOffset":252289,"endOffset":252824,"count":1}],"isBlockCoverage":true},{"functionName":"getClass","ranges":[{"startOffset":252719,"endOffset":252793,"count":0}],"isBlockCoverage":false},{"functionName":"74../is-nan","ranges":[{"startOffset":252854,"endOffset":253890,"count":1}],"isBlockCoverage":true},{"functionName":"identical","ranges":[{"startOffset":253676,"endOffset":253858,"count":0}],"isBlockCoverage":false},{"functionName":"75../get-class","ranges":[{"startOffset":253931,"endOffset":254369,"count":1}],"isBlockCoverage":true},{"functionName":"isArguments","ranges":[{"startOffset":254258,"endOffset":254335,"count":0}],"isBlockCoverage":false},{"functionName":"76../array-types","ranges":[{"startOffset":254394,"endOffset":255049,"count":1}],"isBlockCoverage":true},{"functionName":"isArrayType","ranges":[{"startOffset":254910,"endOffset":255015,"count":0}],"isBlockCoverage":false},{"functionName":"77","ranges":[{"startOffset":255116,"endOffset":255446,"count":1}],"isBlockCoverage":true},{"functionName":"isDate","ranges":[{"startOffset":255357,"endOffset":255417,"count":0}],"isBlockCoverage":false},{"functionName":"78","ranges":[{"startOffset":255455,"endOffset":256260,"count":1},{"startOffset":255546,"endOffset":255578,"count":0}],"isBlockCoverage":true},{"functionName":"isElement","ranges":[{"startOffset":255979,"endOffset":256228,"count":0}],"isBlockCoverage":false},{"functionName":"79","ranges":[{"startOffset":256269,"endOffset":256780,"count":1}],"isBlockCoverage":true},{"functionName":"isIterable","ranges":[{"startOffset":256564,"endOffset":256747,"count":0}],"isBlockCoverage":false},{"functionName":"80","ranges":[{"startOffset":256789,"endOffset":257141,"count":1}],"isBlockCoverage":true},{"functionName":"isMap","ranges":[{"startOffset":257025,"endOffset":257113,"count":0}],"isBlockCoverage":false},{"functionName":"81","ranges":[{"startOffset":257150,"endOffset":257652,"count":1}],"isBlockCoverage":true},{"functionName":"isNaN","ranges":[{"startOffset":257351,"endOffset":257624,"count":0}],"isBlockCoverage":false},{"functionName":"82","ranges":[{"startOffset":257661,"endOffset":258003,"count":1}],"isBlockCoverage":true},{"functionName":"isNegZero","ranges":[{"startOffset":257891,"endOffset":257971,"count":0}],"isBlockCoverage":false},{"functionName":"83","ranges":[{"startOffset":258012,"endOffset":259013,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":258576,"endOffset":258982,"count":0}],"isBlockCoverage":false},{"functionName":"84","ranges":[{"startOffset":259022,"endOffset":259449,"count":1}],"isBlockCoverage":true},{"functionName":"isSet","ranges":[{"startOffset":259326,"endOffset":259421,"count":0}],"isBlockCoverage":false},{"functionName":"85.@sinonjs/commons","ranges":[{"startOffset":259458,"endOffset":260365,"count":1}],"isBlockCoverage":true},{"functionName":"isSubset","ranges":[{"startOffset":259992,"endOffset":260334,"count":0}],"isBlockCoverage":false},{"functionName":"86.@sinonjs/commons","ranges":[{"startOffset":260395,"endOffset":262307,"count":1}],"isBlockCoverage":true},{"functionName":"iterableToString","ranges":[{"startOffset":260808,"endOffset":260956,"count":0}],"isBlockCoverage":false},{"functionName":"mapToString","ranges":[{"startOffset":261120,"endOffset":261459,"count":0}],"isBlockCoverage":false},{"functionName":"genericIterableToString","ranges":[{"startOffset":261643,"endOffset":261979,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":262167,"endOffset":262268,"count":0}],"isBlockCoverage":false},{"functionName":"87../create-matcher","ranges":[{"startOffset":262337,"endOffset":267890,"count":1}],"isBlockCoverage":true},{"functionName":"arrayContains","ranges":[{"startOffset":263245,"endOffset":263790,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":264104,"endOffset":267736,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":267805,"endOffset":267860,"count":26}],"isBlockCoverage":true},{"functionName":"88../create-matcher","ranges":[{"startOffset":268016,"endOffset":268717,"count":1}],"isBlockCoverage":true},{"functionName":"89../prototypes/array","ranges":[{"startOffset":268880,"endOffset":270361,"count":1}],"isBlockCoverage":true},{"functionName":"hasCallsLeft","ranges":[{"startOffset":268999,"endOffset":269159,"count":0}],"isBlockCoverage":false},{"functionName":"checkAdjacentCalls","ranges":[{"startOffset":269181,"endOffset":269516,"count":0}],"isBlockCoverage":false},{"functionName":"calledInOrder","ranges":[{"startOffset":270091,"endOffset":270325,"count":0}],"isBlockCoverage":false},{"functionName":"90../function-name","ranges":[{"startOffset":270393,"endOffset":271350,"count":1}],"isBlockCoverage":true},{"functionName":"className","ranges":[{"startOffset":270648,"endOffset":271318,"count":0}],"isBlockCoverage":false},{"functionName":"91","ranges":[{"startOffset":271379,"endOffset":272778,"count":1}],"isBlockCoverage":true},{"functionName":"exports.wrap","ranges":[{"startOffset":271695,"endOffset":271933,"count":0}],"isBlockCoverage":false},{"functionName":"exports.defaultMsg","ranges":[{"startOffset":272187,"endOffset":272357,"count":0}],"isBlockCoverage":false},{"functionName":"exports.printWarning","ranges":[{"startOffset":272493,"endOffset":272774,"count":0}],"isBlockCoverage":false},{"functionName":"92","ranges":[{"startOffset":272787,"endOffset":273489,"count":1}],"isBlockCoverage":true},{"functionName":"every","ranges":[{"startOffset":273062,"endOffset":273485,"count":0}],"isBlockCoverage":false},{"functionName":"93","ranges":[{"startOffset":273498,"endOffset":274352,"count":1}],"isBlockCoverage":true},{"functionName":"functionName","ranges":[{"startOffset":273664,"endOffset":274348,"count":0}],"isBlockCoverage":false},{"functionName":"94","ranges":[{"startOffset":274361,"endOffset":274783,"count":1},{"startOffset":274611,"endOffset":274748,"count":0}],"isBlockCoverage":true},{"functionName":"95../called-in-order","ranges":[{"startOffset":274792,"endOffset":274872,"count":1}],"isBlockCoverage":true},{"functionName":"96../prototypes/array","ranges":[{"startOffset":275082,"endOffset":275935,"count":1}],"isBlockCoverage":true},{"functionName":"comparator","ranges":[{"startOffset":275248,"endOffset":275492,"count":0}],"isBlockCoverage":false},{"functionName":"orderByFirstCall","ranges":[{"startOffset":275817,"endOffset":275896,"count":0}],"isBlockCoverage":false},{"functionName":"97../copy-prototype-methods","ranges":[{"startOffset":275967,"endOffset":276047,"count":1}],"isBlockCoverage":true},{"functionName":"98../throws-on-proto","ranges":[{"startOffset":276094,"endOffset":276174,"count":1}],"isBlockCoverage":true},{"functionName":"99../copy-prototype-methods","ranges":[{"startOffset":276215,"endOffset":276295,"count":1}],"isBlockCoverage":true},{"functionName":"100../array","ranges":[{"startOffset":276343,"endOffset":276423,"count":1}],"isBlockCoverage":true},{"functionName":"101../copy-prototype-methods","ranges":[{"startOffset":276524,"endOffset":276604,"count":1}],"isBlockCoverage":true},{"functionName":"102../copy-prototype-methods","ranges":[{"startOffset":276652,"endOffset":276732,"count":1}],"isBlockCoverage":true},{"functionName":"103../copy-prototype-methods","ranges":[{"startOffset":276780,"endOffset":276860,"count":1}],"isBlockCoverage":true},{"functionName":"104../copy-prototype-methods","ranges":[{"startOffset":276908,"endOffset":276988,"count":1}],"isBlockCoverage":true},{"functionName":"105","ranges":[{"startOffset":277036,"endOffset":277821,"count":1},{"startOffset":277558,"endOffset":277785,"count":0}],"isBlockCoverage":true},{"functionName":"106.type-detect","ranges":[{"startOffset":277831,"endOffset":278133,"count":1}],"isBlockCoverage":true},{"functionName":"typeOf","ranges":[{"startOffset":278065,"endOffset":278129,"count":26}],"isBlockCoverage":true},{"functionName":"107","ranges":[{"startOffset":278160,"endOffset":278566,"count":1}],"isBlockCoverage":true},{"functionName":"valueToString","ranges":[{"startOffset":278310,"endOffset":278530,"count":0}],"isBlockCoverage":false},{"functionName":"108../lib/encoding.js","ranges":[{"startOffset":278576,"endOffset":278870,"count":0}],"isBlockCoverage":false},{"functionName":"109","ranges":[{"startOffset":278903,"endOffset":809032,"count":0}],"isBlockCoverage":false},{"functionName":"110../encoding-indexes.js","ranges":[{"startOffset":809042,"endOffset":910478,"count":0}],"isBlockCoverage":false},{"functionName":"111.object.assign/polyfill","ranges":[{"startOffset":910515,"endOffset":926557,"count":1},{"startOffset":926424,"endOffset":926553,"count":0}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":910918,"endOffset":911237,"count":0}],"isBlockCoverage":false},{"functionName":"isBuffer","ranges":[{"startOffset":911238,"endOffset":911414,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":913002,"endOffset":913060,"count":1}],"isBlockCoverage":true},{"functionName":"foo","ranges":[{"startOffset":913025,"endOffset":913042,"count":0}],"isBlockCoverage":false},{"functionName":"pToString","ranges":[{"startOffset":913065,"endOffset":913139,"count":0}],"isBlockCoverage":false},{"functionName":"isView","ranges":[{"startOffset":913140,"endOffset":913576,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":914155,"endOffset":914372,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError","ranges":[{"startOffset":914397,"endOffset":915451,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":915542,"endOffset":915674,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":915675,"endOffset":915921,"count":0}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":915922,"endOffset":916083,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":916581,"endOffset":916830,"count":0}],"isBlockCoverage":false},{"functionName":"ok","ranges":[{"startOffset":917207,"endOffset":917297,"count":1},{"startOffset":917251,"endOffset":917295,"count":0}],"isBlockCoverage":true},{"functionName":"equal","ranges":[{"startOffset":917453,"endOffset":917577,"count":0}],"isBlockCoverage":false},{"functionName":"notEqual","ranges":[{"startOffset":917735,"endOffset":917875,"count":0}],"isBlockCoverage":false},{"functionName":"deepEqual","ranges":[{"startOffset":918014,"endOffset":918181,"count":0}],"isBlockCoverage":false},{"functionName":"deepStrictEqual","ranges":[{"startOffset":918209,"endOffset":918393,"count":0}],"isBlockCoverage":false},{"functionName":"_deepEqual","ranges":[{"startOffset":918396,"endOffset":921346,"count":0}],"isBlockCoverage":false},{"functionName":"isArguments","ranges":[{"startOffset":921348,"endOffset":921453,"count":0}],"isBlockCoverage":false},{"functionName":"objEquiv","ranges":[{"startOffset":921455,"endOffset":922716,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepEqual","ranges":[{"startOffset":922863,"endOffset":923038,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepStrictEqual","ranges":[{"startOffset":923089,"endOffset":923274,"count":0}],"isBlockCoverage":false},{"functionName":"strictEqual","ranges":[{"startOffset":923434,"endOffset":923582,"count":0}],"isBlockCoverage":false},{"functionName":"notStrictEqual","ranges":[{"startOffset":923760,"endOffset":923914,"count":0}],"isBlockCoverage":false},{"functionName":"expectedException","ranges":[{"startOffset":923917,"endOffset":924398,"count":0}],"isBlockCoverage":false},{"functionName":"_tryBlock","ranges":[{"startOffset":924400,"endOffset":924514,"count":0}],"isBlockCoverage":false},{"functionName":"_throws","ranges":[{"startOffset":924516,"endOffset":925580,"count":0}],"isBlockCoverage":false},{"functionName":"assert.throws","ranges":[{"startOffset":925683,"endOffset":925782,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotThrow","ranges":[{"startOffset":925868,"endOffset":925968,"count":0}],"isBlockCoverage":false},{"functionName":"assert.ifError","ranges":[{"startOffset":925988,"endOffset":926025,"count":0}],"isBlockCoverage":false},{"functionName":"strict","ranges":[{"startOffset":926070,"endOffset":926161,"count":0}],"isBlockCoverage":false},{"functionName":"objectKeys","ranges":[{"startOffset":926427,"endOffset":926553,"count":0}],"isBlockCoverage":false},{"functionName":"112","ranges":[{"startOffset":926607,"endOffset":927315,"count":2},{"startOffset":927024,"endOffset":927312,"count":0}],"isBlockCoverage":true},{"functionName":"inherits","ranges":[{"startOffset":926759,"endOffset":927021,"count":1}],"isBlockCoverage":true},{"functionName":"inherits","ranges":[{"startOffset":927089,"endOffset":927310,"count":0}],"isBlockCoverage":false},{"functionName":"113","ranges":[{"startOffset":927325,"endOffset":927564,"count":2}],"isBlockCoverage":true},{"functionName":"isBuffer","ranges":[{"startOffset":927376,"endOffset":927562,"count":0}],"isBlockCoverage":false},{"functionName":"114../support/isBuffer","ranges":[{"startOffset":927574,"endOffset":943173,"count":2}],"isBlockCoverage":true},{"functionName":"exports.format","ranges":[{"startOffset":928790,"endOffset":929625,"count":0}],"isBlockCoverage":false},{"functionName":"exports.deprecate","ranges":[{"startOffset":929802,"endOffset":930435,"count":0}],"isBlockCoverage":false},{"functionName":"exports.debuglog","ranges":[{"startOffset":930493,"endOffset":930970,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":931263,"endOffset":931996,"count":0}],"isBlockCoverage":false},{"functionName":"stylizeWithColor","ranges":[{"startOffset":932665,"endOffset":932915,"count":0}],"isBlockCoverage":false},{"functionName":"stylizeNoColor","ranges":[{"startOffset":932918,"endOffset":932975,"count":0}],"isBlockCoverage":false},{"functionName":"arrayToHash","ranges":[{"startOffset":932978,"endOffset":933108,"count":0}],"isBlockCoverage":false},{"functionName":"formatValue","ranges":[{"startOffset":933111,"endOffset":936227,"count":0}],"isBlockCoverage":false},{"functionName":"formatPrimitive","ranges":[{"startOffset":936230,"endOffset":936896,"count":0}],"isBlockCoverage":false},{"functionName":"formatError","ranges":[{"startOffset":936899,"endOffset":936989,"count":0}],"isBlockCoverage":false},{"functionName":"formatArray","ranges":[{"startOffset":936992,"endOffset":937507,"count":0}],"isBlockCoverage":false},{"functionName":"formatProperty","ranges":[{"startOffset":937510,"endOffset":939127,"count":0}],"isBlockCoverage":false},{"functionName":"reduceToSingleString","ranges":[{"startOffset":939130,"endOffset":939657,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":939809,"endOffset":939861,"count":0}],"isBlockCoverage":false},{"functionName":"isBoolean","ranges":[{"startOffset":939890,"endOffset":939952,"count":0}],"isBlockCoverage":false},{"functionName":"isNull","ranges":[{"startOffset":939985,"endOffset":940032,"count":0}],"isBlockCoverage":false},{"functionName":"isNullOrUndefined","ranges":[{"startOffset":940059,"endOffset":940116,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":940165,"endOffset":940225,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":940256,"endOffset":940316,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":940347,"endOffset":940407,"count":0}],"isBlockCoverage":false},{"functionName":"isUndefined","ranges":[{"startOffset":940438,"endOffset":940492,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":940529,"endOffset":940621,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":940652,"endOffset":940728,"count":0}],"isBlockCoverage":false},{"functionName":"isDate","ranges":[{"startOffset":940759,"endOffset":940844,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":940871,"endOffset":940988,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":941017,"endOffset":941081,"count":0}],"isBlockCoverage":false},{"functionName":"isPrimitive","ranges":[{"startOffset":941116,"endOffset":941367,"count":0}],"isBlockCoverage":false},{"functionName":"objectToString","ranges":[{"startOffset":941455,"endOffset":941529,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":941532,"endOffset":941608,"count":0}],"isBlockCoverage":false},{"functionName":"timestamp","ranges":[{"startOffset":941744,"endOffset":941966,"count":0}],"isBlockCoverage":false},{"functionName":"exports.log","ranges":[{"startOffset":942054,"endOffset":942149,"count":0}],"isBlockCoverage":false},{"functionName":"exports._extend","ranges":[{"startOffset":942827,"endOffset":943071,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwnProperty","ranges":[{"startOffset":943074,"endOffset":943170,"count":0}],"isBlockCoverage":false},{"functionName":"115.dup","ranges":[{"startOffset":943222,"endOffset":943303,"count":1}],"isBlockCoverage":true},{"functionName":"116.dup","ranges":[{"startOffset":943322,"endOffset":943403,"count":1}],"isBlockCoverage":true},{"functionName":"117../support/isBuffer","ranges":[{"startOffset":943422,"endOffset":943503,"count":1}],"isBlockCoverage":true},{"functionName":"118../","ranges":[{"startOffset":943562,"endOffset":944011,"count":1}],"isBlockCoverage":true},{"functionName":"callBoundIntrinsic","ranges":[{"startOffset":943773,"endOffset":944007,"count":2},{"startOffset":943986,"endOffset":944006,"count":0}],"isBlockCoverage":true},{"functionName":"119.es-define-property","ranges":[{"startOffset":944049,"endOffset":945122,"count":1},{"startOffset":944451,"endOffset":944478,"count":0},{"startOffset":945075,"endOffset":945119,"count":0}],"isBlockCoverage":true},{"functionName":"callBind","ranges":[{"startOffset":944591,"endOffset":944892,"count":3},{"startOffset":944674,"endOffset":944728,"count":0}],"isBlockCoverage":true},{"functionName":"applyBind","ranges":[{"startOffset":944911,"endOffset":944983,"count":0}],"isBlockCoverage":false},{"functionName":"120.es-define-property","ranges":[{"startOffset":945243,"endOffset":947615,"count":1}],"isBlockCoverage":true},{"functionName":"defineDataProperty","ranges":[{"startOffset":945512,"endOffset":947611,"count":3},{"startOffset":945638,"endOffset":945708,"count":0},{"startOffset":945743,"endOffset":945774,"count":0},{"startOffset":945776,"endOffset":945848,"count":0},{"startOffset":945912,"endOffset":945936,"count":0},{"startOffset":945938,"endOffset":946025,"count":0},{"startOffset":946089,"endOffset":946113,"count":0},{"startOffset":946115,"endOffset":946200,"count":0},{"startOffset":946227,"endOffset":946263,"count":0},{"startOffset":946264,"endOffset":946288,"count":0},{"startOffset":946290,"endOffset":946379,"count":0},{"startOffset":946406,"endOffset":946442,"count":0},{"startOffset":946444,"endOffset":946515,"count":0},{"startOffset":946574,"endOffset":946580,"count":0},{"startOffset":946637,"endOffset":946643,"count":0},{"startOffset":946689,"endOffset":946703,"count":0},{"startOffset":946746,"endOffset":946760,"count":0},{"startOffset":947000,"endOffset":947018,"count":0},{"startOffset":947058,"endOffset":947065,"count":0},{"startOffset":947066,"endOffset":947083,"count":0},{"startOffset":947153,"endOffset":947160,"count":0},{"startOffset":947161,"endOffset":947176,"count":0},{"startOffset":947200,"endOffset":947609,"count":0}],"isBlockCoverage":true},{"functionName":"121","ranges":[{"startOffset":947704,"endOffset":1001377,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":947739,"endOffset":947987,"count":1},{"startOffset":947850,"endOffset":947984,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":947995,"endOffset":1001370,"count":1}],"isBlockCoverage":true},{"functionName":"Diff","ranges":[{"startOffset":948033,"endOffset":948051,"count":7}],"isBlockCoverage":true},{"functionName":"diff","ranges":[{"startOffset":948083,"endOffset":954516,"count":0}],"isBlockCoverage":false},{"functionName":"addToPath","ranges":[{"startOffset":954533,"endOffset":955202,"count":0}],"isBlockCoverage":false},{"functionName":"extractCommon","ranges":[{"startOffset":955223,"endOffset":955882,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":955896,"endOffset":956149,"count":0}],"isBlockCoverage":false},{"functionName":"removeEmpty","ranges":[{"startOffset":956168,"endOffset":956362,"count":0}],"isBlockCoverage":false},{"functionName":"castInput","ranges":[{"startOffset":956379,"endOffset":956432,"count":0}],"isBlockCoverage":false},{"functionName":"tokenize","ranges":[{"startOffset":956448,"endOffset":956510,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":956522,"endOffset":956579,"count":0}],"isBlockCoverage":false},{"functionName":"buildValues","ranges":[{"startOffset":956588,"endOffset":959098,"count":0}],"isBlockCoverage":false},{"functionName":"diffChars","ranges":[{"startOffset":959136,"endOffset":959241,"count":0}],"isBlockCoverage":false},{"functionName":"generateOptions","ranges":[{"startOffset":959245,"endOffset":959597,"count":0}],"isBlockCoverage":false},{"functionName":"wordDiff.equals","ranges":[{"startOffset":960340,"endOffset":960595,"count":0}],"isBlockCoverage":false},{"functionName":"wordDiff.tokenize","ranges":[{"startOffset":960620,"endOffset":961325,"count":0}],"isBlockCoverage":false},{"functionName":"diffWords","ranges":[{"startOffset":961330,"endOffset":961508,"count":0}],"isBlockCoverage":false},{"functionName":"diffWordsWithSpace","ranges":[{"startOffset":961511,"endOffset":961620,"count":0}],"isBlockCoverage":false},{"functionName":"lineDiff.tokenize","ranges":[{"startOffset":961674,"endOffset":962540,"count":0}],"isBlockCoverage":false},{"functionName":"diffLines","ranges":[{"startOffset":962545,"endOffset":962647,"count":0}],"isBlockCoverage":false},{"functionName":"diffTrimmedLines","ranges":[{"startOffset":962650,"endOffset":962841,"count":0}],"isBlockCoverage":false},{"functionName":"sentenceDiff.tokenize","ranges":[{"startOffset":962903,"endOffset":962974,"count":0}],"isBlockCoverage":false},{"functionName":"diffSentences","ranges":[{"startOffset":962979,"endOffset":963089,"count":0}],"isBlockCoverage":false},{"functionName":"cssDiff.tokenize","ranges":[{"startOffset":963141,"endOffset":963204,"count":0}],"isBlockCoverage":false},{"functionName":"diffCss","ranges":[{"startOffset":963209,"endOffset":963308,"count":0}],"isBlockCoverage":false},{"functionName":"_typeof","ranges":[{"startOffset":963312,"endOffset":963740,"count":0}],"isBlockCoverage":false},{"functionName":"_defineProperty","ranges":[{"startOffset":963744,"endOffset":964022,"count":0}],"isBlockCoverage":false},{"functionName":"ownKeys","ranges":[{"startOffset":964026,"endOffset":964419,"count":0}],"isBlockCoverage":false},{"functionName":"_objectSpread2","ranges":[{"startOffset":964423,"endOffset":965064,"count":0}],"isBlockCoverage":false},{"functionName":"_toConsumableArray","ranges":[{"startOffset":965068,"endOffset":965227,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayWithoutHoles","ranges":[{"startOffset":965231,"endOffset":965328,"count":0}],"isBlockCoverage":false},{"functionName":"_iterableToArray","ranges":[{"startOffset":965332,"endOffset":965468,"count":0}],"isBlockCoverage":false},{"functionName":"_unsupportedIterableToArray","ranges":[{"startOffset":965472,"endOffset":965914,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayLikeToArray","ranges":[{"startOffset":965918,"endOffset":966113,"count":0}],"isBlockCoverage":false},{"functionName":"_nonIterableSpread","ranges":[{"startOffset":966117,"endOffset":966313,"count":0}],"isBlockCoverage":false},{"functionName":"jsonDiff.castInput","ranges":[{"startOffset":966705,"endOffset":967215,"count":0}],"isBlockCoverage":false},{"functionName":"jsonDiff.equals","ranges":[{"startOffset":967238,"endOffset":967384,"count":0}],"isBlockCoverage":false},{"functionName":"diffJson","ranges":[{"startOffset":967389,"endOffset":967488,"count":0}],"isBlockCoverage":false},{"functionName":"canonicalize","ranges":[{"startOffset":967687,"endOffset":969227,"count":0}],"isBlockCoverage":false},{"functionName":"arrayDiff.tokenize","ranges":[{"startOffset":969283,"endOffset":969331,"count":0}],"isBlockCoverage":false},{"functionName":"arrayDiff.join.arrayDiff.removeEmpty","ranges":[{"startOffset":969377,"endOffset":969417,"count":0}],"isBlockCoverage":false},{"functionName":"diffArrays","ranges":[{"startOffset":969422,"endOffset":969526,"count":0}],"isBlockCoverage":false},{"functionName":"parsePatch","ranges":[{"startOffset":969530,"endOffset":974276,"count":0}],"isBlockCoverage":false},{"functionName":"distanceIterator","ranges":[{"startOffset":974464,"endOffset":975627,"count":0}],"isBlockCoverage":false},{"functionName":"applyPatch","ranges":[{"startOffset":975631,"endOffset":979552,"count":0}],"isBlockCoverage":false},{"functionName":"applyPatches","ranges":[{"startOffset":979618,"endOffset":980312,"count":0}],"isBlockCoverage":false},{"functionName":"structuredPatch","ranges":[{"startOffset":980316,"endOffset":984298,"count":0}],"isBlockCoverage":false},{"functionName":"formatPatch","ranges":[{"startOffset":984301,"endOffset":985449,"count":0}],"isBlockCoverage":false},{"functionName":"createTwoFilesPatch","ranges":[{"startOffset":985452,"endOffset":985673,"count":0}],"isBlockCoverage":false},{"functionName":"createPatch","ranges":[{"startOffset":985676,"endOffset":985858,"count":0}],"isBlockCoverage":false},{"functionName":"arrayEqual","ranges":[{"startOffset":985862,"endOffset":985987,"count":0}],"isBlockCoverage":false},{"functionName":"arrayStartsWith","ranges":[{"startOffset":985990,"endOffset":986234,"count":0}],"isBlockCoverage":false},{"functionName":"calcLineCount","ranges":[{"startOffset":986238,"endOffset":986664,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":986667,"endOffset":989682,"count":0}],"isBlockCoverage":false},{"functionName":"loadPatch","ranges":[{"startOffset":989686,"endOffset":990059,"count":0}],"isBlockCoverage":false},{"functionName":"fileNameChanged","ranges":[{"startOffset":990063,"endOffset":990173,"count":0}],"isBlockCoverage":false},{"functionName":"selectField","ranges":[{"startOffset":990177,"endOffset":990385,"count":0}],"isBlockCoverage":false},{"functionName":"hunkBefore","ranges":[{"startOffset":990389,"endOffset":990520,"count":0}],"isBlockCoverage":false},{"functionName":"cloneHunk","ranges":[{"startOffset":990524,"endOffset":990739,"count":0}],"isBlockCoverage":false},{"functionName":"mergeLines","ranges":[{"startOffset":990743,"endOffset":992892,"count":0}],"isBlockCoverage":false},{"functionName":"mutualChange","ranges":[{"startOffset":992896,"endOffset":993964,"count":0}],"isBlockCoverage":false},{"functionName":"removal","ranges":[{"startOffset":993968,"endOffset":994378,"count":0}],"isBlockCoverage":false},{"functionName":"conflict","ranges":[{"startOffset":994382,"endOffset":994540,"count":0}],"isBlockCoverage":false},{"functionName":"insertLeading","ranges":[{"startOffset":994544,"endOffset":994779,"count":0}],"isBlockCoverage":false},{"functionName":"insertTrailing","ranges":[{"startOffset":994783,"endOffset":994957,"count":0}],"isBlockCoverage":false},{"functionName":"collectChange","ranges":[{"startOffset":994961,"endOffset":995487,"count":0}],"isBlockCoverage":false},{"functionName":"collectContext","ranges":[{"startOffset":995491,"endOffset":996844,"count":0}],"isBlockCoverage":false},{"functionName":"allRemoves","ranges":[{"startOffset":996848,"endOffset":996988,"count":0}],"isBlockCoverage":false},{"functionName":"skipRemoveSuperset","ranges":[{"startOffset":996992,"endOffset":997324,"count":0}],"isBlockCoverage":false},{"functionName":"calcOldNewLineCount","ranges":[{"startOffset":997328,"endOffset":998351,"count":0}],"isBlockCoverage":false},{"functionName":"reversePatch","ranges":[{"startOffset":998355,"endOffset":999324,"count":0}],"isBlockCoverage":false},{"functionName":"convertChangesToDMP","ranges":[{"startOffset":999396,"endOffset":999789,"count":0}],"isBlockCoverage":false},{"functionName":"convertChangesToXML","ranges":[{"startOffset":999793,"endOffset":1000258,"count":0}],"isBlockCoverage":false},{"functionName":"escapeHTML","ranges":[{"startOffset":1000262,"endOffset":1000454,"count":0}],"isBlockCoverage":false},{"functionName":"122.get-intrinsic","ranges":[{"startOffset":1001387,"endOffset":1001781,"count":1},{"startOffset":1001577,"endOffset":1001585,"count":0},{"startOffset":1001662,"endOffset":1001741,"count":0}],"isBlockCoverage":true},{"functionName":"123","ranges":[{"startOffset":1001810,"endOffset":1001921,"count":1}],"isBlockCoverage":true},{"functionName":"124","ranges":[{"startOffset":1001931,"endOffset":1002033,"count":1}],"isBlockCoverage":true},{"functionName":"125","ranges":[{"startOffset":1002043,"endOffset":1002156,"count":1}],"isBlockCoverage":true},{"functionName":"126","ranges":[{"startOffset":1002166,"endOffset":1002281,"count":1}],"isBlockCoverage":true},{"functionName":"127","ranges":[{"startOffset":1002291,"endOffset":1002406,"count":1}],"isBlockCoverage":true},{"functionName":"128","ranges":[{"startOffset":1002416,"endOffset":1002527,"count":1}],"isBlockCoverage":true},{"functionName":"129","ranges":[{"startOffset":1002537,"endOffset":1002646,"count":1}],"isBlockCoverage":true},{"functionName":"130","ranges":[{"startOffset":1002656,"endOffset":1004735,"count":1}],"isBlockCoverage":true},{"functionName":"concatty","ranges":[{"startOffset":1002920,"endOffset":1003140,"count":0}],"isBlockCoverage":false},{"functionName":"slicy","ranges":[{"startOffset":1003155,"endOffset":1003334,"count":0}],"isBlockCoverage":false},{"functionName":"joiny","ranges":[{"startOffset":1003349,"endOffset":1003555,"count":0}],"isBlockCoverage":false},{"functionName":"bind","ranges":[{"startOffset":1003575,"endOffset":1004731,"count":0}],"isBlockCoverage":false},{"functionName":"131../implementation","ranges":[{"startOffset":1004745,"endOffset":1004907,"count":1},{"startOffset":1004886,"endOffset":1004903,"count":0}],"isBlockCoverage":true},{"functionName":"132.es-errors","ranges":[{"startOffset":1004939,"endOffset":1018590,"count":1},{"startOffset":1005641,"endOffset":1005712,"count":0},{"startOffset":1006214,"endOffset":1006230,"count":0},{"startOffset":1006353,"endOffset":1006451,"count":0},{"startOffset":1006539,"endOffset":1006550,"count":0},{"startOffset":1006672,"endOffset":1006683,"count":0},{"startOffset":1006774,"endOffset":1006785,"count":0},{"startOffset":1006887,"endOffset":1006898,"count":0},{"startOffset":1007136,"endOffset":1007147,"count":0},{"startOffset":1007202,"endOffset":1007213,"count":0},{"startOffset":1007281,"endOffset":1007292,"count":0},{"startOffset":1007369,"endOffset":1007380,"count":0},{"startOffset":1007469,"endOffset":1007480,"count":0},{"startOffset":1007805,"endOffset":1007816,"count":0},{"startOffset":1007888,"endOffset":1007899,"count":0},{"startOffset":1007987,"endOffset":1007998,"count":0},{"startOffset":1008133,"endOffset":1008144,"count":0},{"startOffset":1008209,"endOffset":1008220,"count":0},{"startOffset":1008286,"endOffset":1008297,"count":0},{"startOffset":1008447,"endOffset":1008458,"count":0},{"startOffset":1008503,"endOffset":1008514,"count":0},{"startOffset":1008553,"endOffset":1008564,"count":0},{"startOffset":1008654,"endOffset":1008665,"count":0},{"startOffset":1008866,"endOffset":1008877,"count":0},{"startOffset":1008930,"endOffset":1008941,"count":0},{"startOffset":1009064,"endOffset":1009075,"count":0},{"startOffset":1009145,"endOffset":1009156,"count":0},{"startOffset":1009246,"endOffset":1009257,"count":0},{"startOffset":1009365,"endOffset":1009376,"count":0},{"startOffset":1009506,"endOffset":1009517,"count":0},{"startOffset":1009552,"endOffset":1009563,"count":0},{"startOffset":1009742,"endOffset":1009753,"count":0},{"startOffset":1009833,"endOffset":1009844,"count":0},{"startOffset":1009919,"endOffset":1009930,"count":0},{"startOffset":1009999,"endOffset":1010010,"count":0},{"startOffset":1010097,"endOffset":1010108,"count":0},{"startOffset":1010165,"endOffset":1010176,"count":0},{"startOffset":1010233,"endOffset":1010244,"count":0}],"isBlockCoverage":true},{"functionName":"getEvalledConstructor","ranges":[{"startOffset":1005413,"endOffset":1005553,"count":0}],"isBlockCoverage":false},{"functionName":"throwTypeError","ranges":[{"startOffset":1005737,"endOffset":1005777,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1005810,"endOffset":1006209,"count":1},{"startOffset":1006150,"endOffset":1006202,"count":0}],"isBlockCoverage":true},{"functionName":"getProto","ranges":[{"startOffset":1006372,"endOffset":1006408,"count":0}],"isBlockCoverage":false},{"functionName":"doEval","ranges":[{"startOffset":1010548,"endOffset":1011218,"count":0}],"isBlockCoverage":false},{"functionName":"stringToPath","ranges":[{"startOffset":1014705,"endOffset":1015256,"count":10},{"startOffset":1014829,"endOffset":1014844,"count":7},{"startOffset":1014846,"endOffset":1014926,"count":0},{"startOffset":1014949,"endOffset":1014965,"count":7},{"startOffset":1014967,"endOffset":1015047,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1015096,"endOffset":1015236,"count":25},{"startOffset":1015173,"endOffset":1015214,"count":0}],"isBlockCoverage":true},{"functionName":"getBaseIntrinsic","ranges":[{"startOffset":1015303,"endOffset":1015979,"count":10},{"startOffset":1015434,"endOffset":1015519,"count":0},{"startOffset":1015631,"endOffset":1015670,"count":0},{"startOffset":1015706,"endOffset":1015722,"count":0},{"startOffset":1015724,"endOffset":1015832,"count":0},{"startOffset":1015909,"endOffset":1015978,"count":0}],"isBlockCoverage":true},{"functionName":"GetIntrinsic","ranges":[{"startOffset":1015999,"endOffset":1018586,"count":10},{"startOffset":1016095,"endOffset":1016168,"count":0},{"startOffset":1016195,"endOffset":1016231,"count":5},{"startOffset":1016233,"endOffset":1016306,"count":0},{"startOffset":1016350,"endOffset":1016466,"count":0},{"startOffset":1016553,"endOffset":1016557,"count":0},{"startOffset":1016787,"endOffset":1016870,"count":0},{"startOffset":1016929,"endOffset":1018569,"count":15},{"startOffset":1017153,"endOffset":1017170,"count":0},{"startOffset":1017175,"endOffset":1017263,"count":0},{"startOffset":1017304,"endOffset":1017339,"count":0},{"startOffset":1017475,"endOffset":1017522,"count":1},{"startOffset":1017522,"endOffset":1018566,"count":14},{"startOffset":1017574,"endOffset":1017743,"count":0},{"startOffset":1017785,"endOffset":1018404,"count":10},{"startOffset":1018295,"endOffset":1018328,"count":0},{"startOffset":1018330,"endOffset":1018360,"count":0},{"startOffset":1018404,"endOffset":1018474,"count":4}],"isBlockCoverage":true},{"functionName":"133.get-intrinsic","ranges":[{"startOffset":1018809,"endOffset":1019108,"count":1},{"startOffset":1019020,"endOffset":1019078,"count":0}],"isBlockCoverage":true},{"functionName":"134.es-define-property","ranges":[{"startOffset":1019137,"endOffset":1019761,"count":1}],"isBlockCoverage":true},{"functionName":"hasPropertyDescriptors","ranges":[{"startOffset":1019269,"endOffset":1019333,"count":1}],"isBlockCoverage":true},{"functionName":"hasArrayLengthDefineBug","ranges":[{"startOffset":1019385,"endOffset":1019715,"count":0}],"isBlockCoverage":false},{"functionName":"135","ranges":[{"startOffset":1019795,"endOffset":1020133,"count":1}],"isBlockCoverage":true},{"functionName":"hasProto","ranges":[{"startOffset":1019955,"endOffset":1020129,"count":1}],"isBlockCoverage":true},{"functionName":"136../shams","ranges":[{"startOffset":1020143,"endOffset":1020599,"count":1}],"isBlockCoverage":true},{"functionName":"hasNativeSymbols","ranges":[{"startOffset":1020308,"endOffset":1020595,"count":1},{"startOffset":1020377,"endOffset":1020394,"count":0},{"startOffset":1020430,"endOffset":1020447,"count":0},{"startOffset":1020492,"endOffset":1020509,"count":0},{"startOffset":1020550,"endOffset":1020567,"count":0}],"isBlockCoverage":true},{"functionName":"137","ranges":[{"startOffset":1020622,"endOffset":1022419,"count":1}],"isBlockCoverage":true},{"functionName":"hasSymbols","ranges":[{"startOffset":1020746,"endOffset":1022415,"count":2},{"startOffset":1020859,"endOffset":1020876,"count":0},{"startOffset":1020935,"endOffset":1021854,"count":0},{"startOffset":1021856,"endOffset":1021976,"count":0},{"startOffset":1021978,"endOffset":1022085,"count":0},{"startOffset":1022087,"endOffset":1022414,"count":0}],"isBlockCoverage":true},{"functionName":"138.function-bind","ranges":[{"startOffset":1022429,"endOffset":1022671,"count":1}],"isBlockCoverage":true},{"functionName":"139","ranges":[{"startOffset":1022700,"endOffset":1024683,"count":1}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":1023505,"endOffset":1024469,"count":4},{"startOffset":1023651,"endOffset":1023681,"count":0},{"startOffset":1023736,"endOffset":1023792,"count":0},{"startOffset":1023888,"endOffset":1024450,"count":5},{"startOffset":1023953,"endOffset":1024446,"count":32},{"startOffset":1024072,"endOffset":1024093,"count":0},{"startOffset":1024095,"endOffset":1024384,"count":0}],"isBlockCoverage":true},{"functionName":"isCloneable","ranges":[{"startOffset":1024471,"endOffset":1024575,"count":0}],"isBlockCoverage":false},{"functionName":"isUnextendable","ranges":[{"startOffset":1024577,"endOffset":1024680,"count":4},{"startOffset":1024649,"endOffset":1024676,"count":1}],"isBlockCoverage":true},{"functionName":"140","ranges":[{"startOffset":1024693,"endOffset":1048127,"count":1},{"startOffset":1026435,"endOffset":1026442,"count":0},{"startOffset":1026443,"endOffset":1026468,"count":0},{"startOffset":1026469,"endOffset":1026476,"count":0},{"startOffset":1026550,"endOffset":1026561,"count":0},{"startOffset":1026562,"endOffset":1026590,"count":0},{"startOffset":1028842,"endOffset":1028853,"count":0},{"startOffset":1028911,"endOffset":1028922,"count":0}],"isBlockCoverage":true},{"functionName":"getValue","ranges":[{"startOffset":1026804,"endOffset":1026889,"count":2},{"startOffset":1026861,"endOffset":1026872,"count":0}],"isBlockCoverage":true},{"functionName":"isHostObject","ranges":[{"startOffset":1027083,"endOffset":1027410,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1027731,"endOffset":1027883,"count":1},{"startOffset":1027781,"endOffset":1027799,"count":0},{"startOffset":1027800,"endOffset":1027827,"count":0},{"startOffset":1027849,"endOffset":1027875,"count":0}],"isBlockCoverage":true},{"functionName":"Hash","ranges":[{"startOffset":1029048,"endOffset":1029253,"count":2},{"startOffset":1029114,"endOffset":1029130,"count":0},{"startOffset":1029180,"endOffset":1029251,"count":0}],"isBlockCoverage":true},{"functionName":"hashClear","ranges":[{"startOffset":1029359,"endOffset":1029441,"count":2},{"startOffset":1029434,"endOffset":1029438,"count":0}],"isBlockCoverage":true},{"functionName":"hashDelete","ranges":[{"startOffset":1029722,"endOffset":1029803,"count":0}],"isBlockCoverage":false},{"functionName":"hashGet","ranges":[{"startOffset":1029986,"endOffset":1030217,"count":0}],"isBlockCoverage":false},{"functionName":"hashHas","ranges":[{"startOffset":1030452,"endOffset":1030587,"count":0}],"isBlockCoverage":false},{"functionName":"hashSet","ranges":[{"startOffset":1030816,"endOffset":1030969,"count":0}],"isBlockCoverage":false},{"functionName":"ListCache","ranges":[{"startOffset":1031291,"endOffset":1031501,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheClear","ranges":[{"startOffset":1031618,"endOffset":1031669,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheDelete","ranges":[{"startOffset":1031917,"endOffset":1032201,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheGet","ranges":[{"startOffset":1032395,"endOffset":1032542,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheHas","ranges":[{"startOffset":1032788,"endOffset":1032866,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheSet","ranges":[{"startOffset":1033112,"endOffset":1033323,"count":0}],"isBlockCoverage":false},{"functionName":"MapCache","ranges":[{"startOffset":1033723,"endOffset":1033932,"count":1},{"startOffset":1033793,"endOffset":1033809,"count":0},{"startOffset":1033859,"endOffset":1033930,"count":0}],"isBlockCoverage":true},{"functionName":"mapCacheClear","ranges":[{"startOffset":1034041,"endOffset":1034174,"count":1},{"startOffset":1034130,"endOffset":1034142,"count":0}],"isBlockCoverage":true},{"functionName":"mapCacheDelete","ranges":[{"startOffset":1034414,"endOffset":1034493,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheGet","ranges":[{"startOffset":1034679,"endOffset":1034749,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheHas","ranges":[{"startOffset":1034987,"endOffset":1035057,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheSet","ranges":[{"startOffset":1035294,"endOffset":1035386,"count":0}],"isBlockCoverage":false},{"functionName":"assocIndexOf","ranges":[{"startOffset":1035881,"endOffset":1036049,"count":0}],"isBlockCoverage":false},{"functionName":"baseGet","ranges":[{"startOffset":1036302,"endOffset":1036589,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsNative","ranges":[{"startOffset":1036810,"endOffset":1037037,"count":2},{"startOffset":1036884,"endOffset":1036907,"count":0},{"startOffset":1036943,"endOffset":1036965,"count":0},{"startOffset":1036980,"endOffset":1036994,"count":0}],"isBlockCoverage":true},{"functionName":"baseToString","ranges":[{"startOffset":1037246,"endOffset":1037600,"count":0}],"isBlockCoverage":false},{"functionName":"castPath","ranges":[{"startOffset":1037775,"endOffset":1037858,"count":0}],"isBlockCoverage":false},{"functionName":"getMapData","ranges":[{"startOffset":1038032,"endOffset":1038187,"count":0}],"isBlockCoverage":false},{"functionName":"getNative","ranges":[{"startOffset":1038433,"endOffset":1038555,"count":2},{"startOffset":1038541,"endOffset":1038552,"count":0}],"isBlockCoverage":true},{"functionName":"isKey","ranges":[{"startOffset":1038824,"endOffset":1039176,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyable","ranges":[{"startOffset":1039379,"endOffset":1039578,"count":0}],"isBlockCoverage":false},{"functionName":"isMasked","ranges":[{"startOffset":1039767,"endOffset":1039841,"count":2},{"startOffset":1039815,"endOffset":1039838,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1040042,"endOffset":1040345,"count":0}],"isBlockCoverage":false},{"functionName":"toKey","ranges":[{"startOffset":1040527,"endOffset":1040726,"count":0}],"isBlockCoverage":false},{"functionName":"toSource","ranges":[{"startOffset":1040887,"endOffset":1041075,"count":2},{"startOffset":1040989,"endOffset":1041056,"count":0},{"startOffset":1041060,"endOffset":1041074,"count":0}],"isBlockCoverage":true},{"functionName":"memoize","ranges":[{"startOffset":1042522,"endOffset":1043080,"count":1},{"startOffset":1042602,"endOffset":1042634,"count":0},{"startOffset":1042637,"endOffset":1042684,"count":0}],"isBlockCoverage":true},{"functionName":"memoized","ranges":[{"startOffset":1042702,"endOffset":1043006,"count":0}],"isBlockCoverage":false},{"functionName":"eq","ranges":[{"startOffset":1043822,"endOffset":1043917,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":1044719,"endOffset":1045011,"count":2},{"startOffset":1044962,"endOffset":1044966,"count":0},{"startOffset":1044992,"endOffset":1045008,"count":0}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":1045594,"endOffset":1045711,"count":4}],"isBlockCoverage":true},{"functionName":"isObjectLike","ranges":[{"startOffset":1046210,"endOffset":1046288,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":1046647,"endOffset":1046782,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1047198,"endOffset":1047277,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1047935,"endOffset":1048101,"count":0}],"isBlockCoverage":false},{"functionName":"141","ranges":[{"startOffset":1048137,"endOffset":1049814,"count":1}],"isBlockCoverage":true},{"functionName":"configureLogger","ranges":[{"startOffset":1048410,"endOffset":1049776,"count":1},{"startOffset":1048515,"endOffset":1048520,"count":0}],"isBlockCoverage":true},{"functionName":"config.logger","ranges":[{"startOffset":1048681,"endOffset":1048695,"count":0}],"isBlockCoverage":false},{"functionName":"logError","ranges":[{"startOffset":1049138,"endOffset":1049773,"count":0}],"isBlockCoverage":false},{"functionName":"142../event","ranges":[{"startOffset":1049824,"endOffset":1050171,"count":1}],"isBlockCoverage":true},{"functionName":"CustomEvent","ranges":[{"startOffset":1049906,"endOffset":1050049,"count":0}],"isBlockCoverage":false},{"functionName":"143","ranges":[{"startOffset":1050194,"endOffset":1054312,"count":1}],"isBlockCoverage":true},{"functionName":"flattenOptions","ranges":[{"startOffset":1050243,"endOffset":1050587,"count":0}],"isBlockCoverage":false},{"functionName":"not","ranges":[{"startOffset":1050588,"endOffset":1050683,"count":0}],"isBlockCoverage":false},{"functionName":"hasListenerFilter","ranges":[{"startOffset":1050684,"endOffset":1050900,"count":0}],"isBlockCoverage":false},{"functionName":"addEventListener","ranges":[{"startOffset":1051013,"endOffset":1052509,"count":0}],"isBlockCoverage":false},{"functionName":"removeEventListener","ranges":[{"startOffset":1052609,"endOffset":1053373,"count":0}],"isBlockCoverage":false},{"functionName":"dispatchEvent","ranges":[{"startOffset":1053395,"endOffset":1054274,"count":0}],"isBlockCoverage":false},{"functionName":"144","ranges":[{"startOffset":1054322,"endOffset":1054931,"count":1}],"isBlockCoverage":true},{"functionName":"Event","ranges":[{"startOffset":1054371,"endOffset":1054479,"count":2}],"isBlockCoverage":true},{"functionName":"initEvent","ranges":[{"startOffset":1054516,"endOffset":1054731,"count":2}],"isBlockCoverage":true},{"functionName":"stopPropagation","ranges":[{"startOffset":1054805,"endOffset":1054819,"count":0}],"isBlockCoverage":false},{"functionName":"preventDefault","ranges":[{"startOffset":1054842,"endOffset":1054899,"count":0}],"isBlockCoverage":false},{"functionName":"145../custom-event","ranges":[{"startOffset":1054941,"endOffset":1055181,"count":1}],"isBlockCoverage":true},{"functionName":"146../event","ranges":[{"startOffset":1055269,"endOffset":1055901,"count":1}],"isBlockCoverage":true},{"functionName":"ProgressEvent","ranges":[{"startOffset":1055351,"endOffset":1055771,"count":0}],"isBlockCoverage":false},{"functionName":"147../index","ranges":[{"startOffset":1055924,"endOffset":1057897,"count":1}],"isBlockCoverage":true},{"functionName":"Server","ranges":[{"startOffset":1056107,"endOffset":1056127,"count":1}],"isBlockCoverage":true},{"functionName":"addRequest","ranges":[{"startOffset":1056234,"endOffset":1057315,"count":0}],"isBlockCoverage":false},{"functionName":"respond","ranges":[{"startOffset":1057348,"endOffset":1057684,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":1057717,"endOffset":1057854,"count":0}],"isBlockCoverage":false},{"functionName":"148.../configure-logger","ranges":[{"startOffset":1057946,"endOffset":1068167,"count":1}],"isBlockCoverage":true},{"functionName":"responseArray","ranges":[{"startOffset":1058260,"endOffset":1058920,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultWindowLocation","ranges":[{"startOffset":1058922,"endOffset":1059211,"count":0}],"isBlockCoverage":false},{"functionName":"getWindowLocation","ranges":[{"startOffset":1059213,"endOffset":1059762,"count":0}],"isBlockCoverage":false},{"functionName":"matchOne","ranges":[{"startOffset":1059764,"endOffset":1060179,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":1060181,"endOffset":1060957,"count":0}],"isBlockCoverage":false},{"functionName":"incrementRequestCount","ranges":[{"startOffset":1060959,"endOffset":1061364,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":1061397,"endOffset":1061930,"count":0}],"isBlockCoverage":false},{"functionName":"configure","ranges":[{"startOffset":1061948,"endOffset":1062584,"count":0}],"isBlockCoverage":false},{"functionName":"addRequest","ranges":[{"startOffset":1062603,"endOffset":1063221,"count":0}],"isBlockCoverage":false},{"functionName":"getHTTPMethod","ranges":[{"startOffset":1063243,"endOffset":1063563,"count":0}],"isBlockCoverage":false},{"functionName":"handleRequest","ranges":[{"startOffset":1063585,"endOffset":1063750,"count":0}],"isBlockCoverage":false},{"functionName":"logger","ranges":[{"startOffset":1063765,"endOffset":1063827,"count":0}],"isBlockCoverage":false},{"functionName":"respondWith","ranges":[{"startOffset":1063925,"endOffset":1065838,"count":0}],"isBlockCoverage":false},{"functionName":"respond","ranges":[{"startOffset":1065854,"endOffset":1066198,"count":0}],"isBlockCoverage":false},{"functionName":"respondAll","ranges":[{"startOffset":1066217,"endOffset":1066484,"count":0}],"isBlockCoverage":false},{"functionName":"processRequest","ranges":[{"startOffset":1066507,"endOffset":1067300,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":1067316,"endOffset":1067422,"count":0}],"isBlockCoverage":false},{"functionName":"getRequest","ranges":[{"startOffset":1067441,"endOffset":1067520,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":1067534,"endOffset":1067617,"count":0}],"isBlockCoverage":false},{"functionName":"resetBehavior","ranges":[{"startOffset":1067639,"endOffset":1067726,"count":0}],"isBlockCoverage":false},{"functionName":"resetHistory","ranges":[{"startOffset":1067747,"endOffset":1068130,"count":0}],"isBlockCoverage":false},{"functionName":"149.util","ranges":[{"startOffset":1068253,"endOffset":1068678,"count":1}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":1068341,"endOffset":1068652,"count":0}],"isBlockCoverage":false},{"functionName":"150","ranges":[{"startOffset":1068698,"endOffset":1068884,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1068770,"endOffset":1068877,"count":1},{"startOffset":1068836,"endOffset":1068875,"count":0}],"isBlockCoverage":true},{"functionName":"151.../configure-logger","ranges":[{"startOffset":1068894,"endOffset":1099848,"count":1},{"startOffset":1069036,"endOffset":1069083,"count":0}],"isBlockCoverage":true},{"functionName":"getWorkingXHR","ranges":[{"startOffset":1069564,"endOffset":1069989,"count":1},{"startOffset":1069696,"endOffset":1069746,"count":0},{"startOffset":1069849,"endOffset":1069968,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1069866,"endOffset":1069961,"count":0}],"isBlockCoverage":false},{"functionName":"EventTargetHandler","ranges":[{"startOffset":1070596,"endOffset":1071138,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeHeaderValue","ranges":[{"startOffset":1071196,"endOffset":1071416,"count":0}],"isBlockCoverage":false},{"functionName":"getHeader","ranges":[{"startOffset":1071418,"endOffset":1071623,"count":0}],"isBlockCoverage":false},{"functionName":"excludeSetCookie2Header","ranges":[{"startOffset":1071625,"endOffset":1071713,"count":0}],"isBlockCoverage":false},{"functionName":"verifyResponseBodyType","ranges":[{"startOffset":1071715,"endOffset":1072846,"count":0}],"isBlockCoverage":false},{"functionName":"convertToArrayBuffer","ranges":[{"startOffset":1072848,"endOffset":1073039,"count":0}],"isBlockCoverage":false},{"functionName":"isXmlContentType","ranges":[{"startOffset":1073041,"endOffset":1073194,"count":0}],"isBlockCoverage":false},{"functionName":"clearResponse","ranges":[{"startOffset":1073196,"endOffset":1073434,"count":0}],"isBlockCoverage":false},{"functionName":"fakeXMLHttpRequestFor","ranges":[{"startOffset":1073436,"endOffset":1099727,"count":1},{"startOffset":1073536,"endOffset":1073594,"count":0},{"startOffset":1074076,"endOffset":1074135,"count":0},{"startOffset":1074220,"endOffset":1074291,"count":0}],"isBlockCoverage":true},{"functionName":"FakeXMLHttpRequest","ranges":[{"startOffset":1074516,"endOffset":1075226,"count":0}],"isBlockCoverage":false},{"functionName":"verifyState","ranges":[{"startOffset":1075232,"endOffset":1075474,"count":0}],"isBlockCoverage":false},{"functionName":"apply","ranges":[{"startOffset":1075536,"endOffset":1076158,"count":0}],"isBlockCoverage":false},{"functionName":"addFilter","ranges":[{"startOffset":1076233,"endOffset":1076294,"count":0}],"isBlockCoverage":false},{"functionName":"defake","ranges":[{"startOffset":1076328,"endOffset":1079286,"count":0}],"isBlockCoverage":false},{"functionName":"verifyRequestOpened","ranges":[{"startOffset":1079336,"endOffset":1079830,"count":0}],"isBlockCoverage":false},{"functionName":"verifyRequestSent","ranges":[{"startOffset":1079836,"endOffset":1079988,"count":0}],"isBlockCoverage":false},{"functionName":"verifyHeadersReceived","ranges":[{"startOffset":1079994,"endOffset":1080216,"count":0}],"isBlockCoverage":false},{"functionName":"convertResponseBody","ranges":[{"startOffset":1080222,"endOffset":1081341,"count":0}],"isBlockCoverage":false},{"functionName":"requestErrorSteps","ranges":[{"startOffset":1081480,"endOffset":1081916,"count":0}],"isBlockCoverage":false},{"functionName":"parseXML","ranges":[{"startOffset":1081952,"endOffset":1083603,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":1085099,"endOffset":1085949,"count":0}],"isBlockCoverage":false},{"functionName":"readyStateChange","ranges":[{"startOffset":1085978,"endOffset":1088243,"count":0}],"isBlockCoverage":false},{"functionName":"setRequestHeader","ranges":[{"startOffset":1088346,"endOffset":1089582,"count":0}],"isBlockCoverage":false},{"functionName":"setStatus","ranges":[{"startOffset":1089604,"endOffset":1089881,"count":0}],"isBlockCoverage":false},{"functionName":"setResponseHeaders","ranges":[{"startOffset":1089937,"endOffset":1090438,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":1090526,"endOffset":1093360,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":1093378,"endOffset":1093533,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":1093551,"endOffset":1093780,"count":0}],"isBlockCoverage":false},{"functionName":"triggerTimeout","ranges":[{"startOffset":1093807,"endOffset":1093981,"count":0}],"isBlockCoverage":false},{"functionName":"getResponseHeader","ranges":[{"startOffset":1094011,"endOffset":1094446,"count":0}],"isBlockCoverage":false},{"functionName":"getAllResponseHeaders","ranges":[{"startOffset":1094480,"endOffset":1095021,"count":0}],"isBlockCoverage":false},{"functionName":"setResponseBody","ranges":[{"startOffset":1095049,"endOffset":1096739,"count":0}],"isBlockCoverage":false},{"functionName":"respond","ranges":[{"startOffset":1096759,"endOffset":1096986,"count":0}],"isBlockCoverage":false},{"functionName":"uploadProgress","ranges":[{"startOffset":1097013,"endOffset":1097366,"count":0}],"isBlockCoverage":false},{"functionName":"downloadProgress","ranges":[{"startOffset":1097395,"endOffset":1097736,"count":0}],"isBlockCoverage":false},{"functionName":"uploadError","ranges":[{"startOffset":1097760,"endOffset":1097990,"count":0}],"isBlockCoverage":false},{"functionName":"overrideMimeType","ranges":[{"startOffset":1098019,"endOffset":1098239,"count":0}],"isBlockCoverage":false},{"functionName":"useFakeXMLHttpRequest","ranges":[{"startOffset":1098476,"endOffset":1099579,"count":0}],"isBlockCoverage":false},{"functionName":"152../fake-server","ranges":[{"startOffset":1099980,"endOffset":1100205,"count":1}],"isBlockCoverage":true},{"functionName":"153../isArguments","ranges":[{"startOffset":1100294,"endOffset":1103548,"count":0}],"isBlockCoverage":false},{"functionName":"154../implementation","ranges":[{"startOffset":1103577,"endOffset":1104436,"count":1},{"startOffset":1103796,"endOffset":1103825,"count":0}],"isBlockCoverage":true},{"functionName":"keys","ranges":[{"startOffset":1103755,"endOffset":1103795,"count":0}],"isBlockCoverage":false},{"functionName":"shimObjectKeys","ranges":[{"startOffset":1103877,"endOffset":1104404,"count":0}],"isBlockCoverage":false},{"functionName":"155","ranges":[{"startOffset":1104488,"endOffset":1104946,"count":1}],"isBlockCoverage":true},{"functionName":"isArguments","ranges":[{"startOffset":1104594,"endOffset":1104942,"count":0}],"isBlockCoverage":false},{"functionName":"156.call-bind/callBound","ranges":[{"startOffset":1104956,"endOffset":1106406,"count":1},{"startOffset":1105410,"endOffset":1105416,"count":0}],"isBlockCoverage":true},{"functionName":"assign","ranges":[{"startOffset":1105479,"endOffset":1106402,"count":0}],"isBlockCoverage":false},{"functionName":"157../implementation","ranges":[{"startOffset":1106483,"endOffset":1107818,"count":1}],"isBlockCoverage":true},{"functionName":"lacksProperEnumerationOrder","ranges":[{"startOffset":1106617,"endOffset":1107113,"count":1},{"startOffset":1106652,"endOffset":1106672,"count":0},{"startOffset":1106958,"endOffset":1106994,"count":20},{"startOffset":1107068,"endOffset":1107087,"count":20}],"isBlockCoverage":true},{"functionName":"assignHasPendingExceptions","ranges":[{"startOffset":1107149,"endOffset":1107563,"count":1},{"startOffset":1107213,"endOffset":1107233,"count":0},{"startOffset":1107546,"endOffset":1107562,"count":0}],"isBlockCoverage":true},{"functionName":"getPolyfill","ranges":[{"startOffset":1107583,"endOffset":1107814,"count":1},{"startOffset":1107629,"endOffset":1107658,"count":0},{"startOffset":1107695,"endOffset":1107724,"count":0},{"startOffset":1107760,"endOffset":1107789,"count":0}],"isBlockCoverage":true},{"functionName":"158","ranges":[{"startOffset":1107850,"endOffset":1122960,"count":1}],"isBlockCoverage":true},{"functionName":"lexer","ranges":[{"startOffset":1108155,"endOffset":1111049,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1111096,"endOffset":1113730,"count":0}],"isBlockCoverage":false},{"functionName":"compile","ranges":[{"startOffset":1113819,"endOffset":1113912,"count":0}],"isBlockCoverage":false},{"functionName":"tokensToFunction","ranges":[{"startOffset":1114015,"endOffset":1116629,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":1116741,"endOffset":1116887,"count":0}],"isBlockCoverage":false},{"functionName":"regexpToFunction","ranges":[{"startOffset":1116981,"endOffset":1117983,"count":0}],"isBlockCoverage":false},{"functionName":"escapeString","ranges":[{"startOffset":1118076,"endOffset":1118167,"count":0}],"isBlockCoverage":false},{"functionName":"flags","ranges":[{"startOffset":1118224,"endOffset":1118303,"count":0}],"isBlockCoverage":false},{"functionName":"regexpToRegexp","ranges":[{"startOffset":1118344,"endOffset":1118893,"count":0}],"isBlockCoverage":false},{"functionName":"arrayToRegexp","ranges":[{"startOffset":1118939,"endOffset":1119159,"count":0}],"isBlockCoverage":false},{"functionName":"stringToRegexp","ranges":[{"startOffset":1119211,"endOffset":1119323,"count":0}],"isBlockCoverage":false},{"functionName":"tokensToRegexp","ranges":[{"startOffset":1119395,"endOffset":1122325,"count":0}],"isBlockCoverage":false},{"functionName":"pathToRegexp","ranges":[{"startOffset":1122671,"endOffset":1122920,"count":0}],"isBlockCoverage":false},{"functionName":"159","ranges":[{"startOffset":1122970,"endOffset":1128424,"count":1}],"isBlockCoverage":true},{"functionName":"defaultSetTimout","ranges":[{"startOffset":1123420,"endOffset":1123507,"count":0}],"isBlockCoverage":false},{"functionName":"defaultClearTimeout","ranges":[{"startOffset":1123508,"endOffset":1123601,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1123603,"endOffset":1124126,"count":1},{"startOffset":1123727,"endOffset":1123793,"count":0},{"startOffset":1123800,"endOffset":1123862,"count":0},{"startOffset":1123979,"endOffset":1124050,"count":0},{"startOffset":1124057,"endOffset":1124124,"count":0}],"isBlockCoverage":true},{"functionName":"runTimeout","ranges":[{"startOffset":1124131,"endOffset":1125129,"count":0}],"isBlockCoverage":false},{"functionName":"runClearTimeout","ranges":[{"startOffset":1125130,"endOffset":1126259,"count":0}],"isBlockCoverage":false},{"functionName":"cleanUpNextTick","ranges":[{"startOffset":1126338,"endOffset":1126621,"count":0}],"isBlockCoverage":false},{"functionName":"drainQueue","ranges":[{"startOffset":1126623,"endOffset":1127131,"count":0}],"isBlockCoverage":false},{"functionName":"process.nextTick","ranges":[{"startOffset":1127152,"endOffset":1127477,"count":0}],"isBlockCoverage":false},{"functionName":"Item","ranges":[{"startOffset":1127512,"endOffset":1127585,"count":0}],"isBlockCoverage":false},{"functionName":"Item.run","ranges":[{"startOffset":1127607,"endOffset":1127660,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":1127835,"endOffset":1127853,"count":0}],"isBlockCoverage":false},{"functionName":"process.listeners","ranges":[{"startOffset":1128119,"endOffset":1128148,"count":0}],"isBlockCoverage":false},{"functionName":"process.binding","ranges":[{"startOffset":1128168,"endOffset":1128244,"count":0}],"isBlockCoverage":false},{"functionName":"process.cwd","ranges":[{"startOffset":1128261,"endOffset":1128287,"count":0}],"isBlockCoverage":false},{"functionName":"process.chdir","ranges":[{"startOffset":1128305,"endOffset":1128378,"count":0}],"isBlockCoverage":false},{"functionName":"process.umask","ranges":[{"startOffset":1128396,"endOffset":1128420,"count":0}],"isBlockCoverage":false},{"functionName":"160.define-data-property","ranges":[{"startOffset":1128434,"endOffset":1129743,"count":1}],"isBlockCoverage":true},{"functionName":"setFunctionLength","ranges":[{"startOffset":1128795,"endOffset":1129739,"count":3},{"startOffset":1128867,"endOffset":1128921,"count":0},{"startOffset":1129021,"endOffset":1129095,"count":0},{"startOffset":1129329,"endOffset":1129375,"count":0},{"startOffset":1129487,"endOffset":1129514,"count":0},{"startOffset":1129515,"endOffset":1129524,"count":0},{"startOffset":1129639,"endOffset":1129722,"count":0}],"isBlockCoverage":true},{"functionName":"161","ranges":[{"startOffset":1129862,"endOffset":1129965,"count":1}],"isBlockCoverage":true},{"functionName":"162.process/browser.js","ranges":[{"startOffset":1129975,"endOffset":1132116,"count":1},{"startOffset":1131472,"endOffset":1131986,"count":0},{"startOffset":1132068,"endOffset":1132113,"count":0}],"isBlockCoverage":true},{"functionName":"exports.setTimeout","ranges":[{"startOffset":1130238,"endOffset":1130331,"count":0}],"isBlockCoverage":false},{"functionName":"exports.setInterval","ranges":[{"startOffset":1130355,"endOffset":1130450,"count":0}],"isBlockCoverage":false},{"functionName":"exports.clearTimeout.exports.clearInterval","ranges":[{"startOffset":1130499,"endOffset":1130537,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout","ranges":[{"startOffset":1130540,"endOffset":1130617,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.unref.Timeout.ref","ranges":[{"startOffset":1130668,"endOffset":1130681,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.close","ranges":[{"startOffset":1130709,"endOffset":1130763,"count":0}],"isBlockCoverage":false},{"functionName":"exports.enroll","ranges":[{"startOffset":1130844,"endOffset":1130935,"count":0}],"isBlockCoverage":false},{"functionName":"exports.unenroll","ranges":[{"startOffset":1130957,"endOffset":1131038,"count":0}],"isBlockCoverage":false},{"functionName":"exports._unrefActive.exports.active","ranges":[{"startOffset":1131081,"endOffset":1131323,"count":0}],"isBlockCoverage":false},{"functionName":"exports.setImmediate","ranges":[{"startOffset":1131474,"endOffset":1131986,"count":0}],"isBlockCoverage":false},{"functionName":"exports.clearImmediate","ranges":[{"startOffset":1132070,"endOffset":1132113,"count":0}],"isBlockCoverage":false},{"functionName":"163","ranges":[{"startOffset":1132150,"endOffset":1147670,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1132185,"endOffset":1132406,"count":1},{"startOffset":1132305,"endOffset":1132403,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1132414,"endOffset":1147663,"count":1},{"startOffset":1132667,"endOffset":1132673,"count":0}],"isBlockCoverage":true},{"functionName":"typeDetect","ranges":[{"startOffset":1134257,"endOffset":1147640,"count":26},{"startOffset":1135139,"endOffset":1136418,"count":0},{"startOffset":1136423,"endOffset":1136654,"count":0},{"startOffset":1136656,"endOffset":1142723,"count":0},{"startOffset":1142763,"endOffset":1144001,"count":0},{"startOffset":1144003,"endOffset":1144271,"count":0},{"startOffset":1144273,"endOffset":1144537,"count":0},{"startOffset":1144539,"endOffset":1144811,"count":0},{"startOffset":1144813,"endOffset":1145089,"count":0},{"startOffset":1145091,"endOffset":1145507,"count":0},{"startOffset":1145509,"endOffset":1145923,"count":0},{"startOffset":1145925,"endOffset":1146343,"count":0},{"startOffset":1146345,"endOffset":1146783,"count":0},{"startOffset":1146785,"endOffset":1147230,"count":0},{"startOffset":1147232,"endOffset":1147639,"count":0}],"isBlockCoverage":true}]},{"scriptId":"293","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/dist/src/config/db.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":257,"count":1}],"isBlockCoverage":true}]},{"scriptId":"294","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/dist/src/utilis/swagger.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5072,"count":1}],"isBlockCoverage":true},{"functionName":"swaggerDocs","ranges":[{"startOffset":4566,"endOffset":5043,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4719,"endOffset":4830,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4845,"endOffset":5039,"count":0}],"isBlockCoverage":false}]},{"scriptId":"295","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11,"count":1}],"isBlockCoverage":true}]},{"scriptId":"296","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/dist/src/routes/user.route.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1978,"count":1}],"isBlockCoverage":true}]},{"scriptId":"297","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/dist/src/validations/registeruser.validation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2603,"count":1}],"isBlockCoverage":true},{"functionName":"validateUserCreation","ranges":[{"startOffset":2400,"endOffset":2601,"count":0}],"isBlockCoverage":false}]},{"scriptId":"298","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/dist/src/models/userModel.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1596,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":87,"endOffset":343,"count":0}],"isBlockCoverage":true}]},{"scriptId":"299","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/index.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4638,"count":1}],"isBlockCoverage":true}]},{"scriptId":"300","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13,"count":1}],"isBlockCoverage":true}]},{"scriptId":"301","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/dist/src/utilis/logger.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":218,"count":1}],"isBlockCoverage":true},{"functionName":"timestamp","ranges":[{"startOffset":155,"endOffset":192,"count":1}],"isBlockCoverage":true}]},{"scriptId":"302","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/dist/src/middleware/verfication.middleware.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":535,"count":1}],"isBlockCoverage":true},{"functionName":"verifyToken","ranges":[{"startOffset":52,"endOffset":505,"count":1},{"startOffset":119,"endOffset":128,"count":0},{"startOffset":239,"endOffset":303,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":305,"endOffset":501,"count":0}],"isBlockCoverage":false}]},{"scriptId":"303","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/dist/src/controllers/registeruser.controller.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4256,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":189,"endOffset":4203,"count":1}],"isBlockCoverage":true},{"functionName":"createUser","ranges":[{"startOffset":229,"endOffset":1614,"count":0}],"isBlockCoverage":false},{"functionName":"verifyUser","ranges":[{"startOffset":1633,"endOffset":2320,"count":0}],"isBlockCoverage":false},{"functionName":"getUserById","ranges":[{"startOffset":2340,"endOffset":2830,"count":1},{"startOffset":2620,"endOffset":2720,"count":0},{"startOffset":2739,"endOffset":2824,"count":0}],"isBlockCoverage":true},{"functionName":"getAllUsers","ranges":[{"startOffset":2850,"endOffset":3139,"count":1},{"startOffset":3048,"endOffset":3133,"count":0}],"isBlockCoverage":true},{"functionName":"updateUser","ranges":[{"startOffset":3158,"endOffset":3693,"count":1},{"startOffset":3483,"endOffset":3583,"count":0},{"startOffset":3602,"endOffset":3687,"count":0}],"isBlockCoverage":true},{"functionName":"deleteUser","ranges":[{"startOffset":3712,"endOffset":4200,"count":1},{"startOffset":3990,"endOffset":4090,"count":0},{"startOffset":4109,"endOffset":4194,"count":0}],"isBlockCoverage":true}]},{"scriptId":"304","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/dist/src/helpers/sendEmail.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":668,"count":1}],"isBlockCoverage":true},{"functionName":"sendVerificationToken","ranges":[{"startOffset":241,"endOffset":628,"count":0}],"isBlockCoverage":false}]},{"scriptId":"305","url":"node:internal/legacy/processbinding","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1168,"count":1}],"isBlockCoverage":false},{"functionName":"util","ranges":[{"startOffset":216,"endOffset":846,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":335,"endOffset":837,"count":84}],"isBlockCoverage":true},{"functionName":"natives","ranges":[{"startOffset":851,"endOffset":1161,"count":0}],"isBlockCoverage":false}]},{"scriptId":"306","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/supertest/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1312,"count":1},{"startOffset":198,"endOffset":245,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":487,"endOffset":1188,"count":5},{"startOffset":594,"endOffset":813,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":927,"endOffset":1111,"count":170}],"isBlockCoverage":true},{"functionName":"obj.<computed>","ranges":[{"startOffset":964,"endOffset":1106,"count":5},{"startOffset":1050,"endOffset":1081,"count":0}],"isBlockCoverage":true}]},{"scriptId":"307","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/methods/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1040,"count":1},{"startOffset":299,"endOffset":323,"count":0}],"isBlockCoverage":true},{"functionName":"getCurrentNodeMethods","ranges":[{"startOffset":383,"endOffset":535,"count":1}],"isBlockCoverage":true},{"functionName":"lowerCaseMethod","ranges":[{"startOffset":460,"endOffset":531,"count":34}],"isBlockCoverage":true},{"functionName":"getBasicNodeMethods","ranges":[{"startOffset":624,"endOffset":1039,"count":0}],"isBlockCoverage":false}]},{"scriptId":"308","url":"node:http","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5878,"count":1}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":2221,"endOffset":2315,"count":6}],"isBlockCoverage":true},{"functionName":"request","ranges":[{"startOffset":4498,"endOffset":4584,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4758,"endOffset":4864,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxIdleHTTPParsers","ranges":[{"startOffset":5192,"endOffset":5286,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5418,"endOffset":5634,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5765,"endOffset":5812,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5817,"endOffset":5870,"count":0}],"isBlockCoverage":false}]},{"scriptId":"309","url":"node:_http_agent","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17554,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1752,"endOffset":1779,"count":1}],"isBlockCoverage":true},{"functionName":"ReusedHandle","ranges":[{"startOffset":2761,"endOffset":2843,"count":0}],"isBlockCoverage":false},{"functionName":"freeSocketErrorListener","ranges":[{"startOffset":2850,"endOffset":3034,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":3038,"endOffset":6370,"count":7},{"startOffset":3102,"endOffset":3128,"count":0},{"startOffset":3697,"endOffset":3705,"count":5},{"startOffset":3886,"endOffset":3895,"count":5},{"startOffset":4097,"endOffset":4168,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4240,"endOffset":6249,"count":0}],"isBlockCoverage":false},{"functionName":"maybeEnableKeylog","ranges":[{"startOffset":6482,"endOffset":7021,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":7201,"endOffset":7719,"count":15},{"startOffset":7271,"endOffset":7285,"count":0},{"startOffset":7405,"endOffset":7434,"count":0},{"startOffset":7601,"endOffset":7630,"count":0},{"startOffset":7665,"endOffset":7698,"count":0}],"isBlockCoverage":true},{"functionName":"addRequest","ranges":[{"startOffset":7753,"endOffset":9905,"count":5},{"startOffset":7979,"endOffset":8090,"count":0},{"startOffset":8188,"endOffset":8222,"count":0},{"startOffset":8453,"endOffset":8761,"count":0},{"startOffset":8795,"endOffset":8815,"count":0},{"startOffset":8894,"endOffset":9062,"count":0},{"startOffset":9442,"endOffset":9902,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9300,"endOffset":9435,"count":5},{"startOffset":9344,"endOffset":9370,"count":0}],"isBlockCoverage":true},{"functionName":"createSocket","ranges":[{"startOffset":9941,"endOffset":10989,"count":5},{"startOffset":10078,"endOffset":10112,"count":0},{"startOffset":10768,"endOffset":10873,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10325,"endOffset":10667,"count":5},{"startOffset":10360,"endOffset":10375,"count":0},{"startOffset":10406,"endOffset":10446,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeServerName","ranges":[{"startOffset":10994,"endOffset":11159,"count":10},{"startOffset":11101,"endOffset":11156,"count":5}],"isBlockCoverage":true},{"functionName":"calculateServerName","ranges":[{"startOffset":11163,"endOffset":12008,"count":5},{"startOffset":11508,"endOffset":11795,"count":0}],"isBlockCoverage":true},{"functionName":"installListeners","ranges":[{"startOffset":12012,"endOffset":13548,"count":5},{"startOffset":13500,"endOffset":13545,"count":0}],"isBlockCoverage":true},{"functionName":"onFree","ranges":[{"startOffset":12062,"endOffset":12159,"count":0}],"isBlockCoverage":false},{"functionName":"onClose","ranges":[{"startOffset":12190,"endOffset":12520,"count":5}],"isBlockCoverage":true},{"functionName":"onTimeout","ranges":[{"startOffset":12553,"endOffset":12909,"count":0}],"isBlockCoverage":false},{"functionName":"onRemove","ranges":[{"startOffset":12946,"endOffset":13438,"count":0}],"isBlockCoverage":false},{"functionName":"removeSocket","ranges":[{"startOffset":13583,"endOffset":15440,"count":5},{"startOffset":13936,"endOffset":14259,"count":10},{"startOffset":13995,"endOffset":14254,"count":5},{"startOffset":14301,"endOffset":14330,"count":0},{"startOffset":14332,"endOffset":14432,"count":0},{"startOffset":14763,"endOffset":15124,"count":0},{"startOffset":15143,"endOffset":15153,"count":0},{"startOffset":15155,"endOffset":15435,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15309,"endOffset":15428,"count":0}],"isBlockCoverage":false},{"functionName":"keepSocketAlive","ranges":[{"startOffset":15479,"endOffset":16173,"count":0}],"isBlockCoverage":false},{"functionName":"reuseSocket","ranges":[{"startOffset":16208,"endOffset":16381,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":16412,"endOffset":16773,"count":0}],"isBlockCoverage":false},{"functionName":"setRequestSocket","ranges":[{"startOffset":16778,"endOffset":17026,"count":5},{"startOffset":16936,"endOffset":16967,"count":0},{"startOffset":16988,"endOffset":17025,"count":0}],"isBlockCoverage":true},{"functionName":"asyncResetHandle","ranges":[{"startOffset":17030,"endOffset":17433,"count":0}],"isBlockCoverage":false}]},{"scriptId":"310","url":"node:_http_client","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29362,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3170,"endOffset":3197,"count":1}],"isBlockCoverage":true},{"functionName":"validateHost","ranges":[{"startOffset":3452,"endOffset":3752,"count":10},{"startOffset":3531,"endOffset":3558,"count":5},{"startOffset":3560,"endOffset":3733,"count":0}],"isBlockCoverage":true},{"functionName":"HTTPClientAsyncResource","ranges":[{"startOffset":3791,"endOffset":3864,"count":5}],"isBlockCoverage":true},{"functionName":"ClientRequest","ranges":[{"startOffset":3871,"endOffset":11631,"count":5},{"startOffset":4001,"endOffset":4082,"count":0},{"startOffset":4106,"endOffset":4175,"count":0},{"startOffset":4288,"endOffset":4351,"count":0},{"startOffset":4590,"endOffset":5090,"count":0},{"startOffset":5445,"endOffset":5576,"count":0},{"startOffset":5622,"endOffset":5693,"count":0},{"startOffset":5923,"endOffset":5937,"count":0},{"startOffset":5938,"endOffset":5943,"count":0},{"startOffset":6108,"endOffset":6122,"count":0},{"startOffset":6176,"endOffset":6203,"count":0},{"startOffset":6294,"endOffset":6354,"count":0},{"startOffset":6406,"endOffset":6485,"count":0},{"startOffset":6641,"endOffset":6720,"count":0},{"startOffset":6794,"endOffset":6861,"count":0},{"startOffset":6930,"endOffset":6977,"count":0},{"startOffset":7069,"endOffset":7120,"count":0},{"startOffset":7261,"endOffset":7339,"count":0},{"startOffset":7444,"endOffset":7534,"count":0},{"startOffset":7628,"endOffset":7634,"count":0},{"startOffset":7647,"endOffset":7685,"count":0},{"startOffset":7712,"endOffset":7739,"count":3},{"startOffset":7740,"endOffset":7769,"count":3},{"startOffset":7770,"endOffset":7800,"count":2},{"startOffset":7801,"endOffset":7829,"count":2},{"startOffset":7830,"endOffset":7860,"count":2},{"startOffset":7862,"endOffset":7915,"count":3},{"startOffset":7915,"endOffset":7973,"count":2},{"startOffset":8692,"endOffset":8769,"count":0},{"startOffset":8882,"endOffset":9189,"count":0},{"startOffset":9561,"endOffset":9629,"count":0},{"startOffset":9630,"endOffset":9691,"count":0},{"startOffset":9702,"endOffset":9753,"count":0},{"startOffset":9918,"endOffset":9953,"count":0},{"startOffset":9955,"endOffset":10082,"count":0},{"startOffset":10120,"endOffset":10337,"count":0},{"startOffset":10342,"endOffset":10467,"count":0},{"startOffset":10651,"endOffset":11628,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11113,"endOffset":11283,"count":0}],"isBlockCoverage":false},{"functionName":"_finish","ranges":[{"startOffset":11799,"endOffset":12547,"count":5},{"startOffset":11915,"endOffset":12260,"count":0},{"startOffset":12312,"endOffset":12392,"count":0},{"startOffset":12422,"endOffset":12544,"count":0}],"isBlockCoverage":true},{"functionName":"_implicitHeader","ranges":[{"startOffset":12594,"endOffset":12812,"count":5},{"startOffset":12644,"endOffset":12698,"count":0}],"isBlockCoverage":true},{"functionName":"abort","ranges":[{"startOffset":12849,"endOffset":12994,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":13033,"endOffset":13324,"count":0}],"isBlockCoverage":false},{"functionName":"emitAbortNT","ranges":[{"startOffset":13329,"endOffset":13381,"count":0}],"isBlockCoverage":false},{"functionName":"ondrain","ranges":[{"startOffset":13385,"endOffset":13551,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseListener","ranges":[{"startOffset":13555,"endOffset":14773,"count":5},{"startOffset":13958,"endOffset":14021,"count":0},{"startOffset":14110,"endOffset":14141,"count":0},{"startOffset":14146,"endOffset":14487,"count":0},{"startOffset":14704,"endOffset":14770,"count":0}],"isBlockCoverage":true},{"functionName":"socketErrorListener","ranges":[{"startOffset":14777,"endOffset":15440,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnEnd","ranges":[{"startOffset":15444,"endOffset":15950,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnData","ranges":[{"startOffset":15954,"endOffset":18404,"count":5},{"startOffset":16184,"endOffset":16479,"count":0},{"startOffset":16533,"endOffset":17758,"count":0}],"isBlockCoverage":true},{"functionName":"statusIsInformational","ranges":[{"startOffset":18408,"endOffset":18649,"count":10},{"startOffset":18610,"endOffset":18626,"count":0},{"startOffset":18627,"endOffset":18644,"count":0}],"isBlockCoverage":true},{"functionName":"parserOnIncomingClient","ranges":[{"startOffset":18664,"endOffset":21776,"count":5},{"startOffset":18845,"endOffset":19012,"count":0},{"startOffset":19096,"endOffset":19105,"count":0},{"startOffset":19225,"endOffset":19307,"count":0},{"startOffset":19356,"endOffset":20079,"count":0},{"startOffset":20109,"endOffset":20128,"count":0},{"startOffset":20129,"endOffset":20153,"count":0},{"startOffset":20155,"endOffset":20378,"count":0},{"startOffset":20418,"endOffset":20440,"count":0},{"startOffset":20442,"endOffset":20676,"count":0},{"startOffset":20730,"endOffset":20833,"count":0},{"startOffset":20862,"endOffset":20902,"count":0},{"startOffset":20904,"endOffset":21042,"count":0},{"startOffset":21519,"endOffset":21531,"count":0},{"startOffset":21565,"endOffset":21574,"count":0},{"startOffset":21650,"endOffset":21732,"count":0}],"isBlockCoverage":true},{"functionName":"responseKeepAlive","ranges":[{"startOffset":21791,"endOffset":22889,"count":0}],"isBlockCoverage":false},{"functionName":"responseOnEnd","ranges":[{"startOffset":22893,"endOffset":24082,"count":5},{"startOffset":23018,"endOffset":23071,"count":0},{"startOffset":23347,"endOffset":23382,"count":0},{"startOffset":23425,"endOffset":24079,"count":0}],"isBlockCoverage":true},{"functionName":"responseOnTimeout","ranges":[{"startOffset":24086,"endOffset":24243,"count":0}],"isBlockCoverage":false},{"functionName":"requestOnFinish","ranges":[{"startOffset":24389,"endOffset":24514,"count":0}],"isBlockCoverage":false},{"functionName":"emitFreeNT","ranges":[{"startOffset":24518,"endOffset":24648,"count":0}],"isBlockCoverage":false},{"functionName":"tickOnSocket","ranges":[{"startOffset":24652,"endOffset":25869,"count":5},{"startOffset":24823,"endOffset":24847,"count":0},{"startOffset":25043,"endOffset":25056,"count":0},{"startOffset":25320,"endOffset":25381,"count":0},{"startOffset":25798,"endOffset":25835,"count":0}],"isBlockCoverage":true},{"functionName":"emitRequestTimeout","ranges":[{"startOffset":25873,"endOffset":25986,"count":0}],"isBlockCoverage":false},{"functionName":"listenSocketTimeout","ranges":[{"startOffset":25990,"endOffset":26395,"count":0}],"isBlockCoverage":false},{"functionName":"onSocket","ranges":[{"startOffset":26434,"endOffset":26609,"count":5}],"isBlockCoverage":true},{"functionName":"onSocketNT","ranges":[{"startOffset":26614,"endOffset":27446,"count":5},{"startOffset":26683,"endOffset":27380,"count":0}],"isBlockCoverage":true},{"functionName":"_destroy","ranges":[{"startOffset":26719,"endOffset":26969,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27144,"endOffset":27298,"count":0}],"isBlockCoverage":false},{"functionName":"_deferToConnect","ranges":[{"startOffset":27510,"endOffset":28287,"count":5},{"startOffset":28255,"endOffset":28284,"count":0}],"isBlockCoverage":true},{"functionName":"callSocketMethod","ranges":[{"startOffset":27921,"endOffset":28017,"count":5}],"isBlockCoverage":true},{"functionName":"onSocket","ranges":[{"startOffset":28041,"endOffset":28188,"count":5},{"startOffset":28115,"endOffset":28183,"count":0}],"isBlockCoverage":true},{"functionName":"setTimeout","ranges":[{"startOffset":28328,"endOffset":28709,"count":0}],"isBlockCoverage":false},{"functionName":"setSocketTimeout","ranges":[{"startOffset":28714,"endOffset":28908,"count":0}],"isBlockCoverage":false},{"functionName":"setNoDelay","ranges":[{"startOffset":28949,"endOffset":29032,"count":5}],"isBlockCoverage":true},{"functionName":"setSocketKeepAlive","ranges":[{"startOffset":29087,"endOffset":29214,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":29258,"endOffset":29315,"count":0}],"isBlockCoverage":false}]},{"scriptId":"311","url":"node:_http_common","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8532,"count":1}],"isBlockCoverage":false},{"functionName":"parserOnHeaders","ranges":[{"startOffset":2356,"endOffset":2610,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnHeadersComplete","ranges":[{"startOffset":2829,"endOffset":4411,"count":10},{"startOffset":3121,"endOffset":3186,"count":0},{"startOffset":3215,"endOffset":3268,"count":5},{"startOffset":3370,"endOffset":3438,"count":5},{"startOffset":3440,"endOffset":3492,"count":5},{"startOffset":3769,"endOffset":3791,"count":5},{"startOffset":4168,"endOffset":4350,"count":5}],"isBlockCoverage":true},{"functionName":"parserOnBody","ranges":[{"startOffset":4415,"endOffset":4745,"count":7},{"startOffset":4566,"endOffset":4573,"count":0},{"startOffset":4715,"endOffset":4737,"count":0}],"isBlockCoverage":true},{"functionName":"parserOnMessageComplete","ranges":[{"startOffset":4749,"endOffset":5256,"count":10},{"startOffset":5000,"endOffset":5118,"count":0}],"isBlockCoverage":true},{"functionName":"parsersCb","ranges":[{"startOffset":5308,"endOffset":5607,"count":2}],"isBlockCoverage":true},{"functionName":"closeParserInstance","ranges":[{"startOffset":5613,"endOffset":5669,"count":0}],"isBlockCoverage":false},{"functionName":"freeParser","ranges":[{"startOffset":6001,"endOffset":6648,"count":10},{"startOffset":6095,"endOffset":6114,"count":5},{"startOffset":6204,"endOffset":6386,"count":0},{"startOffset":6566,"endOffset":6596,"count":5}],"isBlockCoverage":true},{"functionName":"checkIsHttpToken","ranges":[{"startOffset":6868,"endOffset":6961,"count":44}],"isBlockCoverage":true},{"functionName":"checkInvalidHeaderChar","ranges":[{"startOffset":7232,"endOffset":7335,"count":44}],"isBlockCoverage":true},{"functionName":"cleanParser","ranges":[{"startOffset":7339,"endOffset":7734,"count":12}],"isBlockCoverage":true},{"functionName":"prepareError","ranges":[{"startOffset":7738,"endOffset":7935,"count":0}],"isBlockCoverage":false},{"functionName":"isLenient","ranges":[{"startOffset":7969,"endOffset":8160,"count":10},{"startOffset":8018,"endOffset":8035,"count":0},{"startOffset":8037,"endOffset":8127,"count":0}],"isBlockCoverage":true}]},{"scriptId":"312","url":"node:internal/freelist","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":506,"count":1}],"isBlockCoverage":false},{"functionName":"FreeList","ranges":[{"startOffset":83,"endOffset":206,"count":1}],"isBlockCoverage":true},{"functionName":"alloc","ranges":[{"startOffset":212,"endOffset":335,"count":10},{"startOffset":255,"endOffset":279,"count":8},{"startOffset":280,"endOffset":329,"count":2}],"isBlockCoverage":true},{"functionName":"free","ranges":[{"startOffset":341,"endOffset":471,"count":10},{"startOffset":447,"endOffset":470,"count":0}],"isBlockCoverage":true}]},{"scriptId":"313","url":"node:_http_incoming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15359,"count":1}],"isBlockCoverage":false},{"functionName":"readStart","ranges":[{"startOffset":1689,"endOffset":1795,"count":12}],"isBlockCoverage":true},{"functionName":"readStop","ranges":[{"startOffset":1799,"endOffset":1865,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingMessage","ranges":[{"startOffset":1934,"endOffset":2960,"count":10}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3176,"endOffset":3218,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3228,"endOffset":3272,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3371,"endOffset":3680,"count":61},{"startOffset":3410,"endOffset":3647,"count":10},{"startOffset":3571,"endOffset":3640,"count":49}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3690,"endOffset":3737,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3844,"endOffset":4193,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4203,"endOffset":4258,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4358,"endOffset":4673,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4683,"endOffset":4731,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4839,"endOffset":5194,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5204,"endOffset":5260,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":5309,"endOffset":5452,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":5941,"endOffset":6329,"count":2}],"isBlockCoverage":true},{"functionName":"_destroy","ranges":[{"startOffset":6577,"endOffset":7396,"count":10},{"startOffset":6652,"endOffset":6711,"count":0},{"startOffset":7081,"endOffset":7334,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7157,"endOffset":7327,"count":0}],"isBlockCoverage":false},{"functionName":"_addHeaderLines","ranges":[{"startOffset":7463,"endOffset":7941,"count":10},{"startOffset":7577,"endOffset":7684,"count":0},{"startOffset":7812,"endOffset":7933,"count":0}],"isBlockCoverage":true},{"functionName":"matchKnownFields","ranges":[{"startOffset":8676,"endOffset":12665,"count":54},{"startOffset":8755,"endOffset":8837,"count":0},{"startOffset":8843,"endOffset":9196,"count":15},{"startOffset":8879,"endOffset":8898,"count":10},{"startOffset":8900,"endOffset":8914,"count":5},{"startOffset":8914,"endOffset":8962,"count":10},{"startOffset":8964,"endOffset":8978,"count":0},{"startOffset":8978,"endOffset":9007,"count":10},{"startOffset":9007,"endOffset":9026,"count":5},{"startOffset":9028,"endOffset":9071,"count":5},{"startOffset":9071,"endOffset":9090,"count":0},{"startOffset":9092,"endOffset":9112,"count":5},{"startOffset":9112,"endOffset":9160,"count":0},{"startOffset":9162,"endOffset":9196,"count":0},{"startOffset":9202,"endOffset":9597,"count":0},{"startOffset":9603,"endOffset":9849,"count":0},{"startOffset":9855,"endOffset":10052,"count":0},{"startOffset":10058,"endOffset":10355,"count":10},{"startOffset":10137,"endOffset":10157,"count":0},{"startOffset":10228,"endOffset":10244,"count":0},{"startOffset":10279,"endOffset":10304,"count":0},{"startOffset":10341,"endOffset":10355,"count":0},{"startOffset":10361,"endOffset":10477,"count":0},{"startOffset":10483,"endOffset":10699,"count":17},{"startOffset":10528,"endOffset":10555,"count":10},{"startOffset":10566,"endOffset":10588,"count":7},{"startOffset":10588,"endOffset":10652,"count":10},{"startOffset":10663,"endOffset":10685,"count":0},{"startOffset":10685,"endOffset":10699,"count":10},{"startOffset":10705,"endOffset":11139,"count":0},{"startOffset":11145,"endOffset":11270,"count":7},{"startOffset":11192,"endOffset":11221,"count":0},{"startOffset":11256,"endOffset":11270,"count":0},{"startOffset":11276,"endOffset":11634,"count":5},{"startOffset":11324,"endOffset":11354,"count":0},{"startOffset":11396,"endOffset":11466,"count":0},{"startOffset":11477,"endOffset":11578,"count":0},{"startOffset":11589,"endOffset":11634,"count":0},{"startOffset":11640,"endOffset":11892,"count":0},{"startOffset":11898,"endOffset":12268,"count":0},{"startOffset":12274,"endOffset":12532,"count":0},{"startOffset":12537,"endOffset":12557,"count":10},{"startOffset":12557,"endOffset":12664,"count":5}],"isBlockCoverage":true},{"functionName":"_addHeaderLine","ranges":[{"startOffset":13287,"endOffset":14367,"count":49},{"startOffset":13440,"endOffset":13453,"count":24},{"startOffset":13455,"endOffset":13687,"count":25},{"startOffset":13574,"endOffset":13640,"count":0},{"startOffset":13687,"endOffset":14364,"count":24},{"startOffset":13709,"endOffset":13911,"count":0},{"startOffset":13948,"endOffset":14271,"count":0}],"isBlockCoverage":true},{"functionName":"_addHeaderLineDistinct","ranges":[{"startOffset":14447,"endOffset":14647,"count":0}],"isBlockCoverage":false},{"functionName":"_dump","ranges":[{"startOffset":14775,"endOffset":15024,"count":3}],"isBlockCoverage":true},{"functionName":"onError","ranges":[{"startOffset":15029,"endOffset":15284,"count":10},{"startOffset":15236,"endOffset":15281,"count":5}],"isBlockCoverage":true}]},{"scriptId":"314","url":"node:_http_outgoing","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":36510,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2826,"endOffset":2853,"count":1}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":3171,"endOffset":3179,"count":19}],"isBlockCoverage":true},{"functionName":"isCookieField","ranges":[{"startOffset":3429,"endOffset":3531,"count":0}],"isBlockCoverage":false},{"functionName":"isContentDispositionField","ranges":[{"startOffset":3535,"endOffset":3663,"count":34},{"startOffset":3601,"endOffset":3659,"count":0}],"isBlockCoverage":true},{"functionName":"OutgoingMessage","ranges":[{"startOffset":3667,"endOffset":5241,"count":10},{"startOffset":5106,"endOffset":5121,"count":5},{"startOffset":5122,"endOffset":5150,"count":5},{"startOffset":5199,"endOffset":5228,"count":5},{"startOffset":5229,"endOffset":5237,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5445,"endOffset":5485,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5578,"endOffset":5616,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5719,"endOffset":5867,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5972,"endOffset":6003,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6104,"endOffset":6194,"count":7},{"startOffset":6155,"endOffset":6183,"count":5},{"startOffset":6184,"endOffset":6187,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6302,"endOffset":6398,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6499,"endOffset":6613,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6736,"endOffset":6784,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6881,"endOffset":7380,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7546,"endOffset":7588,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7598,"endOffset":7642,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7769,"endOffset":8241,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8342,"endOffset":8806,"count":0}],"isBlockCoverage":false},{"functionName":"_renderHeaders","ranges":[{"startOffset":8929,"endOffset":9451,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.cork","ranges":[{"startOffset":9489,"endOffset":9590,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.uncork","ranges":[{"startOffset":9630,"endOffset":9752,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":9796,"endOffset":10104,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":10353,"endOffset":10682,"count":0}],"isBlockCoverage":false},{"functionName":"_send","ranges":[{"startOffset":10796,"endOffset":11770,"count":17},{"startOffset":11079,"endOffset":11103,"count":10},{"startOffset":11105,"endOffset":11703,"count":10},{"startOffset":11297,"endOffset":11368,"count":5},{"startOffset":11355,"endOffset":11367,"count":2},{"startOffset":11370,"endOffset":11668,"count":5}],"isBlockCoverage":true},{"functionName":"_writeRaw","ranges":[{"startOffset":11825,"endOffset":12701,"count":17},{"startOffset":11919,"endOffset":11936,"count":10},{"startOffset":11938,"endOffset":12089,"count":0},{"startOffset":12131,"endOffset":12185,"count":0},{"startOffset":12200,"endOffset":12229,"count":10},{"startOffset":12230,"endOffset":12246,"count":10},{"startOffset":12248,"endOffset":12475,"count":10},{"startOffset":12346,"endOffset":12386,"count":5},{"startOffset":12475,"endOffset":12700,"count":7}],"isBlockCoverage":true},{"functionName":"_storeHeader","ranges":[{"startOffset":12763,"endOffset":17816,"count":10},{"startOffset":13205,"endOffset":13316,"count":34},{"startOffset":13323,"endOffset":14066,"count":0},{"startOffset":14142,"endOffset":14156,"count":5},{"startOffset":14158,"endOffset":14210,"count":5},{"startOffset":14817,"endOffset":14904,"count":0},{"startOffset":14906,"endOffset":15094,"count":0},{"startOffset":15152,"endOffset":15355,"count":0},{"startOffset":15440,"endOffset":15517,"count":0},{"startOffset":15548,"endOffset":15586,"count":0},{"startOffset":15588,"endOffset":15638,"count":0},{"startOffset":15669,"endOffset":16079,"count":0},{"startOffset":16191,"endOffset":16203,"count":3},{"startOffset":16205,"endOffset":17214,"count":3},{"startOffset":16232,"endOffset":16351,"count":0},{"startOffset":16430,"endOffset":17209,"count":0},{"startOffset":17541,"endOffset":17590,"count":0},{"startOffset":17798,"endOffset":17813,"count":0}],"isBlockCoverage":true},{"functionName":"processHeader","ranges":[{"startOffset":17820,"endOffset":18995,"count":34},{"startOffset":17902,"endOffset":17926,"count":0},{"startOffset":18175,"endOffset":18197,"count":0},{"startOffset":18199,"endOffset":18454,"count":0},{"startOffset":18485,"endOffset":18941,"count":0}],"isBlockCoverage":true},{"functionName":"storeHeader","ranges":[{"startOffset":18999,"endOffset":19203,"count":34},{"startOffset":19079,"endOffset":19111,"count":0}],"isBlockCoverage":true},{"functionName":"matchHeader","ranges":[{"startOffset":19207,"endOffset":20164,"count":34},{"startOffset":19308,"endOffset":19315,"count":0},{"startOffset":19387,"endOffset":19632,"count":0},{"startOffset":19638,"endOffset":19834,"count":0},{"startOffset":19840,"endOffset":19978,"count":7},{"startOffset":19984,"endOffset":19996,"count":0},{"startOffset":20002,"endOffset":20016,"count":0},{"startOffset":20022,"endOffset":20079,"count":0},{"startOffset":20085,"endOffset":20156,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20211,"endOffset":20398,"count":39},{"startOffset":20299,"endOffset":20395,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20448,"endOffset":20768,"count":39},{"startOffset":20495,"endOffset":20581,"count":0},{"startOffset":20620,"endOffset":20765,"count":0}],"isBlockCoverage":true},{"functionName":"parseUniqueHeadersOption","ranges":[{"startOffset":20774,"endOffset":21056,"count":11},{"startOffset":20874,"endOffset":21055,"count":0}],"isBlockCoverage":true},{"functionName":"setHeader","ranges":[{"startOffset":21098,"endOffset":21472,"count":39},{"startOffset":21153,"endOffset":21204,"count":0},{"startOffset":21339,"endOffset":21389,"count":10}],"isBlockCoverage":true},{"functionName":"setHeaders","ranges":[{"startOffset":21516,"endOffset":22562,"count":0}],"isBlockCoverage":false},{"functionName":"appendHeader","ranges":[{"startOffset":22608,"endOffset":23372,"count":0}],"isBlockCoverage":false},{"functionName":"getHeader","ranges":[{"startOffset":23417,"endOffset":23648,"count":46},{"startOffset":23547,"endOffset":23554,"count":5},{"startOffset":23554,"endOffset":23633,"count":41},{"startOffset":23633,"endOffset":23644,"count":19}],"isBlockCoverage":true},{"functionName":"getHeaderNames","ranges":[{"startOffset":23765,"endOffset":23870,"count":0}],"isBlockCoverage":false},{"functionName":"getRawHeaderNames","ranges":[{"startOffset":23994,"endOffset":24408,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaders","ranges":[{"startOffset":24514,"endOffset":24938,"count":0}],"isBlockCoverage":false},{"functionName":"hasHeader","ranges":[{"startOffset":24983,"endOffset":25145,"count":0}],"isBlockCoverage":false},{"functionName":"removeHeader","ranges":[{"startOffset":25193,"endOffset":25785,"count":0}],"isBlockCoverage":false},{"functionName":"_implicitHeader","ranges":[{"startOffset":25836,"endOffset":25929,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26071,"endOffset":26108,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26213,"endOffset":26249,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26358,"endOffset":26442,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":26525,"endOffset":26788,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":26793,"endOffset":27162,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNt","ranges":[{"startOffset":27166,"endOffset":27320,"count":0}],"isBlockCoverage":false},{"functionName":"strictContentLength","ranges":[{"startOffset":27324,"endOffset":27567,"count":10},{"startOffset":27401,"endOffset":27435,"count":0},{"startOffset":27436,"endOffset":27456,"count":0},{"startOffset":27457,"endOffset":27485,"count":0},{"startOffset":27486,"endOffset":27514,"count":0},{"startOffset":27515,"endOffset":27558,"count":0}],"isBlockCoverage":true},{"functionName":"write_","ranges":[{"startOffset":27571,"endOffset":29856,"count":7},{"startOffset":27715,"endOffset":27762,"count":0},{"startOffset":27798,"endOffset":27821,"count":5},{"startOffset":27823,"endOffset":27926,"count":0},{"startOffset":27962,"endOffset":28013,"count":0},{"startOffset":28038,"endOffset":28090,"count":0},{"startOffset":28105,"endOffset":28254,"count":0},{"startOffset":28303,"endOffset":28714,"count":0},{"startOffset":28801,"endOffset":28837,"count":2},{"startOffset":28838,"endOffset":28856,"count":5},{"startOffset":28955,"endOffset":29228,"count":0},{"startOffset":29247,"endOffset":29260,"count":0},{"startOffset":29261,"endOffset":29290,"count":0},{"startOffset":29292,"endOffset":29375,"count":0},{"startOffset":29417,"endOffset":29438,"count":0},{"startOffset":29440,"endOffset":29738,"count":0}],"isBlockCoverage":true},{"functionName":"connectionCorkNT","ranges":[{"startOffset":29862,"endOffset":29916,"count":0}],"isBlockCoverage":false},{"functionName":"addTrailers","ranges":[{"startOffset":29960,"endOffset":31438,"count":0}],"isBlockCoverage":false},{"functionName":"onFinish","ranges":[{"startOffset":31443,"endOffset":31566,"count":10},{"startOffset":31530,"endOffset":31537,"count":0}],"isBlockCoverage":true},{"functionName":"end","ranges":[{"startOffset":31602,"endOffset":33641,"count":10},{"startOffset":31680,"endOffset":31750,"count":0},{"startOffset":31792,"endOffset":31846,"count":0},{"startOffset":31863,"endOffset":32167,"count":7},{"startOffset":31889,"endOffset":32052,"count":0},{"startOffset":32077,"endOffset":32112,"count":5},{"startOffset":32167,"endOffset":32575,"count":3},{"startOffset":32192,"endOffset":32425,"count":0},{"startOffset":32474,"endOffset":32509,"count":0},{"startOffset":32622,"endOffset":32652,"count":0},{"startOffset":32688,"endOffset":32734,"count":0},{"startOffset":32736,"endOffset":32833,"count":0},{"startOffset":32934,"endOffset":33009,"count":0},{"startOffset":33037,"endOffset":33059,"count":7},{"startOffset":33060,"endOffset":33068,"count":0},{"startOffset":33115,"endOffset":33158,"count":0},{"startOffset":33181,"endOffset":33300,"count":5},{"startOffset":33526,"endOffset":33547,"count":5},{"startOffset":33548,"endOffset":33591,"count":5},{"startOffset":33593,"endOffset":33620,"count":5}],"isBlockCoverage":true},{"functionName":"_finish","ranges":[{"startOffset":33820,"endOffset":33894,"count":10}],"isBlockCoverage":true},{"functionName":"_flush","ranges":[{"startOffset":34710,"endOffset":35155,"count":10},{"startOffset":34936,"endOffset":35147,"count":5},{"startOffset":35058,"endOffset":35077,"count":0},{"startOffset":35079,"endOffset":35147,"count":0}],"isBlockCoverage":true},{"functionName":"_flushOutput","ranges":[{"startOffset":35201,"endOffset":35870,"count":15},{"startOffset":35258,"endOffset":35306,"count":0},{"startOffset":35388,"endOffset":35405,"count":5},{"startOffset":35405,"endOffset":35623,"count":10},{"startOffset":35623,"endOffset":35737,"count":12},{"startOffset":35737,"endOffset":35869,"count":10}],"isBlockCoverage":true},{"functionName":"flushHeaders","ranges":[{"startOffset":35918,"endOffset":36056,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":36094,"endOffset":36239,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.<computed>","ranges":[{"startOffset":36300,"endOffset":36347,"count":0}],"isBlockCoverage":false}]},{"scriptId":"315","url":"node:internal/http","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1257,"count":1}],"isBlockCoverage":false},{"functionName":"utcDate","ranges":[{"startOffset":367,"endOffset":437,"count":5},{"startOffset":406,"endOffset":414,"count":1}],"isBlockCoverage":true},{"functionName":"cache","ranges":[{"startOffset":441,"endOffset":602,"count":1}],"isBlockCoverage":true},{"functionName":"resetCache","ranges":[{"startOffset":606,"endOffset":657,"count":0}],"isBlockCoverage":false},{"functionName":"getNextTraceEventId","ranges":[{"startOffset":686,"endOffset":747,"count":0}],"isBlockCoverage":false},{"functionName":"isTraceHTTPEnabled","ranges":[{"startOffset":751,"endOffset":832,"count":20}],"isBlockCoverage":true},{"functionName":"traceBegin","ranges":[{"startOffset":884,"endOffset":974,"count":0}],"isBlockCoverage":false},{"functionName":"traceEnd","ranges":[{"startOffset":978,"endOffset":1066,"count":0}],"isBlockCoverage":false}]},{"scriptId":"316","url":"node:_http_server","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":39527,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2854,"endOffset":2881,"count":1}],"isBlockCoverage":true},{"functionName":"HTTPServerAsyncResource","ranges":[{"startOffset":7281,"endOffset":7363,"count":5}],"isBlockCoverage":true},{"functionName":"ServerResponse","ranges":[{"startOffset":7370,"endOffset":8322,"count":5},{"startOffset":7482,"endOffset":7504,"count":0},{"startOffset":7674,"endOffset":7878,"count":0},{"startOffset":7909,"endOffset":8167,"count":0},{"startOffset":8197,"endOffset":8319,"count":0}],"isBlockCoverage":true},{"functionName":"_finish","ranges":[{"startOffset":8493,"endOffset":9158,"count":5},{"startOffset":8553,"endOffset":8575,"count":0},{"startOffset":8577,"endOffset":8866,"count":0},{"startOffset":8944,"endOffset":8985,"count":0},{"startOffset":8987,"endOffset":9155,"count":0}],"isBlockCoverage":true},{"functionName":"onServerResponseClose","ranges":[{"startOffset":9264,"endOffset":10276,"count":0}],"isBlockCoverage":false},{"functionName":"assignSocket","ranges":[{"startOffset":10320,"endOffset":10584,"count":5},{"startOffset":10380,"endOffset":10429,"count":0}],"isBlockCoverage":true},{"functionName":"detachSocket","ranges":[{"startOffset":10629,"endOffset":10816,"count":5}],"isBlockCoverage":true},{"functionName":"writeContinue","ranges":[{"startOffset":10862,"endOffset":10983,"count":0}],"isBlockCoverage":false},{"functionName":"writeProcessing","ranges":[{"startOffset":11031,"endOffset":11131,"count":0}],"isBlockCoverage":false},{"functionName":"writeEarlyHints","ranges":[{"startOffset":11179,"endOffset":11715,"count":0}],"isBlockCoverage":false},{"functionName":"_implicitHeader","ranges":[{"startOffset":11763,"endOffset":11830,"count":5}],"isBlockCoverage":true},{"functionName":"writeHead","ranges":[{"startOffset":11884,"endOffset":14540,"count":5},{"startOffset":11953,"endOffset":12006,"count":0},{"startOffset":12118,"endOffset":12189,"count":0},{"startOffset":12229,"endOffset":12324,"count":0},{"startOffset":12456,"endOffset":12468,"count":0},{"startOffset":12685,"endOffset":12927,"count":0},{"startOffset":12942,"endOffset":13220,"count":0},{"startOffset":13296,"endOffset":13360,"count":0},{"startOffset":13419,"endOffset":13463,"count":0},{"startOffset":13642,"endOffset":14237,"count":0},{"startOffset":14414,"endOffset":14431,"count":0},{"startOffset":14433,"endOffset":14474,"count":0}],"isBlockCoverage":true},{"functionName":"storeHTTPOptions","ranges":[{"startOffset":14656,"endOffset":17534,"count":6},{"startOffset":14925,"endOffset":14976,"count":0},{"startOffset":15122,"endOffset":15188,"count":0},{"startOffset":15327,"endOffset":15435,"count":0},{"startOffset":15586,"endOffset":15694,"count":0},{"startOffset":15926,"endOffset":16026,"count":0},{"startOffset":16122,"endOffset":16238,"count":0},{"startOffset":16429,"endOffset":16589,"count":0},{"startOffset":16762,"endOffset":16887,"count":0},{"startOffset":17043,"endOffset":17125,"count":0},{"startOffset":17307,"endOffset":17472,"count":0}],"isBlockCoverage":true},{"functionName":"setupConnectionsTracking","ranges":[{"startOffset":17538,"endOffset":18019,"count":6}],"isBlockCoverage":true},{"functionName":"httpServerPreClose","ranges":[{"startOffset":18023,"endOffset":18153,"count":5}],"isBlockCoverage":true},{"functionName":"Server","ranges":[{"startOffset":18157,"endOffset":19388,"count":6},{"startOffset":18235,"endOffset":18279,"count":0},{"startOffset":18387,"endOffset":18502,"count":0}],"isBlockCoverage":true},{"functionName":"Server.close","ranges":[{"startOffset":19523,"endOffset":19645,"count":5}],"isBlockCoverage":true},{"functionName":"Server.<computed>","ranges":[{"startOffset":19689,"endOffset":19772,"count":0}],"isBlockCoverage":false},{"functionName":"Server.closeAllConnections","ranges":[{"startOffset":19816,"endOffset":20032,"count":0}],"isBlockCoverage":false},{"functionName":"Server.closeIdleConnections","ranges":[{"startOffset":20077,"endOffset":20415,"count":5},{"startOffset":20118,"endOffset":20137,"count":0},{"startOffset":20293,"endOffset":20340,"count":0},{"startOffset":20342,"endOffset":20367,"count":0}],"isBlockCoverage":true},{"functionName":"setTimeout","ranges":[{"startOffset":20450,"endOffset":20584,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":20635,"endOffset":21224,"count":0}],"isBlockCoverage":false},{"functionName":"checkConnections","ranges":[{"startOffset":21229,"endOffset":21588,"count":0}],"isBlockCoverage":false},{"functionName":"connectionListener","ranges":[{"startOffset":21592,"endOffset":21741,"count":5}],"isBlockCoverage":true},{"functionName":"connectionListenerInternal","ranges":[{"startOffset":21745,"endOffset":25261,"count":5},{"startOffset":22177,"endOffset":22219,"count":0},{"startOffset":22226,"endOffset":22260,"count":0},{"startOffset":22420,"endOffset":22447,"count":0},{"startOffset":22762,"endOffset":22775,"count":0},{"startOffset":22993,"endOffset":23057,"count":0}],"isBlockCoverage":true},{"functionName":"socketSetEncoding","ranges":[{"startOffset":25265,"endOffset":25339,"count":0}],"isBlockCoverage":false},{"functionName":"updateOutgoingData","ranges":[{"startOffset":25343,"endOffset":25462,"count":10}],"isBlockCoverage":true},{"functionName":"socketOnDrain","ranges":[{"startOffset":25466,"endOffset":25936,"count":10},{"startOffset":25659,"endOffset":25672,"count":0},{"startOffset":25674,"endOffset":25786,"count":0},{"startOffset":25873,"endOffset":25933,"count":0}],"isBlockCoverage":true},{"functionName":"socketOnTimeout","ranges":[{"startOffset":25940,"endOffset":26322,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnClose","ranges":[{"startOffset":26326,"endOffset":26479,"count":5}],"isBlockCoverage":true},{"functionName":"abortIncoming","ranges":[{"startOffset":26483,"endOffset":26676,"count":5},{"startOffset":26545,"endOffset":26639,"count":0}],"isBlockCoverage":true},{"functionName":"socketOnEnd","ranges":[{"startOffset":26680,"endOffset":27218,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnData","ranges":[{"startOffset":27222,"endOffset":27457,"count":0}],"isBlockCoverage":false},{"functionName":"onRequestTimeout","ranges":[{"startOffset":27461,"endOffset":27638,"count":0}],"isBlockCoverage":false},{"functionName":"onParserExecute","ranges":[{"startOffset":27642,"endOffset":28149,"count":5}],"isBlockCoverage":true},{"functionName":"onParserTimeout","ranges":[{"startOffset":28153,"endOffset":28303,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":28320,"endOffset":28328,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnError","ranges":[{"startOffset":28900,"endOffset":30004,"count":0}],"isBlockCoverage":false},{"functionName":"onParserExecuteCommon","ranges":[{"startOffset":30008,"endOffset":31677,"count":5},{"startOffset":30157,"endOffset":30268,"count":0},{"startOffset":30322,"endOffset":31366,"count":0},{"startOffset":31429,"endOffset":31496,"count":0},{"startOffset":31521,"endOffset":31537,"count":0},{"startOffset":31539,"endOffset":31674,"count":0}],"isBlockCoverage":true},{"functionName":"clearIncoming","ranges":[{"startOffset":31681,"endOffset":32030,"count":8},{"startOffset":31724,"endOffset":31731,"count":3},{"startOffset":31932,"endOffset":31971,"count":5},{"startOffset":31971,"endOffset":32022,"count":3}],"isBlockCoverage":true},{"functionName":"resOnFinish","ranges":[{"startOffset":32034,"endOffset":33403,"count":5},{"startOffset":32137,"endOffset":32264,"count":0},{"startOffset":32734,"endOffset":32772,"count":3},{"startOffset":32779,"endOffset":32791,"count":3},{"startOffset":32995,"endOffset":33030,"count":0},{"startOffset":33035,"endOffset":33400,"count":0}],"isBlockCoverage":true},{"functionName":"emitCloseNT","ranges":[{"startOffset":33407,"endOffset":33546,"count":5}],"isBlockCoverage":true},{"functionName":"parserOnIncoming","ranges":[{"startOffset":33717,"endOffset":37562,"count":5},{"startOffset":33852,"endOffset":34000,"count":0},{"startOffset":34346,"endOffset":34573,"count":0},{"startOffset":35290,"endOffset":35415,"count":0},{"startOffset":35446,"endOffset":35539,"count":0},{"startOffset":36211,"endOffset":36306,"count":0},{"startOffset":36479,"endOffset":36625,"count":0},{"startOffset":36656,"endOffset":36717,"count":0},{"startOffset":36719,"endOffset":36843,"count":0},{"startOffset":36887,"endOffset":37448,"count":0}],"isBlockCoverage":true},{"functionName":"resetSocketTimeout","ranges":[{"startOffset":37566,"endOffset":37752,"count":10},{"startOffset":37666,"endOffset":37709,"count":0}],"isBlockCoverage":true},{"functionName":"onSocketResume","ranges":[{"startOffset":37756,"endOffset":38294,"count":5},{"startOffset":38133,"endOffset":38171,"count":0},{"startOffset":38220,"endOffset":38291,"count":0}],"isBlockCoverage":true},{"functionName":"onSocketPause","ranges":[{"startOffset":38298,"endOffset":38444,"count":0}],"isBlockCoverage":false},{"functionName":"unconsume","ranges":[{"startOffset":38448,"endOffset":38708,"count":0}],"isBlockCoverage":false},{"functionName":"generateSocketListenerWrapper","ranges":[{"startOffset":38712,"endOffset":39282,"count":15}],"isBlockCoverage":true},{"functionName":"socketListenerWrap","ranges":[{"startOffset":38779,"endOffset":39278,"count":10},{"startOffset":38973,"endOffset":39170,"count":0},{"startOffset":39225,"endOffset":39254,"count":0}],"isBlockCoverage":true}]},{"scriptId":"317","url":"node:http2","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":549,"count":1}],"isBlockCoverage":false}]},{"scriptId":"318","url":"node:internal/http2/core","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":114277,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5037,"endOffset":5064,"count":0}],"isBlockCoverage":false},{"functionName":"debugStream","ranges":[{"startOffset":5107,"endOffset":5338,"count":0}],"isBlockCoverage":false},{"functionName":"debugStreamObj","ranges":[{"startOffset":5342,"endOffset":5563,"count":0}],"isBlockCoverage":false},{"functionName":"debugSession","ranges":[{"startOffset":5567,"endOffset":5732,"count":0}],"isBlockCoverage":false},{"functionName":"debugSessionObj","ranges":[{"startOffset":5736,"endOffset":5866,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":9178,"endOffset":9251,"count":0}],"isBlockCoverage":false},{"functionName":"onSessionHeaders","ranges":[{"startOffset":9560,"endOffset":12346,"count":0}],"isBlockCoverage":false},{"functionName":"tryClose","ranges":[{"startOffset":12350,"endOffset":12537,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamTrailers","ranges":[{"startOffset":12713,"endOffset":13023,"count":0}],"isBlockCoverage":false},{"functionName":"submitRstStream","ranges":[{"startOffset":13139,"endOffset":13253,"count":0}],"isBlockCoverage":false},{"functionName":"sessionListenerAdded","ranges":[{"startOffset":13416,"endOffset":14014,"count":0}],"isBlockCoverage":false},{"functionName":"sessionListenerRemoved","ranges":[{"startOffset":14018,"endOffset":14785,"count":0}],"isBlockCoverage":false},{"functionName":"streamListenerAdded","ranges":[{"startOffset":14902,"endOffset":15229,"count":0}],"isBlockCoverage":false},{"functionName":"streamListenerRemoved","ranges":[{"startOffset":15233,"endOffset":15562,"count":0}],"isBlockCoverage":false},{"functionName":"onPing","ranges":[{"startOffset":15566,"endOffset":15779,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamClose","ranges":[{"startOffset":16174,"endOffset":17304,"count":0}],"isBlockCoverage":false},{"functionName":"onSettings","ranges":[{"startOffset":17400,"endOffset":17680,"count":0}],"isBlockCoverage":false},{"functionName":"onPriority","ranges":[{"startOffset":17878,"endOffset":18339,"count":0}],"isBlockCoverage":false},{"functionName":"onFrameError","ranges":[{"startOffset":18455,"endOffset":18893,"count":0}],"isBlockCoverage":false},{"functionName":"onAltSvc","ranges":[{"startOffset":18897,"endOffset":19209,"count":0}],"isBlockCoverage":false},{"functionName":"initOriginSet","ranges":[{"startOffset":19213,"endOffset":19855,"count":0}],"isBlockCoverage":false},{"functionName":"onOrigin","ranges":[{"startOffset":19859,"endOffset":20279,"count":0}],"isBlockCoverage":false},{"functionName":"onGoawayData","ranges":[{"startOffset":20690,"endOffset":21667,"count":0}],"isBlockCoverage":false},{"functionName":"requestOnConnect","ranges":[{"startOffset":21874,"endOffset":23988,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24361,"endOffset":25046,"count":0}],"isBlockCoverage":false},{"functionName":"onSessionInternalError","ranges":[{"startOffset":25147,"endOffset":25322,"count":0}],"isBlockCoverage":false},{"functionName":"settingsCallback","ranges":[{"startOffset":25326,"endOffset":25807,"count":0}],"isBlockCoverage":false},{"functionName":"submitSettings","ranges":[{"startOffset":25871,"endOffset":26274,"count":0}],"isBlockCoverage":false},{"functionName":"submitPriority","ranges":[{"startOffset":26442,"endOffset":26879,"count":0}],"isBlockCoverage":false},{"functionName":"submitGoaway","ranges":[{"startOffset":27120,"endOffset":27343,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27379,"endOffset":28147,"count":0}],"isBlockCoverage":false},{"functionName":"getPrototypeOf","ranges":[{"startOffset":28152,"endOffset":28339,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":28344,"endOffset":29012,"count":0}],"isBlockCoverage":false},{"functionName":"pingCallback","ranges":[{"startOffset":29433,"endOffset":29640,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30260,"endOffset":32517,"count":0}],"isBlockCoverage":false},{"functionName":"trackAssignmentsTypedArray","ranges":[{"startOffset":32658,"endOffset":33407,"count":0}],"isBlockCoverage":false},{"functionName":"setupHandle","ranges":[{"startOffset":33699,"endOffset":36151,"count":0}],"isBlockCoverage":false},{"functionName":"emitClose","ranges":[{"startOffset":36269,"endOffset":36374,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupSession","ranges":[{"startOffset":36378,"endOffset":36827,"count":0}],"isBlockCoverage":false},{"functionName":"finishSessionClose","ranges":[{"startOffset":36831,"endOffset":37809,"count":0}],"isBlockCoverage":false},{"functionName":"closeSession","ranges":[{"startOffset":37813,"endOffset":38898,"count":0}],"isBlockCoverage":false},{"functionName":"Http2Session","ranges":[{"startOffset":41089,"endOffset":43959,"count":0}],"isBlockCoverage":false},{"functionName":"get encrypted","ranges":[{"startOffset":44090,"endOffset":44142,"count":0}],"isBlockCoverage":false},{"functionName":"get alpnProtocol","ranges":[{"startOffset":44327,"endOffset":44385,"count":0}],"isBlockCoverage":false},{"functionName":"get originSet","ranges":[{"startOffset":44759,"endOffset":44894,"count":0}],"isBlockCoverage":false},{"functionName":"get connecting","ranges":[{"startOffset":44974,"endOffset":45059,"count":0}],"isBlockCoverage":false},{"functionName":"get closed","ranges":[{"startOffset":45126,"endOffset":45204,"count":0}],"isBlockCoverage":false},{"functionName":"get destroyed","ranges":[{"startOffset":45273,"endOffset":45357,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":45396,"endOffset":45510,"count":0}],"isBlockCoverage":false},{"functionName":"setNextStreamID","ranges":[{"startOffset":45731,"endOffset":46013,"count":0}],"isBlockCoverage":false},{"functionName":"setLocalWindowSize","ranges":[{"startOffset":46191,"endOffset":46505,"count":0}],"isBlockCoverage":false},{"functionName":"ping","ranges":[{"startOffset":46709,"endOffset":47328,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":47334,"endOffset":47705,"count":0}],"isBlockCoverage":false},{"functionName":"get socket","ranges":[{"startOffset":47750,"endOffset":47942,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":47971,"endOffset":48013,"count":0}],"isBlockCoverage":false},{"functionName":"get goawayCode","ranges":[{"startOffset":48093,"endOffset":48173,"count":0}],"isBlockCoverage":false},{"functionName":"get goawayLastStreamID","ranges":[{"startOffset":48256,"endOffset":48337,"count":0}],"isBlockCoverage":false},{"functionName":"get pendingSettingsAck","ranges":[{"startOffset":48416,"endOffset":48488,"count":0}],"isBlockCoverage":false},{"functionName":"get state","ranges":[{"startOffset":48549,"endOffset":48659,"count":0}],"isBlockCoverage":false},{"functionName":"get localSettings","ranges":[{"startOffset":48808,"endOffset":49080,"count":0}],"isBlockCoverage":false},{"functionName":"get remoteSettings","ranges":[{"startOffset":49146,"endOffset":49619,"count":0}],"isBlockCoverage":false},{"functionName":"settings","ranges":[{"startOffset":49687,"endOffset":50282,"count":0}],"isBlockCoverage":false},{"functionName":"goaway","ranges":[{"startOffset":50542,"endOffset":51155,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":51263,"endOffset":51695,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":52282,"endOffset":52588,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":52594,"endOffset":52844,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":52988,"endOffset":53325,"count":0}],"isBlockCoverage":false},{"functionName":"_onTimeout","ranges":[{"startOffset":53331,"endOffset":53374,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":53380,"endOffset":53453,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":53459,"endOffset":53536,"count":0}],"isBlockCoverage":false},{"functionName":"ServerHttp2Session","ranges":[{"startOffset":53761,"endOffset":54291,"count":0}],"isBlockCoverage":false},{"functionName":"get server","ranges":[{"startOffset":54297,"endOffset":54343,"count":0}],"isBlockCoverage":false},{"functionName":"altsvc","ranges":[{"startOffset":54598,"endOffset":56502,"count":0}],"isBlockCoverage":false},{"functionName":"origin","ranges":[{"startOffset":56550,"endOffset":57327,"count":0}],"isBlockCoverage":false},{"functionName":"ClientHttp2Session","ranges":[{"startOffset":57642,"endOffset":57770,"count":0}],"isBlockCoverage":false},{"functionName":"request","ranges":[{"startOffset":57884,"endOffset":61731,"count":0}],"isBlockCoverage":false},{"functionName":"trackWriteState","ranges":[{"startOffset":61738,"endOffset":61956,"count":0}],"isBlockCoverage":false},{"functionName":"streamOnResume","ranges":[{"startOffset":61960,"endOffset":62046,"count":0}],"isBlockCoverage":false},{"functionName":"streamOnPause","ranges":[{"startOffset":62050,"endOffset":62151,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":62155,"endOffset":62389,"count":0}],"isBlockCoverage":false},{"functionName":"shutdownWritable","ranges":[{"startOffset":62393,"endOffset":62957,"count":0}],"isBlockCoverage":false},{"functionName":"finishSendTrailers","ranges":[{"startOffset":62961,"endOffset":63438,"count":0}],"isBlockCoverage":false},{"functionName":"closeStream","ranges":[{"startOffset":63526,"endOffset":64492,"count":0}],"isBlockCoverage":false},{"functionName":"finishCloseStream","ranges":[{"startOffset":64496,"endOffset":64892,"count":0}],"isBlockCoverage":false},{"functionName":"Http2Stream","ranges":[{"startOffset":65053,"endOffset":66214,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":66220,"endOffset":66405,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":66411,"endOffset":66853,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":66859,"endOffset":67240,"count":0}],"isBlockCoverage":false},{"functionName":"get bufferSize","ranges":[{"startOffset":67246,"endOffset":67464,"count":0}],"isBlockCoverage":false},{"functionName":"get endAfterHeaders","ranges":[{"startOffset":67470,"endOffset":67540,"count":0}],"isBlockCoverage":false},{"functionName":"get sentHeaders","ranges":[{"startOffset":67546,"endOffset":67602,"count":0}],"isBlockCoverage":false},{"functionName":"get sentTrailers","ranges":[{"startOffset":67608,"endOffset":67666,"count":0}],"isBlockCoverage":false},{"functionName":"get sentInfoHeaders","ranges":[{"startOffset":67672,"endOffset":67732,"count":0}],"isBlockCoverage":false},{"functionName":"get pending","ranges":[{"startOffset":67738,"endOffset":67795,"count":0}],"isBlockCoverage":false},{"functionName":"get id","ranges":[{"startOffset":67894,"endOffset":67932,"count":0}],"isBlockCoverage":false},{"functionName":"get session","ranges":[{"startOffset":67989,"endOffset":68037,"count":0}],"isBlockCoverage":false},{"functionName":"_onTimeout","ranges":[{"startOffset":68043,"endOffset":68096,"count":0}],"isBlockCoverage":false},{"functionName":"get headersSent","ranges":[{"startOffset":68148,"endOffset":68236,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":68296,"endOffset":68375,"count":0}],"isBlockCoverage":false},{"functionName":"get headRequest","ranges":[{"startOffset":68423,"endOffset":68511,"count":0}],"isBlockCoverage":false},{"functionName":"get rstCode","ranges":[{"startOffset":68581,"endOffset":68635,"count":0}],"isBlockCoverage":false},{"functionName":"get state","ranges":[{"startOffset":68685,"endOffset":68840,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":68846,"endOffset":68981,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":68987,"endOffset":69158,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":69164,"endOffset":71688,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":71694,"endOffset":71780,"count":0}],"isBlockCoverage":false},{"functionName":"_writev","ranges":[{"startOffset":71786,"endOffset":71856,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":71862,"endOffset":72088,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":72094,"endOffset":72453,"count":0}],"isBlockCoverage":false},{"functionName":"priority","ranges":[{"startOffset":72459,"endOffset":72994,"count":0}],"isBlockCoverage":false},{"functionName":"sendTrailers","ranges":[{"startOffset":73000,"endOffset":73718,"count":0}],"isBlockCoverage":false},{"functionName":"get closed","ranges":[{"startOffset":73724,"endOffset":73801,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":74596,"endOffset":74925,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":75149,"endOffset":77666,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":77787,"endOffset":78830,"count":0}],"isBlockCoverage":false},{"functionName":"callTimeout","ranges":[{"startOffset":78837,"endOffset":79767,"count":0}],"isBlockCoverage":false},{"functionName":"callStreamClose","ranges":[{"startOffset":79771,"endOffset":79827,"count":0}],"isBlockCoverage":false},{"functionName":"processHeaders","ranges":[{"startOffset":79831,"endOffset":81401,"count":0}],"isBlockCoverage":false},{"functionName":"onFileUnpipe","ranges":[{"startOffset":81407,"endOffset":81664,"count":0}],"isBlockCoverage":false},{"functionName":"onPipedFileHandleRead","ranges":[{"startOffset":81786,"endOffset":81963,"count":0}],"isBlockCoverage":false},{"functionName":"processRespondWithFD","ranges":[{"startOffset":81967,"endOffset":82804,"count":0}],"isBlockCoverage":false},{"functionName":"startFilePipe","ranges":[{"startOffset":82808,"endOffset":83267,"count":0}],"isBlockCoverage":false},{"functionName":"doSendFD","ranges":[{"startOffset":83271,"endOffset":84730,"count":0}],"isBlockCoverage":false},{"functionName":"doSendFileFD","ranges":[{"startOffset":84734,"endOffset":86812,"count":0}],"isBlockCoverage":false},{"functionName":"afterOpen","ranges":[{"startOffset":86816,"endOffset":87347,"count":0}],"isBlockCoverage":false},{"functionName":"ServerHttp2Stream","ranges":[{"startOffset":87400,"endOffset":87643,"count":0}],"isBlockCoverage":false},{"functionName":"get pushAllowed","ranges":[{"startOffset":87700,"endOffset":87912,"count":0}],"isBlockCoverage":false},{"functionName":"pushStream","ranges":[{"startOffset":88026,"endOffset":90283,"count":0}],"isBlockCoverage":false},{"functionName":"respond","ranges":[{"startOffset":90335,"endOffset":91849,"count":0}],"isBlockCoverage":false},{"functionName":"respondWithFD","ranges":[{"startOffset":92250,"endOffset":94392,"count":0}],"isBlockCoverage":false},{"functionName":"respondWithFile","ranges":[{"startOffset":94875,"endOffset":96550,"count":0}],"isBlockCoverage":false},{"functionName":"additionalHeaders","ranges":[{"startOffset":97064,"endOffset":98144,"count":0}],"isBlockCoverage":false},{"functionName":"ClientHttp2Stream","ranges":[{"startOffset":98280,"endOffset":98518,"count":0}],"isBlockCoverage":false},{"functionName":"handleHeaderContinue","ranges":[{"startOffset":98525,"endOffset":98658,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnError","ranges":[{"startOffset":99050,"endOffset":99511,"count":0}],"isBlockCoverage":false},{"functionName":"sessionOnStream","ranges":[{"startOffset":99609,"endOffset":99781,"count":0}],"isBlockCoverage":false},{"functionName":"sessionOnPriority","ranges":[{"startOffset":99785,"endOffset":99959,"count":0}],"isBlockCoverage":false},{"functionName":"sessionOnError","ranges":[{"startOffset":99963,"endOffset":100088,"count":0}],"isBlockCoverage":false},{"functionName":"sessionOnTimeout","ranges":[{"startOffset":100222,"endOffset":100483,"count":0}],"isBlockCoverage":false},{"functionName":"connectionListener","ranges":[{"startOffset":100487,"endOffset":102909,"count":0}],"isBlockCoverage":false},{"functionName":"initializeOptions","ranges":[{"startOffset":102913,"endOffset":104487,"count":0}],"isBlockCoverage":false},{"functionName":"initializeTLSOptions","ranges":[{"startOffset":104491,"endOffset":104831,"count":0}],"isBlockCoverage":false},{"functionName":"onErrorSecureServerSession","ranges":[{"startOffset":104835,"endOffset":104961,"count":0}],"isBlockCoverage":false},{"functionName":"Http2SecureServer","ranges":[{"startOffset":105012,"endOffset":105629,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":105635,"endOffset":105840,"count":0}],"isBlockCoverage":false},{"functionName":"updateSettings","ranges":[{"startOffset":105846,"endOffset":106029,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":106035,"endOffset":106199,"count":0}],"isBlockCoverage":false},{"functionName":"closeIdleConnections","ranges":[{"startOffset":106205,"endOffset":106369,"count":0}],"isBlockCoverage":false},{"functionName":"Http2Server","ranges":[{"startOffset":106417,"endOffset":106733,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":106739,"endOffset":106944,"count":0}],"isBlockCoverage":false},{"functionName":"updateSettings","ranges":[{"startOffset":106950,"endOffset":107133,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":107139,"endOffset":107239,"count":0}],"isBlockCoverage":false},{"functionName":"Http2Server.<computed>","ranges":[{"startOffset":107307,"endOffset":108268,"count":0}],"isBlockCoverage":false},{"functionName":"setupCompat","ranges":[{"startOffset":108273,"endOffset":108670,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnClose","ranges":[{"startOffset":108674,"endOffset":109132,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":109136,"endOffset":110990,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":111101,"endOffset":111253,"count":0}],"isBlockCoverage":false},{"functionName":"createSecureServer","ranges":[{"startOffset":111263,"endOffset":111364,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":111368,"endOffset":111555,"count":0}],"isBlockCoverage":false},{"functionName":"getPackedSettings","ranges":[{"startOffset":111725,"endOffset":111914,"count":0}],"isBlockCoverage":false},{"functionName":"getUnpackedSettings","ranges":[{"startOffset":111918,"endOffset":113542,"count":0}],"isBlockCoverage":false},{"functionName":"performServerHandshake","ranges":[{"startOffset":113546,"endOffset":113707,"count":0}],"isBlockCoverage":false}]},{"scriptId":"319","url":"node:tls","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11963,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3566,"endOffset":3630,"count":0}],"isBlockCoverage":false},{"functionName":"cacheRootCertificates","ranges":[{"startOffset":3664,"endOffset":3760,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3889,"endOffset":4044,"count":0}],"isBlockCoverage":false},{"functionName":"convertProtocols","ranges":[{"startOffset":4159,"endOffset":4791,"count":0}],"isBlockCoverage":false},{"functionName":"convertALPNProtocols","ranges":[{"startOffset":4826,"endOffset":5363,"count":0}],"isBlockCoverage":false},{"functionName":"unfqdn","ranges":[{"startOffset":5368,"endOffset":5452,"count":0}],"isBlockCoverage":false},{"functionName":"toLowerCase","ranges":[{"startOffset":5564,"endOffset":5660,"count":0}],"isBlockCoverage":false},{"functionName":"splitHost","ranges":[{"startOffset":5664,"endOffset":5813,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":5817,"endOffset":7874,"count":0}],"isBlockCoverage":false},{"functionName":"splitEscapedAltNames","ranges":[{"startOffset":8248,"endOffset":9514,"count":0}],"isBlockCoverage":false},{"functionName":"checkServerIdentity","ranges":[{"startOffset":9548,"endOffset":11505,"count":0}],"isBlockCoverage":false}]},{"scriptId":"320","url":"node:_tls_common","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5289,"count":1}],"isBlockCoverage":false},{"functionName":"toV","ranges":[{"startOffset":1835,"endOffset":2135,"count":0}],"isBlockCoverage":false},{"functionName":"SecureContext","ranges":[{"startOffset":2221,"endOffset":3080,"count":0}],"isBlockCoverage":false},{"functionName":"createSecureContext","ranges":[{"startOffset":3084,"endOffset":3575,"count":0}],"isBlockCoverage":false},{"functionName":"translatePeerCertificate","ranges":[{"startOffset":3819,"endOffset":5190,"count":0}],"isBlockCoverage":false}]},{"scriptId":"321","url":"node:internal/tls/secure-context","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9812,"count":1}],"isBlockCoverage":false},{"functionName":"getDefaultEcdhCurve","ranges":[{"startOffset":772,"endOffset":1027,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultCiphers","ranges":[{"startOffset":1031,"endOffset":1268,"count":0}],"isBlockCoverage":false},{"functionName":"addCACerts","ranges":[{"startOffset":1272,"endOffset":1441,"count":0}],"isBlockCoverage":false},{"functionName":"setCerts","ranges":[{"startOffset":1445,"endOffset":1610,"count":0}],"isBlockCoverage":false},{"functionName":"validateKeyOrCertOption","ranges":[{"startOffset":1614,"endOffset":1907,"count":0}],"isBlockCoverage":false},{"functionName":"setKey","ranges":[{"startOffset":1911,"endOffset":2158,"count":0}],"isBlockCoverage":false},{"functionName":"processCiphers","ranges":[{"startOffset":2162,"endOffset":3266,"count":0}],"isBlockCoverage":false},{"functionName":"configSecureContext","ranges":[{"startOffset":3270,"endOffset":9760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"322","url":"node:internal/crypto/util","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16215,"count":1}],"isBlockCoverage":false},{"functionName":"toBuf","ranges":[{"startOffset":1962,"endOffset":2148,"count":0}],"isBlockCoverage":false},{"functionName":"getHashCache","ranges":[{"startOffset":2169,"endOffset":2447,"count":10},{"startOffset":2228,"endOffset":2422,"count":1},{"startOffset":2299,"endOffset":2417,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2375,"endOffset":2408,"count":0}],"isBlockCoverage":false},{"functionName":"getCachedHashId","ranges":[{"startOffset":2451,"endOffset":2582,"count":5},{"startOffset":2565,"endOffset":2569,"count":1},{"startOffset":2570,"endOffset":2578,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2618,"endOffset":2661,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2696,"endOffset":2738,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2773,"endOffset":2815,"count":0}],"isBlockCoverage":false},{"functionName":"setEngine","ranges":[{"startOffset":2821,"endOffset":3242,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3291,"endOffset":3798,"count":0}],"isBlockCoverage":false},{"functionName":"validateMaxBufferLength","ranges":[{"startOffset":7378,"endOffset":7597,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeAlgorithm","ranges":[{"startOffset":7830,"endOffset":10338,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayBuffer","ranges":[{"startOffset":10342,"endOffset":10484,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayByteOffset","ranges":[{"startOffset":10488,"endOffset":10642,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayByteLength","ranges":[{"startOffset":10646,"endOffset":10800,"count":0}],"isBlockCoverage":false},{"functionName":"hasAnyNotIn","ranges":[{"startOffset":10804,"endOffset":10948,"count":0}],"isBlockCoverage":false},{"functionName":"validateBitLength","ranges":[{"startOffset":10952,"endOffset":11306,"count":0}],"isBlockCoverage":false},{"functionName":"validateByteLength","ranges":[{"startOffset":11310,"endOffset":11512,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11559,"endOffset":11865,"count":0}],"isBlockCoverage":false},{"functionName":"onDone","ranges":[{"startOffset":11871,"endOffset":12110,"count":0}],"isBlockCoverage":false},{"functionName":"jobPromise","ranges":[{"startOffset":12114,"endOffset":12394,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedInt","ranges":[{"startOffset":12939,"endOffset":13230,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedBigInt","ranges":[{"startOffset":13234,"endOffset":13479,"count":0}],"isBlockCoverage":false},{"functionName":"getStringOption","ranges":[{"startOffset":13483,"endOffset":13653,"count":0}],"isBlockCoverage":false},{"functionName":"getUsagesUnion","ranges":[{"startOffset":13657,"endOffset":13876,"count":0}],"isBlockCoverage":false},{"functionName":"getBlockSize","ranges":[{"startOffset":13880,"endOffset":14068,"count":0}],"isBlockCoverage":false},{"functionName":"validateKeyOps","ranges":[{"startOffset":14220,"endOffset":15215,"count":0}],"isBlockCoverage":false},{"functionName":"secureHeapUsed","ranges":[{"startOffset":15219,"endOffset":15611,"count":0}],"isBlockCoverage":false}]},{"scriptId":"323","url":"node:internal/crypto/hashnames","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2604,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeHashName","ranges":[{"startOffset":1958,"endOffset":2207,"count":0}],"isBlockCoverage":false}]},{"scriptId":"324","url":"node:_tls_wrap","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":55583,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2110,"endOffset":2137,"count":0}],"isBlockCoverage":false},{"functionName":"onhandshakestart","ranges":[{"startOffset":4403,"endOffset":5215,"count":0}],"isBlockCoverage":false},{"functionName":"onhandshakedone","ranges":[{"startOffset":5219,"endOffset":5525,"count":0}],"isBlockCoverage":false},{"functionName":"loadSession","ranges":[{"startOffset":5531,"endOffset":6772,"count":0}],"isBlockCoverage":false},{"functionName":"loadSNI","ranges":[{"startOffset":6778,"endOffset":7455,"count":0}],"isBlockCoverage":false},{"functionName":"callALPNCallback","ranges":[{"startOffset":7461,"endOffset":8534,"count":0}],"isBlockCoverage":false},{"functionName":"requestOCSP","ranges":[{"startOffset":8538,"endOffset":9907,"count":0}],"isBlockCoverage":false},{"functionName":"requestOCSPDone","ranges":[{"startOffset":9911,"endOffset":10114,"count":0}],"isBlockCoverage":false},{"functionName":"onnewsessionclient","ranges":[{"startOffset":10118,"endOffset":10362,"count":0}],"isBlockCoverage":false},{"functionName":"onnewsession","ranges":[{"startOffset":10366,"endOffset":11233,"count":0}],"isBlockCoverage":false},{"functionName":"onPskServerCallback","ranges":[{"startOffset":11237,"endOffset":11917,"count":0}],"isBlockCoverage":false},{"functionName":"onPskClientCallback","ranges":[{"startOffset":11921,"endOffset":12655,"count":0}],"isBlockCoverage":false},{"functionName":"onkeylog","ranges":[{"startOffset":12659,"endOffset":12753,"count":0}],"isBlockCoverage":false},{"functionName":"onocspresponse","ranges":[{"startOffset":12757,"endOffset":12876,"count":0}],"isBlockCoverage":false},{"functionName":"onerror","ranges":[{"startOffset":12880,"endOffset":14040,"count":0}],"isBlockCoverage":false},{"functionName":"initRead","ranges":[{"startOffset":14188,"endOffset":14753,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket","ranges":[{"startOffset":14837,"endOffset":18050,"count":0}],"isBlockCoverage":false},{"functionName":"makeMethodProxy","ranges":[{"startOffset":18508,"endOffset":18688,"count":15}],"isBlockCoverage":true},{"functionName":"methodProxy","ranges":[{"startOffset":18551,"endOffset":18684,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":18861,"endOffset":19743,"count":0}],"isBlockCoverage":false},{"functionName":"disableRenegotiation","ranges":[{"startOffset":19791,"endOffset":19866,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._wrapHandle","ranges":[{"startOffset":20060,"endOffset":21447,"count":0}],"isBlockCoverage":false},{"functionName":"reinitializeHandle","ranges":[{"startOffset":21495,"endOffset":22092,"count":0}],"isBlockCoverage":false},{"functionName":"defineHandleReading","ranges":[{"startOffset":22235,"endOffset":22488,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketCloseDestroySSL","ranges":[{"startOffset":22492,"endOffset":22643,"count":0}],"isBlockCoverage":false},{"functionName":"destroySSL","ranges":[{"startOffset":22647,"endOffset":22700,"count":0}],"isBlockCoverage":false},{"functionName":"_destroySSL","ranges":[{"startOffset":22738,"endOffset":23040,"count":0}],"isBlockCoverage":false},{"functionName":"keylogNewListener","ranges":[{"startOffset":23045,"endOffset":23366,"count":0}],"isBlockCoverage":false},{"functionName":"newListener","ranges":[{"startOffset":23370,"endOffset":23684,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._init","ranges":[{"startOffset":23827,"endOffset":28635,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.renegotiate","ranges":[{"startOffset":28674,"endOffset":29969,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.exportKeyingMaterial","ranges":[{"startOffset":30017,"endOffset":30349,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxSendFragment","ranges":[{"startOffset":30395,"endOffset":30520,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._handleTimeout","ranges":[{"startOffset":30562,"endOffset":30633,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._emitTLSError","ranges":[{"startOffset":30674,"endOffset":30764,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._tlsError","ranges":[{"startOffset":30801,"endOffset":30914,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._releaseControl","ranges":[{"startOffset":30957,"endOffset":31119,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._finishInit","ranges":[{"startOffset":31158,"endOffset":32244,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._start","ranges":[{"startOffset":32278,"endOffset":32796,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.setServername","ranges":[{"startOffset":32837,"endOffset":33013,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.setSession","ranges":[{"startOffset":33051,"endOffset":33193,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getPeerCertificate","ranges":[{"startOffset":33239,"endOffset":33410,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getCertificate","ranges":[{"startOffset":33452,"endOffset":33666,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getPeerX509Certificate","ranges":[{"startOffset":33716,"endOffset":33859,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getX509Certificate","ranges":[{"startOffset":33905,"endOffset":34036,"count":0}],"isBlockCoverage":false},{"functionName":"makeSocketMethodProxy","ranges":[{"startOffset":34076,"endOffset":34280,"count":10}],"isBlockCoverage":true},{"functionName":"socketMethodProxy","ranges":[{"startOffset":34125,"endOffset":34276,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":34511,"endOffset":34591,"count":10}],"isBlockCoverage":true},{"functionName":"onServerSocketSecure","ranges":[{"startOffset":34638,"endOffset":35151,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketTLSError","ranges":[{"startOffset":35155,"endOffset":35397,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketKeylog","ranges":[{"startOffset":35401,"endOffset":35490,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketClose","ranges":[{"startOffset":35494,"endOffset":35862,"count":0}],"isBlockCoverage":false},{"functionName":"tlsConnectionListener","ranges":[{"startOffset":35866,"endOffset":36778,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":39611,"endOffset":41418,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":41577,"endOffset":41663,"count":0}],"isBlockCoverage":false},{"functionName":"Server.setSecureContext","ranges":[{"startOffset":41706,"endOffset":44729,"count":0}],"isBlockCoverage":false},{"functionName":"Server._getServerData","ranges":[{"startOffset":44770,"endOffset":44858,"count":0}],"isBlockCoverage":false},{"functionName":"Server._setServerData","ranges":[{"startOffset":44899,"endOffset":44978,"count":0}],"isBlockCoverage":false},{"functionName":"getTicketKeys","ranges":[{"startOffset":45018,"endOffset":45100,"count":0}],"isBlockCoverage":false},{"functionName":"setTicketKeys","ranges":[{"startOffset":45140,"endOffset":45341,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":45388,"endOffset":47498,"count":0}],"isBlockCoverage":false},{"functionName":"Server.addContext","ranges":[{"startOffset":47624,"endOffset":48088,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":48139,"endOffset":48405,"count":0}],"isBlockCoverage":false},{"functionName":"SNICallback","ranges":[{"startOffset":48410,"endOffset":48738,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeConnectArgs","ranges":[{"startOffset":48988,"endOffset":49733,"count":0}],"isBlockCoverage":false},{"functionName":"onConnectSecure","ranges":[{"startOffset":49737,"endOffset":52029,"count":0}],"isBlockCoverage":false},{"functionName":"onConnectEnd","ranges":[{"startOffset":52033,"endOffset":52608,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":52677,"endOffset":55580,"count":0}],"isBlockCoverage":false}]},{"scriptId":"325","url":"node:crypto","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9236,"count":1}],"isBlockCoverage":false},{"functionName":"lazyWebCrypto","ranges":[{"startOffset":3216,"endOffset":3321,"count":1}],"isBlockCoverage":true},{"functionName":"lazyOwnsProcessState","ranges":[{"startOffset":3348,"endOffset":3481,"count":0}],"isBlockCoverage":false},{"functionName":"createHash","ranges":[{"startOffset":3627,"endOffset":3711,"count":5}],"isBlockCoverage":true},{"functionName":"createCipher","ranges":[{"startOffset":3715,"endOffset":3817,"count":0}],"isBlockCoverage":false},{"functionName":"createCipheriv","ranges":[{"startOffset":3821,"endOffset":3925,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipher","ranges":[{"startOffset":3929,"endOffset":4035,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipheriv","ranges":[{"startOffset":4039,"endOffset":4147,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellman","ranges":[{"startOffset":4151,"endOffset":4309,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellmanGroup","ranges":[{"startOffset":4313,"endOffset":4397,"count":0}],"isBlockCoverage":false},{"functionName":"createECDH","ranges":[{"startOffset":4401,"endOffset":4459,"count":0}],"isBlockCoverage":false},{"functionName":"createHmac","ranges":[{"startOffset":4463,"endOffset":4547,"count":0}],"isBlockCoverage":false},{"functionName":"createSign","ranges":[{"startOffset":4551,"endOffset":4635,"count":0}],"isBlockCoverage":false},{"functionName":"createVerify","ranges":[{"startOffset":4639,"endOffset":4727,"count":0}],"isBlockCoverage":false},{"functionName":"getFips","ranges":[{"startOffset":5849,"endOffset":5936,"count":0}],"isBlockCoverage":false},{"functionName":"setFips","ranges":[{"startOffset":5940,"endOffset":6234,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomValues","ranges":[{"startOffset":6238,"endOffset":6331,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6413,"endOffset":6677,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6682,"endOffset":6879,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomBytesAlias","ranges":[{"startOffset":6933,"endOffset":7807,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7035,"endOffset":7547,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7554,"endOffset":7797,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8583,"endOffset":8623,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8743,"endOffset":8790,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8924,"endOffset":8945,"count":0}],"isBlockCoverage":false}]},{"scriptId":"326","url":"node:internal/crypto/random","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16859,"count":1}],"isBlockCoverage":false},{"functionName":"assertOffset","ranges":[{"startOffset":1328,"endOffset":1704,"count":1},{"startOffset":1568,"endOffset":1652,"count":0}],"isBlockCoverage":true},{"functionName":"assertSize","ranges":[{"startOffset":1708,"endOffset":2183,"count":2},{"startOffset":1891,"endOffset":2012,"count":0},{"startOffset":2046,"endOffset":2133,"count":0}],"isBlockCoverage":true},{"functionName":"randomBytes","ranges":[{"startOffset":2187,"endOffset":2748,"count":1},{"startOffset":2301,"endOffset":2352,"count":0},{"startOffset":2490,"endOffset":2747,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2597,"endOffset":2743,"count":0}],"isBlockCoverage":false},{"functionName":"randomFillSync","ranges":[{"startOffset":2752,"endOffset":3452,"count":1},{"startOffset":2831,"endOffset":2857,"count":0},{"startOffset":2859,"endOffset":2972,"count":0},{"startOffset":3120,"endOffset":3163,"count":0},{"startOffset":3269,"endOffset":3280,"count":0},{"startOffset":3422,"endOffset":3432,"count":0}],"isBlockCoverage":true},{"functionName":"randomFill","ranges":[{"startOffset":3456,"endOffset":4544,"count":0}],"isBlockCoverage":false},{"functionName":"randomInt","ranges":[{"startOffset":5109,"endOffset":7417,"count":0}],"isBlockCoverage":false},{"functionName":"asyncRefillRandomIntCache","ranges":[{"startOffset":7421,"endOffset":8322,"count":0}],"isBlockCoverage":false},{"functionName":"onJobDone","ranges":[{"startOffset":8328,"endOffset":8493,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomValues","ranges":[{"startOffset":8732,"endOffset":9366,"count":0}],"isBlockCoverage":false},{"functionName":"getHexBytes","ranges":[{"startOffset":9745,"endOffset":10053,"count":0}],"isBlockCoverage":false},{"functionName":"serializeUUID","ranges":[{"startOffset":10057,"endOffset":10806,"count":0}],"isBlockCoverage":false},{"functionName":"getBufferedUUID","ranges":[{"startOffset":10810,"endOffset":11121,"count":0}],"isBlockCoverage":false},{"functionName":"getUnbufferedUUID","ranges":[{"startOffset":11125,"endOffset":11369,"count":0}],"isBlockCoverage":false},{"functionName":"randomUUID","ranges":[{"startOffset":11373,"endOffset":11703,"count":0}],"isBlockCoverage":false},{"functionName":"createRandomPrimeJob","ranges":[{"startOffset":11707,"endOffset":12992,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrime","ranges":[{"startOffset":12996,"endOffset":13472,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrimeSync","ranges":[{"startOffset":13476,"endOffset":13742,"count":0}],"isBlockCoverage":false},{"functionName":"numberToHexCharCode","ranges":[{"startOffset":14024,"endOffset":14068,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBufferToUnsignedBigInt","ranges":[{"startOffset":14149,"endOffset":14588,"count":0}],"isBlockCoverage":false},{"functionName":"unsignedBigIntToBuffer","ranges":[{"startOffset":14592,"endOffset":14897,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrime","ranges":[{"startOffset":14901,"endOffset":15826,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrimeSync","ranges":[{"startOffset":15830,"endOffset":16658,"count":0}],"isBlockCoverage":false}]},{"scriptId":"327","url":"node:internal/crypto/pbkdf2","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3149,"count":1}],"isBlockCoverage":false},{"functionName":"pbkdf2","ranges":[{"startOffset":503,"endOffset":1194,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2Sync","ranges":[{"startOffset":1198,"endOffset":1620,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1624,"endOffset":2106,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2DeriveBits","ranges":[{"startOffset":2152,"endOffset":3074,"count":0}],"isBlockCoverage":false}]},{"scriptId":"328","url":"node:internal/crypto/scrypt","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3466,"count":1}],"isBlockCoverage":false},{"functionName":"scrypt","ranges":[{"startOffset":665,"endOffset":1354,"count":0}],"isBlockCoverage":false},{"functionName":"scryptSync","ranges":[{"startOffset":1358,"endOffset":1776,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1780,"endOffset":3412,"count":0}],"isBlockCoverage":false}]},{"scriptId":"329","url":"node:internal/crypto/hkdf","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3569,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":866,"endOffset":1439,"count":0}],"isBlockCoverage":false},{"functionName":"prepareKey","ranges":[{"startOffset":1445,"endOffset":1897,"count":0}],"isBlockCoverage":false},{"functionName":"hkdf","ranges":[{"startOffset":1901,"endOffset":2386,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfSync","ranges":[{"startOffset":2390,"endOffset":2743,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfDeriveBits","ranges":[{"startOffset":2785,"endOffset":3500,"count":0}],"isBlockCoverage":false}]},{"scriptId":"330","url":"node:internal/crypto/keys","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23190,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2430,"endOffset":6706,"count":1}],"isBlockCoverage":true},{"functionName":"KeyObject","ranges":[{"startOffset":2543,"endOffset":3102,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":3110,"endOffset":3159,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":3174,"endOffset":3319,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":3327,"endOffset":3619,"count":0}],"isBlockCoverage":false},{"functionName":"SecretKeyObject","ranges":[{"startOffset":3849,"endOffset":3909,"count":0}],"isBlockCoverage":false},{"functionName":"get symmetricKeySize","ranges":[{"startOffset":3917,"endOffset":3999,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":4007,"endOffset":4365,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeKeyDetails","ranges":[{"startOffset":4504,"endOffset":4782,"count":0}],"isBlockCoverage":false},{"functionName":"AsymmetricKeyObject","ranges":[{"startOffset":4895,"endOffset":4957,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyType","ranges":[{"startOffset":4965,"endOffset":5120,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyDetails","ranges":[{"startOffset":5128,"endOffset":5518,"count":0}],"isBlockCoverage":false},{"functionName":"PublicKeyObject","ranges":[{"startOffset":5586,"endOffset":5646,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":5654,"endOffset":5954,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateKeyObject","ranges":[{"startOffset":6023,"endOffset":6084,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":6092,"endOffset":6621,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormat","ranges":[{"startOffset":6712,"endOffset":7107,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyType","ranges":[{"startOffset":7111,"endOffset":7985,"count":0}],"isBlockCoverage":false},{"functionName":"option","ranges":[{"startOffset":7989,"endOffset":8113,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormatAndType","ranges":[{"startOffset":8117,"endOffset":8834,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrBuffer","ranges":[{"startOffset":8838,"endOffset":8979,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":8983,"endOffset":10382,"count":0}],"isBlockCoverage":false},{"functionName":"parsePublicKeyEncoding","ranges":[{"startOffset":10586,"endOffset":10724,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrivateKeyEncoding","ranges":[{"startOffset":10929,"endOffset":11047,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandle","ranges":[{"startOffset":11051,"endOffset":11648,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyTypes","ranges":[{"startOffset":11652,"endOffset":12173,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandleFromJwk","ranges":[{"startOffset":12177,"endOffset":14834,"count":0}],"isBlockCoverage":false},{"functionName":"prepareAsymmetricKey","ranges":[{"startOffset":14838,"endOffset":16423,"count":0}],"isBlockCoverage":false},{"functionName":"preparePrivateKey","ranges":[{"startOffset":16427,"endOffset":16517,"count":0}],"isBlockCoverage":false},{"functionName":"preparePublicOrPrivateKey","ranges":[{"startOffset":16521,"endOffset":16618,"count":0}],"isBlockCoverage":false},{"functionName":"prepareSecretKey","ranges":[{"startOffset":16622,"endOffset":17341,"count":0}],"isBlockCoverage":false},{"functionName":"createSecretKey","ranges":[{"startOffset":17345,"endOffset":17554,"count":0}],"isBlockCoverage":false},{"functionName":"createPublicKey","ranges":[{"startOffset":17558,"endOffset":17906,"count":0}],"isBlockCoverage":false},{"functionName":"createPrivateKey","ranges":[{"startOffset":17910,"endOffset":18262,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyObject","ranges":[{"startOffset":18266,"endOffset":18350,"count":0}],"isBlockCoverage":false},{"functionName":"CryptoKey","ranges":[{"startOffset":18782,"endOffset":18844,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18850,"endOffset":19214,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":19220,"endOffset":19359,"count":0}],"isBlockCoverage":false},{"functionName":"get extractable","ranges":[{"startOffset":19365,"endOffset":19508,"count":0}],"isBlockCoverage":false},{"functionName":"get algorithm","ranges":[{"startOffset":19514,"endOffset":19653,"count":0}],"isBlockCoverage":false},{"functionName":"get usages","ranges":[{"startOffset":19659,"endOffset":19806,"count":0}],"isBlockCoverage":false},{"functionName":"defineCryptoKeyProperties","ranges":[{"startOffset":20281,"endOffset":21224,"count":0}],"isBlockCoverage":false},{"functionName":"InternalCryptoKey","ranges":[{"startOffset":21528,"endOffset":21958,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21964,"endOffset":22340,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22346,"endOffset":22495,"count":0}],"isBlockCoverage":false},{"functionName":"isCryptoKey","ranges":[{"startOffset":22629,"endOffset":22715,"count":0}],"isBlockCoverage":false}]},{"scriptId":"331","url":"node:internal/crypto/keygen","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11121,"count":1}],"isBlockCoverage":false},{"functionName":"isJwk","ranges":[{"startOffset":1248,"endOffset":1320,"count":0}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":1324,"endOffset":1484,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPair","ranges":[{"startOffset":1488,"endOffset":2143,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPairSync","ranges":[{"startOffset":2297,"endOffset":2416,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":2420,"endOffset":2813,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":2817,"endOffset":4108,"count":0}],"isBlockCoverage":false},{"functionName":"createJob","ranges":[{"startOffset":4112,"endOffset":9576,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyJob","ranges":[{"startOffset":9611,"endOffset":10167,"count":0}],"isBlockCoverage":false},{"functionName":"handleGenerateKeyError","ranges":[{"startOffset":10171,"endOffset":10382,"count":0}],"isBlockCoverage":false},{"functionName":"generateKey","ranges":[{"startOffset":10386,"endOffset":10872,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeySync","ranges":[{"startOffset":10876,"endOffset":11013,"count":0}],"isBlockCoverage":false}]},{"scriptId":"332","url":"node:internal/crypto/diffiehellman","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10275,"count":1}],"isBlockCoverage":false},{"functionName":"DiffieHellman","ranges":[{"startOffset":1301,"endOffset":3159,"count":0}],"isBlockCoverage":false},{"functionName":"DiffieHellmanGroup","ranges":[{"startOffset":3165,"endOffset":3501,"count":0}],"isBlockCoverage":false},{"functionName":"dhGenerateKeys","ranges":[{"startOffset":3619,"endOffset":3737,"count":0}],"isBlockCoverage":false},{"functionName":"dhComputeSecret","ranges":[{"startOffset":3858,"endOffset":4122,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrime","ranges":[{"startOffset":4228,"endOffset":4340,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetGenerator","ranges":[{"startOffset":4458,"endOffset":4586,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPublicKey","ranges":[{"startOffset":4704,"endOffset":4820,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrivateKey","ranges":[{"startOffset":4941,"endOffset":5059,"count":0}],"isBlockCoverage":false},{"functionName":"setPublicKey","ranges":[{"startOffset":5104,"endOffset":5250,"count":0}],"isBlockCoverage":false},{"functionName":"setPrivateKey","ranges":[{"startOffset":5297,"endOffset":5445,"count":0}],"isBlockCoverage":false},{"functionName":"ECDH","ranges":[{"startOffset":5452,"endOffset":5612,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeys","ranges":[{"startOffset":5930,"endOffset":6056,"count":0}],"isBlockCoverage":false},{"functionName":"getPublicKey","ranges":[{"startOffset":6091,"endOffset":6246,"count":0}],"isBlockCoverage":false},{"functionName":"convertKey","ranges":[{"startOffset":6269,"endOffset":6541,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":6546,"endOffset":6685,"count":0}],"isBlockCoverage":false},{"functionName":"getFormat","ranges":[{"startOffset":6689,"endOffset":7022,"count":0}],"isBlockCoverage":false},{"functionName":"diffieHellman","ranges":[{"startOffset":7100,"endOffset":8194,"count":0}],"isBlockCoverage":false},{"functionName":"ecdhDeriveBits","ranges":[{"startOffset":8317,"endOffset":10160,"count":0}],"isBlockCoverage":false}]},{"scriptId":"333","url":"node:internal/crypto/cipher","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10532,"count":1}],"isBlockCoverage":false},{"functionName":"rsaFunctionFor","ranges":[{"startOffset":1297,"endOffset":2062,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1366,"endOffset":2058,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":2574,"endOffset":2950,"count":0}],"isBlockCoverage":false},{"functionName":"getUIntOption","ranges":[{"startOffset":2954,"endOffset":3196,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherBase","ranges":[{"startOffset":3200,"endOffset":3630,"count":0}],"isBlockCoverage":false},{"functionName":"createCipher","ranges":[{"startOffset":3634,"endOffset":3874,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherWithIV","ranges":[{"startOffset":3878,"endOffset":4223,"count":0}],"isBlockCoverage":false},{"functionName":"Cipher","ranges":[{"startOffset":4473,"endOffset":4679,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":4827,"endOffset":4946,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":4977,"endOffset":5123,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":5154,"endOffset":5686,"count":0}],"isBlockCoverage":false},{"functionName":"final","ranges":[{"startOffset":5718,"endOffset":5971,"count":0}],"isBlockCoverage":false},{"functionName":"setAutoPadding","ranges":[{"startOffset":6012,"endOffset":6163,"count":0}],"isBlockCoverage":false},{"functionName":"getAuthTag","ranges":[{"startOffset":6198,"endOffset":6363,"count":0}],"isBlockCoverage":false},{"functionName":"setAuthTag","ranges":[{"startOffset":6370,"endOffset":6587,"count":0}],"isBlockCoverage":false},{"functionName":"setAAD","ranges":[{"startOffset":6617,"endOffset":6966,"count":0}],"isBlockCoverage":false},{"functionName":"Cipheriv","ranges":[{"startOffset":7221,"endOffset":7436,"count":0}],"isBlockCoverage":false},{"functionName":"addCipherPrototypeFunctions","ranges":[{"startOffset":7440,"endOffset":8043,"count":3},{"startOffset":7842,"endOffset":7917,"count":1},{"startOffset":7917,"endOffset":7981,"count":2}],"isBlockCoverage":true},{"functionName":"Decipher","ranges":[{"startOffset":8455,"endOffset":8668,"count":0}],"isBlockCoverage":false},{"functionName":"Decipheriv","ranges":[{"startOffset":9084,"endOffset":9306,"count":0}],"isBlockCoverage":false},{"functionName":"getCipherInfo","ranges":[{"startOffset":9474,"endOffset":10360,"count":0}],"isBlockCoverage":false}]},{"scriptId":"334","url":"node:internal/streams/lazy_transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1597,"count":1}],"isBlockCoverage":false},{"functionName":"LazyTransform","ranges":[{"startOffset":416,"endOffset":480,"count":5}],"isBlockCoverage":true},{"functionName":"makeGetter","ranges":[{"startOffset":616,"endOffset":950,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":654,"endOffset":946,"count":0}],"isBlockCoverage":false},{"functionName":"makeSetter","ranges":[{"startOffset":954,"endOffset":1183,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":992,"endOffset":1179,"count":0}],"isBlockCoverage":false}]},{"scriptId":"335","url":"node:internal/crypto/sig","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7243,"count":1}],"isBlockCoverage":false},{"functionName":"Sign","ranges":[{"startOffset":922,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":1317,"endOffset":1412,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1441,"endOffset":1764,"count":0}],"isBlockCoverage":false},{"functionName":"getPadding","ranges":[{"startOffset":1769,"endOffset":1846,"count":0}],"isBlockCoverage":false},{"functionName":"getSaltLength","ranges":[{"startOffset":1850,"endOffset":1933,"count":0}],"isBlockCoverage":false},{"functionName":"getDSASignatureEncoding","ranges":[{"startOffset":1937,"endOffset":2300,"count":0}],"isBlockCoverage":false},{"functionName":"getIntOption","ranges":[{"startOffset":2304,"endOffset":2558,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":2584,"endOffset":3220,"count":0}],"isBlockCoverage":false},{"functionName":"signOneShot","ranges":[{"startOffset":3225,"endOffset":4495,"count":0}],"isBlockCoverage":false},{"functionName":"Verify","ranges":[{"startOffset":4499,"endOffset":4774,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":5010,"endOffset":5612,"count":0}],"isBlockCoverage":false},{"functionName":"verifyOneShot","ranges":[{"startOffset":5617,"endOffset":7161,"count":0}],"isBlockCoverage":false}]},{"scriptId":"336","url":"node:internal/crypto/hash","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6098,"count":1}],"isBlockCoverage":false},{"functionName":"Hash","ranges":[{"startOffset":1184,"endOffset":1928,"count":5},{"startOffset":1245,"endOffset":1281,"count":0},{"startOffset":1435,"endOffset":1454,"count":0},{"startOffset":1455,"endOffset":1482,"count":0},{"startOffset":1530,"endOffset":1577,"count":0},{"startOffset":1712,"endOffset":1716,"count":0}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":2064,"endOffset":2238,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":2271,"endOffset":2379,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":2408,"endOffset":2491,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":2520,"endOffset":2999,"count":5},{"startOffset":2616,"endOffset":2654,"count":0},{"startOffset":2690,"endOffset":2735,"count":0},{"startOffset":2771,"endOffset":2884,"count":0},{"startOffset":2938,"endOffset":2980,"count":0}],"isBlockCoverage":true},{"functionName":"digest","ranges":[{"startOffset":3030,"endOffset":3360,"count":5},{"startOffset":3126,"endOffset":3164,"count":0}],"isBlockCoverage":true},{"functionName":"Hmac","ranges":[{"startOffset":3365,"endOffset":3777,"count":0}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":3965,"endOffset":4411,"count":0}],"isBlockCoverage":false},{"functionName":"asyncDigest","ranges":[{"startOffset":4573,"endOffset":5062,"count":0}],"isBlockCoverage":false},{"functionName":"hash","ranges":[{"startOffset":5066,"endOffset":6027,"count":0}],"isBlockCoverage":false}]},{"scriptId":"337","url":"node:internal/crypto/x509","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10277,"count":1}],"isBlockCoverage":false},{"functionName":"isX509Certificate","ranges":[{"startOffset":1218,"endOffset":1303,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":1307,"endOffset":2579,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2583,"endOffset":2752,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2756,"endOffset":10019,"count":0}],"isBlockCoverage":false}]},{"scriptId":"338","url":"node:internal/crypto/certificate","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1599,"count":1}],"isBlockCoverage":false},{"functionName":"verifySpkac","ranges":[{"startOffset":401,"endOffset":524,"count":0}],"isBlockCoverage":false},{"functionName":"exportPublicKey","ranges":[{"startOffset":528,"endOffset":659,"count":0}],"isBlockCoverage":false},{"functionName":"exportChallenge","ranges":[{"startOffset":663,"endOffset":794,"count":0}],"isBlockCoverage":false},{"functionName":"Certificate","ranges":[{"startOffset":1161,"endOffset":1258,"count":0}],"isBlockCoverage":false}]},{"scriptId":"339","url":"node:internal/js_stream_socket","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8832,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":348,"endOffset":379,"count":0}],"isBlockCoverage":false},{"functionName":"isClosing","ranges":[{"startOffset":829,"endOffset":892,"count":0}],"isBlockCoverage":false},{"functionName":"onreadstart","ranges":[{"startOffset":896,"endOffset":961,"count":0}],"isBlockCoverage":false},{"functionName":"onreadstop","ranges":[{"startOffset":965,"endOffset":1028,"count":0}],"isBlockCoverage":false},{"functionName":"onshutdown","ranges":[{"startOffset":1032,"endOffset":1103,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":1107,"endOffset":1184,"count":0}],"isBlockCoverage":false},{"functionName":"JSStreamSocket","ranges":[{"startOffset":1959,"endOffset":3742,"count":0}],"isBlockCoverage":false},{"functionName":"get StreamWrap","ranges":[{"startOffset":3886,"endOffset":3937,"count":0}],"isBlockCoverage":false},{"functionName":"isClosing","ranges":[{"startOffset":3943,"endOffset":4007,"count":0}],"isBlockCoverage":false},{"functionName":"readStart","ranges":[{"startOffset":4013,"endOffset":4073,"count":0}],"isBlockCoverage":false},{"functionName":"readStop","ranges":[{"startOffset":4079,"endOffset":4137,"count":0}],"isBlockCoverage":false},{"functionName":"doShutdown","ranges":[{"startOffset":4143,"endOffset":5425,"count":0}],"isBlockCoverage":false},{"functionName":"finishShutdown","ranges":[{"startOffset":5496,"endOffset":5795,"count":0}],"isBlockCoverage":false},{"functionName":"doWrite","ranges":[{"startOffset":5801,"endOffset":7286,"count":0}],"isBlockCoverage":false},{"functionName":"finishWrite","ranges":[{"startOffset":7357,"endOffset":7813,"count":0}],"isBlockCoverage":false},{"functionName":"doClose","ranges":[{"startOffset":7819,"endOffset":8653,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8659,"endOffset":8717,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8723,"endOffset":8791,"count":0}],"isBlockCoverage":false}]},{"scriptId":"340","url":"node:internal/tls/secure-pair","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2078,"count":1}],"isBlockCoverage":false},{"functionName":"DuplexSocket","ranges":[{"startOffset":415,"endOffset":508,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":514,"endOffset":645,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":651,"endOffset":862,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":868,"endOffset":968,"count":0}],"isBlockCoverage":false},{"functionName":"DuplexPair","ranges":[{"startOffset":997,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"SecurePair","ranges":[{"startOffset":1239,"endOffset":1872,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":1878,"endOffset":1956,"count":0}],"isBlockCoverage":false},{"functionName":"createSecurePair","ranges":[{"startOffset":1990,"endOffset":2075,"count":0}],"isBlockCoverage":false}]},{"scriptId":"341","url":"node:internal/http2/compat","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25104,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2369,"endOffset":2913,"count":0}],"isBlockCoverage":false},{"functionName":"isPseudoHeader","ranges":[{"startOffset":2919,"endOffset":3258,"count":0}],"isBlockCoverage":false},{"functionName":"statusMessageWarn","ranges":[{"startOffset":3262,"endOffset":3506,"count":0}],"isBlockCoverage":false},{"functionName":"isConnectionHeaderAllowed","ranges":[{"startOffset":3510,"endOffset":3640,"count":0}],"isBlockCoverage":false},{"functionName":"connectionHeaderMessageWarn","ranges":[{"startOffset":3644,"endOffset":3993,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamData","ranges":[{"startOffset":3997,"endOffset":4138,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamTrailers","ranges":[{"startOffset":4142,"endOffset":4434,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamEnd","ranges":[{"startOffset":4438,"endOffset":4609,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamError","ranges":[{"startOffset":4613,"endOffset":4793,"count":0}],"isBlockCoverage":false},{"functionName":"onRequestPause","ranges":[{"startOffset":4797,"endOffset":4853,"count":0}],"isBlockCoverage":false},{"functionName":"onRequestResume","ranges":[{"startOffset":4857,"endOffset":4915,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamDrain","ranges":[{"startOffset":4919,"endOffset":5045,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamAbortedRequest","ranges":[{"startOffset":5049,"endOffset":5256,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamAbortedResponse","ranges":[{"startOffset":5260,"endOffset":5320,"count":0}],"isBlockCoverage":false},{"functionName":"resumeStream","ranges":[{"startOffset":5324,"endOffset":5378,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":5414,"endOffset":5567,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5574,"endOffset":6720,"count":0}],"isBlockCoverage":false},{"functionName":"getPrototypeOf","ranges":[{"startOffset":6725,"endOffset":6898,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6903,"endOffset":7728,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamCloseRequest","ranges":[{"startOffset":7737,"endOffset":8206,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamTimeout","ranges":[{"startOffset":8210,"endOffset":8345,"count":0}],"isBlockCoverage":false},{"functionName":"Http2ServerRequest","ranges":[{"startOffset":8396,"endOffset":9434,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":9440,"endOffset":9488,"count":0}],"isBlockCoverage":false},{"functionName":"get complete","ranges":[{"startOffset":9494,"endOffset":9651,"count":0}],"isBlockCoverage":false},{"functionName":"get stream","ranges":[{"startOffset":9657,"endOffset":9703,"count":0}],"isBlockCoverage":false},{"functionName":"get headers","ranges":[{"startOffset":9709,"endOffset":9757,"count":0}],"isBlockCoverage":false},{"functionName":"get rawHeaders","ranges":[{"startOffset":9763,"endOffset":9817,"count":0}],"isBlockCoverage":false},{"functionName":"get trailers","ranges":[{"startOffset":9823,"endOffset":9873,"count":0}],"isBlockCoverage":false},{"functionName":"get rawTrailers","ranges":[{"startOffset":9879,"endOffset":9935,"count":0}],"isBlockCoverage":false},{"functionName":"get httpVersionMajor","ranges":[{"startOffset":9941,"endOffset":9985,"count":0}],"isBlockCoverage":false},{"functionName":"get httpVersionMinor","ranges":[{"startOffset":9991,"endOffset":10035,"count":0}],"isBlockCoverage":false},{"functionName":"get httpVersion","ranges":[{"startOffset":10041,"endOffset":10084,"count":0}],"isBlockCoverage":false},{"functionName":"get socket","ranges":[{"startOffset":10090,"endOffset":10323,"count":0}],"isBlockCoverage":false},{"functionName":"get connection","ranges":[{"startOffset":10329,"endOffset":10377,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":10383,"endOffset":10641,"count":0}],"isBlockCoverage":false},{"functionName":"get method","ranges":[{"startOffset":10647,"endOffset":10715,"count":0}],"isBlockCoverage":false},{"functionName":"set method","ranges":[{"startOffset":10721,"endOffset":10941,"count":0}],"isBlockCoverage":false},{"functionName":"get authority","ranges":[{"startOffset":10947,"endOffset":11011,"count":0}],"isBlockCoverage":false},{"functionName":"get scheme","ranges":[{"startOffset":11017,"endOffset":11085,"count":0}],"isBlockCoverage":false},{"functionName":"get url","ranges":[{"startOffset":11091,"endOffset":11154,"count":0}],"isBlockCoverage":false},{"functionName":"set url","ranges":[{"startOffset":11160,"endOffset":11225,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":11231,"endOffset":11364,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamTrailersReady","ranges":[{"startOffset":11371,"endOffset":11458,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamCloseResponse","ranges":[{"startOffset":11462,"endOffset":11868,"count":0}],"isBlockCoverage":false},{"functionName":"Http2ServerResponse","ranges":[{"startOffset":11918,"endOffset":12650,"count":0}],"isBlockCoverage":false},{"functionName":"get _header","ranges":[{"startOffset":12852,"endOffset":12902,"count":0}],"isBlockCoverage":false},{"functionName":"get writableEnded","ranges":[{"startOffset":12908,"endOffset":12993,"count":0}],"isBlockCoverage":false},{"functionName":"get finished","ranges":[{"startOffset":12999,"endOffset":13079,"count":0}],"isBlockCoverage":false},{"functionName":"get socket","ranges":[{"startOffset":13085,"endOffset":13501,"count":0}],"isBlockCoverage":false},{"functionName":"get connection","ranges":[{"startOffset":13507,"endOffset":13555,"count":0}],"isBlockCoverage":false},{"functionName":"get stream","ranges":[{"startOffset":13561,"endOffset":13607,"count":0}],"isBlockCoverage":false},{"functionName":"get headersSent","ranges":[{"startOffset":13613,"endOffset":13676,"count":0}],"isBlockCoverage":false},{"functionName":"get sendDate","ranges":[{"startOffset":13682,"endOffset":13738,"count":0}],"isBlockCoverage":false},{"functionName":"set sendDate","ranges":[{"startOffset":13744,"endOffset":13813,"count":0}],"isBlockCoverage":false},{"functionName":"get statusCode","ranges":[{"startOffset":13819,"endOffset":13879,"count":0}],"isBlockCoverage":false},{"functionName":"get writableCorked","ranges":[{"startOffset":13885,"endOffset":13954,"count":0}],"isBlockCoverage":false},{"functionName":"get writableHighWaterMark","ranges":[{"startOffset":13960,"endOffset":14043,"count":0}],"isBlockCoverage":false},{"functionName":"get writableFinished","ranges":[{"startOffset":14049,"endOffset":14122,"count":0}],"isBlockCoverage":false},{"functionName":"get writableLength","ranges":[{"startOffset":14128,"endOffset":14197,"count":0}],"isBlockCoverage":false},{"functionName":"set statusCode","ranges":[{"startOffset":14203,"endOffset":14457,"count":0}],"isBlockCoverage":false},{"functionName":"setTrailer","ranges":[{"startOffset":14463,"endOffset":14668,"count":0}],"isBlockCoverage":false},{"functionName":"addTrailers","ranges":[{"startOffset":14674,"endOffset":14876,"count":0}],"isBlockCoverage":false},{"functionName":"getHeader","ranges":[{"startOffset":14882,"endOffset":15040,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaderNames","ranges":[{"startOffset":15046,"endOffset":15109,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaders","ranges":[{"startOffset":15115,"endOffset":15227,"count":0}],"isBlockCoverage":false},{"functionName":"hasHeader","ranges":[{"startOffset":15233,"endOffset":15422,"count":0}],"isBlockCoverage":false},{"functionName":"removeHeader","ranges":[{"startOffset":15428,"endOffset":15764,"count":0}],"isBlockCoverage":false},{"functionName":"setHeader","ranges":[{"startOffset":15770,"endOffset":15951,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15957,"endOffset":16381,"count":0}],"isBlockCoverage":false},{"functionName":"appendHeader","ranges":[{"startOffset":16387,"endOffset":16574,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16580,"endOffset":17523,"count":0}],"isBlockCoverage":false},{"functionName":"get statusMessage","ranges":[{"startOffset":17529,"endOffset":17599,"count":0}],"isBlockCoverage":false},{"functionName":"set statusMessage","ranges":[{"startOffset":17605,"endOffset":17660,"count":0}],"isBlockCoverage":false},{"functionName":"flushHeaders","ranges":[{"startOffset":17666,"endOffset":17815,"count":0}],"isBlockCoverage":false},{"functionName":"writeHead","ranges":[{"startOffset":17821,"endOffset":19998,"count":0}],"isBlockCoverage":false},{"functionName":"cork","ranges":[{"startOffset":20004,"endOffset":20044,"count":0}],"isBlockCoverage":false},{"functionName":"uncork","ranges":[{"startOffset":20050,"endOffset":20094,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":20100,"endOffset":20794,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":20800,"endOffset":21849,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":21855,"endOffset":21993,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":21999,"endOffset":22126,"count":0}],"isBlockCoverage":false},{"functionName":"createPushResponse","ranges":[{"startOffset":22132,"endOffset":22555,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22561,"endOffset":22878,"count":0}],"isBlockCoverage":false},{"functionName":"writeContinue","ranges":[{"startOffset":22921,"endOffset":23162,"count":0}],"isBlockCoverage":false},{"functionName":"writeEarlyHints","ranges":[{"startOffset":23168,"endOffset":23825,"count":0}],"isBlockCoverage":false},{"functionName":"onServerStream","ranges":[{"startOffset":23832,"endOffset":25010,"count":0}],"isBlockCoverage":false}]},{"scriptId":"342","url":"node:internal/http2/util","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28041,"count":1}],"isBlockCoverage":false},{"functionName":"updateOptionsBuffer","ranges":[{"startOffset":7303,"endOffset":9600,"count":0}],"isBlockCoverage":false},{"functionName":"addCustomSettingsToObj","ranges":[{"startOffset":9604,"endOffset":9919,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultSettings","ranges":[{"startOffset":9923,"endOffset":11782,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":11899,"endOffset":12751,"count":0}],"isBlockCoverage":false},{"functionName":"updateSettingsBuffer","ranges":[{"startOffset":12755,"endOffset":18067,"count":0}],"isBlockCoverage":false},{"functionName":"remoteCustomSettingsToBuffer","ranges":[{"startOffset":18071,"endOffset":18778,"count":0}],"isBlockCoverage":false},{"functionName":"getSessionState","ranges":[{"startOffset":18782,"endOffset":19664,"count":0}],"isBlockCoverage":false},{"functionName":"getStreamState","ranges":[{"startOffset":19668,"endOffset":20114,"count":0}],"isBlockCoverage":false},{"functionName":"isIllegalConnectionSpecificHeader","ranges":[{"startOffset":20118,"endOffset":20544,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20596,"endOffset":20706,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20768,"endOffset":20866,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20927,"endOffset":20990,"count":0}],"isBlockCoverage":false},{"functionName":"mapToHeaders","ranges":[{"startOffset":21157,"endOffset":23302,"count":0}],"isBlockCoverage":false},{"functionName":"NghttpError","ranges":[{"startOffset":23343,"endOffset":23602,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23608,"endOffset":23653,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":23659,"endOffset":23736,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23782,"endOffset":24030,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24074,"endOffset":24285,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24337,"endOffset":24607,"count":0}],"isBlockCoverage":false},{"functionName":"toHeaderObject","ranges":[{"startOffset":24616,"endOffset":26728,"count":0}],"isBlockCoverage":false},{"functionName":"isPayloadMeaningless","ranges":[{"startOffset":26732,"endOffset":26815,"count":0}],"isBlockCoverage":false},{"functionName":"sessionName","ranges":[{"startOffset":26819,"endOffset":27031,"count":0}],"isBlockCoverage":false},{"functionName":"getAuthority","ranges":[{"startOffset":27035,"endOffset":27493,"count":0}],"isBlockCoverage":false}]},{"scriptId":"343","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/supertest/lib/test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9215,"count":1}],"isBlockCoverage":true},{"functionName":"Test","ranges":[{"startOffset":540,"endOffset":800,"count":5},{"startOffset":745,"endOffset":757,"count":0}],"isBlockCoverage":true},{"functionName":"serverAddress","ranges":[{"startOffset":970,"endOffset":1231,"count":5},{"startOffset":1155,"endOffset":1164,"count":0}],"isBlockCoverage":true},{"functionName":"expect","ranges":[{"startOffset":1647,"endOffset":2727,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":2869,"endOffset":3143,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2927,"endOffset":3119,"count":5},{"startOffset":3091,"endOffset":3118,"count":0}],"isBlockCoverage":true},{"functionName":"localAssert","ranges":[{"startOffset":2969,"endOffset":3019,"count":5}],"isBlockCoverage":true},{"functionName":"assert","ranges":[{"startOffset":3316,"endOffset":4557,"count":5},{"startOffset":3857,"endOffset":3868,"count":0},{"startOffset":3870,"endOffset":4158,"count":0},{"startOffset":4220,"endOffset":4232,"count":0},{"startOffset":4242,"endOffset":4311,"count":0},{"startOffset":4431,"endOffset":4474,"count":1},{"startOffset":4476,"endOffset":4510,"count":0}],"isBlockCoverage":true},{"functionName":"_assertBody","ranges":[{"startOffset":4797,"endOffset":5571,"count":0}],"isBlockCoverage":false},{"functionName":"_assertHeader","ranges":[{"startOffset":5816,"endOffset":6612,"count":0}],"isBlockCoverage":false},{"functionName":"_assertStatus","ranges":[{"startOffset":6859,"endOffset":7109,"count":0}],"isBlockCoverage":false},{"functionName":"_assertStatusArray","ranges":[{"startOffset":7368,"endOffset":7672,"count":0}],"isBlockCoverage":false},{"functionName":"_assertFunction","ranges":[{"startOffset":7919,"endOffset":8074,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAssertFn","ranges":[{"startOffset":8316,"endOffset":8825,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":9005,"endOffset":9163,"count":0}],"isBlockCoverage":false}]},{"scriptId":"344","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/lib/node/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":126455,"count":1},{"startOffset":32130,"endOffset":32611,"count":35},{"startOffset":32183,"endOffset":32193,"count":1},{"startOffset":32194,"endOffset":32202,"count":34}],"isBlockCoverage":true},{"functionName":"request","ranges":[{"startOffset":819,"endOffset":1103,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":1308,"endOffset":1326,"count":0}],"isBlockCoverage":false},{"functionName":"_initHeaders","ranges":[{"startOffset":2390,"endOffset":2555,"count":5}],"isBlockCoverage":true},{"functionName":"Request","ranges":[{"startOffset":2705,"endOffset":3350,"count":5},{"startOffset":2789,"endOffset":2807,"count":0},{"startOffset":3074,"endOffset":3077,"count":0}],"isBlockCoverage":true},{"functionName":"Request.http2","ranges":[{"startOffset":4007,"endOffset":4235,"count":0}],"isBlockCoverage":false},{"functionName":"Request.attach","ranges":[{"startOffset":4850,"endOffset":5577,"count":0}],"isBlockCoverage":false},{"functionName":"Request._getFormData","ranges":[{"startOffset":5612,"endOffset":6014,"count":0}],"isBlockCoverage":false},{"functionName":"Request.agent","ranges":[{"startOffset":6280,"endOffset":6388,"count":0}],"isBlockCoverage":false},{"functionName":"Request.lookup","ranges":[{"startOffset":6558,"endOffset":6670,"count":0}],"isBlockCoverage":false},{"functionName":"Request.type","ranges":[{"startOffset":7201,"endOffset":7303,"count":2},{"startOffset":7272,"endOffset":7278,"count":0}],"isBlockCoverage":true},{"functionName":"Request.accept","ranges":[{"startOffset":7738,"endOffset":7834,"count":0}],"isBlockCoverage":false},{"functionName":"Request.query","ranges":[{"startOffset":8085,"endOffset":8234,"count":0}],"isBlockCoverage":false},{"functionName":"Request.write","ranges":[{"startOffset":8418,"endOffset":8589,"count":0}],"isBlockCoverage":false},{"functionName":"Request.pipe","ranges":[{"startOffset":8755,"endOffset":8899,"count":0}],"isBlockCoverage":false},{"functionName":"Request._pipeContinue","ranges":[{"startOffset":8935,"endOffset":9931,"count":0}],"isBlockCoverage":false},{"functionName":"Request.buffer","ranges":[{"startOffset":10080,"endOffset":10149,"count":5}],"isBlockCoverage":true},{"functionName":"Request._redirect","ranges":[{"startOffset":10296,"endOffset":11850,"count":0}],"isBlockCoverage":false},{"functionName":"Request.auth","ranges":[{"startOffset":12293,"endOffset":12699,"count":0}],"isBlockCoverage":false},{"functionName":"Request.ca","ranges":[{"startOffset":12877,"endOffset":12930,"count":0}],"isBlockCoverage":false},{"functionName":"Request.key","ranges":[{"startOffset":13111,"endOffset":13165,"count":0}],"isBlockCoverage":false},{"functionName":"Request.pfx","ranges":[{"startOffset":13367,"endOffset":13564,"count":0}],"isBlockCoverage":false},{"functionName":"Request.cert","ranges":[{"startOffset":13742,"endOffset":13797,"count":0}],"isBlockCoverage":false},{"functionName":"Request.disableTLSCerts","ranges":[{"startOffset":14020,"endOffset":14082,"count":0}],"isBlockCoverage":false},{"functionName":"Request.request","ranges":[{"startOffset":14239,"endOffset":18532,"count":5},{"startOffset":14269,"endOffset":14285,"count":0},{"startOffset":14434,"endOffset":14492,"count":0},{"startOffset":14530,"endOffset":14583,"count":0},{"startOffset":14720,"endOffset":14754,"count":0},{"startOffset":14941,"endOffset":15145,"count":0},{"startOffset":15215,"endOffset":15925,"count":0},{"startOffset":16340,"endOffset":16364,"count":0},{"startOffset":16514,"endOffset":16584,"count":0},{"startOffset":16612,"endOffset":16677,"count":0},{"startOffset":16679,"endOffset":16724,"count":0},{"startOffset":16784,"endOffset":16835,"count":0},{"startOffset":17824,"endOffset":17872,"count":0},{"startOffset":17893,"endOffset":17909,"count":0},{"startOffset":17911,"endOffset":17961,"count":0},{"startOffset":17995,"endOffset":18072,"count":2},{"startOffset":18111,"endOffset":18516,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17183,"endOffset":17218,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17239,"endOffset":17774,"count":0}],"isBlockCoverage":false},{"functionName":"Request.callback","ranges":[{"startOffset":18710,"endOffset":19943,"count":5},{"startOffset":18771,"endOffset":18802,"count":0},{"startOffset":18939,"endOffset":18946,"count":0},{"startOffset":18990,"endOffset":19045,"count":0},{"startOffset":19130,"endOffset":19371,"count":1},{"startOffset":19253,"endOffset":19263,"count":0},{"startOffset":19351,"endOffset":19362,"count":0},{"startOffset":19378,"endOffset":19485,"count":0},{"startOffset":19601,"endOffset":19632,"count":4},{"startOffset":19632,"endOffset":19681,"count":1},{"startOffset":19681,"endOffset":19715,"count":0},{"startOffset":19715,"endOffset":19885,"count":1},{"startOffset":19887,"endOffset":19923,"count":0},{"startOffset":19923,"endOffset":19942,"count":1}],"isBlockCoverage":true},{"functionName":"Request._isHost","ranges":[{"startOffset":20110,"endOffset":20223,"count":4}],"isBlockCoverage":true},{"functionName":"Request._emitResponse","ranges":[{"startOffset":20433,"endOffset":20867,"count":5}],"isBlockCoverage":true},{"functionName":"response.pipe","ranges":[{"startOffset":20697,"endOffset":20806,"count":0}],"isBlockCoverage":false},{"functionName":"Request._emitRedirect","ranges":[{"startOffset":20992,"endOffset":21124,"count":0}],"isBlockCoverage":false},{"functionName":"Request.end","ranges":[{"startOffset":21150,"endOffset":21433,"count":5},{"startOffset":21248,"endOffset":21338,"count":0},{"startOffset":21408,"endOffset":21415,"count":0}],"isBlockCoverage":true},{"functionName":"Request._end","ranges":[{"startOffset":21460,"endOffset":30341,"count":5},{"startOffset":21495,"endOffset":21589,"count":0},{"startOffset":21974,"endOffset":22014,"count":2},{"startOffset":22110,"endOffset":22132,"count":3},{"startOffset":22134,"endOffset":22202,"count":0},{"startOffset":22224,"endOffset":22247,"count":2},{"startOffset":22290,"endOffset":22325,"count":2},{"startOffset":22327,"endOffset":22436,"count":2},{"startOffset":22389,"endOffset":22402,"count":0},{"startOffset":29523,"endOffset":30208,"count":0},{"startOffset":30241,"endOffset":30309,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22520,"endOffset":28291,"count":5},{"startOffset":22630,"endOffset":22685,"count":0},{"startOffset":22706,"endOffset":22727,"count":0},{"startOffset":22820,"endOffset":22825,"count":0},{"startOffset":22827,"endOffset":22842,"count":0},{"startOffset":23119,"endOffset":23147,"count":0},{"startOffset":23149,"endOffset":23190,"count":0},{"startOffset":23223,"endOffset":23317,"count":0},{"startOffset":23371,"endOffset":23401,"count":0},{"startOffset":23462,"endOffset":23487,"count":0},{"startOffset":23489,"endOffset":23542,"count":0},{"startOffset":23603,"endOffset":23612,"count":0},{"startOffset":23614,"endOffset":23850,"count":0},{"startOffset":23894,"endOffset":23998,"count":0},{"startOffset":24019,"endOffset":24137,"count":0},{"startOffset":24163,"endOffset":24307,"count":0},{"startOffset":24385,"endOffset":24868,"count":0},{"startOffset":24978,"endOffset":24993,"count":0},{"startOffset":27478,"endOffset":27543,"count":0},{"startOffset":27606,"endOffset":27917,"count":0},{"startOffset":28079,"endOffset":28287,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25269,"endOffset":25857,"count":5},{"startOffset":25353,"endOffset":25356,"count":0},{"startOffset":25393,"endOffset":25849,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26087,"endOffset":27467,"count":5},{"startOffset":26144,"endOffset":26234,"count":0},{"startOffset":26382,"endOffset":26399,"count":0},{"startOffset":26401,"endOffset":26455,"count":0},{"startOffset":26517,"endOffset":27347,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27803,"endOffset":27895,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27967,"endOffset":28049,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28095,"endOffset":28285,"count":0}],"isBlockCoverage":false},{"functionName":"getProgressMonitor","ranges":[{"startOffset":28353,"endOffset":28786,"count":0}],"isBlockCoverage":false},{"functionName":"bufferToChunks","ranges":[{"startOffset":28813,"endOffset":29390,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29839,"endOffset":30202,"count":0}],"isBlockCoverage":false},{"functionName":"Request._shouldUnzip","ranges":[{"startOffset":30439,"endOffset":30931,"count":5},{"startOffset":30504,"endOffset":30573,"count":0},{"startOffset":30709,"endOffset":30830,"count":0}],"isBlockCoverage":true},{"functionName":"Request.connect","ranges":[{"startOffset":31430,"endOffset":31735,"count":0}],"isBlockCoverage":false},{"functionName":"Request.trustLocalhost","ranges":[{"startOffset":31772,"endOffset":31871,"count":0}],"isBlockCoverage":false},{"functionName":"request.<computed>","ranges":[{"startOffset":32255,"endOffset":32608,"count":0}],"isBlockCoverage":false},{"functionName":"isText","ranges":[{"startOffset":32736,"endOffset":33009,"count":0}],"isBlockCoverage":false},{"functionName":"isBinary","ranges":[{"startOffset":33212,"endOffset":33483,"count":5}],"isBlockCoverage":true},{"functionName":"isJSON","ranges":[{"startOffset":33624,"endOffset":33748,"count":8}],"isBlockCoverage":true},{"functionName":"isRedirect","ranges":[{"startOffset":33873,"endOffset":33958,"count":5}],"isBlockCoverage":true}]},{"scriptId":"345","url":"node:https","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11344,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1937,"endOffset":1964,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":2097,"endOffset":3391,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":3764,"endOffset":3886,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":3930,"endOffset":4013,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":4309,"endOffset":4403,"count":0}],"isBlockCoverage":false},{"functionName":"createConnection","ranges":[{"startOffset":4429,"endOffset":5575,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":5939,"endOffset":6345,"count":1},{"startOffset":6003,"endOffset":6029,"count":0}],"isBlockCoverage":true},{"functionName":"getName","ranges":[{"startOffset":6731,"endOffset":8539,"count":0}],"isBlockCoverage":false},{"functionName":"_getSession","ranges":[{"startOffset":8574,"endOffset":8643,"count":0}],"isBlockCoverage":false},{"functionName":"_cacheSession","ranges":[{"startOffset":8680,"endOffset":9273,"count":0}],"isBlockCoverage":false},{"functionName":"_evictSession","ranges":[{"startOffset":9310,"endOffset":9547,"count":0}],"isBlockCoverage":false},{"functionName":"request","ranges":[{"startOffset":9750,"endOffset":10297,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11132,"endOffset":11242,"count":0}],"isBlockCoverage":false}]},{"scriptId":"346","url":"node:zlib","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31160,"count":1}],"isBlockCoverage":false},{"functionName":"zlibBuffer","ranges":[{"startOffset":3642,"endOffset":4285,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnData","ranges":[{"startOffset":4289,"endOffset":4631,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnError","ranges":[{"startOffset":4635,"endOffset":4723,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnEnd","ranges":[{"startOffset":4727,"endOffset":5070,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferSync","ranges":[{"startOffset":5074,"endOffset":5633,"count":0}],"isBlockCoverage":false},{"functionName":"zlibOnError","ranges":[{"startOffset":5637,"endOffset":5961,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6192,"endOffset":6585,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6896,"endOffset":7256,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase","ranges":[{"startOffset":7504,"endOffset":9617,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9850,"endOffset":9889,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10343,"endOffset":10391,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10540,"endOffset":10594,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.reset","ranges":[{"startOffset":10739,"endOffset":10851,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._flush","ranges":[{"startOffset":11001,"endOffset":11075,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._final","ranges":[{"startOffset":11145,"endOffset":11183,"count":0}],"isBlockCoverage":false},{"functionName":"maxFlush","ranges":[{"startOffset":11798,"endOffset":11875,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.flush","ranges":[{"startOffset":12330,"endOffset":12747,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.close","ranges":[{"startOffset":12779,"endOffset":12864,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._destroy","ranges":[{"startOffset":12899,"endOffset":12962,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._transform","ranges":[{"startOffset":12999,"endOffset":13546,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._processChunk","ranges":[{"startOffset":13586,"endOffset":13821,"count":0}],"isBlockCoverage":false},{"functionName":"processChunkSync","ranges":[{"startOffset":13826,"endOffset":16196,"count":0}],"isBlockCoverage":false},{"functionName":"processChunk","ranges":[{"startOffset":16200,"endOffset":16808,"count":0}],"isBlockCoverage":false},{"functionName":"processCallback","ranges":[{"startOffset":16812,"endOffset":19755,"count":0}],"isBlockCoverage":false},{"functionName":"_close","ranges":[{"startOffset":19759,"endOffset":19956,"count":0}],"isBlockCoverage":false},{"functionName":"Zlib","ranges":[{"startOffset":20162,"endOffset":22547,"count":0}],"isBlockCoverage":false},{"functionName":"paramsAfterFlushCallback","ranges":[{"startOffset":22905,"endOffset":23179,"count":0}],"isBlockCoverage":false},{"functionName":"params","ranges":[{"startOffset":23207,"endOffset":23685,"count":0}],"isBlockCoverage":false},{"functionName":"Deflate","ranges":[{"startOffset":23733,"endOffset":23872,"count":0}],"isBlockCoverage":false},{"functionName":"Inflate","ranges":[{"startOffset":23972,"endOffset":24111,"count":0}],"isBlockCoverage":false},{"functionName":"Gzip","ranges":[{"startOffset":24211,"endOffset":24338,"count":0}],"isBlockCoverage":false},{"functionName":"Gunzip","ranges":[{"startOffset":24432,"endOffset":24567,"count":0}],"isBlockCoverage":false},{"functionName":"DeflateRaw","ranges":[{"startOffset":24665,"endOffset":24875,"count":0}],"isBlockCoverage":false},{"functionName":"InflateRaw","ranges":[{"startOffset":24981,"endOffset":25132,"count":0}],"isBlockCoverage":false},{"functionName":"Unzip","ranges":[{"startOffset":25238,"endOffset":25369,"count":0}],"isBlockCoverage":false},{"functionName":"createConvenienceMethod","ranges":[{"startOffset":25465,"endOffset":25867,"count":18},{"startOffset":25525,"endOffset":25866,"count":9}],"isBlockCoverage":true},{"functionName":"syncBufferWrapper","ranges":[{"startOffset":25539,"endOffset":25642,"count":0}],"isBlockCoverage":false},{"functionName":"asyncBufferWrapper","ranges":[{"startOffset":25659,"endOffset":25863,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25956,"endOffset":26045,"count":107},{"startOffset":26014,"endOffset":26035,"count":9},{"startOffset":26036,"endOffset":26044,"count":98}],"isBlockCoverage":true},{"functionName":"Brotli","ranges":[{"startOffset":26274,"endOffset":27646,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliCompress","ranges":[{"startOffset":27744,"endOffset":27912,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliDecompress","ranges":[{"startOffset":28030,"endOffset":28204,"count":0}],"isBlockCoverage":false},{"functionName":"createProperty","ranges":[{"startOffset":28328,"endOffset":28523,"count":9}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":28454,"endOffset":28513,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":28758,"endOffset":28794,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":28799,"endOffset":28840,"count":0}],"isBlockCoverage":false}]},{"scriptId":"347","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/node_modules/qs/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":211,"count":1}],"isBlockCoverage":true}]},{"scriptId":"348","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/node_modules/qs/lib/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11329,"count":1}],"isBlockCoverage":true},{"functionName":"brackets","ranges":[{"startOffset":217,"endOffset":280,"count":0}],"isBlockCoverage":false},{"functionName":"indices","ranges":[{"startOffset":315,"endOffset":393,"count":0}],"isBlockCoverage":false},{"functionName":"repeat","ranges":[{"startOffset":407,"endOffset":461,"count":0}],"isBlockCoverage":false},{"functionName":"pushToArray","ranges":[{"startOffset":546,"endOffset":654,"count":0}],"isBlockCoverage":false},{"functionName":"serializeDate","ranges":[{"startOffset":1167,"endOffset":1236,"count":0}],"isBlockCoverage":false},{"functionName":"isNonNullishPrimitive","ranges":[{"startOffset":1322,"endOffset":1526,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":1565,"endOffset":5726,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeStringifyOptions","ranges":[{"startOffset":5761,"endOffset":9234,"count":5},{"startOffset":5819,"endOffset":5851,"count":0},{"startOffset":5906,"endOffset":5951,"count":0},{"startOffset":5953,"endOffset":6063,"count":0},{"startOffset":6117,"endOffset":6161,"count":0},{"startOffset":6163,"endOffset":6272,"count":0},{"startOffset":6343,"endOffset":6380,"count":0},{"startOffset":6382,"endOffset":6451,"count":0},{"startOffset":6549,"endOffset":6576,"count":0},{"startOffset":6577,"endOffset":6609,"count":0},{"startOffset":6611,"endOffset":6716,"count":0},{"startOffset":6799,"endOffset":6972,"count":0},{"startOffset":7123,"endOffset":7160,"count":0},{"startOffset":7234,"endOffset":7281,"count":0},{"startOffset":7347,"endOffset":7358,"count":0},{"startOffset":7376,"endOffset":7433,"count":0},{"startOffset":7468,"endOffset":7511,"count":0},{"startOffset":7513,"endOffset":7598,"count":0},{"startOffset":7690,"endOffset":7696,"count":0},{"startOffset":7718,"endOffset":7736,"count":0},{"startOffset":7817,"endOffset":7838,"count":0},{"startOffset":7965,"endOffset":7990,"count":0},{"startOffset":8147,"endOffset":8169,"count":0},{"startOffset":8321,"endOffset":8337,"count":0},{"startOffset":8388,"endOffset":8401,"count":0},{"startOffset":8488,"endOffset":8510,"count":0},{"startOffset":8591,"endOffset":8605,"count":0},{"startOffset":8695,"endOffset":8718,"count":0},{"startOffset":8890,"endOffset":8910,"count":0},{"startOffset":8992,"endOffset":9008,"count":0},{"startOffset":9077,"endOffset":9088,"count":0},{"startOffset":9196,"endOffset":9225,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":9254,"endOffset":11327,"count":5},{"startOffset":9434,"endOffset":9505,"count":0},{"startOffset":9540,"endOffset":9606,"count":0},{"startOffset":9677,"endOffset":9703,"count":0},{"startOffset":9836,"endOffset":9861,"count":0},{"startOffset":9949,"endOffset":9992,"count":0},{"startOffset":10079,"endOffset":10821,"count":0},{"startOffset":10919,"endOffset":10924,"count":0},{"startOffset":10965,"endOffset":11271,"count":0},{"startOffset":11302,"endOffset":11319,"count":0}],"isBlockCoverage":true}]},{"scriptId":"349","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/side-channel/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3946,"count":1}],"isBlockCoverage":true},{"functionName":"listGetNode","ranges":[{"startOffset":972,"endOffset":1478,"count":0}],"isBlockCoverage":false},{"functionName":"listGet","ranges":[{"startOffset":1530,"endOffset":1624,"count":0}],"isBlockCoverage":false},{"functionName":"listSet","ranges":[{"startOffset":1675,"endOffset":2037,"count":0}],"isBlockCoverage":false},{"functionName":"listHas","ranges":[{"startOffset":2088,"endOffset":2152,"count":0}],"isBlockCoverage":false},{"functionName":"getSideChannel","ranges":[{"startOffset":2199,"endOffset":3944,"count":5}],"isBlockCoverage":true},{"functionName":"assert","ranges":[{"startOffset":2440,"endOffset":2568,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2577,"endOffset":2953,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":2962,"endOffset":3314,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3323,"endOffset":3921,"count":0}],"isBlockCoverage":false}]},{"scriptId":"350","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/get-intrinsic/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13615,"count":1},{"startOffset":668,"endOffset":739,"count":0},{"startOffset":1241,"endOffset":1257,"count":0},{"startOffset":1380,"endOffset":1478,"count":0},{"startOffset":1566,"endOffset":1577,"count":0},{"startOffset":1699,"endOffset":1710,"count":0},{"startOffset":1801,"endOffset":1812,"count":0},{"startOffset":1914,"endOffset":1925,"count":0},{"startOffset":2163,"endOffset":2174,"count":0},{"startOffset":2229,"endOffset":2240,"count":0},{"startOffset":2308,"endOffset":2319,"count":0},{"startOffset":2396,"endOffset":2407,"count":0},{"startOffset":2496,"endOffset":2507,"count":0},{"startOffset":2832,"endOffset":2843,"count":0},{"startOffset":2915,"endOffset":2926,"count":0},{"startOffset":3014,"endOffset":3025,"count":0},{"startOffset":3160,"endOffset":3171,"count":0},{"startOffset":3236,"endOffset":3247,"count":0},{"startOffset":3313,"endOffset":3324,"count":0},{"startOffset":3474,"endOffset":3485,"count":0},{"startOffset":3530,"endOffset":3541,"count":0},{"startOffset":3580,"endOffset":3591,"count":0},{"startOffset":3681,"endOffset":3692,"count":0},{"startOffset":3893,"endOffset":3904,"count":0},{"startOffset":3957,"endOffset":3968,"count":0},{"startOffset":4091,"endOffset":4102,"count":0},{"startOffset":4172,"endOffset":4183,"count":0},{"startOffset":4273,"endOffset":4284,"count":0},{"startOffset":4392,"endOffset":4403,"count":0},{"startOffset":4533,"endOffset":4544,"count":0},{"startOffset":4579,"endOffset":4590,"count":0},{"startOffset":4769,"endOffset":4780,"count":0},{"startOffset":4860,"endOffset":4871,"count":0},{"startOffset":4946,"endOffset":4957,"count":0},{"startOffset":5026,"endOffset":5037,"count":0},{"startOffset":5124,"endOffset":5135,"count":0},{"startOffset":5192,"endOffset":5203,"count":0},{"startOffset":5260,"endOffset":5271,"count":0}],"isBlockCoverage":true},{"functionName":"getEvalledConstructor","ranges":[{"startOffset":440,"endOffset":580,"count":0}],"isBlockCoverage":false},{"functionName":"throwTypeError","ranges":[{"startOffset":764,"endOffset":804,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":837,"endOffset":1236,"count":1},{"startOffset":1177,"endOffset":1229,"count":0}],"isBlockCoverage":true},{"functionName":"getProto","ranges":[{"startOffset":1399,"endOffset":1435,"count":0}],"isBlockCoverage":false},{"functionName":"doEval","ranges":[{"startOffset":5575,"endOffset":6245,"count":0}],"isBlockCoverage":false},{"functionName":"stringToPath","ranges":[{"startOffset":9732,"endOffset":10283,"count":16},{"startOffset":9856,"endOffset":9871,"count":9},{"startOffset":9873,"endOffset":9953,"count":0},{"startOffset":9976,"endOffset":9992,"count":9},{"startOffset":9994,"endOffset":10074,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10123,"endOffset":10263,"count":39},{"startOffset":10200,"endOffset":10241,"count":0}],"isBlockCoverage":true},{"functionName":"getBaseIntrinsic","ranges":[{"startOffset":10330,"endOffset":11006,"count":16},{"startOffset":10461,"endOffset":10546,"count":0},{"startOffset":10658,"endOffset":10697,"count":0},{"startOffset":10733,"endOffset":10749,"count":0},{"startOffset":10751,"endOffset":10859,"count":0},{"startOffset":10936,"endOffset":11005,"count":0}],"isBlockCoverage":true},{"functionName":"GetIntrinsic","ranges":[{"startOffset":11026,"endOffset":13613,"count":16},{"startOffset":11122,"endOffset":11195,"count":0},{"startOffset":11222,"endOffset":11258,"count":11},{"startOffset":11260,"endOffset":11333,"count":0},{"startOffset":11377,"endOffset":11493,"count":0},{"startOffset":11580,"endOffset":11584,"count":0},{"startOffset":11814,"endOffset":11897,"count":0},{"startOffset":11956,"endOffset":13596,"count":23},{"startOffset":12180,"endOffset":12197,"count":0},{"startOffset":12202,"endOffset":12290,"count":0},{"startOffset":12331,"endOffset":12366,"count":0},{"startOffset":12502,"endOffset":12549,"count":5},{"startOffset":12549,"endOffset":13593,"count":18},{"startOffset":12601,"endOffset":12770,"count":0},{"startOffset":12812,"endOffset":13431,"count":14},{"startOffset":13322,"endOffset":13355,"count":0},{"startOffset":13357,"endOffset":13387,"count":0},{"startOffset":13431,"endOffset":13501,"count":4}],"isBlockCoverage":true}]},{"scriptId":"351","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/es-errors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":66,"count":1}],"isBlockCoverage":true}]},{"scriptId":"352","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/es-errors/eval.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":75,"count":1}],"isBlockCoverage":true}]},{"scriptId":"353","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/es-errors/range.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":77,"count":1}],"isBlockCoverage":true}]},{"scriptId":"354","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/es-errors/ref.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":79,"count":1}],"isBlockCoverage":true}]},{"scriptId":"355","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/es-errors/syntax.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":79,"count":1}],"isBlockCoverage":true}]},{"scriptId":"356","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/es-errors/type.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":75,"count":1}],"isBlockCoverage":true}]},{"scriptId":"357","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/es-errors/uri.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":73,"count":1}],"isBlockCoverage":true}]},{"scriptId":"358","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/has-symbols/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":420,"count":1}],"isBlockCoverage":true},{"functionName":"hasNativeSymbols","ranges":[{"startOffset":131,"endOffset":418,"count":1},{"startOffset":200,"endOffset":217,"count":0},{"startOffset":253,"endOffset":270,"count":0},{"startOffset":315,"endOffset":332,"count":0},{"startOffset":373,"endOffset":390,"count":0}],"isBlockCoverage":true}]},{"scriptId":"359","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/has-symbols/shams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1761,"count":1}],"isBlockCoverage":true},{"functionName":"hasSymbols","ranges":[{"startOffset":90,"endOffset":1759,"count":1},{"startOffset":203,"endOffset":220,"count":0},{"startOffset":279,"endOffset":1198,"count":0},{"startOffset":1200,"endOffset":1320,"count":0},{"startOffset":1322,"endOffset":1429,"count":0},{"startOffset":1431,"endOffset":1758,"count":0}],"isBlockCoverage":true}]},{"scriptId":"360","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/has-proto/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":302,"count":1}],"isBlockCoverage":true},{"functionName":"hasProto","ranges":[{"startOffset":126,"endOffset":300,"count":1}],"isBlockCoverage":true}]},{"scriptId":"361","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/function-bind/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":126,"count":1},{"startOffset":107,"endOffset":124,"count":0}],"isBlockCoverage":true}]},{"scriptId":"362","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/function-bind/implementation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2043,"count":1}],"isBlockCoverage":true},{"functionName":"concatty","ranges":[{"startOffset":230,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"slicy","ranges":[{"startOffset":465,"endOffset":644,"count":0}],"isBlockCoverage":false},{"functionName":"joiny","ranges":[{"startOffset":659,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"bind","ranges":[{"startOffset":885,"endOffset":2041,"count":0}],"isBlockCoverage":false}]},{"scriptId":"363","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/hasown/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":206,"count":1}],"isBlockCoverage":true}]},{"scriptId":"364","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/call-bind/callBound.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":413,"count":1}],"isBlockCoverage":true},{"functionName":"callBoundIntrinsic","ranges":[{"startOffset":177,"endOffset":411,"count":6},{"startOffset":390,"endOffset":410,"count":0}],"isBlockCoverage":true}]},{"scriptId":"365","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/call-bind/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1037,"count":1},{"startOffset":368,"endOffset":395,"count":0},{"startOffset":992,"endOffset":1036,"count":0}],"isBlockCoverage":true},{"functionName":"callBind","ranges":[{"startOffset":508,"endOffset":809,"count":7},{"startOffset":591,"endOffset":645,"count":0}],"isBlockCoverage":true},{"functionName":"applyBind","ranges":[{"startOffset":828,"endOffset":900,"count":0}],"isBlockCoverage":false}]},{"scriptId":"366","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/set-function-length/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1273,"count":1}],"isBlockCoverage":true},{"functionName":"setFunctionLength","ranges":[{"startOffset":327,"endOffset":1271,"count":7},{"startOffset":399,"endOffset":453,"count":0},{"startOffset":553,"endOffset":627,"count":0},{"startOffset":861,"endOffset":907,"count":0},{"startOffset":1019,"endOffset":1046,"count":0},{"startOffset":1047,"endOffset":1056,"count":0},{"startOffset":1171,"endOffset":1254,"count":0}],"isBlockCoverage":true}]},{"scriptId":"367","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/define-data-property/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2336,"count":1}],"isBlockCoverage":true},{"functionName":"defineDataProperty","ranges":[{"startOffset":235,"endOffset":2334,"count":7},{"startOffset":361,"endOffset":431,"count":0},{"startOffset":466,"endOffset":497,"count":0},{"startOffset":499,"endOffset":571,"count":0},{"startOffset":635,"endOffset":659,"count":0},{"startOffset":661,"endOffset":748,"count":0},{"startOffset":812,"endOffset":836,"count":0},{"startOffset":838,"endOffset":923,"count":0},{"startOffset":950,"endOffset":986,"count":0},{"startOffset":987,"endOffset":1011,"count":0},{"startOffset":1013,"endOffset":1102,"count":0},{"startOffset":1129,"endOffset":1165,"count":0},{"startOffset":1167,"endOffset":1238,"count":0},{"startOffset":1297,"endOffset":1303,"count":0},{"startOffset":1360,"endOffset":1366,"count":0},{"startOffset":1412,"endOffset":1426,"count":0},{"startOffset":1469,"endOffset":1483,"count":0},{"startOffset":1723,"endOffset":1741,"count":0},{"startOffset":1781,"endOffset":1788,"count":0},{"startOffset":1789,"endOffset":1806,"count":0},{"startOffset":1876,"endOffset":1883,"count":0},{"startOffset":1884,"endOffset":1899,"count":0},{"startOffset":1923,"endOffset":2332,"count":0}],"isBlockCoverage":true}]},{"scriptId":"368","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/es-define-property/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":358,"count":1},{"startOffset":156,"endOffset":164,"count":0},{"startOffset":241,"endOffset":320,"count":0}],"isBlockCoverage":true}]},{"scriptId":"369","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/gopd/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":263,"count":1},{"startOffset":177,"endOffset":235,"count":0}],"isBlockCoverage":true}]},{"scriptId":"370","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/has-property-descriptors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":588,"count":1}],"isBlockCoverage":true},{"functionName":"hasPropertyDescriptors","ranges":[{"startOffset":98,"endOffset":162,"count":1}],"isBlockCoverage":true},{"functionName":"hasArrayLengthDefineBug","ranges":[{"startOffset":214,"endOffset":544,"count":0}],"isBlockCoverage":false}]},{"scriptId":"371","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/object-inspect/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18882,"count":1},{"startOffset":180,"endOffset":186,"count":0},{"startOffset":301,"endOffset":307,"count":0},{"startOffset":539,"endOffset":545,"count":0},{"startOffset":660,"endOffset":666,"count":0},{"startOffset":839,"endOffset":845,"count":0},{"startOffset":968,"endOffset":974,"count":0},{"startOffset":1101,"endOffset":1107,"count":0},{"startOffset":1717,"endOffset":1723,"count":0},{"startOffset":1880,"endOffset":1886,"count":0},{"startOffset":2132,"endOffset":2142,"count":0},{"startOffset":2184,"endOffset":2190,"count":0},{"startOffset":2292,"endOffset":2316,"count":0},{"startOffset":2342,"endOffset":2531,"count":0},{"startOffset":3403,"endOffset":3409,"count":0},{"startOffset":12973,"endOffset":13014,"count":0}],"isBlockCoverage":true},{"functionName":"gPO","ranges":[{"startOffset":2426,"endOffset":2514,"count":0}],"isBlockCoverage":false},{"functionName":"addNumericSeparator","ranges":[{"startOffset":2534,"endOffset":3256,"count":0}],"isBlockCoverage":false},{"functionName":"inspect_","ranges":[{"startOffset":3429,"endOffset":11013,"count":0}],"isBlockCoverage":false},{"functionName":"wrapQuotes","ranges":[{"startOffset":11016,"endOffset":11180,"count":0}],"isBlockCoverage":false},{"functionName":"quote","ranges":[{"startOffset":11182,"endOffset":11256,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":11258,"endOffset":11393,"count":0}],"isBlockCoverage":false},{"functionName":"isDate","ranges":[{"startOffset":11394,"endOffset":11527,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":11528,"endOffset":11665,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":11666,"endOffset":11801,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":11802,"endOffset":11939,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":11940,"endOffset":12077,"count":0}],"isBlockCoverage":false},{"functionName":"isBoolean","ranges":[{"startOffset":12078,"endOffset":12217,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":12327,"endOffset":12708,"count":1},{"startOffset":12379,"endOffset":12458,"count":0},{"startOffset":12520,"endOffset":12560,"count":0},{"startOffset":12561,"endOffset":12576,"count":0},{"startOffset":12578,"endOffset":12707,"count":0}],"isBlockCoverage":true},{"functionName":"isBigInt","ranges":[{"startOffset":12710,"endOffset":12926,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwn","ranges":[{"startOffset":12976,"endOffset":13014,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":13016,"endOffset":13076,"count":0}],"isBlockCoverage":false},{"functionName":"toStr","ranges":[{"startOffset":13078,"endOffset":13138,"count":0}],"isBlockCoverage":false},{"functionName":"nameOf","ranges":[{"startOffset":13140,"endOffset":13317,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":13319,"endOffset":13501,"count":0}],"isBlockCoverage":false},{"functionName":"isMap","ranges":[{"startOffset":13503,"endOffset":13842,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakMap","ranges":[{"startOffset":13844,"endOffset":14224,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakRef","ranges":[{"startOffset":14226,"endOffset":14433,"count":0}],"isBlockCoverage":false},{"functionName":"isSet","ranges":[{"startOffset":14435,"endOffset":14774,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakSet","ranges":[{"startOffset":14776,"endOffset":15156,"count":0}],"isBlockCoverage":false},{"functionName":"isElement","ranges":[{"startOffset":15158,"endOffset":15422,"count":0}],"isBlockCoverage":false},{"functionName":"inspectString","ranges":[{"startOffset":15424,"endOffset":15934,"count":0}],"isBlockCoverage":false},{"functionName":"lowbyte","ranges":[{"startOffset":15936,"endOffset":16204,"count":0}],"isBlockCoverage":false},{"functionName":"markBoxed","ranges":[{"startOffset":16206,"endOffset":16267,"count":0}],"isBlockCoverage":false},{"functionName":"weakCollectionOf","ranges":[{"startOffset":16269,"endOffset":16332,"count":0}],"isBlockCoverage":false},{"functionName":"collectionOf","ranges":[{"startOffset":16334,"endOffset":16541,"count":0}],"isBlockCoverage":false},{"functionName":"singleLineValues","ranges":[{"startOffset":16543,"endOffset":16718,"count":0}],"isBlockCoverage":false},{"functionName":"getIndent","ranges":[{"startOffset":16720,"endOffset":17106,"count":0}],"isBlockCoverage":false},{"functionName":"indentedJoin","ranges":[{"startOffset":17108,"endOffset":17319,"count":0}],"isBlockCoverage":false},{"functionName":"arrObjKeys","ranges":[{"startOffset":17321,"endOffset":18881,"count":0}],"isBlockCoverage":false}]},{"scriptId":"372","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/object-inspect/util.inspect.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42,"count":1}],"isBlockCoverage":true}]},{"scriptId":"373","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/node_modules/qs/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7267,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":141,"endOffset":317,"count":1},{"startOffset":209,"endOffset":296,"count":256},{"startOffset":245,"endOffset":250,"count":16},{"startOffset":251,"endOffset":255,"count":240}],"isBlockCoverage":true},{"functionName":"compactQueue","ranges":[{"startOffset":342,"endOffset":780,"count":0}],"isBlockCoverage":false},{"functionName":"arrayToObject","ranges":[{"startOffset":803,"endOffset":1079,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":1094,"endOffset":2706,"count":0}],"isBlockCoverage":false},{"functionName":"assignSingleSource","ranges":[{"startOffset":2722,"endOffset":2897,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":2913,"endOffset":3294,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":3377,"endOffset":5753,"count":0}],"isBlockCoverage":false},{"functionName":"compact","ranges":[{"startOffset":5770,"endOffset":6378,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":6396,"endOffset":6492,"count":0}],"isBlockCoverage":false},{"functionName":"isBuffer","ranges":[{"startOffset":6510,"endOffset":6701,"count":0}],"isBlockCoverage":false},{"functionName":"combine","ranges":[{"startOffset":6718,"endOffset":6772,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMap","ranges":[{"startOffset":6790,"endOffset":7015,"count":0}],"isBlockCoverage":false}]},{"scriptId":"374","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/node_modules/qs/lib/formats.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":476,"count":1}],"isBlockCoverage":true},{"functionName":"RFC1738","ranges":[{"startOffset":237,"endOffset":327,"count":0}],"isBlockCoverage":false},{"functionName":"RFC3986","ranges":[{"startOffset":346,"endOffset":408,"count":0}],"isBlockCoverage":false}]},{"scriptId":"375","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/node_modules/qs/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10816,"count":1}],"isBlockCoverage":true},{"functionName":"interpretNumericEntities","ranges":[{"startOffset":651,"endOffset":801,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrayValue","ranges":[{"startOffset":826,"endOffset":991,"count":0}],"isBlockCoverage":false},{"functionName":"parseQueryStringValues","ranges":[{"startOffset":1634,"endOffset":3898,"count":0}],"isBlockCoverage":false},{"functionName":"parseObject","ranges":[{"startOffset":3919,"endOffset":5203,"count":0}],"isBlockCoverage":false},{"functionName":"parseQueryStringKeys","ranges":[{"startOffset":5222,"endOffset":6724,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeParseOptions","ranges":[{"startOffset":6755,"endOffset":10040,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":10060,"endOffset":10814,"count":0}],"isBlockCoverage":false}]},{"scriptId":"376","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/node_modules/mime/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":127,"count":1}],"isBlockCoverage":true}]},{"scriptId":"377","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/node_modules/mime/Mime.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2892,"count":1}],"isBlockCoverage":true},{"functionName":"Mime","ranges":[{"startOffset":102,"endOffset":418,"count":1},{"startOffset":245,"endOffset":281,"count":2}],"isBlockCoverage":true},{"functionName":"Mime.define","ranges":[{"startOffset":1250,"endOffset":2264,"count":3},{"startOffset":1305,"endOffset":2262,"count":957},{"startOffset":1478,"endOffset":2065,"count":1214},{"startOffset":1652,"endOffset":1679,"count":38},{"startOffset":1679,"endOffset":1698,"count":1176},{"startOffset":1698,"endOffset":1721,"count":1173},{"startOffset":1723,"endOffset":2027,"count":0},{"startOffset":2027,"endOffset":2065,"count":1176},{"startOffset":2119,"endOffset":2145,"count":956},{"startOffset":2230,"endOffset":2235,"count":924},{"startOffset":2236,"endOffset":2251,"count":33}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1346,"endOffset":1395,"count":1214}],"isBlockCoverage":true},{"functionName":"Mime.getType","ranges":[{"startOffset":2341,"endOffset":2641,"count":2},{"startOffset":2631,"endOffset":2638,"count":0}],"isBlockCoverage":true},{"functionName":"Mime.getExtension","ranges":[{"startOffset":2735,"endOffset":2866,"count":0}],"isBlockCoverage":false}]},{"scriptId":"378","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/node_modules/mime/types/standard.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9530,"count":1}],"isBlockCoverage":true}]},{"scriptId":"379","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/node_modules/mime/types/other.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25894,"count":1}],"isBlockCoverage":true}]},{"scriptId":"380","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/form-data/lib/form_data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13713,"count":1}],"isBlockCoverage":true},{"functionName":"FormData","ranges":[{"startOffset":728,"endOffset":1047,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.append","ranges":[{"startOffset":1168,"endOffset":1999,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._trackLength","ranges":[{"startOffset":2036,"endOffset":3077,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._lengthRetriever","ranges":[{"startOffset":3118,"endOffset":4649,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._multiPartHeader","ranges":[{"startOffset":4690,"endOffset":6038,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._getContentDisposition","ranges":[{"startOffset":6085,"endOffset":6878,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._getContentType","ranges":[{"startOffset":6918,"endOffset":7832,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._multiPartFooter","ranges":[{"startOffset":7873,"endOffset":8100,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._lastBoundary","ranges":[{"startOffset":8138,"endOffset":8217,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.getHeaders","ranges":[{"startOffset":8252,"endOffset":8567,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.setBoundary","ranges":[{"startOffset":8603,"endOffset":8654,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.getBoundary","ranges":[{"startOffset":8690,"endOffset":8789,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.getBuffer","ranges":[{"startOffset":8823,"endOffset":9735,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._generateBoundary","ranges":[{"startOffset":9777,"endOffset":10093,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.getLengthSync","ranges":[{"startOffset":10277,"endOffset":10942,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.hasKnownLength","ranges":[{"startOffset":11145,"endOffset":11285,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.getLength","ranges":[{"startOffset":11319,"endOffset":11843,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.submit","ranges":[{"startOffset":11874,"endOffset":13491,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._error","ranges":[{"startOffset":13522,"endOffset":13633,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.toString","ranges":[{"startOffset":13666,"endOffset":13711,"count":0}],"isBlockCoverage":false}]},{"scriptId":"381","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/combined-stream/lib/combined_stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4687,"count":1}],"isBlockCoverage":true},{"functionName":"CombinedStream","ranges":[{"startOffset":148,"endOffset":449,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.create","ranges":[{"startOffset":514,"endOffset":706,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.isStreamLike","ranges":[{"startOffset":739,"endOffset":943,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.append","ranges":[{"startOffset":980,"endOffset":1491,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.pipe","ranges":[{"startOffset":1526,"endOffset":1636,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._getNext","ranges":[{"startOffset":1675,"endOffset":1992,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._realGetNext","ranges":[{"startOffset":2035,"endOffset":2527,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._pipeNext","ranges":[{"startOffset":2567,"endOffset":2864,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._handleErrors","ranges":[{"startOffset":2908,"endOffset":3016,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.write","ranges":[{"startOffset":3052,"endOffset":3097,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.pause","ranges":[{"startOffset":3133,"endOffset":3341,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.resume","ranges":[{"startOffset":3378,"endOffset":3648,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.end","ranges":[{"startOffset":3682,"endOffset":3733,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.destroy","ranges":[{"startOffset":3771,"endOffset":3824,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._reset","ranges":[{"startOffset":3861,"endOffset":3952,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._checkDataSize","ranges":[{"startOffset":3997,"endOffset":4229,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._updateDataSize","ranges":[{"startOffset":4275,"endOffset":4583,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._emitError","ranges":[{"startOffset":4624,"endOffset":4685,"count":0}],"isBlockCoverage":false}]},{"scriptId":"382","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/delayed-stream/lib/delayed_stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2319,"count":1}],"isBlockCoverage":true},{"functionName":"DelayedStream","ranges":[{"startOffset":100,"endOffset":325,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.create","ranges":[{"startOffset":388,"endOffset":869,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":982,"endOffset":1031,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.setEncoding","ranges":[{"startOffset":1075,"endOffset":1153,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.resume","ranges":[{"startOffset":1189,"endOffset":1277,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.pause","ranges":[{"startOffset":1312,"endOffset":1349,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.release","ranges":[{"startOffset":1386,"endOffset":1553,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.pipe","ranges":[{"startOffset":1587,"endOffset":1686,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream._handleEmit","ranges":[{"startOffset":1727,"endOffset":1964,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream._checkIfMaxDataSizeExceeded","ranges":[{"startOffset":2021,"endOffset":2317,"count":0}],"isBlockCoverage":false}]},{"scriptId":"383","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mime-types/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3663,"count":1}],"isBlockCoverage":true},{"functionName":"charset","ranges":[{"startOffset":841,"endOffset":1232,"count":0}],"isBlockCoverage":false},{"functionName":"contentType","ranges":[{"startOffset":1366,"endOffset":1822,"count":0}],"isBlockCoverage":false},{"functionName":"extension","ranges":[{"startOffset":1934,"endOffset":2257,"count":0}],"isBlockCoverage":false},{"functionName":"lookup","ranges":[{"startOffset":2374,"endOffset":2678,"count":0}],"isBlockCoverage":false},{"functionName":"populateMaps","ranges":[{"startOffset":2744,"endOffset":3662,"count":1}],"isBlockCoverage":true},{"functionName":"forEachMimeType","ranges":[{"startOffset":2912,"endOffset":3659,"count":2279},{"startOffset":3016,"endOffset":3031,"count":965},{"startOffset":3033,"endOffset":3053,"count":1314},{"startOffset":3053,"endOffset":3177,"count":965},{"startOffset":3177,"endOffset":3655,"count":1220},{"startOffset":3238,"endOffset":3583,"count":40},{"startOffset":3417,"endOffset":3511,"count":34},{"startOffset":3441,"endOffset":3510,"count":19},{"startOffset":3457,"endOffset":3509,"count":11},{"startOffset":3513,"endOffset":3575,"count":23},{"startOffset":3583,"endOffset":3655,"count":1197}],"isBlockCoverage":true}]},{"scriptId":"384","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mime-db/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":189,"count":1}],"isBlockCoverage":true}]},{"scriptId":"385","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/asynckit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":156,"count":1}],"isBlockCoverage":true}]},{"scriptId":"386","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/asynckit/parallel.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1017,"count":1}],"isBlockCoverage":true},{"functionName":"parallel","ranges":[{"startOffset":492,"endOffset":1016,"count":0}],"isBlockCoverage":false}]},{"scriptId":"387","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/asynckit/lib/iterate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1794,"count":1}],"isBlockCoverage":true},{"functionName":"iterate","ranges":[{"startOffset":390,"endOffset":1078,"count":0}],"isBlockCoverage":false},{"functionName":"runJob","ranges":[{"startOffset":1455,"endOffset":1793,"count":0}],"isBlockCoverage":false}]},{"scriptId":"388","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/asynckit/lib/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":599,"count":1}],"isBlockCoverage":true},{"functionName":"async","ranges":[{"startOffset":251,"endOffset":598,"count":0}],"isBlockCoverage":false}]},{"scriptId":"389","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/asynckit/lib/defer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":441,"count":1}],"isBlockCoverage":true},{"functionName":"defer","ranges":[{"startOffset":140,"endOffset":440,"count":0}],"isBlockCoverage":false}]},{"scriptId":"390","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/asynckit/lib/abort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":497,"count":1}],"isBlockCoverage":true},{"functionName":"abort","ranges":[{"startOffset":122,"endOffset":246,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":400,"endOffset":496,"count":0}],"isBlockCoverage":false}]},{"scriptId":"391","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/asynckit/lib/state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":941,"count":1}],"isBlockCoverage":true},{"functionName":"state","ranges":[{"startOffset":341,"endOffset":940,"count":0}],"isBlockCoverage":false}]},{"scriptId":"392","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/asynckit/lib/terminator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":533,"count":1}],"isBlockCoverage":true},{"functionName":"terminator","ranges":[{"startOffset":270,"endOffset":532,"count":0}],"isBlockCoverage":false}]},{"scriptId":"393","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/asynckit/serial.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":501,"count":1}],"isBlockCoverage":true},{"functionName":"serial","ranges":[{"startOffset":399,"endOffset":500,"count":0}],"isBlockCoverage":false}]},{"scriptId":"394","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/asynckit/serialOrdered.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1751,"count":1}],"isBlockCoverage":true},{"functionName":"serialOrdered","ranges":[{"startOffset":657,"endOffset":1203,"count":0}],"isBlockCoverage":false},{"functionName":"ascending","ranges":[{"startOffset":1427,"endOffset":1492,"count":0}],"isBlockCoverage":false},{"functionName":"descending","ranges":[{"startOffset":1690,"endOffset":1750,"count":0}],"isBlockCoverage":false}]},{"scriptId":"395","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/form-data/lib/populate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":177,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":45,"endOffset":175,"count":0}],"isBlockCoverage":false}]},{"scriptId":"396","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/formidable/dist/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":45443,"count":1}],"isBlockCoverage":true},{"functionName":"PersistentFile","ranges":[{"startOffset":592,"endOffset":1023,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":1027,"endOffset":1184,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":1188,"endOffset":1553,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1557,"endOffset":1683,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":1687,"endOffset":2019,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":2023,"endOffset":2184,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":2188,"endOffset":2352,"count":0}],"isBlockCoverage":false},{"functionName":"VolatileFile","ranges":[{"startOffset":2456,"endOffset":2933,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":2937,"endOffset":3091,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":3095,"endOffset":3143,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":3147,"endOffset":3445,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":3449,"endOffset":3518,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":3522,"endOffset":3843,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":3847,"endOffset":4008,"count":0}],"isBlockCoverage":false},{"functionName":"OctetStreamParser","ranges":[{"startOffset":4072,"endOffset":4157,"count":0}],"isBlockCoverage":false},{"functionName":"plugin$3","ranges":[{"startOffset":4325,"endOffset":4696,"count":0}],"isBlockCoverage":false},{"functionName":"init$2","ranges":[{"startOffset":4941,"endOffset":6325,"count":0}],"isBlockCoverage":false},{"functionName":"QuerystringParser","ranges":[{"startOffset":6522,"endOffset":6684,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":6688,"endOffset":6837,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":6841,"endOffset":7057,"count":0}],"isBlockCoverage":false},{"functionName":"plugin$2","ranges":[{"startOffset":7228,"endOffset":7585,"count":0}],"isBlockCoverage":false},{"functionName":"init$1","ranges":[{"startOffset":7829,"endOffset":8156,"count":0}],"isBlockCoverage":false},{"functionName":"FormidableError","ranges":[{"startOffset":8815,"endOffset":8951,"count":0}],"isBlockCoverage":false},{"functionName":"lower","ranges":[{"startOffset":10482,"endOffset":10522,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10571,"endOffset":10629,"count":13}],"isBlockCoverage":true},{"functionName":"MultipartParser","ranges":[{"startOffset":10689,"endOffset":11003,"count":0}],"isBlockCoverage":false},{"functionName":"_endUnexpected","ranges":[{"startOffset":11007,"endOffset":11182,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":11186,"endOffset":11569,"count":0}],"isBlockCoverage":false},{"functionName":"initWithBoundary","ranges":[{"startOffset":11573,"endOffset":11881,"count":0}],"isBlockCoverage":false},{"functionName":"_handleCallback","ranges":[{"startOffset":11926,"endOffset":12088,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":12137,"endOffset":19058,"count":0}],"isBlockCoverage":false},{"functionName":"explain","ranges":[{"startOffset":19062,"endOffset":19144,"count":0}],"isBlockCoverage":false},{"functionName":"MultipartParser.stateToString","ranges":[{"startOffset":19226,"endOffset":19437,"count":0}],"isBlockCoverage":false},{"functionName":"plugin$1","ranges":[{"startOffset":19668,"endOffset":20560,"count":0}],"isBlockCoverage":false},{"functionName":"createInitMultipart","ranges":[{"startOffset":20805,"endOffset":25376,"count":0}],"isBlockCoverage":false},{"functionName":"JSONParser","ranges":[{"startOffset":25473,"endOffset":25608,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":25612,"endOffset":25748,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":25752,"endOffset":25961,"count":0}],"isBlockCoverage":false},{"functionName":"plugin","ranges":[{"startOffset":26119,"endOffset":26467,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":26711,"endOffset":26988,"count":0}],"isBlockCoverage":false},{"functionName":"DummyParser","ranges":[{"startOffset":27086,"endOffset":27223,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":27227,"endOffset":27336,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":27926,"endOffset":27962,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwnProp","ranges":[{"startOffset":27991,"endOffset":28081,"count":0}],"isBlockCoverage":false},{"functionName":"decorateForceSequential","ranges":[{"startOffset":28116,"endOffset":28784,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28287,"endOffset":28781,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28851,"endOffset":28985,"count":0}],"isBlockCoverage":false},{"functionName":"invalidExtensionChar","ranges":[{"startOffset":29018,"endOffset":29201,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingForm","ranges":[{"startOffset":29260,"endOffset":30512,"count":0}],"isBlockCoverage":false},{"functionName":"use","ranges":[{"startOffset":30516,"endOffset":30755,"count":0}],"isBlockCoverage":false},{"functionName":"pause","ranges":[{"startOffset":30759,"endOffset":31012,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":31016,"endOffset":31272,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":31326,"endOffset":33302,"count":0}],"isBlockCoverage":false},{"functionName":"writeHeaders","ranges":[{"startOffset":33306,"endOffset":33718,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":33722,"endOffset":34114,"count":0}],"isBlockCoverage":false},{"functionName":"onPart","ranges":[{"startOffset":34118,"endOffset":34221,"count":0}],"isBlockCoverage":false},{"functionName":"_handlePart","ranges":[{"startOffset":34225,"endOffset":38147,"count":0}],"isBlockCoverage":false},{"functionName":"_parseContentType","ranges":[{"startOffset":38196,"endOffset":39387,"count":0}],"isBlockCoverage":false},{"functionName":"_error","ranges":[{"startOffset":39391,"endOffset":39632,"count":0}],"isBlockCoverage":false},{"functionName":"_parseContentLength","ranges":[{"startOffset":39636,"endOffset":40023,"count":0}],"isBlockCoverage":false},{"functionName":"_newParser","ranges":[{"startOffset":40027,"endOffset":40093,"count":0}],"isBlockCoverage":false},{"functionName":"_newFile","ranges":[{"startOffset":40097,"endOffset":40929,"count":0}],"isBlockCoverage":false},{"functionName":"_getFileName","ranges":[{"startOffset":40933,"endOffset":41489,"count":0}],"isBlockCoverage":false},{"functionName":"_getExtension","ranges":[{"startOffset":41611,"endOffset":42259,"count":0}],"isBlockCoverage":false},{"functionName":"_joinDirectoryName","ranges":[{"startOffset":42263,"endOffset":42537,"count":0}],"isBlockCoverage":false},{"functionName":"_setUpRename","ranges":[{"startOffset":42541,"endOffset":43417,"count":0}],"isBlockCoverage":false},{"functionName":"_setUpMaxFields","ranges":[{"startOffset":43421,"endOffset":43861,"count":0}],"isBlockCoverage":false},{"functionName":"_setUpMaxFiles","ranges":[{"startOffset":43865,"endOffset":44297,"count":0}],"isBlockCoverage":false},{"functionName":"_maybeEnd","ranges":[{"startOffset":44301,"endOffset":44436,"count":0}],"isBlockCoverage":false},{"functionName":"formidable","ranges":[{"startOffset":44579,"endOffset":44617,"count":0}],"isBlockCoverage":false}]},{"scriptId":"397","url":"node:fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":76,"count":1}],"isBlockCoverage":false}]},{"scriptId":"398","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/hexoid/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":368,"count":1},{"startOffset":35,"endOffset":84,"count":256}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":103,"endOffset":367,"count":1},{"startOffset":131,"endOffset":136,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":166,"endOffset":364,"count":0}],"isBlockCoverage":false}]},{"scriptId":"399","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/dezalgo/dezalgo.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":368,"count":1}],"isBlockCoverage":true},{"functionName":"dezalgo","ranges":[{"startOffset":93,"endOffset":367,"count":0}],"isBlockCoverage":false}]},{"scriptId":"400","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/asap/asap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1958,"count":1}],"isBlockCoverage":true},{"functionName":"asap","ranges":[{"startOffset":510,"endOffset":749,"count":0}],"isBlockCoverage":false},{"functionName":"RawTask","ranges":[{"startOffset":751,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"RawTask.call","ranges":[{"startOffset":846,"endOffset":1955,"count":0}],"isBlockCoverage":false}]},{"scriptId":"401","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/asap/raw.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4139,"count":1}],"isBlockCoverage":true},{"functionName":"rawAsap","ranges":[{"startOffset":748,"endOffset":916,"count":0}],"isBlockCoverage":false},{"functionName":"flush","ranges":[{"startOffset":1861,"endOffset":2972,"count":0}],"isBlockCoverage":false},{"functionName":"requestFlush","ranges":[{"startOffset":3011,"endOffset":4138,"count":0}],"isBlockCoverage":false}]},{"scriptId":"402","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/cookiejar/cookiejar.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10218,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25,"endOffset":10213,"count":1}],"isBlockCoverage":true},{"functionName":"CookieAccessInfo","ranges":[{"startOffset":62,"endOffset":431,"count":0}],"isBlockCoverage":false},{"functionName":"Cookie","ranges":[{"startOffset":549,"endOffset":1344,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1407,"endOffset":1961,"count":0}],"isBlockCoverage":false},{"functionName":"toValueString","ranges":[{"startOffset":2001,"endOffset":2078,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2176,"endOffset":4569,"count":0}],"isBlockCoverage":false},{"functionName":"matches","ranges":[{"startOffset":4603,"endOffset":4938,"count":0}],"isBlockCoverage":false},{"functionName":"collidesWith","ranges":[{"startOffset":4977,"endOffset":6046,"count":0}],"isBlockCoverage":false},{"functionName":"CookieJar","ranges":[{"startOffset":6053,"endOffset":9403,"count":0}],"isBlockCoverage":false},{"functionName":"setCookies","ranges":[{"startOffset":9587,"endOffset":10210,"count":0}],"isBlockCoverage":false}]},{"scriptId":"403","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/fast-safe-stringify/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5794,"count":1}],"isBlockCoverage":true},{"functionName":"defaultOptions","ranges":[{"startOffset":263,"endOffset":389,"count":2}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":412,"endOffset":1141,"count":2},{"startOffset":701,"endOffset":785,"count":0},{"startOffset":790,"endOffset":902,"count":0},{"startOffset":942,"endOffset":1122,"count":0}],"isBlockCoverage":true},{"functionName":"setReplace","ranges":[{"startOffset":1143,"endOffset":1596,"count":0}],"isBlockCoverage":false},{"functionName":"decirc","ranges":[{"startOffset":1598,"endOffset":2696,"count":4},{"startOffset":1718,"endOffset":1733,"count":2},{"startOffset":1735,"endOffset":2694,"count":2},{"startOffset":1776,"endOffset":1894,"count":0},{"startOffset":1995,"endOffset":2068,"count":0},{"startOffset":2177,"endOffset":2250,"count":0},{"startOffset":2377,"endOffset":2490,"count":0}],"isBlockCoverage":true},{"functionName":"compareFunction","ranges":[{"startOffset":2718,"endOffset":2829,"count":0}],"isBlockCoverage":false},{"functionName":"deterministicStringify","ranges":[{"startOffset":2831,"endOffset":3655,"count":0}],"isBlockCoverage":false},{"functionName":"deterministicDecirc","ranges":[{"startOffset":3657,"endOffset":5178,"count":0}],"isBlockCoverage":false},{"functionName":"replaceGetterValues","ranges":[{"startOffset":5279,"endOffset":5793,"count":0}],"isBlockCoverage":false}]},{"scriptId":"404","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8422,"count":1},{"startOffset":1737,"endOffset":1947,"count":0}],"isBlockCoverage":true},{"functionName":"exports.type","ranges":[{"startOffset":146,"endOffset":187,"count":10}],"isBlockCoverage":true},{"functionName":"exports.params","ranges":[{"startOffset":313,"endOffset":564,"count":5},{"startOffset":391,"endOffset":545,"count":10},{"startOffset":521,"endOffset":541,"count":5}],"isBlockCoverage":true},{"functionName":"exports.parseLinks","ranges":[{"startOffset":688,"endOffset":951,"count":0}],"isBlockCoverage":false},{"functionName":"exports.cleanHeader","ranges":[{"startOffset":1104,"endOffset":1379,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isObject","ranges":[{"startOffset":1507,"endOffset":1576,"count":6}],"isBlockCoverage":true},{"functionName":"exports.hasOwn","ranges":[{"startOffset":1740,"endOffset":1947,"count":0}],"isBlockCoverage":false},{"functionName":"exports.mixin","ranges":[{"startOffset":1965,"endOffset":2100,"count":2},{"startOffset":2015,"endOffset":2098,"count":33}],"isBlockCoverage":true}]},{"scriptId":"405","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/lib/request-base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":64288,"count":1}],"isBlockCoverage":true},{"functionName":"RequestBase","ranges":[{"startOffset":272,"endOffset":297,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.clearTimeout","ranges":[{"startOffset":424,"endOffset":663,"count":10}],"isBlockCoverage":true},{"functionName":"RequestBase.parse","ranges":[{"startOffset":863,"endOffset":916,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.responseType","ranges":[{"startOffset":1330,"endOffset":1395,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.serialize","ranges":[{"startOffset":1621,"endOffset":1678,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.timeout","ranges":[{"startOffset":2316,"endOffset":2966,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.retry","ranges":[{"startOffset":3236,"endOffset":3485,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase._shouldRetry","ranges":[{"startOffset":4640,"endOffset":5576,"count":5},{"startOffset":4688,"endOffset":4726,"count":0},{"startOffset":4751,"endOffset":5294,"count":0},{"startOffset":5295,"endOffset":5326,"count":0},{"startOffset":5328,"endOffset":5575,"count":0}],"isBlockCoverage":true},{"functionName":"RequestBase._retry","ranges":[{"startOffset":5689,"endOffset":5913,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.then","ranges":[{"startOffset":6056,"endOffset":7009,"count":5},{"startOffset":6167,"endOffset":6324,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6367,"endOffset":6945,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6413,"endOffset":6842,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6860,"endOffset":6937,"count":5},{"startOffset":6897,"endOffset":6911,"count":0}],"isBlockCoverage":true},{"functionName":"RequestBase.catch","ranges":[{"startOffset":7041,"endOffset":7105,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.use","ranges":[{"startOffset":7168,"endOffset":7212,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.ok","ranges":[{"startOffset":7241,"endOffset":7386,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase._isResponseOK","ranges":[{"startOffset":7426,"endOffset":7592,"count":5},{"startOffset":7455,"endOffset":7478,"count":0},{"startOffset":7503,"endOffset":7542,"count":0}],"isBlockCoverage":true},{"functionName":"RequestBase.get","ranges":[{"startOffset":7747,"endOffset":7811,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.set","ranges":[{"startOffset":8652,"endOffset":8909,"count":2},{"startOffset":8701,"endOffset":8817,"count":0}],"isBlockCoverage":true},{"functionName":"RequestBase.unset","ranges":[{"startOffset":9132,"endOffset":9240,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.field","ranges":[{"startOffset":9803,"endOffset":10821,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.abort","ranges":[{"startOffset":10960,"endOffset":11200,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase._auth","ranges":[{"startOffset":11232,"endOffset":11693,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.withCredentials","ranges":[{"startOffset":12094,"endOffset":12252,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.redirects","ranges":[{"startOffset":12448,"endOffset":12505,"count":10}],"isBlockCoverage":true},{"functionName":"RequestBase.maxResponseSize","ranges":[{"startOffset":12727,"endOffset":12867,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.toJSON","ranges":[{"startOffset":13172,"endOffset":13295,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.send","ranges":[{"startOffset":14309,"endOffset":15757,"count":2},{"startOffset":14428,"endOffset":14566,"count":0},{"startOffset":14630,"endOffset":14660,"count":0},{"startOffset":14725,"endOffset":14841,"count":0},{"startOffset":14966,"endOffset":14986,"count":0},{"startOffset":14988,"endOffset":15045,"count":0},{"startOffset":15113,"endOffset":15623,"count":0},{"startOffset":15664,"endOffset":15686,"count":0}],"isBlockCoverage":true},{"functionName":"RequestBase.sortQuery","ranges":[{"startOffset":16374,"endOffset":16536,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase._finalizeQueryString","ranges":[{"startOffset":16655,"endOffset":17207,"count":5},{"startOffset":16721,"endOffset":16788,"count":0},{"startOffset":16863,"endOffset":17205,"count":0}],"isBlockCoverage":true},{"functionName":"RequestBase._appendQueryString","ranges":[{"startOffset":17282,"endOffset":17322,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase._timeoutError","ranges":[{"startOffset":17430,"endOffset":17742,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase._setTimeouts","ranges":[{"startOffset":17781,"endOffset":18258,"count":5},{"startOffset":17851,"endOffset":17866,"count":0},{"startOffset":17868,"endOffset":17998,"count":0},{"startOffset":18050,"endOffset":18080,"count":0},{"startOffset":18082,"endOffset":18256,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17899,"endOffset":17977,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18128,"endOffset":18227,"count":0}],"isBlockCoverage":false}]},{"scriptId":"406","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/lib/node/http2wrapper.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18469,"count":1}],"isBlockCoverage":true},{"functionName":"setProtocol","ranges":[{"startOffset":324,"endOffset":448,"count":0}],"isBlockCoverage":false},{"functionName":"Request","ranges":[{"startOffset":482,"endOffset":1400,"count":0}],"isBlockCoverage":false},{"functionName":"createUnixConnection","ranges":[{"startOffset":1403,"endOffset":1827,"count":0}],"isBlockCoverage":false},{"functionName":"setNoDelay","ranges":[{"startOffset":1830,"endOffset":2057,"count":0}],"isBlockCoverage":false},{"functionName":"getFrame","ranges":[{"startOffset":2060,"endOffset":2884,"count":0}],"isBlockCoverage":false},{"functionName":"mapToHttpHeader","ranges":[{"startOffset":2887,"endOffset":3316,"count":0}],"isBlockCoverage":false},{"functionName":"mapToHttp2Header","ranges":[{"startOffset":3319,"endOffset":3811,"count":0}],"isBlockCoverage":false},{"functionName":"setHeader","ranges":[{"startOffset":3814,"endOffset":3889,"count":0}],"isBlockCoverage":false},{"functionName":"getHeader","ranges":[{"startOffset":3892,"endOffset":3959,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":3962,"endOffset":4064,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":4067,"endOffset":4169,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":4172,"endOffset":4243,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":4246,"endOffset":4359,"count":0}],"isBlockCoverage":false}]},{"scriptId":"407","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/lib/node/unzip.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6506,"count":1}],"isBlockCoverage":true},{"functionName":"exports.unzip","ranges":[{"startOffset":329,"endOffset":1560,"count":0}],"isBlockCoverage":false}]},{"scriptId":"408","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/lib/node/response.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11626,"count":1}],"isBlockCoverage":true},{"functionName":"Response","ranges":[{"startOffset":521,"endOffset":1165,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1314,"endOffset":1426,"count":7},{"startOffset":1371,"endOffset":1421,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":1430,"endOffset":1470,"count":5}],"isBlockCoverage":true},{"functionName":"Response.destroy","ranges":[{"startOffset":1678,"endOffset":1725,"count":0}],"isBlockCoverage":false},{"functionName":"Response.pause","ranges":[{"startOffset":1774,"endOffset":1809,"count":0}],"isBlockCoverage":false},{"functionName":"Response.resume","ranges":[{"startOffset":1860,"endOffset":1896,"count":0}],"isBlockCoverage":false},{"functionName":"Response.toError","ranges":[{"startOffset":2028,"endOffset":2352,"count":1}],"isBlockCoverage":true},{"functionName":"Response.setStatusProperties","ranges":[{"startOffset":2395,"endOffset":2537,"count":0}],"isBlockCoverage":false},{"functionName":"Response.toJSON","ranges":[{"startOffset":2627,"endOffset":2760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"409","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/lib/response-base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10004,"count":1}],"isBlockCoverage":true},{"functionName":"ResponseBase","ranges":[{"startOffset":213,"endOffset":239,"count":0}],"isBlockCoverage":false},{"functionName":"ResponseBase.get","ranges":[{"startOffset":381,"endOffset":444,"count":0}],"isBlockCoverage":false},{"functionName":"ResponseBase._setHeaderProperties","ranges":[{"startOffset":745,"endOffset":1239,"count":5},{"startOffset":865,"endOffset":870,"count":0},{"startOffset":1144,"endOffset":1201,"count":0},{"startOffset":1206,"endOffset":1237,"count":0}],"isBlockCoverage":true},{"functionName":"ResponseBase._setStatusProperties","ranges":[{"startOffset":1894,"endOffset":2630,"count":5},{"startOffset":2248,"endOffset":2261,"count":4},{"startOffset":2262,"endOffset":2278,"count":1},{"startOffset":2279,"endOffset":2286,"count":4}],"isBlockCoverage":true}]},{"scriptId":"410","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/lib/node/agent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10181,"count":1},{"startOffset":1674,"endOffset":2143,"count":34}],"isBlockCoverage":true},{"functionName":"Agent","ranges":[{"startOffset":352,"endOffset":794,"count":0}],"isBlockCoverage":false},{"functionName":"_saveCookies","ranges":[{"startOffset":949,"endOffset":1261,"count":0}],"isBlockCoverage":false},{"functionName":"_attachCookies","ranges":[{"startOffset":1381,"endOffset":1643,"count":0}],"isBlockCoverage":false},{"functionName":"Agent.<computed>","ranges":[{"startOffset":1739,"endOffset":2140,"count":0}],"isBlockCoverage":false},{"functionName":"apply","ranges":[{"startOffset":2355,"endOffset":2439,"count":0}],"isBlockCoverage":false}]},{"scriptId":"411","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/lib/agent-base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3363,"count":1},{"startOffset":449,"endOffset":758,"count":22}],"isBlockCoverage":true},{"functionName":"Agent","ranges":[{"startOffset":263,"endOffset":307,"count":0}],"isBlockCoverage":false},{"functionName":"_setDefaults","ranges":[{"startOffset":310,"endOffset":419,"count":0}],"isBlockCoverage":false},{"functionName":"Agent.<computed>","ranges":[{"startOffset":529,"endOffset":755,"count":0}],"isBlockCoverage":false}]},{"scriptId":"412","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/lib/node/parsers/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1616,"count":1}],"isBlockCoverage":true}]},{"scriptId":"413","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/lib/node/parsers/urlencoded.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1804,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":91,"endOffset":326,"count":0}],"isBlockCoverage":false}]},{"scriptId":"414","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/lib/node/parsers/json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2652,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":594,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":114,"endOffset":151,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":170,"endOffset":590,"count":5},{"startOffset":270,"endOffset":547,"count":0}],"isBlockCoverage":true}]},{"scriptId":"415","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/lib/node/parsers/text.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1088,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":170,"count":0}],"isBlockCoverage":false}]},{"scriptId":"416","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/lib/node/parsers/image.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1295,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":225,"count":0}],"isBlockCoverage":false}]},{"scriptId":"417","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/supertest/lib/agent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1965,"count":1},{"startOffset":247,"endOffset":294,"count":0}],"isBlockCoverage":true},{"functionName":"TestAgent","ranges":[{"startOffset":450,"endOffset":1049,"count":0}],"isBlockCoverage":false},{"functionName":"TestAgent.host","ranges":[{"startOffset":1204,"endOffset":1258,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1307,"endOffset":1850,"count":34}],"isBlockCoverage":true},{"functionName":"TestAgent.<computed>","ranges":[{"startOffset":1358,"endOffset":1847,"count":0}],"isBlockCoverage":false}]},{"scriptId":"418","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/nodemailer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4349,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports.createTransport","ranges":[{"startOffset":866,"endOffset":2195,"count":1},{"startOffset":1129,"endOffset":1275,"count":0},{"startOffset":1341,"endOffset":1354,"count":0},{"startOffset":1375,"endOffset":1514,"count":0},{"startOffset":1594,"endOffset":1654,"count":0},{"startOffset":1682,"endOffset":1751,"count":0},{"startOffset":1786,"endOffset":1853,"count":0},{"startOffset":1886,"endOffset":1951,"count":0},{"startOffset":1974,"endOffset":2038,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports.createTestAccount","ranges":[{"startOffset":2233,"endOffset":3831,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.getTestMessageUrl","ranges":[{"startOffset":3869,"endOffset":4347,"count":0}],"isBlockCoverage":false}]},{"scriptId":"419","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/mailer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14694,"count":1}],"isBlockCoverage":true},{"functionName":"Mail","ranges":[{"startOffset":743,"endOffset":3752,"count":1},{"startOffset":838,"endOffset":843,"count":0},{"startOffset":1185,"endOffset":1214,"count":0},{"startOffset":3643,"endOffset":3684,"count":0},{"startOffset":3686,"endOffset":3746,"count":0}],"isBlockCoverage":true},{"functionName":"Mail._defaultPlugins.compile","ranges":[{"startOffset":942,"endOffset":987,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1789,"endOffset":2043,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2122,"endOffset":2429,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2528,"endOffset":2600,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2754,"endOffset":3576,"count":3}],"isBlockCoverage":true},{"functionName":"<computed>","ranges":[{"startOffset":2793,"endOffset":3565,"count":0}],"isBlockCoverage":false},{"functionName":"use","ranges":[{"startOffset":3758,"endOffset":4025,"count":0}],"isBlockCoverage":false},{"functionName":"sendMail","ranges":[{"startOffset":4250,"endOffset":7473,"count":0}],"isBlockCoverage":false},{"functionName":"getVersionString","ranges":[{"startOffset":7479,"endOffset":7666,"count":1}],"isBlockCoverage":true},{"functionName":"_processPlugins","ranges":[{"startOffset":7672,"endOffset":9167,"count":0}],"isBlockCoverage":false},{"functionName":"setupProxy","ranges":[{"startOffset":9305,"endOffset":13216,"count":0}],"isBlockCoverage":false},{"functionName":"_convertDataImages","ranges":[{"startOffset":13222,"endOffset":14539,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":14545,"endOffset":14610,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14616,"endOffset":14667,"count":0}],"isBlockCoverage":false}]},{"scriptId":"420","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/shared/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20134,"count":1},{"startOffset":361,"endOffset":405,"count":0}],"isBlockCoverage":true},{"functionName":"isFamilySupported","ranges":[{"startOffset":488,"endOffset":1224,"count":0}],"isBlockCoverage":false},{"functionName":"resolver","ranges":[{"startOffset":1244,"endOffset":2121,"count":0}],"isBlockCoverage":false},{"functionName":"formatDNSValue","ranges":[{"startOffset":2204,"endOffset":2700,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.resolveHostname","ranges":[{"startOffset":2736,"endOffset":8208,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.parseConnectionUrl","ranges":[{"startOffset":8398,"endOffset":10250,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports._logFunc","ranges":[{"startOffset":10279,"endOffset":10670,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.getLogger","ranges":[{"startOffset":10950,"endOffset":11646,"count":3},{"startOffset":10997,"endOffset":11002,"count":0},{"startOffset":11275,"endOffset":11645,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11179,"endOffset":11242,"count":18}],"isBlockCoverage":true},{"functionName":"response.<computed>","ranges":[{"startOffset":11220,"endOffset":11231,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11451,"endOffset":11620,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.callbackPromise","ranges":[{"startOffset":11930,"endOffset":12149,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.parseDataURI","ranges":[{"startOffset":12182,"endOffset":13514,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.resolveContent","ranges":[{"startOffset":14184,"endOffset":16269,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.assign","ranges":[{"startOffset":16363,"endOffset":17203,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16495,"endOffset":17180,"count":3},{"startOffset":16534,"endOffset":16539,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16549,"endOffset":17172,"count":5},{"startOffset":16604,"endOffset":16618,"count":1},{"startOffset":16619,"endOffset":16653,"count":1},{"startOffset":16655,"endOffset":17098,"count":1},{"startOffset":17098,"endOffset":17162,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16990,"endOffset":17082,"count":2}],"isBlockCoverage":true},{"functionName":"module.exports.encodeXText","ranges":[{"startOffset":17235,"endOffset":17757,"count":0}],"isBlockCoverage":false},{"functionName":"resolveStream","ranges":[{"startOffset":17919,"endOffset":18674,"count":0}],"isBlockCoverage":false},{"functionName":"createDefaultLogger","ranges":[{"startOffset":18788,"endOffset":20133,"count":0}],"isBlockCoverage":false}]},{"scriptId":"421","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/fetch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8176,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":350,"endOffset":411,"count":0}],"isBlockCoverage":false},{"functionName":"nmfetch","ranges":[{"startOffset":449,"endOffset":8175,"count":0}],"isBlockCoverage":false}]},{"scriptId":"422","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/fetch/cookies.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8070,"count":1}],"isBlockCoverage":true},{"functionName":"Cookies","ranges":[{"startOffset":287,"endOffset":380,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":569,"endOffset":1710,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1918,"endOffset":2050,"count":0}],"isBlockCoverage":false},{"functionName":"list","ranges":[{"startOffset":2235,"endOffset":2666,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2862,"endOffset":4819,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":5066,"endOffset":5818,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":5984,"endOffset":6797,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":7033,"endOffset":7188,"count":0}],"isBlockCoverage":false},{"functionName":"isExpired","ranges":[{"startOffset":7372,"endOffset":7478,"count":0}],"isBlockCoverage":false},{"functionName":"getPath","ranges":[{"startOffset":7643,"endOffset":8040,"count":0}],"isBlockCoverage":false}]},{"scriptId":"423","url":"node:dns","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9231,"count":1}],"isBlockCoverage":false},{"functionName":"onlookup","ranges":[{"startOffset":2756,"endOffset":3112,"count":0}],"isBlockCoverage":false},{"functionName":"onlookupall","ranges":[{"startOffset":3118,"endOffset":3648,"count":0}],"isBlockCoverage":false},{"functionName":"lookup","ranges":[{"startOffset":3758,"endOffset":6458,"count":1},{"startOffset":4033,"endOffset":4081,"count":0},{"startOffset":4120,"endOffset":4250,"count":0},{"startOffset":4314,"endOffset":4480,"count":0},{"startOffset":4731,"endOffset":5054,"count":0},{"startOffset":5209,"endOffset":5315,"count":0},{"startOffset":5341,"endOffset":5557,"count":0},{"startOffset":5623,"endOffset":5847,"count":0},{"startOffset":6009,"endOffset":6019,"count":0},{"startOffset":6120,"endOffset":6223,"count":0},{"startOffset":6251,"endOffset":6440,"count":0}],"isBlockCoverage":true},{"functionName":"onlookupservice","ranges":[{"startOffset":6610,"endOffset":6968,"count":0}],"isBlockCoverage":false},{"functionName":"lookupService","ranges":[{"startOffset":6974,"endOffset":7805,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolverSetServers","ranges":[{"startOffset":7964,"endOffset":8269,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9084,"endOffset":9217,"count":0}],"isBlockCoverage":false}]},{"scriptId":"424","url":"node:internal/dns/callback_resolver","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2899,"count":1}],"isBlockCoverage":false},{"functionName":"onresolve","ranges":[{"startOffset":661,"endOffset":1132,"count":0}],"isBlockCoverage":false},{"functionName":"resolver","ranges":[{"startOffset":1136,"endOffset":2102,"count":13}],"isBlockCoverage":true},{"functionName":"query","ranges":[{"startOffset":1172,"endOffset":2001,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":2371,"endOffset":2858,"count":0}],"isBlockCoverage":false}]},{"scriptId":"425","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/mime-funcs/mime-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":89978,"count":1}],"isBlockCoverage":true},{"functionName":"detectMimeType","ranges":[{"startOffset":88822,"endOffset":89312,"count":0}],"isBlockCoverage":false},{"functionName":"detectExtension","ranges":[{"startOffset":89319,"endOffset":89974,"count":0}],"isBlockCoverage":false}]},{"scriptId":"426","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/mail-composer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20382,"count":1}],"isBlockCoverage":true},{"functionName":"MailComposer","ranges":[{"startOffset":359,"endOffset":446,"count":0}],"isBlockCoverage":false},{"functionName":"compile","ranges":[{"startOffset":500,"endOffset":2645,"count":0}],"isBlockCoverage":false},{"functionName":"getAttachments","ranges":[{"startOffset":2936,"endOffset":6784,"count":0}],"isBlockCoverage":false},{"functionName":"getAlternatives","ranges":[{"startOffset":7001,"endOffset":12093,"count":0}],"isBlockCoverage":false},{"functionName":"_createMixed","ranges":[{"startOffset":12406,"endOffset":13908,"count":0}],"isBlockCoverage":false},{"functionName":"_createAlternative","ranges":[{"startOffset":14237,"endOffset":15439,"count":0}],"isBlockCoverage":false},{"functionName":"_createRelated","ranges":[{"startOffset":15714,"endOffset":16826,"count":0}],"isBlockCoverage":false},{"functionName":"_createContentNode","ranges":[{"startOffset":17088,"endOffset":19601,"count":0}],"isBlockCoverage":false},{"functionName":"_processDataUrl","ranges":[{"startOffset":19767,"endOffset":20347,"count":0}],"isBlockCoverage":false}]},{"scriptId":"427","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/mime-node/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":44831,"count":1}],"isBlockCoverage":true},{"functionName":"MimeNode","ranges":[{"startOffset":1561,"endOffset":5340,"count":0}],"isBlockCoverage":false},{"functionName":"createChild","ranges":[{"startOffset":5651,"endOffset":5941,"count":0}],"isBlockCoverage":false},{"functionName":"appendChild","ranges":[{"startOffset":6174,"endOffset":6481,"count":0}],"isBlockCoverage":false},{"functionName":"replace","ranges":[{"startOffset":6643,"endOffset":7160,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":7273,"endOffset":7683,"count":0}],"isBlockCoverage":false},{"functionName":"setHeader","ranges":[{"startOffset":8077,"endOffset":9695,"count":0}],"isBlockCoverage":false},{"functionName":"addHeader","ranges":[{"startOffset":10142,"endOffset":11185,"count":0}],"isBlockCoverage":false},{"functionName":"getHeader","ranges":[{"startOffset":11360,"endOffset":11614,"count":0}],"isBlockCoverage":false},{"functionName":"setContent","ranges":[{"startOffset":11947,"endOffset":12845,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":12851,"endOffset":13956,"count":0}],"isBlockCoverage":false},{"functionName":"getTransferEncoding","ranges":[{"startOffset":13962,"endOffset":15405,"count":0}],"isBlockCoverage":false},{"functionName":"buildHeaders","ranges":[{"startOffset":15560,"endOffset":20183,"count":0}],"isBlockCoverage":false},{"functionName":"createReadStream","ranges":[{"startOffset":20418,"endOffset":22041,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":22252,"endOffset":22322,"count":0}],"isBlockCoverage":false},{"functionName":"processFunc","ranges":[{"startOffset":22568,"endOffset":22646,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":22652,"endOffset":28041,"count":0}],"isBlockCoverage":false},{"functionName":"setEnvelope","ranges":[{"startOffset":28235,"endOffset":29242,"count":0}],"isBlockCoverage":false},{"functionName":"getAddresses","ranges":[{"startOffset":29376,"endOffset":29859,"count":0}],"isBlockCoverage":false},{"functionName":"getEnvelope","ranges":[{"startOffset":30094,"endOffset":30913,"count":0}],"isBlockCoverage":false},{"functionName":"messageId","ranges":[{"startOffset":31055,"endOffset":31357,"count":0}],"isBlockCoverage":false},{"functionName":"setRaw","ranges":[{"startOffset":31519,"endOffset":32058,"count":0}],"isBlockCoverage":false},{"functionName":"_getStream","ranges":[{"startOffset":32270,"endOffset":34110,"count":0}],"isBlockCoverage":false},{"functionName":"_parseAddresses","ranges":[{"startOffset":34391,"endOffset":34889,"count":0}],"isBlockCoverage":false},{"functionName":"_normalizeHeaderKey","ranges":[{"startOffset":35094,"endOffset":35576,"count":0}],"isBlockCoverage":false},{"functionName":"_handleContentType","ranges":[{"startOffset":35827,"endOffset":36289,"count":0}],"isBlockCoverage":false},{"functionName":"_generateBoundary","ranges":[{"startOffset":36401,"endOffset":36534,"count":0}],"isBlockCoverage":false},{"functionName":"_encodeHeaderValue","ranges":[{"startOffset":36713,"endOffset":39400,"count":0}],"isBlockCoverage":false},{"functionName":"_convertAddresses","ranges":[{"startOffset":39671,"endOffset":40809,"count":0}],"isBlockCoverage":false},{"functionName":"_normalizeAddress","ranges":[{"startOffset":40970,"endOffset":42084,"count":0}],"isBlockCoverage":false},{"functionName":"_encodeAddressName","ranges":[{"startOffset":42270,"endOffset":42606,"count":0}],"isBlockCoverage":false},{"functionName":"_encodeWords","ranges":[{"startOffset":42792,"endOffset":43200,"count":0}],"isBlockCoverage":false},{"functionName":"_getTextEncoding","ranges":[{"startOffset":43370,"endOffset":44159,"count":0}],"isBlockCoverage":false},{"functionName":"_generateMessageId","ranges":[{"startOffset":44266,"endOffset":44800,"count":0}],"isBlockCoverage":false}]},{"scriptId":"428","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/punycode/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15311,"count":1}],"isBlockCoverage":true},{"functionName":"error","ranges":[{"startOffset":2444,"endOffset":2508,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":2786,"endOffset":2971,"count":0}],"isBlockCoverage":false},{"functionName":"mapDomain","ranges":[{"startOffset":3316,"endOffset":3883,"count":0}],"isBlockCoverage":false},{"functionName":"ucs2decode","ranges":[{"startOffset":4436,"endOffset":5332,"count":0}],"isBlockCoverage":false},{"functionName":"ucs2encode","ranges":[{"startOffset":5613,"endOffset":5662,"count":0}],"isBlockCoverage":false},{"functionName":"basicToDigit","ranges":[{"startOffset":6039,"endOffset":6351,"count":0}],"isBlockCoverage":false},{"functionName":"digitToBasic","ranges":[{"startOffset":6873,"endOffset":7035,"count":0}],"isBlockCoverage":false},{"functionName":"adapt","ranges":[{"startOffset":7183,"endOffset":7544,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":7809,"endOffset":10339,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":10631,"endOffset":13295,"count":0}],"isBlockCoverage":false},{"functionName":"toUnicode","ranges":[{"startOffset":13770,"endOffset":13938,"count":0}],"isBlockCoverage":false},{"functionName":"toASCII","ranges":[{"startOffset":14414,"endOffset":14568,"count":0}],"isBlockCoverage":false}]},{"scriptId":"429","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/mime-funcs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23403,"count":1}],"isBlockCoverage":true},{"functionName":"isPlainText","ranges":[{"startOffset":390,"endOffset":683,"count":0}],"isBlockCoverage":false},{"functionName":"hasLongerLines","ranges":[{"startOffset":1262,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"encodeWord","ranges":[{"startOffset":1905,"endOffset":4923,"count":0}],"isBlockCoverage":false},{"functionName":"encodeWords","ranges":[{"startOffset":5453,"endOffset":6838,"count":0}],"isBlockCoverage":false},{"functionName":"buildHeaderValue","ranges":[{"startOffset":7221,"endOffset":8400,"count":0}],"isBlockCoverage":false},{"functionName":"buildHeaderParam","ranges":[{"startOffset":8969,"endOffset":13710,"count":0}],"isBlockCoverage":false},{"functionName":"parseHeaderValue","ranges":[{"startOffset":14131,"endOffset":18468,"count":0}],"isBlockCoverage":false},{"functionName":"detectExtension","ranges":[{"startOffset":18757,"endOffset":18804,"count":0}],"isBlockCoverage":false},{"functionName":"detectMimeType","ranges":[{"startOffset":19110,"endOffset":19158,"count":0}],"isBlockCoverage":false},{"functionName":"foldLines","ranges":[{"startOffset":19543,"endOffset":20805,"count":0}],"isBlockCoverage":false},{"functionName":"splitMimeEncodedString","ranges":[{"startOffset":21130,"endOffset":22385,"count":0}],"isBlockCoverage":false},{"functionName":"encodeURICharComponent","ranges":[{"startOffset":22416,"endOffset":22822,"count":0}],"isBlockCoverage":false},{"functionName":"safeEncodeURIComponent","ranges":[{"startOffset":22829,"endOffset":23399,"count":0}],"isBlockCoverage":false}]},{"scriptId":"430","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/base64/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3834,"count":1}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":210,"endOffset":367,"count":0}],"isBlockCoverage":false},{"functionName":"wrap","ranges":[{"startOffset":624,"endOffset":1173,"count":0}],"isBlockCoverage":false},{"functionName":"Encoder","ranges":[{"startOffset":1451,"endOffset":1816,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":1822,"endOffset":3326,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":3332,"endOffset":3751,"count":0}],"isBlockCoverage":false}]},{"scriptId":"431","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/qp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6510,"count":1}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":230,"endOffset":1257,"count":0}],"isBlockCoverage":false},{"functionName":"wrap","ranges":[{"startOffset":1544,"endOffset":4115,"count":0}],"isBlockCoverage":false},{"functionName":"checkRanges","ranges":[{"startOffset":4377,"endOffset":4766,"count":0}],"isBlockCoverage":false},{"functionName":"Encoder","ranges":[{"startOffset":5054,"endOffset":5382,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":5388,"endOffset":6245,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":6251,"endOffset":6427,"count":0}],"isBlockCoverage":false}]},{"scriptId":"432","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/addressparser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9059,"count":1}],"isBlockCoverage":true},{"functionName":"_handleAddress","ranges":[{"startOffset":163,"endOffset":4155,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer","ranges":[{"startOffset":4317,"endOffset":5256,"count":0}],"isBlockCoverage":false},{"functionName":"tokenize","ranges":[{"startOffset":5384,"endOffset":5797,"count":0}],"isBlockCoverage":false},{"functionName":"checkChar","ranges":[{"startOffset":5959,"endOffset":7481,"count":0}],"isBlockCoverage":false},{"functionName":"addressparser","ranges":[{"startOffset":7769,"endOffset":9002,"count":0}],"isBlockCoverage":false}]},{"scriptId":"433","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/mime-node/last-newline.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":670,"count":1}],"isBlockCoverage":true},{"functionName":"LastNewline","ranges":[{"startOffset":105,"endOffset":174,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":180,"endOffset":355,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":361,"endOffset":636,"count":0}],"isBlockCoverage":false}]},{"scriptId":"434","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/mime-node/le-windows.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1295,"count":1}],"isBlockCoverage":true},{"functionName":"LeWindows","ranges":[{"startOffset":243,"endOffset":390,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":432,"endOffset":1263,"count":0}],"isBlockCoverage":false}]},{"scriptId":"435","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/mime-node/le-unix.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":961,"count":1}],"isBlockCoverage":true},{"functionName":"LeWindows","ranges":[{"startOffset":228,"endOffset":344,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":386,"endOffset":929,"count":0}],"isBlockCoverage":false}]},{"scriptId":"436","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/dkim/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7314,"count":1}],"isBlockCoverage":true},{"functionName":"DKIMSigner","ranges":[{"startOffset":835,"endOffset":1820,"count":0}],"isBlockCoverage":false},{"functionName":"cleanup","ranges":[{"startOffset":1826,"endOffset":1967,"count":0}],"isBlockCoverage":false},{"functionName":"createReadCache","ranges":[{"startOffset":1973,"endOffset":2342,"count":0}],"isBlockCoverage":false},{"functionName":"sendNextChunk","ranges":[{"startOffset":2348,"endOffset":2889,"count":0}],"isBlockCoverage":false},{"functionName":"sendSignedOutput","ranges":[{"startOffset":2895,"endOffset":3892,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteCache","ranges":[{"startOffset":3898,"endOffset":4696,"count":0}],"isBlockCoverage":false},{"functionName":"signStream","ranges":[{"startOffset":4702,"endOffset":5775,"count":0}],"isBlockCoverage":false},{"functionName":"DKIM","ranges":[{"startOffset":5796,"endOffset":6098,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":6104,"endOffset":7287,"count":0}],"isBlockCoverage":false}]},{"scriptId":"437","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/dkim/message-parser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4821,"count":1}],"isBlockCoverage":true},{"functionName":"MessageParser","ranges":[{"startOffset":324,"endOffset":576,"count":0}],"isBlockCoverage":false},{"functionName":"updateLastBytes","ranges":[{"startOffset":755,"endOffset":1182,"count":0}],"isBlockCoverage":false},{"functionName":"checkHeaders","ranges":[{"startOffset":1499,"endOffset":3462,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":3468,"endOffset":3999,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":4005,"endOffset":4279,"count":0}],"isBlockCoverage":false},{"functionName":"parseHeaders","ranges":[{"startOffset":4285,"endOffset":4785,"count":0}],"isBlockCoverage":false}]},{"scriptId":"438","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/dkim/relaxed-body.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5745,"count":1}],"isBlockCoverage":true},{"functionName":"RelaxedBody","ranges":[{"startOffset":207,"endOffset":569,"count":0}],"isBlockCoverage":false},{"functionName":"updateHash","ranges":[{"startOffset":575,"endOffset":4768,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":4774,"endOffset":5122,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":5128,"endOffset":5711,"count":0}],"isBlockCoverage":false}]},{"scriptId":"439","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/dkim/sign.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3701,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":607,"endOffset":1896,"count":0}],"isBlockCoverage":false},{"functionName":"generateDKIMHeader","ranges":[{"startOffset":1948,"endOffset":2367,"count":0}],"isBlockCoverage":false},{"functionName":"relaxedHeaders","ranges":[{"startOffset":2369,"endOffset":3529,"count":0}],"isBlockCoverage":false},{"functionName":"relaxedHeaderLine","ranges":[{"startOffset":3531,"endOffset":3700,"count":0}],"isBlockCoverage":false}]},{"scriptId":"440","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/smtp-connection/http-proxy-client.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4306,"count":1}],"isBlockCoverage":true},{"functionName":"httpProxyClient","ranges":[{"startOffset":653,"endOffset":4270,"count":0}],"isBlockCoverage":false}]},{"scriptId":"441","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/mailer/mail-message.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11573,"count":1}],"isBlockCoverage":true},{"functionName":"MailMessage","ranges":[{"startOffset":163,"endOffset":1351,"count":0}],"isBlockCoverage":false},{"functionName":"resolveContent","ranges":[{"startOffset":1357,"endOffset":1435,"count":0}],"isBlockCoverage":false},{"functionName":"resolveAll","ranges":[{"startOffset":1441,"endOffset":4713,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":4719,"endOffset":7835,"count":0}],"isBlockCoverage":false},{"functionName":"setMailerHeader","ranges":[{"startOffset":7841,"endOffset":8010,"count":0}],"isBlockCoverage":false},{"functionName":"setPriorityHeaders","ranges":[{"startOffset":8016,"endOffset":8799,"count":0}],"isBlockCoverage":false},{"functionName":"setListHeaders","ranges":[{"startOffset":8805,"endOffset":9290,"count":0}],"isBlockCoverage":false},{"functionName":"_getListHeaders","ranges":[{"startOffset":9296,"endOffset":11228,"count":0}],"isBlockCoverage":false},{"functionName":"_formatListUrl","ranges":[{"startOffset":11234,"endOffset":11539,"count":0}],"isBlockCoverage":false}]},{"scriptId":"442","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/smtp-pool/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19712,"count":1}],"isBlockCoverage":true},{"functionName":"SMTPPool","ranges":[{"startOffset":466,"endOffset":2235,"count":0}],"isBlockCoverage":false},{"functionName":"getSocket","ranges":[{"startOffset":2507,"endOffset":2632,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2816,"endOffset":3219,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":3356,"endOffset":5606,"count":0}],"isBlockCoverage":false},{"functionName":"_processMessages","ranges":[{"startOffset":5798,"endOffset":8512,"count":0}],"isBlockCoverage":false},{"functionName":"_createConnection","ranges":[{"startOffset":8569,"endOffset":12552,"count":0}],"isBlockCoverage":false},{"functionName":"_shouldRequeuOnConnectionClose","ranges":[{"startOffset":12558,"endOffset":12800,"count":0}],"isBlockCoverage":false},{"functionName":"_failDeliveryOnConnectionClose","ranges":[{"startOffset":12806,"endOffset":13560,"count":0}],"isBlockCoverage":false},{"functionName":"_requeueEntryOnConnectionClose","ranges":[{"startOffset":13566,"endOffset":14206,"count":0}],"isBlockCoverage":false},{"functionName":"_continueProcessing","ranges":[{"startOffset":14289,"endOffset":14459,"count":0}],"isBlockCoverage":false},{"functionName":"_removeConnection","ranges":[{"startOffset":14582,"endOffset":14765,"count":0}],"isBlockCoverage":false},{"functionName":"_checkRateLimit","ranges":[{"startOffset":14989,"endOffset":15646,"count":0}],"isBlockCoverage":false},{"functionName":"_clearRateLimit","ranges":[{"startOffset":15737,"endOffset":16115,"count":0}],"isBlockCoverage":false},{"functionName":"isIdle","ranges":[{"startOffset":16194,"endOffset":16238,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":16354,"endOffset":19658,"count":0}],"isBlockCoverage":false}]},{"scriptId":"443","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/smtp-pool/pool-resource.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8288,"count":1}],"isBlockCoverage":true},{"functionName":"PoolResource","ranges":[{"startOffset":346,"endOffset":2177,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":2359,"endOffset":5819,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":6002,"endOffset":7942,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":7993,"endOffset":8253,"count":0}],"isBlockCoverage":false}]},{"scriptId":"444","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/smtp-connection/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":63134,"count":1}],"isBlockCoverage":true},{"functionName":"SMTPConnection","ranges":[{"startOffset":2408,"endOffset":6693,"count":1},{"startOffset":2596,"endOffset":2601,"count":0},{"startOffset":2760,"endOffset":2798,"count":0},{"startOffset":2838,"endOffset":2852,"count":0},{"startOffset":2905,"endOffset":2930,"count":0},{"startOffset":2966,"endOffset":2973,"count":0},{"startOffset":3132,"endOffset":3152,"count":0},{"startOffset":3154,"endOffset":3290,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3612,"endOffset":3836,"count":0}],"isBlockCoverage":false},{"functionName":"SMTPConnection._onSocketData","ranges":[{"startOffset":6412,"endOffset":6440,"count":0}],"isBlockCoverage":false},{"functionName":"SMTPConnection._onSocketError","ranges":[{"startOffset":6472,"endOffset":6527,"count":0}],"isBlockCoverage":false},{"functionName":"SMTPConnection._onSocketClose","ranges":[{"startOffset":6559,"endOffset":6580,"count":0}],"isBlockCoverage":false},{"functionName":"SMTPConnection._onSocketEnd","ranges":[{"startOffset":6610,"endOffset":6629,"count":0}],"isBlockCoverage":false},{"functionName":"SMTPConnection._onSocketTimeout","ranges":[{"startOffset":6663,"endOffset":6686,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":6799,"endOffset":13274,"count":0}],"isBlockCoverage":false},{"functionName":"quit","ranges":[{"startOffset":13314,"endOffset":13411,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":13476,"endOffset":14416,"count":0}],"isBlockCoverage":false},{"functionName":"login","ranges":[{"startOffset":14463,"endOffset":20861,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":21124,"endOffset":23084,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":23222,"endOffset":23596,"count":0}],"isBlockCoverage":false},{"functionName":"_onConnect","ranges":[{"startOffset":23729,"endOffset":25652,"count":0}],"isBlockCoverage":false},{"functionName":"_onData","ranges":[{"startOffset":25813,"endOffset":26824,"count":0}],"isBlockCoverage":false},{"functionName":"_onError","ranges":[{"startOffset":26984,"endOffset":27543,"count":0}],"isBlockCoverage":false},{"functionName":"_formatError","ranges":[{"startOffset":27549,"endOffset":28269,"count":0}],"isBlockCoverage":false},{"functionName":"_onClose","ranges":[{"startOffset":28351,"endOffset":29565,"count":0}],"isBlockCoverage":false},{"functionName":"_onEnd","ranges":[{"startOffset":29645,"endOffset":29762,"count":0}],"isBlockCoverage":false},{"functionName":"_onTimeout","ranges":[{"startOffset":29846,"endOffset":29946,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":30008,"endOffset":30145,"count":0}],"isBlockCoverage":false},{"functionName":"_upgradeConnection","ranges":[{"startOffset":30322,"endOffset":32265,"count":0}],"isBlockCoverage":false},{"functionName":"_processResponse","ranges":[{"startOffset":32408,"endOffset":33444,"count":0}],"isBlockCoverage":false},{"functionName":"_sendCommand","ranges":[{"startOffset":33679,"endOffset":34251,"count":0}],"isBlockCoverage":false},{"functionName":"_setEnvelope","ranges":[{"startOffset":34578,"endOffset":38242,"count":0}],"isBlockCoverage":false},{"functionName":"_setDsnEnvelope","ranges":[{"startOffset":38248,"endOffset":39774,"count":0}],"isBlockCoverage":false},{"functionName":"_getDsnRcptToArgs","ranges":[{"startOffset":39780,"endOffset":40395,"count":0}],"isBlockCoverage":false},{"functionName":"_createSendStream","ranges":[{"startOffset":40401,"endOffset":42040,"count":0}],"isBlockCoverage":false},{"functionName":"_actionGreeting","ranges":[{"startOffset":42325,"endOffset":42853,"count":0}],"isBlockCoverage":false},{"functionName":"_actionLHLO","ranges":[{"startOffset":43068,"endOffset":43288,"count":0}],"isBlockCoverage":false},{"functionName":"_actionEHLO","ranges":[{"startOffset":43593,"endOffset":46537,"count":0}],"isBlockCoverage":false},{"functionName":"_actionHELO","ranges":[{"startOffset":46757,"endOffset":47088,"count":0}],"isBlockCoverage":false},{"functionName":"_actionSTARTTLS","ranges":[{"startOffset":47347,"endOffset":48745,"count":0}],"isBlockCoverage":false},{"functionName":"_actionAUTH_LOGIN_USER","ranges":[{"startOffset":49161,"endOffset":49665,"count":0}],"isBlockCoverage":false},{"functionName":"_actionAUTH_CRAM_MD5","ranges":[{"startOffset":50064,"endOffset":51106,"count":0}],"isBlockCoverage":false},{"functionName":"_actionAUTH_CRAM_MD5_PASS","ranges":[{"startOffset":51344,"endOffset":51935,"count":0}],"isBlockCoverage":false},{"functionName":"_actionAUTH_LOGIN_PASS","ranges":[{"startOffset":52207,"endOffset":52836,"count":0}],"isBlockCoverage":false},{"functionName":"_actionAUTHComplete","ranges":[{"startOffset":53066,"endOffset":54597,"count":0}],"isBlockCoverage":false},{"functionName":"_actionMAIL","ranges":[{"startOffset":54725,"endOffset":56322,"count":0}],"isBlockCoverage":false},{"functionName":"_actionRCPT","ranges":[{"startOffset":56448,"endOffset":58305,"count":0}],"isBlockCoverage":false},{"functionName":"_actionDATA","ranges":[{"startOffset":58427,"endOffset":59209,"count":0}],"isBlockCoverage":false},{"functionName":"_actionSMTPStream","ranges":[{"startOffset":59429,"endOffset":59740,"count":0}],"isBlockCoverage":false},{"functionName":"_actionLMTPStream","ranges":[{"startOffset":60110,"endOffset":60827,"count":0}],"isBlockCoverage":false},{"functionName":"_handleXOauth2Token","ranges":[{"startOffset":60833,"endOffset":61852,"count":0}],"isBlockCoverage":false},{"functionName":"_isDestroyedMessage","ranges":[{"startOffset":61928,"endOffset":62436,"count":0}],"isBlockCoverage":false},{"functionName":"_getHostname","ranges":[{"startOffset":62442,"endOffset":63097,"count":1},{"startOffset":62601,"endOffset":62606,"count":0},{"startOffset":62618,"endOffset":62718,"count":0},{"startOffset":62988,"endOffset":63058,"count":0}],"isBlockCoverage":true}]},{"scriptId":"445","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/smtp-connection/data-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2985,"count":1}],"isBlockCoverage":true},{"functionName":"DataStream","ranges":[{"startOffset":334,"endOffset":571,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":613,"endOffset":2520,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":2598,"endOffset":2952,"count":0}],"isBlockCoverage":false}]},{"scriptId":"446","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/xoauth2/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13609,"count":1}],"isBlockCoverage":true},{"functionName":"XOAuth2","ranges":[{"startOffset":1842,"endOffset":3349,"count":0}],"isBlockCoverage":false},{"functionName":"getToken","ranges":[{"startOffset":3618,"endOffset":5086,"count":0}],"isBlockCoverage":false},{"functionName":"updateToken","ranges":[{"startOffset":5375,"endOffset":5736,"count":0}],"isBlockCoverage":false},{"functionName":"generateToken","ranges":[{"startOffset":5937,"endOffset":10556,"count":0}],"isBlockCoverage":false},{"functionName":"buildXOAuth2Token","ranges":[{"startOffset":10790,"endOffset":11029,"count":0}],"isBlockCoverage":false},{"functionName":"postRequest","ranges":[{"startOffset":11634,"endOffset":12548,"count":0}],"isBlockCoverage":false},{"functionName":"toBase64URL","ranges":[{"startOffset":12733,"endOffset":13041,"count":0}],"isBlockCoverage":false},{"functionName":"jwtSignRS256","ranges":[{"startOffset":13267,"endOffset":13579,"count":0}],"isBlockCoverage":false}]},{"scriptId":"447","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/well-known/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1232,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":114,"endOffset":491,"count":57},{"startOffset":251,"endOffset":256,"count":45},{"startOffset":385,"endOffset":390,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":266,"endOffset":351,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":400,"endOffset":487,"count":19}],"isBlockCoverage":true},{"functionName":"normalizeKey","ranges":[{"startOffset":495,"endOffset":586,"count":96}],"isBlockCoverage":true},{"functionName":"normalizeService","ranges":[{"startOffset":588,"endOffset":854,"count":95}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":723,"endOffset":828,"count":323},{"startOffset":769,"endOffset":822,"count":239}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":1129,"endOffset":1230,"count":1},{"startOffset":1219,"endOffset":1227,"count":0}],"isBlockCoverage":true}]},{"scriptId":"448","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/smtp-transport/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13383,"count":1}],"isBlockCoverage":true},{"functionName":"SMTPTransport","ranges":[{"startOffset":451,"endOffset":1627,"count":1},{"startOffset":518,"endOffset":523,"count":0},{"startOffset":567,"endOffset":646,"count":0},{"startOffset":762,"endOffset":821,"count":0},{"startOffset":848,"endOffset":971,"count":0}],"isBlockCoverage":true},{"functionName":"getSocket","ranges":[{"startOffset":1899,"endOffset":2024,"count":0}],"isBlockCoverage":false},{"functionName":"getAuth","ranges":[{"startOffset":2030,"endOffset":3962,"count":1},{"startOffset":2073,"endOffset":2114,"count":0},{"startOffset":2657,"endOffset":2694,"count":0},{"startOffset":2774,"endOffset":3442,"count":0},{"startOffset":3694,"endOffset":3699,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2298,"endOffset":2408,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2520,"endOffset":2621,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3130,"endOffset":3171,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3209,"endOffset":3239,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":4134,"endOffset":9693,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":9809,"endOffset":13127,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":13175,"endOffset":13324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"449","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/sendmail-transport/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6564,"count":1}],"isBlockCoverage":true},{"functionName":"SendmailTransport","ranges":[{"startOffset":512,"endOffset":1522,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":1784,"endOffset":6524,"count":0}],"isBlockCoverage":false}]},{"scriptId":"450","url":"node:child_process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28219,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1993,"endOffset":2024,"count":0}],"isBlockCoverage":false},{"functionName":"fork","ranges":[{"startOffset":3552,"endOffset":5277,"count":0}],"isBlockCoverage":false},{"functionName":"_forkChild","ranges":[{"startOffset":5281,"endOffset":5782,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeExecArgs","ranges":[{"startOffset":5786,"endOffset":6318,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":6880,"endOffset":7132,"count":0}],"isBlockCoverage":false},{"functionName":"customPromiseExecFunction","ranges":[{"startOffset":7170,"endOffset":7550,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7192,"endOffset":7546,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeExecFileArgs","ranges":[{"startOffset":7695,"endOffset":8631,"count":0}],"isBlockCoverage":false},{"functionName":"execFile","ranges":[{"startOffset":9271,"endOffset":14238,"count":0}],"isBlockCoverage":false},{"functionName":"copyProcessEnvToEnv","ranges":[{"startOffset":14390,"endOffset":14596,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeSpawnArguments","ranges":[{"startOffset":14600,"endOffset":20037,"count":0}],"isBlockCoverage":false},{"functionName":"abortChildProcess","ranges":[{"startOffset":20041,"endOffset":20307,"count":0}],"isBlockCoverage":false},{"functionName":"spawn","ranges":[{"startOffset":20886,"endOffset":22132,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":22924,"endOffset":24478,"count":0}],"isBlockCoverage":false},{"functionName":"checkExecSyncError","ranges":[{"startOffset":24484,"endOffset":24883,"count":0}],"isBlockCoverage":false},{"functionName":"execFileSync","ranges":[{"startOffset":25418,"endOffset":25899,"count":0}],"isBlockCoverage":false},{"functionName":"execSync","ranges":[{"startOffset":26418,"endOffset":26809,"count":0}],"isBlockCoverage":false},{"functionName":"validateArgumentNullCheck","ranges":[{"startOffset":26815,"endOffset":27042,"count":0}],"isBlockCoverage":false},{"functionName":"validateArgumentsNullCheck","ranges":[{"startOffset":27048,"endOffset":27214,"count":0}],"isBlockCoverage":false},{"functionName":"validateTimeout","ranges":[{"startOffset":27220,"endOffset":27412,"count":0}],"isBlockCoverage":false},{"functionName":"validateMaxBuffer","ranges":[{"startOffset":27418,"endOffset":27697,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeKillSignal","ranges":[{"startOffset":27703,"endOffset":28074,"count":0}],"isBlockCoverage":false}]},{"scriptId":"451","url":"node:internal/child_process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32940,"count":1}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2594,"endOffset":2655,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2664,"endOffset":2720,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2788,"endOffset":2857,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2866,"endOffset":3012,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":3046,"endOffset":4646,"count":0}],"isBlockCoverage":false},{"functionName":"postSend","ranges":[{"startOffset":4655,"endOffset":5417,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5426,"endOffset":5901,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5972,"endOffset":6033,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":6042,"endOffset":6098,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":6169,"endOffset":6293,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":6302,"endOffset":6467,"count":0}],"isBlockCoverage":false},{"functionName":"stdioStringToArray","ranges":[{"startOffset":6482,"endOffset":6912,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess","ranges":[{"startOffset":6916,"endOffset":8466,"count":0}],"isBlockCoverage":false},{"functionName":"flushStdio","ranges":[{"startOffset":8594,"endOffset":9087,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":9093,"endOffset":9185,"count":0}],"isBlockCoverage":false},{"functionName":"getHandleWrapType","ranges":[{"startOffset":9191,"endOffset":9427,"count":0}],"isBlockCoverage":false},{"functionName":"closePendingHandle","ranges":[{"startOffset":9431,"endOffset":9547,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.spawn","ranges":[{"startOffset":9584,"endOffset":13280,"count":0}],"isBlockCoverage":false},{"functionName":"onErrorNT","ranges":[{"startOffset":13287,"endOffset":13350,"count":0}],"isBlockCoverage":false},{"functionName":"onSpawnNT","ranges":[{"startOffset":13356,"endOffset":13408,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.kill","ranges":[{"startOffset":13444,"endOffset":14142,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.<computed>","ranges":[{"startOffset":14187,"endOffset":14248,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.ref","ranges":[{"startOffset":14284,"endOffset":14340,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.unref","ranges":[{"startOffset":14378,"endOffset":14436,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":14441,"endOffset":15479,"count":0}],"isBlockCoverage":false},{"functionName":"setupChannel","ranges":[{"startOffset":15633,"endOffset":28146,"count":0}],"isBlockCoverage":false},{"functionName":"isInternal","ranges":[{"startOffset":28184,"endOffset":28501,"count":0}],"isBlockCoverage":false},{"functionName":"getValidStdio","ranges":[{"startOffset":28539,"endOffset":31565,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketList","ranges":[{"startOffset":31571,"endOffset":31895,"count":0}],"isBlockCoverage":false},{"functionName":"maybeClose","ranges":[{"startOffset":31901,"endOffset":32108,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":32112,"endOffset":32804,"count":0}],"isBlockCoverage":false}]},{"scriptId":"452","url":"node:dgram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29367,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCluster","ranges":[{"startOffset":2917,"endOffset":3017,"count":0}],"isBlockCoverage":false},{"functionName":"Socket","ranges":[{"startOffset":3090,"endOffset":4572,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":4688,"endOffset":4768,"count":0}],"isBlockCoverage":false},{"functionName":"startListening","ranges":[{"startOffset":4774,"endOffset":5233,"count":0}],"isBlockCoverage":false},{"functionName":"replaceHandle","ranges":[{"startOffset":5237,"endOffset":5818,"count":0}],"isBlockCoverage":false},{"functionName":"bufferSize","ranges":[{"startOffset":5822,"endOffset":6124,"count":0}],"isBlockCoverage":false},{"functionName":"bindServerHandle","ranges":[{"startOffset":6195,"endOffset":6623,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.bind","ranges":[{"startOffset":6651,"endOffset":10245,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":10277,"endOffset":11100,"count":0}],"isBlockCoverage":false},{"functionName":"_connect","ranges":[{"startOffset":11107,"endOffset":11467,"count":0}],"isBlockCoverage":false},{"functionName":"doConnect","ranges":[{"startOffset":11473,"endOffset":12145,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.disconnect","ranges":[{"startOffset":12181,"endOffset":12502,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.sendto","ranges":[{"startOffset":12611,"endOffset":13064,"count":0}],"isBlockCoverage":false},{"functionName":"sliceBuffer","ranges":[{"startOffset":13071,"endOffset":13854,"count":0}],"isBlockCoverage":false},{"functionName":"fixBufferList","ranges":[{"startOffset":13860,"endOffset":14258,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":14264,"endOffset":14702,"count":0}],"isBlockCoverage":false},{"functionName":"onListenSuccess","ranges":[{"startOffset":14708,"endOffset":14849,"count":0}],"isBlockCoverage":false},{"functionName":"onListenError","ranges":[{"startOffset":14855,"endOffset":14982,"count":0}],"isBlockCoverage":false},{"functionName":"clearQueue","ranges":[{"startOffset":14988,"endOffset":15193,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.send","ranges":[{"startOffset":15781,"endOffset":18773,"count":0}],"isBlockCoverage":false},{"functionName":"doSend","ranges":[{"startOffset":18778,"endOffset":19964,"count":0}],"isBlockCoverage":false},{"functionName":"afterSend","ranges":[{"startOffset":19968,"endOffset":20157,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.close","ranges":[{"startOffset":20186,"endOffset":20776,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":20820,"endOffset":20958,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseNT","ranges":[{"startOffset":20965,"endOffset":21021,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":21054,"endOffset":21258,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.remoteAddress","ranges":[{"startOffset":21296,"endOffset":21623,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setBroadcast","ranges":[{"startOffset":21662,"endOffset":21819,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setTTL","ranges":[{"startOffset":21852,"endOffset":22039,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastTTL","ranges":[{"startOffset":22081,"endOffset":22286,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastLoopback","ranges":[{"startOffset":22333,"endOffset":22544,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastInterface","ranges":[{"startOffset":22592,"endOffset":22866,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addMembership","ranges":[{"startOffset":22904,"endOffset":23295,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropMembership","ranges":[{"startOffset":23336,"endOffset":23730,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addSourceSpecificMembership","ranges":[{"startOffset":23782,"endOffset":24408,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropSourceSpecificMembership","ranges":[{"startOffset":24463,"endOffset":25095,"count":0}],"isBlockCoverage":false},{"functionName":"healthCheck","ranges":[{"startOffset":25102,"endOffset":25270,"count":0}],"isBlockCoverage":false},{"functionName":"stopReceiving","ranges":[{"startOffset":25276,"endOffset":25448,"count":0}],"isBlockCoverage":false},{"functionName":"onMessage","ranges":[{"startOffset":25454,"endOffset":25719,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":25725,"endOffset":25843,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":25872,"endOffset":25986,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":26018,"endOffset":26134,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setRecvBufferSize","ranges":[{"startOffset":26178,"endOffset":26237,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setSendBufferSize","ranges":[{"startOffset":26281,"endOffset":26340,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getRecvBufferSize","ranges":[{"startOffset":26384,"endOffset":26443,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendBufferSize","ranges":[{"startOffset":26487,"endOffset":26546,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendQueueSize","ranges":[{"startOffset":26587,"endOffset":26658,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendQueueCount","ranges":[{"startOffset":26700,"endOffset":26772,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26896,"endOffset":26952,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27026,"endOffset":27084,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27243,"endOffset":27302,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27379,"endOffset":27440,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27602,"endOffset":27661,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27738,"endOffset":27799,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27957,"endOffset":28012,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28085,"endOffset":28142,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28300,"endOffset":28359,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28436,"endOffset":28497,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28608,"endOffset":28645,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28757,"endOffset":28796,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":29088,"endOffset":29124,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":29129,"endOffset":29170,"count":0}],"isBlockCoverage":false}]},{"scriptId":"453","url":"node:internal/dgram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1943,"count":1}],"isBlockCoverage":false},{"functionName":"lookup4","ranges":[{"startOffset":500,"endOffset":603,"count":0}],"isBlockCoverage":false},{"functionName":"lookup6","ranges":[{"startOffset":609,"endOffset":706,"count":0}],"isBlockCoverage":false},{"functionName":"newHandle","ranges":[{"startOffset":710,"endOffset":1383,"count":0}],"isBlockCoverage":false},{"functionName":"_createSocketHandle","ranges":[{"startOffset":1389,"endOffset":1858,"count":0}],"isBlockCoverage":false}]},{"scriptId":"454","url":"node:internal/socket_list","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2817,"count":1}],"isBlockCoverage":false},{"functionName":"SocketListSend","ranges":[{"startOffset":243,"endOffset":389,"count":0}],"isBlockCoverage":false},{"functionName":"_request","ranges":[{"startOffset":395,"endOffset":1071,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1077,"endOffset":1233,"count":0}],"isBlockCoverage":false},{"functionName":"getConnections","ranges":[{"startOffset":1239,"endOffset":1483,"count":0}],"isBlockCoverage":false},{"functionName":"SocketListReceive","ranges":[{"startOffset":1603,"endOffset":2497,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":2503,"endOffset":2753,"count":0}],"isBlockCoverage":false}]},{"scriptId":"455","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/stream-transport/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4085,"count":1}],"isBlockCoverage":true},{"functionName":"StreamTransport","ranges":[{"startOffset":433,"endOffset":872,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":1126,"endOffset":4047,"count":0}],"isBlockCoverage":false}]},{"scriptId":"456","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/json-transport/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2367,"count":1}],"isBlockCoverage":true},{"functionName":"JSONTransport","ranges":[{"startOffset":258,"endOffset":574,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":836,"endOffset":2331,"count":0}],"isBlockCoverage":false}]},{"scriptId":"457","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/nodemailer/lib/ses-transport/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11013,"count":1}],"isBlockCoverage":true},{"functionName":"SESTransport","ranges":[{"startOffset":607,"endOffset":1531,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":1745,"endOffset":2290,"count":0}],"isBlockCoverage":false},{"functionName":"_checkRatedQueue","ranges":[{"startOffset":2296,"endOffset":2801,"count":0}],"isBlockCoverage":false},{"functionName":"_checkSendingRate","ranges":[{"startOffset":2807,"endOffset":3815,"count":0}],"isBlockCoverage":false},{"functionName":"_sent","ranges":[{"startOffset":3821,"endOffset":3897,"count":0}],"isBlockCoverage":false},{"functionName":"isIdle","ranges":[{"startOffset":3976,"endOffset":4020,"count":0}],"isBlockCoverage":false},{"functionName":"_send","ranges":[{"startOffset":4256,"endOffset":9663,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":9778,"endOffset":10978,"count":0}],"isBlockCoverage":false}]},{"scriptId":"458","url":"node:perf_hooks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1115,"count":1}],"isBlockCoverage":false}]},{"scriptId":"459","url":"node:internal/perf/resource_timing","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7668,"count":1}],"isBlockCoverage":false},{"functionName":"PerformanceResourceTiming","ranges":[{"startOffset":856,"endOffset":1076,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":1082,"endOffset":1210,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":1216,"endOffset":1355,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1361,"endOffset":1527,"count":0}],"isBlockCoverage":false},{"functionName":"get initiatorType","ranges":[{"startOffset":1533,"endOffset":1672,"count":0}],"isBlockCoverage":false},{"functionName":"get workerStart","ranges":[{"startOffset":1678,"endOffset":1837,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectStart","ranges":[{"startOffset":1843,"endOffset":1994,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectEnd","ranges":[{"startOffset":2000,"endOffset":2147,"count":0}],"isBlockCoverage":false},{"functionName":"get fetchStart","ranges":[{"startOffset":2153,"endOffset":2305,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupStart","ranges":[{"startOffset":2311,"endOffset":2497,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupEnd","ranges":[{"startOffset":2503,"endOffset":2685,"count":0}],"isBlockCoverage":false},{"functionName":"get connectStart","ranges":[{"startOffset":2691,"endOffset":2870,"count":0}],"isBlockCoverage":false},{"functionName":"get connectEnd","ranges":[{"startOffset":2876,"endOffset":3051,"count":0}],"isBlockCoverage":false},{"functionName":"get secureConnectionStart","ranges":[{"startOffset":3057,"endOffset":3259,"count":0}],"isBlockCoverage":false},{"functionName":"get nextHopProtocol","ranges":[{"startOffset":3265,"endOffset":3458,"count":0}],"isBlockCoverage":false},{"functionName":"get requestStart","ranges":[{"startOffset":3464,"endOffset":3625,"count":0}],"isBlockCoverage":false},{"functionName":"get responseStart","ranges":[{"startOffset":3631,"endOffset":3794,"count":0}],"isBlockCoverage":false},{"functionName":"get responseEnd","ranges":[{"startOffset":3800,"endOffset":3939,"count":0}],"isBlockCoverage":false},{"functionName":"get encodedBodySize","ranges":[{"startOffset":3945,"endOffset":4096,"count":0}],"isBlockCoverage":false},{"functionName":"get decodedBodySize","ranges":[{"startOffset":4102,"endOffset":4253,"count":0}],"isBlockCoverage":false},{"functionName":"get transferSize","ranges":[{"startOffset":4259,"endOffset":4519,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":4525,"endOffset":5491,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceResourceTiming","ranges":[{"startOffset":6388,"endOffset":6997,"count":0}],"isBlockCoverage":false},{"functionName":"markResourceTiming","ranges":[{"startOffset":7069,"endOffset":7587,"count":0}],"isBlockCoverage":false}]},{"scriptId":"460","url":"node:internal/perf/usertiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6505,"count":1}],"isBlockCoverage":false},{"functionName":"getMark","ranges":[{"startOffset":1186,"endOffset":1652,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMark","ranges":[{"startOffset":1708,"endOffset":2462,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":2468,"endOffset":2576,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2582,"endOffset":2773,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMeasure","ranges":[{"startOffset":3037,"endOffset":3346,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":3352,"endOffset":3463,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceMeasure","ranges":[{"startOffset":3676,"endOffset":3887,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":3891,"endOffset":4037,"count":0}],"isBlockCoverage":false},{"functionName":"calculateStartDuration","ranges":[{"startOffset":4041,"endOffset":5673,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":5677,"endOffset":6124,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarkTimings","ranges":[{"startOffset":6128,"endOffset":6392,"count":0}],"isBlockCoverage":false}]},{"scriptId":"461","url":"node:internal/perf/nodetiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3676,"count":1}],"isBlockCoverage":false},{"functionName":"PerformanceNodeTiming","ranges":[{"startOffset":762,"endOffset":2867,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1461,"endOffset":1559,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1682,"endOffset":1778,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1905,"endOffset":2004,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2129,"endOffset":2227,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2351,"endOffset":2448,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2581,"endOffset":2701,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2873,"endOffset":3123,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":3129,"endOffset":3529,"count":0}],"isBlockCoverage":false}]},{"scriptId":"462","url":"node:internal/perf/performance","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6561,"count":1}],"isBlockCoverage":false},{"functionName":"Performance","ranges":[{"startOffset":1342,"endOffset":1404,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1410,"endOffset":1717,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarks","ranges":[{"startOffset":1723,"endOffset":1961,"count":0}],"isBlockCoverage":false},{"functionName":"clearMeasures","ranges":[{"startOffset":1967,"endOffset":2182,"count":0}],"isBlockCoverage":false},{"functionName":"clearResourceTimings","ranges":[{"startOffset":2188,"endOffset":2411,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":2417,"endOffset":2548,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":2554,"endOffset":2818,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":2824,"endOffset":3088,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":3094,"endOffset":3321,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":3327,"endOffset":3618,"count":0}],"isBlockCoverage":false},{"functionName":"now","ranges":[{"startOffset":3624,"endOffset":3723,"count":0}],"isBlockCoverage":false},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":3729,"endOffset":4053,"count":0}],"isBlockCoverage":false},{"functionName":"get timeOrigin","ranges":[{"startOffset":4059,"endOffset":4188,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":4194,"endOffset":4429,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformance","ranges":[{"startOffset":6092,"endOffset":6266,"count":1}],"isBlockCoverage":true},{"functionName":"Performance","ranges":[{"startOffset":6150,"endOffset":6244,"count":1}],"isBlockCoverage":true},{"functionName":"dispatchBufferFull","ranges":[{"startOffset":6314,"endOffset":6457,"count":0}],"isBlockCoverage":false}]},{"scriptId":"463","url":"node:internal/perf/event_loop_utilization","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1587,"count":1}],"isBlockCoverage":false},{"functionName":"eventLoopUtilization","ranges":[{"startOffset":163,"endOffset":465,"count":0}],"isBlockCoverage":false},{"functionName":"internalEventLoopUtilization","ranges":[{"startOffset":469,"endOffset":1501,"count":0}],"isBlockCoverage":false}]},{"scriptId":"464","url":"node:internal/perf/timerify","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2389,"count":1}],"isBlockCoverage":false},{"functionName":"processComplete","ranges":[{"startOffset":646,"endOffset":1037,"count":0}],"isBlockCoverage":false},{"functionName":"timerify","ranges":[{"startOffset":1041,"endOffset":2357,"count":0}],"isBlockCoverage":false}]},{"scriptId":"465","url":"node:internal/histogram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8434,"count":1}],"isBlockCoverage":false},{"functionName":"isHistogram","ranges":[{"startOffset":944,"endOffset":1020,"count":0}],"isBlockCoverage":false},{"functionName":"Histogram","ranges":[{"startOffset":1045,"endOffset":1107,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1113,"endOffset":1543,"count":0}],"isBlockCoverage":false},{"functionName":"get count","ranges":[{"startOffset":1600,"endOffset":1731,"count":0}],"isBlockCoverage":false},{"functionName":"get countBigInt","ranges":[{"startOffset":1788,"endOffset":1931,"count":0}],"isBlockCoverage":false},{"functionName":"get min","ranges":[{"startOffset":1988,"endOffset":2115,"count":0}],"isBlockCoverage":false},{"functionName":"get minBigInt","ranges":[{"startOffset":2172,"endOffset":2311,"count":0}],"isBlockCoverage":false},{"functionName":"get max","ranges":[{"startOffset":2368,"endOffset":2495,"count":0}],"isBlockCoverage":false},{"functionName":"get maxBigInt","ranges":[{"startOffset":2552,"endOffset":2691,"count":0}],"isBlockCoverage":false},{"functionName":"get mean","ranges":[{"startOffset":2748,"endOffset":2877,"count":0}],"isBlockCoverage":false},{"functionName":"get exceeds","ranges":[{"startOffset":2934,"endOffset":3069,"count":0}],"isBlockCoverage":false},{"functionName":"get exceedsBigInt","ranges":[{"startOffset":3126,"endOffset":3273,"count":0}],"isBlockCoverage":false},{"functionName":"get stddev","ranges":[{"startOffset":3330,"endOffset":3463,"count":0}],"isBlockCoverage":false},{"functionName":"percentile","ranges":[{"startOffset":3540,"endOffset":3897,"count":0}],"isBlockCoverage":false},{"functionName":"percentileBigInt","ranges":[{"startOffset":3974,"endOffset":4343,"count":0}],"isBlockCoverage":false},{"functionName":"get percentiles","ranges":[{"startOffset":4412,"endOffset":4607,"count":0}],"isBlockCoverage":false},{"functionName":"get percentilesBigInt","ranges":[{"startOffset":4676,"endOffset":4883,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":4925,"endOffset":5045,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5051,"endOffset":5214,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5220,"endOffset":5282,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":5288,"endOffset":5555,"count":0}],"isBlockCoverage":false},{"functionName":"RecordableHistogram","ranges":[{"startOffset":5611,"endOffset":5673,"count":0}],"isBlockCoverage":false},{"functionName":"record","ranges":[{"startOffset":5748,"endOffset":6033,"count":0}],"isBlockCoverage":false},{"functionName":"recordDelta","ranges":[{"startOffset":6075,"endOffset":6230,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":6291,"endOffset":6570,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6576,"endOffset":6749,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6755,"endOffset":6817,"count":0}],"isBlockCoverage":false},{"functionName":"internalHistogram","ranges":[{"startOffset":6824,"endOffset":7017,"count":0}],"isBlockCoverage":false},{"functionName":"internalHistogram.<computed>","ranges":[{"startOffset":7063,"endOffset":7071,"count":0}],"isBlockCoverage":false},{"functionName":"internalRecordableHistogram","ranges":[{"startOffset":7076,"endOffset":7322,"count":0}],"isBlockCoverage":false},{"functionName":"internalRecordableHistogram.<computed>","ranges":[{"startOffset":7378,"endOffset":7386,"count":0}],"isBlockCoverage":false},{"functionName":"createHistogram","ranges":[{"startOffset":7540,"endOffset":8244,"count":0}],"isBlockCoverage":false}]},{"scriptId":"466","url":"node:internal/perf/event_loop_delay","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1814,"count":1}],"isBlockCoverage":false},{"functionName":"ELDHistogram","ranges":[{"startOffset":665,"endOffset":728,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":773,"endOffset":991,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":1036,"endOffset":1256,"count":0}],"isBlockCoverage":false},{"functionName":"monitorEventLoopDelay","ranges":[{"startOffset":1358,"endOffset":1769,"count":0}],"isBlockCoverage":false}]},{"scriptId":"467","url":"node:internal/deps/undici/undici","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":589013,"count":1}],"isBlockCoverage":false},{"functionName":"__name","ranges":[{"startOffset":121,"endOffset":196,"count":256}],"isBlockCoverage":true},{"functionName":"__commonJS","ranges":[{"startOffset":216,"endOffset":357,"count":56}],"isBlockCoverage":true},{"functionName":"__require","ranges":[{"startOffset":229,"endOffset":357,"count":167},{"startOffset":266,"endOffset":340,"count":55}],"isBlockCoverage":true},{"functionName":"lib/core/symbols.js","ranges":[{"startOffset":424,"endOffset":3209,"count":1}],"isBlockCoverage":true},{"functionName":"lib/fetch/symbols.js","ranges":[{"startOffset":3282,"endOffset":3575,"count":1}],"isBlockCoverage":true},{"functionName":"lib/core/errors.js","ranges":[{"startOffset":3644,"endOffset":13421,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":3757,"endOffset":3812,"count":1}],"isBlockCoverage":true},{"functionName":"UndiciError","ranges":[{"startOffset":3820,"endOffset":3944,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":4040,"endOffset":4103,"count":1}],"isBlockCoverage":true},{"functionName":"_ConnectTimeoutError","ranges":[{"startOffset":4111,"endOffset":4381,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":4477,"endOffset":4540,"count":1}],"isBlockCoverage":true},{"functionName":"_HeadersTimeoutError","ranges":[{"startOffset":4548,"endOffset":4818,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":4916,"endOffset":4980,"count":1}],"isBlockCoverage":true},{"functionName":"_HeadersOverflowError","ranges":[{"startOffset":4988,"endOffset":5262,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":5352,"endOffset":5412,"count":1}],"isBlockCoverage":true},{"functionName":"_BodyTimeoutError","ranges":[{"startOffset":5420,"endOffset":5678,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":5782,"endOffset":5849,"count":1}],"isBlockCoverage":true},{"functionName":"_ResponseStatusCodeError","ranges":[{"startOffset":5857,"endOffset":6306,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":6404,"endOffset":6468,"count":1}],"isBlockCoverage":true},{"functionName":"_InvalidArgumentError","ranges":[{"startOffset":6476,"endOffset":6745,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":6849,"endOffset":6916,"count":1}],"isBlockCoverage":true},{"functionName":"_InvalidReturnValueError","ranges":[{"startOffset":6924,"endOffset":7212,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":7308,"endOffset":7371,"count":1}],"isBlockCoverage":true},{"functionName":"_RequestAbortedError","ranges":[{"startOffset":7379,"endOffset":7626,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":7720,"endOffset":7782,"count":1}],"isBlockCoverage":true},{"functionName":"_InformationalError","ranges":[{"startOffset":7790,"endOffset":8045,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":8169,"endOffset":8246,"count":1}],"isBlockCoverage":true},{"functionName":"_RequestContentLengthMismatchError","ranges":[{"startOffset":8254,"endOffset":8599,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":8725,"endOffset":8803,"count":1}],"isBlockCoverage":true},{"functionName":"_ResponseContentLengthMismatchError","ranges":[{"startOffset":8811,"endOffset":9159,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":9257,"endOffset":9321,"count":1}],"isBlockCoverage":true},{"functionName":"_ClientDestroyedError","ranges":[{"startOffset":9329,"endOffset":9597,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":9689,"endOffset":9750,"count":1}],"isBlockCoverage":true},{"functionName":"_ClientClosedError","ranges":[{"startOffset":9758,"endOffset":10014,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":10094,"endOffset":10149,"count":1}],"isBlockCoverage":true},{"functionName":"_SocketError","ranges":[{"startOffset":10157,"endOffset":10432,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":10524,"endOffset":10585,"count":1}],"isBlockCoverage":true},{"functionName":"_NotSupportedError","ranges":[{"startOffset":10593,"endOffset":10855,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":10943,"endOffset":11019,"count":1}],"isBlockCoverage":true},{"functionName":"BalancedPoolMissingUpstreamError","ranges":[{"startOffset":11027,"endOffset":11325,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":11407,"endOffset":11466,"count":1}],"isBlockCoverage":true},{"functionName":"_HTTPParserError","ranges":[{"startOffset":11474,"endOffset":11746,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":11860,"endOffset":11932,"count":1}],"isBlockCoverage":true},{"functionName":"_ResponseExceededMaxSizeError","ranges":[{"startOffset":11940,"endOffset":12247,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":12339,"endOffset":12400,"count":1}],"isBlockCoverage":true},{"functionName":"_RequestRetryError","ranges":[{"startOffset":12408,"endOffset":12784,"count":0}],"isBlockCoverage":false},{"functionName":"lib/core/constants.js","ranges":[{"startOffset":13496,"endOffset":16497,"count":1},{"startOffset":16134,"endOffset":16334,"count":95}],"isBlockCoverage":true},{"functionName":"lib/core/util.js","ranges":[{"startOffset":16562,"endOffset":32633,"count":1},{"startOffset":32521,"endOffset":32559,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17150,"endOffset":17166,"count":3}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":17174,"endOffset":17197,"count":0}],"isBlockCoverage":false},{"functionName":"isStream","ranges":[{"startOffset":17228,"endOffset":17371,"count":0}],"isBlockCoverage":false},{"functionName":"isBlobLike","ranges":[{"startOffset":17412,"endOffset":17673,"count":0}],"isBlockCoverage":false},{"functionName":"buildURL","ranges":[{"startOffset":17718,"endOffset":18061,"count":0}],"isBlockCoverage":false},{"functionName":"parseURL","ranges":[{"startOffset":18102,"endOffset":20345,"count":0}],"isBlockCoverage":false},{"functionName":"parseOrigin","ranges":[{"startOffset":20386,"endOffset":20593,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname","ranges":[{"startOffset":20640,"endOffset":20947,"count":0}],"isBlockCoverage":false},{"functionName":"getServerName","ranges":[{"startOffset":20994,"endOffset":21267,"count":0}],"isBlockCoverage":false},{"functionName":"deepClone","ranges":[{"startOffset":21318,"endOffset":21397,"count":1}],"isBlockCoverage":true},{"functionName":"isAsyncIterable","ranges":[{"startOffset":21440,"endOffset":21560,"count":0}],"isBlockCoverage":false},{"functionName":"isIterable","ranges":[{"startOffset":21615,"endOffset":21778,"count":0}],"isBlockCoverage":false},{"functionName":"bodyLength","ranges":[{"startOffset":21823,"endOffset":22305,"count":0}],"isBlockCoverage":false},{"functionName":"isDestroyed","ranges":[{"startOffset":22350,"endOffset":22460,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableAborted","ranges":[{"startOffset":22507,"endOffset":22673,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":22732,"endOffset":23315,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeepAliveTimeout","ranges":[{"startOffset":23405,"endOffset":23563,"count":0}],"isBlockCoverage":false},{"functionName":"headerNameToString","ranges":[{"startOffset":23630,"endOffset":23745,"count":0}],"isBlockCoverage":false},{"functionName":"parseHeaders","ranges":[{"startOffset":23806,"endOffset":24680,"count":0}],"isBlockCoverage":false},{"functionName":"parseRawHeaders","ranges":[{"startOffset":24729,"endOffset":25638,"count":0}],"isBlockCoverage":false},{"functionName":"isBuffer","ranges":[{"startOffset":25693,"endOffset":25798,"count":0}],"isBlockCoverage":false},{"functionName":"validateHandler","ranges":[{"startOffset":25839,"endOffset":27077,"count":0}],"isBlockCoverage":false},{"functionName":"isDisturbed","ranges":[{"startOffset":27132,"endOffset":27388,"count":0}],"isBlockCoverage":false},{"functionName":"isErrored","ranges":[{"startOffset":27435,"endOffset":27607,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":27650,"endOffset":27826,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketInfo","ranges":[{"startOffset":27871,"endOffset":28263,"count":0}],"isBlockCoverage":false},{"functionName":"convertIterableToBuffer","ranges":[{"startOffset":28314,"endOffset":28494,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamFrom","ranges":[{"startOffset":28590,"endOffset":29587,"count":0}],"isBlockCoverage":false},{"functionName":"isFormDataLike","ranges":[{"startOffset":29648,"endOffset":30010,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfAborted","ranges":[{"startOffset":30063,"endOffset":30431,"count":0}],"isBlockCoverage":false},{"functionName":"addAbortListener","ranges":[{"startOffset":30484,"endOffset":30834,"count":0}],"isBlockCoverage":false},{"functionName":"toUSVString","ranges":[{"startOffset":30951,"endOffset":31174,"count":0}],"isBlockCoverage":false},{"functionName":"parseRangeHeader","ranges":[{"startOffset":31221,"endOffset":31590,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/constants.js","ranges":[{"startOffset":32710,"endOffset":37455,"count":1},{"startOffset":36014,"endOffset":36156,"count":0},{"startOffset":36230,"endOffset":36872,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":36018,"endOffset":36153,"count":0}],"isBlockCoverage":true},{"functionName":"structuredClone2","ranges":[{"startOffset":36445,"endOffset":36852,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/global.js","ranges":[{"startOffset":37525,"endOffset":38619,"count":1}],"isBlockCoverage":true},{"functionName":"getGlobalOrigin","ranges":[{"startOffset":37653,"endOffset":37728,"count":0}],"isBlockCoverage":false},{"functionName":"setGlobalOrigin","ranges":[{"startOffset":37783,"endOffset":38485,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/util.js","ranges":[{"startOffset":38686,"endOffset":61584,"count":1},{"startOffset":39403,"endOffset":39417,"count":0},{"startOffset":60277,"endOffset":60344,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39346,"endOffset":39393,"count":52}],"isBlockCoverage":true},{"functionName":"responseURL","ranges":[{"startOffset":39423,"endOffset":39609,"count":0}],"isBlockCoverage":false},{"functionName":"responseLocationURL","ranges":[{"startOffset":39656,"endOffset":40116,"count":0}],"isBlockCoverage":false},{"functionName":"requestCurrentURL","ranges":[{"startOffset":40179,"endOffset":40282,"count":0}],"isBlockCoverage":false},{"functionName":"requestBadPort","ranges":[{"startOffset":40341,"endOffset":40559,"count":0}],"isBlockCoverage":false},{"functionName":"isErrorLike","ranges":[{"startOffset":40612,"endOffset":40779,"count":0}],"isBlockCoverage":false},{"functionName":"isValidReasonPhrase","ranges":[{"startOffset":40826,"endOffset":41152,"count":0}],"isBlockCoverage":false},{"functionName":"isTokenCharCode","ranges":[{"startOffset":41215,"endOffset":41670,"count":0}],"isBlockCoverage":false},{"functionName":"isValidHTTPToken","ranges":[{"startOffset":41725,"endOffset":42018,"count":0}],"isBlockCoverage":false},{"functionName":"isValidHeaderName","ranges":[{"startOffset":42075,"endOffset":42174,"count":0}],"isBlockCoverage":false},{"functionName":"isValidHeaderValue","ranges":[{"startOffset":42233,"endOffset":42622,"count":0}],"isBlockCoverage":false},{"functionName":"setRequestReferrerPolicyOnRedirect","ranges":[{"startOffset":42683,"endOffset":43275,"count":0}],"isBlockCoverage":false},{"functionName":"crossOriginResourcePolicyCheck","ranges":[{"startOffset":43368,"endOffset":43443,"count":0}],"isBlockCoverage":false},{"functionName":"corsCheck","ranges":[{"startOffset":43528,"endOffset":43582,"count":0}],"isBlockCoverage":false},{"functionName":"TAOCheck","ranges":[{"startOffset":43625,"endOffset":43678,"count":0}],"isBlockCoverage":false},{"functionName":"appendFetchMetadata","ranges":[{"startOffset":43719,"endOffset":43891,"count":0}],"isBlockCoverage":false},{"functionName":"appendRequestOriginHeader","ranges":[{"startOffset":43954,"endOffset":45105,"count":0}],"isBlockCoverage":false},{"functionName":"coarsenedSharedCurrentTime","ranges":[{"startOffset":45180,"endOffset":45289,"count":0}],"isBlockCoverage":false},{"functionName":"createOpaqueTimingInfo","ranges":[{"startOffset":45366,"endOffset":45856,"count":0}],"isBlockCoverage":false},{"functionName":"makePolicyContainer","ranges":[{"startOffset":45925,"endOffset":46049,"count":0}],"isBlockCoverage":false},{"functionName":"clonePolicyContainer","ranges":[{"startOffset":46112,"endOffset":46249,"count":0}],"isBlockCoverage":false},{"functionName":"determineRequestsReferrer","ranges":[{"startOffset":46314,"endOffset":48251,"count":0}],"isBlockCoverage":false},{"functionName":"stripURLForReferrer","ranges":[{"startOffset":48326,"endOffset":48733,"count":0}],"isBlockCoverage":false},{"functionName":"isURLPotentiallyTrustworthy","ranges":[{"startOffset":48796,"endOffset":49872,"count":0}],"isBlockCoverage":false},{"functionName":"bytesMatch","ranges":[{"startOffset":49951,"endOffset":51024,"count":0}],"isBlockCoverage":false},{"functionName":"parseMetadata","ranges":[{"startOffset":51202,"endOffset":51844,"count":0}],"isBlockCoverage":false},{"functionName":"getStrongestMetadata","ranges":[{"startOffset":51895,"endOffset":52444,"count":0}],"isBlockCoverage":false},{"functionName":"filterMetadataListByAlgorithm","ranges":[{"startOffset":52509,"endOffset":52918,"count":0}],"isBlockCoverage":false},{"functionName":"compareBase64Mixed","ranges":[{"startOffset":53001,"endOffset":53485,"count":0}],"isBlockCoverage":false},{"functionName":"tryUpgradeRequestToAPotentiallyTrustworthyURL","ranges":[{"startOffset":53546,"endOffset":53618,"count":0}],"isBlockCoverage":false},{"functionName":"sameOrigin","ranges":[{"startOffset":53733,"endOffset":53999,"count":0}],"isBlockCoverage":false},{"functionName":"createDeferredPromise","ranges":[{"startOffset":54044,"endOffset":54287,"count":0}],"isBlockCoverage":false},{"functionName":"isAborted","ranges":[{"startOffset":54354,"endOffset":54452,"count":0}],"isBlockCoverage":false},{"functionName":"isCancelled","ranges":[{"startOffset":54495,"endOffset":54644,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeMethod","ranges":[{"startOffset":55054,"endOffset":55164,"count":0}],"isBlockCoverage":false},{"functionName":"serializeJavascriptValueToJSONString","ranges":[{"startOffset":55219,"endOffset":55495,"count":0}],"isBlockCoverage":false},{"functionName":"makeIterator","ranges":[{"startOffset":55692,"endOffset":56792,"count":0}],"isBlockCoverage":false},{"functionName":"iteratorResult","ranges":[{"startOffset":56841,"endOffset":57230,"count":0}],"isBlockCoverage":false},{"functionName":"fullyReadBody","ranges":[{"startOffset":57283,"endOffset":57738,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableStreamLike","ranges":[{"startOffset":57842,"endOffset":58126,"count":0}],"isBlockCoverage":false},{"functionName":"isomorphicDecode","ranges":[{"startOffset":58233,"endOffset":58479,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamClose","ranges":[{"startOffset":58536,"endOffset":58762,"count":0}],"isBlockCoverage":false},{"functionName":"isomorphicEncode","ranges":[{"startOffset":58825,"endOffset":58989,"count":0}],"isBlockCoverage":false},{"functionName":"readAllBytes","ranges":[{"startOffset":59046,"endOffset":59496,"count":0}],"isBlockCoverage":false},{"functionName":"urlIsLocal","ranges":[{"startOffset":59545,"endOffset":59735,"count":0}],"isBlockCoverage":false},{"functionName":"urlHasHttpsScheme","ranges":[{"startOffset":59780,"endOffset":59950,"count":0}],"isBlockCoverage":false},{"functionName":"urlIsHttpHttpsScheme","ranges":[{"startOffset":60009,"endOffset":60185,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwn","ranges":[{"startOffset":60281,"endOffset":60343,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/webidl.js","ranges":[{"startOffset":61654,"endOffset":74184,"count":1}],"isBlockCoverage":true},{"functionName":"webidl.errors.exception","ranges":[{"startOffset":61936,"endOffset":62032,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.errors.conversionFailed","ranges":[{"startOffset":62072,"endOffset":62377,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.errors.invalidArgument","ranges":[{"startOffset":62416,"endOffset":62596,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.brandCheck","ranges":[{"startOffset":62623,"endOffset":62873,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.argumentLengthCheck","ranges":[{"startOffset":62909,"endOffset":63173,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.illegalConstructor","ranges":[{"startOffset":63208,"endOffset":63347,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.util.Type","ranges":[{"startOffset":63373,"endOffset":63910,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.util.ConvertToInt","ranges":[{"startOffset":63944,"endOffset":65864,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.util.IntegerPart","ranges":[{"startOffset":65897,"endOffset":66029,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.sequenceConverter","ranges":[{"startOffset":66063,"endOffset":66854,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":66099,"endOffset":66846,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.recordConverter","ranges":[{"startOffset":66886,"endOffset":67909,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":66941,"endOffset":67901,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.interfaceConverter","ranges":[{"startOffset":67944,"endOffset":68254,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":67972,"endOffset":68246,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.dictionaryConverter","ranges":[{"startOffset":68290,"endOffset":69843,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":68327,"endOffset":69835,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.nullableConverter","ranges":[{"startOffset":69877,"endOffset":70027,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":69913,"endOffset":70019,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.DOMString","ranges":[{"startOffset":70064,"endOffset":70337,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.ByteString","ranges":[{"startOffset":70375,"endOffset":70785,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.boolean","ranges":[{"startOffset":70868,"endOffset":70934,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.any","ranges":[{"startOffset":70965,"endOffset":71002,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.long long","ranges":[{"startOffset":71042,"endOffset":71139,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.unsigned long long","ranges":[{"startOffset":71188,"endOffset":71287,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.unsigned long","ranges":[{"startOffset":71331,"endOffset":71430,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.unsigned short","ranges":[{"startOffset":71475,"endOffset":71586,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.ArrayBuffer","ranges":[{"startOffset":71625,"endOffset":72136,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.TypedArray","ranges":[{"startOffset":72174,"endOffset":72722,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.DataView","ranges":[{"startOffset":72758,"endOffset":73252,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.BufferSource","ranges":[{"startOffset":73292,"endOffset":73706,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/headers.js","ranges":[{"startOffset":74256,"endOffset":88104,"count":1}],"isBlockCoverage":true},{"functionName":"isHTTPWhiteSpaceCharCode","ranges":[{"startOffset":74768,"endOffset":74887,"count":0}],"isBlockCoverage":false},{"functionName":"headerValueNormalize","ranges":[{"startOffset":74960,"endOffset":75364,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":75429,"endOffset":76389,"count":0}],"isBlockCoverage":false},{"functionName":"appendHeader","ranges":[{"startOffset":76422,"endOffset":77127,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":77194,"endOffset":80050,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":77222,"endOffset":77277,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":80095,"endOffset":80146,"count":1}],"isBlockCoverage":true},{"functionName":"_Headers","ranges":[{"startOffset":80154,"endOffset":80465,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":80533,"endOffset":80843,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":80911,"endOffset":81607,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":81672,"endOffset":82123,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":82188,"endOffset":82644,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":82709,"endOffset":83630,"count":0}],"isBlockCoverage":false},{"functionName":"getSetCookie","ranges":[{"startOffset":83704,"endOffset":83904,"count":0}],"isBlockCoverage":false},{"functionName":"Headers","ranges":[{"startOffset":83990,"endOffset":84774,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":84782,"endOffset":85201,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":85209,"endOffset":85634,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":85642,"endOffset":86076,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":86223,"endOffset":86716,"count":0}],"isBlockCoverage":false},{"functionName":"Headers","ranges":[{"startOffset":86724,"endOffset":86859,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.HeadersInit","ranges":[{"startOffset":87534,"endOffset":88017,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/@fastify/busboy/deps/streamsearch/sbmh.js","ranges":[{"startOffset":88207,"endOffset":92847,"count":1}],"isBlockCoverage":true},{"functionName":"SBMH","ranges":[{"startOffset":88421,"endOffset":89315,"count":0}],"isBlockCoverage":false},{"functionName":"SBMH.reset","ranges":[{"startOffset":89406,"endOffset":89509,"count":0}],"isBlockCoverage":false},{"functionName":"SBMH.push","ranges":[{"startOffset":89538,"endOffset":89868,"count":0}],"isBlockCoverage":false},{"functionName":"SBMH._sbmh_feed","ranges":[{"startOffset":89903,"endOffset":92411,"count":0}],"isBlockCoverage":false},{"functionName":"SBMH._sbmh_lookup_char","ranges":[{"startOffset":92453,"endOffset":92564,"count":0}],"isBlockCoverage":false},{"functionName":"SBMH._sbmh_memcmp","ranges":[{"startOffset":92601,"endOffset":92812,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/@fastify/busboy/deps/dicer/lib/PartStream.js","ranges":[{"startOffset":92959,"endOffset":93426,"count":1}],"isBlockCoverage":true},{"functionName":"PartStream","ranges":[{"startOffset":93174,"endOffset":93248,"count":0}],"isBlockCoverage":false},{"functionName":"PartStream._read","ranges":[{"startOffset":93365,"endOffset":93385,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/@fastify/busboy/lib/utils/getLimit.js","ranges":[{"startOffset":93529,"endOffset":94035,"count":1}],"isBlockCoverage":true},{"functionName":"getLimit","ranges":[{"startOffset":93668,"endOffset":94016,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/@fastify/busboy/deps/dicer/lib/HeaderParser.js","ranges":[{"startOffset":94151,"endOffset":97298,"count":1}],"isBlockCoverage":true},{"functionName":"HeaderParser","ranges":[{"startOffset":94575,"endOffset":95551,"count":0}],"isBlockCoverage":false},{"functionName":"HeaderParser.push","ranges":[{"startOffset":95673,"endOffset":95789,"count":0}],"isBlockCoverage":false},{"functionName":"HeaderParser.reset","ranges":[{"startOffset":95827,"endOffset":95950,"count":0}],"isBlockCoverage":false},{"functionName":"HeaderParser._finish","ranges":[{"startOffset":95990,"endOffset":96333,"count":0}],"isBlockCoverage":false},{"functionName":"HeaderParser._parseHeader","ranges":[{"startOffset":96378,"endOffset":97255,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/@fastify/busboy/deps/dicer/lib/Dicer.js","ranges":[{"startOffset":97400,"endOffset":105031,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":97878,"endOffset":97897,"count":0}],"isBlockCoverage":false},{"functionName":"Dicer","ranges":[{"startOffset":97917,"endOffset":99014,"count":0}],"isBlockCoverage":false},{"functionName":"Dicer.emit","ranges":[{"startOffset":99110,"endOffset":100093,"count":0}],"isBlockCoverage":false},{"functionName":"Dicer._write","ranges":[{"startOffset":100125,"endOffset":100994,"count":0}],"isBlockCoverage":false},{"functionName":"Dicer.reset","ranges":[{"startOffset":101025,"endOffset":101134,"count":0}],"isBlockCoverage":false},{"functionName":"Dicer.setBoundary","ranges":[{"startOffset":101171,"endOffset":101417,"count":0}],"isBlockCoverage":false},{"functionName":"Dicer._ignore","ranges":[{"startOffset":101450,"endOffset":101631,"count":0}],"isBlockCoverage":false},{"functionName":"Dicer._oninfo","ranges":[{"startOffset":101664,"endOffset":104756,"count":0}],"isBlockCoverage":false},{"functionName":"Dicer._unpause","ranges":[{"startOffset":104790,"endOffset":104995,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/@fastify/busboy/lib/utils/decodeText.js","ranges":[{"startOffset":105138,"endOffset":108252,"count":1}],"isBlockCoverage":true},{"functionName":"getDecoder","ranges":[{"startOffset":105406,"endOffset":106389,"count":0}],"isBlockCoverage":false},{"functionName":"utf8","ranges":[{"startOffset":106464,"endOffset":106720,"count":0}],"isBlockCoverage":false},{"functionName":"latin1","ranges":[{"startOffset":106737,"endOffset":106966,"count":0}],"isBlockCoverage":false},{"functionName":"utf16le","ranges":[{"startOffset":106984,"endOffset":107240,"count":0}],"isBlockCoverage":false},{"functionName":"base64","ranges":[{"startOffset":107257,"endOffset":107515,"count":0}],"isBlockCoverage":false},{"functionName":"other","ranges":[{"startOffset":107531,"endOffset":107983,"count":0}],"isBlockCoverage":false},{"functionName":"decodeText","ranges":[{"startOffset":107997,"endOffset":108173,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/@fastify/busboy/lib/utils/parseParams.js","ranges":[{"startOffset":108361,"endOffset":121775,"count":1}],"isBlockCoverage":true},{"functionName":"encodedReplacer","ranges":[{"startOffset":118737,"endOffset":118813,"count":0}],"isBlockCoverage":false},{"functionName":"parseParams","ranges":[{"startOffset":118971,"endOffset":121693,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/@fastify/busboy/lib/utils/basename.js","ranges":[{"startOffset":121878,"endOffset":122446,"count":1}],"isBlockCoverage":true},{"functionName":"basename","ranges":[{"startOffset":122017,"endOffset":122427,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/@fastify/busboy/lib/types/multipart.js","ranges":[{"startOffset":122551,"endOffset":132460,"count":1}],"isBlockCoverage":true},{"functionName":"Multipart","ranges":[{"startOffset":123176,"endOffset":131480,"count":0}],"isBlockCoverage":false},{"functionName":"Multipart.write","ranges":[{"startOffset":131551,"endOffset":131749,"count":0}],"isBlockCoverage":false},{"functionName":"Multipart.end","ranges":[{"startOffset":131782,"endOffset":132061,"count":0}],"isBlockCoverage":false},{"functionName":"skipPart","ranges":[{"startOffset":132068,"endOffset":132122,"count":0}],"isBlockCoverage":false},{"functionName":"FileStream","ranges":[{"startOffset":132163,"endOffset":132289,"count":0}],"isBlockCoverage":false},{"functionName":"FileStream._read","ranges":[{"startOffset":132400,"endOffset":132420,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/@fastify/busboy/lib/utils/Decoder.js","ranges":[{"startOffset":132561,"endOffset":135146,"count":1}],"isBlockCoverage":true},{"functionName":"Decoder","ranges":[{"startOffset":133988,"endOffset":134044,"count":0}],"isBlockCoverage":false},{"functionName":"Decoder.write","ranges":[{"startOffset":134109,"endOffset":135027,"count":0}],"isBlockCoverage":false},{"functionName":"Decoder.reset","ranges":[{"startOffset":135060,"endOffset":135108,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/@fastify/busboy/lib/types/urlencoded.js","ranges":[{"startOffset":135253,"endOffset":142265,"count":1}],"isBlockCoverage":true},{"functionName":"UrlEncoded","ranges":[{"startOffset":135576,"endOffset":136638,"count":0}],"isBlockCoverage":false},{"functionName":"UrlEncoded.write","ranges":[{"startOffset":136712,"endOffset":141544,"count":0}],"isBlockCoverage":false},{"functionName":"UrlEncoded.end","ranges":[{"startOffset":141578,"endOffset":142224,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/@fastify/busboy/lib/main.js","ranges":[{"startOffset":142354,"endOffset":144957,"count":1}],"isBlockCoverage":true},{"functionName":"Busboy","ranges":[{"startOffset":142725,"endOffset":143556,"count":0}],"isBlockCoverage":false},{"functionName":"Busboy.emit","ranges":[{"startOffset":143656,"endOffset":143956,"count":0}],"isBlockCoverage":false},{"functionName":"Busboy.getParserByHeaders","ranges":[{"startOffset":144001,"endOffset":144698,"count":0}],"isBlockCoverage":false},{"functionName":"Busboy._write","ranges":[{"startOffset":144731,"endOffset":144807,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/dataURL.js","ranges":[{"startOffset":145029,"endOffset":155722,"count":1}],"isBlockCoverage":true},{"functionName":"dataURLProcessor","ranges":[{"startOffset":145456,"endOffset":146809,"count":0}],"isBlockCoverage":false},{"functionName":"URLSerializer","ranges":[{"startOffset":146866,"endOffset":147151,"count":0}],"isBlockCoverage":false},{"functionName":"collectASequenceOfCodePoints","ranges":[{"startOffset":147202,"endOffset":147495,"count":0}],"isBlockCoverage":false},{"functionName":"collectASequenceOfCodePointsFast","ranges":[{"startOffset":147576,"endOffset":147946,"count":0}],"isBlockCoverage":false},{"functionName":"stringPercentDecode","ranges":[{"startOffset":148035,"endOffset":148159,"count":0}],"isBlockCoverage":false},{"functionName":"percentDecode","ranges":[{"startOffset":148222,"endOffset":148841,"count":0}],"isBlockCoverage":false},{"functionName":"parseMIMEType","ranges":[{"startOffset":148892,"endOffset":151749,"count":0}],"isBlockCoverage":false},{"functionName":"forgivingBase64","ranges":[{"startOffset":151800,"endOffset":152368,"count":0}],"isBlockCoverage":false},{"functionName":"collectAnHTTPQuotedString","ranges":[{"startOffset":152423,"endOffset":153440,"count":0}],"isBlockCoverage":false},{"functionName":"serializeAMimeType","ranges":[{"startOffset":153515,"endOffset":154079,"count":0}],"isBlockCoverage":false},{"functionName":"isHTTPWhiteSpace","ranges":[{"startOffset":154140,"endOffset":154258,"count":0}],"isBlockCoverage":false},{"functionName":"removeHTTPWhitespace","ranges":[{"startOffset":154315,"endOffset":154720,"count":0}],"isBlockCoverage":false},{"functionName":"isASCIIWhitespace","ranges":[{"startOffset":154785,"endOffset":154921,"count":0}],"isBlockCoverage":false},{"functionName":"removeASCIIWhitespace","ranges":[{"startOffset":154980,"endOffset":155388,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/file.js","ranges":[{"startOffset":155788,"endOffset":162048,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":156283,"endOffset":156331,"count":1}],"isBlockCoverage":true},{"functionName":"_File","ranges":[{"startOffset":156339,"endOffset":157212,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":157220,"endOffset":157317,"count":0}],"isBlockCoverage":false},{"functionName":"get lastModified","ranges":[{"startOffset":157325,"endOffset":157438,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":157446,"endOffset":157543,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":157597,"endOffset":157649,"count":1}],"isBlockCoverage":true},{"functionName":"_FileLike","ranges":[{"startOffset":157657,"endOffset":157956,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":157964,"endOffset":158090,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBuffer","ranges":[{"startOffset":158098,"endOffset":158234,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":158242,"endOffset":158366,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":158374,"endOffset":158496,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":158504,"endOffset":158614,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":158622,"endOffset":158732,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":158740,"endOffset":158841,"count":0}],"isBlockCoverage":false},{"functionName":"get lastModified","ranges":[{"startOffset":158849,"endOffset":158966,"count":0}],"isBlockCoverage":false},{"functionName":"FileLike","ranges":[{"startOffset":158974,"endOffset":159035,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.BlobPart","ranges":[{"startOffset":159366,"endOffset":159742,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultValue","ranges":[{"startOffset":160029,"endOffset":160090,"count":0}],"isBlockCoverage":false},{"functionName":"converter","ranges":[{"startOffset":160271,"endOffset":160500,"count":0}],"isBlockCoverage":false},{"functionName":"processBlobParts","ranges":[{"startOffset":160562,"endOffset":161341,"count":0}],"isBlockCoverage":false},{"functionName":"convertLineEndingsNative","ranges":[{"startOffset":161398,"endOffset":161620,"count":0}],"isBlockCoverage":false},{"functionName":"isFileLike","ranges":[{"startOffset":161693,"endOffset":161949,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/formdata.js","ranges":[{"startOffset":162122,"endOffset":168389,"count":1},{"startOffset":162499,"endOffset":162512,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":162559,"endOffset":162611,"count":1}],"isBlockCoverage":true},{"functionName":"_FormData","ranges":[{"startOffset":162619,"endOffset":162899,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":162907,"endOffset":163652,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":163660,"endOffset":163938,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":163946,"endOffset":164321,"count":0}],"isBlockCoverage":false},{"functionName":"getAll","ranges":[{"startOffset":164329,"endOffset":164627,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":164635,"endOffset":164909,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":164917,"endOffset":165965,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":165973,"endOffset":166196,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":166204,"endOffset":166418,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":166426,"endOffset":166644,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":166792,"endOffset":167288,"count":0}],"isBlockCoverage":false},{"functionName":"makeEntry","ranges":[{"startOffset":167529,"endOffset":168310,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/body.js","ranges":[{"startOffset":168455,"endOffset":182917,"count":1},{"startOffset":169413,"endOffset":169426,"count":0}],"isBlockCoverage":true},{"functionName":"extractBody","ranges":[{"startOffset":169517,"endOffset":174518,"count":0}],"isBlockCoverage":false},{"functionName":"safelyExtractBody","ranges":[{"startOffset":174565,"endOffset":174973,"count":0}],"isBlockCoverage":false},{"functionName":"cloneBody","ranges":[{"startOffset":175032,"endOffset":175370,"count":0}],"isBlockCoverage":false},{"functionName":"consumeBody","ranges":[{"startOffset":175413,"endOffset":175905,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfAborted","ranges":[{"startOffset":175952,"endOffset":176105,"count":0}],"isBlockCoverage":false},{"functionName":"bodyMixinMethods","ranges":[{"startOffset":176158,"endOffset":180687,"count":2}],"isBlockCoverage":true},{"functionName":"blob","ranges":[{"startOffset":176230,"endOffset":176615,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBuffer","ranges":[{"startOffset":176626,"endOffset":176780,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":176791,"endOffset":176878,"count":0}],"isBlockCoverage":false},{"functionName":"json","ranges":[{"startOffset":176889,"endOffset":176979,"count":0}],"isBlockCoverage":false},{"functionName":"formData","ranges":[{"startOffset":176990,"endOffset":180647,"count":0}],"isBlockCoverage":false},{"functionName":"mixinBody","ranges":[{"startOffset":180744,"endOffset":180854,"count":2}],"isBlockCoverage":true},{"functionName":"specConsumeBody","ranges":[{"startOffset":180897,"endOffset":181766,"count":0}],"isBlockCoverage":false},{"functionName":"bodyUnusable","ranges":[{"startOffset":181821,"endOffset":181942,"count":0}],"isBlockCoverage":false},{"functionName":"utf8DecodeBytes","ranges":[{"startOffset":181991,"endOffset":182288,"count":0}],"isBlockCoverage":false},{"functionName":"parseJSONFromBytes","ranges":[{"startOffset":182343,"endOffset":182436,"count":0}],"isBlockCoverage":false},{"functionName":"bodyMimeType","ranges":[{"startOffset":182497,"endOffset":182755,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/response.js","ranges":[{"startOffset":182991,"endOffset":197197,"count":1},{"startOffset":184011,"endOffset":184050,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":184146,"endOffset":184198,"count":1}],"isBlockCoverage":true},{"functionName":"error","ranges":[{"startOffset":184255,"endOffset":184714,"count":0}],"isBlockCoverage":false},{"functionName":"json","ranges":[{"startOffset":184788,"endOffset":185544,"count":0}],"isBlockCoverage":false},{"functionName":"redirect","ranges":[{"startOffset":185639,"endOffset":186738,"count":0}],"isBlockCoverage":false},{"functionName":"_Response","ranges":[{"startOffset":186800,"endOffset":187540,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":187597,"endOffset":187698,"count":0}],"isBlockCoverage":false},{"functionName":"get url","ranges":[{"startOffset":187783,"endOffset":188057,"count":0}],"isBlockCoverage":false},{"functionName":"get redirected","ranges":[{"startOffset":188133,"endOffset":188254,"count":0}],"isBlockCoverage":false},{"functionName":"get status","ranges":[{"startOffset":188299,"endOffset":188404,"count":0}],"isBlockCoverage":false},{"functionName":"get ok","ranges":[{"startOffset":188473,"endOffset":188611,"count":0}],"isBlockCoverage":false},{"functionName":"get statusText","ranges":[{"startOffset":188664,"endOffset":188777,"count":0}],"isBlockCoverage":false},{"functionName":"get headers","ranges":[{"startOffset":188834,"endOffset":188935,"count":0}],"isBlockCoverage":false},{"functionName":"get body","ranges":[{"startOffset":188943,"endOffset":189078,"count":0}],"isBlockCoverage":false},{"functionName":"get bodyUsed","ranges":[{"startOffset":189086,"endOffset":189239,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":189286,"endOffset":190072,"count":0}],"isBlockCoverage":false},{"functionName":"cloneResponse","ranges":[{"startOffset":190783,"endOffset":191191,"count":0}],"isBlockCoverage":false},{"functionName":"makeResponse","ranges":[{"startOffset":191242,"endOffset":191735,"count":0}],"isBlockCoverage":false},{"functionName":"makeNetworkError","ranges":[{"startOffset":191784,"endOffset":192091,"count":0}],"isBlockCoverage":false},{"functionName":"makeFilteredResponse","ranges":[{"startOffset":192148,"endOffset":192555,"count":0}],"isBlockCoverage":false},{"functionName":"filterResponse","ranges":[{"startOffset":192620,"endOffset":193531,"count":0}],"isBlockCoverage":false},{"functionName":"makeAppropriateNetworkError","ranges":[{"startOffset":193584,"endOffset":193939,"count":0}],"isBlockCoverage":false},{"functionName":"initializeResponse","ranges":[{"startOffset":194018,"endOffset":195303,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.XMLHttpRequestBodyInit","ranges":[{"startOffset":195688,"endOffset":196309,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.BodyInit","ranges":[{"startOffset":196345,"endOffset":196596,"count":0}],"isBlockCoverage":false},{"functionName":"lib/compat/dispatcher-weakref.js","ranges":[{"startOffset":197292,"endOffset":198543,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":197459,"endOffset":197516,"count":1}],"isBlockCoverage":true},{"functionName":"CompatWeakRef","ranges":[{"startOffset":197524,"endOffset":197582,"count":0}],"isBlockCoverage":false},{"functionName":"deref","ranges":[{"startOffset":197590,"endOffset":197703,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":197754,"endOffset":197813,"count":1}],"isBlockCoverage":true},{"functionName":"CompatFinalizer","ranges":[{"startOffset":197821,"endOffset":197891,"count":2}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":197899,"endOffset":198165,"count":0}],"isBlockCoverage":false},{"functionName":"module2.exports","ranges":[{"startOffset":198197,"endOffset":198537,"count":2},{"startOffset":198375,"endOffset":198441,"count":0},{"startOffset":198502,"endOffset":198520,"count":0}],"isBlockCoverage":true},{"functionName":"lib/fetch/request.js","ranges":[{"startOffset":198615,"endOffset":222984,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":199939,"endOffset":200021,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":200067,"endOffset":200118,"count":1}],"isBlockCoverage":true},{"functionName":"_Request","ranges":[{"startOffset":200179,"endOffset":211802,"count":0}],"isBlockCoverage":false},{"functionName":"get method","ranges":[{"startOffset":211878,"endOffset":211982,"count":0}],"isBlockCoverage":false},{"functionName":"get url","ranges":[{"startOffset":212040,"endOffset":212153,"count":0}],"isBlockCoverage":false},{"functionName":"get headers","ranges":[{"startOffset":212397,"endOffset":212497,"count":0}],"isBlockCoverage":false},{"functionName":"get destination","ranges":[{"startOffset":212606,"endOffset":212720,"count":0}],"isBlockCoverage":false},{"functionName":"get referrer","ranges":[{"startOffset":213078,"endOffset":213382,"count":0}],"isBlockCoverage":false},{"functionName":"get referrerPolicy","ranges":[{"startOffset":213550,"endOffset":213670,"count":0}],"isBlockCoverage":false},{"functionName":"get mode","ranges":[{"startOffset":213857,"endOffset":213957,"count":0}],"isBlockCoverage":false},{"functionName":"get credentials","ranges":[{"startOffset":214183,"endOffset":214253,"count":0}],"isBlockCoverage":false},{"functionName":"get cache","ranges":[{"startOffset":214438,"endOffset":214540,"count":0}],"isBlockCoverage":false},{"functionName":"get redirect","ranges":[{"startOffset":214775,"endOffset":214883,"count":0}],"isBlockCoverage":false},{"functionName":"get integrity","ranges":[{"startOffset":215101,"endOffset":215211,"count":0}],"isBlockCoverage":false},{"functionName":"get keepalive","ranges":[{"startOffset":215339,"endOffset":215449,"count":0}],"isBlockCoverage":false},{"functionName":"get isReloadNavigation","ranges":[{"startOffset":215557,"endOffset":215683,"count":0}],"isBlockCoverage":false},{"functionName":"get isHistoryNavigation","ranges":[{"startOffset":215824,"endOffset":215952,"count":0}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":216146,"endOffset":216244,"count":0}],"isBlockCoverage":false},{"functionName":"get body","ranges":[{"startOffset":216252,"endOffset":216386,"count":0}],"isBlockCoverage":false},{"functionName":"get bodyUsed","ranges":[{"startOffset":216394,"endOffset":216546,"count":0}],"isBlockCoverage":false},{"functionName":"get duplex","ranges":[{"startOffset":216554,"endOffset":216645,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":216691,"endOffset":217774,"count":0}],"isBlockCoverage":false},{"functionName":"makeRequest","ranges":[{"startOffset":217813,"endOffset":219132,"count":0}],"isBlockCoverage":false},{"functionName":"cloneRequest","ranges":[{"startOffset":219179,"endOffset":219407,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.RequestInfo","ranges":[{"startOffset":220495,"endOffset":220744,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":222579,"endOffset":222686,"count":0}],"isBlockCoverage":false},{"functionName":"lib/dispatcher.js","ranges":[{"startOffset":223056,"endOffset":223537,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":223217,"endOffset":223271,"count":1}],"isBlockCoverage":true},{"functionName":"dispatch","ranges":[{"startOffset":223279,"endOffset":223345,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":223353,"endOffset":223416,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":223424,"endOffset":223489,"count":0}],"isBlockCoverage":false},{"functionName":"lib/dispatcher-base.js","ranges":[{"startOffset":223619,"endOffset":229148,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":224218,"endOffset":224276,"count":1}],"isBlockCoverage":true},{"functionName":"DispatcherBase","ranges":[{"startOffset":224284,"endOffset":224460,"count":1}],"isBlockCoverage":true},{"functionName":"get destroyed","ranges":[{"startOffset":224468,"endOffset":224528,"count":0}],"isBlockCoverage":false},{"functionName":"get closed","ranges":[{"startOffset":224536,"endOffset":224590,"count":0}],"isBlockCoverage":false},{"functionName":"get interceptors","ranges":[{"startOffset":224598,"endOffset":224664,"count":0}],"isBlockCoverage":false},{"functionName":"set interceptors","ranges":[{"startOffset":224672,"endOffset":225095,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":225103,"endOffset":226306,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":226314,"endOffset":227738,"count":0}],"isBlockCoverage":false},{"functionName":"DispatcherBase","ranges":[{"startOffset":227746,"endOffset":228262,"count":0}],"isBlockCoverage":false},{"functionName":"dispatch","ranges":[{"startOffset":228270,"endOffset":229096,"count":0}],"isBlockCoverage":false},{"functionName":"lib/node/fixed-queue.js","ranges":[{"startOffset":229227,"endOffset":230781,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":229390,"endOffset":229453,"count":1}],"isBlockCoverage":true},{"functionName":"FixedCircularBuffer","ranges":[{"startOffset":229461,"endOffset":229600,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":229608,"endOffset":229670,"count":0}],"isBlockCoverage":false},{"functionName":"isFull","ranges":[{"startOffset":229678,"endOffset":229753,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":229761,"endOffset":229861,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":229869,"endOffset":230111,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":230169,"endOffset":230223,"count":1}],"isBlockCoverage":true},{"functionName":"FixedQueue","ranges":[{"startOffset":230231,"endOffset":230315,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":230323,"endOffset":230380,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":230388,"endOffset":230553,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":230561,"endOffset":230768,"count":0}],"isBlockCoverage":false},{"functionName":"lib/pool-stats.js","ranges":[{"startOffset":230853,"endOffset":231632,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":231051,"endOffset":231104,"count":1}],"isBlockCoverage":true},{"functionName":"PoolStats","ranges":[{"startOffset":231112,"endOffset":231169,"count":0}],"isBlockCoverage":false},{"functionName":"get connected","ranges":[{"startOffset":231177,"endOffset":231244,"count":0}],"isBlockCoverage":false},{"functionName":"get free","ranges":[{"startOffset":231252,"endOffset":231309,"count":0}],"isBlockCoverage":false},{"functionName":"get pending","ranges":[{"startOffset":231317,"endOffset":231380,"count":0}],"isBlockCoverage":false},{"functionName":"get queued","ranges":[{"startOffset":231388,"endOffset":231449,"count":0}],"isBlockCoverage":false},{"functionName":"get running","ranges":[{"startOffset":231457,"endOffset":231520,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":231528,"endOffset":231585,"count":0}],"isBlockCoverage":false},{"functionName":"lib/pool-base.js","ranges":[{"startOffset":231702,"endOffset":237063,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":232630,"endOffset":232682,"count":1}],"isBlockCoverage":true},{"functionName":"PoolBase","ranges":[{"startOffset":232690,"endOffset":234118,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":234126,"endOffset":234184,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":234192,"endOffset":234299,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":234307,"endOffset":234432,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":234440,"endOffset":234625,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":234633,"endOffset":234806,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":234814,"endOffset":234987,"count":0}],"isBlockCoverage":false},{"functionName":"get stats","ranges":[{"startOffset":234995,"endOffset":235047,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":235055,"endOffset":235324,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":235332,"endOffset":235612,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":235620,"endOffset":236052,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":236060,"endOffset":236522,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":236530,"endOffset":236901,"count":0}],"isBlockCoverage":false},{"functionName":"lib/timers.js","ranges":[{"startOffset":237127,"endOffset":239414,"count":1}],"isBlockCoverage":true},{"functionName":"onTimeout","ranges":[{"startOffset":237270,"endOffset":238042,"count":0}],"isBlockCoverage":false},{"functionName":"refreshTimeout","ranges":[{"startOffset":238085,"endOffset":238410,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":238492,"endOffset":238543,"count":1}],"isBlockCoverage":true},{"functionName":"Timeout","ranges":[{"startOffset":238551,"endOffset":238744,"count":0}],"isBlockCoverage":false},{"functionName":"refresh","ranges":[{"startOffset":238752,"endOffset":238981,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":238989,"endOffset":239033,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":239074,"endOffset":239226,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":239235,"endOffset":239401,"count":0}],"isBlockCoverage":false},{"functionName":"lib/core/request.js","ranges":[{"startOffset":239486,"endOffset":254750,"count":1},{"startOffset":240528,"endOffset":240806,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":240850,"endOffset":240901,"count":1}],"isBlockCoverage":true},{"functionName":"_Request","ranges":[{"startOffset":240909,"endOffset":246814,"count":0}],"isBlockCoverage":false},{"functionName":"onBodySent","ranges":[{"startOffset":246822,"endOffset":247044,"count":0}],"isBlockCoverage":false},{"functionName":"onRequestSent","ranges":[{"startOffset":247052,"endOffset":247390,"count":0}],"isBlockCoverage":false},{"functionName":"onConnect","ranges":[{"startOffset":247398,"endOffset":247659,"count":0}],"isBlockCoverage":false},{"functionName":"onHeaders","ranges":[{"startOffset":247667,"endOffset":248120,"count":0}],"isBlockCoverage":false},{"functionName":"onData","ranges":[{"startOffset":248128,"endOffset":248370,"count":0}],"isBlockCoverage":false},{"functionName":"onUpgrade","ranges":[{"startOffset":248378,"endOffset":248564,"count":0}],"isBlockCoverage":false},{"functionName":"onComplete","ranges":[{"startOffset":248572,"endOffset":248957,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":248965,"endOffset":249271,"count":0}],"isBlockCoverage":false},{"functionName":"onFinally","ranges":[{"startOffset":249279,"endOffset":249565,"count":0}],"isBlockCoverage":false},{"functionName":"addHeader","ranges":[{"startOffset":249610,"endOffset":249706,"count":0}],"isBlockCoverage":false},{"functionName":"Request","ranges":[{"startOffset":249721,"endOffset":249828,"count":0}],"isBlockCoverage":false},{"functionName":"Request","ranges":[{"startOffset":249843,"endOffset":250811,"count":0}],"isBlockCoverage":false},{"functionName":"Request","ranges":[{"startOffset":250826,"endOffset":251266,"count":0}],"isBlockCoverage":false},{"functionName":"processHeaderValue","ranges":[{"startOffset":251280,"endOffset":251679,"count":0}],"isBlockCoverage":false},{"functionName":"processHeader","ranges":[{"startOffset":251740,"endOffset":254668,"count":0}],"isBlockCoverage":false},{"functionName":"lib/core/connect.js","ranges":[{"startOffset":254821,"endOffset":260843,"count":1},{"startOffset":255166,"endOffset":256254,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":255224,"endOffset":255288,"count":0}],"isBlockCoverage":true},{"functionName":"WeakSessionCache","ranges":[{"startOffset":255298,"endOffset":255834,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":255844,"endOffset":255975,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":255985,"endOffset":256237,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":256320,"endOffset":256386,"count":1}],"isBlockCoverage":true},{"functionName":"SimpleSessionCache","ranges":[{"startOffset":256396,"endOffset":256554,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":256564,"endOffset":256646,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":256656,"endOffset":257040,"count":0}],"isBlockCoverage":false},{"functionName":"buildConnector","ranges":[{"startOffset":257063,"endOffset":259969,"count":0}],"isBlockCoverage":false},{"functionName":"setupTimeout","ranges":[{"startOffset":260022,"endOffset":260601,"count":0}],"isBlockCoverage":false},{"functionName":"onConnectTimeout","ranges":[{"startOffset":260650,"endOffset":260748,"count":0}],"isBlockCoverage":false},{"functionName":"lib/llhttp/utils.js","ranges":[{"startOffset":260912,"endOffset":261395,"count":1}],"isBlockCoverage":true},{"functionName":"enumToMap","ranges":[{"startOffset":261073,"endOffset":261316,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":261154,"endOffset":261288,"count":92},{"startOffset":261238,"endOffset":261279,"count":46}],"isBlockCoverage":true},{"functionName":"lib/llhttp/constants.js","ranges":[{"startOffset":261473,"endOffset":273251,"count":1},{"startOffset":269783,"endOffset":269900,"count":26},{"startOffset":271332,"endOffset":271374,"count":128},{"startOffset":271854,"endOffset":271935,"count":224},{"startOffset":271878,"endOffset":271928,"count":223}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":262277,"endOffset":263953,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":264026,"endOffset":264190,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":264261,"endOffset":264849,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":264931,"endOffset":265182,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":265282,"endOffset":267763,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":269307,"endOffset":269426,"count":46},{"startOffset":269345,"endOffset":269419,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":269452,"endOffset":269636,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":272004,"endOffset":272019,"count":224}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":272129,"endOffset":272881,"count":1}],"isBlockCoverage":true},{"functionName":"lib/handler/RedirectHandler.js","ranges":[{"startOffset":273341,"endOffset":279401,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":273758,"endOffset":273819,"count":1}],"isBlockCoverage":true},{"functionName":"BodyAsyncIterable","ranges":[{"startOffset":273827,"endOffset":273918,"count":0}],"isBlockCoverage":false},{"functionName":"BodyAsyncIterable","ranges":[{"startOffset":273926,"endOffset":274078,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":274129,"endOffset":274188,"count":1}],"isBlockCoverage":true},{"functionName":"RedirectHandler","ranges":[{"startOffset":274196,"endOffset":275639,"count":0}],"isBlockCoverage":false},{"functionName":"onConnect","ranges":[{"startOffset":275647,"endOffset":275770,"count":0}],"isBlockCoverage":false},{"functionName":"onUpgrade","ranges":[{"startOffset":275778,"endOffset":275889,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":275897,"endOffset":275960,"count":0}],"isBlockCoverage":false},{"functionName":"onHeaders","ranges":[{"startOffset":275968,"endOffset":277042,"count":0}],"isBlockCoverage":false},{"functionName":"onData","ranges":[{"startOffset":277050,"endOffset":277179,"count":0}],"isBlockCoverage":false},{"functionName":"onComplete","ranges":[{"startOffset":277187,"endOffset":277429,"count":0}],"isBlockCoverage":false},{"functionName":"onBodySent","ranges":[{"startOffset":277437,"endOffset":277559,"count":0}],"isBlockCoverage":false},{"functionName":"parseLocation","ranges":[{"startOffset":277573,"endOffset":277895,"count":0}],"isBlockCoverage":false},{"functionName":"shouldRemoveHeader","ranges":[{"startOffset":277946,"endOffset":278523,"count":0}],"isBlockCoverage":false},{"functionName":"cleanRequestHeaders","ranges":[{"startOffset":278584,"endOffset":279299,"count":0}],"isBlockCoverage":false},{"functionName":"lib/interceptor/redirectInterceptor.js","ranges":[{"startOffset":279503,"endOffset":280359,"count":1}],"isBlockCoverage":true},{"functionName":"createRedirectInterceptor","ranges":[{"startOffset":279643,"endOffset":280235,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":279739,"endOffset":280227,"count":0}],"isBlockCoverage":false},{"functionName":"lib/llhttp/llhttp-wasm.js","ranges":[{"startOffset":280440,"endOffset":354476,"count":0}],"isBlockCoverage":false},{"functionName":"lib/llhttp/llhttp_simd-wasm.js","ranges":[{"startOffset":354567,"endOffset":428588,"count":1}],"isBlockCoverage":true},{"functionName":"lib/client.js","ranges":[{"startOffset":428652,"endOffset":492812,"count":1},{"startOffset":430582,"endOffset":430630,"count":0},{"startOffset":431500,"endOffset":431743,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":431800,"endOffset":431850,"count":1}],"isBlockCoverage":true},{"functionName":"Client","ranges":[{"startOffset":431992,"endOffset":439340,"count":0}],"isBlockCoverage":false},{"functionName":"get pipelining","ranges":[{"startOffset":439348,"endOffset":439410,"count":0}],"isBlockCoverage":false},{"functionName":"set pipelining","ranges":[{"startOffset":439418,"endOffset":439515,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":439523,"endOffset":439607,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":439615,"endOffset":439697,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":439705,"endOffset":439786,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":439794,"endOffset":439906,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":439914,"endOffset":440127,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":440184,"endOffset":440268,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":440276,"endOffset":440988,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":440996,"endOffset":441216,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":441224,"endOffset":442184,"count":0}],"isBlockCoverage":false},{"functionName":"onHttp2SessionError","ranges":[{"startOffset":442198,"endOffset":442372,"count":0}],"isBlockCoverage":false},{"functionName":"onHttp2FrameError","ranges":[{"startOffset":442435,"endOffset":442699,"count":0}],"isBlockCoverage":false},{"functionName":"onHttp2SessionEnd","ranges":[{"startOffset":442758,"endOffset":442934,"count":0}],"isBlockCoverage":false},{"functionName":"onHTTP2GoAway","ranges":[{"startOffset":442993,"endOffset":443953,"count":0}],"isBlockCoverage":false},{"functionName":"lazyllhttp","ranges":[{"startOffset":444153,"endOffset":446601,"count":1},{"startOffset":444240,"endOffset":444263,"count":0},{"startOffset":444405,"endOffset":444531,"count":0}],"isBlockCoverage":true},{"functionName":"wasm_on_url","ranges":[{"startOffset":444665,"endOffset":444718,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_status","ranges":[{"startOffset":444747,"endOffset":445014,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_message_begin","ranges":[{"startOffset":445050,"endOffset":445183,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_header_field","ranges":[{"startOffset":445218,"endOffset":445490,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_header_value","ranges":[{"startOffset":445525,"endOffset":445797,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_headers_complete","ranges":[{"startOffset":445836,"endOffset":446064,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_body","ranges":[{"startOffset":446091,"endOffset":446356,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_message_complete","ranges":[{"startOffset":446395,"endOffset":446531,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":446988,"endOffset":447038,"count":1}],"isBlockCoverage":true},{"functionName":"Parser","ranges":[{"startOffset":447046,"endOffset":447970,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":447978,"endOffset":448569,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":448577,"endOffset":449094,"count":0}],"isBlockCoverage":false},{"functionName":"readMore","ranges":[{"startOffset":449102,"endOffset":449321,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":449329,"endOffset":451162,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":451170,"endOffset":451508,"count":0}],"isBlockCoverage":false},{"functionName":"onStatus","ranges":[{"startOffset":451516,"endOffset":451583,"count":0}],"isBlockCoverage":false},{"functionName":"onMessageBegin","ranges":[{"startOffset":451591,"endOffset":451846,"count":0}],"isBlockCoverage":false},{"functionName":"onHeaderField","ranges":[{"startOffset":451854,"endOffset":452140,"count":0}],"isBlockCoverage":false},{"functionName":"onHeaderValue","ranges":[{"startOffset":452148,"endOffset":452915,"count":0}],"isBlockCoverage":false},{"functionName":"trackHeader","ranges":[{"startOffset":452923,"endOffset":453117,"count":0}],"isBlockCoverage":false},{"functionName":"onUpgrade","ranges":[{"startOffset":453125,"endOffset":454420,"count":0}],"isBlockCoverage":false},{"functionName":"onHeadersComplete","ranges":[{"startOffset":454428,"endOffset":457378,"count":0}],"isBlockCoverage":false},{"functionName":"onBody","ranges":[{"startOffset":457386,"endOffset":458185,"count":0}],"isBlockCoverage":false},{"functionName":"onMessageComplete","ranges":[{"startOffset":458193,"endOffset":459940,"count":0}],"isBlockCoverage":false},{"functionName":"onParserTimeout","ranges":[{"startOffset":459954,"endOffset":460695,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketReadable","ranges":[{"startOffset":460750,"endOffset":460887,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketError","ranges":[{"startOffset":460944,"endOffset":461381,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":461432,"endOffset":461901,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketEnd","ranges":[{"startOffset":461940,"endOffset":462311,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketClose","ranges":[{"startOffset":462358,"endOffset":463544,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":463595,"endOffset":468336,"count":0}],"isBlockCoverage":false},{"functionName":"emitDrain","ranges":[{"startOffset":468375,"endOffset":468494,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":468537,"endOffset":468921,"count":0}],"isBlockCoverage":false},{"functionName":"_resume","ranges":[{"startOffset":468958,"endOffset":472211,"count":0}],"isBlockCoverage":false},{"functionName":"shouldSendContentLength","ranges":[{"startOffset":472250,"endOffset":472422,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":472493,"endOffset":476620,"count":0}],"isBlockCoverage":false},{"functionName":"writeH2","ranges":[{"startOffset":476655,"endOffset":482995,"count":0}],"isBlockCoverage":false},{"functionName":"writeStream","ranges":[{"startOffset":483034,"endOffset":485839,"count":0}],"isBlockCoverage":false},{"functionName":"writeBlob","ranges":[{"startOffset":485886,"endOffset":486931,"count":0}],"isBlockCoverage":false},{"functionName":"writeIterable","ranges":[{"startOffset":486974,"endOffset":488932,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":489016,"endOffset":489071,"count":1}],"isBlockCoverage":true},{"functionName":"AsyncWriter","ranges":[{"startOffset":489079,"endOffset":489453,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":489461,"endOffset":491044,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":491052,"endOffset":492255,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":492263,"endOffset":492519,"count":0}],"isBlockCoverage":false},{"functionName":"errorRequest","ranges":[{"startOffset":492533,"endOffset":492733,"count":0}],"isBlockCoverage":false},{"functionName":"lib/pool.js","ranges":[{"startOffset":492872,"endOffset":495825,"count":1}],"isBlockCoverage":true},{"functionName":"defaultFactory","ranges":[{"startOffset":493424,"endOffset":493510,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":493606,"endOffset":493654,"count":1}],"isBlockCoverage":true},{"functionName":"Pool","ranges":[{"startOffset":493662,"endOffset":495358,"count":0}],"isBlockCoverage":false},{"functionName":"Pool","ranges":[{"startOffset":495366,"endOffset":495783,"count":0}],"isBlockCoverage":false},{"functionName":"lib/agent.js","ranges":[{"startOffset":495887,"endOffset":500975,"count":1}],"isBlockCoverage":true},{"functionName":"defaultFactory","ranges":[{"startOffset":496772,"endOffset":496916,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":497019,"endOffset":497068,"count":1}],"isBlockCoverage":true},{"functionName":"Agent","ranges":[{"startOffset":497076,"endOffset":499211,"count":1},{"startOffset":497229,"endOffset":497315,"count":0},{"startOffset":497345,"endOffset":497377,"count":0},{"startOffset":497378,"endOffset":497408,"count":0},{"startOffset":497410,"endOffset":497508,"count":0},{"startOffset":497581,"endOffset":497681,"count":0},{"startOffset":497703,"endOffset":497735,"count":0},{"startOffset":497737,"endOffset":497786,"count":0},{"startOffset":497839,"endOffset":497868,"count":0},{"startOffset":497869,"endOffset":497913,"count":0},{"startOffset":497914,"endOffset":497942,"count":0},{"startOffset":498122,"endOffset":498151,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":498427,"endOffset":498619,"count":0}],"isBlockCoverage":false},{"functionName":"Agent.<computed>","ranges":[{"startOffset":498687,"endOffset":498781,"count":0}],"isBlockCoverage":false},{"functionName":"Agent.<computed>","ranges":[{"startOffset":498811,"endOffset":498907,"count":0}],"isBlockCoverage":false},{"functionName":"Agent.<computed>","ranges":[{"startOffset":498940,"endOffset":499049,"count":0}],"isBlockCoverage":false},{"functionName":"Agent.<computed>","ranges":[{"startOffset":499087,"endOffset":499201,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":499219,"endOffset":499469,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":499477,"endOffset":500308,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":500316,"endOffset":500612,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":500620,"endOffset":500932,"count":0}],"isBlockCoverage":false},{"functionName":"lib/global.js","ranges":[{"startOffset":501040,"endOffset":502018,"count":1}],"isBlockCoverage":true},{"functionName":"setGlobalDispatcher","ranges":[{"startOffset":501351,"endOffset":501722,"count":1},{"startOffset":501448,"endOffset":501538,"count":0}],"isBlockCoverage":true},{"functionName":"getGlobalDispatcher","ranges":[{"startOffset":501785,"endOffset":501868,"count":1}],"isBlockCoverage":true},{"functionName":"lib/fetch/index.js","ranges":[{"startOffset":502086,"endOffset":543562,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":504225,"endOffset":504274,"count":1}],"isBlockCoverage":true},{"functionName":"Fetch","ranges":[{"startOffset":504282,"endOffset":504502,"count":0}],"isBlockCoverage":false},{"functionName":"terminate","ranges":[{"startOffset":504510,"endOffset":504730,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":504802,"endOffset":505172,"count":0}],"isBlockCoverage":false},{"functionName":"fetch2","ranges":[{"startOffset":505186,"endOffset":507627,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeAndReportTiming","ranges":[{"startOffset":507663,"endOffset":508588,"count":0}],"isBlockCoverage":false},{"functionName":"markResourceTiming","ranges":[{"startOffset":508659,"endOffset":508947,"count":0}],"isBlockCoverage":false},{"functionName":"abortFetch","ranges":[{"startOffset":509008,"endOffset":509838,"count":0}],"isBlockCoverage":false},{"functionName":"fetching","ranges":[{"startOffset":509883,"endOffset":512141,"count":0}],"isBlockCoverage":false},{"functionName":"mainFetch","ranges":[{"startOffset":512182,"endOffset":516569,"count":0}],"isBlockCoverage":false},{"functionName":"schemeFetch","ranges":[{"startOffset":516612,"endOffset":519299,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResponse","ranges":[{"startOffset":519346,"endOffset":519580,"count":0}],"isBlockCoverage":false},{"functionName":"fetchFinale","ranges":[{"startOffset":519637,"endOffset":521654,"count":0}],"isBlockCoverage":false},{"functionName":"httpFetch","ranges":[{"startOffset":521701,"endOffset":523380,"count":0}],"isBlockCoverage":false},{"functionName":"httpRedirectFetch","ranges":[{"startOffset":523423,"endOffset":526158,"count":0}],"isBlockCoverage":false},{"functionName":"httpNetworkOrCacheFetch","ranges":[{"startOffset":526217,"endOffset":531570,"count":0}],"isBlockCoverage":false},{"functionName":"httpNetworkFetch","ranges":[{"startOffset":531641,"endOffset":543389,"count":0}],"isBlockCoverage":false},{"functionName":"lib/websocket/constants.js","ranges":[{"startOffset":543643,"endOffset":544520,"count":1}],"isBlockCoverage":true},{"functionName":"lib/websocket/symbols.js","ranges":[{"startOffset":544597,"endOffset":545036,"count":1}],"isBlockCoverage":true},{"functionName":"lib/websocket/events.js","ranges":[{"startOffset":545110,"endOffset":552684,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":545345,"endOffset":547031,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":545388,"endOffset":545444,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":547055,"endOffset":547879,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":547096,"endOffset":547150,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":547903,"endOffset":548966,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":547944,"endOffset":547998,"count":1}],"isBlockCoverage":true},{"functionName":"get defaultValue","ranges":[{"startOffset":551389,"endOffset":551442,"count":0}],"isBlockCoverage":false},{"functionName":"lib/websocket/util.js","ranges":[{"startOffset":552755,"endOffset":556157,"count":1}],"isBlockCoverage":true},{"functionName":"isEstablished","ranges":[{"startOffset":553034,"endOffset":553116,"count":0}],"isBlockCoverage":false},{"functionName":"isClosing","ranges":[{"startOffset":553167,"endOffset":553248,"count":0}],"isBlockCoverage":false},{"functionName":"isClosed","ranges":[{"startOffset":553291,"endOffset":553370,"count":0}],"isBlockCoverage":false},{"functionName":"fireEvent","ranges":[{"startOffset":553411,"endOffset":553587,"count":0}],"isBlockCoverage":false},{"functionName":"websocketMessageReceived","ranges":[{"startOffset":553630,"endOffset":554403,"count":0}],"isBlockCoverage":false},{"functionName":"isValidSubprotocol","ranges":[{"startOffset":554476,"endOffset":555092,"count":0}],"isBlockCoverage":false},{"functionName":"isValidStatusCode","ranges":[{"startOffset":555153,"endOffset":555420,"count":0}],"isBlockCoverage":false},{"functionName":"failWebsocketConnection","ranges":[{"startOffset":555479,"endOffset":555862,"count":0}],"isBlockCoverage":false},{"functionName":"lib/websocket/connection.js","ranges":[{"startOffset":556239,"endOffset":562039,"count":1},{"startOffset":557215,"endOffset":557229,"count":0}],"isBlockCoverage":true},{"functionName":"establishWebSocketConnection","ranges":[{"startOffset":557235,"endOffset":560699,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketData","ranges":[{"startOffset":560780,"endOffset":560898,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketClose","ranges":[{"startOffset":560947,"endOffset":561634,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketError","ranges":[{"startOffset":561685,"endOffset":561920,"count":0}],"isBlockCoverage":false},{"functionName":"lib/websocket/frame.js","ranges":[{"startOffset":562111,"endOffset":563859,"count":1},{"startOffset":562300,"endOffset":562314,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":562360,"endOffset":562422,"count":1}],"isBlockCoverage":true},{"functionName":"WebsocketFrameSend","ranges":[{"startOffset":562493,"endOffset":562600,"count":0}],"isBlockCoverage":false},{"functionName":"createFrame","ranges":[{"startOffset":562608,"endOffset":563787,"count":0}],"isBlockCoverage":false},{"functionName":"lib/websocket/receiver.js","ranges":[{"startOffset":563937,"endOffset":573095,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":564622,"endOffset":573038,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":564654,"endOffset":564708,"count":1}],"isBlockCoverage":true},{"functionName":"lib/websocket/websocket.js","ranges":[{"startOffset":573175,"endOffset":588186,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":574191,"endOffset":585141,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":574237,"endOffset":574290,"count":1}],"isBlockCoverage":true},{"functionName":"webidl.converters.DOMString or sequence<DOMString>","ranges":[{"startOffset":586659,"endOffset":586866,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultValue","ranges":[{"startOffset":587056,"endOffset":587109,"count":0}],"isBlockCoverage":false},{"functionName":"converter","ranges":[{"startOffset":587177,"endOffset":587185,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultValue","ranges":[{"startOffset":587196,"endOffset":587268,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.DOMString or sequence<DOMString> or WebSocketInit","ranges":[{"startOffset":587485,"endOffset":587727,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.WebSocketSendData","ranges":[{"startOffset":587772,"endOffset":588130,"count":0}],"isBlockCoverage":false},{"functionName":"fetch","ranges":[{"startOffset":588300,"endOffset":588461,"count":0}],"isBlockCoverage":false}]},{"scriptId":"468","url":"node:worker_threads","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":728,"count":1}],"isBlockCoverage":false}]},{"scriptId":"469","url":"node:internal/worker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16945,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2562,"endOffset":2589,"count":0}],"isBlockCoverage":false},{"functionName":"process.chdir","ranges":[{"startOffset":3091,"endOffset":3174,"count":0}],"isBlockCoverage":false},{"functionName":"setEnvironmentData","ranges":[{"startOffset":3182,"endOffset":3334,"count":0}],"isBlockCoverage":false},{"functionName":"getEnvironmentData","ranges":[{"startOffset":3338,"endOffset":3411,"count":0}],"isBlockCoverage":false},{"functionName":"assignEnvironmentData","ranges":[{"startOffset":3415,"endOffset":3570,"count":0}],"isBlockCoverage":false},{"functionName":"Worker","ranges":[{"startOffset":3613,"endOffset":9519,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9525,"endOffset":10173,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10179,"endOffset":10277,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10283,"endOffset":10456,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10462,"endOffset":11381,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11387,"endOffset":11871,"count":0}],"isBlockCoverage":false},{"functionName":"postMessage","ranges":[{"startOffset":11877,"endOffset":12026,"count":0}],"isBlockCoverage":false},{"functionName":"terminate","ranges":[{"startOffset":12032,"endOffset":12890,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":12896,"endOffset":13007,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":13013,"endOffset":13130,"count":0}],"isBlockCoverage":false},{"functionName":"get threadId","ranges":[{"startOffset":13136,"endOffset":13239,"count":0}],"isBlockCoverage":false},{"functionName":"get stdin","ranges":[{"startOffset":13245,"endOffset":13305,"count":0}],"isBlockCoverage":false},{"functionName":"get stdout","ranges":[{"startOffset":13311,"endOffset":13373,"count":0}],"isBlockCoverage":false},{"functionName":"get stderr","ranges":[{"startOffset":13379,"endOffset":13441,"count":0}],"isBlockCoverage":false},{"functionName":"get resourceLimits","ranges":[{"startOffset":13447,"endOffset":13587,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSnapshot","ranges":[{"startOffset":13593,"endOffset":14113,"count":0}],"isBlockCoverage":false},{"functionName":"InternalWorker","ranges":[{"startOffset":14314,"endOffset":14395,"count":0}],"isBlockCoverage":false},{"functionName":"receiveMessageSync","ranges":[{"startOffset":14401,"endOffset":14481,"count":0}],"isBlockCoverage":false},{"functionName":"pipeWithoutWarning","ranges":[{"startOffset":14488,"endOffset":14820,"count":0}],"isBlockCoverage":false},{"functionName":"parseResourceLimits","ranges":[{"startOffset":14897,"endOffset":15525,"count":0}],"isBlockCoverage":false},{"functionName":"makeResourceLimits","ranges":[{"startOffset":15529,"endOffset":15823,"count":0}],"isBlockCoverage":false},{"functionName":"eventLoopUtilization","ranges":[{"startOffset":15827,"endOffset":16652,"count":0}],"isBlockCoverage":false}]},{"scriptId":"470","url":"node:internal/worker/io","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16035,"count":1}],"isBlockCoverage":false},{"functionName":"MessagePort.hasRef","ranges":[{"startOffset":3800,"endOffset":3885,"count":0}],"isBlockCoverage":false},{"functionName":"validateMessagePort","ranges":[{"startOffset":3890,"endOffset":4031,"count":0}],"isBlockCoverage":false},{"functionName":"isMessageEvent","ranges":[{"startOffset":4035,"endOffset":4113,"count":0}],"isBlockCoverage":false},{"functionName":"MessageEvent","ranges":[{"startOffset":4155,"endOffset":4689,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4783,"endOffset":4911,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5028,"endOffset":5158,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5280,"endOffset":5415,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5532,"endOffset":5662,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5778,"endOffset":5907,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":6162,"endOffset":6487,"count":0}],"isBlockCoverage":false},{"functionName":"oninit","ranges":[{"startOffset":6633,"endOffset":6780,"count":0}],"isBlockCoverage":false},{"functionName":"MessagePortCloseEvent","ranges":[{"startOffset":7095,"endOffset":7136,"count":0}],"isBlockCoverage":false},{"functionName":"onclose","ranges":[{"startOffset":7213,"endOffset":7288,"count":0}],"isBlockCoverage":false},{"functionName":"MessagePort.close","ranges":[{"startOffset":7478,"endOffset":7617,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":7756,"endOffset":8399,"count":0}],"isBlockCoverage":false},{"functionName":"setupPortReferencing","ranges":[{"startOffset":8409,"endOffset":9808,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableWorkerStdio","ranges":[{"startOffset":9862,"endOffset":10223,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":10229,"endOffset":10546,"count":0}],"isBlockCoverage":false},{"functionName":"WritableWorkerStdio","ranges":[{"startOffset":10601,"endOffset":10755,"count":0}],"isBlockCoverage":false},{"functionName":"_writev","ranges":[{"startOffset":10761,"endOffset":11147,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":11153,"endOffset":11340,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11346,"endOffset":11599,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkerStdio","ranges":[{"startOffset":11606,"endOffset":11884,"count":0}],"isBlockCoverage":false},{"functionName":"receiveMessageOnPort","ranges":[{"startOffset":11888,"endOffset":12072,"count":0}],"isBlockCoverage":false},{"functionName":"onMessageEvent","ranges":[{"startOffset":12076,"endOffset":12173,"count":0}],"isBlockCoverage":false},{"functionName":"isBroadcastChannel","ranges":[{"startOffset":12177,"endOffset":12265,"count":0}],"isBlockCoverage":false},{"functionName":"BroadcastChannel","ranges":[{"startOffset":12358,"endOffset":12884,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12890,"endOffset":13318,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":13359,"endOffset":13492,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":13534,"endOffset":13943,"count":0}],"isBlockCoverage":false},{"functionName":"postMessage","ranges":[{"startOffset":14018,"endOffset":14437,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":14729,"endOffset":14902,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":15196,"endOffset":15373,"count":0}],"isBlockCoverage":false}]},{"scriptId":"471","url":"node:internal/error_serdes","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5914,"count":1}],"isBlockCoverage":false},{"functionName":"TryGetAllProperties","ranges":[{"startOffset":1084,"endOffset":2220,"count":0}],"isBlockCoverage":false},{"functionName":"GetConstructors","ranges":[{"startOffset":2224,"endOffset":2683,"count":0}],"isBlockCoverage":false},{"functionName":"GetName","ranges":[{"startOffset":2687,"endOffset":2810,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":2840,"endOffset":3015,"count":0}],"isBlockCoverage":false},{"functionName":"serializeError","ranges":[{"startOffset":3035,"endOffset":4367,"count":0}],"isBlockCoverage":false},{"functionName":"fromBuffer","ranges":[{"startOffset":4371,"endOffset":4596,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeError","ranges":[{"startOffset":4618,"endOffset":5854,"count":0}],"isBlockCoverage":false}]},{"scriptId":"472","url":"node:util/types","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":67,"count":1}],"isBlockCoverage":false}]},{"scriptId":"473","url":"node:internal/webstreams/readablestream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":97079,"count":1}],"isBlockCoverage":false},{"functionName":"lazyReadableReleasedError","ranges":[{"startOffset":3234,"endOffset":3593,"count":0}],"isBlockCoverage":false},{"functionName":"lazyReadableReleasingError","ranges":[{"startOffset":3597,"endOffset":3962,"count":0}],"isBlockCoverage":false},{"functionName":"getNonWritablePropertyDescriptor","ranges":[{"startOffset":4007,"endOffset":4099,"count":6}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5588,"endOffset":17841,"count":0}],"isBlockCoverage":false},{"functionName":"TransferredReadableStream","ranges":[{"startOffset":18460,"endOffset":18969,"count":0}],"isBlockCoverage":false},{"functionName":"TransferredReadableStream.<computed>","ranges":[{"startOffset":19023,"endOffset":19031,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":19036,"endOffset":21181,"count":0}],"isBlockCoverage":false},{"functionName":"createReadableStreamBYOBRequest","ranges":[{"startOffset":21452,"endOffset":21654,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamAsyncIteratorReadRequest","ranges":[{"startOffset":21708,"endOffset":21831,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21837,"endOffset":21954,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21960,"endOffset":22158,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22164,"endOffset":22339,"count":0}],"isBlockCoverage":false},{"functionName":"DefaultReadRequest","ranges":[{"startOffset":22376,"endOffset":22441,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22447,"endOffset":22522,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22528,"endOffset":22608,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22614,"endOffset":22671,"count":0}],"isBlockCoverage":false},{"functionName":"get promise","ranges":[{"startOffset":22677,"endOffset":22723,"count":0}],"isBlockCoverage":false},{"functionName":"ReadIntoRequest","ranges":[{"startOffset":22757,"endOffset":22822,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22828,"endOffset":22903,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22909,"endOffset":22983,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22989,"endOffset":23046,"count":0}],"isBlockCoverage":false},{"functionName":"get promise","ranges":[{"startOffset":23052,"endOffset":23098,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":23105,"endOffset":25393,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":25692,"endOffset":28846,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":29139,"endOffset":30489,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":30797,"endOffset":34207,"count":0}],"isBlockCoverage":false},{"functionName":"TeeReadableStream","ranges":[{"startOffset":34546,"endOffset":35221,"count":0}],"isBlockCoverage":false},{"functionName":"createTeeReadableStream","ranges":[{"startOffset":35363,"endOffset":35593,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamFromIterable","ranges":[{"startOffset":36041,"endOffset":37763,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamPipeTo","ranges":[{"startOffset":37767,"endOffset":43412,"count":0}],"isBlockCoverage":false},{"functionName":"PipeToReadableStreamReadRequest","ranges":[{"startOffset":43459,"endOffset":43582,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":43588,"endOffset":43778,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":43784,"endOffset":43834,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":43840,"endOffset":43895,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamTee","ranges":[{"startOffset":43902,"endOffset":44135,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultTee","ranges":[{"startOffset":44139,"endOffset":47029,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamTee","ranges":[{"startOffset":47033,"endOffset":55219,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerConvertPullIntoDescriptor","ranges":[{"startOffset":55223,"endOffset":55817,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableStreamLocked","ranges":[{"startOffset":55821,"endOffset":55912,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamCancel","ranges":[{"startOffset":55916,"endOffset":56657,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamClose","ranges":[{"startOffset":56661,"endOffset":57163,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamError","ranges":[{"startOffset":57167,"endOffset":58072,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamHasDefaultReader","ranges":[{"startOffset":58076,"endOffset":58328,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamGetNumReadRequests","ranges":[{"startOffset":58332,"endOffset":58498,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamHasBYOBReader","ranges":[{"startOffset":58502,"endOffset":58748,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamGetNumReadIntoRequests","ranges":[{"startOffset":58752,"endOffset":58923,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamFulfillReadRequest","ranges":[{"startOffset":58927,"endOffset":59536,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamFulfillReadIntoRequest","ranges":[{"startOffset":59540,"endOffset":59933,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamAddReadRequest","ranges":[{"startOffset":59937,"endOffset":60179,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamAddReadIntoRequest","ranges":[{"startOffset":60183,"endOffset":60448,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamReaderGenericCancel","ranges":[{"startOffset":60452,"endOffset":60643,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamReaderGenericInitialize","ranges":[{"startOffset":60647,"endOffset":61335,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultReaderRelease","ranges":[{"startOffset":61339,"endOffset":61545,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultReaderErrorReadRequests","ranges":[{"startOffset":61549,"endOffset":61774,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamBYOBReaderRelease","ranges":[{"startOffset":61778,"endOffset":61982,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamBYOBReaderErrorReadIntoRequests","ranges":[{"startOffset":61986,"endOffset":62224,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamReaderGenericRelease","ranges":[{"startOffset":62228,"endOffset":62905,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamBYOBReaderRead","ranges":[{"startOffset":62909,"endOffset":63326,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultReaderRead","ranges":[{"startOffset":63330,"endOffset":63783,"count":0}],"isBlockCoverage":false},{"functionName":"setupReadableStreamBYOBReader","ranges":[{"startOffset":63787,"endOffset":64240,"count":0}],"isBlockCoverage":false},{"functionName":"setupReadableStreamDefaultReader","ranges":[{"startOffset":64244,"endOffset":64512,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerClose","ranges":[{"startOffset":64516,"endOffset":64872,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerEnqueue","ranges":[{"startOffset":64876,"endOffset":65646,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerHasBackpressure","ranges":[{"startOffset":65650,"endOffset":65792,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerCanCloseOrEnqueue","ranges":[{"startOffset":65796,"endOffset":66016,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerGetDesiredSize","ranges":[{"startOffset":66020,"endOffset":66347,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerShouldCallPull","ranges":[{"startOffset":66351,"endOffset":66863,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerCallPullIfNeeded","ranges":[{"startOffset":66867,"endOffset":67597,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerClearAlgorithms","ranges":[{"startOffset":67601,"endOffset":67822,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerError","ranges":[{"startOffset":67826,"endOffset":68132,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerCancelSteps","ranges":[{"startOffset":68136,"endOffset":68417,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerPullSteps","ranges":[{"startOffset":68421,"endOffset":69055,"count":0}],"isBlockCoverage":false},{"functionName":"setupReadableStreamDefaultController","ranges":[{"startOffset":69059,"endOffset":70074,"count":0}],"isBlockCoverage":false},{"functionName":"setupReadableStreamDefaultControllerFromSource","ranges":[{"startOffset":70078,"endOffset":70852,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerClose","ranges":[{"startOffset":70856,"endOffset":71597,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerCommitPullIntoDescriptor","ranges":[{"startOffset":71601,"endOffset":72190,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerInvalidateBYOBRequest","ranges":[{"startOffset":72194,"endOffset":72493,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerClearAlgorithms","ranges":[{"startOffset":72497,"endOffset":72666,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerClearPendingPullIntos","ranges":[{"startOffset":72670,"endOffset":72856,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerGetDesiredSize","ranges":[{"startOffset":72860,"endOffset":73177,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerShouldCallPull","ranges":[{"startOffset":73181,"endOffset":73852,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerHandleQueueDrain","ranges":[{"startOffset":73856,"endOffset":74286,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerPullInto","ranges":[{"startOffset":74290,"endOffset":76367,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerRespondInternal","ranges":[{"startOffset":76371,"endOffset":77218,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerRespond","ranges":[{"startOffset":77222,"endOffset":78026,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerRespondInClosedState","ranges":[{"startOffset":78030,"endOffset":78566,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerFillHeadPullIntoDescriptor","ranges":[{"startOffset":78570,"endOffset":78882,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerEnqueue","ranges":[{"startOffset":78886,"endOffset":81271,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerEnqueueClonedChunkToQueue","ranges":[{"startOffset":81275,"endOffset":81772,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerEnqueueChunkToQueue","ranges":[{"startOffset":81776,"endOffset":82069,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerEnqueueDetachedPullIntoToQueue","ranges":[{"startOffset":82073,"endOffset":82523,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerFillPullIntoDescriptorFromQueue","ranges":[{"startOffset":82527,"endOffset":84559,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ranges":[{"startOffset":84563,"endOffset":85177,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerRespondInReadableState","ranges":[{"startOffset":85181,"endOffset":86647,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerRespondWithNewView","ranges":[{"startOffset":86651,"endOffset":88079,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerShiftPendingPullInto","ranges":[{"startOffset":88083,"endOffset":88277,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerCallPullIfNeeded","ranges":[{"startOffset":88281,"endOffset":88999,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerError","ranges":[{"startOffset":89003,"endOffset":89369,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerCancelSteps","ranges":[{"startOffset":89373,"endOffset":89679,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerFillReadRequestFromQueue","ranges":[{"startOffset":89683,"endOffset":90178,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerProcessReadRequestsUsingQueue","ranges":[{"startOffset":90182,"endOffset":90682,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerPullSteps","ranges":[{"startOffset":90686,"endOffset":91832,"count":0}],"isBlockCoverage":false},{"functionName":"setupReadableByteStreamController","ranges":[{"startOffset":91836,"endOffset":92962,"count":0}],"isBlockCoverage":false},{"functionName":"setupReadableByteStreamControllerFromSource","ranges":[{"startOffset":92966,"endOffset":93934,"count":0}],"isBlockCoverage":false}]},{"scriptId":"474","url":"node:internal/webstreams/writablestream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":39053,"count":1}],"isBlockCoverage":false},{"functionName":"lazyWritableReleasedError","ranges":[{"startOffset":1697,"endOffset":2148,"count":0}],"isBlockCoverage":false},{"functionName":"getNonWritablePropertyDescriptor","ranges":[{"startOffset":2193,"endOffset":2285,"count":3}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3250,"endOffset":8071,"count":0}],"isBlockCoverage":false},{"functionName":"TransferredWritableStream","ranges":[{"startOffset":8342,"endOffset":9682,"count":0}],"isBlockCoverage":false},{"functionName":"TransferredWritableStream.<computed>","ranges":[{"startOffset":9736,"endOffset":9744,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":9749,"endOffset":13455,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":13853,"endOffset":15006,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableStreamLocked","ranges":[{"startOffset":15490,"endOffset":15581,"count":0}],"isBlockCoverage":false},{"functionName":"setupWritableStreamDefaultWriter","ranges":[{"startOffset":15585,"endOffset":17417,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamAbort","ranges":[{"startOffset":17421,"endOffset":18243,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamClose","ranges":[{"startOffset":18247,"endOffset":18940,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamUpdateBackpressure","ranges":[{"startOffset":18944,"endOffset":19437,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamStartErroring","ranges":[{"startOffset":19441,"endOffset":20035,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamRejectCloseAndClosedPromiseIfNeeded","ranges":[{"startOffset":20039,"endOffset":20816,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamMarkFirstWriteRequestInFlight","ranges":[{"startOffset":20820,"endOffset":21133,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamMarkCloseRequestInFlight","ranges":[{"startOffset":21137,"endOffset":21514,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamHasOperationMarkedInFlight","ranges":[{"startOffset":21518,"endOffset":21814,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamFinishInFlightWriteWithError","ranges":[{"startOffset":21818,"endOffset":22286,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamFinishInFlightWrite","ranges":[{"startOffset":22290,"endOffset":22590,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamFinishInFlightCloseWithError","ranges":[{"startOffset":22594,"endOffset":23427,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamFinishInFlightClose","ranges":[{"startOffset":23431,"endOffset":24515,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamFinishErroring","ranges":[{"startOffset":24519,"endOffset":25980,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDealWithRejection","ranges":[{"startOffset":25984,"endOffset":26264,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamCloseQueuedOrInFlight","ranges":[{"startOffset":26268,"endOffset":26493,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamAddWriteRequest","ranges":[{"startOffset":26497,"endOffset":26863,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterWrite","ranges":[{"startOffset":26867,"endOffset":27882,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterRelease","ranges":[{"startOffset":27886,"endOffset":28375,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterGetDesiredSize","ranges":[{"startOffset":28379,"endOffset":28742,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterEnsureReadyPromiseRejected","ranges":[{"startOffset":28746,"endOffset":29126,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterEnsureClosedPromiseRejected","ranges":[{"startOffset":29130,"endOffset":29511,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterCloseWithErrorPropagation","ranges":[{"startOffset":29515,"endOffset":30017,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterClose","ranges":[{"startOffset":30021,"endOffset":30194,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterAbort","ranges":[{"startOffset":30198,"endOffset":30387,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerWrite","ranges":[{"startOffset":30391,"endOffset":30993,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerProcessWrite","ranges":[{"startOffset":30997,"endOffset":32041,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerProcessClose","ranges":[{"startOffset":32045,"endOffset":32618,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerGetDesiredSize","ranges":[{"startOffset":32622,"endOffset":32814,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerGetChunkSize","ranges":[{"startOffset":32818,"endOffset":33123,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerErrorIfNeeded","ranges":[{"startOffset":33127,"endOffset":33361,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerError","ranges":[{"startOffset":33365,"endOffset":33643,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerClose","ranges":[{"startOffset":33647,"endOffset":33833,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerClearAlgorithms","ranges":[{"startOffset":33837,"endOffset":34108,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerGetBackpressure","ranges":[{"startOffset":34112,"endOffset":34258,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerAdvanceQueueIfNeeded","ranges":[{"startOffset":34262,"endOffset":34872,"count":0}],"isBlockCoverage":false},{"functionName":"setupWritableStreamDefaultControllerFromSink","ranges":[{"startOffset":34876,"endOffset":35754,"count":0}],"isBlockCoverage":false},{"functionName":"setupWritableStreamDefaultController","ranges":[{"startOffset":35758,"endOffset":37115,"count":0}],"isBlockCoverage":false}]},{"scriptId":"475","url":"node:internal/file","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1939,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":470,"endOffset":1686,"count":0}],"isBlockCoverage":false}]},{"scriptId":"476","url":"node:internal/webstreams/transformstream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16308,"count":1}],"isBlockCoverage":false},{"functionName":"getNonWritablePropertyDescriptor","ranges":[{"startOffset":1543,"endOffset":1635,"count":2}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2462,"endOffset":6003,"count":0}],"isBlockCoverage":false},{"functionName":"TransferredTransformStream","ranges":[{"startOffset":6215,"endOffset":6691,"count":0}],"isBlockCoverage":false},{"functionName":"TransferredTransformStream.<computed>","ranges":[{"startOffset":6746,"endOffset":6754,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6759,"endOffset":8331,"count":0}],"isBlockCoverage":false},{"functionName":"defaultTransformAlgorithm","ranges":[{"startOffset":8807,"endOffset":8934,"count":0}],"isBlockCoverage":false},{"functionName":"initializeTransformStream","ranges":[{"startOffset":8938,"endOffset":10306,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamError","ranges":[{"startOffset":10310,"endOffset":10584,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamErrorWritableAndUnblockWrite","ranges":[{"startOffset":10588,"endOffset":10974,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamSetBackpressure","ranges":[{"startOffset":10978,"endOffset":11328,"count":0}],"isBlockCoverage":false},{"functionName":"setupTransformStreamDefaultController","ranges":[{"startOffset":11332,"endOffset":11676,"count":0}],"isBlockCoverage":false},{"functionName":"setupTransformStreamDefaultControllerFromTransformer","ranges":[{"startOffset":11680,"endOffset":12248,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultControllerClearAlgorithms","ranges":[{"startOffset":12252,"endOffset":12429,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultControllerEnqueue","ranges":[{"startOffset":12433,"endOffset":13269,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultControllerError","ranges":[{"startOffset":13273,"endOffset":13402,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultControllerPerformTransform","ranges":[{"startOffset":13406,"endOffset":13741,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultControllerTerminate","ranges":[{"startOffset":13745,"endOffset":14220,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultSinkWriteAlgorithm","ranges":[{"startOffset":14224,"endOffset":15023,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultSinkAbortAlgorithm","ranges":[{"startOffset":15027,"endOffset":15144,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultSinkCloseAlgorithm","ranges":[{"startOffset":15148,"endOffset":15823,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultSourcePullAlgorithm","ranges":[{"startOffset":15827,"endOffset":16101,"count":0}],"isBlockCoverage":false}]},{"scriptId":"477","url":"node:stream/web","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1350,"count":1}],"isBlockCoverage":false}]},{"scriptId":"478","url":"node:internal/webstreams/encoding","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6474,"count":1}],"isBlockCoverage":false},{"functionName":"isTextEncoderStream","ranges":[{"startOffset":902,"endOffset":1042,"count":0}],"isBlockCoverage":false},{"functionName":"isTextDecoderStream","ranges":[{"startOffset":1046,"endOffset":1186,"count":0}],"isBlockCoverage":false},{"functionName":"TextEncoderStream","ranges":[{"startOffset":1219,"endOffset":2810,"count":0}],"isBlockCoverage":false},{"functionName":"get encoding","ranges":[{"startOffset":2867,"endOffset":3017,"count":0}],"isBlockCoverage":false},{"functionName":"get readable","ranges":[{"startOffset":3082,"endOffset":3235,"count":0}],"isBlockCoverage":false},{"functionName":"get writable","ranges":[{"startOffset":3300,"endOffset":3453,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3459,"endOffset":3788,"count":0}],"isBlockCoverage":false},{"functionName":"TextDecoderStream","ranges":[{"startOffset":3962,"endOffset":4537,"count":0}],"isBlockCoverage":false},{"functionName":"get encoding","ranges":[{"startOffset":4594,"endOffset":4744,"count":0}],"isBlockCoverage":false},{"functionName":"get fatal","ranges":[{"startOffset":4802,"endOffset":4946,"count":0}],"isBlockCoverage":false},{"functionName":"get ignoreBOM","ranges":[{"startOffset":5004,"endOffset":5156,"count":0}],"isBlockCoverage":false},{"functionName":"get readable","ranges":[{"startOffset":5221,"endOffset":5374,"count":0}],"isBlockCoverage":false},{"functionName":"get writable","ranges":[{"startOffset":5439,"endOffset":5592,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5598,"endOffset":6005,"count":0}],"isBlockCoverage":false}]},{"scriptId":"479","url":"node:internal/webstreams/compression","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4400,"count":1}],"isBlockCoverage":false},{"functionName":"lazyZlib","ranges":[{"startOffset":491,"endOffset":560,"count":0}],"isBlockCoverage":false},{"functionName":"isCompressionStream","ranges":[{"startOffset":832,"endOffset":972,"count":0}],"isBlockCoverage":false},{"functionName":"isDecompressionStream","ranges":[{"startOffset":976,"endOffset":1120,"count":0}],"isBlockCoverage":false},{"functionName":"CompressionStream","ranges":[{"startOffset":1220,"endOffset":1743,"count":0}],"isBlockCoverage":false},{"functionName":"get readable","ranges":[{"startOffset":1808,"endOffset":1961,"count":0}],"isBlockCoverage":false},{"functionName":"get writable","ranges":[{"startOffset":2026,"endOffset":2179,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2185,"endOffset":2466,"count":0}],"isBlockCoverage":false},{"functionName":"DecompressionStream","ranges":[{"startOffset":2571,"endOffset":3098,"count":0}],"isBlockCoverage":false},{"functionName":"get readable","ranges":[{"startOffset":3163,"endOffset":3320,"count":0}],"isBlockCoverage":false},{"functionName":"get writable","ranges":[{"startOffset":3385,"endOffset":3542,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3548,"endOffset":3835,"count":0}],"isBlockCoverage":false}]},{"scriptId":"480","url":"node:internal/webstreams/adapters","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26248,"count":1}],"isBlockCoverage":false},{"functionName":"newWritableStreamFromStreamWritable","ranges":[{"startOffset":2003,"endOffset":5184,"count":0}],"isBlockCoverage":false},{"functionName":"newStreamWritableFromWritableStream","ranges":[{"startOffset":5417,"endOffset":9903,"count":0}],"isBlockCoverage":false},{"functionName":"newReadableStreamFromStreamReadable","ranges":[{"startOffset":10124,"endOffset":12722,"count":0}],"isBlockCoverage":false},{"functionName":"newStreamReadableFromReadableStream","ranges":[{"startOffset":12949,"endOffset":14905,"count":0}],"isBlockCoverage":false},{"functionName":"newReadableWritablePairFromDuplex","ranges":[{"startOffset":15135,"endOffset":16354,"count":0}],"isBlockCoverage":false},{"functionName":"newStreamDuplexFromReadableWritablePair","ranges":[{"startOffset":16639,"endOffset":22078,"count":0}],"isBlockCoverage":false},{"functionName":"newWritableStreamFromStreamBase","ranges":[{"startOffset":22301,"endOffset":24218,"count":0}],"isBlockCoverage":false},{"functionName":"newReadableStreamFromStreamBase","ranges":[{"startOffset":24335,"endOffset":25906,"count":0}],"isBlockCoverage":false}]},{"scriptId":"481","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sinon-chai/lib/sinon-chai.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6137,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56,"endOffset":643,"count":1},{"startOffset":314,"endOffset":640,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":402,"endOffset":457,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":644,"endOffset":6132,"count":1}],"isBlockCoverage":true},{"functionName":"isSpy","ranges":[{"startOffset":716,"endOffset":935,"count":0}],"isBlockCoverage":false},{"functionName":"timesInWords","ranges":[{"startOffset":943,"endOffset":1318,"count":0}],"isBlockCoverage":false},{"functionName":"isCall","ranges":[{"startOffset":1326,"endOffset":1423,"count":0}],"isBlockCoverage":false},{"functionName":"assertCanWorkWith","ranges":[{"startOffset":1431,"endOffset":1657,"count":0}],"isBlockCoverage":false},{"functionName":"getMessages","ranges":[{"startOffset":1665,"endOffset":2377,"count":0}],"isBlockCoverage":false},{"functionName":"sinonProperty","ranges":[{"startOffset":2385,"endOffset":2743,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2501,"endOffset":2734,"count":0}],"isBlockCoverage":false},{"functionName":"sinonPropertyAsBooleanMethod","ranges":[{"startOffset":2751,"endOffset":3154,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2880,"endOffset":3145,"count":0}],"isBlockCoverage":false},{"functionName":"createSinonMethodHandler","ranges":[{"startOffset":3162,"endOffset":3931,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3251,"endOffset":3923,"count":0}],"isBlockCoverage":false},{"functionName":"sinonMethodAsProperty","ranges":[{"startOffset":3939,"endOffset":4160,"count":1}],"isBlockCoverage":true},{"functionName":"exceptionalSinonMethod","ranges":[{"startOffset":4168,"endOffset":4412,"count":12}],"isBlockCoverage":true},{"functionName":"sinonMethod","ranges":[{"startOffset":4420,"endOffset":4552,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4614,"endOffset":4677,"count":0}],"isBlockCoverage":false}]},{"scriptId":"482","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":89,"count":1}],"isBlockCoverage":true}]},{"scriptId":"483","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/sequelize.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23301,"count":1},{"startOffset":22753,"endOffset":22801,"count":47},{"startOffset":23112,"endOffset":23160,"count":29}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":341,"endOffset":478,"count":7},{"startOffset":373,"endOffset":459,"count":2},{"startOffset":460,"endOffset":478,"count":5}],"isBlockCoverage":true},{"functionName":"__spreadValues","ranges":[{"startOffset":501,"endOffset":798,"count":6},{"startOffset":534,"endOffset":545,"count":2},{"startOffset":551,"endOffset":623,"count":7},{"startOffset":696,"endOffset":784,"count":0}],"isBlockCoverage":true},{"functionName":"__spreadProps","ranges":[{"startOffset":820,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"Sequelize","ranges":[{"startOffset":2202,"endOffset":7989,"count":1},{"startOffset":2302,"endOffset":2333,"count":0},{"startOffset":2335,"endOffset":2452,"count":0},{"startOffset":2485,"endOffset":2516,"count":0},{"startOffset":2543,"endOffset":2574,"count":0},{"startOffset":2576,"endOffset":4133,"count":0},{"startOffset":4165,"endOffset":4170,"count":0},{"startOffset":5152,"endOffset":5238,"count":0},{"startOffset":5286,"endOffset":5334,"count":0},{"startOffset":5377,"endOffset":5414,"count":0},{"startOffset":5416,"endOffset":5582,"count":0},{"startOffset":5622,"endOffset":5707,"count":0},{"startOffset":5797,"endOffset":5821,"count":0},{"startOffset":5855,"endOffset":5879,"count":0},{"startOffset":5913,"endOffset":5937,"count":0},{"startOffset":5938,"endOffset":5945,"count":0},{"startOffset":6498,"endOffset":6577,"count":0},{"startOffset":6584,"endOffset":6659,"count":0},{"startOffset":6666,"endOffset":6741,"count":0},{"startOffset":6748,"endOffset":6825,"count":0},{"startOffset":6920,"endOffset":6997,"count":0},{"startOffset":7004,"endOffset":7075,"count":0},{"startOffset":7082,"endOffset":7165,"count":0},{"startOffset":7172,"endOffset":7336,"count":0},{"startOffset":7510,"endOffset":7643,"count":0},{"startOffset":7705,"endOffset":7756,"count":0}],"isBlockCoverage":true},{"functionName":"refreshTypes","ranges":[{"startOffset":7992,"endOffset":8069,"count":0}],"isBlockCoverage":false},{"functionName":"getDialect","ranges":[{"startOffset":8072,"endOffset":8123,"count":1}],"isBlockCoverage":true},{"functionName":"getDatabaseName","ranges":[{"startOffset":8126,"endOffset":8182,"count":0}],"isBlockCoverage":false},{"functionName":"getQueryInterface","ranges":[{"startOffset":8185,"endOffset":8242,"count":1}],"isBlockCoverage":true},{"functionName":"define","ranges":[{"startOffset":8245,"endOffset":8461,"count":0}],"isBlockCoverage":false},{"functionName":"model","ranges":[{"startOffset":8464,"endOffset":8640,"count":0}],"isBlockCoverage":false},{"functionName":"isDefined","ranges":[{"startOffset":8643,"endOffset":8750,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8709,"endOffset":8744,"count":0}],"isBlockCoverage":false},{"functionName":"query","ranges":[{"startOffset":8753,"endOffset":12378,"count":1},{"startOffset":8885,"endOffset":8902,"count":0},{"startOffset":8904,"endOffset":8963,"count":0},{"startOffset":9071,"endOffset":9150,"count":0},{"startOffset":9287,"endOffset":9300,"count":0},{"startOffset":9385,"endOffset":9410,"count":0},{"startOffset":9454,"endOffset":9625,"count":0},{"startOffset":9700,"endOffset":9749,"count":0},{"startOffset":9750,"endOffset":9789,"count":0},{"startOffset":9831,"endOffset":9907,"count":0},{"startOffset":9941,"endOffset":10483,"count":0},{"startOffset":10535,"endOffset":10550,"count":0},{"startOffset":10552,"endOffset":10647,"count":0},{"startOffset":10678,"endOffset":10758,"count":0},{"startOffset":10805,"endOffset":10924,"count":0}],"isBlockCoverage":true},{"functionName":"checkTransaction","ranges":[{"startOffset":10954,"endOffset":11346,"count":1},{"startOffset":10992,"endOffset":11023,"count":0},{"startOffset":11024,"endOffset":11056,"count":0},{"startOffset":11058,"endOffset":11340,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11461,"endOffset":12358,"count":1},{"startOffset":11535,"endOffset":11609,"count":0},{"startOffset":11688,"endOffset":11720,"count":0},{"startOffset":11770,"endOffset":11828,"count":0},{"startOffset":11830,"endOffset":12352,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":12381,"endOffset":13061,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":13064,"endOffset":13137,"count":0}],"isBlockCoverage":false},{"functionName":"createSchema","ranges":[{"startOffset":13140,"endOffset":13254,"count":0}],"isBlockCoverage":false},{"functionName":"showAllSchemas","ranges":[{"startOffset":13257,"endOffset":13359,"count":0}],"isBlockCoverage":false},{"functionName":"dropSchema","ranges":[{"startOffset":13362,"endOffset":13472,"count":0}],"isBlockCoverage":false},{"functionName":"dropAllSchemas","ranges":[{"startOffset":13475,"endOffset":13577,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":13580,"endOffset":14635,"count":0}],"isBlockCoverage":false},{"functionName":"_syncModelsWithCyclicReferences","ranges":[{"startOffset":14638,"endOffset":15254,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":15257,"endOffset":16191,"count":0}],"isBlockCoverage":false},{"functionName":"drop","ranges":[{"startOffset":16194,"endOffset":17263,"count":0}],"isBlockCoverage":false},{"functionName":"authenticate","ranges":[{"startOffset":17266,"endOffset":17501,"count":1},{"startOffset":17485,"endOffset":17500,"count":0}],"isBlockCoverage":true},{"functionName":"databaseVersion","ranges":[{"startOffset":17504,"endOffset":17608,"count":0}],"isBlockCoverage":false},{"functionName":"random","ranges":[{"startOffset":17611,"endOffset":17766,"count":0}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":17776,"endOffset":17832,"count":0}],"isBlockCoverage":false},{"functionName":"col","ranges":[{"startOffset":17842,"endOffset":17887,"count":0}],"isBlockCoverage":false},{"functionName":"cast","ranges":[{"startOffset":17897,"endOffset":17956,"count":0}],"isBlockCoverage":false},{"functionName":"literal","ranges":[{"startOffset":17966,"endOffset":18019,"count":0}],"isBlockCoverage":false},{"functionName":"and","ranges":[{"startOffset":18029,"endOffset":18078,"count":0}],"isBlockCoverage":false},{"functionName":"or","ranges":[{"startOffset":18088,"endOffset":18135,"count":0}],"isBlockCoverage":false},{"functionName":"json","ranges":[{"startOffset":18145,"endOffset":18232,"count":0}],"isBlockCoverage":false},{"functionName":"where","ranges":[{"startOffset":18242,"endOffset":18331,"count":0}],"isBlockCoverage":false},{"functionName":"transaction","ranges":[{"startOffset":18334,"endOffset":19021,"count":0}],"isBlockCoverage":false},{"functionName":"useCLS","ranges":[{"startOffset":19031,"endOffset":19246,"count":0}],"isBlockCoverage":false},{"functionName":"_clsRun","ranges":[{"startOffset":19256,"endOffset":19409,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":19412,"endOffset":20089,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":20092,"endOffset":20148,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeDataType","ranges":[{"startOffset":20151,"endOffset":20679,"count":30},{"startOffset":20219,"endOffset":20231,"count":5},{"startOffset":20232,"endOffset":20238,"count":25},{"startOffset":20288,"endOffset":20293,"count":0},{"startOffset":20426,"endOffset":20658,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeAttribute","ranges":[{"startOffset":20682,"endOffset":21587,"count":14},{"startOffset":20751,"endOffset":20797,"count":0},{"startOffset":20829,"endOffset":20846,"count":0},{"startOffset":20981,"endOffset":21205,"count":3},{"startOffset":21038,"endOffset":21125,"count":0},{"startOffset":21127,"endOffset":21199,"count":0},{"startOffset":21256,"endOffset":21561,"count":1},{"startOffset":21286,"endOffset":21377,"count":0},{"startOffset":21479,"endOffset":21555,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":22063,"endOffset":22121,"count":0}],"isBlockCoverage":false}]},{"scriptId":"484","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg-connection-string/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3011,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":193,"endOffset":2965,"count":0}],"isBlockCoverage":false}]},{"scriptId":"485","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/retry-as-promised/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4313,"count":1}],"isBlockCoverage":true},{"functionName":"TimeoutError","ranges":[{"startOffset":173,"endOffset":315,"count":0}],"isBlockCoverage":false},{"functionName":"matches","ranges":[{"startOffset":355,"endOffset":796,"count":0}],"isBlockCoverage":false},{"functionName":"retryAsPromised","ranges":[{"startOffset":797,"endOffset":4232,"count":1},{"startOffset":884,"endOffset":981,"count":0},{"startOffset":1035,"endOffset":1058,"count":0},{"startOffset":1143,"endOffset":1166,"count":0},{"startOffset":1346,"endOffset":1368,"count":0},{"startOffset":1369,"endOffset":1373,"count":0},{"startOffset":1441,"endOffset":1467,"count":0},{"startOffset":1701,"endOffset":1733,"count":0},{"startOffset":1766,"endOffset":1885,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1909,"endOffset":4228,"count":1},{"startOffset":2039,"endOffset":2298,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2074,"endOffset":2269,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2409,"endOffset":2574,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2595,"endOffset":4220,"count":0}],"isBlockCoverage":false}]},{"scriptId":"486","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/lodash/lodash.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":544096,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":338,"endOffset":544082,"count":1},{"startOffset":17825,"endOffset":17832,"count":0},{"startOffset":17833,"endOffset":17858,"count":0},{"startOffset":17859,"endOffset":17866,"count":0},{"startOffset":17944,"endOffset":17955,"count":0},{"startOffset":17956,"endOffset":17984,"count":0},{"startOffset":543270,"endOffset":543302,"count":0},{"startOffset":543303,"endOffset":543316,"count":0},{"startOffset":543318,"endOffset":543789,"count":0},{"startOffset":544015,"endOffset":544080,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18578,"endOffset":18945,"count":1},{"startOffset":18781,"endOffset":18890,"count":0},{"startOffset":18891,"endOffset":18921,"count":0},{"startOffset":18929,"endOffset":18941,"count":0}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":19779,"endOffset":20109,"count":4},{"startOffset":19850,"endOffset":19884,"count":0},{"startOffset":19891,"endOffset":19934,"count":0},{"startOffset":20000,"endOffset":20061,"count":0},{"startOffset":20067,"endOffset":20108,"count":0}],"isBlockCoverage":true},{"functionName":"arrayAggregator","ranges":[{"startOffset":20506,"endOffset":20797,"count":0}],"isBlockCoverage":false},{"functionName":"arrayEach","ranges":[{"startOffset":21093,"endOffset":21344,"count":27},{"startOffset":21182,"endOffset":21185,"count":0},{"startOffset":21232,"endOffset":21322,"count":1028},{"startOffset":21292,"endOffset":21316,"count":0}],"isBlockCoverage":true},{"functionName":"arrayEachRight","ranges":[{"startOffset":21645,"endOffset":21875,"count":0}],"isBlockCoverage":false},{"functionName":"arrayEvery","ranges":[{"startOffset":22232,"endOffset":22483,"count":0}],"isBlockCoverage":false},{"functionName":"arrayFilter","ranges":[{"startOffset":22794,"endOffset":23129,"count":17},{"startOffset":22886,"endOffset":22889,"count":0},{"startOffset":22979,"endOffset":23106,"count":325},{"startOffset":23055,"endOffset":23100,"count":323}],"isBlockCoverage":true},{"functionName":"arrayIncludes","ranges":[{"startOffset":23452,"endOffset":23603,"count":0}],"isBlockCoverage":false},{"functionName":"arrayIncludesWith","ranges":[{"startOffset":23961,"endOffset":24220,"count":0}],"isBlockCoverage":false},{"functionName":"arrayMap","ranges":[{"startOffset":24525,"endOffset":24785,"count":1},{"startOffset":24613,"endOffset":24616,"count":0},{"startOffset":24695,"endOffset":24762,"count":16}],"isBlockCoverage":true},{"functionName":"arrayPush","ranges":[{"startOffset":25005,"endOffset":25228,"count":14},{"startOffset":25154,"endOffset":25206,"count":5}],"isBlockCoverage":true},{"functionName":"arrayReduce","ranges":[{"startOffset":25687,"endOffset":26031,"count":0}],"isBlockCoverage":false},{"functionName":"arrayReduceRight","ranges":[{"startOffset":26494,"endOffset":26817,"count":0}],"isBlockCoverage":false},{"functionName":"arraySome","ranges":[{"startOffset":27174,"endOffset":27423,"count":0}],"isBlockCoverage":false},{"functionName":"asciiToArray","ranges":[{"startOffset":27816,"endOffset":27880,"count":0}],"isBlockCoverage":false},{"functionName":"asciiWords","ranges":[{"startOffset":28070,"endOffset":28147,"count":0}],"isBlockCoverage":false},{"functionName":"baseFindKey","ranges":[{"startOffset":28645,"endOffset":28906,"count":0}],"isBlockCoverage":false},{"functionName":"baseFindIndex","ranges":[{"startOffset":29375,"endOffset":29682,"count":0}],"isBlockCoverage":false},{"functionName":"baseIndexOf","ranges":[{"startOffset":30022,"endOffset":30199,"count":1},{"startOffset":30150,"endOffset":30194,"count":0}],"isBlockCoverage":true},{"functionName":"baseIndexOfWith","ranges":[{"startOffset":30608,"endOffset":30865,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsNaN","ranges":[{"startOffset":31094,"endOffset":31153,"count":0}],"isBlockCoverage":false},{"functionName":"baseMean","ranges":[{"startOffset":31452,"endOffset":31606,"count":0}],"isBlockCoverage":false},{"functionName":"baseProperty","ranges":[{"startOffset":31835,"endOffset":31959,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31875,"endOffset":31954,"count":1},{"startOffset":31922,"endOffset":31933,"count":0}],"isBlockCoverage":true},{"functionName":"basePropertyOf","ranges":[{"startOffset":32182,"endOffset":32308,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32227,"endOffset":32303,"count":0}],"isBlockCoverage":false},{"functionName":"baseReduce","ranges":[{"startOffset":32929,"endOffset":33230,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33032,"endOffset":33200,"count":16},{"startOffset":33107,"endOffset":33135,"count":0}],"isBlockCoverage":true},{"functionName":"baseSortBy","ranges":[{"startOffset":33590,"endOffset":33780,"count":0}],"isBlockCoverage":false},{"functionName":"baseSum","ranges":[{"startOffset":34076,"endOffset":34396,"count":0}],"isBlockCoverage":false},{"functionName":"baseTimes","ranges":[{"startOffset":34731,"endOffset":34906,"count":0}],"isBlockCoverage":false},{"functionName":"baseToPairs","ranges":[{"startOffset":35276,"endOffset":35401,"count":0}],"isBlockCoverage":false},{"functionName":"baseTrim","ranges":[{"startOffset":35577,"endOffset":35720,"count":0}],"isBlockCoverage":false},{"functionName":"baseUnary","ranges":[{"startOffset":35956,"endOffset":36048,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":35994,"endOffset":36043,"count":35}],"isBlockCoverage":true},{"functionName":"baseValues","ranges":[{"startOffset":36426,"endOffset":36543,"count":0}],"isBlockCoverage":false},{"functionName":"cacheHas","ranges":[{"startOffset":36813,"endOffset":36875,"count":0}],"isBlockCoverage":false},{"functionName":"charsStartIndex","ranges":[{"startOffset":37246,"endOffset":37461,"count":0}],"isBlockCoverage":false},{"functionName":"charsEndIndex","ranges":[{"startOffset":37828,"endOffset":38011,"count":0}],"isBlockCoverage":false},{"functionName":"countHolders","ranges":[{"startOffset":38269,"endOffset":38485,"count":0}],"isBlockCoverage":false},{"functionName":"escapeStringChar","ranges":[{"startOffset":39290,"endOffset":39364,"count":0}],"isBlockCoverage":false},{"functionName":"getValue","ranges":[{"startOffset":39595,"endOffset":39684,"count":7},{"startOffset":39654,"endOffset":39665,"count":0}],"isBlockCoverage":true},{"functionName":"hasUnicode","ranges":[{"startOffset":39895,"endOffset":39966,"count":0}],"isBlockCoverage":false},{"functionName":"hasUnicodeWord","ranges":[{"startOffset":40194,"endOffset":40273,"count":0}],"isBlockCoverage":false},{"functionName":"iteratorToArray","ranges":[{"startOffset":40452,"endOffset":40629,"count":0}],"isBlockCoverage":false},{"functionName":"mapToArray","ranges":[{"startOffset":40804,"endOffset":40993,"count":0}],"isBlockCoverage":false},{"functionName":"overArg","ranges":[{"startOffset":41267,"endOffset":41375,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41314,"endOffset":41370,"count":84}],"isBlockCoverage":true},{"functionName":"replaceHolders","ranges":[{"startOffset":41706,"endOffset":42078,"count":0}],"isBlockCoverage":false},{"functionName":"setToArray","ranges":[{"startOffset":42247,"endOffset":42424,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":42345,"endOffset":42399,"count":2}],"isBlockCoverage":true},{"functionName":"setToPairs","ranges":[{"startOffset":42603,"endOffset":42789,"count":0}],"isBlockCoverage":false},{"functionName":"strictIndexOf","ranges":[{"startOffset":43163,"endOffset":43397,"count":1},{"startOffset":43305,"endOffset":43378,"count":2},{"startOffset":43341,"endOffset":43372,"count":1},{"startOffset":43378,"endOffset":43396,"count":0}],"isBlockCoverage":true},{"functionName":"strictLastIndexOf","ranges":[{"startOffset":43775,"endOffset":43975,"count":0}],"isBlockCoverage":false},{"functionName":"stringSize","ranges":[{"startOffset":44154,"endOffset":44272,"count":0}],"isBlockCoverage":false},{"functionName":"stringToArray","ranges":[{"startOffset":44445,"endOffset":44572,"count":0}],"isBlockCoverage":false},{"functionName":"trimmedEndIndex","ranges":[{"startOffset":44847,"endOffset":45001,"count":0}],"isBlockCoverage":false},{"functionName":"unicodeSize","ranges":[{"startOffset":45444,"endOffset":45598,"count":0}],"isBlockCoverage":false},{"functionName":"unicodeToArray","ranges":[{"startOffset":45781,"endOffset":45860,"count":0}],"isBlockCoverage":false},{"functionName":"unicodeWords","ranges":[{"startOffset":46051,"endOffset":46132,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":46990,"endOffset":543025,"count":1},{"startOffset":47060,"endOffset":47124,"count":0},{"startOffset":49023,"endOffset":49034,"count":0},{"startOffset":49160,"endOffset":49171,"count":0},{"startOffset":49437,"endOffset":49448,"count":0},{"startOffset":49497,"endOffset":49508,"count":0},{"startOffset":49563,"endOffset":49574,"count":0},{"startOffset":49861,"endOffset":49884,"count":0},{"startOffset":49938,"endOffset":49949,"count":0},{"startOffset":50014,"endOffset":50035,"count":0},{"startOffset":50304,"endOffset":50315,"count":0},{"startOffset":51565,"endOffset":51576,"count":0},{"startOffset":51636,"endOffset":51647,"count":0},{"startOffset":51709,"endOffset":51720,"count":0},{"startOffset":132120,"endOffset":132130,"count":0},{"startOffset":132534,"endOffset":132544,"count":0},{"startOffset":181139,"endOffset":181145,"count":0},{"startOffset":197016,"endOffset":197022,"count":0},{"startOffset":201026,"endOffset":201037,"count":0},{"startOffset":201557,"endOffset":201568,"count":0},{"startOffset":202355,"endOffset":202934,"count":0},{"startOffset":212256,"endOffset":212268,"count":0},{"startOffset":369389,"endOffset":369543,"count":0},{"startOffset":370622,"endOffset":370641,"count":0},{"startOffset":373203,"endOffset":373215,"count":0},{"startOffset":373688,"endOffset":373700,"count":0},{"startOffset":384049,"endOffset":384060,"count":0},{"startOffset":391938,"endOffset":391952,"count":0},{"startOffset":393298,"endOffset":393309,"count":0},{"startOffset":394942,"endOffset":394960,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48099,"endOffset":48263,"count":1},{"startOffset":48153,"endOffset":48171,"count":0},{"startOffset":48172,"endOffset":48199,"count":0},{"startOffset":48225,"endOffset":48251,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":49603,"endOffset":49757,"count":1},{"startOffset":49739,"endOffset":49751,"count":0}],"isBlockCoverage":true},{"functionName":"lodash","ranges":[{"startOffset":58305,"endOffset":58654,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58939,"endOffset":59291,"count":1}],"isBlockCoverage":true},{"functionName":"object","ranges":[{"startOffset":58958,"endOffset":58978,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58992,"endOffset":59284,"count":14},{"startOffset":59040,"endOffset":59072,"count":0},{"startOffset":59148,"endOffset":59283,"count":0}],"isBlockCoverage":true},{"functionName":"baseLodash","ranges":[{"startOffset":59414,"endOffset":59476,"count":0}],"isBlockCoverage":false},{"functionName":"LodashWrapper","ranges":[{"startOffset":59706,"endOffset":59910,"count":0}],"isBlockCoverage":false},{"functionName":"LazyWrapper","ranges":[{"startOffset":61864,"endOffset":62120,"count":0}],"isBlockCoverage":false},{"functionName":"lazyClone","ranges":[{"startOffset":62330,"endOffset":62734,"count":0}],"isBlockCoverage":false},{"functionName":"lazyReverse","ranges":[{"startOffset":62950,"endOffset":63225,"count":0}],"isBlockCoverage":false},{"functionName":"lazyValue","ranges":[{"startOffset":63426,"endOffset":64844,"count":0}],"isBlockCoverage":false},{"functionName":"Hash","ranges":[{"startOffset":65259,"endOffset":65504,"count":2},{"startOffset":65345,"endOffset":65361,"count":0},{"startOffset":65415,"endOffset":65498,"count":0}],"isBlockCoverage":true},{"functionName":"hashClear","ranges":[{"startOffset":65642,"endOffset":65753,"count":2},{"startOffset":65721,"endOffset":65725,"count":0}],"isBlockCoverage":true},{"functionName":"hashDelete","ranges":[{"startOffset":66078,"endOffset":66229,"count":0}],"isBlockCoverage":false},{"functionName":"hashGet","ranges":[{"startOffset":66452,"endOffset":66711,"count":21},{"startOffset":66607,"endOffset":66618,"count":0},{"startOffset":66636,"endOffset":66692,"count":0},{"startOffset":66693,"endOffset":66704,"count":0}],"isBlockCoverage":true},{"functionName":"hashHas","ranges":[{"startOffset":66986,"endOffset":67135,"count":25},{"startOffset":67096,"endOffset":67128,"count":0}],"isBlockCoverage":true},{"functionName":"hashSet","ranges":[{"startOffset":67408,"endOffset":67619,"count":2},{"startOffset":67504,"endOffset":67507,"count":0},{"startOffset":67569,"endOffset":67585,"count":0}],"isBlockCoverage":true},{"functionName":"ListCache","ranges":[{"startOffset":68079,"endOffset":68329,"count":5},{"startOffset":68170,"endOffset":68186,"count":0},{"startOffset":68240,"endOffset":68323,"count":0}],"isBlockCoverage":true},{"functionName":"listCacheClear","ranges":[{"startOffset":68478,"endOffset":68558,"count":5}],"isBlockCoverage":true},{"functionName":"listCacheDelete","ranges":[{"startOffset":68846,"endOffset":69201,"count":3},{"startOffset":68975,"endOffset":69006,"count":0},{"startOffset":69105,"endOffset":69157,"count":0}],"isBlockCoverage":true},{"functionName":"listCacheGet","ranges":[{"startOffset":69435,"endOffset":69598,"count":20},{"startOffset":69563,"endOffset":69574,"count":19},{"startOffset":69575,"endOffset":69591,"count":1}],"isBlockCoverage":true},{"functionName":"listCacheHas","ranges":[{"startOffset":69884,"endOffset":69970,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheSet","ranges":[{"startOffset":70260,"endOffset":70528,"count":0}],"isBlockCoverage":false},{"functionName":"MapCache","ranges":[{"startOffset":71066,"endOffset":71315,"count":1},{"startOffset":71156,"endOffset":71172,"count":0},{"startOffset":71226,"endOffset":71309,"count":0}],"isBlockCoverage":true},{"functionName":"mapCacheClear","ranges":[{"startOffset":71456,"endOffset":71634,"count":1},{"startOffset":71578,"endOffset":71590,"count":0}],"isBlockCoverage":true},{"functionName":"mapCacheDelete","ranges":[{"startOffset":71914,"endOffset":72063,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheGet","ranges":[{"startOffset":72289,"endOffset":72367,"count":21}],"isBlockCoverage":true},{"functionName":"mapCacheHas","ranges":[{"startOffset":72645,"endOffset":72723,"count":23}],"isBlockCoverage":true},{"functionName":"mapCacheSet","ranges":[{"startOffset":73004,"endOffset":73206,"count":2},{"startOffset":73173,"endOffset":73176,"count":0}],"isBlockCoverage":true},{"functionName":"SetCache","ranges":[{"startOffset":73731,"endOffset":73952,"count":0}],"isBlockCoverage":false},{"functionName":"setCacheAdd","ranges":[{"startOffset":74196,"endOffset":74298,"count":0}],"isBlockCoverage":false},{"functionName":"setCacheHas","ranges":[{"startOffset":74558,"endOffset":74632,"count":0}],"isBlockCoverage":false},{"functionName":"Stack","ranges":[{"startOffset":75048,"endOffset":75165,"count":5}],"isBlockCoverage":true},{"functionName":"stackClear","ranges":[{"startOffset":75305,"endOffset":75392,"count":0}],"isBlockCoverage":false},{"functionName":"stackDelete","ranges":[{"startOffset":75671,"endOffset":75827,"count":3}],"isBlockCoverage":true},{"functionName":"stackGet","ranges":[{"startOffset":76052,"endOffset":76119,"count":20}],"isBlockCoverage":true},{"functionName":"stackHas","ranges":[{"startOffset":76396,"endOffset":76463,"count":0}],"isBlockCoverage":false},{"functionName":"stackSet","ranges":[{"startOffset":76745,"endOffset":77189,"count":19},{"startOffset":77047,"endOffset":77188,"count":0}],"isBlockCoverage":true},{"functionName":"arrayLikeKeys","ranges":[{"startOffset":77808,"endOffset":78951,"count":0}],"isBlockCoverage":false},{"functionName":"arraySample","ranges":[{"startOffset":79148,"endOffset":79284,"count":0}],"isBlockCoverage":false},{"functionName":"arraySampleSize","ranges":[{"startOffset":79549,"endOffset":79666,"count":0}],"isBlockCoverage":false},{"functionName":"arrayShuffle","ranges":[{"startOffset":79873,"endOffset":79953,"count":0}],"isBlockCoverage":false},{"functionName":"assignMergeValue","ranges":[{"startOffset":80257,"endOffset":80480,"count":38},{"startOffset":80364,"endOffset":80418,"count":2},{"startOffset":80398,"endOffset":80417,"count":0},{"startOffset":80420,"endOffset":80474,"count":36}],"isBlockCoverage":true},{"functionName":"assignValue","ranges":[{"startOffset":80895,"endOffset":81157,"count":705},{"startOffset":81017,"endOffset":81039,"count":0},{"startOffset":81041,"endOffset":81095,"count":0}],"isBlockCoverage":true},{"functionName":"assocIndexOf","ranges":[{"startOffset":81454,"endOffset":81654,"count":23},{"startOffset":81546,"endOffset":81631,"count":47},{"startOffset":81587,"endOffset":81623,"count":4},{"startOffset":81631,"endOffset":81653,"count":19}],"isBlockCoverage":true},{"functionName":"baseAggregator","ranges":[{"startOffset":82158,"endOffset":82395,"count":0}],"isBlockCoverage":false},{"functionName":"baseAssign","ranges":[{"startOffset":82702,"endOffset":82810,"count":0}],"isBlockCoverage":false},{"functionName":"baseAssignIn","ranges":[{"startOffset":83119,"endOffset":83231,"count":0}],"isBlockCoverage":false},{"functionName":"baseAssignValue","ranges":[{"startOffset":83535,"endOffset":83854,"count":755},{"startOffset":83611,"endOffset":83628,"count":0},{"startOffset":83630,"endOffset":83804,"count":0}],"isBlockCoverage":true},{"functionName":"baseAt","ranges":[{"startOffset":84148,"endOffset":84441,"count":0}],"isBlockCoverage":false},{"functionName":"baseClamp","ranges":[{"startOffset":84760,"endOffset":85064,"count":0}],"isBlockCoverage":false},{"functionName":"baseClone","ranges":[{"startOffset":85711,"endOffset":88167,"count":688},{"startOffset":85962,"endOffset":86056,"count":0},{"startOffset":86089,"endOffset":86121,"count":0},{"startOffset":86150,"endOffset":86181,"count":570},{"startOffset":86181,"endOffset":86233,"count":118},{"startOffset":86233,"endOffset":86358,"count":6},{"startOffset":86296,"endOffset":86350,"count":0},{"startOffset":86358,"endOffset":87052,"count":112},{"startOffset":86435,"endOffset":86451,"count":11},{"startOffset":86483,"endOffset":86539,"count":0},{"startOffset":86569,"endOffset":86586,"count":101},{"startOffset":86587,"endOffset":86609,"count":101},{"startOffset":86611,"endOffset":86883,"count":11},{"startOffset":86651,"endOffset":86655,"count":0},{"startOffset":86705,"endOffset":86873,"count":0},{"startOffset":86883,"endOffset":87044,"count":101},{"startOffset":86962,"endOffset":86966,"count":0},{"startOffset":86979,"endOffset":87044,"count":0},{"startOffset":87052,"endOffset":87140,"count":17},{"startOffset":87140,"endOffset":87162,"count":4},{"startOffset":87221,"endOffset":87254,"count":1},{"startOffset":87254,"endOffset":87312,"count":16},{"startOffset":87312,"endOffset":87464,"count":0},{"startOffset":87464,"endOffset":87645,"count":16},{"startOffset":87488,"endOffset":87645,"count":0},{"startOffset":87645,"endOffset":87721,"count":16},{"startOffset":87693,"endOffset":87707,"count":0},{"startOffset":87730,"endOffset":87756,"count":0},{"startOffset":87783,"endOffset":87794,"count":6},{"startOffset":87795,"endOffset":87812,"count":10},{"startOffset":87836,"endOffset":87844,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":87336,"endOffset":87454,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":87512,"endOffset":87635,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":87846,"endOffset":88138,"count":684},{"startOffset":87891,"endOffset":87961,"count":174}],"isBlockCoverage":true},{"functionName":"baseConforms","ranges":[{"startOffset":88426,"endOffset":88590,"count":0}],"isBlockCoverage":false},{"functionName":"baseConformsTo","ranges":[{"startOffset":88925,"endOffset":89371,"count":0}],"isBlockCoverage":false},{"functionName":"baseDelay","ranges":[{"startOffset":89788,"endOffset":90001,"count":0}],"isBlockCoverage":false},{"functionName":"baseDifference","ranges":[{"startOffset":90497,"endOffset":91742,"count":0}],"isBlockCoverage":false},{"functionName":"baseEvery","ranges":[{"startOffset":92878,"endOffset":93126,"count":0}],"isBlockCoverage":false},{"functionName":"baseExtremum","ranges":[{"startOffset":93555,"endOffset":94057,"count":0}],"isBlockCoverage":false},{"functionName":"baseFill","ranges":[{"startOffset":94434,"endOffset":94898,"count":0}],"isBlockCoverage":false},{"functionName":"baseFilter","ranges":[{"startOffset":95228,"endOffset":95487,"count":0}],"isBlockCoverage":false},{"functionName":"baseFlatten","ranges":[{"startOffset":96014,"endOffset":96691,"count":1},{"startOffset":96353,"endOffset":96516,"count":0},{"startOffset":96583,"endOffset":96656,"count":0}],"isBlockCoverage":true},{"functionName":"baseForOwn","ranges":[{"startOffset":97998,"endOffset":98099,"count":40}],"isBlockCoverage":true},{"functionName":"baseForOwnRight","ranges":[{"startOffset":98406,"endOffset":98517,"count":0}],"isBlockCoverage":false},{"functionName":"baseFunctions","ranges":[{"startOffset":98862,"endOffset":99005,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":98934,"endOffset":98997,"count":325}],"isBlockCoverage":true},{"functionName":"baseGet","ranges":[{"startOffset":99294,"endOffset":99590,"count":44},{"startOffset":99447,"endOffset":99464,"count":65},{"startOffset":99563,"endOffset":99571,"count":21},{"startOffset":99572,"endOffset":99583,"count":23}],"isBlockCoverage":true},{"functionName":"baseGetAllKeys","ranges":[{"startOffset":100099,"endOffset":100278,"count":11},{"startOffset":100222,"endOffset":100230,"count":0}],"isBlockCoverage":true},{"functionName":"baseGetTag","ranges":[{"startOffset":100504,"endOffset":100759,"count":480},{"startOffset":100558,"endOffset":100628,"count":0},{"startOffset":100702,"endOffset":100720,"count":8},{"startOffset":100729,"endOffset":100752,"count":472}],"isBlockCoverage":true},{"functionName":"baseGt","ranges":[{"startOffset":101074,"endOffset":101139,"count":0}],"isBlockCoverage":false},{"functionName":"baseHas","ranges":[{"startOffset":101434,"endOffset":101536,"count":0}],"isBlockCoverage":false},{"functionName":"baseHasIn","ranges":[{"startOffset":101833,"endOffset":101926,"count":5}],"isBlockCoverage":true},{"functionName":"baseInRange","ranges":[{"startOffset":102286,"endOffset":102414,"count":0}],"isBlockCoverage":false},{"functionName":"baseIntersection","ranges":[{"startOffset":102876,"endOffset":104492,"count":0}],"isBlockCoverage":false},{"functionName":"baseInverter","ranges":[{"startOffset":105002,"endOffset":105221,"count":0}],"isBlockCoverage":false},{"functionName":"baseInvoke","ranges":[{"startOffset":105616,"endOffset":105874,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsArguments","ranges":[{"startOffset":106092,"endOffset":106197,"count":4},{"startOffset":106159,"endOffset":106190,"count":3}],"isBlockCoverage":true},{"functionName":"baseIsArrayBuffer","ranges":[{"startOffset":106455,"endOffset":106569,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsDate","ranges":[{"startOffset":106818,"endOffset":106918,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsEqual","ranges":[{"startOffset":107533,"endOffset":107899,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsEqualDeep","ranges":[{"startOffset":108666,"endOffset":110348,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsMap","ranges":[{"startOffset":110588,"endOffset":110682,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsMatch","ranges":[{"startOffset":111181,"endOffset":112424,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsNative","ranges":[{"startOffset":112681,"endOffset":112907,"count":7},{"startOffset":112759,"endOffset":112790,"count":0},{"startOffset":112842,"endOffset":112856,"count":0}],"isBlockCoverage":true},{"functionName":"baseIsRegExp","ranges":[{"startOffset":113153,"endOffset":113257,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsSet","ranges":[{"startOffset":113497,"endOffset":113591,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsTypedArray","ranges":[{"startOffset":113846,"endOffset":113993,"count":0}],"isBlockCoverage":false},{"functionName":"baseIteratee","ranges":[{"startOffset":114209,"endOffset":114730,"count":40},{"startOffset":114443,"endOffset":114474,"count":39},{"startOffset":114474,"endOffset":114500,"count":1},{"startOffset":114500,"endOffset":114534,"count":0},{"startOffset":114534,"endOffset":114571,"count":1},{"startOffset":114571,"endOffset":114694,"count":0},{"startOffset":114694,"endOffset":114729,"count":1}],"isBlockCoverage":true},{"functionName":"baseKeys","ranges":[{"startOffset":114974,"endOffset":115286,"count":55},{"startOffset":115034,"endOffset":115078,"count":53},{"startOffset":115078,"endOffset":115140,"count":2},{"startOffset":115140,"endOffset":115259,"count":618},{"startOffset":115187,"endOffset":115210,"count":40},{"startOffset":115212,"endOffset":115251,"count":38},{"startOffset":115259,"endOffset":115285,"count":2}],"isBlockCoverage":true},{"functionName":"baseKeysIn","ranges":[{"startOffset":115532,"endOffset":115896,"count":7},{"startOffset":115591,"endOffset":115637,"count":0},{"startOffset":115733,"endOffset":115869,"count":62},{"startOffset":115770,"endOffset":115819,"count":0}],"isBlockCoverage":true},{"functionName":"baseLt","ranges":[{"startOffset":116208,"endOffset":116273,"count":0}],"isBlockCoverage":false},{"functionName":"baseMap","ranges":[{"startOffset":116597,"endOffset":116895,"count":2},{"startOffset":116703,"endOffset":116729,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":116764,"endOffset":116866,"count":0}],"isBlockCoverage":false},{"functionName":"baseMatches","ranges":[{"startOffset":117144,"endOffset":117477,"count":0}],"isBlockCoverage":false},{"functionName":"baseMatchesProperty","ranges":[{"startOffset":117774,"endOffset":118226,"count":0}],"isBlockCoverage":false},{"functionName":"baseMerge","ranges":[{"startOffset":118691,"endOffset":119366,"count":4},{"startOffset":118786,"endOffset":118811,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":118834,"endOffset":119350,"count":38},{"startOffset":118874,"endOffset":118896,"count":1},{"startOffset":118930,"endOffset":119027,"count":3},{"startOffset":119027,"endOffset":119342,"count":35},{"startOffset":119091,"endOffset":119170,"count":0}],"isBlockCoverage":true},{"functionName":"baseMergeDeep","ranges":[{"startOffset":120067,"endOffset":122010,"count":3},{"startOffset":120300,"endOffset":120373,"count":0},{"startOffset":120414,"endOffset":120481,"count":0},{"startOffset":120799,"endOffset":121303,"count":0},{"startOffset":121345,"endOffset":121369,"count":0},{"startOffset":121441,"endOffset":121502,"count":0},{"startOffset":121542,"endOffset":121565,"count":2},{"startOffset":121567,"endOffset":121630,"count":1},{"startOffset":121640,"endOffset":121693,"count":0}],"isBlockCoverage":true},{"functionName":"baseNth","ranges":[{"startOffset":122294,"endOffset":122493,"count":0}],"isBlockCoverage":false},{"functionName":"baseOrderBy","ranges":[{"startOffset":122877,"endOffset":123786,"count":0}],"isBlockCoverage":false},{"functionName":"basePick","ranges":[{"startOffset":124091,"endOffset":124240,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":124165,"endOffset":124232,"count":5}],"isBlockCoverage":true},{"functionName":"basePickBy","ranges":[{"startOffset":124599,"endOffset":124976,"count":2},{"startOffset":124757,"endOffset":124949,"count":21}],"isBlockCoverage":true},{"functionName":"basePropertyDeep","ranges":[{"startOffset":125224,"endOffset":125342,"count":0}],"isBlockCoverage":false},{"functionName":"basePullAll","ranges":[{"startOffset":125768,"endOffset":126545,"count":0}],"isBlockCoverage":false},{"functionName":"basePullAt","ranges":[{"startOffset":126874,"endOffset":127330,"count":0}],"isBlockCoverage":false},{"functionName":"baseRandom","ranges":[{"startOffset":127625,"endOffset":127738,"count":0}],"isBlockCoverage":false},{"functionName":"baseRange","ranges":[{"startOffset":128183,"endOffset":128500,"count":0}],"isBlockCoverage":false},{"functionName":"baseRepeat","ranges":[{"startOffset":128795,"endOffset":129307,"count":0}],"isBlockCoverage":false},{"functionName":"baseRest","ranges":[{"startOffset":129652,"endOffset":129760,"count":38}],"isBlockCoverage":true},{"functionName":"baseSample","ranges":[{"startOffset":129965,"endOffset":130050,"count":0}],"isBlockCoverage":false},{"functionName":"baseSampleSize","ranges":[{"startOffset":130344,"endOffset":130492,"count":0}],"isBlockCoverage":false},{"functionName":"baseSet","ranges":[{"startOffset":130863,"endOffset":131814,"count":21},{"startOffset":130944,"endOffset":130976,"count":0},{"startOffset":131159,"endOffset":131178,"count":42},{"startOffset":131332,"endOffset":131368,"count":0},{"startOffset":131402,"endOffset":131705,"count":0}],"isBlockCoverage":true},{"functionName":"baseSetData","ranges":[{"startOffset":132133,"endOffset":132211,"count":0}],"isBlockCoverage":false},{"functionName":"baseSetToString","ranges":[{"startOffset":132547,"endOffset":132754,"count":50}],"isBlockCoverage":true},{"functionName":"baseShuffle","ranges":[{"startOffset":132970,"endOffset":133056,"count":0}],"isBlockCoverage":false},{"functionName":"baseSlice","ranges":[{"startOffset":133392,"endOffset":133892,"count":0}],"isBlockCoverage":false},{"functionName":"baseSome","ranges":[{"startOffset":134270,"endOffset":134512,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":134359,"endOffset":134481,"count":1}],"isBlockCoverage":true},{"functionName":"baseSortedIndex","ranges":[{"startOffset":135085,"endOffset":135733,"count":0}],"isBlockCoverage":false},{"functionName":"baseSortedIndexBy","ranges":[{"startOffset":136375,"endOffset":137827,"count":0}],"isBlockCoverage":false},{"functionName":"baseSortedUniq","ranges":[{"startOffset":138172,"endOffset":138621,"count":0}],"isBlockCoverage":false},{"functionName":"baseToNumber","ranges":[{"startOffset":138900,"endOffset":139082,"count":0}],"isBlockCoverage":false},{"functionName":"baseToString","ranges":[{"startOffset":139327,"endOffset":139882,"count":23},{"startOffset":139506,"endOffset":139858,"count":0},{"startOffset":139860,"endOffset":139866,"count":0},{"startOffset":139867,"endOffset":139875,"count":0}],"isBlockCoverage":true},{"functionName":"baseUniq","ranges":[{"startOffset":140269,"endOffset":141637,"count":0}],"isBlockCoverage":false},{"functionName":"baseUnset","ranges":[{"startOffset":141924,"endOffset":142103,"count":0}],"isBlockCoverage":false},{"functionName":"baseUpdate","ranges":[{"startOffset":142514,"endOffset":142656,"count":0}],"isBlockCoverage":false},{"functionName":"baseWhile","ranges":[{"startOffset":143158,"endOffset":143599,"count":0}],"isBlockCoverage":false},{"functionName":"baseWrapperValue","ranges":[{"startOffset":144043,"endOffset":144365,"count":0}],"isBlockCoverage":false},{"functionName":"baseXor","ranges":[{"startOffset":144811,"endOffset":145414,"count":0}],"isBlockCoverage":false},{"functionName":"baseZipObject","ranges":[{"startOffset":145769,"endOffset":146122,"count":0}],"isBlockCoverage":false},{"functionName":"castArrayLikeObject","ranges":[{"startOffset":146353,"endOffset":146448,"count":0}],"isBlockCoverage":false},{"functionName":"castFunction","ranges":[{"startOffset":146648,"endOffset":146744,"count":0}],"isBlockCoverage":false},{"functionName":"castPath","ranges":[{"startOffset":147012,"endOffset":147187,"count":91},{"startOffset":147073,"endOffset":147104,"count":53},{"startOffset":147104,"endOffset":147139,"count":38},{"startOffset":147139,"endOffset":147148,"count":15},{"startOffset":147149,"endOffset":147180,"count":23}],"isBlockCoverage":true},{"functionName":"castSlice","ranges":[{"startOffset":147808,"endOffset":148011,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":148270,"endOffset":148326,"count":0}],"isBlockCoverage":false},{"functionName":"cloneBuffer","ranges":[{"startOffset":148567,"endOffset":148840,"count":0}],"isBlockCoverage":false},{"functionName":"cloneArrayBuffer","ranges":[{"startOffset":149056,"endOffset":149258,"count":0}],"isBlockCoverage":false},{"functionName":"cloneDataView","ranges":[{"startOffset":149507,"endOffset":149725,"count":0}],"isBlockCoverage":false},{"functionName":"cloneRegExp","ranges":[{"startOffset":149909,"endOffset":150089,"count":0}],"isBlockCoverage":false},{"functionName":"cloneSymbol","ranges":[{"startOffset":150298,"endOffset":150404,"count":0}],"isBlockCoverage":false},{"functionName":"cloneTypedArray","ranges":[{"startOffset":150661,"endOffset":150889,"count":0}],"isBlockCoverage":false},{"functionName":"compareAscending","ranges":[{"startOffset":151159,"endOffset":152298,"count":0}],"isBlockCoverage":false},{"functionName":"compareMultiple","ranges":[{"startOffset":152927,"endOffset":153963,"count":0}],"isBlockCoverage":false},{"functionName":"composeArgs","ranges":[{"startOffset":154506,"endOffset":155272,"count":0}],"isBlockCoverage":false},{"functionName":"composeArgsRight","ranges":[{"startOffset":155778,"endOffset":156649,"count":0}],"isBlockCoverage":false},{"functionName":"copyArray","ranges":[{"startOffset":156906,"endOffset":157143,"count":0}],"isBlockCoverage":false},{"functionName":"copyObject","ranges":[{"startOffset":157557,"endOffset":158183,"count":0}],"isBlockCoverage":false},{"functionName":"copySymbols","ranges":[{"startOffset":158451,"endOffset":158556,"count":0}],"isBlockCoverage":false},{"functionName":"copySymbolsIn","ranges":[{"startOffset":158838,"endOffset":158947,"count":0}],"isBlockCoverage":false},{"functionName":"createAggregator","ranges":[{"startOffset":159247,"endOffset":159572,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":159309,"endOffset":159565,"count":0}],"isBlockCoverage":false},{"functionName":"createAssigner","ranges":[{"startOffset":159787,"endOffset":160610,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":159845,"endOffset":160602,"count":1},{"startOffset":159970,"endOffset":159991,"count":0},{"startOffset":160036,"endOffset":160048,"count":0},{"startOffset":160105,"endOffset":160139,"count":0},{"startOffset":160151,"endOffset":160175,"count":0},{"startOffset":160218,"endOffset":160266,"count":0},{"startOffset":160268,"endOffset":160361,"count":0}],"isBlockCoverage":true},{"functionName":"createBaseEach","ranges":[{"startOffset":160921,"endOffset":161526,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":160981,"endOffset":161519,"count":33},{"startOffset":161046,"endOffset":161086,"count":1},{"startOffset":161086,"endOffset":161185,"count":32},{"startOffset":161185,"endOffset":161264,"count":0},{"startOffset":161265,"endOffset":161269,"count":0},{"startOffset":161341,"endOffset":161350,"count":0},{"startOffset":161351,"endOffset":161369,"count":0},{"startOffset":161372,"endOffset":161518,"count":0}],"isBlockCoverage":true},{"functionName":"createBaseFor","ranges":[{"startOffset":161777,"endOffset":162230,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":161826,"endOffset":162223,"count":44},{"startOffset":162027,"endOffset":162192,"count":843},{"startOffset":162065,"endOffset":162073,"count":0},{"startOffset":162150,"endOffset":162182,"count":1}],"isBlockCoverage":true},{"functionName":"createBind","ranges":[{"startOffset":162642,"endOffset":162975,"count":0}],"isBlockCoverage":false},{"functionName":"createCaseFirst","ranges":[{"startOffset":163204,"endOffset":163668,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":163256,"endOffset":163661,"count":0}],"isBlockCoverage":false},{"functionName":"createCompounder","ranges":[{"startOffset":163892,"endOffset":164061,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":163943,"endOffset":164054,"count":0}],"isBlockCoverage":false},{"functionName":"createCtor","ranges":[{"startOffset":164383,"endOffset":165556,"count":0}],"isBlockCoverage":false},{"functionName":"createCurry","ranges":[{"startOffset":165913,"endOffset":166809,"count":0}],"isBlockCoverage":false},{"functionName":"createFind","ranges":[{"startOffset":167046,"endOffset":167586,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":167096,"endOffset":167579,"count":0}],"isBlockCoverage":false},{"functionName":"createFlow","ranges":[{"startOffset":167816,"endOffset":169537,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":167871,"endOffset":169529,"count":0}],"isBlockCoverage":false},{"functionName":"createHybrid","ranges":[{"startOffset":170543,"endOffset":172418,"count":1},{"startOffset":170958,"endOffset":170976,"count":0}],"isBlockCoverage":true},{"functionName":"wrapper","ranges":[{"startOffset":170985,"endOffset":172390,"count":0}],"isBlockCoverage":false},{"functionName":"createInverter","ranges":[{"startOffset":172713,"endOffset":172886,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":172772,"endOffset":172879,"count":0}],"isBlockCoverage":false},{"functionName":"createMathOperation","ranges":[{"startOffset":173240,"endOffset":173989,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":173308,"endOffset":173982,"count":0}],"isBlockCoverage":false},{"functionName":"createOver","ranges":[{"startOffset":174208,"endOffset":174574,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":174263,"endOffset":174566,"count":0}],"isBlockCoverage":false},{"functionName":"createPadding","ranges":[{"startOffset":174935,"endOffset":175390,"count":0}],"isBlockCoverage":false},{"functionName":"createPartial","ranges":[{"startOffset":175948,"endOffset":176680,"count":0}],"isBlockCoverage":false},{"functionName":"createRange","ranges":[{"startOffset":176913,"endOffset":177479,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":176960,"endOffset":177472,"count":0}],"isBlockCoverage":false},{"functionName":"createRelationalOperation","ranges":[{"startOffset":177749,"endOffset":178038,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":177809,"endOffset":178031,"count":0}],"isBlockCoverage":false},{"functionName":"createRecurry","ranges":[{"startOffset":178889,"endOffset":179919,"count":0}],"isBlockCoverage":false},{"functionName":"createRound","ranges":[{"startOffset":180151,"endOffset":180874,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":180234,"endOffset":180867,"count":0}],"isBlockCoverage":false},{"functionName":"createSet","ranges":[{"startOffset":181148,"endOffset":181202,"count":0}],"isBlockCoverage":false},{"functionName":"createToPairs","ranges":[{"startOffset":181445,"endOffset":181766,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":181493,"endOffset":181759,"count":0}],"isBlockCoverage":false},{"functionName":"createWrap","ranges":[{"startOffset":182798,"endOffset":184888,"count":0}],"isBlockCoverage":false},{"functionName":"customDefaultsAssignIn","ranges":[{"startOffset":185403,"endOffset":185650,"count":0}],"isBlockCoverage":false},{"functionName":"customDefaultsMerge","ranges":[{"startOffset":186268,"endOffset":186673,"count":0}],"isBlockCoverage":false},{"functionName":"customOmitClone","ranges":[{"startOffset":187019,"endOffset":187113,"count":0}],"isBlockCoverage":false},{"functionName":"equalArrays","ranges":[{"startOffset":187780,"endOffset":189787,"count":0}],"isBlockCoverage":false},{"functionName":"equalByTag","ranges":[{"startOffset":190678,"endOffset":192829,"count":0}],"isBlockCoverage":false},{"functionName":"equalObjects","ranges":[{"startOffset":193504,"endOffset":195751,"count":0}],"isBlockCoverage":false},{"functionName":"flatRest","ranges":[{"startOffset":195996,"endOffset":196100,"count":12}],"isBlockCoverage":true},{"functionName":"getAllKeys","ranges":[{"startOffset":196351,"endOffset":196441,"count":10}],"isBlockCoverage":true},{"functionName":"getAllKeysIn","ranges":[{"startOffset":196713,"endOffset":196809,"count":1}],"isBlockCoverage":true},{"functionName":"getData","ranges":[{"startOffset":197025,"endOffset":197079,"count":0}],"isBlockCoverage":false},{"functionName":"getFuncName","ranges":[{"startOffset":197262,"endOffset":197664,"count":0}],"isBlockCoverage":false},{"functionName":"getHolder","ranges":[{"startOffset":197870,"endOffset":198014,"count":0}],"isBlockCoverage":false},{"functionName":"getIteratee","ranges":[{"startOffset":198533,"endOffset":198748,"count":40},{"startOffset":198593,"endOffset":198604,"count":0},{"startOffset":198656,"endOffset":198664,"count":0},{"startOffset":198733,"endOffset":198741,"count":0}],"isBlockCoverage":true},{"functionName":"getMapData","ranges":[{"startOffset":198958,"endOffset":199133,"count":46},{"startOffset":199098,"endOffset":199106,"count":0},{"startOffset":199116,"endOffset":199126,"count":0}],"isBlockCoverage":true},{"functionName":"getMatchData","ranges":[{"startOffset":199360,"endOffset":199653,"count":0}],"isBlockCoverage":false},{"functionName":"getNative","ranges":[{"startOffset":199935,"endOffset":200069,"count":7},{"startOffset":200051,"endOffset":200062,"count":0}],"isBlockCoverage":true},{"functionName":"getRawTag","ranges":[{"startOffset":200302,"endOffset":200774,"count":8},{"startOffset":200524,"endOffset":200536,"count":0},{"startOffset":200632,"endOffset":200682,"count":0}],"isBlockCoverage":true},{"functionName":"getSymbols","ranges":[{"startOffset":201040,"endOffset":201288,"count":12},{"startOffset":201085,"endOffset":201113,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":201196,"endOffset":201280,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolsIn","ranges":[{"startOffset":201571,"endOffset":201756,"count":1},{"startOffset":201634,"endOffset":201729,"count":2}],"isBlockCoverage":true},{"functionName":"getTag","ranges":[{"startOffset":202372,"endOffset":202927,"count":0}],"isBlockCoverage":false},{"functionName":"getView","ranges":[{"startOffset":203345,"endOffset":203890,"count":0}],"isBlockCoverage":false},{"functionName":"getWrapDetails","ranges":[{"startOffset":204105,"endOffset":204249,"count":0}],"isBlockCoverage":false},{"functionName":"hasPath","ranges":[{"startOffset":204582,"endOffset":205192,"count":5},{"startOffset":204878,"endOffset":204906,"count":0},{"startOffset":204962,"endOffset":204982,"count":0},{"startOffset":205016,"endOffset":205050,"count":0},{"startOffset":205051,"endOffset":205066,"count":0},{"startOffset":205090,"endOffset":205109,"count":0},{"startOffset":205110,"endOffset":205133,"count":0},{"startOffset":205134,"endOffset":205185,"count":0}],"isBlockCoverage":true},{"functionName":"initCloneArray","ranges":[{"startOffset":205375,"endOffset":205739,"count":6},{"startOffset":205631,"endOffset":205712,"count":0}],"isBlockCoverage":true},{"functionName":"initCloneObject","ranges":[{"startOffset":205927,"endOffset":206103,"count":12},{"startOffset":206092,"endOffset":206096,"count":0}],"isBlockCoverage":true},{"functionName":"initCloneByTag","ranges":[{"startOffset":206604,"endOffset":207480,"count":0}],"isBlockCoverage":false},{"functionName":"insertWrapDetails","ranges":[{"startOffset":207765,"endOffset":208155,"count":0}],"isBlockCoverage":false},{"functionName":"isFlattenable","ranges":[{"startOffset":208397,"endOffset":208553,"count":1},{"startOffset":208457,"endOffset":208478,"count":0},{"startOffset":208479,"endOffset":208546,"count":0}],"isBlockCoverage":true},{"functionName":"isIndex","ranges":[{"startOffset":208864,"endOffset":209167,"count":0}],"isBlockCoverage":false},{"functionName":"isIterateeCall","ranges":[{"startOffset":209581,"endOffset":209957,"count":0}],"isBlockCoverage":false},{"functionName":"isKey","ranges":[{"startOffset":210262,"endOffset":210658,"count":39},{"startOffset":210320,"endOffset":210351,"count":0},{"startOffset":210498,"endOffset":210528,"count":0},{"startOffset":210568,"endOffset":210596,"count":23},{"startOffset":210597,"endOffset":210651,"count":23}],"isBlockCoverage":true},{"functionName":"isKeyable","ranges":[{"startOffset":210893,"endOffset":211112,"count":46},{"startOffset":210983,"endOffset":211002,"count":0},{"startOffset":211003,"endOffset":211022,"count":0},{"startOffset":211023,"endOffset":211043,"count":0},{"startOffset":211087,"endOffset":211105,"count":0}],"isBlockCoverage":true},{"functionName":"isLaziable","ranges":[{"startOffset":211355,"endOffset":211706,"count":0}],"isBlockCoverage":false},{"functionName":"isMasked","ranges":[{"startOffset":211927,"endOffset":212009,"count":7},{"startOffset":211979,"endOffset":212002,"count":0}],"isBlockCoverage":true},{"functionName":"isPrototype","ranges":[{"startOffset":212507,"endOffset":212698,"count":75},{"startOffset":212646,"endOffset":212660,"count":0}],"isBlockCoverage":true},{"functionName":"isStrictComparable","ranges":[{"startOffset":212988,"endOffset":213080,"count":0}],"isBlockCoverage":false},{"functionName":"matchesStrictComparable","ranges":[{"startOffset":213418,"endOffset":213684,"count":0}],"isBlockCoverage":false},{"functionName":"memoizeCapped","ranges":[{"startOffset":213993,"endOffset":214244,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":214057,"endOffset":214182,"count":23},{"startOffset":214118,"endOffset":214154,"count":0}],"isBlockCoverage":true},{"functionName":"mergeData","ranges":[{"startOffset":215016,"endOffset":217040,"count":0}],"isBlockCoverage":false},{"functionName":"nativeKeysIn","ranges":[{"startOffset":217374,"endOffset":217571,"count":0}],"isBlockCoverage":false},{"functionName":"objectToString","ranges":[{"startOffset":217788,"endOffset":217873,"count":472}],"isBlockCoverage":true},{"functionName":"overRest","ranges":[{"startOffset":218268,"endOffset":218904,"count":50},{"startOffset":218376,"endOffset":218383,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":218402,"endOffset":218897,"count":4}],"isBlockCoverage":true},{"functionName":"parent","ranges":[{"startOffset":219162,"endOffset":219280,"count":0}],"isBlockCoverage":false},{"functionName":"reorder","ranges":[{"startOffset":219695,"endOffset":220039,"count":0}],"isBlockCoverage":false},{"functionName":"safeGet","ranges":[{"startOffset":220320,"endOffset":220537,"count":6},{"startOffset":220384,"endOffset":220420,"count":0},{"startOffset":220422,"endOffset":220447,"count":0},{"startOffset":220479,"endOffset":220504,"count":0}],"isBlockCoverage":true},{"functionName":"setTimeout","ranges":[{"startOffset":221496,"endOffset":221566,"count":0}],"isBlockCoverage":false},{"functionName":"setWrapToString","ranges":[{"startOffset":222318,"endOffset":222530,"count":0}],"isBlockCoverage":false},{"functionName":"shortOut","ranges":[{"startOffset":222863,"endOffset":223305,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":222950,"endOffset":223298,"count":50},{"startOffset":223109,"endOffset":223203,"count":49},{"startOffset":223147,"endOffset":223193,"count":0},{"startOffset":223203,"endOffset":223241,"count":1}],"isBlockCoverage":true},{"functionName":"shuffleSelf","ranges":[{"startOffset":223593,"endOffset":224008,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":224247,"endOffset":224572,"count":2},{"startOffset":224336,"endOffset":224370,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":224404,"endOffset":224543,"count":5},{"startOffset":224474,"endOffset":224513,"count":0}],"isBlockCoverage":true},{"functionName":"toKey","ranges":[{"startOffset":224786,"endOffset":225009,"count":71},{"startOffset":224845,"endOffset":224863,"count":0},{"startOffset":224896,"endOffset":224985,"count":0},{"startOffset":224987,"endOffset":224993,"count":0},{"startOffset":224994,"endOffset":225002,"count":0}],"isBlockCoverage":true},{"functionName":"toSource","ranges":[{"startOffset":225202,"endOffset":225430,"count":12},{"startOffset":225320,"endOffset":225399,"count":0},{"startOffset":225407,"endOffset":225429,"count":0}],"isBlockCoverage":true},{"functionName":"updateWrapDetails","ranges":[{"startOffset":225717,"endOffset":225998,"count":0}],"isBlockCoverage":false},{"functionName":"wrapperClone","ranges":[{"startOffset":226186,"endOffset":226557,"count":0}],"isBlockCoverage":false},{"functionName":"chunk","ranges":[{"startOffset":227354,"endOffset":227905,"count":0}],"isBlockCoverage":false},{"functionName":"compact","ranges":[{"startOffset":228353,"endOffset":228672,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":229258,"endOffset":229630,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":230410,"endOffset":230574,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":231636,"endOffset":231940,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":232901,"endOffset":233208,"count":0}],"isBlockCoverage":false},{"functionName":"drop","ranges":[{"startOffset":233877,"endOffset":234127,"count":0}],"isBlockCoverage":false},{"functionName":"dropRight","ranges":[{"startOffset":234808,"endOffset":235080,"count":0}],"isBlockCoverage":false},{"functionName":"dropRightWhile","ranges":[{"startOffset":236363,"endOffset":236529,"count":0}],"isBlockCoverage":false},{"functionName":"dropWhile","ranges":[{"startOffset":237800,"endOffset":237955,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":238750,"endOffset":239082,"count":0}],"isBlockCoverage":false},{"functionName":"findIndex","ranges":[{"startOffset":240272,"endOffset":240638,"count":0}],"isBlockCoverage":false},{"functionName":"findLastIndex","ranges":[{"startOffset":241822,"endOffset":242283,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":242638,"endOffset":242772,"count":1},{"startOffset":242697,"endOffset":242700,"count":0},{"startOffset":242761,"endOffset":242765,"count":0}],"isBlockCoverage":true},{"functionName":"flattenDeep","ranges":[{"startOffset":243119,"endOffset":243264,"count":0}],"isBlockCoverage":false},{"functionName":"flattenDepth","ranges":[{"startOffset":243804,"endOffset":244046,"count":0}],"isBlockCoverage":false},{"functionName":"fromPairs","ranges":[{"startOffset":244452,"endOffset":244714,"count":0}],"isBlockCoverage":false},{"functionName":"head","ranges":[{"startOffset":245101,"endOffset":245190,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":246000,"endOffset":246338,"count":0}],"isBlockCoverage":false},{"functionName":"initial","ranges":[{"startOffset":246667,"endOffset":246803,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":247433,"endOffset":247620,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":248558,"endOffset":248921,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":249798,"endOffset":250177,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":250610,"endOffset":250718,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":251034,"endOffset":251168,"count":0}],"isBlockCoverage":false},{"functionName":"lastIndexOf","ranges":[{"startOffset":251820,"endOffset":252306,"count":0}],"isBlockCoverage":false},{"functionName":"nth","ranges":[{"startOffset":252862,"endOffset":252973,"count":0}],"isBlockCoverage":false},{"functionName":"pullAll","ranges":[{"startOffset":254309,"endOffset":254466,"count":0}],"isBlockCoverage":false},{"functionName":"pullAllBy","ranges":[{"startOffset":255332,"endOffset":255527,"count":0}],"isBlockCoverage":false},{"functionName":"pullAllWith","ranges":[{"startOffset":256396,"endOffset":256592,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":257325,"endOffset":257626,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":258526,"endOffset":259031,"count":0}],"isBlockCoverage":false},{"functionName":"reverse","ranges":[{"startOffset":259649,"endOffset":259744,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":260295,"endOffset":260743,"count":0}],"isBlockCoverage":false},{"functionName":"sortedIndex","ranges":[{"startOffset":261279,"endOffset":261365,"count":0}],"isBlockCoverage":false},{"functionName":"sortedIndexBy","ranges":[{"startOffset":262273,"endOffset":262399,"count":0}],"isBlockCoverage":false},{"functionName":"sortedIndexOf","ranges":[{"startOffset":262869,"endOffset":263153,"count":0}],"isBlockCoverage":false},{"functionName":"sortedLastIndex","ranges":[{"startOffset":263732,"endOffset":263828,"count":0}],"isBlockCoverage":false},{"functionName":"sortedLastIndexBy","ranges":[{"startOffset":264748,"endOffset":264884,"count":0}],"isBlockCoverage":false},{"functionName":"sortedLastIndexOf","ranges":[{"startOffset":265362,"endOffset":265642,"count":0}],"isBlockCoverage":false},{"functionName":"sortedUniq","ranges":[{"startOffset":266037,"endOffset":266154,"count":0}],"isBlockCoverage":false},{"functionName":"sortedUniqBy","ranges":[{"startOffset":266650,"endOffset":266805,"count":0}],"isBlockCoverage":false},{"functionName":"tail","ranges":[{"startOffset":267132,"endOffset":267269,"count":0}],"isBlockCoverage":false},{"functionName":"take","ranges":[{"startOffset":267934,"endOffset":268143,"count":0}],"isBlockCoverage":false},{"functionName":"takeRight","ranges":[{"startOffset":268822,"endOffset":269099,"count":0}],"isBlockCoverage":false},{"functionName":"takeRightWhile","ranges":[{"startOffset":270345,"endOffset":270512,"count":0}],"isBlockCoverage":false},{"functionName":"takeWhile","ranges":[{"startOffset":271740,"endOffset":271889,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":272412,"endOffset":272508,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":273428,"endOffset":273664,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":274552,"endOffset":274785,"count":0}],"isBlockCoverage":false},{"functionName":"uniq","ranges":[{"startOffset":275407,"endOffset":275496,"count":0}],"isBlockCoverage":false},{"functionName":"uniqBy","ranges":[{"startOffset":276373,"endOffset":276500,"count":0}],"isBlockCoverage":false},{"functionName":"uniqWith","ranges":[{"startOffset":277282,"endOffset":277487,"count":0}],"isBlockCoverage":false},{"functionName":"unzip","ranges":[{"startOffset":278122,"endOffset":278536,"count":0}],"isBlockCoverage":false},{"functionName":"unzipWith","ranges":[{"startOffset":279274,"endOffset":279584,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":280244,"endOffset":280367,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":280976,"endOffset":281062,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":281977,"endOffset":282203,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":283072,"endOffset":283295,"count":0}],"isBlockCoverage":false},{"functionName":"zipObject","ranges":[{"startOffset":284388,"endOffset":284497,"count":0}],"isBlockCoverage":false},{"functionName":"zipObjectDeep","ranges":[{"startOffset":284984,"endOffset":285093,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":285795,"endOffset":286049,"count":0}],"isBlockCoverage":false},{"functionName":"chain","ranges":[{"startOffset":286939,"endOffset":287054,"count":0}],"isBlockCoverage":false},{"functionName":"tap","ranges":[{"startOffset":287757,"endOffset":287843,"count":0}],"isBlockCoverage":false},{"functionName":"thru","ranges":[{"startOffset":288524,"endOffset":288598,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":289078,"endOffset":289825,"count":0}],"isBlockCoverage":false},{"functionName":"wrapperChain","ranges":[{"startOffset":290532,"endOffset":290589,"count":0}],"isBlockCoverage":false},{"functionName":"wrapperCommit","ranges":[{"startOffset":291170,"endOffset":291264,"count":0}],"isBlockCoverage":false},{"functionName":"wrapperNext","ranges":[{"startOffset":291844,"endOffset":292153,"count":0}],"isBlockCoverage":false},{"functionName":"wrapperToIterator","ranges":[{"startOffset":292549,"endOffset":292604,"count":0}],"isBlockCoverage":false},{"functionName":"wrapperPlant","ranges":[{"startOffset":293185,"endOffset":293666,"count":0}],"isBlockCoverage":false},{"functionName":"wrapperReverse","ranges":[{"startOffset":294139,"endOffset":294639,"count":0}],"isBlockCoverage":false},{"functionName":"wrapperValue","ranges":[{"startOffset":294977,"endOffset":295075,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":296049,"endOffset":296218,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":297758,"endOffset":298037,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":299533,"endOffset":299702,"count":0}],"isBlockCoverage":false},{"functionName":"flatMap","ranges":[{"startOffset":302444,"endOffset":302546,"count":0}],"isBlockCoverage":false},{"functionName":"flatMapDeep","ranges":[{"startOffset":303136,"endOffset":303249,"count":0}],"isBlockCoverage":false},{"functionName":"flatMapDepth","ranges":[{"startOffset":303929,"endOffset":304105,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":305244,"endOffset":305408,"count":29},{"startOffset":305322,"endOffset":305333,"count":0}],"isBlockCoverage":true},{"functionName":"forEachRight","ranges":[{"startOffset":306036,"endOffset":306215,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":307232,"endOffset":307417,"count":0}],"isBlockCoverage":false},{"functionName":"includes","ranges":[{"startOffset":308491,"endOffset":309010,"count":1},{"startOffset":308604,"endOffset":308624,"count":0},{"startOffset":308655,"endOffset":308664,"count":0},{"startOffset":308666,"endOffset":308688,"count":0},{"startOffset":308758,"endOffset":308821,"count":0},{"startOffset":308864,"endOffset":308932,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":309995,"endOffset":310349,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":311455,"endOffset":311534,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":313000,"endOffset":313158,"count":2},{"startOffset":313074,"endOffset":313084,"count":0}],"isBlockCoverage":true},{"functionName":"orderBy","ranges":[{"startOffset":314431,"endOffset":314838,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":316318,"endOffset":316393,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":316395,"endOffset":316426,"count":0}],"isBlockCoverage":false},{"functionName":"reduce","ranges":[{"startOffset":317906,"endOffset":318165,"count":1},{"startOffset":317996,"endOffset":318009,"count":0}],"isBlockCoverage":true},{"functionName":"reduceRight","ranges":[{"startOffset":318893,"endOffset":319167,"count":0}],"isBlockCoverage":false},{"functionName":"reject","ranges":[{"startOffset":320327,"endOffset":320504,"count":0}],"isBlockCoverage":false},{"functionName":"sample","ranges":[{"startOffset":320846,"endOffset":320977,"count":0}],"isBlockCoverage":false},{"functionName":"sampleSize","ranges":[{"startOffset":321602,"endOffset":321900,"count":0}],"isBlockCoverage":false},{"functionName":"shuffle","ranges":[{"startOffset":322365,"endOffset":322499,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":323066,"endOffset":323446,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":324711,"endOffset":324987,"count":1},{"startOffset":324794,"endOffset":324805,"count":0},{"startOffset":324834,"endOffset":324881,"count":0},{"startOffset":324883,"endOffset":324923,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":326166,"endOffset":326611,"count":0}],"isBlockCoverage":false},{"functionName":"now","ranges":[{"startOffset":327198,"endOffset":327246,"count":0}],"isBlockCoverage":false},{"functionName":"after","ranges":[{"startOffset":328124,"endOffset":328386,"count":0}],"isBlockCoverage":false},{"functionName":"ary","ranges":[{"startOffset":328973,"endOffset":329184,"count":0}],"isBlockCoverage":false},{"functionName":"before","ranges":[{"startOffset":329896,"endOffset":330262,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":331479,"endOffset":331764,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":333346,"endOffset":333651,"count":0}],"isBlockCoverage":false},{"functionName":"curry","ranges":[{"startOffset":335013,"endOffset":335279,"count":0}],"isBlockCoverage":false},{"functionName":"curryRight","ranges":[{"startOffset":336449,"endOffset":336731,"count":0}],"isBlockCoverage":false},{"functionName":"debounce","ranges":[{"startOffset":339393,"endOffset":343127,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":343730,"endOffset":343797,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":344446,"endOffset":344537,"count":0}],"isBlockCoverage":false},{"functionName":"flip","ranges":[{"startOffset":345036,"endOffset":345110,"count":0}],"isBlockCoverage":false},{"functionName":"memoize","ranges":[{"startOffset":346746,"endOffset":347389,"count":1},{"startOffset":346873,"endOffset":346928,"count":0}],"isBlockCoverage":true},{"functionName":"memoized","ranges":[{"startOffset":346950,"endOffset":347303,"count":23},{"startOffset":347049,"endOffset":347058,"count":0},{"startOffset":347125,"endOffset":347169,"count":21},{"startOffset":347169,"endOffset":347263,"count":2},{"startOffset":347263,"endOffset":347271,"count":0}],"isBlockCoverage":true},{"functionName":"negate","ranges":[{"startOffset":348033,"endOffset":348562,"count":1},{"startOffset":348104,"endOffset":348159,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":348173,"endOffset":348555,"count":16},{"startOffset":348257,"endOffset":348294,"count":0},{"startOffset":348305,"endOffset":348351,"count":0},{"startOffset":348428,"endOffset":348492,"count":0},{"startOffset":348502,"endOffset":348554,"count":0}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":349196,"endOffset":349253,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":350024,"endOffset":350590,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":351782,"endOffset":351960,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":353107,"endOffset":353296,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":354108,"endOffset":354229,"count":0}],"isBlockCoverage":false},{"functionName":"rest","ranges":[{"startOffset":355135,"endOffset":355360,"count":0}],"isBlockCoverage":false},{"functionName":"spread","ranges":[{"startOffset":356428,"endOffset":356872,"count":0}],"isBlockCoverage":false},{"functionName":"throttle","ranges":[{"startOffset":359135,"endOffset":359639,"count":0}],"isBlockCoverage":false},{"functionName":"unary","ranges":[{"startOffset":360072,"endOffset":360127,"count":0}],"isBlockCoverage":false},{"functionName":"wrap","ranges":[{"startOffset":360902,"endOffset":360991,"count":0}],"isBlockCoverage":false},{"functionName":"castArray","ranges":[{"startOffset":361771,"endOffset":361936,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":362897,"endOffset":362977,"count":0}],"isBlockCoverage":false},{"functionName":"cloneWith","ranges":[{"startOffset":363982,"endOffset":364167,"count":0}],"isBlockCoverage":false},{"functionName":"cloneDeep","ranges":[{"startOffset":364659,"endOffset":364761,"count":4}],"isBlockCoverage":true},{"functionName":"cloneDeepWith","ranges":[{"startOffset":365555,"endOffset":365762,"count":0}],"isBlockCoverage":false},{"functionName":"conformsTo","ranges":[{"startOffset":366593,"endOffset":366713,"count":0}],"isBlockCoverage":false},{"functionName":"eq","ranges":[{"startOffset":367528,"endOffset":367631,"count":85},{"startOffset":367585,"endOffset":367624,"count":79},{"startOffset":367605,"endOffset":367623,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":368775,"endOffset":368834,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":369335,"endOffset":369367,"count":1}],"isBlockCoverage":true},{"functionName":"isArguments","ranges":[{"startOffset":369391,"endOffset":369543,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLike","ranges":[{"startOffset":371362,"endOffset":371473,"count":98},{"startOffset":371445,"endOffset":371466,"count":3}],"isBlockCoverage":true},{"functionName":"isArrayLikeObject","ranges":[{"startOffset":372103,"endOffset":372200,"count":0}],"isBlockCoverage":false},{"functionName":"isBoolean","ranges":[{"startOffset":372622,"endOffset":372768,"count":0}],"isBlockCoverage":false},{"functionName":"isElement","ranges":[{"startOffset":374116,"endOffset":374232,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":375161,"endOffset":375819,"count":1},{"startOffset":375212,"endOffset":375242,"count":0},{"startOffset":375272,"endOffset":375442,"count":0},{"startOffset":375444,"endOffset":375483,"count":0},{"startOffset":375557,"endOffset":375594,"count":0},{"startOffset":375625,"endOffset":375674,"count":0},{"startOffset":375794,"endOffset":375818,"count":0}],"isBlockCoverage":true},{"functionName":"isEqual","ranges":[{"startOffset":376779,"endOffset":376857,"count":0}],"isBlockCoverage":false},{"functionName":"isEqualWith","ranges":[{"startOffset":377983,"endOffset":378281,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":378779,"endOffset":379063,"count":0}],"isBlockCoverage":false},{"functionName":"isFinite","ranges":[{"startOffset":379691,"endOffset":379787,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":380199,"endOffset":380576,"count":342},{"startOffset":380256,"endOffset":380287,"count":0},{"startOffset":380515,"endOffset":380531,"count":9},{"startOffset":380532,"endOffset":380550,"count":9},{"startOffset":380551,"endOffset":380569,"count":6}],"isBlockCoverage":true},{"functionName":"isInteger","ranges":[{"startOffset":381191,"endOffset":381292,"count":0}],"isBlockCoverage":false},{"functionName":"isLength","ranges":[{"startOffset":381947,"endOffset":382087,"count":98},{"startOffset":382012,"endOffset":382033,"count":3},{"startOffset":382034,"endOffset":382051,"count":3},{"startOffset":382052,"endOffset":382080,"count":3}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":382774,"endOffset":382909,"count":1129},{"startOffset":382859,"endOffset":382902,"count":1120},{"startOffset":382880,"endOffset":382901,"count":1046}],"isBlockCoverage":true},{"functionName":"isObjectLike","ranges":[{"startOffset":383508,"endOffset":383600,"count":61},{"startOffset":383566,"endOffset":383593,"count":60}],"isBlockCoverage":true},{"functionName":"isMatch","ranges":[{"startOffset":385019,"endOffset":385144,"count":0}],"isBlockCoverage":false},{"functionName":"isMatchWith","ranges":[{"startOffset":386285,"endOffset":386494,"count":0}],"isBlockCoverage":false},{"functionName":"isNaN","ranges":[{"startOffset":387220,"endOffset":387478,"count":0}],"isBlockCoverage":false},{"functionName":"isNative","ranges":[{"startOffset":388440,"endOffset":388587,"count":0}],"isBlockCoverage":false},{"functionName":"isNull","ranges":[{"startOffset":388964,"endOffset":389023,"count":0}],"isBlockCoverage":false},{"functionName":"isNil","ranges":[{"startOffset":389460,"endOffset":389517,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":390188,"endOffset":390326,"count":0}],"isBlockCoverage":false},{"functionName":"isPlainObject","ranges":[{"startOffset":391043,"endOffset":391474,"count":18},{"startOffset":391106,"endOffset":391139,"count":17},{"startOffset":391141,"endOffset":391172,"count":1},{"startOffset":391172,"endOffset":391238,"count":17},{"startOffset":391238,"endOffset":391268,"count":0},{"startOffset":391268,"endOffset":391348,"count":17},{"startOffset":391389,"endOffset":391412,"count":17},{"startOffset":391413,"endOffset":391467,"count":17}],"isBlockCoverage":true},{"functionName":"isSafeInteger","ranges":[{"startOffset":392722,"endOffset":392849,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":393727,"endOffset":393884,"count":1},{"startOffset":393820,"endOffset":393842,"count":0},{"startOffset":393843,"endOffset":393876,"count":0}],"isBlockCoverage":true},{"functionName":"isSymbol","ranges":[{"startOffset":394315,"endOffset":394453,"count":39},{"startOffset":394412,"endOffset":394445,"count":0}],"isBlockCoverage":true},{"functionName":"isUndefined","ranges":[{"startOffset":395358,"endOffset":395427,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakMap","ranges":[{"startOffset":395848,"endOffset":395946,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakSet","ranges":[{"startOffset":396367,"endOffset":396469,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":397601,"endOffset":397660,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":398136,"endOffset":398580,"count":0}],"isBlockCoverage":false},{"functionName":"toFinite","ranges":[{"startOffset":399082,"endOffset":399394,"count":0}],"isBlockCoverage":false},{"functionName":"toInteger","ranges":[{"startOffset":400027,"endOffset":400211,"count":0}],"isBlockCoverage":false},{"functionName":"toLength","ranges":[{"startOffset":400875,"endOffset":400982,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":401451,"endOffset":402107,"count":0}],"isBlockCoverage":false},{"functionName":"toPlainObject","ranges":[{"startOffset":402765,"endOffset":402849,"count":0}],"isBlockCoverage":false},{"functionName":"toSafeInteger","ranges":[{"startOffset":403419,"endOffset":403587,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":404101,"endOffset":404188,"count":23},{"startOffset":404155,"endOffset":404159,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":405233,"endOffset":405542,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":406346,"endOffset":406428,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":407536,"endOffset":407652,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":408731,"endOffset":408845,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":410291,"endOffset":410454,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":411245,"endOffset":412028,"count":2},{"startOffset":411391,"endOffset":411403,"count":0},{"startOffset":411434,"endOffset":411482,"count":0},{"startOffset":411484,"endOffset":411513,"count":0},{"startOffset":411734,"endOffset":411992,"count":8},{"startOffset":411845,"endOffset":411928,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":412635,"endOffset":412754,"count":0}],"isBlockCoverage":false},{"functionName":"findKey","ranges":[{"startOffset":413958,"endOffset":414074,"count":0}],"isBlockCoverage":false},{"functionName":"findLastKey","ranges":[{"startOffset":415270,"endOffset":415395,"count":0}],"isBlockCoverage":false},{"functionName":"forIn","ranges":[{"startOffset":416305,"endOffset":416451,"count":0}],"isBlockCoverage":false},{"functionName":"forInRight","ranges":[{"startOffset":417192,"endOffset":417348,"count":0}],"isBlockCoverage":false},{"functionName":"forOwn","ranges":[{"startOffset":418240,"endOffset":418350,"count":4}],"isBlockCoverage":true},{"functionName":"forOwnRight","ranges":[{"startOffset":419083,"endOffset":419203,"count":0}],"isBlockCoverage":false},{"functionName":"functions","ranges":[{"startOffset":419778,"endOffset":419884,"count":0}],"isBlockCoverage":false},{"functionName":"functionsIn","ranges":[{"startOffset":420478,"endOffset":420588,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":421350,"endOffset":421528,"count":23},{"startOffset":421427,"endOffset":421438,"count":0},{"startOffset":421513,"endOffset":421521,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":422211,"endOffset":422308,"count":0}],"isBlockCoverage":false},{"functionName":"hasIn","ranges":[{"startOffset":422973,"endOffset":423074,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":423659,"endOffset":423857,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":424861,"endOffset":425167,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":426530,"endOffset":426636,"count":55},{"startOffset":426587,"endOffset":426610,"count":0}],"isBlockCoverage":true},{"functionName":"keysIn","ranges":[{"startOffset":427240,"endOffset":427356,"count":7},{"startOffset":427299,"endOffset":427328,"count":0}],"isBlockCoverage":true},{"functionName":"mapKeys","ranges":[{"startOffset":428132,"endOffset":428398,"count":0}],"isBlockCoverage":false},{"functionName":"mapValues","ranges":[{"startOffset":429441,"endOffset":429707,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":429572,"endOffset":429678,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":430859,"endOffset":430944,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":432097,"endOffset":432206,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":432885,"endOffset":433509,"count":0}],"isBlockCoverage":false},{"functionName":"omitBy","ranges":[{"startOffset":434212,"endOffset":434315,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":434829,"endOffset":434920,"count":1},{"startOffset":434883,"endOffset":434887,"count":0}],"isBlockCoverage":true},{"functionName":"pickBy","ranges":[{"startOffset":435518,"endOffset":435871,"count":1},{"startOffset":435581,"endOffset":435609,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":435659,"endOffset":435706,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":435790,"endOffset":435863,"count":16}],"isBlockCoverage":true},{"functionName":"result","ranges":[{"startOffset":436803,"endOffset":437387,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":438301,"endOffset":438411,"count":0}],"isBlockCoverage":false},{"functionName":"setWith","ranges":[{"startOffset":439299,"endOffset":439514,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":442222,"endOffset":442965,"count":0}],"isBlockCoverage":false},{"functionName":"unset","ranges":[{"startOffset":443725,"endOffset":443823,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":444769,"endOffset":444903,"count":0}],"isBlockCoverage":false},{"functionName":"updateWith","ranges":[{"startOffset":445843,"endOffset":446082,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":446732,"endOffset":446832,"count":0}],"isBlockCoverage":false},{"functionName":"valuesIn","ranges":[{"startOffset":447454,"endOffset":447558,"count":0}],"isBlockCoverage":false},{"functionName":"clamp","ranges":[{"startOffset":448133,"endOffset":448562,"count":0}],"isBlockCoverage":false},{"functionName":"inRange","ranges":[{"startOffset":449578,"endOffset":449855,"count":0}],"isBlockCoverage":false},{"functionName":"random","ranges":[{"startOffset":450989,"endOffset":452096,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":452720,"endOffset":452847,"count":0}],"isBlockCoverage":false},{"functionName":"capitalize","ranges":[{"startOffset":453248,"endOffset":453340,"count":0}],"isBlockCoverage":false},{"functionName":"deburr","ranges":[{"startOffset":454006,"endOffset":454157,"count":0}],"isBlockCoverage":false},{"functionName":"endsWith","ranges":[{"startOffset":454802,"endOffset":455197,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":456317,"endOffset":456514,"count":0}],"isBlockCoverage":false},{"functionName":"escapeRegExp","ranges":[{"startOffset":457000,"endOffset":457189,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":457758,"endOffset":457858,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":458388,"endOffset":458488,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":459626,"endOffset":460045,"count":0}],"isBlockCoverage":false},{"functionName":"padEnd","ranges":[{"startOffset":460697,"endOffset":460990,"count":0}],"isBlockCoverage":false},{"functionName":"padStart","ranges":[{"startOffset":461647,"endOffset":461942,"count":0}],"isBlockCoverage":false},{"functionName":"parseInt","ranges":[{"startOffset":462791,"endOffset":463035,"count":0}],"isBlockCoverage":false},{"functionName":"repeat","ranges":[{"startOffset":463625,"endOffset":463850,"count":0}],"isBlockCoverage":false},{"functionName":"replace","ranges":[{"startOffset":464468,"endOffset":464635,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":465183,"endOffset":465283,"count":0}],"isBlockCoverage":false},{"functionName":"split","ranges":[{"startOffset":465863,"endOffset":466551,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":467135,"endOffset":467233,"count":0}],"isBlockCoverage":false},{"functionName":"startsWith","ranges":[{"startOffset":467877,"endOffset":468180,"count":0}],"isBlockCoverage":false},{"functionName":"template","ranges":[{"startOffset":473119,"endOffset":477585,"count":0}],"isBlockCoverage":false},{"functionName":"toLower","ranges":[{"startOffset":478133,"endOffset":478208,"count":0}],"isBlockCoverage":false},{"functionName":"toUpper","ranges":[{"startOffset":478756,"endOffset":478831,"count":0}],"isBlockCoverage":false},{"functionName":"trim","ranges":[{"startOffset":479492,"endOffset":480016,"count":0}],"isBlockCoverage":false},{"functionName":"trimEnd","ranges":[{"startOffset":480595,"endOffset":481052,"count":0}],"isBlockCoverage":false},{"functionName":"trimStart","ranges":[{"startOffset":481634,"endOffset":482079,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":483396,"endOffset":485173,"count":0}],"isBlockCoverage":false},{"functionName":"unescape","ranges":[{"startOffset":485852,"endOffset":486049,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":486575,"endOffset":486675,"count":0}],"isBlockCoverage":false},{"functionName":"words","ranges":[{"startOffset":487778,"endOffset":488071,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":488904,"endOffset":489063,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":489893,"endOffset":490097,"count":0}],"isBlockCoverage":false},{"functionName":"cond","ranges":[{"startOffset":491047,"endOffset":491645,"count":0}],"isBlockCoverage":false},{"functionName":"conforms","ranges":[{"startOffset":492448,"endOffset":492544,"count":0}],"isBlockCoverage":false},{"functionName":"constant","ranges":[{"startOffset":493052,"endOffset":493141,"count":51}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":493092,"endOffset":493134,"count":0}],"isBlockCoverage":false},{"functionName":"defaultTo","ranges":[{"startOffset":493694,"endOffset":493813,"count":0}],"isBlockCoverage":false},{"functionName":"identity","ranges":[{"startOffset":495477,"endOffset":495529,"count":3}],"isBlockCoverage":true},{"functionName":"iteratee","ranges":[{"startOffset":497095,"endOffset":497222,"count":0}],"isBlockCoverage":false},{"functionName":"matches","ranges":[{"startOffset":498537,"endOffset":498631,"count":0}],"isBlockCoverage":false},{"functionName":"matchesProperty","ranges":[{"startOffset":499895,"endOffset":500021,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":500771,"endOffset":500887,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":501685,"endOffset":501801,"count":0}],"isBlockCoverage":false},{"functionName":"mixin","ranges":[{"startOffset":503001,"endOffset":504216,"count":5},{"startOffset":503156,"endOffset":503229,"count":4},{"startOffset":503211,"endOffset":503227,"count":0},{"startOffset":503231,"endOffset":503373,"count":0},{"startOffset":503412,"endOffset":503433,"count":1},{"startOffset":503435,"endOffset":503453,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":503524,"endOffset":504186,"count":323},{"startOffset":503641,"endOffset":504178,"count":317}],"isBlockCoverage":true},{"functionName":"object.<computed>","ranges":[{"startOffset":503684,"endOffset":504167,"count":0}],"isBlockCoverage":false},{"functionName":"noConflict","ranges":[{"startOffset":504549,"endOffset":504660,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":504891,"endOffset":504947,"count":0}],"isBlockCoverage":false},{"functionName":"nthArg","ranges":[{"startOffset":505507,"endOffset":505639,"count":0}],"isBlockCoverage":false},{"functionName":"property","ranges":[{"startOffset":508727,"endOffset":508837,"count":1},{"startOffset":508806,"endOffset":508830,"count":0}],"isBlockCoverage":true},{"functionName":"propertyOf","ranges":[{"startOffset":509465,"endOffset":509606,"count":0}],"isBlockCoverage":false},{"functionName":"stubArray","ranges":[{"startOffset":512191,"endOffset":512236,"count":0}],"isBlockCoverage":false},{"functionName":"stubFalse","ranges":[{"startOffset":512504,"endOffset":512552,"count":0}],"isBlockCoverage":false},{"functionName":"stubObject","ranges":[{"startOffset":512961,"endOffset":513007,"count":0}],"isBlockCoverage":false},{"functionName":"stubString","ranges":[{"startOffset":513286,"endOffset":513332,"count":0}],"isBlockCoverage":false},{"functionName":"stubTrue","ranges":[{"startOffset":513595,"endOffset":513641,"count":0}],"isBlockCoverage":false},{"functionName":"times","ranges":[{"startOffset":514249,"endOffset":514666,"count":0}],"isBlockCoverage":false},{"functionName":"toPath","ranges":[{"startOffset":515076,"endOffset":515264,"count":0}],"isBlockCoverage":false},{"functionName":"uniqueId","ranges":[{"startOffset":515691,"endOffset":515788,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":516260,"endOffset":516322,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":517256,"endOffset":517324,"count":0}],"isBlockCoverage":false},{"functionName":"max","ranges":[{"startOffset":518298,"endOffset":518431,"count":0}],"isBlockCoverage":false},{"functionName":"maxBy","ranges":[{"startOffset":519218,"endOffset":519379,"count":0}],"isBlockCoverage":false},{"functionName":"mean","ranges":[{"startOffset":519700,"endOffset":519768,"count":0}],"isBlockCoverage":false},{"functionName":"meanBy","ranges":[{"startOffset":520542,"endOffset":520638,"count":0}],"isBlockCoverage":false},{"functionName":"min","ranges":[{"startOffset":521068,"endOffset":521201,"count":0}],"isBlockCoverage":false},{"functionName":"minBy","ranges":[{"startOffset":521988,"endOffset":522149,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":522575,"endOffset":522657,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":523598,"endOffset":523670,"count":0}],"isBlockCoverage":false},{"functionName":"sum","ranges":[{"startOffset":523994,"endOffset":524106,"count":0}],"isBlockCoverage":false},{"functionName":"sumBy","ranges":[{"startOffset":524876,"endOffset":525016,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":534928,"endOffset":535167,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":534989,"endOffset":535138,"count":306},{"startOffset":535082,"endOffset":535130,"count":153}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":535543,"endOffset":535618,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":535723,"endOffset":536453,"count":2}],"isBlockCoverage":true},{"functionName":"LazyWrapper.<computed>","ranges":[{"startOffset":535795,"endOffset":536314,"count":0}],"isBlockCoverage":false},{"functionName":"LazyWrapper.<computed>","ranges":[{"startOffset":536369,"endOffset":536446,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":536569,"endOffset":537019,"count":3},{"startOffset":536673,"endOffset":536699,"count":2}],"isBlockCoverage":true},{"functionName":"LazyWrapper.<computed>","ranges":[{"startOffset":536744,"endOffset":537012,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":537115,"endOffset":537314,"count":2},{"startOffset":537182,"endOffset":537191,"count":1},{"startOffset":537192,"endOffset":537196,"count":1}],"isBlockCoverage":true},{"functionName":"LazyWrapper.<computed>","ranges":[{"startOffset":537242,"endOffset":537307,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":537416,"endOffset":537648,"count":2},{"startOffset":537483,"endOffset":537487,"count":1},{"startOffset":537488,"endOffset":537497,"count":1}],"isBlockCoverage":true},{"functionName":"LazyWrapper.<computed>","ranges":[{"startOffset":537543,"endOffset":537641,"count":0}],"isBlockCoverage":false},{"functionName":"LazyWrapper.compact","ranges":[{"startOffset":537688,"endOffset":537742,"count":0}],"isBlockCoverage":false},{"functionName":"LazyWrapper.find","ranges":[{"startOffset":537778,"endOffset":537849,"count":0}],"isBlockCoverage":false},{"functionName":"LazyWrapper.findLast","ranges":[{"startOffset":537889,"endOffset":537961,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":538011,"endOffset":538220,"count":0}],"isBlockCoverage":false},{"functionName":"LazyWrapper.reject","ranges":[{"startOffset":538259,"endOffset":538344,"count":0}],"isBlockCoverage":false},{"functionName":"LazyWrapper.slice","ranges":[{"startOffset":538381,"endOffset":538879,"count":0}],"isBlockCoverage":false},{"functionName":"LazyWrapper.takeRightWhile","ranges":[{"startOffset":538925,"endOffset":539012,"count":0}],"isBlockCoverage":false},{"functionName":"LazyWrapper.toArray","ranges":[{"startOffset":539051,"endOffset":539111,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":539208,"endOffset":541000,"count":19},{"startOffset":539412,"endOffset":539462,"count":2},{"startOffset":539446,"endOffset":539455,"count":1},{"startOffset":539456,"endOffset":539460,"count":1},{"startOffset":539463,"endOffset":539475,"count":17},{"startOffset":539511,"endOffset":539538,"count":17},{"startOffset":539564,"endOffset":539589,"count":0}],"isBlockCoverage":true},{"functionName":"lodash.<computed>","ranges":[{"startOffset":539627,"endOffset":540993,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":541123,"endOffset":541708,"count":6},{"startOffset":541252,"endOffset":541259,"count":3},{"startOffset":541260,"endOffset":541268,"count":3}],"isBlockCoverage":true},{"functionName":"lodash.<computed>","ranges":[{"startOffset":541369,"endOffset":541701,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":541804,"endOffset":542119,"count":19},{"startOffset":541990,"endOffset":542032,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":543749,"endOffset":543783,"count":0}],"isBlockCoverage":false}]},{"scriptId":"487","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13305,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":241,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadValues","ranges":[{"startOffset":401,"endOffset":698,"count":0}],"isBlockCoverage":false},{"functionName":"useInflection","ranges":[{"startOffset":1243,"endOffset":1310,"count":0}],"isBlockCoverage":false},{"functionName":"camelizeIf","ranges":[{"startOffset":1350,"endOffset":1477,"count":0}],"isBlockCoverage":false},{"functionName":"underscoredIf","ranges":[{"startOffset":1511,"endOffset":1643,"count":16},{"startOffset":1589,"endOffset":1624,"count":0}],"isBlockCoverage":true},{"functionName":"isPrimitive","ranges":[{"startOffset":1683,"endOffset":1796,"count":0}],"isBlockCoverage":false},{"functionName":"mergeDefaults","ranges":[{"startOffset":1832,"endOffset":2147,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":2187,"endOffset":2733,"count":2},{"startOffset":2258,"endOffset":2714,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2278,"endOffset":2708,"count":9},{"startOffset":2324,"endOffset":2702,"count":8},{"startOffset":2394,"endOffset":2694,"count":0}],"isBlockCoverage":true},{"functionName":"spliceStr","ranges":[{"startOffset":2757,"endOffset":2866,"count":0}],"isBlockCoverage":false},{"functionName":"camelize","ranges":[{"startOffset":2898,"endOffset":3000,"count":0}],"isBlockCoverage":false},{"functionName":"underscore","ranges":[{"startOffset":3030,"endOffset":3095,"count":0}],"isBlockCoverage":false},{"functionName":"singularize","ranges":[{"startOffset":3129,"endOffset":3196,"count":1}],"isBlockCoverage":true},{"functionName":"pluralize","ranges":[{"startOffset":3232,"endOffset":3295,"count":1}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":3327,"endOffset":3453,"count":0}],"isBlockCoverage":false},{"functionName":"formatNamedParameters","ranges":[{"startOffset":3479,"endOffset":3642,"count":0}],"isBlockCoverage":false},{"functionName":"cloneDeep","ranges":[{"startOffset":3698,"endOffset":4045,"count":0}],"isBlockCoverage":false},{"functionName":"mapFinderOptions","ranges":[{"startOffset":4077,"endOffset":4427,"count":0}],"isBlockCoverage":false},{"functionName":"mapOptionFieldNames","ranges":[{"startOffset":4473,"endOffset":5000,"count":0}],"isBlockCoverage":false},{"functionName":"mapWhereFieldNames","ranges":[{"startOffset":5052,"endOffset":6047,"count":0}],"isBlockCoverage":false},{"functionName":"mapValueFieldNames","ranges":[{"startOffset":6097,"endOffset":6562,"count":0}],"isBlockCoverage":false},{"functionName":"isColString","ranges":[{"startOffset":6612,"endOffset":6734,"count":0}],"isBlockCoverage":false},{"functionName":"canTreatArrayAsAnd","ranges":[{"startOffset":6770,"endOffset":6880,"count":0}],"isBlockCoverage":false},{"functionName":"combineTableNames","ranges":[{"startOffset":6930,"endOffset":7098,"count":0}],"isBlockCoverage":false},{"functionName":"toDefaultValue","ranges":[{"startOffset":7146,"endOffset":7703,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValueSchemable","ranges":[{"startOffset":7745,"endOffset":8036,"count":0}],"isBlockCoverage":false},{"functionName":"removeNullValuesFromHash","ranges":[{"startOffset":8092,"endOffset":8507,"count":0}],"isBlockCoverage":false},{"functionName":"now","ranges":[{"startOffset":8681,"endOffset":8804,"count":0}],"isBlockCoverage":false},{"functionName":"addTicks","ranges":[{"startOffset":8878,"endOffset":9005,"count":0}],"isBlockCoverage":false},{"functionName":"removeTicks","ranges":[{"startOffset":9035,"endOffset":9159,"count":0}],"isBlockCoverage":false},{"functionName":"flattenObjectDeep","ranges":[{"startOffset":9195,"endOffset":9722,"count":0}],"isBlockCoverage":false},{"functionName":"Fn","ranges":[{"startOffset":9876,"endOffset":9956,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":9959,"endOffset":10011,"count":0}],"isBlockCoverage":false},{"functionName":"Col","ranges":[{"startOffset":10069,"endOffset":10184,"count":0}],"isBlockCoverage":false},{"functionName":"Cast","ranges":[{"startOffset":10245,"endOffset":10380,"count":0}],"isBlockCoverage":false},{"functionName":"Literal","ranges":[{"startOffset":10446,"endOffset":10501,"count":0}],"isBlockCoverage":false},{"functionName":"Json","ranges":[{"startOffset":10570,"endOffset":10817,"count":0}],"isBlockCoverage":false},{"functionName":"Where","ranges":[{"startOffset":10881,"endOffset":11115,"count":0}],"isBlockCoverage":false},{"functionName":"getOperators","ranges":[{"startOffset":11141,"endOffset":11250,"count":0}],"isBlockCoverage":false},{"functionName":"getComplexKeys","ranges":[{"startOffset":11288,"endOffset":11373,"count":0}],"isBlockCoverage":false},{"functionName":"getComplexSize","ranges":[{"startOffset":11415,"endOffset":11518,"count":0}],"isBlockCoverage":false},{"functionName":"isWhereEmpty","ranges":[{"startOffset":11560,"endOffset":11658,"count":0}],"isBlockCoverage":false},{"functionName":"generateEnumName","ranges":[{"startOffset":11696,"endOffset":11792,"count":0}],"isBlockCoverage":false},{"functionName":"camelizeObjectKeys","ranges":[{"startOffset":11838,"endOffset":12004,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":12054,"endOffset":12496,"count":0}],"isBlockCoverage":false},{"functionName":"nameIndex","ranges":[{"startOffset":12526,"endOffset":12892,"count":0}],"isBlockCoverage":false},{"functionName":"intersects","ranges":[{"startOffset":12924,"endOffset":13004,"count":0}],"isBlockCoverage":false},{"functionName":"safeStringifyJson","ranges":[{"startOffset":13038,"endOffset":13223,"count":0}],"isBlockCoverage":false}]},{"scriptId":"488","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/data-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17962,"count":1},{"startOffset":6807,"endOffset":6864,"count":3},{"startOffset":17599,"endOffset":17731,"count":8},{"startOffset":17785,"endOffset":17884,"count":9}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":512,"endOffset":567,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":570,"endOffset":604,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":607,"endOffset":735,"count":0}],"isBlockCoverage":false},{"functionName":"bindParam","ranges":[{"startOffset":738,"endOffset":910,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":920,"endOffset":958,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":968,"endOffset":1101,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":1111,"endOffset":1170,"count":30}],"isBlockCoverage":true},{"functionName":"STRING","ranges":[{"startOffset":1245,"endOffset":1476,"count":30},{"startOffset":1335,"endOffset":1344,"count":20},{"startOffset":1345,"endOffset":1366,"count":10},{"startOffset":1465,"endOffset":1471,"count":0}],"isBlockCoverage":true},{"functionName":"toSql","ranges":[{"startOffset":1479,"endOffset":1595,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":1598,"endOffset":1927,"count":0}],"isBlockCoverage":false},{"functionName":"get BINARY","ranges":[{"startOffset":1930,"endOffset":2022,"count":0}],"isBlockCoverage":false},{"functionName":"get BINARY","ranges":[{"startOffset":2032,"endOffset":2080,"count":0}],"isBlockCoverage":false},{"functionName":"CHAR","ranges":[{"startOffset":2113,"endOffset":2217,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2220,"endOffset":2333,"count":0}],"isBlockCoverage":false},{"functionName":"TEXT","ranges":[{"startOffset":2368,"endOffset":2547,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2550,"endOffset":2793,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":2796,"endOffset":2974,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3011,"endOffset":3045,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":3048,"endOffset":3226,"count":0}],"isBlockCoverage":false},{"functionName":"NUMBER","ranges":[{"startOffset":3263,"endOffset":3657,"count":3},{"startOffset":3341,"endOffset":3399,"count":0}],"isBlockCoverage":true},{"functionName":"toSql","ranges":[{"startOffset":3660,"endOffset":4024,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":4027,"endOffset":4232,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":4235,"endOffset":4531,"count":0}],"isBlockCoverage":false},{"functionName":"get UNSIGNED","ranges":[{"startOffset":4534,"endOffset":4632,"count":0}],"isBlockCoverage":false},{"functionName":"get ZEROFILL","ranges":[{"startOffset":4635,"endOffset":4733,"count":0}],"isBlockCoverage":false},{"functionName":"get UNSIGNED","ranges":[{"startOffset":4743,"endOffset":4795,"count":0}],"isBlockCoverage":false},{"functionName":"get ZEROFILL","ranges":[{"startOffset":4805,"endOffset":4857,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":4893,"endOffset":5096,"count":0}],"isBlockCoverage":false},{"functionName":"FLOAT","ranges":[{"startOffset":5268,"endOffset":5376,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":5379,"endOffset":5564,"count":0}],"isBlockCoverage":false},{"functionName":"REAL","ranges":[{"startOffset":5597,"endOffset":5705,"count":0}],"isBlockCoverage":false},{"functionName":"DOUBLE","ranges":[{"startOffset":5740,"endOffset":5848,"count":0}],"isBlockCoverage":false},{"functionName":"DECIMAL","ranges":[{"startOffset":5884,"endOffset":5998,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":6001,"endOffset":6172,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":6175,"endOffset":6364,"count":0}],"isBlockCoverage":false},{"functionName":"_value","ranges":[{"startOffset":6412,"endOffset":6606,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":6610,"endOffset":6671,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":6675,"endOffset":6757,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":6900,"endOffset":6938,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":6941,"endOffset":7130,"count":0}],"isBlockCoverage":false},{"functionName":"_sanitize","ranges":[{"startOffset":7133,"endOffset":7569,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":7649,"endOffset":7681,"count":0}],"isBlockCoverage":false},{"functionName":"DATE","ranges":[{"startOffset":7716,"endOffset":7895,"count":4},{"startOffset":7798,"endOffset":7807,"count":2},{"startOffset":7808,"endOffset":7821,"count":2}],"isBlockCoverage":true},{"functionName":"toSql","ranges":[{"startOffset":7898,"endOffset":7934,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":7937,"endOffset":8120,"count":0}],"isBlockCoverage":false},{"functionName":"_sanitize","ranges":[{"startOffset":8123,"endOffset":8296,"count":0}],"isBlockCoverage":false},{"functionName":"_isChanged","ranges":[{"startOffset":8299,"endOffset":8639,"count":0}],"isBlockCoverage":false},{"functionName":"_applyTimezone","ranges":[{"startOffset":8642,"endOffset":8908,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":8911,"endOffset":9084,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":9123,"endOffset":9155,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":9158,"endOffset":9226,"count":0}],"isBlockCoverage":false},{"functionName":"_sanitize","ranges":[{"startOffset":9229,"endOffset":9393,"count":0}],"isBlockCoverage":false},{"functionName":"_isChanged","ranges":[{"startOffset":9396,"endOffset":9629,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":9666,"endOffset":9842,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":9881,"endOffset":9914,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":9917,"endOffset":9974,"count":0}],"isBlockCoverage":false},{"functionName":"BLOB","ranges":[{"startOffset":10073,"endOffset":10252,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":10255,"endOffset":10498,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":10501,"endOffset":10704,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":10707,"endOffset":10980,"count":0}],"isBlockCoverage":false},{"functionName":"_hexify","ranges":[{"startOffset":10983,"endOffset":11025,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":11028,"endOffset":11278,"count":0}],"isBlockCoverage":false},{"functionName":"RANGE","ranges":[{"startOffset":11345,"endOffset":11690,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":11693,"endOffset":11997,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":12032,"endOffset":12285,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":12322,"endOffset":12575,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":12612,"endOffset":12870,"count":0}],"isBlockCoverage":false},{"functionName":"VIRTUAL","ranges":[{"startOffset":12908,"endOffset":13097,"count":0}],"isBlockCoverage":false},{"functionName":"ENUM","ranges":[{"startOffset":13132,"endOffset":13490,"count":3},{"startOffset":13241,"endOffset":13265,"count":2},{"startOffset":13266,"endOffset":13274,"count":2},{"startOffset":13275,"endOffset":13423,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13306,"endOffset":13412,"count":2},{"startOffset":13381,"endOffset":13390,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":13493,"endOffset":13693,"count":0}],"isBlockCoverage":false},{"functionName":"ARRAY","ranges":[{"startOffset":13729,"endOffset":13942,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":13945,"endOffset":13995,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":13998,"endOffset":14171,"count":0}],"isBlockCoverage":false},{"functionName":"is","ranges":[{"startOffset":14181,"endOffset":14261,"count":0}],"isBlockCoverage":false},{"functionName":"GEOMETRY","ranges":[{"startOffset":14300,"endOffset":14497,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":14500,"endOffset":14623,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":14626,"endOffset":14752,"count":0}],"isBlockCoverage":false},{"functionName":"GEOGRAPHY","ranges":[{"startOffset":14827,"endOffset":15024,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":15027,"endOffset":15150,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":15153,"endOffset":15279,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":15350,"endOffset":15557,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":15592,"endOffset":15794,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":15832,"endOffset":16045,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":16084,"endOffset":16262,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16745,"endOffset":16911,"count":39},{"startOffset":16829,"endOffset":16909,"count":37}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17621,"endOffset":17727,"count":112},{"startOffset":17665,"endOffset":17723,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17807,"endOffset":17880,"count":151}],"isBlockCoverage":true}]},{"scriptId":"489","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/wkx/lib/wkx.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":421,"count":1}],"isBlockCoverage":true}]},{"scriptId":"490","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/wkx/lib/types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":777,"count":1}],"isBlockCoverage":true}]},{"scriptId":"491","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/wkx/lib/geometry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12236,"count":1}],"isBlockCoverage":true},{"functionName":"Geometry","ranges":[{"startOffset":553,"endOffset":653,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry.parse","ranges":[{"startOffset":674,"endOffset":1051,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry._parseWkt","ranges":[{"startOffset":1077,"endOffset":2317,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry._parseWkb","ranges":[{"startOffset":2343,"endOffset":4662,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry.parseTwkb","ranges":[{"startOffset":4688,"endOffset":7282,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry.parseGeoJSON","ranges":[{"startOffset":7311,"endOffset":7375,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry._parseGeoJSON","ranges":[{"startOffset":7405,"endOffset":8898,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry.toEwkt","ranges":[{"startOffset":8931,"endOffset":9001,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry.toEwkb","ranges":[{"startOffset":9034,"endOffset":9350,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry._getWktType","ranges":[{"startOffset":9388,"endOffset":9732,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry._getWktCoordinate","ranges":[{"startOffset":9776,"endOffset":9992,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry._writeWkbType","ranges":[{"startOffset":10032,"endOffset":10651,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry.getTwkbPrecision","ranges":[{"startOffset":10684,"endOffset":10964,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry._writeTwkbHeader","ranges":[{"startOffset":11007,"endOffset":11543,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry.toGeoJSON","ranges":[{"startOffset":11579,"endOffset":12233,"count":0}],"isBlockCoverage":false}]},{"scriptId":"492","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/wkx/lib/point.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6221,"count":1}],"isBlockCoverage":true},{"functionName":"Point","ranges":[{"startOffset":217,"endOffset":468,"count":0}],"isBlockCoverage":false},{"functionName":"Point.Z","ranges":[{"startOffset":517,"endOffset":643,"count":0}],"isBlockCoverage":false},{"functionName":"Point.M","ranges":[{"startOffset":658,"endOffset":784,"count":0}],"isBlockCoverage":false},{"functionName":"Point.ZM","ranges":[{"startOffset":800,"endOffset":945,"count":0}],"isBlockCoverage":false},{"functionName":"Point._parseWkt","ranges":[{"startOffset":968,"endOffset":1443,"count":0}],"isBlockCoverage":false},{"functionName":"Point._parseWkb","ranges":[{"startOffset":1466,"endOffset":1601,"count":0}],"isBlockCoverage":false},{"functionName":"Point._readWkbPoint","ranges":[{"startOffset":1628,"endOffset":1833,"count":0}],"isBlockCoverage":false},{"functionName":"Point._parseTwkb","ranges":[{"startOffset":1857,"endOffset":2415,"count":0}],"isBlockCoverage":false},{"functionName":"Point._readTwkbPoint","ranges":[{"startOffset":2443,"endOffset":2979,"count":0}],"isBlockCoverage":false},{"functionName":"Point._parseGeoJSON","ranges":[{"startOffset":3006,"endOffset":3083,"count":0}],"isBlockCoverage":false},{"functionName":"Point._readGeoJSONPoint","ranges":[{"startOffset":3114,"endOffset":3372,"count":0}],"isBlockCoverage":false},{"functionName":"Point.toWkt","ranges":[{"startOffset":3401,"endOffset":3721,"count":0}],"isBlockCoverage":false},{"functionName":"Point.toWkb","ranges":[{"startOffset":3750,"endOffset":4273,"count":0}],"isBlockCoverage":false},{"functionName":"Point._writeWkbPoint","ranges":[{"startOffset":4311,"endOffset":4508,"count":0}],"isBlockCoverage":false},{"functionName":"Point.toTwkb","ranges":[{"startOffset":4538,"endOffset":4931,"count":0}],"isBlockCoverage":false},{"functionName":"Point._writeTwkbPoint","ranges":[{"startOffset":4970,"endOffset":5574,"count":0}],"isBlockCoverage":false},{"functionName":"Point._getWkbSize","ranges":[{"startOffset":5609,"endOffset":5758,"count":0}],"isBlockCoverage":false},{"functionName":"Point.toGeoJSON","ranges":[{"startOffset":5791,"endOffset":6218,"count":0}],"isBlockCoverage":false}]},{"scriptId":"493","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/wkx/lib/binarywriter.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2447,"count":1}],"isBlockCoverage":true},{"functionName":"BinaryWriter","ranges":[{"startOffset":34,"endOffset":177,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":181,"endOffset":395,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":224,"endOffset":391,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryWriter.writeBuffer","ranges":[{"startOffset":1574,"endOffset":1736,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryWriter.writeVarInt","ranges":[{"startOffset":1778,"endOffset":2022,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryWriter.ensureSize","ranges":[{"startOffset":2063,"endOffset":2444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"494","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/wkx/lib/zigzag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":196,"count":1}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":32,"endOffset":103,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":118,"endOffset":190,"count":0}],"isBlockCoverage":false}]},{"scriptId":"495","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/wkx/lib/linestring.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4952,"count":1}],"isBlockCoverage":true},{"functionName":"LineString","ranges":[{"startOffset":217,"endOffset":464,"count":0}],"isBlockCoverage":false},{"functionName":"LineString.Z","ranges":[{"startOffset":523,"endOffset":656,"count":0}],"isBlockCoverage":false},{"functionName":"LineString.M","ranges":[{"startOffset":676,"endOffset":809,"count":0}],"isBlockCoverage":false},{"functionName":"LineString.ZM","ranges":[{"startOffset":830,"endOffset":992,"count":0}],"isBlockCoverage":false},{"functionName":"LineString._parseWkt","ranges":[{"startOffset":1020,"endOffset":1441,"count":0}],"isBlockCoverage":false},{"functionName":"LineString._parseWkb","ranges":[{"startOffset":1469,"endOffset":1834,"count":0}],"isBlockCoverage":false},{"functionName":"LineString._parseTwkb","ranges":[{"startOffset":1863,"endOffset":2365,"count":0}],"isBlockCoverage":false},{"functionName":"LineString._parseGeoJSON","ranges":[{"startOffset":2397,"endOffset":2723,"count":0}],"isBlockCoverage":false},{"functionName":"LineString.toWkt","ranges":[{"startOffset":2757,"endOffset":2952,"count":0}],"isBlockCoverage":false},{"functionName":"LineString._toInnerWkt","ranges":[{"startOffset":2992,"endOffset":3239,"count":0}],"isBlockCoverage":false},{"functionName":"LineString.toWkb","ranges":[{"startOffset":3273,"endOffset":3616,"count":0}],"isBlockCoverage":false},{"functionName":"LineString.toTwkb","ranges":[{"startOffset":3651,"endOffset":4195,"count":0}],"isBlockCoverage":false},{"functionName":"LineString._getWkbSize","ranges":[{"startOffset":4235,"endOffset":4448,"count":0}],"isBlockCoverage":false},{"functionName":"LineString.toGeoJSON","ranges":[{"startOffset":4486,"endOffset":4949,"count":0}],"isBlockCoverage":false}]},{"scriptId":"496","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/wkx/lib/polygon.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8508,"count":1}],"isBlockCoverage":true},{"functionName":"Polygon","ranges":[{"startOffset":214,"endOffset":556,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon.Z","ranges":[{"startOffset":609,"endOffset":772,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon.M","ranges":[{"startOffset":789,"endOffset":952,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon.ZM","ranges":[{"startOffset":970,"endOffset":1159,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon._parseWkt","ranges":[{"startOffset":1184,"endOffset":1837,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon._parseWkb","ranges":[{"startOffset":1862,"endOffset":2654,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon._parseTwkb","ranges":[{"startOffset":2680,"endOffset":3550,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon._parseGeoJSON","ranges":[{"startOffset":3579,"endOffset":4244,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon.toWkt","ranges":[{"startOffset":4275,"endOffset":4470,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon._toInnerWkt","ranges":[{"startOffset":4507,"endOffset":5113,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon.toWkb","ranges":[{"startOffset":5144,"endOffset":5912,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon.toTwkb","ranges":[{"startOffset":5944,"endOffset":6869,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon._getWkbSize","ranges":[{"startOffset":6906,"endOffset":7339,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon.toGeoJSON","ranges":[{"startOffset":7374,"endOffset":8505,"count":0}],"isBlockCoverage":false}]},{"scriptId":"497","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/wkx/lib/multipoint.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4723,"count":1}],"isBlockCoverage":true},{"functionName":"MultiPoint","ranges":[{"startOffset":217,"endOffset":465,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint.Z","ranges":[{"startOffset":524,"endOffset":657,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint.M","ranges":[{"startOffset":677,"endOffset":810,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint.ZM","ranges":[{"startOffset":831,"endOffset":993,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint._parseWkt","ranges":[{"startOffset":1021,"endOffset":1442,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint._parseWkb","ranges":[{"startOffset":1470,"endOffset":1830,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint._parseTwkb","ranges":[{"startOffset":1859,"endOffset":2361,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint._parseGeoJSON","ranges":[{"startOffset":2393,"endOffset":2732,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint.toWkt","ranges":[{"startOffset":2766,"endOffset":3130,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint.toWkb","ranges":[{"startOffset":3164,"endOffset":3503,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint.toTwkb","ranges":[{"startOffset":3538,"endOffset":4082,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint._getWkbSize","ranges":[{"startOffset":4122,"endOffset":4363,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint.toGeoJSON","ranges":[{"startOffset":4401,"endOffset":4720,"count":0}],"isBlockCoverage":false}]},{"scriptId":"498","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/wkx/lib/multilinestring.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5758,"count":1}],"isBlockCoverage":true},{"functionName":"MultiLineString","ranges":[{"startOffset":265,"endOffset":547,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString.Z","ranges":[{"startOffset":616,"endOffset":779,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString.M","ranges":[{"startOffset":804,"endOffset":967,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString.ZM","ranges":[{"startOffset":993,"endOffset":1190,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString._parseWkt","ranges":[{"startOffset":1223,"endOffset":1803,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString._parseWkb","ranges":[{"startOffset":1836,"endOffset":2246,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString._parseTwkb","ranges":[{"startOffset":2280,"endOffset":3114,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString._parseGeoJSON","ranges":[{"startOffset":3151,"endOffset":3563,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString.toWkt","ranges":[{"startOffset":3602,"endOffset":3981,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString.toWkb","ranges":[{"startOffset":4020,"endOffset":4379,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString.toTwkb","ranges":[{"startOffset":4419,"endOffset":5161,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString._getWkbSize","ranges":[{"startOffset":5206,"endOffset":5378,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString.toGeoJSON","ranges":[{"startOffset":5421,"endOffset":5755,"count":0}],"isBlockCoverage":false}]},{"scriptId":"499","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/wkx/lib/multipolygon.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6770,"count":1}],"isBlockCoverage":true},{"functionName":"MultiPolygon","ranges":[{"startOffset":256,"endOffset":517,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon.Z","ranges":[{"startOffset":580,"endOffset":725,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon.M","ranges":[{"startOffset":747,"endOffset":892,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon.ZM","ranges":[{"startOffset":915,"endOffset":1091,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon._parseWkt","ranges":[{"startOffset":1121,"endOffset":2086,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon._parseWkb","ranges":[{"startOffset":2116,"endOffset":2496,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon._parseTwkb","ranges":[{"startOffset":2527,"endOffset":3734,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon._parseGeoJSON","ranges":[{"startOffset":3768,"endOffset":4200,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon.toWkt","ranges":[{"startOffset":4236,"endOffset":4600,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon.toWkb","ranges":[{"startOffset":4636,"endOffset":4983,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon.toTwkb","ranges":[{"startOffset":5020,"endOffset":6194,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon._getWkbSize","ranges":[{"startOffset":6236,"endOffset":6402,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon.toGeoJSON","ranges":[{"startOffset":6442,"endOffset":6767,"count":0}],"isBlockCoverage":false}]},{"scriptId":"500","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/wkx/lib/geometrycollection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5023,"count":1}],"isBlockCoverage":true},{"functionName":"GeometryCollection","ranges":[{"startOffset":192,"endOffset":471,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection.Z","ranges":[{"startOffset":546,"endOffset":719,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection.M","ranges":[{"startOffset":747,"endOffset":920,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection.ZM","ranges":[{"startOffset":949,"endOffset":1159,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection._parseWkt","ranges":[{"startOffset":1195,"endOffset":1704,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection._parseWkb","ranges":[{"startOffset":1740,"endOffset":2166,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection._parseTwkb","ranges":[{"startOffset":2203,"endOffset":2643,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection._parseGeoJSON","ranges":[{"startOffset":2683,"endOffset":3074,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection.toWkt","ranges":[{"startOffset":3116,"endOffset":3492,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection.toWkb","ranges":[{"startOffset":3534,"endOffset":3893,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection.toTwkb","ranges":[{"startOffset":3936,"endOffset":4435,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection._getWkbSize","ranges":[{"startOffset":4483,"endOffset":4653,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection.toGeoJSON","ranges":[{"startOffset":4699,"endOffset":5020,"count":0}],"isBlockCoverage":false}]},{"scriptId":"501","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/wkx/lib/binaryreader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1719,"count":1}],"isBlockCoverage":true},{"functionName":"BinaryReader","ranges":[{"startOffset":34,"endOffset":178,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":182,"endOffset":507,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":233,"endOffset":503,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryReader.readVarInt","ranges":[{"startOffset":1395,"endOffset":1716,"count":0}],"isBlockCoverage":false}]},{"scriptId":"502","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/wkx/lib/wktparser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3645,"count":1}],"isBlockCoverage":true},{"functionName":"WktParser","ranges":[{"startOffset":99,"endOffset":178,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.match","ranges":[{"startOffset":210,"endOffset":504,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.matchRegex","ranges":[{"startOffset":542,"endOffset":853,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.isMatch","ranges":[{"startOffset":888,"endOffset":1178,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.matchType","ranges":[{"startOffset":1215,"endOffset":1541,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.matchDimension","ranges":[{"startOffset":1583,"endOffset":1905,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.expectGroupStart","ranges":[{"startOffset":1949,"endOffset":2046,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.expectGroupEnd","ranges":[{"startOffset":2088,"endOffset":2183,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.matchCoordinate","ranges":[{"startOffset":2226,"endOffset":3120,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.matchCoordinates","ranges":[{"startOffset":3164,"endOffset":3473,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.skipWhitespaces","ranges":[{"startOffset":3516,"endOffset":3642,"count":0}],"isBlockCoverage":false}]},{"scriptId":"503","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5394,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":27}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1},{"startOffset":442,"endOffset":504,"count":29}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":26},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":57},{"startOffset":725,"endOffset":745,"count":5},{"startOffset":755,"endOffset":880,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":4}],"isBlockCoverage":true},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":26},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":29}],"isBlockCoverage":true},{"functionName":"AccessDeniedError","ranges":[{"startOffset":1250,"endOffset":1290,"count":1}],"isBlockCoverage":true},{"functionName":"AggregateError","ranges":[{"startOffset":1310,"endOffset":1346,"count":1}],"isBlockCoverage":true},{"functionName":"AssociationError","ranges":[{"startOffset":1368,"endOffset":1406,"count":3}],"isBlockCoverage":true},{"functionName":"AsyncQueueError","ranges":[{"startOffset":1427,"endOffset":1467,"count":1}],"isBlockCoverage":true},{"functionName":"BaseError","ranges":[{"startOffset":1482,"endOffset":1513,"count":2}],"isBlockCoverage":true},{"functionName":"BulkRecordError","ranges":[{"startOffset":1534,"endOffset":1572,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionAcquireTimeoutError","ranges":[{"startOffset":1607,"endOffset":1660,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionError","ranges":[{"startOffset":1681,"endOffset":1718,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionRefusedError","ranges":[{"startOffset":1746,"endOffset":1791,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionTimedOutError","ranges":[{"startOffset":1820,"endOffset":1867,"count":1}],"isBlockCoverage":true},{"functionName":"DatabaseError","ranges":[{"startOffset":1886,"endOffset":1921,"count":1}],"isBlockCoverage":true},{"functionName":"EagerLoadingError","ranges":[{"startOffset":1944,"endOffset":1984,"count":1}],"isBlockCoverage":true},{"functionName":"EmptyResultError","ranges":[{"startOffset":2006,"endOffset":2045,"count":2}],"isBlockCoverage":true},{"functionName":"ExclusionConstraintError","ranges":[{"startOffset":2075,"endOffset":2122,"count":1}],"isBlockCoverage":true},{"functionName":"ForeignKeyConstraintError","ranges":[{"startOffset":2153,"endOffset":2202,"count":1}],"isBlockCoverage":true},{"functionName":"HostNotFoundError","ranges":[{"startOffset":2225,"endOffset":2266,"count":1}],"isBlockCoverage":true},{"functionName":"HostNotReachableError","ranges":[{"startOffset":2293,"endOffset":2338,"count":1}],"isBlockCoverage":true},{"functionName":"InstanceError","ranges":[{"startOffset":2357,"endOffset":2392,"count":1}],"isBlockCoverage":true},{"functionName":"InvalidConnectionError","ranges":[{"startOffset":2420,"endOffset":2465,"count":1}],"isBlockCoverage":true},{"functionName":"OptimisticLockError","ranges":[{"startOffset":2490,"endOffset":2532,"count":1}],"isBlockCoverage":true},{"functionName":"QueryError","ranges":[{"startOffset":2548,"endOffset":2580,"count":1}],"isBlockCoverage":true},{"functionName":"SequelizeScopeError","ranges":[{"startOffset":2605,"endOffset":2647,"count":1}],"isBlockCoverage":true},{"functionName":"TimeoutError","ranges":[{"startOffset":2665,"endOffset":2699,"count":1}],"isBlockCoverage":true},{"functionName":"UniqueConstraintError","ranges":[{"startOffset":2726,"endOffset":2770,"count":1}],"isBlockCoverage":true},{"functionName":"UnknownConstraintError","ranges":[{"startOffset":2798,"endOffset":2843,"count":1}],"isBlockCoverage":true},{"functionName":"ValidationError","ranges":[{"startOffset":2864,"endOffset":2901,"count":1}],"isBlockCoverage":true},{"functionName":"ValidationErrorItem","ranges":[{"startOffset":2926,"endOffset":2975,"count":1}],"isBlockCoverage":true},{"functionName":"ValidationErrorItemOrigin","ranges":[{"startOffset":3006,"endOffset":3061,"count":1}],"isBlockCoverage":true},{"functionName":"ValidationErrorItemType","ranges":[{"startOffset":3090,"endOffset":3143,"count":1}],"isBlockCoverage":true}]},{"scriptId":"504","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/base-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":532,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":60,"endOffset":120,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":137,"endOffset":274,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":307,"endOffset":331,"count":15}],"isBlockCoverage":true},{"functionName":"BaseError","ranges":[{"startOffset":370,"endOffset":454,"count":0}],"isBlockCoverage":false}]},{"scriptId":"505","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/database-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2253,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":2},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1536,"endOffset":1564,"count":5}],"isBlockCoverage":true},{"functionName":"DatabaseError","ranges":[{"startOffset":1688,"endOffset":2163,"count":0}],"isBlockCoverage":false}]},{"scriptId":"506","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/aggregate-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2227,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":2},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1536,"endOffset":1565,"count":1}],"isBlockCoverage":true},{"functionName":"AggregateError","ranges":[{"startOffset":1690,"endOffset":1823,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1826,"endOffset":2134,"count":0}],"isBlockCoverage":false}]},{"scriptId":"507","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/association-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1588,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1271,"count":3}],"isBlockCoverage":true},{"functionName":"AssociationError","ranges":[{"startOffset":1398,"endOffset":1489,"count":0}],"isBlockCoverage":false}]},{"scriptId":"508","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/bulk-record-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2014,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":2},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1536,"endOffset":1567,"count":1}],"isBlockCoverage":true},{"functionName":"BulkRecordError","ranges":[{"startOffset":1693,"endOffset":1916,"count":0}],"isBlockCoverage":false}]},{"scriptId":"509","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/connection-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2024,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":2},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1536,"endOffset":1566,"count":8}],"isBlockCoverage":true},{"functionName":"ConnectionError","ranges":[{"startOffset":1692,"endOffset":1928,"count":0}],"isBlockCoverage":false}]},{"scriptId":"510","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/eager-loading-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1597,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1273,"count":1}],"isBlockCoverage":true},{"functionName":"EagerLoadingError","ranges":[{"startOffset":1401,"endOffset":1493,"count":0}],"isBlockCoverage":false}]},{"scriptId":"511","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/empty-result-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1591,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1272,"count":2}],"isBlockCoverage":true},{"functionName":"EmptyResultError","ranges":[{"startOffset":1399,"endOffset":1490,"count":0}],"isBlockCoverage":false}]},{"scriptId":"512","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/instance-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1570,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1268,"count":1}],"isBlockCoverage":true},{"functionName":"InstanceError","ranges":[{"startOffset":1392,"endOffset":1480,"count":0}],"isBlockCoverage":false}]},{"scriptId":"513","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/optimistic-lock-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2265,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":2},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1536,"endOffset":1571,"count":1}],"isBlockCoverage":true},{"functionName":"OptimisticLockError","ranges":[{"startOffset":1701,"endOffset":2155,"count":0}],"isBlockCoverage":false}]},{"scriptId":"514","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/query-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1552,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1265,"count":1}],"isBlockCoverage":true},{"functionName":"QueryError","ranges":[{"startOffset":1386,"endOffset":1471,"count":0}],"isBlockCoverage":false}]},{"scriptId":"515","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/sequelize-scope-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1600,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1275,"count":1}],"isBlockCoverage":true},{"functionName":"SequelizeScopeError","ranges":[{"startOffset":1405,"endOffset":1490,"count":0}],"isBlockCoverage":false}]},{"scriptId":"516","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/validation-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5444,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":2},{"startOffset":325,"endOffset":411,"count":0}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1},{"startOffset":603,"endOffset":665,"count":4}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":2},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":2},{"startOffset":1471,"endOffset":1476,"count":0}],"isBlockCoverage":true},{"functionName":"ValidationErrorItem","ranges":[{"startOffset":1548,"endOffset":1573,"count":1}],"isBlockCoverage":true},{"functionName":"ValidationErrorItemOrigin","ranges":[{"startOffset":1604,"endOffset":1635,"count":1}],"isBlockCoverage":true},{"functionName":"ValidationErrorItemType","ranges":[{"startOffset":1664,"endOffset":1693,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1706,"endOffset":1736,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1849,"endOffset":2148,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2231,"endOffset":2448,"count":1}],"isBlockCoverage":true},{"functionName":"ValidationErrorItem","ranges":[{"startOffset":2514,"endOffset":3639,"count":0}],"isBlockCoverage":false},{"functionName":"isValidationErrorItemOrigin","ranges":[{"startOffset":3642,"endOffset":3740,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeString","ranges":[{"startOffset":3743,"endOffset":3806,"count":0}],"isBlockCoverage":false},{"functionName":"getValidatorKey","ranges":[{"startOffset":3809,"endOffset":4450,"count":0}],"isBlockCoverage":false},{"functionName":"ValidationError","ranges":[{"startOffset":4665,"endOffset":5174,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5177,"endOffset":5348,"count":0}],"isBlockCoverage":false}]},{"scriptId":"517","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/connection/access-denied-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1614,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1273,"count":1}],"isBlockCoverage":true},{"functionName":"AccessDeniedError","ranges":[{"startOffset":1420,"endOffset":1510,"count":0}],"isBlockCoverage":false}]},{"scriptId":"518","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/connection/connection-acquire-timeout-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1689,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1286,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionAcquireTimeoutError","ranges":[{"startOffset":1445,"endOffset":1547,"count":0}],"isBlockCoverage":false}]},{"scriptId":"519","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/connection/connection-refused-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1644,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1278,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionRefusedError","ranges":[{"startOffset":1430,"endOffset":1525,"count":0}],"isBlockCoverage":false}]},{"scriptId":"520","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/connection/connection-timed-out-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1653,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1280,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionTimedOutError","ranges":[{"startOffset":1433,"endOffset":1529,"count":0}],"isBlockCoverage":false}]},{"scriptId":"521","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/connection/host-not-found-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1617,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1274,"count":1}],"isBlockCoverage":true},{"functionName":"HostNotFoundError","ranges":[{"startOffset":1421,"endOffset":1511,"count":0}],"isBlockCoverage":false}]},{"scriptId":"522","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/connection/host-not-reachable-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1641,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1278,"count":1}],"isBlockCoverage":true},{"functionName":"HostNotReachableError","ranges":[{"startOffset":1429,"endOffset":1523,"count":0}],"isBlockCoverage":false}]},{"scriptId":"523","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/connection/invalid-connection-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1644,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1278,"count":1}],"isBlockCoverage":true},{"functionName":"InvalidConnectionError","ranges":[{"startOffset":1430,"endOffset":1525,"count":0}],"isBlockCoverage":false}]},{"scriptId":"524","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/database/exclusion-constraint-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2369,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":2},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1536,"endOffset":1576,"count":1}],"isBlockCoverage":true},{"functionName":"ExclusionConstraintError","ranges":[{"startOffset":1724,"endOffset":2244,"count":0}],"isBlockCoverage":false}]},{"scriptId":"525","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/database/foreign-key-constraint-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2762,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1},{"startOffset":603,"endOffset":665,"count":2}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":2},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"RelationshipType","ranges":[{"startOffset":1545,"endOffset":1567,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1580,"endOffset":1622,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1737,"endOffset":1873,"count":1}],"isBlockCoverage":true},{"functionName":"ForeignKeyConstraintError","ranges":[{"startOffset":1974,"endOffset":2632,"count":0}],"isBlockCoverage":false}]},{"scriptId":"526","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/database/timeout-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1598,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1267,"count":1}],"isBlockCoverage":true},{"functionName":"TimeoutError","ranges":[{"startOffset":1403,"endOffset":1511,"count":0}],"isBlockCoverage":false}]},{"scriptId":"527","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/database/unknown-constraint-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2370,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":2},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1536,"endOffset":1574,"count":1}],"isBlockCoverage":true},{"functionName":"UnknownConstraintError","ranges":[{"startOffset":1720,"endOffset":2251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"528","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/validation/unique-constraint-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2598,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":5},{"startOffset":886,"endOffset":906,"count":3},{"startOffset":916,"endOffset":1041,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1536,"endOffset":1573,"count":1}],"isBlockCoverage":true},{"functionName":"UniqueConstraintError","ranges":[{"startOffset":1724,"endOffset":2482,"count":0}],"isBlockCoverage":false}]},{"scriptId":"529","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/mssql/async-queue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2868,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":3}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1},{"startOffset":603,"endOffset":665,"count":2}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":2},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":4},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":2},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"AsyncQueueError","ranges":[{"startOffset":1544,"endOffset":1565,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1578,"endOffset":1603,"count":0}],"isBlockCoverage":false},{"functionName":"AsyncQueueError","ranges":[{"startOffset":1824,"endOffset":1914,"count":0}],"isBlockCoverage":false},{"functionName":"AsyncQueue","ranges":[{"startOffset":1938,"endOffset":2175,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":2178,"endOffset":2367,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":2370,"endOffset":2787,"count":0}],"isBlockCoverage":false}]},{"scriptId":"530","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/utils/validator-extras.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2220,"count":1}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":153,"endOffset":213,"count":0}],"isBlockCoverage":false},{"functionName":"notEmpty","ranges":[{"startOffset":217,"endOffset":276,"count":0}],"isBlockCoverage":false},{"functionName":"len","ranges":[{"startOffset":280,"endOffset":345,"count":0}],"isBlockCoverage":false},{"functionName":"isUrl","ranges":[{"startOffset":349,"endOffset":393,"count":0}],"isBlockCoverage":false},{"functionName":"isIPv6","ranges":[{"startOffset":397,"endOffset":444,"count":0}],"isBlockCoverage":false},{"functionName":"isIPv4","ranges":[{"startOffset":448,"endOffset":495,"count":0}],"isBlockCoverage":false},{"functionName":"notIn","ranges":[{"startOffset":499,"endOffset":559,"count":0}],"isBlockCoverage":false},{"functionName":"regex","ranges":[{"startOffset":563,"endOffset":776,"count":0}],"isBlockCoverage":false},{"functionName":"notRegex","ranges":[{"startOffset":780,"endOffset":868,"count":0}],"isBlockCoverage":false},{"functionName":"isDecimal","ranges":[{"startOffset":872,"endOffset":990,"count":0}],"isBlockCoverage":false},{"functionName":"min","ranges":[{"startOffset":994,"endOffset":1092,"count":0}],"isBlockCoverage":false},{"functionName":"max","ranges":[{"startOffset":1096,"endOffset":1194,"count":0}],"isBlockCoverage":false},{"functionName":"not","ranges":[{"startOffset":1198,"endOffset":1283,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":1287,"endOffset":1353,"count":0}],"isBlockCoverage":false},{"functionName":"notContains","ranges":[{"startOffset":1357,"endOffset":1423,"count":0}],"isBlockCoverage":false},{"functionName":"is","ranges":[{"startOffset":1427,"endOffset":1508,"count":0}],"isBlockCoverage":false},{"functionName":"validator.isImmutable","ranges":[{"startOffset":1569,"endOffset":1741,"count":0}],"isBlockCoverage":false},{"functionName":"validator.notNull","ranges":[{"startOffset":1763,"endOffset":1821,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1845,"endOffset":1892,"count":16}],"isBlockCoverage":true},{"functionName":"validator.isDate","ranges":[{"startOffset":1952,"endOffset":2142,"count":0}],"isBlockCoverage":false}]},{"scriptId":"531","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11807,"count":1}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":15,"endOffset":333,"count":0}],"isBlockCoverage":false},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":7181,"endOffset":7409,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":7410,"endOffset":7991,"count":6},{"startOffset":7489,"endOffset":7556,"count":0},{"startOffset":7558,"endOffset":7635,"count":0},{"startOffset":7637,"endOffset":7743,"count":0},{"startOffset":7762,"endOffset":7985,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":7992,"endOffset":8087,"count":92},{"startOffset":8060,"endOffset":8065,"count":5},{"startOffset":8066,"endOffset":8084,"count":87}],"isBlockCoverage":true}]},{"scriptId":"532","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/toDate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":489,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":182,"endOffset":277,"count":1},{"startOffset":250,"endOffset":255,"count":0}],"isBlockCoverage":true},{"functionName":"toDate","ranges":[{"startOffset":278,"endOffset":413,"count":0}],"isBlockCoverage":false}]},{"scriptId":"533","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/util/assertString.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":871,"count":1}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":112,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"assertString","ranges":[{"startOffset":431,"endOffset":795,"count":0}],"isBlockCoverage":false}]},{"scriptId":"534","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/toFloat.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":438,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":168,"endOffset":263,"count":1},{"startOffset":242,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"toFloat","ranges":[{"startOffset":264,"endOffset":362,"count":0}],"isBlockCoverage":false}]},{"scriptId":"535","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isFloat.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1065,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":242,"endOffset":337,"count":1},{"startOffset":310,"endOffset":315,"count":0}],"isBlockCoverage":true},{"functionName":"isFloat","ranges":[{"startOffset":338,"endOffset":1004,"count":0}],"isBlockCoverage":false}]},{"scriptId":"536","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/alpha.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5804,"count":1},{"startOffset":3694,"endOffset":3861,"count":7},{"startOffset":4115,"endOffset":4268,"count":17},{"startOffset":4387,"endOffset":4514,"count":2},{"startOffset":4639,"endOffset":4804,"count":2},{"startOffset":5294,"endOffset":5344,"count":3},{"startOffset":5397,"endOffset":5436,"count":30}],"isBlockCoverage":true}]},{"scriptId":"537","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/toInt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":455,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":181,"endOffset":276,"count":1},{"startOffset":249,"endOffset":254,"count":0}],"isBlockCoverage":true},{"functionName":"toInt","ranges":[{"startOffset":277,"endOffset":379,"count":0}],"isBlockCoverage":false}]},{"scriptId":"538","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/toBoolean.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":555,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":185,"endOffset":280,"count":1},{"startOffset":253,"endOffset":258,"count":0}],"isBlockCoverage":true},{"functionName":"toBoolean","ranges":[{"startOffset":281,"endOffset":479,"count":0}],"isBlockCoverage":false}]},{"scriptId":"539","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/equals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":454,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":182,"endOffset":277,"count":1},{"startOffset":250,"endOffset":255,"count":0}],"isBlockCoverage":true},{"functionName":"equals","ranges":[{"startOffset":278,"endOffset":378,"count":0}],"isBlockCoverage":false}]},{"scriptId":"540","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/contains.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":927,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":314,"endOffset":409,"count":3},{"startOffset":382,"endOffset":387,"count":0}],"isBlockCoverage":true},{"functionName":"contains","ranges":[{"startOffset":484,"endOffset":851,"count":0}],"isBlockCoverage":false}]},{"scriptId":"541","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/util/toString.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":858,"count":1}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":108,"endOffset":426,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":427,"endOffset":782,"count":0}],"isBlockCoverage":false}]},{"scriptId":"542","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/util/merge.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":480,"count":1}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":105,"endOffset":404,"count":0}],"isBlockCoverage":false}]},{"scriptId":"543","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/matches.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":587,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":183,"endOffset":278,"count":1},{"startOffset":251,"endOffset":256,"count":0}],"isBlockCoverage":true},{"functionName":"matches","ranges":[{"startOffset":279,"endOffset":511,"count":0}],"isBlockCoverage":false}]},{"scriptId":"544","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isEmail.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6399,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":430,"endOffset":525,"count":5},{"startOffset":498,"endOffset":503,"count":0}],"isBlockCoverage":true},{"functionName":"validateDisplayName","ranges":[{"startOffset":1686,"endOffset":2574,"count":0}],"isBlockCoverage":false},{"functionName":"isEmail","ranges":[{"startOffset":2575,"endOffset":6323,"count":0}],"isBlockCoverage":false}]},{"scriptId":"545","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isByteLength.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1152,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":188,"endOffset":283,"count":1},{"startOffset":256,"endOffset":261,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":284,"endOffset":602,"count":0}],"isBlockCoverage":false},{"functionName":"isByteLength","ranges":[{"startOffset":643,"endOffset":1076,"count":0}],"isBlockCoverage":false}]},{"scriptId":"546","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isFQDN.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2132,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":244,"endOffset":339,"count":2},{"startOffset":312,"endOffset":317,"count":0}],"isBlockCoverage":true},{"functionName":"isFQDN","ranges":[{"startOffset":530,"endOffset":2056,"count":0}],"isBlockCoverage":false}]},{"scriptId":"547","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isIP.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3005,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":180,"endOffset":275,"count":1},{"startOffset":248,"endOffset":253,"count":0}],"isBlockCoverage":true},{"functionName":"isIP","ranges":[{"startOffset":2538,"endOffset":2929,"count":0}],"isBlockCoverage":false}]},{"scriptId":"548","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isURL.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6254,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":357,"endOffset":452,"count":4},{"startOffset":425,"endOffset":430,"count":0}],"isBlockCoverage":true},{"functionName":"_slicedToArray","ranges":[{"startOffset":453,"endOffset":611,"count":0}],"isBlockCoverage":false},{"functionName":"_nonIterableRest","ranges":[{"startOffset":612,"endOffset":805,"count":0}],"isBlockCoverage":false},{"functionName":"_unsupportedIterableToArray","ranges":[{"startOffset":806,"endOffset":1222,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayLikeToArray","ranges":[{"startOffset":1223,"endOffset":1402,"count":0}],"isBlockCoverage":false},{"functionName":"_iterableToArrayLimit","ranges":[{"startOffset":1403,"endOffset":1935,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayWithHoles","ranges":[{"startOffset":1936,"endOffset":2005,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":3059,"endOffset":3153,"count":0}],"isBlockCoverage":false},{"functionName":"checkHost","ranges":[{"startOffset":3154,"endOffset":3374,"count":0}],"isBlockCoverage":false},{"functionName":"isURL","ranges":[{"startOffset":3375,"endOffset":6178,"count":0}],"isBlockCoverage":false}]},{"scriptId":"549","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isMACAddress.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1838,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":188,"endOffset":283,"count":1},{"startOffset":256,"endOffset":261,"count":0}],"isBlockCoverage":true},{"functionName":"isMACAddress","ranges":[{"startOffset":708,"endOffset":1762,"count":0}],"isBlockCoverage":false}]},{"scriptId":"550","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isIPRange.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1415,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":240,"endOffset":335,"count":2},{"startOffset":308,"endOffset":313,"count":0}],"isBlockCoverage":true},{"functionName":"isIPRange","ranges":[{"startOffset":406,"endOffset":1339,"count":0}],"isBlockCoverage":false}]},{"scriptId":"551","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isDate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5746,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":168,"endOffset":263,"count":1},{"startOffset":236,"endOffset":241,"count":0}],"isBlockCoverage":true},{"functionName":"_slicedToArray","ranges":[{"startOffset":264,"endOffset":422,"count":0}],"isBlockCoverage":false},{"functionName":"_nonIterableRest","ranges":[{"startOffset":423,"endOffset":616,"count":0}],"isBlockCoverage":false},{"functionName":"_iterableToArrayLimit","ranges":[{"startOffset":617,"endOffset":1149,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayWithHoles","ranges":[{"startOffset":1150,"endOffset":1219,"count":0}],"isBlockCoverage":false},{"functionName":"_createForOfIteratorHelper","ranges":[{"startOffset":1220,"endOffset":2218,"count":0}],"isBlockCoverage":false},{"functionName":"_unsupportedIterableToArray","ranges":[{"startOffset":2219,"endOffset":2635,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayLikeToArray","ranges":[{"startOffset":2636,"endOffset":2815,"count":0}],"isBlockCoverage":false},{"functionName":"isValidFormat","ranges":[{"startOffset":2918,"endOffset":3115,"count":0}],"isBlockCoverage":false},{"functionName":"zip","ranges":[{"startOffset":3116,"endOffset":3316,"count":0}],"isBlockCoverage":false},{"functionName":"isDate","ranges":[{"startOffset":3317,"endOffset":5670,"count":0}],"isBlockCoverage":false}]},{"scriptId":"552","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isTime.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":920,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":168,"endOffset":263,"count":1},{"startOffset":236,"endOffset":241,"count":0}],"isBlockCoverage":true},{"functionName":"isTime","ranges":[{"startOffset":634,"endOffset":844,"count":0}],"isBlockCoverage":false}]},{"scriptId":"553","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isBoolean.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":792,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":185,"endOffset":280,"count":1},{"startOffset":253,"endOffset":258,"count":0}],"isBlockCoverage":true},{"functionName":"isBoolean","ranges":[{"startOffset":434,"endOffset":716,"count":0}],"isBlockCoverage":false}]},{"scriptId":"554","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isLocale.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3799,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":184,"endOffset":279,"count":1},{"startOffset":252,"endOffset":257,"count":0}],"isBlockCoverage":true},{"functionName":"isLocale","ranges":[{"startOffset":3625,"endOffset":3723,"count":0}],"isBlockCoverage":false}]},{"scriptId":"555","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isAbaRouting.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":993,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":188,"endOffset":283,"count":1},{"startOffset":256,"endOffset":261,"count":0}],"isBlockCoverage":true},{"functionName":"isAbaRouting","ranges":[{"startOffset":579,"endOffset":917,"count":0}],"isBlockCoverage":false}]},{"scriptId":"556","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isAlpha.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1200,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":242,"endOffset":337,"count":1},{"startOffset":310,"endOffset":315,"count":0}],"isBlockCoverage":true},{"functionName":"isAlpha","ranges":[{"startOffset":338,"endOffset":1141,"count":0}],"isBlockCoverage":false}]},{"scriptId":"557","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isAlphanumeric.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1235,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":249,"endOffset":344,"count":1},{"startOffset":317,"endOffset":322,"count":0}],"isBlockCoverage":true},{"functionName":"isAlphanumeric","ranges":[{"startOffset":345,"endOffset":1169,"count":0}],"isBlockCoverage":false}]},{"scriptId":"558","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isNumeric.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":711,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":218,"endOffset":313,"count":1},{"startOffset":286,"endOffset":291,"count":0}],"isBlockCoverage":true},{"functionName":"isNumeric","ranges":[{"startOffset":349,"endOffset":635,"count":0}],"isBlockCoverage":false}]},{"scriptId":"559","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isPassportNumber.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3764,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":192,"endOffset":287,"count":1},{"startOffset":260,"endOffset":265,"count":0}],"isBlockCoverage":true},{"functionName":"isPassportNumber","ranges":[{"startOffset":3363,"endOffset":3688,"count":0}],"isBlockCoverage":false}]},{"scriptId":"560","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isPort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":461,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":163,"endOffset":258,"count":1},{"startOffset":231,"endOffset":236,"count":0}],"isBlockCoverage":true},{"functionName":"isPort","ranges":[{"startOffset":259,"endOffset":385,"count":0}],"isBlockCoverage":false}]},{"scriptId":"561","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isInt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1127,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":181,"endOffset":276,"count":1},{"startOffset":249,"endOffset":254,"count":0}],"isBlockCoverage":true},{"functionName":"isInt","ranges":[{"startOffset":359,"endOffset":1051,"count":0}],"isBlockCoverage":false}]},{"scriptId":"562","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isLowercase.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":459,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":187,"endOffset":282,"count":1},{"startOffset":255,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"isLowercase","ranges":[{"startOffset":283,"endOffset":383,"count":0}],"isBlockCoverage":false}]},{"scriptId":"563","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isUppercase.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":459,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":187,"endOffset":282,"count":1},{"startOffset":255,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"isUppercase","ranges":[{"startOffset":283,"endOffset":383,"count":0}],"isBlockCoverage":false}]},{"scriptId":"564","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isIMEI.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1254,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":182,"endOffset":277,"count":1},{"startOffset":250,"endOffset":255,"count":0}],"isBlockCoverage":true},{"functionName":"isIMEI","ranges":[{"startOffset":377,"endOffset":1178,"count":0}],"isBlockCoverage":false}]},{"scriptId":"565","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isAscii.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":547,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":183,"endOffset":278,"count":1},{"startOffset":251,"endOffset":256,"count":0}],"isBlockCoverage":true},{"functionName":"isAscii","ranges":[{"startOffset":385,"endOffset":471,"count":0}],"isBlockCoverage":false}]},{"scriptId":"566","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isFullWidth.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":509,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":215,"endOffset":310,"count":1},{"startOffset":283,"endOffset":288,"count":0}],"isBlockCoverage":true},{"functionName":"isFullWidth","ranges":[{"startOffset":415,"endOffset":509,"count":0}],"isBlockCoverage":false}]},{"scriptId":"567","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isHalfWidth.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":508,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":215,"endOffset":310,"count":1},{"startOffset":283,"endOffset":288,"count":0}],"isBlockCoverage":true},{"functionName":"isHalfWidth","ranges":[{"startOffset":414,"endOffset":508,"count":0}],"isBlockCoverage":false}]},{"scriptId":"568","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isVariableWidth.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":600,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":281,"endOffset":376,"count":1},{"startOffset":349,"endOffset":354,"count":0}],"isBlockCoverage":true},{"functionName":"isVariableWidth","ranges":[{"startOffset":377,"endOffset":524,"count":0}],"isBlockCoverage":false}]},{"scriptId":"569","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isMultibyte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":561,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":187,"endOffset":282,"count":1},{"startOffset":255,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"isMultibyte","ranges":[{"startOffset":391,"endOffset":485,"count":0}],"isBlockCoverage":false}]},{"scriptId":"570","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isSemVer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":943,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":264,"endOffset":359,"count":2},{"startOffset":332,"endOffset":337,"count":0}],"isBlockCoverage":true},{"functionName":"isSemVer","ranges":[{"startOffset":762,"endOffset":867,"count":0}],"isBlockCoverage":false}]},{"scriptId":"571","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/util/multilineRegex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":505,"count":1}],"isBlockCoverage":true},{"functionName":"multilineRegexp","ranges":[{"startOffset":290,"endOffset":429,"count":1}],"isBlockCoverage":true}]},{"scriptId":"572","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isSurrogatePair.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":519,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":191,"endOffset":286,"count":1},{"startOffset":259,"endOffset":264,"count":0}],"isBlockCoverage":true},{"functionName":"isSurrogatePair","ranges":[{"startOffset":341,"endOffset":443,"count":0}],"isBlockCoverage":false}]},{"scriptId":"573","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isDecimal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1244,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":348,"endOffset":443,"count":3},{"startOffset":416,"endOffset":421,"count":0}],"isBlockCoverage":true},{"functionName":"decimalRegExp","ranges":[{"startOffset":444,"endOffset":677,"count":0}],"isBlockCoverage":false},{"functionName":"isDecimal","ranges":[{"startOffset":811,"endOffset":1168,"count":0}],"isBlockCoverage":false}]},{"scriptId":"574","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/util/includes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":343,"count":1}],"isBlockCoverage":true},{"functionName":"includes","ranges":[{"startOffset":121,"endOffset":223,"count":0}],"isBlockCoverage":false}]},{"scriptId":"575","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isHexadecimal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":501,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":189,"endOffset":284,"count":1},{"startOffset":257,"endOffset":262,"count":0}],"isBlockCoverage":true},{"functionName":"isHexadecimal","ranges":[{"startOffset":327,"endOffset":425,"count":0}],"isBlockCoverage":false}]},{"scriptId":"576","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isOctal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":471,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":183,"endOffset":278,"count":1},{"startOffset":251,"endOffset":256,"count":0}],"isBlockCoverage":true},{"functionName":"isOctal","ranges":[{"startOffset":309,"endOffset":395,"count":0}],"isBlockCoverage":false}]},{"scriptId":"577","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isDivisibleBy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":556,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":250,"endOffset":345,"count":2},{"startOffset":318,"endOffset":323,"count":0}],"isBlockCoverage":true},{"functionName":"isDivisibleBy","ranges":[{"startOffset":346,"endOffset":480,"count":0}],"isBlockCoverage":false}]},{"scriptId":"578","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isHexColor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":523,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":186,"endOffset":281,"count":1},{"startOffset":254,"endOffset":259,"count":0}],"isBlockCoverage":true},{"functionName":"isHexColor","ranges":[{"startOffset":355,"endOffset":447,"count":0}],"isBlockCoverage":false}]},{"scriptId":"579","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isRgbColor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1151,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":186,"endOffset":281,"count":1},{"startOffset":254,"endOffset":259,"count":0}],"isBlockCoverage":true},{"functionName":"isRgbColor","ranges":[{"startOffset":709,"endOffset":1075,"count":0}],"isBlockCoverage":false}]},{"scriptId":"580","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isHSL.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1288,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":181,"endOffset":276,"count":1},{"startOffset":249,"endOffset":254,"count":0}],"isBlockCoverage":true},{"functionName":"isHSL","ranges":[{"startOffset":855,"endOffset":1212,"count":0}],"isBlockCoverage":false}]},{"scriptId":"581","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isISRC.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":541,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":182,"endOffset":277,"count":1},{"startOffset":250,"endOffset":255,"count":0}],"isBlockCoverage":true},{"functionName":"isISRC","ranges":[{"startOffset":381,"endOffset":465,"count":0}],"isBlockCoverage":false}]},{"scriptId":"582","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isIBAN.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6717,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":208,"endOffset":303,"count":1},{"startOffset":276,"endOffset":281,"count":0}],"isBlockCoverage":true},{"functionName":"hasOnlyValidCountryCodes","ranges":[{"startOffset":3629,"endOffset":3948,"count":0}],"isBlockCoverage":false},{"functionName":"hasValidIbanFormat","ranges":[{"startOffset":4501,"endOffset":5343,"count":0}],"isBlockCoverage":false},{"functionName":"hasValidIbanChecksum","ranges":[{"startOffset":5913,"endOffset":6423,"count":0}],"isBlockCoverage":false},{"functionName":"isIBAN","ranges":[{"startOffset":6424,"endOffset":6643,"count":0}],"isBlockCoverage":false}]},{"scriptId":"583","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isBIC.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":878,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":235,"endOffset":330,"count":1},{"startOffset":303,"endOffset":308,"count":0}],"isBlockCoverage":true},{"functionName":"isBIC","ranges":[{"startOffset":436,"endOffset":802,"count":0}],"isBlockCoverage":false}]},{"scriptId":"584","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isISO31661Alpha2.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2134,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":223,"endOffset":318,"count":1},{"startOffset":291,"endOffset":296,"count":0}],"isBlockCoverage":true},{"functionName":"isISO31661Alpha2","ranges":[{"startOffset":1921,"endOffset":2057,"count":0}],"isBlockCoverage":false}]},{"scriptId":"585","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isMD5.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":463,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":181,"endOffset":276,"count":1},{"startOffset":249,"endOffset":254,"count":0}],"isBlockCoverage":true},{"functionName":"isMD5","ranges":[{"startOffset":305,"endOffset":387,"count":0}],"isBlockCoverage":false}]},{"scriptId":"586","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isHash.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":726,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":182,"endOffset":277,"count":1},{"startOffset":250,"endOffset":255,"count":0}],"isBlockCoverage":true},{"functionName":"isHash","ranges":[{"startOffset":480,"endOffset":650,"count":0}],"isBlockCoverage":false}]},{"scriptId":"587","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isJWT.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":718,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":242,"endOffset":337,"count":2},{"startOffset":310,"endOffset":315,"count":0}],"isBlockCoverage":true},{"functionName":"isJWT","ranges":[{"startOffset":338,"endOffset":642,"count":0}],"isBlockCoverage":false}]},{"scriptId":"588","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isBase64.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":996,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":246,"endOffset":341,"count":2},{"startOffset":314,"endOffset":319,"count":0}],"isBlockCoverage":true},{"functionName":"isBase64","ranges":[{"startOffset":464,"endOffset":920,"count":0}],"isBlockCoverage":false}]},{"scriptId":"589","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isJSON.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1193,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":244,"endOffset":339,"count":2},{"startOffset":312,"endOffset":317,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":340,"endOffset":658,"count":0}],"isBlockCoverage":false},{"functionName":"isJSON","ranges":[{"startOffset":717,"endOffset":1117,"count":0}],"isBlockCoverage":false}]},{"scriptId":"590","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isEmpty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":694,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":245,"endOffset":340,"count":2},{"startOffset":313,"endOffset":318,"count":0}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":404,"endOffset":618,"count":0}],"isBlockCoverage":false}]},{"scriptId":"591","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isLength.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1312,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":184,"endOffset":279,"count":1},{"startOffset":252,"endOffset":257,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":280,"endOffset":598,"count":0}],"isBlockCoverage":false},{"functionName":"isLength","ranges":[{"startOffset":639,"endOffset":1236,"count":0}],"isBlockCoverage":false}]},{"scriptId":"592","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isUUID.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1086,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":182,"endOffset":277,"count":1},{"startOffset":250,"endOffset":255,"count":0}],"isBlockCoverage":true},{"functionName":"isUUID","ranges":[{"startOffset":823,"endOffset":1010,"count":0}],"isBlockCoverage":false}]},{"scriptId":"593","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isMongoId.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":556,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":258,"endOffset":353,"count":2},{"startOffset":326,"endOffset":331,"count":0}],"isBlockCoverage":true},{"functionName":"isMongoId","ranges":[{"startOffset":354,"endOffset":480,"count":0}],"isBlockCoverage":false}]},{"scriptId":"594","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isAfter.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":793,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":166,"endOffset":261,"count":1},{"startOffset":234,"endOffset":239,"count":0}],"isBlockCoverage":true},{"functionName":"isAfter","ranges":[{"startOffset":262,"endOffset":717,"count":0}],"isBlockCoverage":false}]},{"scriptId":"595","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isBefore.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":730,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":243,"endOffset":338,"count":2},{"startOffset":311,"endOffset":316,"count":0}],"isBlockCoverage":true},{"functionName":"isBefore","ranges":[{"startOffset":339,"endOffset":654,"count":0}],"isBlockCoverage":false}]},{"scriptId":"596","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1447,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":248,"endOffset":343,"count":2},{"startOffset":316,"endOffset":321,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":344,"endOffset":662,"count":0}],"isBlockCoverage":false},{"functionName":"isIn","ranges":[{"startOffset":663,"endOffset":1371,"count":0}],"isBlockCoverage":false}]},{"scriptId":"597","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isLuhnNumber.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":935,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":188,"endOffset":283,"count":1},{"startOffset":256,"endOffset":261,"count":0}],"isBlockCoverage":true},{"functionName":"isLuhnNumber","ranges":[{"startOffset":284,"endOffset":859,"count":0}],"isBlockCoverage":false}]},{"scriptId":"598","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isCreditCard.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1885,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":259,"endOffset":354,"count":2},{"startOffset":327,"endOffset":332,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":777,"endOffset":1009,"count":1},{"startOffset":851,"endOffset":983,"count":7}],"isBlockCoverage":true},{"functionName":"isCreditCard","ranges":[{"startOffset":1013,"endOffset":1809,"count":0}],"isBlockCoverage":false}]},{"scriptId":"599","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isIdentityCard.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12535,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":247,"endOffset":342,"count":2},{"startOffset":315,"endOffset":320,"count":0}],"isBlockCoverage":true},{"functionName":"PL","ranges":[{"startOffset":368,"endOffset":1107,"count":0}],"isBlockCoverage":false},{"functionName":"ES","ranges":[{"startOffset":1115,"endOffset":1820,"count":0}],"isBlockCoverage":false},{"functionName":"FI","ranges":[{"startOffset":1828,"endOffset":2444,"count":0}],"isBlockCoverage":false},{"functionName":"IN","ranges":[{"startOffset":2452,"endOffset":3539,"count":0}],"isBlockCoverage":false},{"functionName":"IR","ranges":[{"startOffset":3547,"endOffset":3991,"count":0}],"isBlockCoverage":false},{"functionName":"IT","ranges":[{"startOffset":3999,"endOffset":4234,"count":0}],"isBlockCoverage":false},{"functionName":"NO","ranges":[{"startOffset":4242,"endOffset":4881,"count":0}],"isBlockCoverage":false},{"functionName":"TH","ranges":[{"startOffset":4889,"endOffset":5153,"count":0}],"isBlockCoverage":false},{"functionName":"LK","ranges":[{"startOffset":5161,"endOffset":5398,"count":0}],"isBlockCoverage":false},{"functionName":"heIL","ranges":[{"startOffset":5411,"endOffset":5902,"count":0}],"isBlockCoverage":false},{"functionName":"arLY","ranges":[{"startOffset":5915,"endOffset":6230,"count":0}],"isBlockCoverage":false},{"functionName":"arTN","ranges":[{"startOffset":6243,"endOffset":6463,"count":0}],"isBlockCoverage":false},{"functionName":"zhCN","ranges":[{"startOffset":6476,"endOffset":9863,"count":0}],"isBlockCoverage":false},{"functionName":"zhHK","ranges":[{"startOffset":9876,"endOffset":10981,"count":0}],"isBlockCoverage":false},{"functionName":"zhTW","ranges":[{"startOffset":10994,"endOffset":11848,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentityCard","ranges":[{"startOffset":11852,"endOffset":12459,"count":0}],"isBlockCoverage":false}]},{"scriptId":"600","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isEAN.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2454,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":181,"endOffset":276,"count":1},{"startOffset":249,"endOffset":254,"count":0}],"isBlockCoverage":true},{"functionName":"getPositionWeightThroughLengthAndIndex","ranges":[{"startOffset":1294,"endOffset":1495,"count":0}],"isBlockCoverage":false},{"functionName":"calculateCheckDigit","ranges":[{"startOffset":1683,"endOffset":2036,"count":0}],"isBlockCoverage":false},{"functionName":"isEAN","ranges":[{"startOffset":2189,"endOffset":2378,"count":0}],"isBlockCoverage":false}]},{"scriptId":"601","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isISIN.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1882,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":182,"endOffset":277,"count":1},{"startOffset":250,"endOffset":255,"count":0}],"isBlockCoverage":true},{"functionName":"isISIN","ranges":[{"startOffset":622,"endOffset":1806,"count":0}],"isBlockCoverage":false}]},{"scriptId":"602","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isISBN.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1742,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":182,"endOffset":277,"count":1},{"startOffset":250,"endOffset":255,"count":0}],"isBlockCoverage":true},{"functionName":"isISBN","ranges":[{"startOffset":389,"endOffset":1666,"count":0}],"isBlockCoverage":false}]},{"scriptId":"603","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isISSN.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1009,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":182,"endOffset":277,"count":1},{"startOffset":250,"endOffset":255,"count":0}],"isBlockCoverage":true},{"functionName":"isISSN","ranges":[{"startOffset":315,"endOffset":933,"count":0}],"isBlockCoverage":false}]},{"scriptId":"604","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isTaxID.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":43370,"count":1}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":15,"endOffset":333,"count":0}],"isBlockCoverage":false},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":633,"endOffset":861,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":862,"endOffset":1443,"count":1},{"startOffset":941,"endOffset":1008,"count":0},{"startOffset":1010,"endOffset":1087,"count":0},{"startOffset":1089,"endOffset":1195,"count":0},{"startOffset":1214,"endOffset":1437,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1444,"endOffset":1539,"count":2},{"startOffset":1512,"endOffset":1517,"count":0}],"isBlockCoverage":true},{"functionName":"_toConsumableArray","ranges":[{"startOffset":1540,"endOffset":1693,"count":0}],"isBlockCoverage":false},{"functionName":"_nonIterableSpread","ranges":[{"startOffset":1694,"endOffset":1884,"count":0}],"isBlockCoverage":false},{"functionName":"_unsupportedIterableToArray","ranges":[{"startOffset":1885,"endOffset":2301,"count":0}],"isBlockCoverage":false},{"functionName":"_iterableToArray","ranges":[{"startOffset":2302,"endOffset":2460,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayWithoutHoles","ranges":[{"startOffset":2461,"endOffset":2552,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayLikeToArray","ranges":[{"startOffset":2553,"endOffset":2732,"count":0}],"isBlockCoverage":false},{"functionName":"bgBgCheck","ranges":[{"startOffset":3723,"endOffset":4815,"count":0}],"isBlockCoverage":false},{"functionName":"isCanadianSIN","ranges":[{"startOffset":5296,"endOffset":5737,"count":0}],"isBlockCoverage":false},{"functionName":"csCzCheck","ranges":[{"startOffset":6081,"endOffset":7846,"count":0}],"isBlockCoverage":false},{"functionName":"deAtCheck","ranges":[{"startOffset":7972,"endOffset":8035,"count":0}],"isBlockCoverage":false},{"functionName":"deDeCheck","ranges":[{"startOffset":8303,"endOffset":9527,"count":0}],"isBlockCoverage":false},{"functionName":"dkDkCheck","ranges":[{"startOffset":9740,"endOffset":11238,"count":0}],"isBlockCoverage":false},{"functionName":"elCyCheck","ranges":[{"startOffset":11410,"endOffset":12057,"count":0}],"isBlockCoverage":false},{"functionName":"elGrCheck","ranges":[{"startOffset":12675,"endOffset":12986,"count":0}],"isBlockCoverage":false},{"functionName":"enIeCheck","ranges":[{"startOffset":13325,"endOffset":13739,"count":0}],"isBlockCoverage":false},{"functionName":"enUsGetPrefixes","ranges":[{"startOffset":14513,"endOffset":14926,"count":0}],"isBlockCoverage":false},{"functionName":"enUsCheck","ranges":[{"startOffset":15025,"endOffset":15112,"count":0}],"isBlockCoverage":false},{"functionName":"esArCheck","ranges":[{"startOffset":15430,"endOffset":15778,"count":0}],"isBlockCoverage":false},{"functionName":"esEsCheck","ranges":[{"startOffset":15985,"endOffset":16865,"count":0}],"isBlockCoverage":false},{"functionName":"etEeCheck","ranges":[{"startOffset":17217,"endOffset":18549,"count":0}],"isBlockCoverage":false},{"functionName":"fiFiCheck","ranges":[{"startOffset":18736,"endOffset":19686,"count":0}],"isBlockCoverage":false},{"functionName":"frBeCheck","ranges":[{"startOffset":19860,"endOffset":20513,"count":0}],"isBlockCoverage":false},{"functionName":"frFrCheck","ranges":[{"startOffset":20674,"endOffset":20876,"count":0}],"isBlockCoverage":false},{"functionName":"frLuCheck","ranges":[{"startOffset":21035,"endOffset":21495,"count":0}],"isBlockCoverage":false},{"functionName":"hrHrCheck","ranges":[{"startOffset":21646,"endOffset":21712,"count":0}],"isBlockCoverage":false},{"functionName":"huHuCheck","ranges":[{"startOffset":21843,"endOffset":22138,"count":0}],"isBlockCoverage":false},{"functionName":"itItNameCheck","ranges":[{"startOffset":22796,"endOffset":23470,"count":0}],"isBlockCoverage":false},{"functionName":"itItCheck","ranges":[{"startOffset":23748,"endOffset":26310,"count":0}],"isBlockCoverage":false},{"functionName":"lvLvCheck","ranges":[{"startOffset":26693,"endOffset":27785,"count":0}],"isBlockCoverage":false},{"functionName":"mtMtCheck","ranges":[{"startOffset":27960,"endOffset":28742,"count":0}],"isBlockCoverage":false},{"functionName":"nlNlCheck","ranges":[{"startOffset":28988,"endOffset":29170,"count":0}],"isBlockCoverage":false},{"functionName":"plPlCheck","ranges":[{"startOffset":29424,"endOffset":31075,"count":0}],"isBlockCoverage":false},{"functionName":"ptBrCheck","ranges":[{"startOffset":31248,"endOffset":33345,"count":0}],"isBlockCoverage":false},{"functionName":"ptPtCheck","ranges":[{"startOffset":33520,"endOffset":33799,"count":0}],"isBlockCoverage":false},{"functionName":"roRoCheck","ranges":[{"startOffset":34130,"endOffset":35393,"count":0}],"isBlockCoverage":false},{"functionName":"skSkCheck","ranges":[{"startOffset":35733,"endOffset":36611,"count":0}],"isBlockCoverage":false},{"functionName":"slSiCheck","ranges":[{"startOffset":36765,"endOffset":37047,"count":0}],"isBlockCoverage":false},{"functionName":"svSeCheck","ranges":[{"startOffset":37224,"endOffset":38885,"count":0}],"isBlockCoverage":false},{"functionName":"ukUaCheck","ranges":[{"startOffset":39001,"endOffset":39384,"count":0}],"isBlockCoverage":false},{"functionName":"isTaxID","ranges":[{"startOffset":42636,"endOffset":43294,"count":0}],"isBlockCoverage":false}]},{"scriptId":"605","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/util/algorithms.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3067,"count":1}],"isBlockCoverage":true},{"functionName":"iso7064Check","ranges":[{"startOffset":505,"endOffset":840,"count":0}],"isBlockCoverage":false},{"functionName":"luhnCheck","ranges":[{"startOffset":989,"endOffset":1590,"count":0}],"isBlockCoverage":false},{"functionName":"reverseMultiplyAndSum","ranges":[{"startOffset":1852,"endOffset":2018,"count":0}],"isBlockCoverage":false},{"functionName":"verhoeffCheck","ranges":[{"startOffset":2153,"endOffset":3067,"count":0}],"isBlockCoverage":false}]},{"scriptId":"606","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isMobilePhone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9244,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":215,"endOffset":310,"count":1},{"startOffset":283,"endOffset":288,"count":0}],"isBlockCoverage":true},{"functionName":"isMobilePhone","ranges":[{"startOffset":8181,"endOffset":9191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"607","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isEthereumAddress.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":492,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":193,"endOffset":288,"count":1},{"startOffset":261,"endOffset":266,"count":0}],"isBlockCoverage":true},{"functionName":"isEthereumAddress","ranges":[{"startOffset":322,"endOffset":416,"count":0}],"isBlockCoverage":false}]},{"scriptId":"608","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isCurrency.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3387,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":248,"endOffset":343,"count":2},{"startOffset":316,"endOffset":321,"count":0}],"isBlockCoverage":true},{"functionName":"currencyRegex","ranges":[{"startOffset":344,"endOffset":2647,"count":0}],"isBlockCoverage":false},{"functionName":"isCurrency","ranges":[{"startOffset":3128,"endOffset":3311,"count":0}],"isBlockCoverage":false}]},{"scriptId":"609","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isBtcAddress.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":562,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":188,"endOffset":283,"count":1},{"startOffset":256,"endOffset":261,"count":0}],"isBlockCoverage":true},{"functionName":"isBtcAddress","ranges":[{"startOffset":374,"endOffset":486,"count":0}],"isBlockCoverage":false}]},{"scriptId":"610","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isISO6346.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1480,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":226,"endOffset":321,"count":1},{"startOffset":294,"endOffset":299,"count":0}],"isBlockCoverage":true},{"functionName":"isISO6346","ranges":[{"startOffset":590,"endOffset":1411,"count":0}],"isBlockCoverage":false}]},{"scriptId":"611","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isISO6391.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1591,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":185,"endOffset":280,"count":1},{"startOffset":253,"endOffset":258,"count":0}],"isBlockCoverage":true},{"functionName":"isISO6391","ranges":[{"startOffset":1421,"endOffset":1515,"count":0}],"isBlockCoverage":false}]},{"scriptId":"612","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isISO8601.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2489,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":185,"endOffset":280,"count":1},{"startOffset":253,"endOffset":258,"count":0}],"isBlockCoverage":true},{"functionName":"isValidDate","ranges":[{"startOffset":1073,"endOffset":2095,"count":0}],"isBlockCoverage":false},{"functionName":"isISO8601","ranges":[{"startOffset":2097,"endOffset":2413,"count":0}],"isBlockCoverage":false}]},{"scriptId":"613","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isRFC3339.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1364,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":185,"endOffset":280,"count":1},{"startOffset":253,"endOffset":258,"count":0}],"isBlockCoverage":true},{"functionName":"isRFC3339","ranges":[{"startOffset":1198,"endOffset":1288,"count":0}],"isBlockCoverage":false}]},{"scriptId":"614","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isISO31661Alpha3.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2351,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":192,"endOffset":287,"count":1},{"startOffset":260,"endOffset":265,"count":0}],"isBlockCoverage":true},{"functionName":"isISO31661Alpha3","ranges":[{"startOffset":2139,"endOffset":2275,"count":0}],"isBlockCoverage":false}]},{"scriptId":"615","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isISO4217.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1855,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":217,"endOffset":312,"count":1},{"startOffset":285,"endOffset":290,"count":0}],"isBlockCoverage":true},{"functionName":"isISO4217","ranges":[{"startOffset":1663,"endOffset":1784,"count":0}],"isBlockCoverage":false}]},{"scriptId":"616","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isBase32.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":853,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":246,"endOffset":341,"count":2},{"startOffset":314,"endOffset":319,"count":0}],"isBlockCoverage":true},{"functionName":"isBase32","ranges":[{"startOffset":470,"endOffset":777,"count":0}],"isBlockCoverage":false}]},{"scriptId":"617","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isBase58.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":608,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":184,"endOffset":279,"count":1},{"startOffset":252,"endOffset":257,"count":0}],"isBlockCoverage":true},{"functionName":"isBase58","ranges":[{"startOffset":405,"endOffset":532,"count":0}],"isBlockCoverage":false}]},{"scriptId":"618","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isDataURI.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1290,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":185,"endOffset":280,"count":1},{"startOffset":253,"endOffset":258,"count":0}],"isBlockCoverage":true},{"functionName":"isDataURI","ranges":[{"startOffset":444,"endOffset":1214,"count":0}],"isBlockCoverage":false}]},{"scriptId":"619","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isMagnetURI.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":714,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":187,"endOffset":282,"count":1},{"startOffset":255,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"isMagnetURI","ranges":[{"startOffset":474,"endOffset":638,"count":0}],"isBlockCoverage":false}]},{"scriptId":"620","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isMailtoURI.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4862,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":303,"endOffset":398,"count":3},{"startOffset":371,"endOffset":376,"count":0}],"isBlockCoverage":true},{"functionName":"_slicedToArray","ranges":[{"startOffset":399,"endOffset":557,"count":0}],"isBlockCoverage":false},{"functionName":"_nonIterableRest","ranges":[{"startOffset":558,"endOffset":751,"count":0}],"isBlockCoverage":false},{"functionName":"_iterableToArrayLimit","ranges":[{"startOffset":752,"endOffset":1284,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayWithHoles","ranges":[{"startOffset":1285,"endOffset":1354,"count":0}],"isBlockCoverage":false},{"functionName":"_createForOfIteratorHelper","ranges":[{"startOffset":1355,"endOffset":2353,"count":0}],"isBlockCoverage":false},{"functionName":"_unsupportedIterableToArray","ranges":[{"startOffset":2354,"endOffset":2770,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayLikeToArray","ranges":[{"startOffset":2771,"endOffset":2950,"count":0}],"isBlockCoverage":false},{"functionName":"parseMailtoQueryString","ranges":[{"startOffset":2951,"endOffset":3973,"count":0}],"isBlockCoverage":false},{"functionName":"isMailtoURI","ranges":[{"startOffset":3974,"endOffset":4786,"count":0}],"isBlockCoverage":false}]},{"scriptId":"621","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/trim.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":489,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":218,"endOffset":313,"count":2},{"startOffset":286,"endOffset":291,"count":0}],"isBlockCoverage":true},{"functionName":"trim","ranges":[{"startOffset":314,"endOffset":413,"count":0}],"isBlockCoverage":false}]},{"scriptId":"622","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/rtrim.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":928,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":181,"endOffset":276,"count":1},{"startOffset":249,"endOffset":254,"count":0}],"isBlockCoverage":true},{"functionName":"rtrim","ranges":[{"startOffset":277,"endOffset":852,"count":0}],"isBlockCoverage":false}]},{"scriptId":"623","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/ltrim.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":665,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":181,"endOffset":276,"count":1},{"startOffset":249,"endOffset":254,"count":0}],"isBlockCoverage":true},{"functionName":"ltrim","ranges":[{"startOffset":277,"endOffset":589,"count":0}],"isBlockCoverage":false}]},{"scriptId":"624","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isMimeType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2238,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":186,"endOffset":281,"count":1},{"startOffset":254,"endOffset":259,"count":0}],"isBlockCoverage":true},{"functionName":"isMimeType","ranges":[{"startOffset":2007,"endOffset":2162,"count":0}],"isBlockCoverage":false}]},{"scriptId":"625","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isLatLong.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1256,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":247,"endOffset":342,"count":2},{"startOffset":315,"endOffset":320,"count":0}],"isBlockCoverage":true},{"functionName":"isLatLong","ranges":[{"startOffset":713,"endOffset":1180,"count":0}],"isBlockCoverage":false}]},{"scriptId":"626","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isPostalCode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2811,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":214,"endOffset":309,"count":1},{"startOffset":282,"endOffset":287,"count":0}],"isBlockCoverage":true},{"functionName":"isPostalCode","ranges":[{"startOffset":2210,"endOffset":2811,"count":0}],"isBlockCoverage":false}]},{"scriptId":"627","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/escape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":615,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":182,"endOffset":277,"count":1},{"startOffset":250,"endOffset":255,"count":0}],"isBlockCoverage":true},{"functionName":"escape","ranges":[{"startOffset":278,"endOffset":539,"count":0}],"isBlockCoverage":false}]},{"scriptId":"628","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/unescape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":805,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":184,"endOffset":279,"count":1},{"startOffset":252,"endOffset":257,"count":0}],"isBlockCoverage":true},{"functionName":"unescape","ranges":[{"startOffset":280,"endOffset":729,"count":0}],"isBlockCoverage":false}]},{"scriptId":"629","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/stripLow.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":637,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":249,"endOffset":344,"count":2},{"startOffset":317,"endOffset":322,"count":0}],"isBlockCoverage":true},{"functionName":"stripLow","ranges":[{"startOffset":345,"endOffset":561,"count":0}],"isBlockCoverage":false}]},{"scriptId":"630","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/blacklist.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":494,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":185,"endOffset":280,"count":1},{"startOffset":253,"endOffset":258,"count":0}],"isBlockCoverage":true},{"functionName":"blacklist","ranges":[{"startOffset":281,"endOffset":418,"count":0}],"isBlockCoverage":false}]},{"scriptId":"631","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/whitelist.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":495,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":185,"endOffset":280,"count":1},{"startOffset":253,"endOffset":258,"count":0}],"isBlockCoverage":true},{"functionName":"whitelist","ranges":[{"startOffset":281,"endOffset":419,"count":0}],"isBlockCoverage":false}]},{"scriptId":"632","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isWhitelisted.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":565,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":189,"endOffset":284,"count":1},{"startOffset":257,"endOffset":262,"count":0}],"isBlockCoverage":true},{"functionName":"isWhitelisted","ranges":[{"startOffset":285,"endOffset":489,"count":0}],"isBlockCoverage":false}]},{"scriptId":"633","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/normalizeEmail.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6649,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":176,"endOffset":271,"count":1},{"startOffset":244,"endOffset":249,"count":0}],"isBlockCoverage":true},{"functionName":"dotsReplacer","ranges":[{"startOffset":4033,"endOffset":4126,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeEmail","ranges":[{"startOffset":4127,"endOffset":6573,"count":0}],"isBlockCoverage":false}]},{"scriptId":"634","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isSlug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":517,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":182,"endOffset":277,"count":1},{"startOffset":250,"endOffset":255,"count":0}],"isBlockCoverage":true},{"functionName":"isSlug","ranges":[{"startOffset":349,"endOffset":441,"count":0}],"isBlockCoverage":false}]},{"scriptId":"635","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isLicensePlate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5131,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":190,"endOffset":285,"count":1},{"startOffset":258,"endOffset":263,"count":0}],"isBlockCoverage":true},{"functionName":"csCZ","ranges":[{"startOffset":316,"endOffset":408,"count":0}],"isBlockCoverage":false},{"functionName":"deDE","ranges":[{"startOffset":421,"endOffset":3016,"count":0}],"isBlockCoverage":false},{"functionName":"deLI","ranges":[{"startOffset":3029,"endOffset":3099,"count":0}],"isBlockCoverage":false},{"functionName":"enIN","ranges":[{"startOffset":3112,"endOffset":3229,"count":0}],"isBlockCoverage":false},{"functionName":"esAR","ranges":[{"startOffset":3242,"endOffset":3346,"count":0}],"isBlockCoverage":false},{"functionName":"fiFI","ranges":[{"startOffset":3359,"endOffset":3474,"count":0}],"isBlockCoverage":false},{"functionName":"huHU","ranges":[{"startOffset":3487,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"ptBR","ranges":[{"startOffset":3845,"endOffset":3949,"count":0}],"isBlockCoverage":false},{"functionName":"ptPT","ranges":[{"startOffset":3962,"endOffset":4082,"count":0}],"isBlockCoverage":false},{"functionName":"sqAL","ranges":[{"startOffset":4095,"endOffset":4201,"count":0}],"isBlockCoverage":false},{"functionName":"svSE","ranges":[{"startOffset":4214,"endOffset":4334,"count":0}],"isBlockCoverage":false},{"functionName":"enPK","ranges":[{"startOffset":4347,"endOffset":4625,"count":0}],"isBlockCoverage":false},{"functionName":"isLicensePlate","ranges":[{"startOffset":4629,"endOffset":5055,"count":0}],"isBlockCoverage":false}]},{"scriptId":"636","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isStrongPassword.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3183,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":254,"endOffset":349,"count":2},{"startOffset":322,"endOffset":327,"count":0}],"isBlockCoverage":true},{"functionName":"countChars","ranges":[{"startOffset":908,"endOffset":1139,"count":0}],"isBlockCoverage":false},{"functionName":"analyzePassword","ranges":[{"startOffset":1183,"endOffset":1903,"count":0}],"isBlockCoverage":false},{"functionName":"scorePassword","ranges":[{"startOffset":1904,"endOffset":2525,"count":0}],"isBlockCoverage":false},{"functionName":"isStrongPassword","ranges":[{"startOffset":2526,"endOffset":3107,"count":0}],"isBlockCoverage":false}]},{"scriptId":"637","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/validator/lib/isVAT.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8475,"count":1}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":15,"endOffset":333,"count":0}],"isBlockCoverage":false},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":602,"endOffset":830,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":831,"endOffset":1412,"count":1},{"startOffset":910,"endOffset":977,"count":0},{"startOffset":979,"endOffset":1056,"count":0},{"startOffset":1058,"endOffset":1164,"count":0},{"startOffset":1183,"endOffset":1406,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1413,"endOffset":1508,"count":1},{"startOffset":1481,"endOffset":1486,"count":0}],"isBlockCoverage":true},{"functionName":"AU","ranges":[{"startOffset":1518,"endOffset":1982,"count":0}],"isBlockCoverage":false},{"functionName":"CH","ranges":[{"startOffset":1993,"endOffset":2714,"count":0}],"isBlockCoverage":false},{"functionName":"PT","ranges":[{"startOffset":2725,"endOffset":3100,"count":0}],"isBlockCoverage":false},{"functionName":"AT","ranges":[{"startOffset":3211,"endOffset":3271,"count":0}],"isBlockCoverage":false},{"functionName":"BE","ranges":[{"startOffset":3279,"endOffset":3339,"count":0}],"isBlockCoverage":false},{"functionName":"BG","ranges":[{"startOffset":3347,"endOffset":3409,"count":0}],"isBlockCoverage":false},{"functionName":"HR","ranges":[{"startOffset":3417,"endOffset":3477,"count":0}],"isBlockCoverage":false},{"functionName":"CY","ranges":[{"startOffset":3485,"endOffset":3544,"count":0}],"isBlockCoverage":false},{"functionName":"CZ","ranges":[{"startOffset":3552,"endOffset":3614,"count":0}],"isBlockCoverage":false},{"functionName":"DK","ranges":[{"startOffset":3622,"endOffset":3681,"count":0}],"isBlockCoverage":false},{"functionName":"EE","ranges":[{"startOffset":3689,"endOffset":3748,"count":0}],"isBlockCoverage":false},{"functionName":"FI","ranges":[{"startOffset":3756,"endOffset":3815,"count":0}],"isBlockCoverage":false},{"functionName":"FR","ranges":[{"startOffset":3823,"endOffset":3887,"count":0}],"isBlockCoverage":false},{"functionName":"DE","ranges":[{"startOffset":3895,"endOffset":3954,"count":0}],"isBlockCoverage":false},{"functionName":"EL","ranges":[{"startOffset":3962,"endOffset":4021,"count":0}],"isBlockCoverage":false},{"functionName":"HU","ranges":[{"startOffset":4029,"endOffset":4088,"count":0}],"isBlockCoverage":false},{"functionName":"IE","ranges":[{"startOffset":4096,"endOffset":4164,"count":0}],"isBlockCoverage":false},{"functionName":"IT","ranges":[{"startOffset":4172,"endOffset":4232,"count":0}],"isBlockCoverage":false},{"functionName":"LV","ranges":[{"startOffset":4240,"endOffset":4300,"count":0}],"isBlockCoverage":false},{"functionName":"LT","ranges":[{"startOffset":4308,"endOffset":4370,"count":0}],"isBlockCoverage":false},{"functionName":"LU","ranges":[{"startOffset":4378,"endOffset":4437,"count":0}],"isBlockCoverage":false},{"functionName":"MT","ranges":[{"startOffset":4445,"endOffset":4504,"count":0}],"isBlockCoverage":false},{"functionName":"NL","ranges":[{"startOffset":4512,"endOffset":4577,"count":0}],"isBlockCoverage":false},{"functionName":"PL","ranges":[{"startOffset":4585,"endOffset":4699,"count":0}],"isBlockCoverage":false},{"functionName":"RO","ranges":[{"startOffset":4717,"endOffset":4779,"count":0}],"isBlockCoverage":false},{"functionName":"SK","ranges":[{"startOffset":4787,"endOffset":4847,"count":0}],"isBlockCoverage":false},{"functionName":"SI","ranges":[{"startOffset":4855,"endOffset":4914,"count":0}],"isBlockCoverage":false},{"functionName":"ES","ranges":[{"startOffset":4922,"endOffset":4988,"count":0}],"isBlockCoverage":false},{"functionName":"SE","ranges":[{"startOffset":4996,"endOffset":5056,"count":0}],"isBlockCoverage":false},{"functionName":"AL","ranges":[{"startOffset":5115,"endOffset":5179,"count":0}],"isBlockCoverage":false},{"functionName":"MK","ranges":[{"startOffset":5187,"endOffset":5247,"count":0}],"isBlockCoverage":false},{"functionName":"BY","ranges":[{"startOffset":5265,"endOffset":5326,"count":0}],"isBlockCoverage":false},{"functionName":"CA","ranges":[{"startOffset":5334,"endOffset":5393,"count":0}],"isBlockCoverage":false},{"functionName":"IS","ranges":[{"startOffset":5401,"endOffset":5462,"count":0}],"isBlockCoverage":false},{"functionName":"IN","ranges":[{"startOffset":5470,"endOffset":5530,"count":0}],"isBlockCoverage":false},{"functionName":"ID","ranges":[{"startOffset":5538,"endOffset":5638,"count":0}],"isBlockCoverage":false},{"functionName":"IL","ranges":[{"startOffset":5646,"endOffset":5705,"count":0}],"isBlockCoverage":false},{"functionName":"KZ","ranges":[{"startOffset":5713,"endOffset":5773,"count":0}],"isBlockCoverage":false},{"functionName":"NZ","ranges":[{"startOffset":5781,"endOffset":5840,"count":0}],"isBlockCoverage":false},{"functionName":"NG","ranges":[{"startOffset":5848,"endOffset":5924,"count":0}],"isBlockCoverage":false},{"functionName":"NO","ranges":[{"startOffset":5932,"endOffset":5994,"count":0}],"isBlockCoverage":false},{"functionName":"PH","ranges":[{"startOffset":6002,"endOffset":6088,"count":0}],"isBlockCoverage":false},{"functionName":"RU","ranges":[{"startOffset":6096,"endOffset":6165,"count":0}],"isBlockCoverage":false},{"functionName":"SM","ranges":[{"startOffset":6173,"endOffset":6232,"count":0}],"isBlockCoverage":false},{"functionName":"SA","ranges":[{"startOffset":6240,"endOffset":6300,"count":0}],"isBlockCoverage":false},{"functionName":"RS","ranges":[{"startOffset":6308,"endOffset":6367,"count":0}],"isBlockCoverage":false},{"functionName":"TR","ranges":[{"startOffset":6385,"endOffset":6445,"count":0}],"isBlockCoverage":false},{"functionName":"UA","ranges":[{"startOffset":6453,"endOffset":6513,"count":0}],"isBlockCoverage":false},{"functionName":"GB","ranges":[{"startOffset":6521,"endOffset":6653,"count":0}],"isBlockCoverage":false},{"functionName":"UZ","ranges":[{"startOffset":6661,"endOffset":6720,"count":0}],"isBlockCoverage":false},{"functionName":"AR","ranges":[{"startOffset":6787,"endOffset":6847,"count":0}],"isBlockCoverage":false},{"functionName":"BO","ranges":[{"startOffset":6855,"endOffset":6914,"count":0}],"isBlockCoverage":false},{"functionName":"BR","ranges":[{"startOffset":6922,"endOffset":7036,"count":0}],"isBlockCoverage":false},{"functionName":"CL","ranges":[{"startOffset":7044,"endOffset":7109,"count":0}],"isBlockCoverage":false},{"functionName":"CO","ranges":[{"startOffset":7117,"endOffset":7177,"count":0}],"isBlockCoverage":false},{"functionName":"CR","ranges":[{"startOffset":7185,"endOffset":7247,"count":0}],"isBlockCoverage":false},{"functionName":"EC","ranges":[{"startOffset":7255,"endOffset":7315,"count":0}],"isBlockCoverage":false},{"functionName":"SV","ranges":[{"startOffset":7323,"endOffset":7400,"count":0}],"isBlockCoverage":false},{"functionName":"GT","ranges":[{"startOffset":7408,"endOffset":7473,"count":0}],"isBlockCoverage":false},{"functionName":"HN","ranges":[{"startOffset":7481,"endOffset":7535,"count":0}],"isBlockCoverage":false},{"functionName":"MX","ranges":[{"startOffset":7543,"endOffset":7614,"count":0}],"isBlockCoverage":false},{"functionName":"NI","ranges":[{"startOffset":7622,"endOffset":7698,"count":0}],"isBlockCoverage":false},{"functionName":"PA","ranges":[{"startOffset":7706,"endOffset":7760,"count":0}],"isBlockCoverage":false},{"functionName":"PY","ranges":[{"startOffset":7768,"endOffset":7835,"count":0}],"isBlockCoverage":false},{"functionName":"PE","ranges":[{"startOffset":7843,"endOffset":7903,"count":0}],"isBlockCoverage":false},{"functionName":"DO","ranges":[{"startOffset":7911,"endOffset":8040,"count":0}],"isBlockCoverage":false},{"functionName":"UY","ranges":[{"startOffset":8048,"endOffset":8108,"count":0}],"isBlockCoverage":false},{"functionName":"VE","ranges":[{"startOffset":8116,"endOffset":8204,"count":0}],"isBlockCoverage":false},{"functionName":"isVAT","ranges":[{"startOffset":8208,"endOffset":8475,"count":0}],"isBlockCoverage":false}]},{"scriptId":"638","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/moment/moment.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":176435,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":136,"endOffset":359,"count":1},{"startOffset":259,"endOffset":357,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":367,"endOffset":176430,"count":1},{"startOffset":3530,"endOffset":3870,"count":0},{"startOffset":11885,"endOffset":12146,"count":0},{"startOffset":30148,"endOffset":30416,"count":0},{"startOffset":151368,"endOffset":151420,"count":6},{"startOffset":151580,"endOffset":151626,"count":9}],"isBlockCoverage":true},{"functionName":"hooks","ranges":[{"startOffset":423,"endOffset":499,"count":0}],"isBlockCoverage":false},{"functionName":"setHookCallback","ranges":[{"startOffset":616,"endOffset":691,"count":1}],"isBlockCoverage":true},{"functionName":"isArray","ranges":[{"startOffset":697,"endOffset":865,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":871,"endOffset":1129,"count":15},{"startOffset":1038,"endOffset":1112,"count":13}],"isBlockCoverage":true},{"functionName":"hasOwnProp","ranges":[{"startOffset":1135,"endOffset":1227,"count":122}],"isBlockCoverage":true},{"functionName":"isObjectEmpty","ranges":[{"startOffset":1233,"endOffset":1583,"count":0}],"isBlockCoverage":false},{"functionName":"isUndefined","ranges":[{"startOffset":1589,"endOffset":1657,"count":2}],"isBlockCoverage":true},{"functionName":"isNumber","ranges":[{"startOffset":1663,"endOffset":1836,"count":40},{"startOffset":1745,"endOffset":1819,"count":34}],"isBlockCoverage":true},{"functionName":"isDate","ranges":[{"startOffset":1842,"endOffset":2007,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":2013,"endOffset":2218,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":2224,"endOffset":2563,"count":17},{"startOffset":2273,"endOffset":2363,"count":43},{"startOffset":2404,"endOffset":2452,"count":0},{"startOffset":2492,"endOffset":2538,"count":0}],"isBlockCoverage":true},{"functionName":"createUTC","ranges":[{"startOffset":2569,"endOffset":2702,"count":0}],"isBlockCoverage":false},{"functionName":"defaultParsingFlags","ranges":[{"startOffset":2708,"endOffset":3295,"count":0}],"isBlockCoverage":false},{"functionName":"getParsingFlags","ranges":[{"startOffset":3301,"endOffset":3440,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":3553,"endOffset":3863,"count":0}],"isBlockCoverage":false},{"functionName":"isValid","ranges":[{"startOffset":3876,"endOffset":5104,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalid","ranges":[{"startOffset":5110,"endOffset":5356,"count":0}],"isBlockCoverage":false},{"functionName":"copyConfig","ranges":[{"startOffset":5576,"endOffset":6917,"count":0}],"isBlockCoverage":false},{"functionName":"Moment","ranges":[{"startOffset":6954,"endOffset":7430,"count":0}],"isBlockCoverage":false},{"functionName":"isMoment","ranges":[{"startOffset":7436,"endOffset":7577,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":7583,"endOffset":7831,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":7837,"endOffset":9268,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7920,"endOffset":9256,"count":0}],"isBlockCoverage":false},{"functionName":"deprecateSimple","ranges":[{"startOffset":9302,"endOffset":9559,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":9650,"endOffset":9864,"count":87},{"startOffset":9771,"endOffset":9847,"count":72}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":9870,"endOffset":10660,"count":1},{"startOffset":9940,"endOffset":10201,"count":15},{"startOffset":10055,"endOffset":10110,"count":1},{"startOffset":10110,"endOffset":10177,"count":14},{"startOffset":10557,"endOffset":10585,"count":0}],"isBlockCoverage":true},{"functionName":"mergeConfigs","ranges":[{"startOffset":10666,"endOffset":11705,"count":1},{"startOffset":10813,"endOffset":11311,"count":4},{"startOffset":10913,"endOffset":10943,"count":0},{"startOffset":10945,"endOffset":11117,"count":0},{"startOffset":11224,"endOffset":11287,"count":0},{"startOffset":11347,"endOffset":11679,"count":13},{"startOffset":11463,"endOffset":11510,"count":11},{"startOffset":11525,"endOffset":11669,"count":4}],"isBlockCoverage":true},{"functionName":"Locale","ranges":[{"startOffset":11711,"endOffset":11812,"count":1}],"isBlockCoverage":true},{"functionName":"keys","ranges":[{"startOffset":11908,"endOffset":12139,"count":0}],"isBlockCoverage":false},{"functionName":"calendar","ranges":[{"startOffset":12395,"endOffset":12575,"count":0}],"isBlockCoverage":false},{"functionName":"zeroFill","ranges":[{"startOffset":12581,"endOffset":12953,"count":0}],"isBlockCoverage":false},{"functionName":"addFormatToken","ranges":[{"startOffset":13464,"endOffset":14221,"count":60},{"startOffset":13595,"endOffset":13695,"count":32},{"startOffset":13715,"endOffset":13774,"count":42},{"startOffset":13795,"endOffset":13965,"count":32},{"startOffset":13987,"endOffset":14215,"count":8}],"isBlockCoverage":true},{"functionName":"func","ranges":[{"startOffset":13616,"endOffset":13684,"count":0}],"isBlockCoverage":false},{"functionName":"formatTokenFunctions.<computed>","ranges":[{"startOffset":13843,"endOffset":13954,"count":0}],"isBlockCoverage":false},{"functionName":"formatTokenFunctions.<computed>","ranges":[{"startOffset":14033,"endOffset":14204,"count":0}],"isBlockCoverage":false},{"functionName":"removeFormattingTokens","ranges":[{"startOffset":14227,"endOffset":14413,"count":0}],"isBlockCoverage":false},{"functionName":"makeFormatFunction","ranges":[{"startOffset":14419,"endOffset":15131,"count":0}],"isBlockCoverage":false},{"functionName":"formatMoment","ranges":[{"startOffset":15181,"endOffset":15509,"count":0}],"isBlockCoverage":false},{"functionName":"expandFormat","ranges":[{"startOffset":15515,"endOffset":16049,"count":0}],"isBlockCoverage":false},{"functionName":"longDateFormat","ranges":[{"startOffset":16277,"endOffset":16978,"count":0}],"isBlockCoverage":false},{"functionName":"invalidDate","ranges":[{"startOffset":17030,"endOffset":17094,"count":0}],"isBlockCoverage":false},{"functionName":"ordinal","ranges":[{"startOffset":17183,"endOffset":17267,"count":0}],"isBlockCoverage":false},{"functionName":"relativeTime","ranges":[{"startOffset":17691,"endOffset":17951,"count":0}],"isBlockCoverage":false},{"functionName":"pastFuture","ranges":[{"startOffset":17957,"endOffset":18153,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeUnits","ranges":[{"startOffset":19426,"endOffset":19591,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeObjectUnits","ranges":[{"startOffset":19597,"endOffset":20054,"count":0}],"isBlockCoverage":false},{"functionName":"getPrioritizedUnits","ranges":[{"startOffset":20412,"endOffset":20775,"count":0}],"isBlockCoverage":false},{"functionName":"addRegexToken","ranges":[{"startOffset":22159,"endOffset":22416,"count":72},{"startOffset":22266,"endOffset":22273,"count":14},{"startOffset":22286,"endOffset":22409,"count":58}],"isBlockCoverage":true},{"functionName":"regexes.<computed>","ranges":[{"startOffset":22288,"endOffset":22409,"count":0}],"isBlockCoverage":false},{"functionName":"getParseRegexForToken","ranges":[{"startOffset":22422,"endOffset":22646,"count":0}],"isBlockCoverage":false},{"functionName":"unescapeFormat","ranges":[{"startOffset":22760,"endOffset":23117,"count":0}],"isBlockCoverage":false},{"functionName":"regexEscape","ranges":[{"startOffset":23123,"endOffset":23214,"count":0}],"isBlockCoverage":false},{"functionName":"absFloor","ranges":[{"startOffset":23220,"endOffset":23411,"count":0}],"isBlockCoverage":false},{"functionName":"toInt","ranges":[{"startOffset":23417,"endOffset":23674,"count":0}],"isBlockCoverage":false},{"functionName":"addParseToken","ranges":[{"startOffset":23702,"endOffset":24168,"count":40},{"startOffset":23849,"endOffset":23889,"count":20},{"startOffset":23922,"endOffset":24041,"count":6},{"startOffset":24114,"endOffset":24162,"count":70}],"isBlockCoverage":true},{"functionName":"func","ranges":[{"startOffset":23943,"endOffset":24030,"count":0}],"isBlockCoverage":false},{"functionName":"addWeekParseToken","ranges":[{"startOffset":24174,"endOffset":24403,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24249,"endOffset":24395,"count":0}],"isBlockCoverage":false},{"functionName":"addTimeToArrayFromToken","ranges":[{"startOffset":24409,"endOffset":24599,"count":0}],"isBlockCoverage":false},{"functionName":"isLeapYear","ranges":[{"startOffset":24605,"endOffset":24711,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24940,"endOffset":25041,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25081,"endOffset":25134,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25600,"endOffset":25733,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25760,"endOffset":25845,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25871,"endOffset":25945,"count":0}],"isBlockCoverage":false},{"functionName":"daysInYear","ranges":[{"startOffset":25969,"endOffset":26047,"count":0}],"isBlockCoverage":false},{"functionName":"hooks.parseTwoDigitYear","ranges":[{"startOffset":26093,"endOffset":26182,"count":0}],"isBlockCoverage":false},{"functionName":"getIsLeapYear","ranges":[{"startOffset":26257,"endOffset":26329,"count":0}],"isBlockCoverage":false},{"functionName":"makeGetSet","ranges":[{"startOffset":26335,"endOffset":26654,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26388,"endOffset":26647,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26660,"endOffset":27657,"count":0}],"isBlockCoverage":false},{"functionName":"set$1","ranges":[{"startOffset":27663,"endOffset":29188,"count":0}],"isBlockCoverage":false},{"functionName":"stringGet","ranges":[{"startOffset":29210,"endOffset":29386,"count":0}],"isBlockCoverage":false},{"functionName":"stringSet","ranges":[{"startOffset":29392,"endOffset":29979,"count":0}],"isBlockCoverage":false},{"functionName":"mod","ranges":[{"startOffset":29985,"endOffset":30045,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":30174,"endOffset":30409,"count":0}],"isBlockCoverage":false},{"functionName":"daysInMonth","ranges":[{"startOffset":30422,"endOffset":30764,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30826,"endOffset":30878,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30914,"endOffset":30999,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31036,"endOffset":31116,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31264,"endOffset":31349,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31378,"endOffset":31458,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31493,"endOffset":31565,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31604,"endOffset":31945,"count":0}],"isBlockCoverage":false},{"functionName":"localeMonths","ranges":[{"startOffset":32396,"endOffset":32858,"count":0}],"isBlockCoverage":false},{"functionName":"localeMonthsShort","ranges":[{"startOffset":32864,"endOffset":33290,"count":0}],"isBlockCoverage":false},{"functionName":"handleStrictParse","ranges":[{"startOffset":33296,"endOffset":34899,"count":0}],"isBlockCoverage":false},{"functionName":"localeMonthsParse","ranges":[{"startOffset":34905,"endOffset":36749,"count":0}],"isBlockCoverage":false},{"functionName":"setMonth","ranges":[{"startOffset":36771,"endOffset":37535,"count":0}],"isBlockCoverage":false},{"functionName":"getSetMonth","ranges":[{"startOffset":37541,"endOffset":37775,"count":0}],"isBlockCoverage":false},{"functionName":"getDaysInMonth","ranges":[{"startOffset":37781,"endOffset":37869,"count":0}],"isBlockCoverage":false},{"functionName":"monthsShortRegex","ranges":[{"startOffset":37875,"endOffset":38547,"count":0}],"isBlockCoverage":false},{"functionName":"monthsRegex","ranges":[{"startOffset":38553,"endOffset":39180,"count":0}],"isBlockCoverage":false},{"functionName":"computeMonthsParse","ranges":[{"startOffset":39186,"endOffset":40486,"count":0}],"isBlockCoverage":false},{"functionName":"createDate","ranges":[{"startOffset":40492,"endOffset":41080,"count":0}],"isBlockCoverage":false},{"functionName":"createUTCDate","ranges":[{"startOffset":41086,"endOffset":41677,"count":0}],"isBlockCoverage":false},{"functionName":"firstWeekOffset","ranges":[{"startOffset":41726,"endOffset":42092,"count":0}],"isBlockCoverage":false},{"functionName":"dayOfYearFromWeeks","ranges":[{"startOffset":42210,"endOffset":42954,"count":0}],"isBlockCoverage":false},{"functionName":"weekOfYear","ranges":[{"startOffset":42960,"endOffset":43644,"count":0}],"isBlockCoverage":false},{"functionName":"weeksInYear","ranges":[{"startOffset":43650,"endOffset":43887,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":44298,"endOffset":44400,"count":0}],"isBlockCoverage":false},{"functionName":"localeWeek","ranges":[{"startOffset":44445,"endOffset":44546,"count":0}],"isBlockCoverage":false},{"functionName":"localeFirstDayOfWeek","ranges":[{"startOffset":44727,"endOffset":44797,"count":0}],"isBlockCoverage":false},{"functionName":"localeFirstDayOfYear","ranges":[{"startOffset":44803,"endOffset":44873,"count":0}],"isBlockCoverage":false},{"functionName":"getSetWeek","ranges":[{"startOffset":44895,"endOffset":45051,"count":0}],"isBlockCoverage":false},{"functionName":"getSetISOWeek","ranges":[{"startOffset":45057,"endOffset":45215,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":45309,"endOffset":45394,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":45430,"endOffset":45517,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":45554,"endOffset":45636,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":45873,"endOffset":45958,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":45986,"endOffset":46073,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":46102,"endOffset":46184,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":46233,"endOffset":46577,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":46620,"endOffset":46701,"count":0}],"isBlockCoverage":false},{"functionName":"parseWeekday","ranges":[{"startOffset":46725,"endOffset":47071,"count":0}],"isBlockCoverage":false},{"functionName":"parseIsoWeekday","ranges":[{"startOffset":47077,"endOffset":47276,"count":0}],"isBlockCoverage":false},{"functionName":"shiftWeekdays","ranges":[{"startOffset":47297,"endOffset":47388,"count":0}],"isBlockCoverage":false},{"functionName":"localeWeekdays","ranges":[{"startOffset":47793,"endOffset":48258,"count":0}],"isBlockCoverage":false},{"functionName":"localeWeekdaysShort","ranges":[{"startOffset":48264,"endOffset":48492,"count":0}],"isBlockCoverage":false},{"functionName":"localeWeekdaysMin","ranges":[{"startOffset":48498,"endOffset":48718,"count":0}],"isBlockCoverage":false},{"functionName":"handleStrictParse$1","ranges":[{"startOffset":48724,"endOffset":51359,"count":0}],"isBlockCoverage":false},{"functionName":"localeWeekdaysParse","ranges":[{"startOffset":51365,"endOffset":53653,"count":0}],"isBlockCoverage":false},{"functionName":"getSetDayOfWeek","ranges":[{"startOffset":53675,"endOffset":54026,"count":0}],"isBlockCoverage":false},{"functionName":"getSetLocaleDayOfWeek","ranges":[{"startOffset":54032,"endOffset":54312,"count":0}],"isBlockCoverage":false},{"functionName":"getSetISODayOfWeek","ranges":[{"startOffset":54318,"endOffset":54870,"count":0}],"isBlockCoverage":false},{"functionName":"weekdaysRegex","ranges":[{"startOffset":54876,"endOffset":55527,"count":0}],"isBlockCoverage":false},{"functionName":"weekdaysShortRegex","ranges":[{"startOffset":55533,"endOffset":56229,"count":0}],"isBlockCoverage":false},{"functionName":"weekdaysMinRegex","ranges":[{"startOffset":56235,"endOffset":56913,"count":0}],"isBlockCoverage":false},{"functionName":"computeWeekdaysParse","ranges":[{"startOffset":56919,"endOffset":58632,"count":0}],"isBlockCoverage":false},{"functionName":"hFormat","ranges":[{"startOffset":58657,"endOffset":58723,"count":0}],"isBlockCoverage":false},{"functionName":"kFormat","ranges":[{"startOffset":58729,"endOffset":58790,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58968,"endOffset":59058,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":59096,"endOffset":59276,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":59312,"endOffset":59395,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":59433,"endOffset":59606,"count":0}],"isBlockCoverage":false},{"functionName":"meridiem","ranges":[{"startOffset":59614,"endOffset":59869,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":59688,"endOffset":59861,"count":0}],"isBlockCoverage":false},{"functionName":"matchMeridiem","ranges":[{"startOffset":59943,"endOffset":60029,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":60635,"endOffset":60759,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":60792,"endOffset":60916,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":60950,"endOffset":61073,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61101,"endOffset":61325,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61355,"endOffset":61673,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61701,"endOffset":61877,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61907,"endOffset":62177,"count":0}],"isBlockCoverage":false},{"functionName":"localeIsPM","ranges":[{"startOffset":62201,"endOffset":62438,"count":0}],"isBlockCoverage":false},{"functionName":"localeMeridiem","ranges":[{"startOffset":62811,"endOffset":63004,"count":0}],"isBlockCoverage":false},{"functionName":"commonPrefix","ranges":[{"startOffset":63736,"endOffset":63997,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeLocale","ranges":[{"startOffset":64003,"endOffset":64104,"count":0}],"isBlockCoverage":false},{"functionName":"chooseLocale","ranges":[{"startOffset":64377,"endOffset":65296,"count":0}],"isBlockCoverage":false},{"functionName":"isLocaleNameSane","ranges":[{"startOffset":65302,"endOffset":65541,"count":0}],"isBlockCoverage":false},{"functionName":"loadLocale","ranges":[{"startOffset":65547,"endOffset":66449,"count":1},{"startOffset":65766,"endOffset":65810,"count":0},{"startOffset":65811,"endOffset":65832,"count":0},{"startOffset":65833,"endOffset":65862,"count":0},{"startOffset":65863,"endOffset":65900,"count":0},{"startOffset":65911,"endOffset":66413,"count":0}],"isBlockCoverage":true},{"functionName":"getSetGlobalLocale","ranges":[{"startOffset":66624,"endOffset":67399,"count":2},{"startOffset":66741,"endOffset":66866,"count":1},{"startOffset":67010,"endOffset":67347,"count":0}],"isBlockCoverage":true},{"functionName":"defineLocale","ranges":[{"startOffset":67405,"endOffset":69609,"count":1},{"startOffset":67612,"endOffset":68118,"count":0},{"startOffset":68157,"endOffset":68938,"count":0},{"startOffset":69054,"endOffset":69201,"count":0},{"startOffset":69493,"endOffset":69603,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":69101,"endOffset":69185,"count":0}],"isBlockCoverage":false},{"functionName":"updateLocale","ranges":[{"startOffset":69615,"endOffset":71367,"count":0}],"isBlockCoverage":false},{"functionName":"getLocale","ranges":[{"startOffset":71400,"endOffset":71871,"count":1},{"startOffset":71478,"endOffset":71498,"count":0},{"startOffset":71500,"endOffset":71548,"count":0},{"startOffset":71568,"endOffset":71612,"count":0},{"startOffset":71795,"endOffset":71870,"count":0}],"isBlockCoverage":true},{"functionName":"listLocales","ranges":[{"startOffset":71877,"endOffset":71937,"count":0}],"isBlockCoverage":false},{"functionName":"checkOverflow","ranges":[{"startOffset":71943,"endOffset":73456,"count":0}],"isBlockCoverage":false},{"functionName":"configFromISO","ranges":[{"startOffset":75727,"endOffset":77600,"count":0}],"isBlockCoverage":false},{"functionName":"extractFromRFC2822Strings","ranges":[{"startOffset":77606,"endOffset":78103,"count":0}],"isBlockCoverage":false},{"functionName":"untruncateYear","ranges":[{"startOffset":78109,"endOffset":78346,"count":0}],"isBlockCoverage":false},{"functionName":"preprocessRFC2822","ranges":[{"startOffset":78352,"endOffset":78661,"count":0}],"isBlockCoverage":false},{"functionName":"checkWeekday","ranges":[{"startOffset":78667,"endOffset":79342,"count":0}],"isBlockCoverage":false},{"functionName":"calculateOffset","ranges":[{"startOffset":79348,"endOffset":79763,"count":0}],"isBlockCoverage":false},{"functionName":"configFromRFC2822","ranges":[{"startOffset":79811,"endOffset":80658,"count":0}],"isBlockCoverage":false},{"functionName":"configFromString","ranges":[{"startOffset":80770,"endOffset":81486,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":81874,"endOffset":81981,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":82051,"endOffset":82217,"count":0}],"isBlockCoverage":false},{"functionName":"currentDateArray","ranges":[{"startOffset":82223,"endOffset":82646,"count":0}],"isBlockCoverage":false},{"functionName":"configFromArray","ranges":[{"startOffset":82899,"endOffset":85647,"count":0}],"isBlockCoverage":false},{"functionName":"dayOfYearFromWeekInfo","ranges":[{"startOffset":85653,"endOffset":87875,"count":0}],"isBlockCoverage":false},{"functionName":"hooks.ISO_8601","ranges":[{"startOffset":87946,"endOffset":87960,"count":0}],"isBlockCoverage":false},{"functionName":"hooks.RFC_2822","ranges":[{"startOffset":88033,"endOffset":88047,"count":0}],"isBlockCoverage":false},{"functionName":"configFromStringAndFormat","ranges":[{"startOffset":88096,"endOffset":91222,"count":0}],"isBlockCoverage":false},{"functionName":"meridiemFixWrap","ranges":[{"startOffset":91228,"endOffset":91888,"count":0}],"isBlockCoverage":false},{"functionName":"configFromStringAndArray","ranges":[{"startOffset":91946,"endOffset":93862,"count":0}],"isBlockCoverage":false},{"functionName":"configFromObject","ranges":[{"startOffset":93868,"endOffset":94323,"count":0}],"isBlockCoverage":false},{"functionName":"createFromConfig","ranges":[{"startOffset":94329,"endOffset":94613,"count":0}],"isBlockCoverage":false},{"functionName":"prepareConfig","ranges":[{"startOffset":94619,"endOffset":95513,"count":0}],"isBlockCoverage":false},{"functionName":"configFromInput","ranges":[{"startOffset":95519,"endOffset":96303,"count":0}],"isBlockCoverage":false},{"functionName":"createLocalOrUTC","ranges":[{"startOffset":96309,"endOffset":97137,"count":0}],"isBlockCoverage":false},{"functionName":"createLocal","ranges":[{"startOffset":97143,"endOffset":97273,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":97435,"endOffset":97726,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":97898,"endOffset":98189,"count":0}],"isBlockCoverage":false},{"functionName":"pickBy","ranges":[{"startOffset":98479,"endOffset":98928,"count":0}],"isBlockCoverage":false},{"functionName":"min","ranges":[{"startOffset":98968,"endOffset":99080,"count":0}],"isBlockCoverage":false},{"functionName":"max","ranges":[{"startOffset":99086,"endOffset":99197,"count":0}],"isBlockCoverage":false},{"functionName":"now","ranges":[{"startOffset":99213,"endOffset":99284,"count":0}],"isBlockCoverage":false},{"functionName":"isDurationValid","ranges":[{"startOffset":99478,"endOffset":100315,"count":0}],"isBlockCoverage":false},{"functionName":"isValid$1","ranges":[{"startOffset":100321,"endOffset":100379,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalid$1","ranges":[{"startOffset":100385,"endOffset":100455,"count":0}],"isBlockCoverage":false},{"functionName":"Duration","ranges":[{"startOffset":100461,"endOffset":101938,"count":0}],"isBlockCoverage":false},{"functionName":"isDuration","ranges":[{"startOffset":101944,"endOffset":102016,"count":0}],"isBlockCoverage":false},{"functionName":"absRound","ranges":[{"startOffset":102022,"endOffset":102196,"count":0}],"isBlockCoverage":false},{"functionName":"compareArrays","ranges":[{"startOffset":102262,"endOffset":102768,"count":0}],"isBlockCoverage":false},{"functionName":"offset","ranges":[{"startOffset":102793,"endOffset":103250,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":102865,"endOffset":103242,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":103429,"endOffset":103564,"count":0}],"isBlockCoverage":false},{"functionName":"offsetFromString","ranges":[{"startOffset":103718,"endOffset":104193,"count":0}],"isBlockCoverage":false},{"functionName":"cloneWithOffset","ranges":[{"startOffset":104278,"endOffset":104847,"count":0}],"isBlockCoverage":false},{"functionName":"getDateOffset","ranges":[{"startOffset":104853,"endOffset":105068,"count":0}],"isBlockCoverage":false},{"functionName":"hooks.updateOffset","ranges":[{"startOffset":105243,"endOffset":105257,"count":0}],"isBlockCoverage":false},{"functionName":"getSetOffset","ranges":[{"startOffset":105891,"endOffset":107387,"count":0}],"isBlockCoverage":false},{"functionName":"getSetZone","ranges":[{"startOffset":107393,"endOffset":107704,"count":0}],"isBlockCoverage":false},{"functionName":"setOffsetToUTC","ranges":[{"startOffset":107710,"endOffset":107805,"count":0}],"isBlockCoverage":false},{"functionName":"setOffsetToLocal","ranges":[{"startOffset":107811,"endOffset":108101,"count":0}],"isBlockCoverage":false},{"functionName":"setOffsetToParsedOffset","ranges":[{"startOffset":108107,"endOffset":108527,"count":0}],"isBlockCoverage":false},{"functionName":"hasAlignedHourOffset","ranges":[{"startOffset":108533,"endOffset":108759,"count":0}],"isBlockCoverage":false},{"functionName":"isDaylightSavingTime","ranges":[{"startOffset":108765,"endOffset":108965,"count":0}],"isBlockCoverage":false},{"functionName":"isDaylightSavingTimeShifted","ranges":[{"startOffset":108971,"endOffset":109515,"count":0}],"isBlockCoverage":false},{"functionName":"isLocal","ranges":[{"startOffset":109521,"endOffset":109601,"count":0}],"isBlockCoverage":false},{"functionName":"isUtcOffset","ranges":[{"startOffset":109607,"endOffset":109690,"count":0}],"isBlockCoverage":false},{"functionName":"isUtc","ranges":[{"startOffset":109696,"endOffset":109795,"count":0}],"isBlockCoverage":false},{"functionName":"createDuration","ranges":[{"startOffset":110385,"endOffset":112758,"count":0}],"isBlockCoverage":false},{"functionName":"parseIso","ranges":[{"startOffset":112855,"endOffset":113211,"count":0}],"isBlockCoverage":false},{"functionName":"positiveMomentsDifference","ranges":[{"startOffset":113217,"endOffset":113588,"count":0}],"isBlockCoverage":false},{"functionName":"momentsDifference","ranges":[{"startOffset":113594,"endOffset":114106,"count":0}],"isBlockCoverage":false},{"functionName":"createAdder","ranges":[{"startOffset":114172,"endOffset":115032,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":114227,"endOffset":115025,"count":0}],"isBlockCoverage":false},{"functionName":"addSubtract","ranges":[{"startOffset":115038,"endOffset":115798,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":115890,"endOffset":115991,"count":0}],"isBlockCoverage":false},{"functionName":"isMomentInput","ranges":[{"startOffset":116125,"endOffset":116460,"count":0}],"isBlockCoverage":false},{"functionName":"isMomentInputObject","ranges":[{"startOffset":116466,"endOffset":117529,"count":0}],"isBlockCoverage":false},{"functionName":"isNumberOrStringArray","ranges":[{"startOffset":117535,"endOffset":117901,"count":0}],"isBlockCoverage":false},{"functionName":"isCalendarSpec","ranges":[{"startOffset":117907,"endOffset":118508,"count":0}],"isBlockCoverage":false},{"functionName":"getCalendarFormat","ranges":[{"startOffset":118514,"endOffset":118990,"count":0}],"isBlockCoverage":false},{"functionName":"calendar$1","ranges":[{"startOffset":118996,"endOffset":120170,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":120176,"endOffset":120233,"count":0}],"isBlockCoverage":false},{"functionName":"isAfter","ranges":[{"startOffset":120239,"endOffset":120702,"count":0}],"isBlockCoverage":false},{"functionName":"isBefore","ranges":[{"startOffset":120708,"endOffset":121170,"count":0}],"isBlockCoverage":false},{"functionName":"isBetween","ranges":[{"startOffset":121176,"endOffset":121815,"count":0}],"isBlockCoverage":false},{"functionName":"isSame","ranges":[{"startOffset":121821,"endOffset":122436,"count":0}],"isBlockCoverage":false},{"functionName":"isSameOrAfter","ranges":[{"startOffset":122442,"endOffset":122558,"count":0}],"isBlockCoverage":false},{"functionName":"isSameOrBefore","ranges":[{"startOffset":122564,"endOffset":122682,"count":0}],"isBlockCoverage":false},{"functionName":"diff","ranges":[{"startOffset":122688,"endOffset":124118,"count":0}],"isBlockCoverage":false},{"functionName":"monthDiff","ranges":[{"startOffset":124124,"endOffset":125135,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":125247,"endOffset":125359,"count":0}],"isBlockCoverage":false},{"functionName":"toISOString","ranges":[{"startOffset":125365,"endOffset":126363,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":126625,"endOffset":127281,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":127287,"endOffset":127587,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":127593,"endOffset":127991,"count":0}],"isBlockCoverage":false},{"functionName":"fromNow","ranges":[{"startOffset":127997,"endOffset":128092,"count":0}],"isBlockCoverage":false},{"functionName":"to","ranges":[{"startOffset":128098,"endOffset":128494,"count":0}],"isBlockCoverage":false},{"functionName":"toNow","ranges":[{"startOffset":128500,"endOffset":128591,"count":0}],"isBlockCoverage":false},{"functionName":"locale","ranges":[{"startOffset":128765,"endOffset":129090,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":129281,"endOffset":129462,"count":0}],"isBlockCoverage":false},{"functionName":"localeData","ranges":[{"startOffset":129475,"endOffset":129533,"count":0}],"isBlockCoverage":false},{"functionName":"mod$1","ranges":[{"startOffset":129793,"endOffset":129893,"count":0}],"isBlockCoverage":false},{"functionName":"localStartOfDate","ranges":[{"startOffset":129899,"endOffset":130250,"count":0}],"isBlockCoverage":false},{"functionName":"utcStartOfDate","ranges":[{"startOffset":130256,"endOffset":130583,"count":0}],"isBlockCoverage":false},{"functionName":"startOf","ranges":[{"startOffset":130589,"endOffset":132580,"count":0}],"isBlockCoverage":false},{"functionName":"endOf","ranges":[{"startOffset":132586,"endOffset":134861,"count":0}],"isBlockCoverage":false},{"functionName":"valueOf","ranges":[{"startOffset":134867,"endOffset":134957,"count":0}],"isBlockCoverage":false},{"functionName":"unix","ranges":[{"startOffset":134963,"endOffset":135036,"count":0}],"isBlockCoverage":false},{"functionName":"toDate","ranges":[{"startOffset":135042,"endOffset":135108,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":135114,"endOffset":135356,"count":0}],"isBlockCoverage":false},{"functionName":"toObject","ranges":[{"startOffset":135362,"endOffset":135669,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":135675,"endOffset":135802,"count":0}],"isBlockCoverage":false},{"functionName":"isValid$2","ranges":[{"startOffset":135808,"endOffset":135866,"count":0}],"isBlockCoverage":false},{"functionName":"parsingFlags","ranges":[{"startOffset":135872,"endOffset":135953,"count":0}],"isBlockCoverage":false},{"functionName":"invalidAt","ranges":[{"startOffset":135959,"endOffset":136034,"count":0}],"isBlockCoverage":false},{"functionName":"creationData","ranges":[{"startOffset":136040,"endOffset":136256,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":136962,"endOffset":137259,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":137556,"endOffset":137953,"count":0}],"isBlockCoverage":false},{"functionName":"localeEras","ranges":[{"startOffset":137961,"endOffset":138842,"count":0}],"isBlockCoverage":false},{"functionName":"localeErasParse","ranges":[{"startOffset":138848,"endOffset":140076,"count":0}],"isBlockCoverage":false},{"functionName":"localeErasConvertYear","ranges":[{"startOffset":140082,"endOffset":140360,"count":0}],"isBlockCoverage":false},{"functionName":"getEraName","ranges":[{"startOffset":140366,"endOffset":140885,"count":0}],"isBlockCoverage":false},{"functionName":"getEraNarrow","ranges":[{"startOffset":140891,"endOffset":141416,"count":0}],"isBlockCoverage":false},{"functionName":"getEraAbbr","ranges":[{"startOffset":141422,"endOffset":141941,"count":0}],"isBlockCoverage":false},{"functionName":"getEraYear","ranges":[{"startOffset":141947,"endOffset":142650,"count":0}],"isBlockCoverage":false},{"functionName":"erasNameRegex","ranges":[{"startOffset":142656,"endOffset":142863,"count":0}],"isBlockCoverage":false},{"functionName":"erasAbbrRegex","ranges":[{"startOffset":142869,"endOffset":143076,"count":0}],"isBlockCoverage":false},{"functionName":"erasNarrowRegex","ranges":[{"startOffset":143082,"endOffset":143295,"count":0}],"isBlockCoverage":false},{"functionName":"matchEraAbbr","ranges":[{"startOffset":143301,"endOffset":143395,"count":0}],"isBlockCoverage":false},{"functionName":"matchEraName","ranges":[{"startOffset":143401,"endOffset":143495,"count":0}],"isBlockCoverage":false},{"functionName":"matchEraNarrow","ranges":[{"startOffset":143501,"endOffset":143599,"count":0}],"isBlockCoverage":false},{"functionName":"matchEraYearOrdinal","ranges":[{"startOffset":143605,"endOffset":143720,"count":0}],"isBlockCoverage":false},{"functionName":"computeErasParse","ranges":[{"startOffset":143726,"endOffset":144834,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":144891,"endOffset":144948,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":144988,"endOffset":145048,"count":0}],"isBlockCoverage":false},{"functionName":"addWeekYearFormatToken","ranges":[{"startOffset":145056,"endOffset":145171,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":145830,"endOffset":145932,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":145977,"endOffset":146076,"count":0}],"isBlockCoverage":false},{"functionName":"getSetWeekYear","ranges":[{"startOffset":146100,"endOffset":146392,"count":0}],"isBlockCoverage":false},{"functionName":"getSetISOWeekYear","ranges":[{"startOffset":146398,"endOffset":146617,"count":0}],"isBlockCoverage":false},{"functionName":"getISOWeeksInYear","ranges":[{"startOffset":146623,"endOffset":146706,"count":0}],"isBlockCoverage":false},{"functionName":"getISOWeeksInISOWeekYear","ranges":[{"startOffset":146712,"endOffset":146809,"count":0}],"isBlockCoverage":false},{"functionName":"getWeeksInYear","ranges":[{"startOffset":146815,"endOffset":146965,"count":0}],"isBlockCoverage":false},{"functionName":"getWeeksInWeekYear","ranges":[{"startOffset":146971,"endOffset":147129,"count":0}],"isBlockCoverage":false},{"functionName":"getSetWeekYearHelper","ranges":[{"startOffset":147135,"endOffset":147555,"count":0}],"isBlockCoverage":false},{"functionName":"setWeekAll","ranges":[{"startOffset":147561,"endOffset":147930,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":148068,"endOffset":148146,"count":0}],"isBlockCoverage":false},{"functionName":"getSetQuarter","ranges":[{"startOffset":148170,"endOffset":148348,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":148563,"endOffset":148815,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":148881,"endOffset":148968,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":149246,"endOffset":149327,"count":0}],"isBlockCoverage":false},{"functionName":"getSetDayOfYear","ranges":[{"startOffset":149367,"endOffset":149635,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":150272,"endOffset":150336,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":150376,"endOffset":150439,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":150534,"endOffset":150593,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":150635,"endOffset":150695,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":150738,"endOffset":150799,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":150843,"endOffset":150905,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":150950,"endOffset":151013,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":151059,"endOffset":151123,"count":0}],"isBlockCoverage":false},{"functionName":"parseMs","ranges":[{"startOffset":151426,"endOffset":151523,"count":0}],"isBlockCoverage":false},{"functionName":"getZoneAbbr","ranges":[{"startOffset":151815,"endOffset":151886,"count":0}],"isBlockCoverage":false},{"functionName":"getZoneName","ranges":[{"startOffset":151892,"endOffset":151986,"count":0}],"isBlockCoverage":false},{"functionName":"proto.<computed>","ranges":[{"startOffset":153113,"endOffset":153188,"count":0}],"isBlockCoverage":false},{"functionName":"createUnix","ranges":[{"startOffset":155596,"endOffset":155672,"count":0}],"isBlockCoverage":false},{"functionName":"createInZone","ranges":[{"startOffset":155678,"endOffset":155772,"count":0}],"isBlockCoverage":false},{"functionName":"preParsePostFormat","ranges":[{"startOffset":155778,"endOffset":155844,"count":0}],"isBlockCoverage":false},{"functionName":"get$1","ranges":[{"startOffset":157230,"endOffset":157409,"count":0}],"isBlockCoverage":false},{"functionName":"listMonthsImpl","ranges":[{"startOffset":157415,"endOffset":157857,"count":0}],"isBlockCoverage":false},{"functionName":"listWeekdaysImpl","ranges":[{"startOffset":157985,"endOffset":158906,"count":0}],"isBlockCoverage":false},{"functionName":"listMonths","ranges":[{"startOffset":158912,"endOffset":159010,"count":0}],"isBlockCoverage":false},{"functionName":"listMonthsShort","ranges":[{"startOffset":159016,"endOffset":159124,"count":0}],"isBlockCoverage":false},{"functionName":"listWeekdays","ranges":[{"startOffset":159130,"endOffset":159262,"count":0}],"isBlockCoverage":false},{"functionName":"listWeekdaysShort","ranges":[{"startOffset":159268,"endOffset":159410,"count":0}],"isBlockCoverage":false},{"functionName":"listWeekdaysMin","ranges":[{"startOffset":159416,"endOffset":159554,"count":0}],"isBlockCoverage":false},{"functionName":"ordinal","ranges":[{"startOffset":160133,"endOffset":160591,"count":0}],"isBlockCoverage":false},{"functionName":"abs","ranges":[{"startOffset":160921,"endOffset":161420,"count":0}],"isBlockCoverage":false},{"functionName":"addSubtract$1","ranges":[{"startOffset":161426,"endOffset":161751,"count":0}],"isBlockCoverage":false},{"functionName":"add$1","ranges":[{"startOffset":161817,"endOffset":161906,"count":0}],"isBlockCoverage":false},{"functionName":"subtract$1","ranges":[{"startOffset":161982,"endOffset":162077,"count":0}],"isBlockCoverage":false},{"functionName":"absCeil","ranges":[{"startOffset":162083,"endOffset":162245,"count":0}],"isBlockCoverage":false},{"functionName":"bubble","ranges":[{"startOffset":162251,"endOffset":163802,"count":0}],"isBlockCoverage":false},{"functionName":"daysToMonths","ranges":[{"startOffset":163808,"endOffset":164003,"count":0}],"isBlockCoverage":false},{"functionName":"monthsToDays","ranges":[{"startOffset":164009,"endOffset":164126,"count":0}],"isBlockCoverage":false},{"functionName":"as","ranges":[{"startOffset":164132,"endOffset":165734,"count":0}],"isBlockCoverage":false},{"functionName":"makeAs","ranges":[{"startOffset":165740,"endOffset":165845,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":165780,"endOffset":165838,"count":0}],"isBlockCoverage":false},{"functionName":"clone$1","ranges":[{"startOffset":166182,"endOffset":166245,"count":0}],"isBlockCoverage":false},{"functionName":"get$2","ranges":[{"startOffset":166251,"endOffset":166378,"count":0}],"isBlockCoverage":false},{"functionName":"makeGetter","ranges":[{"startOffset":166384,"endOffset":166517,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":166427,"endOffset":166510,"count":0}],"isBlockCoverage":false},{"functionName":"weeks","ranges":[{"startOffset":166805,"endOffset":166871,"count":0}],"isBlockCoverage":false},{"functionName":"substituteTimeAgo","ranges":[{"startOffset":167312,"endOffset":167479,"count":0}],"isBlockCoverage":false},{"functionName":"relativeTime$1","ranges":[{"startOffset":167485,"endOffset":168876,"count":0}],"isBlockCoverage":false},{"functionName":"getSetRelativeTimeRounding","ranges":[{"startOffset":168969,"endOffset":169261,"count":0}],"isBlockCoverage":false},{"functionName":"getSetRelativeTimeThreshold","ranges":[{"startOffset":169344,"endOffset":169722,"count":0}],"isBlockCoverage":false},{"functionName":"humanize","ranges":[{"startOffset":169728,"endOffset":170704,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":170737,"endOffset":170801,"count":0}],"isBlockCoverage":false},{"functionName":"toISOString$1","ranges":[{"startOffset":170807,"endOffset":172975,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":174434,"endOffset":174529,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":174555,"endOffset":174638,"count":0}],"isBlockCoverage":false}]},{"scriptId":"639","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/moment-timezone/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":114,"count":1}],"isBlockCoverage":true}]},{"scriptId":"640","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/moment-timezone/moment-timezone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17127,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":157,"endOffset":511,"count":1},{"startOffset":329,"endOffset":509,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":518,"endOffset":17123,"count":1},{"startOffset":626,"endOffset":643,"count":0},{"startOffset":645,"endOffset":676,"count":0},{"startOffset":1127,"endOffset":1239,"count":0},{"startOffset":1422,"endOffset":1551,"count":0},{"startOffset":17007,"endOffset":17087,"count":0}],"isBlockCoverage":true},{"functionName":"charCodeToInt","ranges":[{"startOffset":1645,"endOffset":1813,"count":3333},{"startOffset":1701,"endOffset":1731,"count":588},{"startOffset":1731,"endOffset":1786,"count":2745},{"startOffset":1756,"endOffset":1786,"count":344},{"startOffset":1786,"endOffset":1812,"count":2401}],"isBlockCoverage":true},{"functionName":"unpackBase60","ranges":[{"startOffset":1816,"endOffset":2460,"count":1519},{"startOffset":1937,"endOffset":1942,"count":1143},{"startOffset":2061,"endOffset":2090,"count":740},{"startOffset":2163,"endOffset":2238,"count":2957},{"startOffset":2319,"endOffset":2435,"count":376}],"isBlockCoverage":true},{"functionName":"arrayToInt","ranges":[{"startOffset":2463,"endOffset":2580,"count":351},{"startOffset":2534,"endOffset":2577,"count":1519}],"isBlockCoverage":true},{"functionName":"intToUntil","ranges":[{"startOffset":2583,"endOffset":2792,"count":0}],"isBlockCoverage":false},{"functionName":"mapIndices","ranges":[{"startOffset":2795,"endOffset":2949,"count":0}],"isBlockCoverage":false},{"functionName":"unpack","ranges":[{"startOffset":2952,"endOffset":3416,"count":0}],"isBlockCoverage":false},{"functionName":"Zone","ranges":[{"startOffset":3512,"endOffset":3607,"count":0}],"isBlockCoverage":false},{"functionName":"closest","ranges":[{"startOffset":3610,"endOffset":4044,"count":0}],"isBlockCoverage":false},{"functionName":"_set","ranges":[{"startOffset":4075,"endOffset":4292,"count":0}],"isBlockCoverage":false},{"functionName":"_index","ranges":[{"startOffset":4306,"endOffset":4462,"count":0}],"isBlockCoverage":false},{"functionName":"countries","ranges":[{"startOffset":4479,"endOffset":4667,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":4680,"endOffset":5287,"count":0}],"isBlockCoverage":false},{"functionName":"abbr","ranges":[{"startOffset":5299,"endOffset":5359,"count":0}],"isBlockCoverage":false},{"functionName":"offset","ranges":[{"startOffset":5373,"endOffset":5510,"count":0}],"isBlockCoverage":false},{"functionName":"utcOffset","ranges":[{"startOffset":5527,"endOffset":5589,"count":0}],"isBlockCoverage":false},{"functionName":"Country","ranges":[{"startOffset":5692,"endOffset":5795,"count":247}],"isBlockCoverage":true},{"functionName":"OffsetAt","ranges":[{"startOffset":5896,"endOffset":6465,"count":0}],"isBlockCoverage":false},{"functionName":"ZoneScore","ranges":[{"startOffset":6468,"endOffset":6563,"count":0}],"isBlockCoverage":false},{"functionName":"ZoneScore.scoreOffsetAt","ranges":[{"startOffset":6602,"endOffset":6813,"count":0}],"isBlockCoverage":false},{"functionName":"findChange","ranges":[{"startOffset":6817,"endOffset":7080,"count":0}],"isBlockCoverage":false},{"functionName":"userOffsets","ranges":[{"startOffset":7083,"endOffset":7911,"count":0}],"isBlockCoverage":false},{"functionName":"sortZoneScores","ranges":[{"startOffset":7914,"endOffset":8264,"count":0}],"isBlockCoverage":false},{"functionName":"addToGuesses","ranges":[{"startOffset":8267,"endOffset":8495,"count":351},{"startOffset":8386,"endOffset":8492,"count":1519},{"startOffset":8449,"endOffset":8454,"count":406}],"isBlockCoverage":true},{"functionName":"guessesForUserOffsets","ranges":[{"startOffset":8498,"endOffset":9134,"count":0}],"isBlockCoverage":false},{"functionName":"rebuildGuess","ranges":[{"startOffset":9137,"endOffset":10113,"count":0}],"isBlockCoverage":false},{"functionName":"guess","ranges":[{"startOffset":10116,"endOffset":10245,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeName","ranges":[{"startOffset":10344,"endOffset":10435,"count":841},{"startOffset":10391,"endOffset":10396,"count":0}],"isBlockCoverage":true},{"functionName":"addZone","ranges":[{"startOffset":10438,"endOffset":10813,"count":1},{"startOffset":10535,"endOffset":10562,"count":0},{"startOffset":10602,"endOffset":10810,"count":351}],"isBlockCoverage":true},{"functionName":"getZone","ranges":[{"startOffset":10816,"endOffset":11345,"count":0}],"isBlockCoverage":false},{"functionName":"getNames","ranges":[{"startOffset":11348,"endOffset":11548,"count":0}],"isBlockCoverage":false},{"functionName":"getCountryNames","ranges":[{"startOffset":11551,"endOffset":11616,"count":0}],"isBlockCoverage":false},{"functionName":"addLink","ranges":[{"startOffset":11619,"endOffset":12027,"count":1},{"startOffset":11718,"endOffset":11747,"count":0},{"startOffset":11788,"endOffset":12024,"count":245}],"isBlockCoverage":true},{"functionName":"addCountries","ranges":[{"startOffset":12030,"endOffset":12384,"count":1},{"startOffset":12135,"endOffset":12142,"count":0},{"startOffset":12179,"endOffset":12381,"count":247}],"isBlockCoverage":true},{"functionName":"getCountry","ranges":[{"startOffset":12387,"endOffset":12481,"count":0}],"isBlockCoverage":false},{"functionName":"zonesForCountry","ranges":[{"startOffset":12484,"endOffset":12845,"count":0}],"isBlockCoverage":false},{"functionName":"loadData","ranges":[{"startOffset":12848,"endOffset":12988,"count":1}],"isBlockCoverage":true},{"functionName":"zoneExists","ranges":[{"startOffset":12991,"endOffset":13239,"count":0}],"isBlockCoverage":false},{"functionName":"needsOffset","ranges":[{"startOffset":13242,"endOffset":13392,"count":0}],"isBlockCoverage":false},{"functionName":"logError","ranges":[{"startOffset":13395,"endOffset":13537,"count":0}],"isBlockCoverage":false},{"functionName":"tz","ranges":[{"startOffset":13641,"endOffset":13972,"count":0}],"isBlockCoverage":false},{"functionName":"moment.updateOffset","ranges":[{"startOffset":14811,"endOffset":15371,"count":0}],"isBlockCoverage":false},{"functionName":"fn.tz","ranges":[{"startOffset":15383,"endOffset":15845,"count":0}],"isBlockCoverage":false},{"functionName":"abbrWrap","ranges":[{"startOffset":15849,"endOffset":15978,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15884,"endOffset":15974,"count":0}],"isBlockCoverage":false},{"functionName":"resetZoneWrap","ranges":[{"startOffset":15981,"endOffset":16099,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16021,"endOffset":16095,"count":0}],"isBlockCoverage":false},{"functionName":"resetZoneWrap2","ranges":[{"startOffset":16102,"endOffset":16247,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16143,"endOffset":16243,"count":0}],"isBlockCoverage":false},{"functionName":"moment.tz.setDefault","ranges":[{"startOffset":16478,"endOffset":16741,"count":0}],"isBlockCoverage":false}]},{"scriptId":"641","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/utils/logger.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3126,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":407,"endOffset":544,"count":1},{"startOffset":439,"endOffset":525,"count":0}],"isBlockCoverage":true},{"functionName":"__spreadValues","ranges":[{"startOffset":567,"endOffset":864,"count":1},{"startOffset":600,"endOffset":611,"count":0},{"startOffset":617,"endOffset":689,"count":0},{"startOffset":762,"endOffset":850,"count":0}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":887,"endOffset":947,"count":3}],"isBlockCoverage":true},{"functionName":"__objRest","ranges":[{"startOffset":965,"endOffset":1369,"count":1},{"startOffset":1038,"endOffset":1138,"count":0},{"startOffset":1234,"endOffset":1350,"count":0}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":1386,"endOffset":1523,"count":1},{"startOffset":1459,"endOffset":1521,"count":2}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":1542,"endOffset":1920,"count":2},{"startOffset":1616,"endOffset":1648,"count":1},{"startOffset":1706,"endOffset":1897,"count":70},{"startOffset":1742,"endOffset":1762,"count":69},{"startOffset":1772,"endOffset":1897,"count":69}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1802,"endOffset":1820,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1939,"endOffset":2224,"count":2},{"startOffset":2049,"endOffset":2053,"count":0},{"startOffset":2096,"endOffset":2119,"count":0},{"startOffset":2120,"endOffset":2170,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2129,"endOffset":2150,"count":0}],"isBlockCoverage":false},{"functionName":"__publicField","ranges":[{"startOffset":2246,"endOffset":2359,"count":1},{"startOffset":2327,"endOffset":2332,"count":0}],"isBlockCoverage":true},{"functionName":"Logger","ranges":[{"startOffset":2391,"endOffset":2403,"count":0}],"isBlockCoverage":false},{"functionName":"logger","ranges":[{"startOffset":2415,"endOffset":2427,"count":7}],"isBlockCoverage":true},{"functionName":"Logger","ranges":[{"startOffset":2545,"endOffset":2753,"count":1}],"isBlockCoverage":true},{"functionName":"warn","ranges":[{"startOffset":2756,"endOffset":2841,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":2844,"endOffset":2960,"count":0}],"isBlockCoverage":false},{"functionName":"debugContext","ranges":[{"startOffset":2963,"endOffset":3059,"count":4}],"isBlockCoverage":true}]},{"scriptId":"642","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/utils/class-to-invokable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":608,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":60,"endOffset":120,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":137,"endOffset":274,"count":1}],"isBlockCoverage":true},{"functionName":"classToInvokable","ranges":[{"startOffset":316,"endOffset":338,"count":2}],"isBlockCoverage":true},{"functionName":"classToInvokable","ranges":[{"startOffset":343,"endOffset":560,"count":156}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":410,"endOffset":481,"count":1}],"isBlockCoverage":true},{"functionName":"construct","ranges":[{"startOffset":487,"endOffset":552,"count":45}],"isBlockCoverage":true}]},{"scriptId":"643","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/utils/join-sql-fragments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2307,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":61,"endOffset":198,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":221,"endOffset":281,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":298,"endOffset":435,"count":1},{"startOffset":371,"endOffset":433,"count":2}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":457,"endOffset":570,"count":0}],"isBlockCoverage":false},{"functionName":"JoinSQLFragmentsError","ranges":[{"startOffset":617,"endOffset":644,"count":0}],"isBlockCoverage":false},{"functionName":"joinSQLFragments","ranges":[{"startOffset":666,"endOffset":688,"count":2}],"isBlockCoverage":true},{"functionName":"doesNotWantLeadingSpace","ranges":[{"startOffset":693,"endOffset":763,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotWantTrailingSpace","ranges":[{"startOffset":764,"endOffset":832,"count":0}],"isBlockCoverage":false},{"functionName":"singleSpaceJoinHelper","ranges":[{"startOffset":833,"endOffset":1250,"count":0}],"isBlockCoverage":false},{"functionName":"joinSQLFragments","ranges":[{"startOffset":1251,"endOffset":1981,"count":0}],"isBlockCoverage":false},{"functionName":"JoinSQLFragmentsError","ranges":[{"startOffset":2032,"endOffset":2257,"count":0}],"isBlockCoverage":false}]},{"scriptId":"644","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/postgres/data-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13058,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":88,"endOffset":13017,"count":1}],"isBlockCoverage":true},{"functionName":"removeUnsupportedIntegerOptions","ranges":[{"startOffset":219,"endOffset":666,"count":2},{"startOffset":369,"endOffset":662,"count":0}],"isBlockCoverage":true},{"functionName":"_stringify","ranges":[{"startOffset":1085,"endOffset":1302,"count":0}],"isBlockCoverage":false},{"functionName":"_sanitize","ranges":[{"startOffset":1307,"endOffset":1759,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1771,"endOffset":1947,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2055,"endOffset":2095,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2196,"endOffset":2297,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2393,"endOffset":2593,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2695,"endOffset":2735,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2830,"endOffset":2931,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3038,"endOffset":3077,"count":0}],"isBlockCoverage":false},{"functionName":"_sanitize","ranges":[{"startOffset":3082,"endOffset":3553,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3694,"endOffset":3750,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":3755,"endOffset":3898,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":3903,"endOffset":4120,"count":0}],"isBlockCoverage":false},{"functionName":"_sanitize","ranges":[{"startOffset":4125,"endOffset":4609,"count":0}],"isBlockCoverage":false},{"functionName":"TINYINT","ranges":[{"startOffset":4713,"endOffset":4806,"count":0}],"isBlockCoverage":false},{"functionName":"SMALLINT","ranges":[{"startOffset":4908,"endOffset":5001,"count":0}],"isBlockCoverage":false},{"functionName":"INTEGER","ranges":[{"startOffset":5102,"endOffset":5195,"count":2}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":5218,"endOffset":5277,"count":0}],"isBlockCoverage":false},{"functionName":"BIGINT","ranges":[{"startOffset":5372,"endOffset":5465,"count":0}],"isBlockCoverage":false},{"functionName":"REAL","ranges":[{"startOffset":5558,"endOffset":5651,"count":0}],"isBlockCoverage":false},{"functionName":"DOUBLE","ranges":[{"startOffset":5748,"endOffset":5841,"count":0}],"isBlockCoverage":false},{"functionName":"FLOAT","ranges":[{"startOffset":5938,"endOffset":6554,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":6623,"endOffset":6833,"count":0}],"isBlockCoverage":false},{"functionName":"_hexify","ranges":[{"startOffset":6838,"endOffset":6889,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":6989,"endOffset":7215,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":7227,"endOffset":7356,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":7361,"endOffset":7472,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":7477,"endOffset":7575,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":7684,"endOffset":7913,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":7925,"endOffset":8054,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":8059,"endOffset":8170,"count":0}],"isBlockCoverage":false},{"functionName":"bindParam","ranges":[{"startOffset":8175,"endOffset":8272,"count":0}],"isBlockCoverage":false},{"functionName":"HSTORE","ranges":[{"startOffset":8391,"endOffset":8494,"count":0}],"isBlockCoverage":false},{"functionName":"_value","ranges":[{"startOffset":8499,"endOffset":8625,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":8630,"endOffset":8695,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":8700,"endOffset":8786,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":8798,"endOffset":8919,"count":0}],"isBlockCoverage":false},{"functionName":"_value","ranges":[{"startOffset":9051,"endOffset":9951,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":9956,"endOffset":10163,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":10168,"endOffset":10404,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":10409,"endOffset":10507,"count":0}],"isBlockCoverage":false},{"functionName":"toCastType","ranges":[{"startOffset":10512,"endOffset":10616,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":10628,"endOffset":10733,"count":0}],"isBlockCoverage":false},{"functionName":"_value","ranges":[{"startOffset":11233,"endOffset":11671,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":11714,"endOffset":12447,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":12490,"endOffset":12592,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":12643,"endOffset":12683,"count":0}],"isBlockCoverage":false}]},{"scriptId":"645","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/postgres/range.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2140,"count":1}],"isBlockCoverage":true},{"functionName":"stringifyRangeBound","ranges":[{"startOffset":43,"endOffset":255,"count":0}],"isBlockCoverage":false},{"functionName":"parseRangeBound","ranges":[{"startOffset":256,"endOffset":478,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":479,"endOffset":1610,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1642,"endOffset":2082,"count":0}],"isBlockCoverage":false}]},{"scriptId":"646","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/mysql/data-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3716,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":167,"endOffset":3675,"count":1}],"isBlockCoverage":true},{"functionName":"toSql","ranges":[{"startOffset":1285,"endOffset":1505,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":1552,"endOffset":1637,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":1642,"endOffset":1908,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1920,"endOffset":2249,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2311,"endOffset":2360,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2407,"endOffset":2454,"count":0}],"isBlockCoverage":false},{"functionName":"GEOMETRY","ranges":[{"startOffset":2580,"endOffset":2938,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2950,"endOffset":3171,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3176,"endOffset":3218,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3265,"endOffset":3373,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":3424,"endOffset":3563,"count":0}],"isBlockCoverage":false}]},{"scriptId":"647","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/mariadb/data-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3425,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":167,"endOffset":3384,"count":1}],"isBlockCoverage":true},{"functionName":"toSql","ranges":[{"startOffset":1328,"endOffset":1548,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":1595,"endOffset":1680,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":1685,"endOffset":1866,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1878,"endOffset":2207,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2269,"endOffset":2318,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2365,"endOffset":2412,"count":0}],"isBlockCoverage":false},{"functionName":"GEOMETRY","ranges":[{"startOffset":2467,"endOffset":2647,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2659,"endOffset":2880,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2885,"endOffset":2927,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2974,"endOffset":3082,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":3133,"endOffset":3272,"count":0}],"isBlockCoverage":false}]},{"scriptId":"648","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/sqlite/data-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4783,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":4742,"count":1},{"startOffset":4225,"endOffset":4266,"count":3},{"startOffset":4357,"endOffset":4412,"count":8}],"isBlockCoverage":true},{"functionName":"removeUnsupportedIntegerOptions","ranges":[{"startOffset":144,"endOffset":458,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1533,"endOffset":1583,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1637,"endOffset":1785,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1847,"endOffset":1885,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":1936,"endOffset":2067,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2114,"endOffset":2310,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2361,"endOffset":2412,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2459,"endOffset":2583,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2634,"endOffset":3030,"count":0}],"isBlockCoverage":false},{"functionName":"TINYINT","ranges":[{"startOffset":3083,"endOffset":3176,"count":0}],"isBlockCoverage":false},{"functionName":"SMALLINT","ranges":[{"startOffset":3231,"endOffset":3324,"count":0}],"isBlockCoverage":false},{"functionName":"MEDIUMINT","ranges":[{"startOffset":3381,"endOffset":3474,"count":0}],"isBlockCoverage":false},{"functionName":"INTEGER","ranges":[{"startOffset":3527,"endOffset":3620,"count":0}],"isBlockCoverage":false},{"functionName":"BIGINT","ranges":[{"startOffset":3671,"endOffset":3764,"count":0}],"isBlockCoverage":false},{"functionName":"parseFloating","ranges":[{"startOffset":3903,"endOffset":4176,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":4455,"endOffset":4491,"count":0}],"isBlockCoverage":false}]},{"scriptId":"649","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/mssql/data-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5318,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":65,"endOffset":5277,"count":1}],"isBlockCoverage":true},{"functionName":"removeUnsupportedIntegerOptions","ranges":[{"startOffset":210,"endOffset":630,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":1468,"endOffset":1877,"count":0}],"isBlockCoverage":false},{"functionName":"_hexify","ranges":[{"startOffset":1882,"endOffset":1927,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":1978,"endOffset":2112,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":2117,"endOffset":2270,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":2275,"endOffset":2384,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2466,"endOffset":2871,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2924,"endOffset":2959,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3006,"endOffset":3046,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3091,"endOffset":3132,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3179,"endOffset":3225,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":3287,"endOffset":3356,"count":0}],"isBlockCoverage":false},{"functionName":"INTEGER","ranges":[{"startOffset":3409,"endOffset":3502,"count":0}],"isBlockCoverage":false},{"functionName":"TINYINT","ranges":[{"startOffset":3555,"endOffset":3648,"count":0}],"isBlockCoverage":false},{"functionName":"SMALLINT","ranges":[{"startOffset":3703,"endOffset":3796,"count":0}],"isBlockCoverage":false},{"functionName":"BIGINT","ranges":[{"startOffset":3847,"endOffset":3940,"count":0}],"isBlockCoverage":false},{"functionName":"REAL","ranges":[{"startOffset":3987,"endOffset":4377,"count":0}],"isBlockCoverage":false},{"functionName":"FLOAT","ranges":[{"startOffset":4426,"endOffset":4994,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":5041,"endOffset":5085,"count":0}],"isBlockCoverage":false}]},{"scriptId":"650","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/db2/data-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8522,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":110,"endOffset":8481,"count":1}],"isBlockCoverage":true},{"functionName":"removeUnsupportedIntegerOptions","ranges":[{"startOffset":289,"endOffset":707,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":1671,"endOffset":2061,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":2066,"endOffset":2149,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":2154,"endOffset":2502,"count":0}],"isBlockCoverage":false},{"functionName":"_hexify","ranges":[{"startOffset":2507,"endOffset":2553,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2604,"endOffset":3012,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":3017,"endOffset":3183,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":3188,"endOffset":3297,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3379,"endOffset":4124,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":4177,"endOffset":4216,"count":0}],"isBlockCoverage":false},{"functionName":"_sanitize","ranges":[{"startOffset":4221,"endOffset":4738,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":4832,"endOffset":4885,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":4930,"endOffset":4974,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":5021,"endOffset":5232,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":5237,"endOffset":5625,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":5637,"endOffset":5859,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":5921,"endOffset":5992,"count":0}],"isBlockCoverage":false},{"functionName":"INTEGER","ranges":[{"startOffset":6045,"endOffset":6138,"count":0}],"isBlockCoverage":false},{"functionName":"TINYINT","ranges":[{"startOffset":6191,"endOffset":6284,"count":0}],"isBlockCoverage":false},{"functionName":"SMALLINT","ranges":[{"startOffset":6339,"endOffset":6432,"count":0}],"isBlockCoverage":false},{"functionName":"BIGINT","ranges":[{"startOffset":6483,"endOffset":6576,"count":0}],"isBlockCoverage":false},{"functionName":"REAL","ranges":[{"startOffset":6623,"endOffset":7011,"count":0}],"isBlockCoverage":false},{"functionName":"FLOAT","ranges":[{"startOffset":7060,"endOffset":7622,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":7669,"endOffset":7713,"count":0}],"isBlockCoverage":false},{"functionName":"DOUBLE","ranges":[{"startOffset":7764,"endOffset":8154,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":8159,"endOffset":8197,"count":0}],"isBlockCoverage":false}]},{"scriptId":"651","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/snowflake/data-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2668,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":110,"endOffset":2627,"count":1}],"isBlockCoverage":true},{"functionName":"toSql","ranges":[{"startOffset":1310,"endOffset":1351,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":1356,"endOffset":1622,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1634,"endOffset":1963,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2025,"endOffset":2074,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2121,"endOffset":2164,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2211,"endOffset":2247,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2300,"endOffset":2339,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":2390,"endOffset":2529,"count":0}],"isBlockCoverage":false}]},{"scriptId":"652","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/oracle/data-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10524,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":110,"endOffset":10483,"count":1}],"isBlockCoverage":true},{"functionName":"toSql","ranges":[{"startOffset":1313,"endOffset":1776,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":1781,"endOffset":1939,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":1944,"endOffset":2149,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":2154,"endOffset":2227,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2315,"endOffset":2354,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":2359,"endOffset":2446,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":2451,"endOffset":2543,"count":0}],"isBlockCoverage":false},{"functionName":"_sanitize","ranges":[{"startOffset":2548,"endOffset":2766,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2813,"endOffset":2857,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":2862,"endOffset":2953,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2998,"endOffset":3037,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":3042,"endOffset":3086,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3133,"endOffset":3178,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":3183,"endOffset":3275,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3322,"endOffset":3358,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":3363,"endOffset":3438,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3485,"endOffset":3670,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":3675,"endOffset":3877,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":3882,"endOffset":3955,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":4002,"endOffset":4064,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":4069,"endOffset":4153,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":4158,"endOffset":4428,"count":0}],"isBlockCoverage":false},{"functionName":"_applyTimezone","ranges":[{"startOffset":4433,"endOffset":4763,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":4775,"endOffset":5019,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":5024,"endOffset":5097,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":5183,"endOffset":5664,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":5669,"endOffset":5746,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":5799,"endOffset":5840,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":5845,"endOffset":5922,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":5977,"endOffset":6095,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":6100,"endOffset":6177,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":6234,"endOffset":6275,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":6280,"endOffset":6357,"count":0}],"isBlockCoverage":false},{"functionName":"BIGINT","ranges":[{"startOffset":6408,"endOffset":6864,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":6869,"endOffset":6911,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":6916,"endOffset":6993,"count":0}],"isBlockCoverage":false},{"functionName":"_sanitize","ranges":[{"startOffset":6998,"endOffset":7151,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":7202,"endOffset":7279,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":7332,"endOffset":7449,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":7454,"endOffset":7531,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":7580,"endOffset":7624,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":7629,"endOffset":7712,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":7759,"endOffset":7804,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":7809,"endOffset":8011,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":8016,"endOffset":8100,"count":0}],"isBlockCoverage":false},{"functionName":"_hexify","ranges":[{"startOffset":8147,"endOffset":8192,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":8197,"endOffset":8233,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":8238,"endOffset":8313,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":8364,"endOffset":8400,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":8405,"endOffset":8480,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":8485,"endOffset":8624,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":8629,"endOffset":8731,"count":0}],"isBlockCoverage":false},{"functionName":"DOUBLE","ranges":[{"startOffset":8782,"endOffset":9293,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":9298,"endOffset":9382,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":9387,"endOffset":9432,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":9487,"endOffset":9556,"count":0}],"isBlockCoverage":false},{"functionName":"_sanitize","ranges":[{"startOffset":9561,"endOffset":9683,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":9688,"endOffset":9884,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":9889,"endOffset":9964,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":9969,"endOffset":10140,"count":0}],"isBlockCoverage":false}]},{"scriptId":"653","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/sql-string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3352,"count":1}],"isBlockCoverage":true},{"functionName":"arrayToList","ranges":[{"startOffset":103,"endOffset":442,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":478,"endOffset":2465,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":2491,"endOffset":2828,"count":0}],"isBlockCoverage":false},{"functionName":"formatNamedParameters","ranges":[{"startOffset":2854,"endOffset":3257,"count":0}],"isBlockCoverage":false}]},{"scriptId":"654","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/lodash/_baseIsNative.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1417,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsNative","ranges":[{"startOffset":1182,"endOffset":1384,"count":0}],"isBlockCoverage":false}]},{"scriptId":"655","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/lodash/isFunction.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":993,"count":1}],"isBlockCoverage":true},{"functionName":"isFunction","ranges":[{"startOffset":617,"endOffset":962,"count":0}],"isBlockCoverage":false}]},{"scriptId":"656","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/lodash/_baseGetTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":792,"count":1},{"startOffset":328,"endOffset":339,"count":0}],"isBlockCoverage":true},{"functionName":"baseGetTag","ranges":[{"startOffset":534,"endOffset":761,"count":0}],"isBlockCoverage":false}]},{"scriptId":"657","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/lodash/_Symbol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":118,"count":1}],"isBlockCoverage":true}]},{"scriptId":"658","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/lodash/_root.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":300,"count":1},{"startOffset":119,"endOffset":126,"count":0},{"startOffset":127,"endOffset":152,"count":0},{"startOffset":153,"endOffset":160,"count":0},{"startOffset":234,"endOffset":245,"count":0},{"startOffset":246,"endOffset":274,"count":0}],"isBlockCoverage":true}]},{"scriptId":"659","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/lodash/_freeGlobal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":173,"count":1}],"isBlockCoverage":true}]},{"scriptId":"660","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/lodash/_getRawTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1139,"count":1},{"startOffset":488,"endOffset":499,"count":0}],"isBlockCoverage":true},{"functionName":"getRawTag","ranges":[{"startOffset":701,"endOffset":1109,"count":0}],"isBlockCoverage":false}]},{"scriptId":"661","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/lodash/_objectToString.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":565,"count":1}],"isBlockCoverage":true},{"functionName":"objectToString","ranges":[{"startOffset":453,"endOffset":530,"count":0}],"isBlockCoverage":false}]},{"scriptId":"662","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/lodash/isObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":733,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":581,"endOffset":704,"count":0}],"isBlockCoverage":false}]},{"scriptId":"663","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/lodash/_isMasked.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":564,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":116,"endOffset":268,"count":1},{"startOffset":166,"endOffset":184,"count":0},{"startOffset":185,"endOffset":212,"count":0},{"startOffset":234,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"isMasked","ranges":[{"startOffset":461,"endOffset":535,"count":0}],"isBlockCoverage":false}]},{"scriptId":"664","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/lodash/_coreJsData.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":157,"count":1}],"isBlockCoverage":true}]},{"scriptId":"665","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/lodash/_toSource.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":556,"count":1}],"isBlockCoverage":true},{"functionName":"toSource","ranges":[{"startOffset":339,"endOffset":527,"count":0}],"isBlockCoverage":false}]},{"scriptId":"666","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/uuid/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1765,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":146,"endOffset":186,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":257,"endOffset":298,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":369,"endOffset":410,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":481,"endOffset":522,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":594,"endOffset":636,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":712,"endOffset":758,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":835,"endOffset":882,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":960,"endOffset":1008,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1082,"endOffset":1126,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1670,"endOffset":1765,"count":9},{"startOffset":1744,"endOffset":1762,"count":0}],"isBlockCoverage":true}]},{"scriptId":"667","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/uuid/dist/v1.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3618,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":233,"endOffset":328,"count":2},{"startOffset":307,"endOffset":325,"count":0}],"isBlockCoverage":true},{"functionName":"v1","ranges":[{"startOffset":627,"endOffset":3570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"668","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/uuid/dist/rng.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":549,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":162,"endOffset":257,"count":1},{"startOffset":230,"endOffset":235,"count":0}],"isBlockCoverage":true},{"functionName":"rng","ranges":[{"startOffset":370,"endOffset":549,"count":0}],"isBlockCoverage":false}]},{"scriptId":"669","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/uuid/dist/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1667,"count":1},{"startOffset":442,"endOffset":499,"count":256}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":174,"endOffset":269,"count":1},{"startOffset":248,"endOffset":266,"count":0}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":501,"endOffset":1612,"count":0}],"isBlockCoverage":false}]},{"scriptId":"670","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/uuid/dist/validate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":410,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":168,"endOffset":263,"count":1},{"startOffset":242,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":265,"endOffset":356,"count":0}],"isBlockCoverage":false}]},{"scriptId":"671","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/uuid/dist/regex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":267,"count":1}],"isBlockCoverage":true}]},{"scriptId":"672","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/uuid/dist/v3.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":414,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":218,"endOffset":313,"count":2},{"startOffset":292,"endOffset":310,"count":0}],"isBlockCoverage":true}]},{"scriptId":"673","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/uuid/dist/v35.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2008,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":275,"endOffset":370,"count":2},{"startOffset":349,"endOffset":367,"count":0}],"isBlockCoverage":true},{"functionName":"stringToBytes","ranges":[{"startOffset":372,"endOffset":580,"count":0}],"isBlockCoverage":false},{"functionName":"_default","ranges":[{"startOffset":725,"endOffset":2008,"count":2}],"isBlockCoverage":true},{"functionName":"generateUUID","ranges":[{"startOffset":772,"endOffset":1736,"count":0}],"isBlockCoverage":false}]},{"scriptId":"674","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/uuid/dist/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1380,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":174,"endOffset":269,"count":1},{"startOffset":248,"endOffset":266,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":271,"endOffset":1329,"count":0}],"isBlockCoverage":false}]},{"scriptId":"675","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/uuid/dist/md5.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":550,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":165,"endOffset":260,"count":1},{"startOffset":233,"endOffset":238,"count":0}],"isBlockCoverage":true},{"functionName":"md5","ranges":[{"startOffset":262,"endOffset":501,"count":0}],"isBlockCoverage":false}]},{"scriptId":"676","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/uuid/dist/v4.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":860,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":233,"endOffset":328,"count":2},{"startOffset":307,"endOffset":325,"count":0}],"isBlockCoverage":true},{"functionName":"v4","ranges":[{"startOffset":330,"endOffset":812,"count":0}],"isBlockCoverage":false}]},{"scriptId":"677","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/uuid/dist/v5.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":417,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":220,"endOffset":315,"count":2},{"startOffset":294,"endOffset":312,"count":0}],"isBlockCoverage":true}]},{"scriptId":"678","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/uuid/dist/sha1.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":553,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":165,"endOffset":260,"count":1},{"startOffset":233,"endOffset":238,"count":0}],"isBlockCoverage":true},{"functionName":"sha1","ranges":[{"startOffset":262,"endOffset":503,"count":0}],"isBlockCoverage":false}]},{"scriptId":"679","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/uuid/dist/nil.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":188,"count":1}],"isBlockCoverage":true}]},{"scriptId":"680","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/uuid/dist/version.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":474,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":174,"endOffset":269,"count":1},{"startOffset":248,"endOffset":266,"count":0}],"isBlockCoverage":true},{"functionName":"version","ranges":[{"startOffset":271,"endOffset":421,"count":0}],"isBlockCoverage":false}]},{"scriptId":"681","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/operators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1741,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":60,"endOffset":120,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":137,"endOffset":274,"count":1},{"startOffset":210,"endOffset":272,"count":2}],"isBlockCoverage":true},{"functionName":"Op","ranges":[{"startOffset":302,"endOffset":310,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":323,"endOffset":346,"count":0}],"isBlockCoverage":false}]},{"scriptId":"682","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/inflection/lib/inflection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31406,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":158,"endOffset":386,"count":1},{"startOffset":221,"endOffset":234,"count":0},{"startOffset":236,"endOffset":267,"count":0},{"startOffset":342,"endOffset":384,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":394,"endOffset":31402,"count":1}],"isBlockCoverage":true},{"functionName":"_apply_rules","ranges":[{"startOffset":16280,"endOffset":16836,"count":2},{"startOffset":16341,"endOffset":16374,"count":0},{"startOffset":16562,"endOffset":16793,"count":123},{"startOffset":16608,"endOffset":16781,"count":1}],"isBlockCoverage":true},{"functionName":"indexOf","ranges":[{"startOffset":17529,"endOffset":17913,"count":2},{"startOffset":17746,"endOffset":17886,"count":406},{"startOffset":17795,"endOffset":17828,"count":0},{"startOffset":17829,"endOffset":17878,"count":0}],"isBlockCoverage":true},{"functionName":"pluralize","ranges":[{"startOffset":18569,"endOffset":18685,"count":1}],"isBlockCoverage":true},{"functionName":"singularize","ranges":[{"startOffset":19357,"endOffset":19479,"count":1}],"isBlockCoverage":true},{"functionName":"inflect","ranges":[{"startOffset":20652,"endOffset":21003,"count":0}],"isBlockCoverage":false},{"functionName":"camelize","ranges":[{"startOffset":21741,"endOffset":22495,"count":0}],"isBlockCoverage":false},{"functionName":"underscore","ranges":[{"startOffset":23273,"endOffset":23705,"count":0}],"isBlockCoverage":false},{"functionName":"humanize","ranges":[{"startOffset":24384,"endOffset":24642,"count":0}],"isBlockCoverage":false},{"functionName":"capitalize","ranges":[{"startOffset":25155,"endOffset":25281,"count":0}],"isBlockCoverage":false},{"functionName":"dasherize","ranges":[{"startOffset":25766,"endOffset":25841,"count":0}],"isBlockCoverage":false},{"functionName":"titleize","ranges":[{"startOffset":26338,"endOffset":27002,"count":0}],"isBlockCoverage":false},{"functionName":"demodulize","ranges":[{"startOffset":27415,"endOffset":27522,"count":0}],"isBlockCoverage":false},{"functionName":"tableize","ranges":[{"startOffset":27937,"endOffset":28060,"count":0}],"isBlockCoverage":false},{"functionName":"classify","ranges":[{"startOffset":28483,"endOffset":28606,"count":0}],"isBlockCoverage":false},{"functionName":"foreign_key","ranges":[{"startOffset":29309,"endOffset":29494,"count":0}],"isBlockCoverage":false},{"functionName":"ordinalize","ranges":[{"startOffset":29891,"endOffset":30631,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":31062,"endOffset":31322,"count":0}],"isBlockCoverage":false}]},{"scriptId":"683","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/model.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":113012,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":341,"endOffset":478,"count":19},{"startOffset":373,"endOffset":459,"count":1},{"startOffset":460,"endOffset":478,"count":18}],"isBlockCoverage":true},{"functionName":"__spreadValues","ranges":[{"startOffset":501,"endOffset":798,"count":5},{"startOffset":534,"endOffset":545,"count":2},{"startOffset":551,"endOffset":623,"count":19},{"startOffset":696,"endOffset":784,"count":0}],"isBlockCoverage":true},{"functionName":"__spreadProps","ranges":[{"startOffset":820,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"get queryInterface","ranges":[{"startOffset":2218,"endOffset":2291,"count":1}],"isBlockCoverage":true},{"functionName":"get queryGenerator","ranges":[{"startOffset":2301,"endOffset":2374,"count":1}],"isBlockCoverage":true},{"functionName":"get sequelize","ranges":[{"startOffset":2377,"endOffset":2437,"count":0}],"isBlockCoverage":false},{"functionName":"Model","ranges":[{"startOffset":2440,"endOffset":4151,"count":0}],"isBlockCoverage":false},{"functionName":"_initValues","ranges":[{"startOffset":4154,"endOffset":6334,"count":0}],"isBlockCoverage":false},{"functionName":"_paranoidClause","ranges":[{"startOffset":6344,"endOffset":7603,"count":0}],"isBlockCoverage":false},{"functionName":"_addDefaultAttributes","ranges":[{"startOffset":7613,"endOffset":9286,"count":1},{"startOffset":7730,"endOffset":8131,"count":0},{"startOffset":8575,"endOffset":8702,"count":0},{"startOffset":8735,"endOffset":8903,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9012,"endOffset":9131,"count":2}],"isBlockCoverage":true},{"functionName":"getAttributes","ranges":[{"startOffset":9296,"endOffset":9348,"count":0}],"isBlockCoverage":false},{"functionName":"_findAutoIncrementAttribute","ranges":[{"startOffset":9358,"endOffset":9887,"count":1},{"startOffset":9473,"endOffset":9883,"count":16},{"startOffset":9656,"endOffset":9869,"count":1},{"startOffset":9701,"endOffset":9813,"count":0}],"isBlockCoverage":true},{"functionName":"_conformIncludes","ranges":[{"startOffset":9897,"endOffset":10245,"count":0}],"isBlockCoverage":false},{"functionName":"_transformStringAssociation","ranges":[{"startOffset":10255,"endOffset":10599,"count":0}],"isBlockCoverage":false},{"functionName":"_conformInclude","ranges":[{"startOffset":10609,"endOffset":12115,"count":0}],"isBlockCoverage":false},{"functionName":"_expandIncludeAllElement","ranges":[{"startOffset":12125,"endOffset":14413,"count":0}],"isBlockCoverage":false},{"functionName":"_validateIncludedElements","ranges":[{"startOffset":14423,"endOffset":17524,"count":0}],"isBlockCoverage":false},{"functionName":"_validateIncludedElement","ranges":[{"startOffset":17534,"endOffset":21136,"count":0}],"isBlockCoverage":false},{"functionName":"_getIncludedAssociation","ranges":[{"startOffset":21146,"endOffset":22598,"count":0}],"isBlockCoverage":false},{"functionName":"_expandIncludeAll","ranges":[{"startOffset":22608,"endOffset":23070,"count":0}],"isBlockCoverage":false},{"functionName":"_conformIndex","ranges":[{"startOffset":23080,"endOffset":23424,"count":0}],"isBlockCoverage":false},{"functionName":"_uniqIncludes","ranges":[{"startOffset":23434,"endOffset":23681,"count":0}],"isBlockCoverage":false},{"functionName":"_baseMerge","ranges":[{"startOffset":23691,"endOffset":23838,"count":0}],"isBlockCoverage":false},{"functionName":"_mergeFunction","ranges":[{"startOffset":23848,"endOffset":24855,"count":0}],"isBlockCoverage":false},{"functionName":"_assignOptions","ranges":[{"startOffset":24865,"endOffset":24963,"count":0}],"isBlockCoverage":false},{"functionName":"_defaultsOptions","ranges":[{"startOffset":24973,"endOffset":25148,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":25158,"endOffset":30553,"count":1},{"startOffset":25219,"endOffset":25281,"count":0},{"startOffset":25892,"endOffset":25972,"count":0},{"startOffset":26427,"endOffset":26530,"count":0},{"startOffset":26678,"endOffset":26818,"count":0},{"startOffset":27575,"endOffset":27739,"count":0},{"startOffset":28808,"endOffset":29164,"count":3},{"startOffset":28894,"endOffset":29024,"count":0},{"startOffset":29063,"endOffset":29156,"count":0},{"startOffset":29300,"endOffset":29324,"count":0},{"startOffset":29558,"endOffset":29582,"count":0},{"startOffset":29713,"endOffset":29748,"count":0},{"startOffset":29750,"endOffset":29963,"count":0},{"startOffset":30000,"endOffset":30175,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27006,"endOffset":27480,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27789,"endOffset":28429,"count":14},{"startOffset":27913,"endOffset":28009,"count":0},{"startOffset":28050,"endOffset":28089,"count":9},{"startOffset":28091,"endOffset":28234,"count":0},{"startOffset":28310,"endOffset":28399,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28520,"endOffset":28584,"count":0}],"isBlockCoverage":false},{"functionName":"refreshAttributes","ranges":[{"startOffset":30563,"endOffset":36760,"count":1},{"startOffset":35839,"endOffset":36113,"count":16},{"startOffset":35911,"endOffset":36029,"count":0},{"startOffset":36525,"endOffset":36552,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30730,"endOffset":32031,"count":2},{"startOffset":30877,"endOffset":30908,"count":1},{"startOffset":30909,"endOffset":30940,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30962,"endOffset":31313,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31349,"endOffset":31787,"count":32},{"startOffset":31440,"endOffset":31497,"count":0},{"startOffset":31526,"endOffset":31632,"count":16},{"startOffset":31661,"endOffset":31779,"count":16}],"isBlockCoverage":true},{"functionName":"funcs.<computed>","ranges":[{"startOffset":31557,"endOffset":31621,"count":0}],"isBlockCoverage":false},{"functionName":"funcs.<computed>","ranges":[{"startOffset":31692,"endOffset":31768,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31810,"endOffset":32023,"count":32},{"startOffset":31869,"endOffset":31966,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32476,"endOffset":35108,"count":16},{"startOffset":32845,"endOffset":32899,"count":1},{"startOffset":33002,"endOffset":33079,"count":4},{"startOffset":33118,"endOffset":33193,"count":2},{"startOffset":33250,"endOffset":33302,"count":2},{"startOffset":33302,"endOffset":33663,"count":14},{"startOffset":33354,"endOffset":33402,"count":12},{"startOffset":33404,"endOffset":33453,"count":2},{"startOffset":33453,"endOffset":33663,"count":12},{"startOffset":33506,"endOffset":33555,"count":0},{"startOffset":33611,"endOffset":33663,"count":0},{"startOffset":33740,"endOffset":33870,"count":3},{"startOffset":33940,"endOffset":33960,"count":0},{"startOffset":33962,"endOffset":34663,"count":0},{"startOffset":34736,"endOffset":34808,"count":0},{"startOffset":34845,"endOffset":34890,"count":0},{"startOffset":34892,"endOffset":35102,"count":0}],"isBlockCoverage":true},{"functionName":"_defaultValues.<computed>","ranges":[{"startOffset":33778,"endOffset":33861,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":35177,"endOffset":35304,"count":16},{"startOffset":35235,"endOffset":35280,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":35553,"endOffset":35598,"count":16}],"isBlockCoverage":true},{"functionName":"_isAttribute","ranges":[{"startOffset":36203,"endOffset":36283,"count":0}],"isBlockCoverage":false},{"functionName":"_isPrimaryKey","ranges":[{"startOffset":36650,"endOffset":36698,"count":0}],"isBlockCoverage":false},{"functionName":"removeAttribute","ranges":[{"startOffset":36770,"endOffset":36874,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":36884,"endOffset":40727,"count":0}],"isBlockCoverage":false},{"functionName":"drop","ranges":[{"startOffset":40737,"endOffset":40847,"count":0}],"isBlockCoverage":false},{"functionName":"dropSchema","ranges":[{"startOffset":40857,"endOffset":40944,"count":0}],"isBlockCoverage":false},{"functionName":"schema","ranges":[{"startOffset":40954,"endOffset":41357,"count":0}],"isBlockCoverage":false},{"functionName":"getTableName","ranges":[{"startOffset":41367,"endOffset":41435,"count":1}],"isBlockCoverage":true},{"functionName":"unscoped","ranges":[{"startOffset":41445,"endOffset":41486,"count":0}],"isBlockCoverage":false},{"functionName":"addScope","ranges":[{"startOffset":41496,"endOffset":42016,"count":0}],"isBlockCoverage":false},{"functionName":"scope","ranges":[{"startOffset":42026,"endOffset":43603,"count":0}],"isBlockCoverage":false},{"functionName":"findAll","ranges":[{"startOffset":43613,"endOffset":46706,"count":0}],"isBlockCoverage":false},{"functionName":"warnOnInvalidOptions","ranges":[{"startOffset":46716,"endOffset":47301,"count":0}],"isBlockCoverage":false},{"functionName":"_injectDependentVirtualAttributes","ranges":[{"startOffset":47311,"endOffset":47796,"count":0}],"isBlockCoverage":false},{"functionName":"_findSeparate","ranges":[{"startOffset":47806,"endOffset":49172,"count":0}],"isBlockCoverage":false},{"functionName":"findByPk","ranges":[{"startOffset":49182,"endOffset":49661,"count":0}],"isBlockCoverage":false},{"functionName":"findOne","ranges":[{"startOffset":49671,"endOffset":50638,"count":0}],"isBlockCoverage":false},{"functionName":"aggregate","ranges":[{"startOffset":50648,"endOffset":52140,"count":0}],"isBlockCoverage":false},{"functionName":"count","ranges":[{"startOffset":52150,"endOffset":53249,"count":0}],"isBlockCoverage":false},{"functionName":"findAndCountAll","ranges":[{"startOffset":53259,"endOffset":53827,"count":0}],"isBlockCoverage":false},{"functionName":"max","ranges":[{"startOffset":53837,"endOffset":53924,"count":0}],"isBlockCoverage":false},{"functionName":"min","ranges":[{"startOffset":53934,"endOffset":54021,"count":0}],"isBlockCoverage":false},{"functionName":"sum","ranges":[{"startOffset":54031,"endOffset":54118,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":54128,"endOffset":54279,"count":0}],"isBlockCoverage":false},{"functionName":"bulkBuild","ranges":[{"startOffset":54289,"endOffset":54822,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":54832,"endOffset":55117,"count":0}],"isBlockCoverage":false},{"functionName":"findOrBuild","ranges":[{"startOffset":55127,"endOffset":55810,"count":0}],"isBlockCoverage":false},{"functionName":"findOrCreate","ranges":[{"startOffset":55820,"endOffset":59212,"count":0}],"isBlockCoverage":false},{"functionName":"findCreateFind","ranges":[{"startOffset":59222,"endOffset":60209,"count":0}],"isBlockCoverage":false},{"functionName":"upsert","ranges":[{"startOffset":60219,"endOffset":62705,"count":0}],"isBlockCoverage":false},{"functionName":"bulkCreate","ranges":[{"startOffset":62715,"endOffset":74891,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":74901,"endOffset":75045,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":75055,"endOffset":77605,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":77615,"endOffset":79387,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":79397,"endOffset":84848,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":84858,"endOffset":85034,"count":0}],"isBlockCoverage":false},{"functionName":"_getDefaultTimestamp","ranges":[{"startOffset":85044,"endOffset":85288,"count":0}],"isBlockCoverage":false},{"functionName":"_expandAttributes","ranges":[{"startOffset":85298,"endOffset":85735,"count":0}],"isBlockCoverage":false},{"functionName":"_injectScope","ranges":[{"startOffset":85745,"endOffset":85863,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":85873,"endOffset":85945,"count":0}],"isBlockCoverage":false},{"functionName":"hasAlias","ranges":[{"startOffset":85955,"endOffset":86051,"count":0}],"isBlockCoverage":false},{"functionName":"increment","ranges":[{"startOffset":86061,"endOffset":88475,"count":0}],"isBlockCoverage":false},{"functionName":"decrement","ranges":[{"startOffset":88485,"endOffset":88651,"count":0}],"isBlockCoverage":false},{"functionName":"_optionsMustContainWhere","ranges":[{"startOffset":88661,"endOffset":88999,"count":0}],"isBlockCoverage":false},{"functionName":"where","ranges":[{"startOffset":89002,"endOffset":89534,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":89537,"endOffset":89619,"count":0}],"isBlockCoverage":false},{"functionName":"getDataValue","ranges":[{"startOffset":89622,"endOffset":89678,"count":0}],"isBlockCoverage":false},{"functionName":"setDataValue","ranges":[{"startOffset":89681,"endOffset":89883,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":89886,"endOffset":91449,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":91452,"endOffset":95081,"count":0}],"isBlockCoverage":false},{"functionName":"setAttributes","ranges":[{"startOffset":95084,"endOffset":95142,"count":0}],"isBlockCoverage":false},{"functionName":"changed","ranges":[{"startOffset":95145,"endOffset":95509,"count":0}],"isBlockCoverage":false},{"functionName":"previous","ranges":[{"startOffset":95512,"endOffset":95680,"count":0}],"isBlockCoverage":false},{"functionName":"_setInclude","ranges":[{"startOffset":95683,"endOffset":96978,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":96981,"endOffset":106325,"count":0}],"isBlockCoverage":false},{"functionName":"reload","ranges":[{"startOffset":106328,"endOffset":106865,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":106868,"endOffset":106957,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":106960,"endOffset":107885,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":107888,"endOffset":109404,"count":0}],"isBlockCoverage":false},{"functionName":"isSoftDeleted","ranges":[{"startOffset":109407,"endOffset":109947,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":109950,"endOffset":111095,"count":0}],"isBlockCoverage":false},{"functionName":"increment","ranges":[{"startOffset":111098,"endOffset":111397,"count":0}],"isBlockCoverage":false},{"functionName":"decrement","ranges":[{"startOffset":111400,"endOffset":111566,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":111569,"endOffset":111875,"count":0}],"isBlockCoverage":false},{"functionName":"equalsOneOf","ranges":[{"startOffset":111878,"endOffset":111958,"count":0}],"isBlockCoverage":false},{"functionName":"setValidators","ranges":[{"startOffset":111961,"endOffset":112048,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":112051,"endOffset":112126,"count":0}],"isBlockCoverage":false},{"functionName":"hasMany","ranges":[{"startOffset":112136,"endOffset":112166,"count":0}],"isBlockCoverage":false},{"functionName":"belongsToMany","ranges":[{"startOffset":112176,"endOffset":112212,"count":0}],"isBlockCoverage":false},{"functionName":"hasOne","ranges":[{"startOffset":112222,"endOffset":112251,"count":0}],"isBlockCoverage":false},{"functionName":"belongsTo","ranges":[{"startOffset":112261,"endOffset":112293,"count":0}],"isBlockCoverage":false},{"functionName":"unpackAnd","ranges":[{"startOffset":112296,"endOffset":112586,"count":0}],"isBlockCoverage":false},{"functionName":"combineWheresWithAnd","ranges":[{"startOffset":112587,"endOffset":112884,"count":0}],"isBlockCoverage":false}]},{"scriptId":"684","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/dottie/dottie.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6374,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":6369,"count":1},{"startOffset":6199,"endOffset":6367,"count":0}],"isBlockCoverage":true},{"functionName":"reverseDupArray","ranges":[{"startOffset":194,"endOffset":425,"count":0}],"isBlockCoverage":false},{"functionName":"Dottie","ranges":[{"startOffset":443,"endOffset":639,"count":0}],"isBlockCoverage":false},{"functionName":"Dottie.find","ranges":[{"startOffset":733,"endOffset":798,"count":0}],"isBlockCoverage":false},{"functionName":"Dottie.get","ranges":[{"startOffset":1007,"endOffset":1876,"count":0}],"isBlockCoverage":false},{"functionName":"Dottie.exists","ranges":[{"startOffset":1897,"endOffset":1976,"count":0}],"isBlockCoverage":false},{"functionName":"Dottie.set","ranges":[{"startOffset":2016,"endOffset":3394,"count":0}],"isBlockCoverage":false},{"functionName":"Dottie.default","ranges":[{"startOffset":3449,"endOffset":3579,"count":0}],"isBlockCoverage":false},{"functionName":"Dottie$transformfunction","ranges":[{"startOffset":3678,"endOffset":4923,"count":0}],"isBlockCoverage":false},{"functionName":"Dottie.flatten","ranges":[{"startOffset":4945,"endOffset":5536,"count":0}],"isBlockCoverage":false},{"functionName":"Dottie.paths","ranges":[{"startOffset":5556,"endOffset":6097,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6325,"endOffset":6355,"count":0}],"isBlockCoverage":false}]},{"scriptId":"685","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/associations/belongs-to.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6490,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":241,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadValues","ranges":[{"startOffset":401,"endOffset":698,"count":0}],"isBlockCoverage":false},{"functionName":"BelongsTo","ranges":[{"startOffset":919,"endOffset":2802,"count":0}],"isBlockCoverage":false},{"functionName":"_injectAttributes","ranges":[{"startOffset":2805,"endOffset":3759,"count":0}],"isBlockCoverage":false},{"functionName":"mixin","ranges":[{"startOffset":3762,"endOffset":3870,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3873,"endOffset":5335,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5338,"endOffset":5830,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":5833,"endOffset":6123,"count":0}],"isBlockCoverage":false},{"functionName":"verifyAssociationAlias","ranges":[{"startOffset":6126,"endOffset":6346,"count":0}],"isBlockCoverage":false}]},{"scriptId":"686","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/associations/helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1591,"count":1}],"isBlockCoverage":true},{"functionName":"checkNamingCollision","ranges":[{"startOffset":14,"endOffset":390,"count":0}],"isBlockCoverage":false},{"functionName":"addForeignKeyConstraints","ranges":[{"startOffset":444,"endOffset":1049,"count":0}],"isBlockCoverage":false},{"functionName":"mixinMethods","ranges":[{"startOffset":1111,"endOffset":1517,"count":0}],"isBlockCoverage":false}]},{"scriptId":"687","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/associations/base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1063,"count":1}],"isBlockCoverage":true},{"functionName":"Association","ranges":[{"startOffset":89,"endOffset":560,"count":0}],"isBlockCoverage":false},{"functionName":"toInstanceArray","ranges":[{"startOffset":563,"endOffset":924,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":927,"endOffset":997,"count":0}],"isBlockCoverage":false}]},{"scriptId":"688","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/associations/belongs-to-many.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23125,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":341,"endOffset":478,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadValues","ranges":[{"startOffset":501,"endOffset":798,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadProps","ranges":[{"startOffset":820,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"BelongsToMany","ranges":[{"startOffset":1337,"endOffset":6269,"count":0}],"isBlockCoverage":false},{"functionName":"_createForeignAndOtherKeys","ranges":[{"startOffset":6272,"endOffset":7239,"count":0}],"isBlockCoverage":false},{"functionName":"_injectAttributes","ranges":[{"startOffset":7242,"endOffset":12309,"count":0}],"isBlockCoverage":false},{"functionName":"mixin","ranges":[{"startOffset":12312,"endOffset":12642,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12645,"endOffset":14065,"count":0}],"isBlockCoverage":false},{"functionName":"count","ranges":[{"startOffset":14068,"endOffset":14509,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":14512,"endOffset":15357,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":15360,"endOffset":18424,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":18427,"endOffset":21571,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":21574,"endOffset":22094,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":22097,"endOffset":22741,"count":0}],"isBlockCoverage":false},{"functionName":"verifyAssociationAlias","ranges":[{"startOffset":22744,"endOffset":22960,"count":0}],"isBlockCoverage":false}]},{"scriptId":"689","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/associations/has-many.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11910,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":341,"endOffset":478,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadValues","ranges":[{"startOffset":501,"endOffset":798,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadProps","ranges":[{"startOffset":820,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"HasMany","ranges":[{"startOffset":1084,"endOffset":3638,"count":0}],"isBlockCoverage":false},{"functionName":"_injectAttributes","ranges":[{"startOffset":3641,"endOffset":4917,"count":0}],"isBlockCoverage":false},{"functionName":"mixin","ranges":[{"startOffset":4920,"endOffset":5250,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5253,"endOffset":6910,"count":0}],"isBlockCoverage":false},{"functionName":"count","ranges":[{"startOffset":6913,"endOffset":7308,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":7311,"endOffset":8090,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8093,"endOffset":9821,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":9824,"endOffset":10421,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":10424,"endOffset":10951,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":10954,"endOffset":11557,"count":0}],"isBlockCoverage":false},{"functionName":"verifyAssociationAlias","ranges":[{"startOffset":11560,"endOffset":11776,"count":0}],"isBlockCoverage":false}]},{"scriptId":"690","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/associations/has-one.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7518,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":341,"endOffset":478,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadValues","ranges":[{"startOffset":501,"endOffset":798,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadProps","ranges":[{"startOffset":820,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"HasOne","ranges":[{"startOffset":1083,"endOffset":2953,"count":0}],"isBlockCoverage":false},{"functionName":"_injectAttributes","ranges":[{"startOffset":2956,"endOffset":3908,"count":0}],"isBlockCoverage":false},{"functionName":"mixin","ranges":[{"startOffset":3911,"endOffset":4019,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4022,"endOffset":5389,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5392,"endOffset":6690,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":6693,"endOffset":7231,"count":0}],"isBlockCoverage":false},{"functionName":"verifyAssociationAlias","ranges":[{"startOffset":7234,"endOffset":7454,"count":0}],"isBlockCoverage":false}]},{"scriptId":"691","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/instance-validator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8825,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":241,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadValues","ranges":[{"startOffset":401,"endOffset":698,"count":0}],"isBlockCoverage":false},{"functionName":"InstanceValidator","ranges":[{"startOffset":1038,"endOffset":1504,"count":0}],"isBlockCoverage":false},{"functionName":"_validate","ranges":[{"startOffset":1507,"endOffset":1846,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":1849,"endOffset":1959,"count":0}],"isBlockCoverage":false},{"functionName":"_validateAndRunHooks","ranges":[{"startOffset":1962,"endOffset":2468,"count":0}],"isBlockCoverage":false},{"functionName":"_perAttributeValidators","ranges":[{"startOffset":2471,"endOffset":3187,"count":0}],"isBlockCoverage":false},{"functionName":"_customValidators","ranges":[{"startOffset":3190,"endOffset":3603,"count":0}],"isBlockCoverage":false},{"functionName":"_singleAttrValidate","ranges":[{"startOffset":3606,"endOffset":4798,"count":0}],"isBlockCoverage":false},{"functionName":"_invokeCustomValidator","ranges":[{"startOffset":4801,"endOffset":5741,"count":0}],"isBlockCoverage":false},{"functionName":"_invokeBuiltinValidator","ranges":[{"startOffset":5744,"endOffset":6293,"count":0}],"isBlockCoverage":false},{"functionName":"_extractValidatorArgs","ranges":[{"startOffset":6296,"endOffset":6942,"count":0}],"isBlockCoverage":false},{"functionName":"_validateSchema","ranges":[{"startOffset":6945,"endOffset":8178,"count":0}],"isBlockCoverage":false},{"functionName":"_pushError","ranges":[{"startOffset":8181,"endOffset":8596,"count":0}],"isBlockCoverage":false}]},{"scriptId":"692","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/query-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":436,"count":1}],"isBlockCoverage":true}]},{"scriptId":"693","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/hooks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4849,"count":1}],"isBlockCoverage":true},{"functionName":"getProxiedHooks","ranges":[{"startOffset":2005,"endOffset":2106,"count":0}],"isBlockCoverage":false},{"functionName":"getHooks","ranges":[{"startOffset":2108,"endOffset":2202,"count":5},{"startOffset":2177,"endOffset":2182,"count":0}],"isBlockCoverage":true},{"functionName":"_setupHooks","ranges":[{"startOffset":2221,"endOffset":2476,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2294,"endOffset":2470,"count":0}],"isBlockCoverage":false},{"functionName":"runHooks","ranges":[{"startOffset":2480,"endOffset":3356,"count":5},{"startOffset":2539,"endOffset":2596,"count":0},{"startOffset":2742,"endOffset":2817,"count":0},{"startOffset":2855,"endOffset":2885,"count":0},{"startOffset":2943,"endOffset":3165,"count":4},{"startOffset":2975,"endOffset":3145,"count":0},{"startOffset":3165,"endOffset":3194,"count":1},{"startOffset":3194,"endOffset":3352,"count":0},{"startOffset":3352,"endOffset":3355,"count":1}],"isBlockCoverage":true},{"functionName":"addHook","ranges":[{"startOffset":3360,"endOffset":3737,"count":0}],"isBlockCoverage":false},{"functionName":"removeHook","ranges":[{"startOffset":3741,"endOffset":4350,"count":0}],"isBlockCoverage":false},{"functionName":"hasHook","ranges":[{"startOffset":4354,"endOffset":4459,"count":0}],"isBlockCoverage":false},{"functionName":"applyTo","ranges":[{"startOffset":4495,"endOffset":4787,"count":3},{"startOffset":4610,"endOffset":4785,"count":138},{"startOffset":4628,"endOffset":4654,"count":46},{"startOffset":4656,"endOffset":4679,"count":10},{"startOffset":4679,"endOffset":4785,"count":128}],"isBlockCoverage":true},{"functionName":"target.<computed>","ranges":[{"startOffset":4699,"endOffset":4780,"count":0}],"isBlockCoverage":false}]},{"scriptId":"694","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/associations/mixin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3739,"count":1}],"isBlockCoverage":true},{"functionName":"isModel","ranges":[{"startOffset":214,"endOffset":343,"count":0}],"isBlockCoverage":false},{"functionName":"hasMany","ranges":[{"startOffset":362,"endOffset":1246,"count":0}],"isBlockCoverage":false},{"functionName":"belongsToMany","ranges":[{"startOffset":1250,"endOffset":2317,"count":0}],"isBlockCoverage":false},{"functionName":"getAssociations","ranges":[{"startOffset":2321,"endOffset":2460,"count":0}],"isBlockCoverage":false},{"functionName":"getAssociationForAlias","ranges":[{"startOffset":2464,"endOffset":2621,"count":0}],"isBlockCoverage":false},{"functionName":"singleLinked","ranges":[{"startOffset":2625,"endOffset":3538,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2664,"endOffset":3535,"count":0}],"isBlockCoverage":false}]},{"scriptId":"695","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/utils/deprecations.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2577,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1},{"startOffset":442,"endOffset":504,"count":5}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":44}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":5}],"isBlockCoverage":true},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1079,"endOffset":1102,"count":0},{"startOffset":1103,"endOffset":1153,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":0}],"isBlockCoverage":false},{"functionName":"noBoolOperatorAliases","ranges":[{"startOffset":1254,"endOffset":1281,"count":0}],"isBlockCoverage":false},{"functionName":"noDoubleNestedGroup","ranges":[{"startOffset":1306,"endOffset":1331,"count":1}],"isBlockCoverage":true},{"functionName":"noStringOperators","ranges":[{"startOffset":1354,"endOffset":1377,"count":0}],"isBlockCoverage":false},{"functionName":"noTrueLogging","ranges":[{"startOffset":1396,"endOffset":1415,"count":0}],"isBlockCoverage":false},{"functionName":"unsupportedEngine","ranges":[{"startOffset":1438,"endOffset":1461,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":1526,"endOffset":1535,"count":0}],"isBlockCoverage":false}]},{"scriptId":"696","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/deferrable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1344,"count":1}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":89,"endOffset":153,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":156,"endOffset":211,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":214,"endOffset":280,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":329,"endOffset":386,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":436,"endOffset":494,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":528,"endOffset":570,"count":0}],"isBlockCoverage":false},{"functionName":"SET_DEFERRED","ranges":[{"startOffset":613,"endOffset":692,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":695,"endOffset":784,"count":0}],"isBlockCoverage":false},{"functionName":"SET_IMMEDIATE","ranges":[{"startOffset":828,"endOffset":907,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":910,"endOffset":1000,"count":0}],"isBlockCoverage":false}]},{"scriptId":"697","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/model-manager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2530,"count":1}],"isBlockCoverage":true},{"functionName":"ModelManager","ranges":[{"startOffset":110,"endOffset":192,"count":1}],"isBlockCoverage":true},{"functionName":"addModel","ranges":[{"startOffset":195,"endOffset":310,"count":1}],"isBlockCoverage":true},{"functionName":"removeModel","ranges":[{"startOffset":313,"endOffset":483,"count":0}],"isBlockCoverage":false},{"functionName":"getModel","ranges":[{"startOffset":486,"endOffset":670,"count":0}],"isBlockCoverage":false},{"functionName":"findModel","ranges":[{"startOffset":673,"endOffset":737,"count":0}],"isBlockCoverage":false},{"functionName":"get all","ranges":[{"startOffset":740,"endOffset":779,"count":0}],"isBlockCoverage":false},{"functionName":"getModelsTopoSortedByForeignKey","ranges":[{"startOffset":782,"endOffset":1975,"count":0}],"isBlockCoverage":false},{"functionName":"forEachModel","ranges":[{"startOffset":1978,"endOffset":2371,"count":0}],"isBlockCoverage":false}]},{"scriptId":"698","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/toposort-class/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":51,"count":1}],"isBlockCoverage":true}]},{"scriptId":"699","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/toposort-class/build/toposort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11111,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1172,"endOffset":1589,"count":1},{"startOffset":1239,"endOffset":1252,"count":0},{"startOffset":1255,"endOffset":1324,"count":0},{"startOffset":1443,"endOffset":1587,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1598,"endOffset":11107,"count":1}],"isBlockCoverage":true},{"functionName":"_classCallCheck","ranges":[{"startOffset":1651,"endOffset":1841,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1863,"endOffset":11069,"count":1}],"isBlockCoverage":true},{"functionName":"Toposort","ranges":[{"startOffset":1884,"endOffset":2030,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":2417,"endOffset":3946,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":4188,"endOffset":10759,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":10953,"endOffset":11036,"count":0}],"isBlockCoverage":false}]},{"scriptId":"700","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/transaction.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5852,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":241,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadValues","ranges":[{"startOffset":401,"endOffset":698,"count":0}],"isBlockCoverage":false},{"functionName":"Transaction","ranges":[{"startOffset":722,"endOffset":1440,"count":0}],"isBlockCoverage":false},{"functionName":"commit","ranges":[{"startOffset":1443,"endOffset":2121,"count":0}],"isBlockCoverage":false},{"functionName":"rollback","ranges":[{"startOffset":2124,"endOffset":2782,"count":0}],"isBlockCoverage":false},{"functionName":"prepareEnvironment","ranges":[{"startOffset":2785,"endOffset":3675,"count":0}],"isBlockCoverage":false},{"functionName":"setDeferrable","ranges":[{"startOffset":3678,"endOffset":3838,"count":0}],"isBlockCoverage":false},{"functionName":"begin","ranges":[{"startOffset":3841,"endOffset":4329,"count":0}],"isBlockCoverage":false},{"functionName":"cleanup","ranges":[{"startOffset":4332,"endOffset":4555,"count":0}],"isBlockCoverage":false},{"functionName":"forceCleanup","ranges":[{"startOffset":4558,"endOffset":4798,"count":0}],"isBlockCoverage":false},{"functionName":"_clearCls","ranges":[{"startOffset":4801,"endOffset":4979,"count":0}],"isBlockCoverage":false},{"functionName":"afterCommit","ranges":[{"startOffset":4982,"endOffset":5139,"count":0}],"isBlockCoverage":false},{"functionName":"get TYPES","ranges":[{"startOffset":5149,"endOffset":5273,"count":1}],"isBlockCoverage":true},{"functionName":"get ISOLATION_LEVELS","ranges":[{"startOffset":5283,"endOffset":5492,"count":0}],"isBlockCoverage":false},{"functionName":"get LOCK","ranges":[{"startOffset":5502,"endOffset":5651,"count":0}],"isBlockCoverage":false},{"functionName":"get LOCK","ranges":[{"startOffset":5654,"endOffset":5699,"count":0}],"isBlockCoverage":false}]},{"scriptId":"701","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/table-hints.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":476,"count":1}],"isBlockCoverage":true}]},{"scriptId":"702","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/index-hints.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":146,"count":1}],"isBlockCoverage":true}]},{"scriptId":"703","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/associations/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":392,"count":1}],"isBlockCoverage":true}]},{"scriptId":"704","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/abstract/query-interface.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24714,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":341,"endOffset":478,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadValues","ranges":[{"startOffset":501,"endOffset":798,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadProps","ranges":[{"startOffset":820,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"QueryInterface","ranges":[{"startOffset":1105,"endOffset":1223,"count":1}],"isBlockCoverage":true},{"functionName":"createDatabase","ranges":[{"startOffset":1226,"endOffset":1429,"count":0}],"isBlockCoverage":false},{"functionName":"dropDatabase","ranges":[{"startOffset":1432,"endOffset":1622,"count":0}],"isBlockCoverage":false},{"functionName":"createSchema","ranges":[{"startOffset":1625,"endOffset":1806,"count":0}],"isBlockCoverage":false},{"functionName":"dropSchema","ranges":[{"startOffset":1809,"endOffset":1986,"count":0}],"isBlockCoverage":false},{"functionName":"dropAllSchemas","ranges":[{"startOffset":1989,"endOffset":2307,"count":0}],"isBlockCoverage":false},{"functionName":"showAllSchemas","ranges":[{"startOffset":2310,"endOffset":2722,"count":0}],"isBlockCoverage":false},{"functionName":"databaseVersion","ranges":[{"startOffset":2725,"endOffset":2910,"count":0}],"isBlockCoverage":false},{"functionName":"createTable","ranges":[{"startOffset":2913,"endOffset":4060,"count":0}],"isBlockCoverage":false},{"functionName":"tableExists","ranges":[{"startOffset":4063,"endOffset":4336,"count":0}],"isBlockCoverage":false},{"functionName":"dropTable","ranges":[{"startOffset":4339,"endOffset":4606,"count":0}],"isBlockCoverage":false},{"functionName":"_dropAllTables","ranges":[{"startOffset":4609,"endOffset":4884,"count":0}],"isBlockCoverage":false},{"functionName":"dropAllTables","ranges":[{"startOffset":4887,"endOffset":5569,"count":0}],"isBlockCoverage":false},{"functionName":"renameTable","ranges":[{"startOffset":5572,"endOffset":5770,"count":0}],"isBlockCoverage":false},{"functionName":"showAllTables","ranges":[{"startOffset":5773,"endOffset":6129,"count":0}],"isBlockCoverage":false},{"functionName":"describeTable","ranges":[{"startOffset":6132,"endOffset":7315,"count":0}],"isBlockCoverage":false},{"functionName":"addColumn","ranges":[{"startOffset":7318,"endOffset":7724,"count":0}],"isBlockCoverage":false},{"functionName":"removeColumn","ranges":[{"startOffset":7727,"endOffset":7893,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeAttribute","ranges":[{"startOffset":7896,"endOffset":8199,"count":0}],"isBlockCoverage":false},{"functionName":"quoteIdentifier","ranges":[{"startOffset":8202,"endOffset":8311,"count":0}],"isBlockCoverage":false},{"functionName":"quoteIdentifiers","ranges":[{"startOffset":8314,"endOffset":8411,"count":0}],"isBlockCoverage":false},{"functionName":"changeColumn","ranges":[{"startOffset":8414,"endOffset":8834,"count":0}],"isBlockCoverage":false},{"functionName":"assertTableHasColumn","ranges":[{"startOffset":8837,"endOffset":9119,"count":0}],"isBlockCoverage":false},{"functionName":"renameColumn","ranges":[{"startOffset":9122,"endOffset":9816,"count":0}],"isBlockCoverage":false},{"functionName":"addIndex","ranges":[{"startOffset":9819,"endOffset":10362,"count":0}],"isBlockCoverage":false},{"functionName":"showIndex","ranges":[{"startOffset":10365,"endOffset":10602,"count":0}],"isBlockCoverage":false},{"functionName":"getForeignKeysForTables","ranges":[{"startOffset":10605,"endOffset":11403,"count":0}],"isBlockCoverage":false},{"functionName":"getForeignKeyReferencesForTable","ranges":[{"startOffset":11406,"endOffset":11738,"count":0}],"isBlockCoverage":false},{"functionName":"removeIndex","ranges":[{"startOffset":11741,"endOffset":11986,"count":0}],"isBlockCoverage":false},{"functionName":"addConstraint","ranges":[{"startOffset":11989,"endOffset":12422,"count":0}],"isBlockCoverage":false},{"functionName":"showConstraint","ranges":[{"startOffset":12425,"endOffset":12698,"count":0}],"isBlockCoverage":false},{"functionName":"removeConstraint","ranges":[{"startOffset":12701,"endOffset":12877,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":12880,"endOffset":13388,"count":0}],"isBlockCoverage":false},{"functionName":"upsert","ranges":[{"startOffset":13391,"endOffset":14841,"count":0}],"isBlockCoverage":false},{"functionName":"bulkInsert","ranges":[{"startOffset":14844,"endOffset":15146,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":15149,"endOffset":15589,"count":0}],"isBlockCoverage":false},{"functionName":"bulkUpdate","ranges":[{"startOffset":15592,"endOffset":16217,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":16220,"endOffset":17375,"count":0}],"isBlockCoverage":false},{"functionName":"bulkDelete","ranges":[{"startOffset":17378,"endOffset":17866,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":17869,"endOffset":18128,"count":0}],"isBlockCoverage":false},{"functionName":"increment","ranges":[{"startOffset":18131,"endOffset":18535,"count":0}],"isBlockCoverage":false},{"functionName":"decrement","ranges":[{"startOffset":18538,"endOffset":18942,"count":0}],"isBlockCoverage":false},{"functionName":"rawSelect","ranges":[{"startOffset":18945,"endOffset":20125,"count":0}],"isBlockCoverage":false},{"functionName":"createTrigger","ranges":[{"startOffset":20128,"endOffset":20504,"count":0}],"isBlockCoverage":false},{"functionName":"dropTrigger","ranges":[{"startOffset":20507,"endOffset":20741,"count":0}],"isBlockCoverage":false},{"functionName":"renameTrigger","ranges":[{"startOffset":20744,"endOffset":21020,"count":0}],"isBlockCoverage":false},{"functionName":"createFunction","ranges":[{"startOffset":21023,"endOffset":21352,"count":0}],"isBlockCoverage":false},{"functionName":"dropFunction","ranges":[{"startOffset":21355,"endOffset":21587,"count":0}],"isBlockCoverage":false},{"functionName":"renameFunction","ranges":[{"startOffset":21590,"endOffset":21866,"count":0}],"isBlockCoverage":false},{"functionName":"ensureEnums","ranges":[{"startOffset":21869,"endOffset":21888,"count":0}],"isBlockCoverage":false},{"functionName":"setIsolationLevel","ranges":[{"startOffset":21891,"endOffset":22482,"count":0}],"isBlockCoverage":false},{"functionName":"startTransaction","ranges":[{"startOffset":22485,"endOffset":23004,"count":0}],"isBlockCoverage":false},{"functionName":"deferConstraints","ranges":[{"startOffset":23007,"endOffset":23311,"count":0}],"isBlockCoverage":false},{"functionName":"commitTransaction","ranges":[{"startOffset":23314,"endOffset":23950,"count":0}],"isBlockCoverage":false},{"functionName":"rollbackTransaction","ranges":[{"startOffset":23953,"endOffset":24626,"count":0}],"isBlockCoverage":false}]},{"scriptId":"705","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/sqlite/sqlite-utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":646,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":60,"endOffset":120,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":137,"endOffset":274,"count":1}],"isBlockCoverage":true},{"functionName":"withSqliteForeignKeysOff","ranges":[{"startOffset":324,"endOffset":354,"count":1}],"isBlockCoverage":true},{"functionName":"withSqliteForeignKeysOff","ranges":[{"startOffset":359,"endOffset":604,"count":0}],"isBlockCoverage":false}]},{"scriptId":"706","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/utils/sql.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7145,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":3}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":2},{"startOffset":599,"endOffset":631,"count":1},{"startOffset":689,"endOffset":880,"count":9}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":2},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1079,"endOffset":1102,"count":0},{"startOffset":1103,"endOffset":1153,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":0}],"isBlockCoverage":false},{"functionName":"injectReplacements","ranges":[{"startOffset":1251,"endOffset":1275,"count":1}],"isBlockCoverage":true},{"functionName":"injectReplacements","ranges":[{"startOffset":1414,"endOffset":6802,"count":0}],"isBlockCoverage":false},{"functionName":"canPrecedeNewToken","ranges":[{"startOffset":6803,"endOffset":6891,"count":0}],"isBlockCoverage":false},{"functionName":"isBackslashEscaped","ranges":[{"startOffset":6892,"endOffset":7112,"count":0}],"isBlockCoverage":false}]},{"scriptId":"707","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/lodash/isPlainObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1650,"count":1}],"isBlockCoverage":true},{"functionName":"isPlainObject","ranges":[{"startOffset":1229,"endOffset":1616,"count":0}],"isBlockCoverage":false}]},{"scriptId":"708","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/lodash/_getPrototype.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":163,"count":1}],"isBlockCoverage":true}]},{"scriptId":"709","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/lodash/_overArg.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":382,"count":1}],"isBlockCoverage":true},{"functionName":"overArg","ranges":[{"startOffset":254,"endOffset":354,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":299,"endOffset":351,"count":0}],"isBlockCoverage":false}]},{"scriptId":"710","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/lodash/isObjectLike.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":614,"count":1}],"isBlockCoverage":true},{"functionName":"isObjectLike","ranges":[{"startOffset":497,"endOffset":581,"count":0}],"isBlockCoverage":false}]},{"scriptId":"711","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/dotenv/lib/main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9972,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":382,"endOffset":1161,"count":2},{"startOffset":622,"endOffset":1145,"count":24},{"startOffset":725,"endOffset":730,"count":0},{"startOffset":1007,"endOffset":1098,"count":2}],"isBlockCoverage":true},{"functionName":"_parseVault","ranges":[{"startOffset":1163,"endOffset":2300,"count":0}],"isBlockCoverage":false},{"functionName":"_log","ranges":[{"startOffset":2302,"endOffset":2383,"count":0}],"isBlockCoverage":false},{"functionName":"_warn","ranges":[{"startOffset":2385,"endOffset":2467,"count":0}],"isBlockCoverage":false},{"functionName":"_debug","ranges":[{"startOffset":2469,"endOffset":2553,"count":0}],"isBlockCoverage":false},{"functionName":"_dotenvKey","ranges":[{"startOffset":2555,"endOffset":2979,"count":2},{"startOffset":2663,"endOffset":2684,"count":0},{"startOffset":2685,"endOffset":2717,"count":0},{"startOffset":2719,"endOffset":2754,"count":0},{"startOffset":2857,"endOffset":2893,"count":0},{"startOffset":2895,"endOffset":2934,"count":0}],"isBlockCoverage":true},{"functionName":"_instructions","ranges":[{"startOffset":2981,"endOffset":4260,"count":0}],"isBlockCoverage":false},{"functionName":"_vaultPath","ranges":[{"startOffset":4262,"endOffset":4909,"count":0}],"isBlockCoverage":false},{"functionName":"_resolveHome","ranges":[{"startOffset":4911,"endOffset":5028,"count":0}],"isBlockCoverage":false},{"functionName":"_configVault","ranges":[{"startOffset":5030,"endOffset":5359,"count":0}],"isBlockCoverage":false},{"functionName":"configDotenv","ranges":[{"startOffset":5361,"endOffset":6958,"count":2},{"startOffset":5508,"endOffset":5524,"count":0},{"startOffset":5541,"endOffset":5560,"count":0},{"startOffset":5562,"endOffset":5599,"count":0},{"startOffset":5622,"endOffset":5696,"count":0},{"startOffset":5775,"endOffset":5790,"count":0},{"startOffset":5792,"endOffset":6047,"count":0},{"startOffset":6539,"endOffset":6657,"count":0},{"startOffset":6708,"endOffset":6737,"count":0},{"startOffset":6739,"endOffset":6780,"count":0},{"startOffset":6856,"endOffset":6912,"count":0}],"isBlockCoverage":true},{"functionName":"config","ranges":[{"startOffset":7000,"endOffset":7509,"count":2},{"startOffset":7177,"endOffset":7508,"count":0}],"isBlockCoverage":true},{"functionName":"decrypt","ranges":[{"startOffset":7511,"endOffset":8582,"count":0}],"isBlockCoverage":false},{"functionName":"populate","ranges":[{"startOffset":8627,"endOffset":9479,"count":4},{"startOffset":8823,"endOffset":8983,"count":0},{"startOffset":9047,"endOffset":9477,"count":48},{"startOffset":9112,"endOffset":9424,"count":13},{"startOffset":9143,"endOffset":9190,"count":0},{"startOffset":9209,"endOffset":9418,"count":0},{"startOffset":9424,"endOffset":9473,"count":35}],"isBlockCoverage":true}]},{"scriptId":"712","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/postgres/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2308,"count":1}],"isBlockCoverage":true},{"functionName":"PostgresDialect","ranges":[{"startOffset":408,"endOffset":729,"count":1}],"isBlockCoverage":true},{"functionName":"canBackslashEscape","ranges":[{"startOffset":732,"endOffset":820,"count":0}],"isBlockCoverage":false}]},{"scriptId":"713","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/abstract/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1454,"count":1}],"isBlockCoverage":true},{"functionName":"canBackslashEscape","ranges":[{"startOffset":40,"endOffset":84,"count":0}],"isBlockCoverage":false}]},{"scriptId":"714","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/postgres/connection-manager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9677,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionManager","ranges":[{"startOffset":498,"endOffset":849,"count":1},{"startOffset":715,"endOffset":729,"count":0}],"isBlockCoverage":true},{"functionName":"_refreshTypeParser","ranges":[{"startOffset":852,"endOffset":2381,"count":10},{"startOffset":1188,"endOffset":1684,"count":1},{"startOffset":1232,"endOffset":1664,"count":0},{"startOffset":1684,"endOffset":1837,"count":9},{"startOffset":1837,"endOffset":2074,"count":1},{"startOffset":2074,"endOffset":2380,"count":8}],"isBlockCoverage":true},{"functionName":"arrayParserBuilder","ranges":[{"startOffset":914,"endOffset":1017,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":942,"endOffset":1010,"count":0}],"isBlockCoverage":false},{"functionName":"rangeParserBuilder","ranges":[{"startOffset":1050,"endOffset":1138,"count":0}],"isBlockCoverage":false},{"functionName":"parser","ranges":[{"startOffset":1704,"endOffset":1736,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1872,"endOffset":1934,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1975,"endOffset":2052,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2111,"endOffset":2375,"count":8},{"startOffset":2172,"endOffset":2374,"count":0}],"isBlockCoverage":true},{"functionName":"_clearTypeParser","ranges":[{"startOffset":2384,"endOffset":2459,"count":1}],"isBlockCoverage":true},{"functionName":"getTypeParser","ranges":[{"startOffset":2462,"endOffset":2627,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":2630,"endOffset":7350,"count":1},{"startOffset":2963,"endOffset":3350,"count":0},{"startOffset":5647,"endOffset":5971,"count":0},{"startOffset":5973,"endOffset":6378,"count":0},{"startOffset":6379,"endOffset":6448,"count":0},{"startOffset":6449,"endOffset":6502,"count":0},{"startOffset":6505,"endOffset":7224,"count":0},{"startOffset":7225,"endOffset":7264,"count":0},{"startOffset":7266,"endOffset":7349,"count":0}],"isBlockCoverage":true},{"functionName":"connection","ranges":[{"startOffset":3392,"endOffset":5645,"count":1}],"isBlockCoverage":true},{"functionName":"parameterHandler","ranges":[{"startOffset":3540,"endOffset":4084,"count":0}],"isBlockCoverage":false},{"functionName":"endHandler","ranges":[{"startOffset":4111,"endOffset":4297,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4491,"endOffset":5637,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5675,"endOffset":5828,"count":0}],"isBlockCoverage":false},{"functionName":"disconnect","ranges":[{"startOffset":7353,"endOffset":7586,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":7589,"endOffset":7671,"count":0}],"isBlockCoverage":false},{"functionName":"_refreshDynamicOIDs","ranges":[{"startOffset":7674,"endOffset":9390,"count":0}],"isBlockCoverage":false},{"functionName":"_clearDynamicOIDs","ranges":[{"startOffset":9393,"endOffset":9493,"count":1}],"isBlockCoverage":true}]},{"scriptId":"715","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/abstract/connection-manager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8801,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionManager","ranges":[{"startOffset":354,"endOffset":927,"count":1},{"startOffset":642,"endOffset":718,"count":0},{"startOffset":760,"endOffset":765,"count":0}],"isBlockCoverage":true},{"functionName":"refreshTypeParser","ranges":[{"startOffset":930,"endOffset":1322,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":983,"endOffset":1316,"count":21},{"startOffset":1066,"endOffset":1310,"count":10},{"startOffset":1170,"endOffset":1302,"count":0}],"isBlockCoverage":true},{"functionName":"_loadDialectModule","ranges":[{"startOffset":1325,"endOffset":1974,"count":1},{"startOffset":1419,"endOffset":1493,"count":0},{"startOffset":1541,"endOffset":1602,"count":0},{"startOffset":1643,"endOffset":1970,"count":0}],"isBlockCoverage":true},{"functionName":"_onProcessExit","ranges":[{"startOffset":1977,"endOffset":2171,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":2174,"endOffset":2408,"count":0}],"isBlockCoverage":false},{"functionName":"initPools","ranges":[{"startOffset":2411,"endOffset":5857,"count":1},{"startOffset":3172,"endOffset":5856,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2560,"endOffset":2587,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":2606,"endOffset":2764,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3447,"endOffset":3521,"count":0}],"isBlockCoverage":false},{"functionName":"release","ranges":[{"startOffset":3576,"endOffset":3752,"count":0}],"isBlockCoverage":false},{"functionName":"acquire","ranges":[{"startOffset":3769,"endOffset":4013,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":4030,"endOffset":4153,"count":0}],"isBlockCoverage":false},{"functionName":"destroyAllNow","ranges":[{"startOffset":4176,"endOffset":4365,"count":0}],"isBlockCoverage":false},{"functionName":"drain","ranges":[{"startOffset":4380,"endOffset":4478,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":4551,"endOffset":4798,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":4817,"endOffset":4861,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":5226,"endOffset":5396,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":5415,"endOffset":5459,"count":0}],"isBlockCoverage":false},{"functionName":"getConnection","ranges":[{"startOffset":5860,"endOffset":7701,"count":1},{"startOffset":5913,"endOffset":5918,"count":0},{"startOffset":7247,"endOffset":7700,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6041,"endOffset":7202,"count":1},{"startOffset":6168,"endOffset":7192,"count":0}],"isBlockCoverage":true},{"functionName":"versionPromise._options.logging","ranges":[{"startOffset":6284,"endOffset":6305,"count":0}],"isBlockCoverage":false},{"functionName":"releaseConnection","ranges":[{"startOffset":7704,"endOffset":7808,"count":0}],"isBlockCoverage":false},{"functionName":"destroyConnection","ranges":[{"startOffset":7811,"endOffset":7947,"count":0}],"isBlockCoverage":false},{"functionName":"_connect","ranges":[{"startOffset":7950,"endOffset":8209,"count":1},{"startOffset":8111,"endOffset":8208,"count":0}],"isBlockCoverage":true},{"functionName":"_disconnect","ranges":[{"startOffset":8212,"endOffset":8446,"count":0}],"isBlockCoverage":false},{"functionName":"_validate","ranges":[{"startOffset":8449,"endOffset":8617,"count":0}],"isBlockCoverage":false}]},{"scriptId":"716","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize-pool/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":679,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":268,"endOffset":319,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":450,"endOffset":505,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":606,"endOffset":641,"count":1}],"isBlockCoverage":true}]},{"scriptId":"717","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize-pool/lib/TimeoutError.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":222,"count":1}],"isBlockCoverage":true}]},{"scriptId":"718","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize-pool/lib/AggregateError.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":756,"count":1}],"isBlockCoverage":true},{"functionName":"AggregateError","ranges":[{"startOffset":151,"endOffset":263,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":268,"endOffset":670,"count":0}],"isBlockCoverage":false}]},{"scriptId":"719","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize-pool/lib/Pool.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10503,"count":1}],"isBlockCoverage":true},{"functionName":"Pool","ranges":[{"startOffset":213,"endOffset":1841,"count":1},{"startOffset":291,"endOffset":362,"count":0},{"startOffset":393,"endOffset":465,"count":0},{"startOffset":497,"endOffset":570,"count":0},{"startOffset":702,"endOffset":773,"count":0},{"startOffset":906,"endOffset":976,"count":0},{"startOffset":1016,"endOffset":1083,"count":0},{"startOffset":1126,"endOffset":1201,"count":0},{"startOffset":1203,"endOffset":1278,"count":0},{"startOffset":1338,"endOffset":1346,"count":0},{"startOffset":1413,"endOffset":1421,"count":0},{"startOffset":1484,"endOffset":1491,"count":0}],"isBlockCoverage":true},{"functionName":"get size","ranges":[{"startOffset":1846,"endOffset":1892,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":1897,"endOffset":1950,"count":0}],"isBlockCoverage":false},{"functionName":"get available","ranges":[{"startOffset":1955,"endOffset":2024,"count":0}],"isBlockCoverage":false},{"functionName":"get using","ranges":[{"startOffset":2029,"endOffset":2090,"count":0}],"isBlockCoverage":false},{"functionName":"get waiting","ranges":[{"startOffset":2095,"endOffset":2161,"count":0}],"isBlockCoverage":false},{"functionName":"get maxSize","ranges":[{"startOffset":2166,"endOffset":2221,"count":0}],"isBlockCoverage":false},{"functionName":"get minSize","ranges":[{"startOffset":2226,"endOffset":2281,"count":0}],"isBlockCoverage":false},{"functionName":"_log","ranges":[{"startOffset":2286,"endOffset":2535,"count":0}],"isBlockCoverage":false},{"functionName":"_removeIdle","ranges":[{"startOffset":2540,"endOffset":3526,"count":0}],"isBlockCoverage":false},{"functionName":"_scheduleRemoveIdle","ranges":[{"startOffset":3531,"endOffset":3790,"count":0}],"isBlockCoverage":false},{"functionName":"_dispense","ranges":[{"startOffset":3795,"endOffset":4805,"count":0}],"isBlockCoverage":false},{"functionName":"_createResource","ranges":[{"startOffset":4810,"endOffset":5752,"count":0}],"isBlockCoverage":false},{"functionName":"_addResourceToAvailableObjects","ranges":[{"startOffset":5757,"endOffset":6098,"count":0}],"isBlockCoverage":false},{"functionName":"_addResourceToInUseObjects","ranges":[{"startOffset":6103,"endOffset":6316,"count":0}],"isBlockCoverage":false},{"functionName":"_ensureMinimum","ranges":[{"startOffset":6321,"endOffset":6575,"count":0}],"isBlockCoverage":false},{"functionName":"acquire","ranges":[{"startOffset":6580,"endOffset":7066,"count":0}],"isBlockCoverage":false},{"functionName":"release","ranges":[{"startOffset":7071,"endOffset":8232,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":8237,"endOffset":9123,"count":0}],"isBlockCoverage":false},{"functionName":"drain","ranges":[{"startOffset":9128,"endOffset":9764,"count":0}],"isBlockCoverage":false},{"functionName":"destroyAllNow","ranges":[{"startOffset":9769,"endOffset":10447,"count":0}],"isBlockCoverage":false}]},{"scriptId":"720","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize-pool/lib/Deferred.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1021,"count":1}],"isBlockCoverage":true},{"functionName":"Deferred","ranges":[{"startOffset":175,"endOffset":339,"count":0}],"isBlockCoverage":false},{"functionName":"registerTimeout","ranges":[{"startOffset":344,"endOffset":616,"count":0}],"isBlockCoverage":false},{"functionName":"_clearTimeout","ranges":[{"startOffset":621,"endOffset":729,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":734,"endOffset":816,"count":0}],"isBlockCoverage":false},{"functionName":"reject","ranges":[{"startOffset":821,"endOffset":901,"count":0}],"isBlockCoverage":false},{"functionName":"promise","ranges":[{"startOffset":906,"endOffset":953,"count":0}],"isBlockCoverage":false}]},{"scriptId":"721","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2616,"count":1}],"isBlockCoverage":true}]},{"scriptId":"722","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/internal/re.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7937,"count":1}],"isBlockCoverage":true},{"functionName":"makeSafeRegex","ranges":[{"startOffset":950,"endOffset":1161,"count":43},{"startOffset":1015,"endOffset":1144,"count":129}],"isBlockCoverage":true},{"functionName":"createToken","ranges":[{"startOffset":1183,"endOffset":1459,"count":43},{"startOffset":1376,"endOffset":1381,"count":5},{"startOffset":1382,"endOffset":1393,"count":38},{"startOffset":1439,"endOffset":1444,"count":5},{"startOffset":1445,"endOffset":1456,"count":38}],"isBlockCoverage":true}]},{"scriptId":"723","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/internal/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":859,"count":1},{"startOffset":233,"endOffset":279,"count":0}],"isBlockCoverage":true}]},{"scriptId":"724","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/internal/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":226,"count":1},{"startOffset":91,"endOffset":138,"count":0},{"startOffset":141,"endOffset":188,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":143,"endOffset":188,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":193,"endOffset":201,"count":149}],"isBlockCoverage":true}]},{"scriptId":"725","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/classes/semver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8751,"count":1}],"isBlockCoverage":true},{"functionName":"SemVer","ranges":[{"startOffset":311,"endOffset":2238,"count":22},{"startOffset":416,"endOffset":621,"count":10},{"startOffset":566,"endOffset":615,"count":0},{"startOffset":621,"endOffset":761,"count":12},{"startOffset":660,"endOffset":761,"count":0},{"startOffset":761,"endOffset":800,"count":12},{"startOffset":800,"endOffset":900,"count":0},{"startOffset":900,"endOffset":1239,"count":12},{"startOffset":1239,"endOffset":1252,"count":0},{"startOffset":1253,"endOffset":1265,"count":12},{"startOffset":1280,"endOffset":1344,"count":0},{"startOffset":1344,"endOffset":1529,"count":12},{"startOffset":1531,"endOffset":1589,"count":0},{"startOffset":1589,"endOffset":1646,"count":12},{"startOffset":1648,"endOffset":1706,"count":0},{"startOffset":1706,"endOffset":1763,"count":12},{"startOffset":1765,"endOffset":1823,"count":0},{"startOffset":1823,"endOffset":1884,"count":12},{"startOffset":1884,"endOffset":1918,"count":10},{"startOffset":1918,"endOffset":2170,"count":2},{"startOffset":2170,"endOffset":2194,"count":12},{"startOffset":2194,"endOffset":2211,"count":0},{"startOffset":2212,"endOffset":2216,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1970,"endOffset":2163,"count":2},{"startOffset":2137,"endOffset":2162,"count":0}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":2242,"endOffset":2438,"count":12},{"startOffset":2349,"endOffset":2410,"count":2}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":2442,"endOffset":2483,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2487,"endOffset":2877,"count":5},{"startOffset":2604,"endOffset":2747,"count":0},{"startOffset":2789,"endOffset":2811,"count":0},{"startOffset":2848,"endOffset":2873,"count":0}],"isBlockCoverage":true},{"functionName":"compareMain","ranges":[{"startOffset":2881,"endOffset":3172,"count":5},{"startOffset":2939,"endOffset":2992,"count":0},{"startOffset":3057,"endOffset":3109,"count":0},{"startOffset":3110,"endOffset":3162,"count":0}],"isBlockCoverage":true},{"functionName":"comparePre","ranges":[{"startOffset":3176,"endOffset":4027,"count":0}],"isBlockCoverage":false},{"functionName":"compareBuild","ranges":[{"startOffset":4031,"endOffset":4568,"count":0}],"isBlockCoverage":false},{"functionName":"inc","ranges":[{"startOffset":4721,"endOffset":8723,"count":0}],"isBlockCoverage":false}]},{"scriptId":"726","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/internal/parse-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":324,"count":1}],"isBlockCoverage":true},{"functionName":"parseOptions","ranges":[{"startOffset":153,"endOffset":293,"count":32},{"startOffset":182,"endOffset":208,"count":14},{"startOffset":208,"endOffset":245,"count":18},{"startOffset":245,"endOffset":273,"count":0},{"startOffset":273,"endOffset":292,"count":18}],"isBlockCoverage":true}]},{"scriptId":"727","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/internal/identifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":410,"count":1}],"isBlockCoverage":true},{"functionName":"compareIdentifiers","ranges":[{"startOffset":54,"endOffset":278,"count":5},{"startOffset":195,"endOffset":198,"count":0},{"startOffset":221,"endOffset":225,"count":0},{"startOffset":248,"endOffset":251,"count":0},{"startOffset":264,"endOffset":268,"count":0}],"isBlockCoverage":true},{"functionName":"rcompareIdentifiers","ranges":[{"startOffset":308,"endOffset":342,"count":0}],"isBlockCoverage":false}]},{"scriptId":"728","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/functions/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":317,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":58,"endOffset":292,"count":2},{"startOffset":136,"endOffset":160,"count":0},{"startOffset":213,"endOffset":290,"count":0}],"isBlockCoverage":true}]},{"scriptId":"729","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/functions/valid.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":162,"count":1}],"isBlockCoverage":true},{"functionName":"valid","ranges":[{"startOffset":47,"endOffset":138,"count":0}],"isBlockCoverage":false}]},{"scriptId":"730","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/functions/clean.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":191,"count":1}],"isBlockCoverage":true},{"functionName":"clean","ranges":[{"startOffset":47,"endOffset":167,"count":0}],"isBlockCoverage":false}]},{"scriptId":"731","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/functions/inc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":464,"count":1}],"isBlockCoverage":true},{"functionName":"inc","ranges":[{"startOffset":57,"endOffset":442,"count":0}],"isBlockCoverage":false}]},{"scriptId":"732","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/functions/diff.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1612,"count":1}],"isBlockCoverage":true},{"functionName":"diff","ranges":[{"startOffset":50,"endOffset":1588,"count":0}],"isBlockCoverage":false}]},{"scriptId":"733","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/functions/major.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"major","ranges":[{"startOffset":58,"endOffset":98,"count":0}],"isBlockCoverage":false}]},{"scriptId":"734","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/functions/minor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"minor","ranges":[{"startOffset":58,"endOffset":98,"count":0}],"isBlockCoverage":false}]},{"scriptId":"735","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/functions/patch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"patch","ranges":[{"startOffset":58,"endOffset":98,"count":0}],"isBlockCoverage":false}]},{"scriptId":"736","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/functions/prerelease.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":220,"count":1}],"isBlockCoverage":true},{"functionName":"prerelease","ranges":[{"startOffset":52,"endOffset":191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"737","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/functions/compare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":156,"count":1}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":60,"endOffset":129,"count":5}],"isBlockCoverage":true}]},{"scriptId":"738","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/functions/rcompare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":118,"count":1}],"isBlockCoverage":true},{"functionName":"rcompare","ranges":[{"startOffset":54,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"739","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/functions/compare-loose.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":118,"count":1}],"isBlockCoverage":true},{"functionName":"compareLoose","ranges":[{"startOffset":58,"endOffset":87,"count":0}],"isBlockCoverage":false}]},{"scriptId":"740","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/functions/compare-build.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":267,"count":1}],"isBlockCoverage":true},{"functionName":"compareBuild","ranges":[{"startOffset":65,"endOffset":236,"count":0}],"isBlockCoverage":false}]},{"scriptId":"741","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/functions/sort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":147,"count":1}],"isBlockCoverage":true},{"functionName":"sort","ranges":[{"startOffset":61,"endOffset":124,"count":0}],"isBlockCoverage":false}]},{"scriptId":"742","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/functions/rsort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":149,"count":1}],"isBlockCoverage":true},{"functionName":"rsort","ranges":[{"startOffset":62,"endOffset":125,"count":0}],"isBlockCoverage":false}]},{"scriptId":"743","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/functions/gt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":110,"count":1}],"isBlockCoverage":true},{"functionName":"gt","ranges":[{"startOffset":48,"endOffset":89,"count":0}],"isBlockCoverage":false}]},{"scriptId":"744","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/functions/lt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":110,"count":1}],"isBlockCoverage":true},{"functionName":"lt","ranges":[{"startOffset":48,"endOffset":89,"count":1}],"isBlockCoverage":true}]},{"scriptId":"745","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/functions/eq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":112,"count":1}],"isBlockCoverage":true},{"functionName":"eq","ranges":[{"startOffset":48,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"746","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/functions/neq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":114,"count":1}],"isBlockCoverage":true},{"functionName":"neq","ranges":[{"startOffset":49,"endOffset":92,"count":0}],"isBlockCoverage":false}]},{"scriptId":"747","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/functions/gte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":113,"count":1}],"isBlockCoverage":true},{"functionName":"gte","ranges":[{"startOffset":49,"endOffset":91,"count":4}],"isBlockCoverage":true}]},{"scriptId":"748","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/functions/lte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":113,"count":1}],"isBlockCoverage":true},{"functionName":"lte","ranges":[{"startOffset":49,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"749","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/functions/cmp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":947,"count":1}],"isBlockCoverage":true},{"functionName":"cmp","ranges":[{"startOffset":181,"endOffset":925,"count":5},{"startOffset":224,"endOffset":386,"count":0},{"startOffset":392,"endOffset":554,"count":0},{"startOffset":560,"endOffset":568,"count":0},{"startOffset":573,"endOffset":582,"count":0},{"startOffset":587,"endOffset":626,"count":0},{"startOffset":632,"endOffset":672,"count":0},{"startOffset":678,"endOffset":716,"count":0},{"startOffset":722,"endOffset":762,"count":4},{"startOffset":768,"endOffset":806,"count":1},{"startOffset":812,"endOffset":852,"count":0},{"startOffset":858,"endOffset":919,"count":0}],"isBlockCoverage":true}]},{"scriptId":"750","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/functions/coerce.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1990,"count":1}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":145,"endOffset":1965,"count":0}],"isBlockCoverage":false}]},{"scriptId":"751","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/classes/comparator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3617,"count":1}],"isBlockCoverage":true},{"functionName":"get ANY","ranges":[{"startOffset":100,"endOffset":131,"count":2}],"isBlockCoverage":true},{"functionName":"Comparator","ranges":[{"startOffset":135,"endOffset":682,"count":7},{"startOffset":238,"endOffset":358,"count":0},{"startOffset":556,"endOffset":585,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":686,"endOffset":1182,"count":7},{"startOffset":734,"endOffset":757,"count":0},{"startOffset":818,"endOffset":882,"count":0},{"startOffset":930,"endOffset":934,"count":0},{"startOffset":966,"endOffset":998,"count":0},{"startOffset":1077,"endOffset":1108,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":1186,"endOffset":1225,"count":5}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":1229,"endOffset":1609,"count":5},{"startOffset":1353,"endOffset":1378,"count":0},{"startOffset":1417,"endOffset":1538,"count":0}],"isBlockCoverage":true},{"functionName":"intersects","ranges":[{"startOffset":1613,"endOffset":3323,"count":0}],"isBlockCoverage":false}]},{"scriptId":"752","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/classes/range.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14523,"count":1}],"isBlockCoverage":true},{"functionName":"Range","ranges":[{"startOffset":55,"endOffset":2052,"count":3},{"startOffset":155,"endOffset":379,"count":0},{"startOffset":418,"endOffset":562,"count":0},{"startOffset":1381,"endOffset":1451,"count":0},{"startOffset":1552,"endOffset":2029,"count":1},{"startOffset":1734,"endOffset":1770,"count":0},{"startOffset":1900,"endOffset":2015,"count":2},{"startOffset":1931,"endOffset":1945,"count":1},{"startOffset":1947,"endOffset":2005,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1084,"endOffset":1114,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1339,"endOffset":1352,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1678,"endOffset":1699,"count":2}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":2056,"endOffset":2197,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2105,"endOffset":2138,"count":4}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":2201,"endOffset":2240,"count":0}],"isBlockCoverage":false},{"functionName":"parseRange","ranges":[{"startOffset":2244,"endOffset":4527,"count":4},{"startOffset":2427,"endOffset":2453,"count":0},{"startOffset":2483,"endOffset":2496,"count":0},{"startOffset":2595,"endOffset":2622,"count":0},{"startOffset":2726,"endOffset":2750,"count":0},{"startOffset":3623,"endOffset":3862,"count":0},{"startOffset":4247,"endOffset":4350,"count":5},{"startOffset":4276,"endOffset":4307,"count":0},{"startOffset":4377,"endOffset":4396,"count":1},{"startOffset":4398,"endOffset":4431,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3437,"endOffset":3480,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3566,"endOffset":3605,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3729,"endOffset":3855,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4167,"endOffset":4209,"count":5}],"isBlockCoverage":true},{"functionName":"intersects","ranges":[{"startOffset":4531,"endOffset":5161,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":5229,"endOffset":5611,"count":3},{"startOffset":5264,"endOffset":5290,"count":0},{"startOffset":5403,"endOffset":5444,"count":0},{"startOffset":5498,"endOffset":5590,"count":4},{"startOffset":5555,"endOffset":5584,"count":3},{"startOffset":5590,"endOffset":5610,"count":0}],"isBlockCoverage":true},{"functionName":"isNullSet","ranges":[{"startOffset":6109,"endOffset":6136,"count":7}],"isBlockCoverage":true},{"functionName":"isAny","ranges":[{"startOffset":6151,"endOffset":6170,"count":1}],"isBlockCoverage":true},{"functionName":"isSatisfiable","ranges":[{"startOffset":6292,"endOffset":6698,"count":0}],"isBlockCoverage":false},{"functionName":"parseComparator","ranges":[{"startOffset":6868,"endOffset":7181,"count":4}],"isBlockCoverage":true},{"functionName":"isX","ranges":[{"startOffset":7195,"endOffset":7246,"count":18}],"isBlockCoverage":true},{"functionName":"replaceTildes","ranges":[{"startOffset":7582,"endOffset":7705,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7656,"endOffset":7687,"count":5}],"isBlockCoverage":true},{"functionName":"replaceTilde","ranges":[{"startOffset":7728,"endOffset":8402,"count":5},{"startOffset":7775,"endOffset":7793,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7833,"endOffset":8399,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCarets","ranges":[{"startOffset":8695,"endOffset":8818,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8769,"endOffset":8800,"count":4}],"isBlockCoverage":true},{"functionName":"replaceCaret","ranges":[{"startOffset":8841,"endOffset":10143,"count":4},{"startOffset":8920,"endOffset":8938,"count":0},{"startOffset":8991,"endOffset":8997,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9028,"endOffset":10140,"count":1},{"startOffset":9120,"endOffset":9142,"count":0},{"startOffset":9160,"endOffset":9213,"count":0},{"startOffset":9231,"endOffset":9389,"count":0},{"startOffset":9403,"endOffset":9755,"count":0},{"startOffset":9805,"endOffset":10009,"count":0}],"isBlockCoverage":true},{"functionName":"replaceXRanges","ranges":[{"startOffset":10168,"endOffset":10321,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10271,"endOffset":10303,"count":5}],"isBlockCoverage":true},{"functionName":"replaceXRange","ranges":[{"startOffset":10345,"endOffset":12045,"count":5},{"startOffset":10413,"endOffset":10432,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10473,"endOffset":12042,"count":5},{"startOffset":10673,"endOffset":10680,"count":0},{"startOffset":10682,"endOffset":10705,"count":0},{"startOffset":10870,"endOffset":10876,"count":0},{"startOffset":10895,"endOffset":11072,"count":0},{"startOffset":11096,"endOffset":11840,"count":0},{"startOffset":11854,"endOffset":11908,"count":0},{"startOffset":11922,"endOffset":11989,"count":0}],"isBlockCoverage":true},{"functionName":"replaceStars","ranges":[{"startOffset":12191,"endOffset":12376,"count":4}],"isBlockCoverage":true},{"functionName":"replaceGTE0","ranges":[{"startOffset":12398,"endOffset":12553,"count":5},{"startOffset":12525,"endOffset":12536,"count":0}],"isBlockCoverage":true},{"functionName":"hyphenReplace","ranges":[{"startOffset":12810,"endOffset":13480,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12819,"endOffset":13480,"count":0}],"isBlockCoverage":false},{"functionName":"testSet","ranges":[{"startOffset":13498,"endOffset":14522,"count":4},{"startOffset":13566,"endOffset":13629,"count":5},{"startOffset":13599,"endOffset":13625,"count":1},{"startOffset":13629,"endOffset":13663,"count":3},{"startOffset":13663,"endOffset":13692,"count":0},{"startOffset":13694,"endOffset":14505,"count":0},{"startOffset":14505,"endOffset":14521,"count":3}],"isBlockCoverage":true}]},{"scriptId":"753","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/internal/lrucache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":788,"count":1}],"isBlockCoverage":true},{"functionName":"LRUCache","ranges":[{"startOffset":19,"endOffset":84,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":88,"endOffset":348,"count":4},{"startOffset":195,"endOffset":344,"count":0}],"isBlockCoverage":true},{"functionName":"delete","ranges":[{"startOffset":352,"endOffset":402,"count":4}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":406,"endOffset":758,"count":4},{"startOffset":606,"endOffset":699,"count":0}],"isBlockCoverage":true}]},{"scriptId":"754","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/functions/satisfies.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":233,"count":1}],"isBlockCoverage":true},{"functionName":"satisfies","ranges":[{"startOffset":60,"endOffset":205,"count":3},{"startOffset":141,"endOffset":174,"count":0}],"isBlockCoverage":true}]},{"scriptId":"755","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/ranges/to-comparators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":268,"count":1}],"isBlockCoverage":true},{"functionName":"toComparators","ranges":[{"startOffset":115,"endOffset":235,"count":0}],"isBlockCoverage":false}]},{"scriptId":"756","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/ranges/max-satisfying.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":579,"count":1}],"isBlockCoverage":true},{"functionName":"maxSatisfying","ranges":[{"startOffset":109,"endOffset":547,"count":0}],"isBlockCoverage":false}]},{"scriptId":"757","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/ranges/min-satisfying.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":577,"count":1}],"isBlockCoverage":true},{"functionName":"minSatisfying","ranges":[{"startOffset":108,"endOffset":545,"count":0}],"isBlockCoverage":false}]},{"scriptId":"758","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/ranges/min-version.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1500,"count":1}],"isBlockCoverage":true},{"functionName":"minVersion","ranges":[{"startOffset":144,"endOffset":1471,"count":0}],"isBlockCoverage":false}]},{"scriptId":"759","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/ranges/valid.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":312,"count":1}],"isBlockCoverage":true},{"functionName":"validRange","ranges":[{"startOffset":61,"endOffset":283,"count":0}],"isBlockCoverage":false}]},{"scriptId":"760","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/ranges/outside.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2190,"count":1}],"isBlockCoverage":true},{"functionName":"outside","ranges":[{"startOffset":390,"endOffset":2163,"count":0}],"isBlockCoverage":false}]},{"scriptId":"761","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/ranges/gtr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":217,"count":1}],"isBlockCoverage":true},{"functionName":"gtr","ranges":[{"startOffset":129,"endOffset":195,"count":0}],"isBlockCoverage":false}]},{"scriptId":"762","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/ranges/ltr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":213,"count":1}],"isBlockCoverage":true},{"functionName":"ltr","ranges":[{"startOffset":125,"endOffset":191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"763","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/ranges/intersects.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":210,"count":1}],"isBlockCoverage":true},{"functionName":"intersects","ranges":[{"startOffset":61,"endOffset":181,"count":0}],"isBlockCoverage":false}]},{"scriptId":"764","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/ranges/simplify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1341,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":329,"endOffset":1340,"count":0}],"isBlockCoverage":false}]},{"scriptId":"765","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/semver/ranges/subset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7510,"count":1}],"isBlockCoverage":true},{"functionName":"subset","ranges":[{"startOffset":1996,"endOffset":2727,"count":0}],"isBlockCoverage":false},{"functionName":"simpleSubset","ranges":[{"startOffset":2869,"endOffset":6974,"count":0}],"isBlockCoverage":false},{"functionName":"higherGT","ranges":[{"startOffset":7025,"endOffset":7229,"count":0}],"isBlockCoverage":false},{"functionName":"lowerLT","ranges":[{"startOffset":7280,"endOffset":7484,"count":0}],"isBlockCoverage":false}]},{"scriptId":"766","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/postgres/query.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12625,"count":1}],"isBlockCoverage":true},{"functionName":"formatBindParameters","ranges":[{"startOffset":333,"endOffset":1238,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":1241,"endOffset":9178,"count":0}],"isBlockCoverage":false},{"functionName":"formatError","ranges":[{"startOffset":9181,"endOffset":12162,"count":0}],"isBlockCoverage":false},{"functionName":"isForeignKeysQuery","ranges":[{"startOffset":12165,"endOffset":12458,"count":0}],"isBlockCoverage":false},{"functionName":"getInsertIdField","ranges":[{"startOffset":12461,"endOffset":12502,"count":0}],"isBlockCoverage":false}]},{"scriptId":"767","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/abstract/query.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19118,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":241,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadValues","ranges":[{"startOffset":401,"endOffset":698,"count":0}],"isBlockCoverage":false},{"functionName":"AbstractQuery","ranges":[{"startOffset":1028,"endOffset":1483,"count":0}],"isBlockCoverage":false},{"functionName":"formatBindParameters","ranges":[{"startOffset":1493,"endOffset":3330,"count":0}],"isBlockCoverage":false},{"functionName":"formatError","ranges":[{"startOffset":3333,"endOffset":3413,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":3416,"endOffset":3486,"count":0}],"isBlockCoverage":false},{"functionName":"checkLoggingOption","ranges":[{"startOffset":3489,"endOffset":3640,"count":0}],"isBlockCoverage":false},{"functionName":"getInsertIdField","ranges":[{"startOffset":3643,"endOffset":3690,"count":0}],"isBlockCoverage":false},{"functionName":"getUniqueConstraintErrorMessage","ranges":[{"startOffset":3693,"endOffset":4143,"count":0}],"isBlockCoverage":false},{"functionName":"isRawQuery","ranges":[{"startOffset":4146,"endOffset":4213,"count":0}],"isBlockCoverage":false},{"functionName":"isVersionQuery","ranges":[{"startOffset":4216,"endOffset":4291,"count":0}],"isBlockCoverage":false},{"functionName":"isUpsertQuery","ranges":[{"startOffset":4294,"endOffset":4367,"count":0}],"isBlockCoverage":false},{"functionName":"isInsertQuery","ranges":[{"startOffset":4370,"endOffset":4819,"count":0}],"isBlockCoverage":false},{"functionName":"handleInsertQuery","ranges":[{"startOffset":4822,"endOffset":5164,"count":0}],"isBlockCoverage":false},{"functionName":"isShowTablesQuery","ranges":[{"startOffset":5167,"endOffset":5248,"count":0}],"isBlockCoverage":false},{"functionName":"handleShowTablesQuery","ranges":[{"startOffset":5251,"endOffset":5363,"count":0}],"isBlockCoverage":false},{"functionName":"isShowIndexesQuery","ranges":[{"startOffset":5366,"endOffset":5449,"count":0}],"isBlockCoverage":false},{"functionName":"isShowConstraintsQuery","ranges":[{"startOffset":5452,"endOffset":5543,"count":0}],"isBlockCoverage":false},{"functionName":"isDescribeQuery","ranges":[{"startOffset":5546,"endOffset":5623,"count":0}],"isBlockCoverage":false},{"functionName":"isSelectQuery","ranges":[{"startOffset":5626,"endOffset":5699,"count":0}],"isBlockCoverage":false},{"functionName":"isBulkUpdateQuery","ranges":[{"startOffset":5702,"endOffset":5783,"count":0}],"isBlockCoverage":false},{"functionName":"isBulkDeleteQuery","ranges":[{"startOffset":5786,"endOffset":5867,"count":0}],"isBlockCoverage":false},{"functionName":"isForeignKeysQuery","ranges":[{"startOffset":5870,"endOffset":5953,"count":0}],"isBlockCoverage":false},{"functionName":"isUpdateQuery","ranges":[{"startOffset":5956,"endOffset":6029,"count":0}],"isBlockCoverage":false},{"functionName":"handleSelectQuery","ranges":[{"startOffset":6032,"endOffset":7764,"count":0}],"isBlockCoverage":false},{"functionName":"isShowOrDescribeQuery","ranges":[{"startOffset":7767,"endOffset":7975,"count":0}],"isBlockCoverage":false},{"functionName":"isCallQuery","ranges":[{"startOffset":7978,"endOffset":8051,"count":0}],"isBlockCoverage":false},{"functionName":"_logQuery","ranges":[{"startOffset":8054,"endOffset":9162,"count":0}],"isBlockCoverage":false},{"functionName":"_groupJoinData","ranges":[{"startOffset":9172,"endOffset":18963,"count":0}],"isBlockCoverage":false}]},{"scriptId":"768","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/postgres/query-generator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31964,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":241,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadValues","ranges":[{"startOffset":401,"endOffset":698,"count":0}],"isBlockCoverage":false},{"functionName":"setSearchPath","ranges":[{"startOffset":1794,"endOffset":1873,"count":0}],"isBlockCoverage":false},{"functionName":"createDatabaseQuery","ranges":[{"startOffset":1876,"endOffset":2552,"count":0}],"isBlockCoverage":false},{"functionName":"dropDatabaseQuery","ranges":[{"startOffset":2555,"endOffset":2664,"count":0}],"isBlockCoverage":false},{"functionName":"createSchema","ranges":[{"startOffset":2667,"endOffset":2985,"count":0}],"isBlockCoverage":false},{"functionName":"dropSchema","ranges":[{"startOffset":2988,"endOffset":3089,"count":0}],"isBlockCoverage":false},{"functionName":"showSchemasQuery","ranges":[{"startOffset":3092,"endOffset":3280,"count":0}],"isBlockCoverage":false},{"functionName":"versionQuery","ranges":[{"startOffset":3283,"endOffset":3337,"count":0}],"isBlockCoverage":false},{"functionName":"createTableQuery","ranges":[{"startOffset":3340,"endOffset":5136,"count":0}],"isBlockCoverage":false},{"functionName":"dropTableQuery","ranges":[{"startOffset":5139,"endOffset":5310,"count":0}],"isBlockCoverage":false},{"functionName":"showTablesQuery","ranges":[{"startOffset":5313,"endOffset":5561,"count":0}],"isBlockCoverage":false},{"functionName":"tableExistsQuery","ranges":[{"startOffset":5564,"endOffset":5844,"count":0}],"isBlockCoverage":false},{"functionName":"describeTableQuery","ranges":[{"startOffset":5847,"endOffset":7184,"count":0}],"isBlockCoverage":false},{"functionName":"_checkValidJsonStatement","ranges":[{"startOffset":7187,"endOffset":8850,"count":0}],"isBlockCoverage":false},{"functionName":"handleSequelizeMethod","ranges":[{"startOffset":8853,"endOffset":9756,"count":0}],"isBlockCoverage":false},{"functionName":"addColumnQuery","ranges":[{"startOffset":9759,"endOffset":10486,"count":0}],"isBlockCoverage":false},{"functionName":"removeColumnQuery","ranges":[{"startOffset":10489,"endOffset":10770,"count":0}],"isBlockCoverage":false},{"functionName":"changeColumnQuery","ranges":[{"startOffset":10773,"endOffset":12839,"count":0}],"isBlockCoverage":false},{"functionName":"renameColumnQuery","ranges":[{"startOffset":12842,"endOffset":13179,"count":0}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":13182,"endOffset":13583,"count":0}],"isBlockCoverage":false},{"functionName":"truncateTableQuery","ranges":[{"startOffset":13586,"endOffset":13810,"count":0}],"isBlockCoverage":false},{"functionName":"deleteQuery","ranges":[{"startOffset":13813,"endOffset":14726,"count":0}],"isBlockCoverage":false},{"functionName":"showIndexesQuery","ranges":[{"startOffset":14729,"endOffset":15572,"count":0}],"isBlockCoverage":false},{"functionName":"showConstraintsQuery","ranges":[{"startOffset":15575,"endOffset":16146,"count":0}],"isBlockCoverage":false},{"functionName":"removeIndexQuery","ranges":[{"startOffset":16149,"endOffset":16568,"count":0}],"isBlockCoverage":false},{"functionName":"addLimitAndOffset","ranges":[{"startOffset":16571,"endOffset":16844,"count":0}],"isBlockCoverage":false},{"functionName":"attributeToSQL","ranges":[{"startOffset":16847,"endOffset":20056,"count":0}],"isBlockCoverage":false},{"functionName":"deferConstraintsQuery","ranges":[{"startOffset":20059,"endOffset":20141,"count":0}],"isBlockCoverage":false},{"functionName":"setConstraintQuery","ranges":[{"startOffset":20144,"endOffset":20385,"count":0}],"isBlockCoverage":false},{"functionName":"setDeferredQuery","ranges":[{"startOffset":20388,"endOffset":20476,"count":0}],"isBlockCoverage":false},{"functionName":"setImmediateQuery","ranges":[{"startOffset":20479,"endOffset":20569,"count":0}],"isBlockCoverage":false},{"functionName":"attributesToSQL","ranges":[{"startOffset":20572,"endOffset":20844,"count":0}],"isBlockCoverage":false},{"functionName":"createTrigger","ranges":[{"startOffset":20847,"endOffset":21495,"count":0}],"isBlockCoverage":false},{"functionName":"dropTrigger","ranges":[{"startOffset":21498,"endOffset":21646,"count":0}],"isBlockCoverage":false},{"functionName":"renameTrigger","ranges":[{"startOffset":21649,"endOffset":21863,"count":0}],"isBlockCoverage":false},{"functionName":"createFunction","ranges":[{"startOffset":21866,"endOffset":22662,"count":0}],"isBlockCoverage":false},{"functionName":"dropFunction","ranges":[{"startOffset":22665,"endOffset":22905,"count":0}],"isBlockCoverage":false},{"functionName":"renameFunction","ranges":[{"startOffset":22908,"endOffset":23123,"count":0}],"isBlockCoverage":false},{"functionName":"pgEscapeAndQuote","ranges":[{"startOffset":23126,"endOffset":23228,"count":0}],"isBlockCoverage":false},{"functionName":"_expandFunctionParamList","ranges":[{"startOffset":23231,"endOffset":24021,"count":0}],"isBlockCoverage":false},{"functionName":"_expandFunctionVariableList","ranges":[{"startOffset":24024,"endOffset":24708,"count":0}],"isBlockCoverage":false},{"functionName":"expandOptions","ranges":[{"startOffset":24711,"endOffset":24817,"count":0}],"isBlockCoverage":false},{"functionName":"decodeTriggerEventType","ranges":[{"startOffset":24820,"endOffset":25184,"count":0}],"isBlockCoverage":false},{"functionName":"triggerEventTypeIsConstraint","ranges":[{"startOffset":25187,"endOffset":25308,"count":0}],"isBlockCoverage":false},{"functionName":"expandTriggerEventSpec","ranges":[{"startOffset":25311,"endOffset":26058,"count":0}],"isBlockCoverage":false},{"functionName":"pgEnumName","ranges":[{"startOffset":26061,"endOffset":26479,"count":0}],"isBlockCoverage":false},{"functionName":"pgListEnums","ranges":[{"startOffset":26482,"endOffset":27075,"count":0}],"isBlockCoverage":false},{"functionName":"pgEnum","ranges":[{"startOffset":27078,"endOffset":27652,"count":0}],"isBlockCoverage":false},{"functionName":"pgEnumAdd","ranges":[{"startOffset":27655,"endOffset":28136,"count":0}],"isBlockCoverage":false},{"functionName":"pgEnumDrop","ranges":[{"startOffset":28139,"endOffset":28291,"count":0}],"isBlockCoverage":false},{"functionName":"fromArray","ranges":[{"startOffset":28294,"endOffset":28631,"count":0}],"isBlockCoverage":false},{"functionName":"dataTypeMapping","ranges":[{"startOffset":28634,"endOffset":29425,"count":0}],"isBlockCoverage":false},{"functionName":"getForeignKeysQuery","ranges":[{"startOffset":29428,"endOffset":29717,"count":0}],"isBlockCoverage":false},{"functionName":"_getForeignKeyReferencesQueryPrefix","ranges":[{"startOffset":29720,"endOffset":30538,"count":0}],"isBlockCoverage":false},{"functionName":"getForeignKeyReferencesQuery","ranges":[{"startOffset":30541,"endOffset":30868,"count":0}],"isBlockCoverage":false},{"functionName":"getForeignKeyReferenceQuery","ranges":[{"startOffset":30871,"endOffset":31226,"count":0}],"isBlockCoverage":false},{"functionName":"dropForeignKeyQuery","ranges":[{"startOffset":31229,"endOffset":31386,"count":0}],"isBlockCoverage":false},{"functionName":"quoteIdentifier","ranges":[{"startOffset":31389,"endOffset":31876,"count":0}],"isBlockCoverage":false}]},{"scriptId":"769","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/abstract/query-generator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":90701,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":341,"endOffset":478,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadValues","ranges":[{"startOffset":501,"endOffset":798,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadProps","ranges":[{"startOffset":820,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"QueryGenerator","ranges":[{"startOffset":1591,"endOffset":2028,"count":1},{"startOffset":1648,"endOffset":1720,"count":0},{"startOffset":1754,"endOffset":1825,"count":0}],"isBlockCoverage":true},{"functionName":"extractTableDetails","ranges":[{"startOffset":2031,"endOffset":2387,"count":0}],"isBlockCoverage":false},{"functionName":"addSchema","ranges":[{"startOffset":2390,"endOffset":2775,"count":1},{"startOffset":2462,"endOffset":2470,"count":0},{"startOffset":2471,"endOffset":2549,"count":0},{"startOffset":2580,"endOffset":2588,"count":0},{"startOffset":2613,"endOffset":2621,"count":0},{"startOffset":2692,"endOffset":2698,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":2706,"endOffset":2764,"count":0}],"isBlockCoverage":false},{"functionName":"dropSchema","ranges":[{"startOffset":2778,"endOffset":2866,"count":0}],"isBlockCoverage":false},{"functionName":"describeTableQuery","ranges":[{"startOffset":2869,"endOffset":3102,"count":0}],"isBlockCoverage":false},{"functionName":"dropTableQuery","ranges":[{"startOffset":3105,"endOffset":3202,"count":0}],"isBlockCoverage":false},{"functionName":"renameTableQuery","ranges":[{"startOffset":3205,"endOffset":3332,"count":0}],"isBlockCoverage":false},{"functionName":"populateInsertQueryReturnIntoBinds","ranges":[{"startOffset":3335,"endOffset":3377,"count":0}],"isBlockCoverage":false},{"functionName":"insertQuery","ranges":[{"startOffset":3380,"endOffset":10907,"count":0}],"isBlockCoverage":false},{"functionName":"bulkInsertQuery","ranges":[{"startOffset":10910,"endOffset":14158,"count":0}],"isBlockCoverage":false},{"functionName":"updateQuery","ranges":[{"startOffset":14161,"endOffset":17044,"count":0}],"isBlockCoverage":false},{"functionName":"arithmeticQuery","ranges":[{"startOffset":17047,"endOffset":18541,"count":0}],"isBlockCoverage":false},{"functionName":"addIndexQuery","ranges":[{"startOffset":18544,"endOffset":21566,"count":0}],"isBlockCoverage":false},{"functionName":"addConstraintQuery","ranges":[{"startOffset":21569,"endOffset":21935,"count":0}],"isBlockCoverage":false},{"functionName":"getConstraintSnippet","ranges":[{"startOffset":21938,"endOffset":25349,"count":0}],"isBlockCoverage":false},{"functionName":"removeConstraintQuery","ranges":[{"startOffset":25352,"endOffset":25715,"count":0}],"isBlockCoverage":false},{"functionName":"quote","ranges":[{"startOffset":25718,"endOffset":30345,"count":0}],"isBlockCoverage":false},{"functionName":"_initQuoteIdentifier","ranges":[{"startOffset":30348,"endOffset":30602,"count":1}],"isBlockCoverage":true},{"functionName":"quoteIdentifier","ranges":[{"startOffset":30450,"endOffset":30597,"count":0}],"isBlockCoverage":false},{"functionName":"quoteIdentifier","ranges":[{"startOffset":30605,"endOffset":30734,"count":0}],"isBlockCoverage":false},{"functionName":"quoteIdentifiers","ranges":[{"startOffset":30737,"endOffset":31113,"count":0}],"isBlockCoverage":false},{"functionName":"quoteAttribute","ranges":[{"startOffset":31116,"endOffset":31304,"count":0}],"isBlockCoverage":false},{"functionName":"getAliasToken","ranges":[{"startOffset":31307,"endOffset":31345,"count":0}],"isBlockCoverage":false},{"functionName":"quoteTable","ranges":[{"startOffset":31348,"endOffset":32082,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":32085,"endOffset":32849,"count":0}],"isBlockCoverage":false},{"functionName":"bindParam","ranges":[{"startOffset":32852,"endOffset":32960,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":32963,"endOffset":33560,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":33563,"endOffset":34198,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierQuoted","ranges":[{"startOffset":34201,"endOffset":34313,"count":0}],"isBlockCoverage":false},{"functionName":"jsonPathExtractionQuery","ranges":[{"startOffset":34316,"endOffset":35372,"count":0}],"isBlockCoverage":false},{"functionName":"selectQuery","ranges":[{"startOffset":35375,"endOffset":45344,"count":0}],"isBlockCoverage":false},{"functionName":"aliasGrouping","ranges":[{"startOffset":45347,"endOffset":45543,"count":0}],"isBlockCoverage":false},{"functionName":"escapeAttributes","ranges":[{"startOffset":45546,"endOffset":48157,"count":0}],"isBlockCoverage":false},{"functionName":"generateInclude","ranges":[{"startOffset":48160,"endOffset":54045,"count":0}],"isBlockCoverage":false},{"functionName":"_getMinifiedAlias","ranges":[{"startOffset":54048,"endOffset":54505,"count":0}],"isBlockCoverage":false},{"functionName":"_getAliasForField","ranges":[{"startOffset":54508,"endOffset":54750,"count":0}],"isBlockCoverage":false},{"functionName":"generateJoin","ranges":[{"startOffset":54753,"endOffset":57986,"count":0}],"isBlockCoverage":false},{"functionName":"generateReturnValues","ranges":[{"startOffset":57989,"endOffset":59512,"count":0}],"isBlockCoverage":false},{"functionName":"generateThroughJoin","ranges":[{"startOffset":59515,"endOffset":63418,"count":0}],"isBlockCoverage":false},{"functionName":"aliasAs","ranges":[{"startOffset":63421,"endOffset":63641,"count":0}],"isBlockCoverage":false},{"functionName":"_generateSubQueryFilter","ranges":[{"startOffset":63644,"endOffset":66913,"count":0}],"isBlockCoverage":false},{"functionName":"_getRequiredClosure","ranges":[{"startOffset":66916,"endOffset":67217,"count":0}],"isBlockCoverage":false},{"functionName":"getQueryOrders","ranges":[{"startOffset":67220,"endOffset":69367,"count":0}],"isBlockCoverage":false},{"functionName":"_throwOnEmptyAttributes","ranges":[{"startOffset":69370,"endOffset":69793,"count":0}],"isBlockCoverage":false},{"functionName":"selectFromTableFragment","ranges":[{"startOffset":69796,"endOffset":70465,"count":0}],"isBlockCoverage":false},{"functionName":"addLimitAndOffset","ranges":[{"startOffset":70468,"endOffset":70938,"count":0}],"isBlockCoverage":false},{"functionName":"handleSequelizeMethod","ranges":[{"startOffset":70941,"endOffset":74025,"count":0}],"isBlockCoverage":false},{"functionName":"whereQuery","ranges":[{"startOffset":74028,"endOffset":74201,"count":0}],"isBlockCoverage":false},{"functionName":"whereItemsQuery","ranges":[{"startOffset":74204,"endOffset":74960,"count":0}],"isBlockCoverage":false},{"functionName":"whereItemQuery","ranges":[{"startOffset":74963,"endOffset":78920,"count":0}],"isBlockCoverage":false},{"functionName":"_findField","ranges":[{"startOffset":78923,"endOffset":79326,"count":0}],"isBlockCoverage":false},{"functionName":"_whereGroupBind","ranges":[{"startOffset":79329,"endOffset":80193,"count":0}],"isBlockCoverage":false},{"functionName":"_whereBind","ranges":[{"startOffset":80196,"endOffset":80661,"count":0}],"isBlockCoverage":false},{"functionName":"_whereJSON","ranges":[{"startOffset":80664,"endOffset":81463,"count":0}],"isBlockCoverage":false},{"functionName":"_traverseJSON","ranges":[{"startOffset":81466,"endOffset":82574,"count":0}],"isBlockCoverage":false},{"functionName":"_toJSONValue","ranges":[{"startOffset":82577,"endOffset":82620,"count":0}],"isBlockCoverage":false},{"functionName":"_castKey","ranges":[{"startOffset":82623,"endOffset":82909,"count":0}],"isBlockCoverage":false},{"functionName":"_getJsonCast","ranges":[{"startOffset":82912,"endOffset":83160,"count":0}],"isBlockCoverage":false},{"functionName":"_joinKeyValue","ranges":[{"startOffset":83163,"endOffset":83449,"count":0}],"isBlockCoverage":false},{"functionName":"_getSafeKey","ranges":[{"startOffset":83452,"endOffset":84023,"count":0}],"isBlockCoverage":false},{"functionName":"_prefixKey","ranges":[{"startOffset":84026,"endOffset":84271,"count":0}],"isBlockCoverage":false},{"functionName":"_whereParseSingleValueObject","ranges":[{"startOffset":84274,"endOffset":87963,"count":0}],"isBlockCoverage":false},{"functionName":"getWhereConditions","ranges":[{"startOffset":87966,"endOffset":90016,"count":0}],"isBlockCoverage":false},{"functionName":"parseConditionObject","ranges":[{"startOffset":90019,"endOffset":90352,"count":0}],"isBlockCoverage":false},{"functionName":"booleanValue","ranges":[{"startOffset":90355,"endOffset":90398,"count":0}],"isBlockCoverage":false},{"functionName":"authTestQuery","ranges":[{"startOffset":90401,"endOffset":90457,"count":1}],"isBlockCoverage":true}]},{"scriptId":"770","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/abstract/query-generator/operators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2645,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":241,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadValues","ranges":[{"startOffset":401,"endOffset":698,"count":0}],"isBlockCoverage":false},{"functionName":"setOperatorsAliases","ranges":[{"startOffset":1831,"endOffset":2024,"count":0}],"isBlockCoverage":false},{"functionName":"_replaceAliases","ranges":[{"startOffset":2028,"endOffset":2569,"count":0}],"isBlockCoverage":false}]},{"scriptId":"771","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/abstract/query-generator/transaction.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":980,"count":1}],"isBlockCoverage":true},{"functionName":"setIsolationLevelQuery","ranges":[{"startOffset":80,"endOffset":226,"count":0}],"isBlockCoverage":false},{"functionName":"generateTransactionId","ranges":[{"startOffset":230,"endOffset":280,"count":0}],"isBlockCoverage":false},{"functionName":"startTransactionQuery","ranges":[{"startOffset":284,"endOffset":468,"count":0}],"isBlockCoverage":false},{"functionName":"deferConstraintsQuery","ranges":[{"startOffset":472,"endOffset":501,"count":0}],"isBlockCoverage":false},{"functionName":"setConstraintQuery","ranges":[{"startOffset":505,"endOffset":531,"count":0}],"isBlockCoverage":false},{"functionName":"setDeferredQuery","ranges":[{"startOffset":535,"endOffset":559,"count":0}],"isBlockCoverage":false},{"functionName":"setImmediateQuery","ranges":[{"startOffset":563,"endOffset":588,"count":0}],"isBlockCoverage":false},{"functionName":"commitTransactionQuery","ranges":[{"startOffset":592,"endOffset":705,"count":0}],"isBlockCoverage":false},{"functionName":"rollbackTransactionQuery","ranges":[{"startOffset":709,"endOffset":899,"count":0}],"isBlockCoverage":false}]},{"scriptId":"772","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/postgres/query-interface.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7994,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":341,"endOffset":478,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadValues","ranges":[{"startOffset":501,"endOffset":798,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadProps","ranges":[{"startOffset":820,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"__objRest","ranges":[{"startOffset":883,"endOffset":1287,"count":0}],"isBlockCoverage":false},{"functionName":"ensureEnums","ranges":[{"startOffset":1594,"endOffset":5321,"count":0}],"isBlockCoverage":false},{"functionName":"getForeignKeyReferencesForTable","ranges":[{"startOffset":5324,"endOffset":6130,"count":0}],"isBlockCoverage":false},{"functionName":"dropEnum","ranges":[{"startOffset":6133,"endOffset":6385,"count":0}],"isBlockCoverage":false},{"functionName":"dropAllEnums","ranges":[{"startOffset":6388,"endOffset":6741,"count":0}],"isBlockCoverage":false},{"functionName":"pgListEnums","ranges":[{"startOffset":6744,"endOffset":7012,"count":0}],"isBlockCoverage":false},{"functionName":"dropTable","ranges":[{"startOffset":7015,"endOffset":7890,"count":0}],"isBlockCoverage":false}]},{"scriptId":"773","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1519,"count":1},{"startOffset":850,"endOffset":900,"count":0}],"isBlockCoverage":true},{"functionName":"poolFactory","ranges":[{"startOffset":288,"endOffset":409,"count":1}],"isBlockCoverage":true},{"functionName":"BoundPool","ranges":[{"startOffset":346,"endOffset":403,"count":0}],"isBlockCoverage":false},{"functionName":"PG","ranges":[{"startOffset":420,"endOffset":787,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1121,"endOffset":1510,"count":0}],"isBlockCoverage":false}]},{"scriptId":"774","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg/lib/client.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18013,"count":1}],"isBlockCoverage":true},{"functionName":"Client","ranges":[{"startOffset":431,"endOffset":2221,"count":1},{"startOffset":1094,"endOffset":1099,"count":0},{"startOffset":2042,"endOffset":2057,"count":0},{"startOffset":2059,"endOffset":2149,"count":0}],"isBlockCoverage":true},{"functionName":"_errorAllQueries","ranges":[{"startOffset":2225,"endOffset":2560,"count":0}],"isBlockCoverage":false},{"functionName":"_connect","ranges":[{"startOffset":2564,"endOffset":4611,"count":1},{"startOffset":2721,"endOffset":2896,"count":0},{"startOffset":3002,"endOffset":3189,"count":0},{"startOffset":3242,"endOffset":3305,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2839,"endOffset":2876,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3052,"endOffset":3151,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3441,"endOffset":3573,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3601,"endOffset":3661,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3716,"endOffset":4606,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":4615,"endOffset":4901,"count":1},{"startOffset":4703,"endOffset":4900,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4734,"endOffset":4896,"count":0}],"isBlockCoverage":false},{"functionName":"_attachListeners","ranges":[{"startOffset":4905,"endOffset":6315,"count":1}],"isBlockCoverage":true},{"functionName":"_checkPgPass","ranges":[{"startOffset":6490,"endOffset":7531,"count":0}],"isBlockCoverage":false},{"functionName":"_handleAuthCleartextPassword","ranges":[{"startOffset":7535,"endOffset":7657,"count":0}],"isBlockCoverage":false},{"functionName":"_handleAuthMD5Password","ranges":[{"startOffset":7661,"endOffset":7960,"count":0}],"isBlockCoverage":false},{"functionName":"_handleAuthSASL","ranges":[{"startOffset":7964,"endOffset":8283,"count":0}],"isBlockCoverage":false},{"functionName":"_handleAuthSASLContinue","ranges":[{"startOffset":8287,"endOffset":8557,"count":0}],"isBlockCoverage":false},{"functionName":"_handleAuthSASLFinal","ranges":[{"startOffset":8561,"endOffset":8754,"count":0}],"isBlockCoverage":false},{"functionName":"_handleBackendKeyData","ranges":[{"startOffset":8758,"endOffset":8860,"count":0}],"isBlockCoverage":false},{"functionName":"_handleReadyForQuery","ranges":[{"startOffset":8864,"endOffset":9550,"count":0}],"isBlockCoverage":false},{"functionName":"_handleErrorWhileConnecting","ranges":[{"startOffset":9659,"endOffset":10011,"count":0}],"isBlockCoverage":false},{"functionName":"_handleErrorEvent","ranges":[{"startOffset":10210,"endOffset":10410,"count":0}],"isBlockCoverage":false},{"functionName":"_handleErrorMessage","ranges":[{"startOffset":10467,"endOffset":10780,"count":0}],"isBlockCoverage":false},{"functionName":"_handleRowDescription","ranges":[{"startOffset":10784,"endOffset":10910,"count":0}],"isBlockCoverage":false},{"functionName":"_handleDataRow","ranges":[{"startOffset":10914,"endOffset":11019,"count":0}],"isBlockCoverage":false},{"functionName":"_handlePortalSuspended","ranges":[{"startOffset":11023,"endOffset":11164,"count":0}],"isBlockCoverage":false},{"functionName":"_handleEmptyQuery","ranges":[{"startOffset":11168,"endOffset":11294,"count":0}],"isBlockCoverage":false},{"functionName":"_handleCommandComplete","ranges":[{"startOffset":11298,"endOffset":11444,"count":0}],"isBlockCoverage":false},{"functionName":"_handleParseComplete","ranges":[{"startOffset":11448,"endOffset":11766,"count":0}],"isBlockCoverage":false},{"functionName":"_handleCopyInResponse","ranges":[{"startOffset":11770,"endOffset":11861,"count":0}],"isBlockCoverage":false},{"functionName":"_handleCopyData","ranges":[{"startOffset":11865,"endOffset":11949,"count":0}],"isBlockCoverage":false},{"functionName":"_handleNotification","ranges":[{"startOffset":11953,"endOffset":12018,"count":0}],"isBlockCoverage":false},{"functionName":"_handleNotice","ranges":[{"startOffset":12022,"endOffset":12075,"count":0}],"isBlockCoverage":false},{"functionName":"getStartupConf","ranges":[{"startOffset":12079,"endOffset":12937,"count":0}],"isBlockCoverage":false},{"functionName":"cancel","ranges":[{"startOffset":12941,"endOffset":13514,"count":0}],"isBlockCoverage":false},{"functionName":"setTypeParser","ranges":[{"startOffset":13518,"endOffset":13618,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeParser","ranges":[{"startOffset":13622,"endOffset":13704,"count":0}],"isBlockCoverage":false},{"functionName":"escapeIdentifier","ranges":[{"startOffset":13847,"endOffset":13913,"count":0}],"isBlockCoverage":false},{"functionName":"escapeLiteral","ranges":[{"startOffset":13917,"endOffset":13977,"count":0}],"isBlockCoverage":false},{"functionName":"_pulseQueryQueue","ranges":[{"startOffset":13981,"endOffset":14597,"count":0}],"isBlockCoverage":false},{"functionName":"query","ranges":[{"startOffset":14601,"endOffset":17132,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":17136,"endOffset":17173,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":17177,"endOffset":17218,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":17222,"endOffset":17933,"count":0}],"isBlockCoverage":false}]},{"scriptId":"775","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5261,"count":1}],"isBlockCoverage":true},{"functionName":"escapeElement","ranges":[{"startOffset":54,"endOffset":215,"count":0}],"isBlockCoverage":false},{"functionName":"arrayString","ranges":[{"startOffset":365,"endOffset":1208,"count":0}],"isBlockCoverage":false},{"functionName":"prepareValue","ranges":[{"startOffset":1443,"endOffset":2221,"count":0}],"isBlockCoverage":false},{"functionName":"prepareObject","ranges":[{"startOffset":2223,"endOffset":2583,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":2585,"endOffset":2721,"count":0}],"isBlockCoverage":false},{"functionName":"dateToString","ranges":[{"startOffset":2723,"endOffset":3427,"count":0}],"isBlockCoverage":false},{"functionName":"dateToStringUTC","ranges":[{"startOffset":3429,"endOffset":3981,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeQueryConfig","ranges":[{"startOffset":3983,"endOffset":4359,"count":0}],"isBlockCoverage":false},{"functionName":"escapeIdentifier","ranges":[{"startOffset":4464,"endOffset":4527,"count":0}],"isBlockCoverage":false},{"functionName":"escapeLiteral","ranges":[{"startOffset":4551,"endOffset":4942,"count":0}],"isBlockCoverage":false},{"functionName":"prepareValueWrapper","ranges":[{"startOffset":4979,"endOffset":5196,"count":0}],"isBlockCoverage":false}]},{"scriptId":"776","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg/lib/defaults.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2420,"count":1},{"startOffset":183,"endOffset":201,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2201,"endOffset":2418,"count":0}],"isBlockCoverage":false}]},{"scriptId":"777","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg-types/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1214,"count":1}],"isBlockCoverage":true},{"functionName":"noParse","ranges":[{"startOffset":418,"endOffset":466,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeParser","ranges":[{"startOffset":694,"endOffset":863,"count":2},{"startOffset":751,"endOffset":760,"count":0},{"startOffset":790,"endOffset":815,"count":0},{"startOffset":850,"endOffset":860,"count":0}],"isBlockCoverage":true},{"functionName":"setTypeParser","ranges":[{"startOffset":866,"endOffset":1036,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1056,"endOffset":1121,"count":44}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1144,"endOffset":1211,"count":16}],"isBlockCoverage":true}]},{"scriptId":"778","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg-types/lib/textParsers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5367,"count":1}],"isBlockCoverage":true},{"functionName":"allowNull","ranges":[{"startOffset":219,"endOffset":348,"count":0}],"isBlockCoverage":false},{"functionName":"parseBool","ranges":[{"startOffset":350,"endOffset":574,"count":0}],"isBlockCoverage":false},{"functionName":"parseBoolArray","ranges":[{"startOffset":576,"endOffset":676,"count":0}],"isBlockCoverage":false},{"functionName":"parseBaseTenInt","ranges":[{"startOffset":678,"endOffset":745,"count":0}],"isBlockCoverage":false},{"functionName":"parseIntegerArray","ranges":[{"startOffset":747,"endOffset":867,"count":0}],"isBlockCoverage":false},{"functionName":"parseBigIntegerArray","ranges":[{"startOffset":869,"endOffset":1040,"count":0}],"isBlockCoverage":false},{"functionName":"parsePointArray","ranges":[{"startOffset":1064,"endOffset":1276,"count":0}],"isBlockCoverage":false},{"functionName":"parseFloatArray","ranges":[{"startOffset":1301,"endOffset":1513,"count":0}],"isBlockCoverage":false},{"functionName":"parseStringArray","ranges":[{"startOffset":1539,"endOffset":1646,"count":0}],"isBlockCoverage":false},{"functionName":"parseDateArray","ranges":[{"startOffset":1670,"endOffset":1884,"count":0}],"isBlockCoverage":false},{"functionName":"parseIntervalArray","ranges":[{"startOffset":1912,"endOffset":2130,"count":0}],"isBlockCoverage":false},{"functionName":"parseByteAArray","ranges":[{"startOffset":2155,"endOffset":2258,"count":0}],"isBlockCoverage":false},{"functionName":"parseInteger","ranges":[{"startOffset":2280,"endOffset":2329,"count":0}],"isBlockCoverage":false},{"functionName":"parseBigInteger","ranges":[{"startOffset":2354,"endOffset":2466,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsonArray","ranges":[{"startOffset":2490,"endOffset":2593,"count":0}],"isBlockCoverage":false},{"functionName":"parsePoint","ranges":[{"startOffset":2613,"endOffset":2808,"count":0}],"isBlockCoverage":false},{"functionName":"parseCircle","ranges":[{"startOffset":2829,"endOffset":3369,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":3383,"endOffset":5329,"count":1}],"isBlockCoverage":true}]},{"scriptId":"779","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/postgres-array/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2320,"count":1}],"isBlockCoverage":true},{"functionName":"exports.parse","ranges":[{"startOffset":30,"endOffset":114,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayParser","ranges":[{"startOffset":138,"endOffset":333,"count":0}],"isBlockCoverage":false},{"functionName":"isEof","ranges":[{"startOffset":337,"endOffset":398,"count":0}],"isBlockCoverage":false},{"functionName":"nextCharacter","ranges":[{"startOffset":402,"endOffset":663,"count":0}],"isBlockCoverage":false},{"functionName":"record","ranges":[{"startOffset":667,"endOffset":725,"count":0}],"isBlockCoverage":false},{"functionName":"newEntry","ranges":[{"startOffset":729,"endOffset":1055,"count":0}],"isBlockCoverage":false},{"functionName":"consumeDimensions","ranges":[{"startOffset":1059,"endOffset":1241,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1245,"endOffset":2271,"count":0}],"isBlockCoverage":false},{"functionName":"identity","ranges":[{"startOffset":2275,"endOffset":2319,"count":0}],"isBlockCoverage":false}]},{"scriptId":"780","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg-types/lib/arrayParser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":208,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":69,"endOffset":204,"count":0}],"isBlockCoverage":false}]},{"scriptId":"781","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/postgres-date/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2676,"count":1}],"isBlockCoverage":true},{"functionName":"parseDate","ranges":[{"startOffset":250,"endOffset":1522,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":1524,"endOffset":1965,"count":0}],"isBlockCoverage":false},{"functionName":"timeZoneOffset","ranges":[{"startOffset":2015,"endOffset":2416,"count":0}],"isBlockCoverage":false},{"functionName":"bcYearToNegativeYear","ranges":[{"startOffset":2418,"endOffset":2616,"count":0}],"isBlockCoverage":false},{"functionName":"is0To99","ranges":[{"startOffset":2618,"endOffset":2675,"count":0}],"isBlockCoverage":false}]},{"scriptId":"782","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/postgres-interval/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3413,"count":1}],"isBlockCoverage":true},{"functionName":"PostgresInterval","ranges":[{"startOffset":88,"endOffset":236,"count":0}],"isBlockCoverage":false},{"functionName":"PostgresInterval.toPostgres","ranges":[{"startOffset":353,"endOffset":1030,"count":0}],"isBlockCoverage":false},{"functionName":"PostgresInterval.toISOString.PostgresInterval.toISO","ranges":[{"startOffset":1356,"endOffset":1918,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2161,"endOffset":2221,"count":4}],"isBlockCoverage":true},{"functionName":"parseMilliseconds","ranges":[{"startOffset":2489,"endOffset":2661,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2663,"endOffset":3412,"count":0}],"isBlockCoverage":false}]},{"scriptId":"783","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/xtend/mutable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":369,"count":1}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":80,"endOffset":368,"count":0}],"isBlockCoverage":false}]},{"scriptId":"784","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/postgres-bytea/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":823,"count":1}],"isBlockCoverage":true},{"functionName":"parseBytea","ranges":[{"startOffset":31,"endOffset":822,"count":0}],"isBlockCoverage":false}]},{"scriptId":"785","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg-types/lib/binaryParsers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6063,"count":1}],"isBlockCoverage":true},{"functionName":"parseBits","ranges":[{"startOffset":54,"endOffset":1140,"count":0}],"isBlockCoverage":false},{"functionName":"parseFloatFromBits","ranges":[{"startOffset":1168,"endOffset":2141,"count":0}],"isBlockCoverage":false},{"functionName":"parseInt16","ranges":[{"startOffset":2161,"endOffset":2306,"count":0}],"isBlockCoverage":false},{"functionName":"parseInt32","ranges":[{"startOffset":2326,"endOffset":2471,"count":0}],"isBlockCoverage":false},{"functionName":"parseFloat32","ranges":[{"startOffset":2493,"endOffset":2555,"count":0}],"isBlockCoverage":false},{"functionName":"parseFloat64","ranges":[{"startOffset":2577,"endOffset":2640,"count":0}],"isBlockCoverage":false},{"functionName":"parseNumeric","ranges":[{"startOffset":2662,"endOffset":3148,"count":0}],"isBlockCoverage":false},{"functionName":"parseDate","ranges":[{"startOffset":3167,"endOffset":3794,"count":0}],"isBlockCoverage":false},{"functionName":"parseArray","ranges":[{"startOffset":3814,"endOffset":5307,"count":0}],"isBlockCoverage":false},{"functionName":"parseText","ranges":[{"startOffset":5326,"endOffset":5378,"count":0}],"isBlockCoverage":false},{"functionName":"parseBool","ranges":[{"startOffset":5397,"endOffset":5486,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":5500,"endOffset":6025,"count":1}],"isBlockCoverage":true}]},{"scriptId":"786","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg-int8/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1572,"count":1}],"isBlockCoverage":true},{"functionName":"readInt8","ranges":[{"startOffset":107,"endOffset":1543,"count":0}],"isBlockCoverage":false}]},{"scriptId":"787","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg-types/lib/builtins.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1564,"count":1}],"isBlockCoverage":true}]},{"scriptId":"788","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg/lib/crypto/sasl.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6105,"count":1}],"isBlockCoverage":true},{"functionName":"startSession","ranges":[{"startOffset":48,"endOffset":429,"count":0}],"isBlockCoverage":false},{"functionName":"continueSession","ranges":[{"startOffset":431,"endOffset":2452,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeSession","ranges":[{"startOffset":2454,"endOffset":2957,"count":0}],"isBlockCoverage":false},{"functionName":"isPrintableChars","ranges":[{"startOffset":3157,"endOffset":3425,"count":0}],"isBlockCoverage":false},{"functionName":"isBase64","ranges":[{"startOffset":3658,"endOffset":3772,"count":0}],"isBlockCoverage":false},{"functionName":"parseAttributePairs","ranges":[{"startOffset":3774,"endOffset":4200,"count":0}],"isBlockCoverage":false},{"functionName":"parseServerFirstMessage","ranges":[{"startOffset":4202,"endOffset":5172,"count":0}],"isBlockCoverage":false},{"functionName":"parseServerFinalMessage","ranges":[{"startOffset":5174,"endOffset":5602,"count":0}],"isBlockCoverage":false},{"functionName":"xorBuffers","ranges":[{"startOffset":5604,"endOffset":6028,"count":0}],"isBlockCoverage":false}]},{"scriptId":"789","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg/lib/crypto/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":341,"count":1},{"startOffset":155,"endOffset":283,"count":0}],"isBlockCoverage":true}]},{"scriptId":"790","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg/lib/crypto/utils-webcrypto.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2496,"count":1},{"startOffset":280,"endOffset":300,"count":0}],"isBlockCoverage":true},{"functionName":"randomBytes","ranges":[{"startOffset":509,"endOffset":598,"count":0}],"isBlockCoverage":false},{"functionName":"md5","ranges":[{"startOffset":600,"endOffset":1226,"count":0}],"isBlockCoverage":false},{"functionName":"postgresMd5PasswordHash","ranges":[{"startOffset":1330,"endOffset":1525,"count":0}],"isBlockCoverage":false},{"functionName":"sha256","ranges":[{"startOffset":1604,"endOffset":1687,"count":0}],"isBlockCoverage":false},{"functionName":"hmacSha256","ranges":[{"startOffset":1793,"endOffset":2022,"count":0}],"isBlockCoverage":false},{"functionName":"deriveKey","ranges":[{"startOffset":2161,"endOffset":2495,"count":0}],"isBlockCoverage":false}]},{"scriptId":"791","url":"node:internal/crypto/webcrypto","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32080,"count":1}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":1258,"endOffset":1885,"count":0}],"isBlockCoverage":false},{"functionName":"randomUUID","ranges":[{"startOffset":1889,"endOffset":2002,"count":0}],"isBlockCoverage":false},{"functionName":"generateKey","ranges":[{"startOffset":2006,"endOffset":4586,"count":0}],"isBlockCoverage":false},{"functionName":"deriveBits","ranges":[{"startOffset":4590,"endOffset":6195,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyLength","ranges":[{"startOffset":6199,"endOffset":6843,"count":0}],"isBlockCoverage":false},{"functionName":"deriveKey","ranges":[{"startOffset":6847,"endOffset":9097,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeySpki","ranges":[{"startOffset":9101,"endOffset":10116,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyPkcs8","ranges":[{"startOffset":10120,"endOffset":11144,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyRaw","ranges":[{"startOffset":11148,"endOffset":12118,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyJWK","ranges":[{"startOffset":12122,"endOffset":13708,"count":0}],"isBlockCoverage":false},{"functionName":"exportKey","ranges":[{"startOffset":13712,"endOffset":14598,"count":0}],"isBlockCoverage":false},{"functionName":"importGenericSecretKey","ranges":[{"startOffset":14602,"endOffset":15994,"count":0}],"isBlockCoverage":false},{"functionName":"importKey","ranges":[{"startOffset":15998,"endOffset":18835,"count":0}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":18932,"endOffset":20516,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapKey","ranges":[{"startOffset":20615,"endOffset":22653,"count":0}],"isBlockCoverage":false},{"functionName":"signVerify","ranges":[{"startOffset":22657,"endOffset":23794,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":23798,"endOffset":24444,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":24448,"endOffset":25229,"count":0}],"isBlockCoverage":false},{"functionName":"cipherOrWrap","ranges":[{"startOffset":25233,"endOffset":26680,"count":0}],"isBlockCoverage":false},{"functionName":"encrypt","ranges":[{"startOffset":26684,"endOffset":27431,"count":0}],"isBlockCoverage":false},{"functionName":"decrypt","ranges":[{"startOffset":27435,"endOffset":28182,"count":0}],"isBlockCoverage":false},{"functionName":"SubtleCrypto","ranges":[{"startOffset":28344,"endOffset":28406,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28443,"endOffset":28456,"count":1}],"isBlockCoverage":true},{"functionName":"Crypto","ranges":[{"startOffset":28498,"endOffset":28560,"count":0}],"isBlockCoverage":true},{"functionName":"get subtle","ranges":[{"startOffset":28566,"endOffset":28669,"count":1},{"startOffset":28607,"endOffset":28644,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28706,"endOffset":28719,"count":1}],"isBlockCoverage":true},{"functionName":"getRandomValues","ranges":[{"startOffset":28737,"endOffset":29078,"count":0}],"isBlockCoverage":false}]},{"scriptId":"792","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg/lib/type-overrides.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":768,"count":1}],"isBlockCoverage":true},{"functionName":"TypeOverrides","ranges":[{"startOffset":47,"endOffset":155,"count":1},{"startOffset":109,"endOffset":117,"count":0}],"isBlockCoverage":true},{"functionName":"TypeOverrides.getOverrides","ranges":[{"startOffset":196,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"TypeOverrides.setTypeParser","ranges":[{"startOffset":396,"endOffset":557,"count":0}],"isBlockCoverage":false},{"functionName":"TypeOverrides.getTypeParser","ranges":[{"startOffset":599,"endOffset":735,"count":0}],"isBlockCoverage":false}]},{"scriptId":"793","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg/lib/connection-parameters.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5228,"count":1}],"isBlockCoverage":true},{"functionName":"val","ranges":[{"startOffset":169,"endOffset":446,"count":15},{"startOffset":230,"endOffset":286,"count":9},{"startOffset":286,"endOffset":395,"count":6},{"startOffset":314,"endOffset":351,"count":5},{"startOffset":351,"endOffset":395,"count":1},{"startOffset":418,"endOffset":427,"count":10},{"startOffset":428,"endOffset":444,"count":10}],"isBlockCoverage":true},{"functionName":"readSSLConfigFromEnvironment","ranges":[{"startOffset":483,"endOffset":766,"count":1},{"startOffset":536,"endOffset":570,"count":0},{"startOffset":575,"endOffset":589,"count":0},{"startOffset":594,"endOffset":609,"count":0},{"startOffset":614,"endOffset":631,"count":0},{"startOffset":636,"endOffset":673,"count":0},{"startOffset":678,"endOffset":738,"count":0}],"isBlockCoverage":true},{"functionName":"quoteParamValue","ranges":[{"startOffset":886,"endOffset":984,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":996,"endOffset":1177,"count":0}],"isBlockCoverage":false},{"functionName":"ConnectionParameters","ranges":[{"startOffset":1210,"endOffset":3944,"count":1},{"startOffset":1361,"endOffset":1376,"count":0},{"startOffset":1386,"endOffset":1391,"count":0},{"startOffset":1598,"endOffset":1678,"count":0},{"startOffset":1798,"endOffset":1837,"count":0},{"startOffset":2365,"endOffset":2377,"count":0},{"startOffset":2417,"endOffset":2489,"count":0},{"startOffset":2586,"endOffset":2640,"count":0},{"startOffset":2658,"endOffset":2673,"count":0},{"startOffset":2675,"endOffset":2765,"count":0},{"startOffset":2952,"endOffset":2957,"count":0},{"startOffset":3551,"endOffset":3643,"count":0},{"startOffset":3681,"endOffset":3714,"count":0},{"startOffset":3751,"endOffset":3784,"count":0},{"startOffset":3850,"endOffset":3940,"count":0}],"isBlockCoverage":true},{"functionName":"getLibpqConnectionString","ranges":[{"startOffset":3948,"endOffset":5186,"count":0}],"isBlockCoverage":false}]},{"scriptId":"794","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg/lib/query.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6321,"count":1}],"isBlockCoverage":true},{"functionName":"Query","ranges":[{"startOffset":164,"endOffset":890,"count":0}],"isBlockCoverage":false},{"functionName":"requiresPreparation","ranges":[{"startOffset":894,"endOffset":1352,"count":0}],"isBlockCoverage":false},{"functionName":"_checkForMultirow","ranges":[{"startOffset":1356,"endOffset":1794,"count":0}],"isBlockCoverage":false},{"functionName":"handleRowDescription","ranges":[{"startOffset":1925,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"handleDataRow","ranges":[{"startOffset":2102,"endOffset":2437,"count":0}],"isBlockCoverage":false},{"functionName":"handleCommandComplete","ranges":[{"startOffset":2441,"endOffset":2758,"count":0}],"isBlockCoverage":false},{"functionName":"handleEmptyQuery","ranges":[{"startOffset":3095,"endOffset":3180,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":3184,"endOffset":3602,"count":0}],"isBlockCoverage":false},{"functionName":"handleReadyForQuery","ranges":[{"startOffset":3606,"endOffset":3955,"count":0}],"isBlockCoverage":false},{"functionName":"submit","ranges":[{"startOffset":3959,"endOffset":4656,"count":0}],"isBlockCoverage":false},{"functionName":"hasBeenParsed","ranges":[{"startOffset":4660,"endOffset":4754,"count":0}],"isBlockCoverage":false},{"functionName":"handlePortalSuspended","ranges":[{"startOffset":4758,"endOffset":4838,"count":0}],"isBlockCoverage":false},{"functionName":"_getRows","ranges":[{"startOffset":4842,"endOffset":5200,"count":0}],"isBlockCoverage":false},{"functionName":"prepare","ranges":[{"startOffset":5300,"endOffset":6098,"count":0}],"isBlockCoverage":false},{"functionName":"handleCopyInResponse","ranges":[{"startOffset":6102,"endOffset":6196,"count":0}],"isBlockCoverage":false},{"functionName":"handleCopyData","ranges":[{"startOffset":6245,"endOffset":6294,"count":0}],"isBlockCoverage":false}]},{"scriptId":"795","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg/lib/result.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2713,"count":1}],"isBlockCoverage":true},{"functionName":"Result","ranges":[{"startOffset":238,"endOffset":620,"count":0}],"isBlockCoverage":false},{"functionName":"addCommandComplete","ranges":[{"startOffset":661,"endOffset":1179,"count":0}],"isBlockCoverage":false},{"functionName":"_parseRowAsArray","ranges":[{"startOffset":1183,"endOffset":1485,"count":0}],"isBlockCoverage":false},{"functionName":"parseRow","ranges":[{"startOffset":1489,"endOffset":1842,"count":0}],"isBlockCoverage":false},{"functionName":"addRow","ranges":[{"startOffset":1846,"endOffset":1887,"count":0}],"isBlockCoverage":false},{"functionName":"addFields","ranges":[{"startOffset":1891,"endOffset":2685,"count":0}],"isBlockCoverage":false}]},{"scriptId":"796","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg/lib/connection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5188,"count":1}],"isBlockCoverage":true},{"functionName":"Connection","ranges":[{"startOffset":400,"endOffset":1031,"count":1},{"startOffset":454,"endOffset":459,"count":0},{"startOffset":561,"endOffset":608,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":920,"endOffset":1026,"count":23},{"startOffset":978,"endOffset":1020,"count":0}],"isBlockCoverage":true},{"functionName":"connect","ranges":[{"startOffset":1035,"endOffset":3095,"count":1},{"startOffset":1830,"endOffset":3094,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1208,"endOffset":1365,"count":0}],"isBlockCoverage":false},{"functionName":"reportStreamError","ranges":[{"startOffset":1398,"endOffset":1635,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1712,"endOffset":1754,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1861,"endOffset":3090,"count":0}],"isBlockCoverage":false},{"functionName":"attachListeners","ranges":[{"startOffset":3099,"endOffset":3340,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3143,"endOffset":3335,"count":0}],"isBlockCoverage":false},{"functionName":"requestSsl","ranges":[{"startOffset":3344,"endOffset":3408,"count":0}],"isBlockCoverage":false},{"functionName":"startup","ranges":[{"startOffset":3412,"endOffset":3482,"count":0}],"isBlockCoverage":false},{"functionName":"cancel","ranges":[{"startOffset":3486,"endOffset":3575,"count":0}],"isBlockCoverage":false},{"functionName":"password","ranges":[{"startOffset":3579,"endOffset":3648,"count":0}],"isBlockCoverage":false},{"functionName":"sendSASLInitialResponseMessage","ranges":[{"startOffset":3652,"endOffset":3801,"count":0}],"isBlockCoverage":false},{"functionName":"sendSCRAMClientFinalMessage","ranges":[{"startOffset":3805,"endOffset":3924,"count":0}],"isBlockCoverage":false},{"functionName":"_send","ranges":[{"startOffset":3928,"endOffset":4042,"count":0}],"isBlockCoverage":false},{"functionName":"query","ranges":[{"startOffset":4046,"endOffset":4101,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":4129,"endOffset":4186,"count":0}],"isBlockCoverage":false},{"functionName":"bind","ranges":[{"startOffset":4213,"endOffset":4270,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":4300,"endOffset":4363,"count":0}],"isBlockCoverage":false},{"functionName":"flush","ranges":[{"startOffset":4367,"endOffset":4455,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":4459,"endOffset":4522,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":4526,"endOffset":4559,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":4563,"endOffset":4600,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":4604,"endOffset":4833,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":4837,"endOffset":4890,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":4894,"endOffset":4953,"count":0}],"isBlockCoverage":false},{"functionName":"sendCopyFromChunk","ranges":[{"startOffset":4957,"endOffset":5029,"count":0}],"isBlockCoverage":false},{"functionName":"endCopyFrom","ranges":[{"startOffset":5033,"endOffset":5089,"count":0}],"isBlockCoverage":false},{"functionName":"sendCopyFail","ranges":[{"startOffset":5093,"endOffset":5156,"count":0}],"isBlockCoverage":false}]},{"scriptId":"797","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg-protocol/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":791,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":260,"endOffset":308,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":428,"endOffset":474,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":517,"endOffset":734,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":616,"endOffset":658,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":684,"endOffset":730,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":714,"endOffset":729,"count":0}],"isBlockCoverage":false}]},{"scriptId":"798","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg-protocol/dist/messages.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4973,"count":1}],"isBlockCoverage":true},{"functionName":"DatabaseError","ranges":[{"startOffset":1263,"endOffset":1385,"count":0}],"isBlockCoverage":false},{"functionName":"CopyDataMessage","ranges":[{"startOffset":1455,"endOffset":1579,"count":0}],"isBlockCoverage":false},{"functionName":"CopyResponse","ranges":[{"startOffset":1650,"endOffset":1841,"count":0}],"isBlockCoverage":false},{"functionName":"Field","ranges":[{"startOffset":1899,"endOffset":2247,"count":0}],"isBlockCoverage":false},{"functionName":"RowDescriptionMessage","ranges":[{"startOffset":2307,"endOffset":2502,"count":0}],"isBlockCoverage":false},{"functionName":"ParameterDescriptionMessage","ranges":[{"startOffset":2600,"endOffset":2822,"count":0}],"isBlockCoverage":false},{"functionName":"ParameterStatusMessage","ranges":[{"startOffset":2927,"endOffset":3144,"count":0}],"isBlockCoverage":false},{"functionName":"AuthenticationMD5Password","ranges":[{"startOffset":3242,"endOffset":3380,"count":0}],"isBlockCoverage":false},{"functionName":"BackendKeyDataMessage","ranges":[{"startOffset":3480,"endOffset":3669,"count":0}],"isBlockCoverage":false},{"functionName":"NotificationResponseMessage","ranges":[{"startOffset":3767,"endOffset":3989,"count":0}],"isBlockCoverage":false},{"functionName":"ReadyForQueryMessage","ranges":[{"startOffset":4092,"endOffset":4224,"count":0}],"isBlockCoverage":false},{"functionName":"CommandCompleteMessage","ranges":[{"startOffset":4315,"endOffset":4443,"count":0}],"isBlockCoverage":false},{"functionName":"DataRowMessage","ranges":[{"startOffset":4530,"endOffset":4697,"count":0}],"isBlockCoverage":false},{"functionName":"NoticeMessage","ranges":[{"startOffset":4767,"endOffset":4895,"count":0}],"isBlockCoverage":false}]},{"scriptId":"799","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg-protocol/dist/serializer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6940,"count":1}],"isBlockCoverage":true},{"functionName":"startup","ranges":[{"startOffset":218,"endOffset":672,"count":0}],"isBlockCoverage":false},{"functionName":"requestSsl","ranges":[{"startOffset":693,"endOffset":840,"count":0}],"isBlockCoverage":false},{"functionName":"password","ranges":[{"startOffset":859,"endOffset":946,"count":0}],"isBlockCoverage":false},{"functionName":"sendSASLInitialResponseMessage","ranges":[{"startOffset":987,"endOffset":1201,"count":0}],"isBlockCoverage":false},{"functionName":"sendSCRAMClientFinalMessage","ranges":[{"startOffset":1239,"endOffset":1343,"count":0}],"isBlockCoverage":false},{"functionName":"query","ranges":[{"startOffset":1359,"endOffset":1435,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1474,"endOffset":2408,"count":0}],"isBlockCoverage":false},{"functionName":"writeValues","ranges":[{"startOffset":2480,"endOffset":3458,"count":0}],"isBlockCoverage":false},{"functionName":"bind","ranges":[{"startOffset":3473,"endOffset":4059,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":4190,"endOffset":4820,"count":0}],"isBlockCoverage":false},{"functionName":"cancel","ranges":[{"startOffset":4837,"endOffset":5107,"count":0}],"isBlockCoverage":false},{"functionName":"cstringMessage","ranges":[{"startOffset":5132,"endOffset":5474,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":5660,"endOffset":5872,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":5888,"endOffset":6003,"count":0}],"isBlockCoverage":false},{"functionName":"copyData","ranges":[{"startOffset":6022,"endOffset":6102,"count":0}],"isBlockCoverage":false},{"functionName":"copyFail","ranges":[{"startOffset":6121,"endOffset":6198,"count":0}],"isBlockCoverage":false},{"functionName":"codeOnlyBuffer","ranges":[{"startOffset":6223,"endOffset":6276,"count":4}],"isBlockCoverage":true},{"functionName":"flush","ranges":[{"startOffset":6719,"endOffset":6736,"count":1}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":6748,"endOffset":6764,"count":1}],"isBlockCoverage":true},{"functionName":"end","ranges":[{"startOffset":6775,"endOffset":6790,"count":1}],"isBlockCoverage":true},{"functionName":"copyDone","ranges":[{"startOffset":6820,"endOffset":6840,"count":0}],"isBlockCoverage":false}]},{"scriptId":"800","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg-protocol/dist/buffer-writer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2760,"count":1}],"isBlockCoverage":true},{"functionName":"Writer","ranges":[{"startOffset":209,"endOffset":372,"count":2}],"isBlockCoverage":true},{"functionName":"ensure","ranges":[{"startOffset":377,"endOffset":850,"count":2},{"startOffset":480,"endOffset":844,"count":0}],"isBlockCoverage":true},{"functionName":"addInt32","ranges":[{"startOffset":855,"endOffset":1151,"count":0}],"isBlockCoverage":false},{"functionName":"addInt16","ranges":[{"startOffset":1156,"endOffset":1336,"count":0}],"isBlockCoverage":false},{"functionName":"addCString","ranges":[{"startOffset":1341,"endOffset":1735,"count":2},{"startOffset":1383,"endOffset":1422,"count":0}],"isBlockCoverage":true},{"functionName":"addString","ranges":[{"startOffset":1740,"endOffset":1938,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":1943,"endOffset":2124,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":2129,"endOffset":2495,"count":2},{"startOffset":2471,"endOffset":2474,"count":0}],"isBlockCoverage":true},{"functionName":"flush","ranges":[{"startOffset":2500,"endOffset":2691,"count":2}],"isBlockCoverage":true}]},{"scriptId":"801","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg-protocol/dist/parser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13750,"count":1}],"isBlockCoverage":true},{"functionName":"Parser","ranges":[{"startOffset":504,"endOffset":927,"count":1},{"startOffset":734,"endOffset":745,"count":0},{"startOffset":761,"endOffset":834,"count":0},{"startOffset":898,"endOffset":909,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":932,"endOffset":2217,"count":0}],"isBlockCoverage":false},{"functionName":"mergeBuffer","ranges":[{"startOffset":2222,"endOffset":3819,"count":0}],"isBlockCoverage":false},{"functionName":"handlePacket","ranges":[{"startOffset":3824,"endOffset":6700,"count":0}],"isBlockCoverage":false},{"functionName":"parseReadyForQueryMessage","ranges":[{"startOffset":6705,"endOffset":6921,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommandCompleteMessage","ranges":[{"startOffset":6926,"endOffset":7142,"count":0}],"isBlockCoverage":false},{"functionName":"parseCopyData","ranges":[{"startOffset":7147,"endOffset":7319,"count":0}],"isBlockCoverage":false},{"functionName":"parseCopyInMessage","ranges":[{"startOffset":7324,"endOffset":7452,"count":0}],"isBlockCoverage":false},{"functionName":"parseCopyOutMessage","ranges":[{"startOffset":7457,"endOffset":7587,"count":0}],"isBlockCoverage":false},{"functionName":"parseCopyMessage","ranges":[{"startOffset":7592,"endOffset":8035,"count":0}],"isBlockCoverage":false},{"functionName":"parseNotificationMessage","ranges":[{"startOffset":8040,"endOffset":8378,"count":0}],"isBlockCoverage":false},{"functionName":"parseRowDescriptionMessage","ranges":[{"startOffset":8383,"endOffset":8748,"count":0}],"isBlockCoverage":false},{"functionName":"parseField","ranges":[{"startOffset":8753,"endOffset":9240,"count":0}],"isBlockCoverage":false},{"functionName":"parseParameterDescriptionMessage","ranges":[{"startOffset":9245,"endOffset":9641,"count":0}],"isBlockCoverage":false},{"functionName":"parseDataRowMessage","ranges":[{"startOffset":9646,"endOffset":10137,"count":0}],"isBlockCoverage":false},{"functionName":"parseParameterStatusMessage","ranges":[{"startOffset":10142,"endOffset":10410,"count":0}],"isBlockCoverage":false},{"functionName":"parseBackendKeyData","ranges":[{"startOffset":10415,"endOffset":10688,"count":0}],"isBlockCoverage":false},{"functionName":"parseAuthenticationResponse","ranges":[{"startOffset":10693,"endOffset":12564,"count":0}],"isBlockCoverage":false},{"functionName":"parseErrorMessage","ranges":[{"startOffset":12569,"endOffset":13688,"count":0}],"isBlockCoverage":false}]},{"scriptId":"802","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg-protocol/dist/buffer-reader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1462,"count":1}],"isBlockCoverage":true},{"functionName":"BufferReader","ranges":[{"startOffset":176,"endOffset":354,"count":1}],"isBlockCoverage":true},{"functionName":"setBuffer","ranges":[{"startOffset":359,"endOffset":452,"count":0}],"isBlockCoverage":false},{"functionName":"int16","ranges":[{"startOffset":457,"endOffset":582,"count":0}],"isBlockCoverage":false},{"functionName":"byte","ranges":[{"startOffset":587,"endOffset":696,"count":0}],"isBlockCoverage":false},{"functionName":"int32","ranges":[{"startOffset":701,"endOffset":826,"count":0}],"isBlockCoverage":false},{"functionName":"string","ranges":[{"startOffset":831,"endOffset":1002,"count":0}],"isBlockCoverage":false},{"functionName":"cstring","ranges":[{"startOffset":1007,"endOffset":1224,"count":0}],"isBlockCoverage":false},{"functionName":"bytes","ranges":[{"startOffset":1229,"endOffset":1381,"count":0}],"isBlockCoverage":false}]},{"scriptId":"803","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg/lib/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":753,"count":1}],"isBlockCoverage":true},{"functionName":"getStream","ranges":[{"startOffset":128,"endOffset":364,"count":1},{"startOffset":256,"endOffset":362,"count":0}],"isBlockCoverage":true},{"functionName":"getSecureStream","ranges":[{"startOffset":557,"endOffset":752,"count":0}],"isBlockCoverage":false}]},{"scriptId":"804","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg-pool/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13052,"count":1}],"isBlockCoverage":true},{"functionName":"NOOP","ranges":[{"startOffset":79,"endOffset":93,"count":0}],"isBlockCoverage":false},{"functionName":"removeWhere","ranges":[{"startOffset":115,"endOffset":231,"count":0}],"isBlockCoverage":false},{"functionName":"IdleItem","ranges":[{"startOffset":252,"endOffset":395,"count":0}],"isBlockCoverage":false},{"functionName":"PendingItem","ranges":[{"startOffset":421,"endOffset":477,"count":0}],"isBlockCoverage":false},{"functionName":"throwOnDoubleRelease","ranges":[{"startOffset":481,"endOffset":607,"count":0}],"isBlockCoverage":false},{"functionName":"promisify","ranges":[{"startOffset":609,"endOffset":1167,"count":0}],"isBlockCoverage":false},{"functionName":"makeIdleListener","ranges":[{"startOffset":1169,"endOffset":1631,"count":0}],"isBlockCoverage":false},{"functionName":"Pool","ranges":[{"startOffset":1669,"endOffset":3145,"count":0}],"isBlockCoverage":false},{"functionName":"_isFull","ranges":[{"startOffset":3149,"endOffset":3216,"count":0}],"isBlockCoverage":false},{"functionName":"_pulseQueue","ranges":[{"startOffset":3220,"endOffset":4417,"count":0}],"isBlockCoverage":false},{"functionName":"_remove","ranges":[{"startOffset":4421,"endOffset":4710,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":4714,"endOffset":6178,"count":0}],"isBlockCoverage":false},{"functionName":"newClient","ranges":[{"startOffset":6182,"endOffset":8348,"count":0}],"isBlockCoverage":false},{"functionName":"_acquireClient","ranges":[{"startOffset":8398,"endOffset":9240,"count":0}],"isBlockCoverage":false},{"functionName":"_releaseOnce","ranges":[{"startOffset":9324,"endOffset":9549,"count":0}],"isBlockCoverage":false},{"functionName":"_release","ranges":[{"startOffset":9642,"endOffset":10911,"count":0}],"isBlockCoverage":false},{"functionName":"query","ranges":[{"startOffset":10915,"endOffset":12376,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":12380,"endOffset":12727,"count":0}],"isBlockCoverage":false},{"functionName":"get waitingCount","ranges":[{"startOffset":12731,"endOffset":12792,"count":0}],"isBlockCoverage":false},{"functionName":"get idleCount","ranges":[{"startOffset":12796,"endOffset":12846,"count":0}],"isBlockCoverage":false},{"functionName":"get expiredCount","ranges":[{"startOffset":12850,"endOffset":12969,"count":0}],"isBlockCoverage":false},{"functionName":"get totalCount","ranges":[{"startOffset":12973,"endOffset":13027,"count":0}],"isBlockCoverage":false}]},{"scriptId":"805","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/swagger-jsdoc/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":39,"count":1}],"isBlockCoverage":true}]},{"scriptId":"806","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/swagger-jsdoc/src/lib.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1263,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":759,"endOffset":1261,"count":1},{"startOffset":790,"endOffset":867,"count":0},{"startOffset":926,"endOffset":1057,"count":0},{"startOffset":1112,"endOffset":1233,"count":0}],"isBlockCoverage":true}]},{"scriptId":"807","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/swagger-jsdoc/src/specification.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9315,"count":1}],"isBlockCoverage":true},{"functionName":"prepare","ranges":[{"startOffset":521,"endOffset":1452,"count":1}],"isBlockCoverage":true},{"functionName":"getVersion","ranges":[{"startOffset":975,"endOffset":1216,"count":1},{"startOffset":1015,"endOffset":1041,"count":0},{"startOffset":1100,"endOffset":1215,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1293,"endOffset":1373,"count":6},{"startOffset":1363,"endOffset":1368,"count":5}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":1508,"endOffset":1660,"count":1},{"startOffset":1587,"endOffset":1634,"count":0}],"isBlockCoverage":true},{"functionName":"clean","ranges":[{"startOffset":1904,"endOffset":2166,"count":1},{"startOffset":2045,"endOffset":2139,"count":4}],"isBlockCoverage":true},{"functionName":"finalize","ranges":[{"startOffset":2369,"endOffset":2679,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2480,"endOffset":2548,"count":1}],"isBlockCoverage":true},{"functionName":"organize","ranges":[{"startOffset":2780,"endOffset":4497,"count":4},{"startOffset":3012,"endOffset":3123,"count":0},{"startOffset":3438,"endOffset":3445,"count":0},{"startOffset":3699,"endOffset":3926,"count":1},{"startOffset":3926,"endOffset":4495,"count":3},{"startOffset":3957,"endOffset":4284,"count":1},{"startOffset":4022,"endOffset":4179,"count":0},{"startOffset":4284,"endOffset":4495,"count":2}],"isBlockCoverage":true},{"functionName":"build","ranges":[{"startOffset":4569,"endOffset":9248,"count":1},{"startOffset":4973,"endOffset":6710,"count":3},{"startOffset":5136,"endOffset":5830,"count":0},{"startOffset":5865,"endOffset":6706,"count":1},{"startOffset":5916,"endOffset":6700,"count":4},{"startOffset":6220,"endOffset":6342,"count":0},{"startOffset":6391,"endOffset":6623,"count":0},{"startOffset":6741,"endOffset":9016,"count":0},{"startOffset":9058,"endOffset":9202,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5647,"endOffset":5710,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6508,"endOffset":6568,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6853,"endOffset":7666,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7767,"endOffset":7782,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8076,"endOffset":8102,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8115,"endOffset":8601,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8617,"endOffset":8635,"count":0}],"isBlockCoverage":false}]},{"scriptId":"808","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/doctrine/lib/doctrine.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32444,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":188,"endOffset":32403,"count":1}],"isBlockCoverage":true},{"functionName":"sliceSource","ranges":[{"startOffset":417,"endOffset":508,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":532,"endOffset":707,"count":1}],"isBlockCoverage":true},{"functionName":"hasOwnProperty","ranges":[{"startOffset":613,"endOffset":700,"count":4}],"isBlockCoverage":true},{"functionName":"shallowCopy","ranges":[{"startOffset":716,"endOffset":927,"count":1},{"startOffset":796,"endOffset":901,"count":20}],"isBlockCoverage":true},{"functionName":"isASCIIAlphanumeric","ranges":[{"startOffset":933,"endOffset":1166,"count":32},{"startOffset":1006,"endOffset":1019,"count":28},{"startOffset":1032,"endOffset":1095,"count":4},{"startOffset":1070,"endOffset":1083,"count":0},{"startOffset":1096,"endOffset":1159,"count":4},{"startOffset":1134,"endOffset":1147,"count":0}],"isBlockCoverage":true},{"functionName":"isParamTitle","ranges":[{"startOffset":1172,"endOffset":1285,"count":16}],"isBlockCoverage":true},{"functionName":"isReturnTitle","ranges":[{"startOffset":1291,"endOffset":1386,"count":8}],"isBlockCoverage":true},{"functionName":"isProperty","ranges":[{"startOffset":1392,"endOffset":1483,"count":16}],"isBlockCoverage":true},{"functionName":"isNameParameterRequired","ranges":[{"startOffset":1489,"endOffset":1691,"count":4}],"isBlockCoverage":true},{"functionName":"isAllowedName","ranges":[{"startOffset":1697,"endOffset":1826,"count":4}],"isBlockCoverage":true},{"functionName":"isAllowedNested","ranges":[{"startOffset":1832,"endOffset":1928,"count":0}],"isBlockCoverage":false},{"functionName":"isAllowedOptional","ranges":[{"startOffset":1934,"endOffset":2032,"count":4}],"isBlockCoverage":true},{"functionName":"isTypeParameterRequired","ranges":[{"startOffset":2038,"endOffset":2333,"count":8}],"isBlockCoverage":true},{"functionName":"isAllowedType","ranges":[{"startOffset":2521,"endOffset":2961,"count":4}],"isBlockCoverage":true},{"functionName":"unwrapComment","ranges":[{"startOffset":3281,"endOffset":3748,"count":4}],"isBlockCoverage":true},{"functionName":"convertUnwrappedCommentIndex","ranges":[{"startOffset":4139,"endOffset":4790,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4822,"endOffset":31911,"count":1}],"isBlockCoverage":true},{"functionName":"advance","ranges":[{"startOffset":5047,"endOffset":5371,"count":1194},{"startOffset":5189,"endOffset":5267,"count":53},{"startOffset":5218,"endOffset":5254,"count":0},{"startOffset":5269,"endOffset":5317,"count":53}],"isBlockCoverage":true},{"functionName":"scanTitle","ranges":[{"startOffset":5381,"endOffset":5653,"count":4},{"startOffset":5515,"endOffset":5563,"count":32},{"startOffset":5565,"endOffset":5616,"count":28}],"isBlockCoverage":true},{"functionName":"seekContent","ranges":[{"startOffset":5663,"endOffset":6373,"count":4},{"startOffset":5795,"endOffset":6338,"count":1158},{"startOffset":5897,"endOffset":5978,"count":49},{"startOffset":5926,"endOffset":5965,"count":0},{"startOffset":5980,"endOffset":6035,"count":49},{"startOffset":6035,"endOffset":6297,"count":1109},{"startOffset":6054,"endOffset":6297,"count":357},{"startOffset":6104,"endOffset":6158,"count":0},{"startOffset":6215,"endOffset":6279,"count":49}],"isBlockCoverage":true},{"functionName":"parseType","ranges":[{"startOffset":6551,"endOffset":8435,"count":0}],"isBlockCoverage":false},{"functionName":"scanIdentifier","ranges":[{"startOffset":8445,"endOffset":8889,"count":0}],"isBlockCoverage":false},{"functionName":"skipWhiteSpace","ranges":[{"startOffset":8899,"endOffset":9132,"count":0}],"isBlockCoverage":false},{"functionName":"parseName","ranges":[{"startOffset":9142,"endOffset":13091,"count":0}],"isBlockCoverage":false},{"functionName":"skipToTag","ranges":[{"startOffset":13101,"endOffset":13437,"count":8},{"startOffset":13158,"endOffset":13194,"count":4},{"startOffset":13207,"endOffset":13249,"count":0},{"startOffset":13283,"endOffset":13436,"count":4}],"isBlockCoverage":true},{"functionName":"convertIndex","ranges":[{"startOffset":13447,"endOffset":13663,"count":0}],"isBlockCoverage":false},{"functionName":"TagParser","ranges":[{"startOffset":13673,"endOffset":14197,"count":4},{"startOffset":13942,"endOffset":14008,"count":0}],"isBlockCoverage":true},{"functionName":"addError","ranges":[{"startOffset":14268,"endOffset":14918,"count":0}],"isBlockCoverage":false},{"functionName":"TagParser.parseType","ranges":[{"startOffset":14961,"endOffset":16132,"count":4},{"startOffset":15065,"endOffset":15745,"count":0},{"startOffset":15783,"endOffset":16097,"count":0}],"isBlockCoverage":true},{"functionName":"TagParser._parseNamePath","ranges":[{"startOffset":16180,"endOffset":16606,"count":0}],"isBlockCoverage":false},{"functionName":"TagParser.parseNamePath","ranges":[{"startOffset":16653,"endOffset":16723,"count":0}],"isBlockCoverage":false},{"functionName":"TagParser.parseNamePathOptional","ranges":[{"startOffset":16778,"endOffset":16847,"count":0}],"isBlockCoverage":false},{"functionName":"TagParser.parseName","ranges":[{"startOffset":16891,"endOffset":19057,"count":4},{"startOffset":17025,"endOffset":19020,"count":0}],"isBlockCoverage":true},{"functionName":"parseDescription","ranges":[{"startOffset":19107,"endOffset":19475,"count":4},{"startOffset":19294,"endOffset":19373,"count":0}],"isBlockCoverage":true},{"functionName":"parseDescription","ranges":[{"startOffset":19521,"endOffset":20276,"count":0}],"isBlockCoverage":false},{"functionName":"parseKind","ranges":[{"startOffset":20319,"endOffset":21085,"count":0}],"isBlockCoverage":false},{"functionName":"parseAccess","ranges":[{"startOffset":21130,"endOffset":21551,"count":0}],"isBlockCoverage":false},{"functionName":"parseThis","ranges":[{"startOffset":21594,"endOffset":22339,"count":0}],"isBlockCoverage":false},{"functionName":"parseVariation","ranges":[{"startOffset":22387,"endOffset":22813,"count":0}],"isBlockCoverage":false},{"functionName":"TagParser.ensureEnd","ranges":[{"startOffset":22856,"endOffset":23161,"count":0}],"isBlockCoverage":false},{"functionName":"epilogue","ranges":[{"startOffset":23203,"endOffset":23862,"count":4},{"startOffset":23404,"endOffset":23422,"count":0},{"startOffset":23423,"endOffset":23437,"count":0},{"startOffset":23438,"endOffset":23470,"count":0},{"startOffset":23472,"endOffset":23826,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":27744,"endOffset":28778,"count":4},{"startOffset":27864,"endOffset":27996,"count":0},{"startOffset":28130,"endOffset":28268,"count":0},{"startOffset":28322,"endOffset":28385,"count":0},{"startOffset":28593,"endOffset":28737,"count":16},{"startOffset":28671,"endOffset":28723,"count":0}],"isBlockCoverage":true},{"functionName":"parseTag","ranges":[{"startOffset":28789,"endOffset":29312,"count":8},{"startOffset":28912,"endOffset":29235,"count":4},{"startOffset":29235,"endOffset":29277,"count":1158},{"startOffset":29277,"endOffset":29311,"count":4}],"isBlockCoverage":true},{"functionName":"scanJSDocDescription","ranges":[{"startOffset":29368,"endOffset":30057,"count":4},{"startOffset":29535,"endOffset":29972,"count":8},{"startOffset":29642,"endOffset":29802,"count":4},{"startOffset":29802,"endOffset":29915,"count":0},{"startOffset":29915,"endOffset":29972,"count":4},{"startOffset":30012,"endOffset":30025,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":30067,"endOffset":31874,"count":4},{"startOffset":30211,"endOffset":30256,"count":0},{"startOffset":30393,"endOffset":30448,"count":0},{"startOffset":30557,"endOffset":31177,"count":0},{"startOffset":31490,"endOffset":31758,"count":8},{"startOffset":31559,"endOffset":31643,"count":4},{"startOffset":31643,"endOffset":31687,"count":0},{"startOffset":31689,"endOffset":31744,"count":4}],"isBlockCoverage":true}]},{"scriptId":"809","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/esutils/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1527,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1334,"endOffset":1486,"count":1}],"isBlockCoverage":true}]},{"scriptId":"810","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/esutils/lib/ast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4728,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1333,"endOffset":4687,"count":1}],"isBlockCoverage":true},{"functionName":"isExpression","ranges":[{"startOffset":1370,"endOffset":2121,"count":0}],"isBlockCoverage":false},{"functionName":"isIterationStatement","ranges":[{"startOffset":2127,"endOffset":2444,"count":0}],"isBlockCoverage":false},{"functionName":"isStatement","ranges":[{"startOffset":2450,"endOffset":3262,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceElement","ranges":[{"startOffset":3268,"endOffset":3393,"count":0}],"isBlockCoverage":false},{"functionName":"trailingStatement","ranges":[{"startOffset":3399,"endOffset":3843,"count":0}],"isBlockCoverage":false},{"functionName":"isProblematicIfStatement","ranges":[{"startOffset":3849,"endOffset":4384,"count":0}],"isBlockCoverage":false}]},{"scriptId":"811","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/esutils/lib/code.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29610,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1391,"endOffset":29569,"count":1},{"startOffset":27989,"endOffset":28199,"count":128},{"startOffset":28045,"endOffset":28058,"count":31},{"startOffset":28059,"endOffset":28107,"count":102},{"startOffset":28094,"endOffset":28107,"count":37},{"startOffset":28108,"endOffset":28143,"count":76},{"startOffset":28144,"endOffset":28158,"count":75},{"startOffset":28273,"endOffset":28531,"count":128},{"startOffset":28328,"endOffset":28341,"count":31},{"startOffset":28342,"endOffset":28390,"count":102},{"startOffset":28377,"endOffset":28390,"count":37},{"startOffset":28391,"endOffset":28439,"count":76},{"startOffset":28426,"endOffset":28439,"count":28},{"startOffset":28440,"endOffset":28475,"count":66},{"startOffset":28476,"endOffset":28490,"count":65}],"isBlockCoverage":true},{"functionName":"isDecimalDigit","ranges":[{"startOffset":26641,"endOffset":26726,"count":0}],"isBlockCoverage":false},{"functionName":"isHexDigit","ranges":[{"startOffset":26732,"endOffset":26919,"count":0}],"isBlockCoverage":false},{"functionName":"isOctalDigit","ranges":[{"startOffset":26925,"endOffset":27008,"count":0}],"isBlockCoverage":false},{"functionName":"isWhiteSpace","ranges":[{"startOffset":27243,"endOffset":27434,"count":357},{"startOffset":27298,"endOffset":27312,"count":49},{"startOffset":27313,"endOffset":27327,"count":49},{"startOffset":27328,"endOffset":27342,"count":49},{"startOffset":27343,"endOffset":27357,"count":49},{"startOffset":27358,"endOffset":27427,"count":49},{"startOffset":27386,"endOffset":27427,"count":0}],"isBlockCoverage":true},{"functionName":"isLineTerminator","ranges":[{"startOffset":27469,"endOffset":27583,"count":2356},{"startOffset":27528,"endOffset":27542,"count":2250},{"startOffset":27543,"endOffset":27559,"count":2250},{"startOffset":27560,"endOffset":27576,"count":2250}],"isBlockCoverage":true},{"functionName":"fromCodePoint","ranges":[{"startOffset":27634,"endOffset":27914,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStartES5","ranges":[{"startOffset":28537,"endOffset":28686,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierPartES5","ranges":[{"startOffset":28692,"endOffset":28838,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStartES6","ranges":[{"startOffset":28844,"endOffset":28993,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierPartES6","ranges":[{"startOffset":28999,"endOffset":29145,"count":0}],"isBlockCoverage":false}]},{"scriptId":"812","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/esutils/lib/keyword.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5616,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1333,"endOffset":5575,"count":1}],"isBlockCoverage":true},{"functionName":"isStrictModeReservedWordES6","ranges":[{"startOffset":1405,"endOffset":1746,"count":0}],"isBlockCoverage":false},{"functionName":"isKeywordES5","ranges":[{"startOffset":1752,"endOffset":1984,"count":0}],"isBlockCoverage":false},{"functionName":"isKeywordES6","ranges":[{"startOffset":1990,"endOffset":3218,"count":0}],"isBlockCoverage":false},{"functionName":"isReservedWordES5","ranges":[{"startOffset":3224,"endOffset":3363,"count":0}],"isBlockCoverage":false},{"functionName":"isReservedWordES6","ranges":[{"startOffset":3369,"endOffset":3508,"count":0}],"isBlockCoverage":false},{"functionName":"isRestrictedWord","ranges":[{"startOffset":3514,"endOffset":3603,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierNameES5","ranges":[{"startOffset":3609,"endOffset":4045,"count":0}],"isBlockCoverage":false},{"functionName":"decodeUtf16","ranges":[{"startOffset":4051,"endOffset":4161,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierNameES6","ranges":[{"startOffset":4167,"endOffset":4903,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierES5","ranges":[{"startOffset":4909,"endOffset":5027,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierES6","ranges":[{"startOffset":5033,"endOffset":5151,"count":0}],"isBlockCoverage":false}]},{"scriptId":"813","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/doctrine/lib/typed.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38505,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":245,"endOffset":38464,"count":1}],"isBlockCoverage":true},{"functionName":"isTypeName","ranges":[{"startOffset":2016,"endOffset":2193,"count":0}],"isBlockCoverage":false},{"functionName":"Context","ranges":[{"startOffset":2199,"endOffset":2376,"count":0}],"isBlockCoverage":false},{"functionName":"Context.restore","ranges":[{"startOffset":2410,"endOffset":2551,"count":0}],"isBlockCoverage":false},{"functionName":"Context.save","ranges":[{"startOffset":2573,"endOffset":2651,"count":0}],"isBlockCoverage":false},{"functionName":"maybeAddRange","ranges":[{"startOffset":2658,"endOffset":2831,"count":0}],"isBlockCoverage":false},{"functionName":"advance","ranges":[{"startOffset":2837,"endOffset":2941,"count":0}],"isBlockCoverage":false},{"functionName":"scanHexEscape","ranges":[{"startOffset":2947,"endOffset":3410,"count":0}],"isBlockCoverage":false},{"functionName":"scanString","ranges":[{"startOffset":3416,"endOffset":6817,"count":0}],"isBlockCoverage":false},{"functionName":"scanNumber","ranges":[{"startOffset":6823,"endOffset":10606,"count":0}],"isBlockCoverage":false},{"functionName":"scanTypeName","ranges":[{"startOffset":10613,"endOffset":11183,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":11189,"endOffset":14768,"count":0}],"isBlockCoverage":false},{"functionName":"consume","ranges":[{"startOffset":14774,"endOffset":14908,"count":0}],"isBlockCoverage":false},{"functionName":"expect","ranges":[{"startOffset":14914,"endOffset":15075,"count":0}],"isBlockCoverage":false},{"functionName":"parseUnionType","ranges":[{"startOffset":15325,"endOffset":15957,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrayType","ranges":[{"startOffset":16162,"endOffset":17077,"count":0}],"isBlockCoverage":false},{"functionName":"parseFieldName","ranges":[{"startOffset":17083,"endOffset":17416,"count":0}],"isBlockCoverage":false},{"functionName":"parseFieldType","ranges":[{"startOffset":17636,"endOffset":18158,"count":0}],"isBlockCoverage":false},{"functionName":"parseRecordType","ranges":[{"startOffset":18319,"endOffset":18990,"count":0}],"isBlockCoverage":false},{"functionName":"parseNameExpression","ranges":[{"startOffset":19264,"endOffset":19784,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeExpressionList","ranges":[{"startOffset":19910,"endOffset":20163,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeName","ranges":[{"startOffset":20401,"endOffset":20932,"count":0}],"isBlockCoverage":false},{"functionName":"parseResultType","ranges":[{"startOffset":21134,"endOffset":21446,"count":0}],"isBlockCoverage":false},{"functionName":"parseParametersType","ranges":[{"startOffset":22129,"endOffset":23843,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionType","ranges":[{"startOffset":24198,"endOffset":25939,"count":0}],"isBlockCoverage":false},{"functionName":"parseBasicTypeExpression","ranges":[{"startOffset":26139,"endOffset":28221,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeExpression","ranges":[{"startOffset":28474,"endOffset":30747,"count":0}],"isBlockCoverage":false},{"functionName":"parseTop","ranges":[{"startOffset":31027,"endOffset":31565,"count":0}],"isBlockCoverage":false},{"functionName":"parseTopParamType","ranges":[{"startOffset":31571,"endOffset":32116,"count":0}],"isBlockCoverage":false},{"functionName":"parseType","ranges":[{"startOffset":32122,"endOffset":32672,"count":0}],"isBlockCoverage":false},{"functionName":"parseParamType","ranges":[{"startOffset":32678,"endOffset":33242,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyImpl","ranges":[{"startOffset":33248,"endOffset":38132,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":38138,"endOffset":38317,"count":0}],"isBlockCoverage":false}]},{"scriptId":"814","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/doctrine/lib/utility.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":816,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":99,"endOffset":774,"count":1}],"isBlockCoverage":true},{"functionName":"DoctrineError","ranges":[{"startOffset":236,"endOffset":344,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":376,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"Middle","ranges":[{"startOffset":411,"endOffset":426,"count":1}],"isBlockCoverage":true},{"functionName":"throwError","ranges":[{"startOffset":616,"endOffset":694,"count":0}],"isBlockCoverage":false}]},{"scriptId":"815","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/swagger-parser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":71,"count":1}],"isBlockCoverage":true}]},{"scriptId":"816","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@apidevtools/swagger-parser/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7702,"count":1}],"isBlockCoverage":true},{"functionName":"SwaggerParser","ranges":[{"startOffset":812,"endOffset":878,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1309,"count":0}],"isBlockCoverage":false},{"functionName":"SwaggerParser.parse","ranges":[{"startOffset":1983,"endOffset":4350,"count":1},{"startOffset":2248,"endOffset":3122,"count":0},{"startOffset":3358,"endOffset":3462,"count":0},{"startOffset":3514,"endOffset":3695,"count":0},{"startOffset":3752,"endOffset":3929,"count":0},{"startOffset":3995,"endOffset":4186,"count":0},{"startOffset":4277,"endOffset":4348,"count":0}],"isBlockCoverage":true},{"functionName":"SwaggerParser.validate","ranges":[{"startOffset":5034,"endOffset":5221,"count":0}],"isBlockCoverage":false},{"functionName":"SwaggerParser.validate","ranges":[{"startOffset":5915,"endOffset":7508,"count":0}],"isBlockCoverage":false}]},{"scriptId":"817","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@apidevtools/swagger-parser/lib/validators/schema.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2065,"count":1}],"isBlockCoverage":true},{"functionName":"validateSchema","ranges":[{"startOffset":376,"endOffset":815,"count":0}],"isBlockCoverage":false},{"functionName":"initializeZSchema","ranges":[{"startOffset":909,"endOffset":1427,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1219,"endOffset":1253,"count":0}],"isBlockCoverage":false},{"functionName":"formatZSchemaError","ranges":[{"startOffset":1735,"endOffset":2064,"count":0}],"isBlockCoverage":false}]},{"scriptId":"818","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@apidevtools/swagger-parser/lib/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":220,"count":1}],"isBlockCoverage":true}]},{"scriptId":"819","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@jsdevtools/ono/cjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1213,"count":1},{"startOffset":239,"endOffset":320,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88,"endOffset":237,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":242,"endOffset":319,"count":0}],"isBlockCoverage":true},{"functionName":"__exportStar","ranges":[{"startOffset":373,"endOffset":501,"count":1},{"startOffset":417,"endOffset":499,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":721,"endOffset":760,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":874,"endOffset":915,"count":1}],"isBlockCoverage":true}]},{"scriptId":"820","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@jsdevtools/ono/cjs/singleton.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1600,"count":1}],"isBlockCoverage":true},{"functionName":"ono","ranges":[{"startOffset":719,"endOffset":1562,"count":0}],"isBlockCoverage":false}]},{"scriptId":"821","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@jsdevtools/ono/cjs/constructor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1763,"count":1}],"isBlockCoverage":true},{"functionName":"Ono","ranges":[{"startOffset":413,"endOffset":967,"count":7}],"isBlockCoverage":true},{"functionName":"ono","ranges":[{"startOffset":512,"endOffset":905,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":1109,"endOffset":1176,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":1366,"endOffset":1722,"count":0}],"isBlockCoverage":false}]},{"scriptId":"822","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@jsdevtools/ono/cjs/extend-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3074,"count":1}],"isBlockCoverage":true},{"functionName":"extendError","ranges":[{"startOffset":557,"endOffset":1523,"count":0}],"isBlockCoverage":false},{"functionName":"extendStack","ranges":[{"startOffset":1614,"endOffset":1978,"count":0}],"isBlockCoverage":false},{"functionName":"mergeErrors","ranges":[{"startOffset":2161,"endOffset":3033,"count":0}],"isBlockCoverage":false}]},{"scriptId":"823","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@jsdevtools/ono/cjs/isomorphic.node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1740,"count":1},{"startOffset":368,"endOffset":411,"count":0}],"isBlockCoverage":true},{"functionName":"addInspectMethod","ranges":[{"startOffset":746,"endOffset":893,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":1112,"endOffset":1696,"count":0}],"isBlockCoverage":false}]},{"scriptId":"824","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@jsdevtools/ono/cjs/to-json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1735,"count":1}],"isBlockCoverage":true},{"functionName":"toJSON","ranges":[{"startOffset":426,"endOffset":916,"count":0}],"isBlockCoverage":false},{"functionName":"getDeepKeys","ranges":[{"startOffset":1127,"endOffset":1664,"count":0}],"isBlockCoverage":false}]},{"scriptId":"825","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@jsdevtools/ono/cjs/stack.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3353,"count":1}],"isBlockCoverage":true},{"functionName":"isLazyStack","ranges":[{"startOffset":277,"endOffset":424,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableStack","ranges":[{"startOffset":503,"endOffset":748,"count":0}],"isBlockCoverage":false},{"functionName":"joinStacks","ranges":[{"startOffset":873,"endOffset":1191,"count":0}],"isBlockCoverage":false},{"functionName":"lazyJoinStacks","ranges":[{"startOffset":1308,"endOffset":1760,"count":0}],"isBlockCoverage":false},{"functionName":"popStack","ranges":[{"startOffset":1897,"endOffset":3031,"count":0}],"isBlockCoverage":false},{"functionName":"lazyPopStack","ranges":[{"startOffset":3113,"endOffset":3319,"count":0}],"isBlockCoverage":false}]},{"scriptId":"826","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@jsdevtools/ono/cjs/normalize.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1976,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeOptions","ranges":[{"startOffset":273,"endOffset":614,"count":7},{"startOffset":420,"endOffset":453,"count":0},{"startOffset":539,"endOffset":604,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeArgs","ranges":[{"startOffset":759,"endOffset":1899,"count":0}],"isBlockCoverage":false}]},{"scriptId":"827","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@jsdevtools/ono/cjs/types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":142,"count":1}],"isBlockCoverage":true}]},{"scriptId":"828","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/z-schema/src/ZSchema.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12214,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeOptions","ranges":[{"startOffset":2635,"endOffset":3952,"count":4},{"startOffset":2918,"endOffset":3109,"count":48},{"startOffset":3000,"endOffset":3099,"count":0},{"startOffset":3260,"endOffset":3425,"count":88},{"startOffset":3335,"endOffset":3415,"count":40},{"startOffset":3462,"endOffset":3525,"count":0},{"startOffset":3567,"endOffset":3926,"count":0}],"isBlockCoverage":true},{"functionName":"ZSchema","ranges":[{"startOffset":3999,"endOffset":4487,"count":1}],"isBlockCoverage":true},{"functionName":"ZSchema.compileSchema","ranges":[{"startOffset":4600,"endOffset":4853,"count":0}],"isBlockCoverage":false},{"functionName":"ZSchema.validateSchema","ranges":[{"startOffset":4948,"endOffset":5436,"count":0}],"isBlockCoverage":false},{"functionName":"ZSchema.validate","ranges":[{"startOffset":5606,"endOffset":7893,"count":0}],"isBlockCoverage":false},{"functionName":"ZSchema.getLastError","ranges":[{"startOffset":7928,"endOffset":8190,"count":0}],"isBlockCoverage":false},{"functionName":"ZSchema.getLastErrors","ranges":[{"startOffset":8226,"endOffset":8338,"count":0}],"isBlockCoverage":false},{"functionName":"ZSchema.getMissingReferences","ranges":[{"startOffset":8381,"endOffset":8873,"count":0}],"isBlockCoverage":false},{"functionName":"ZSchema.getMissingRemoteReferences","ranges":[{"startOffset":8922,"endOffset":9374,"count":0}],"isBlockCoverage":false},{"functionName":"ZSchema.setRemoteReference","ranges":[{"startOffset":9415,"endOffset":9766,"count":2},{"startOffset":9495,"endOffset":9539,"count":0}],"isBlockCoverage":true},{"functionName":"ZSchema.getResolvedSchema","ranges":[{"startOffset":9806,"endOffset":11283,"count":0}],"isBlockCoverage":false},{"functionName":"ZSchema.setSchemaReader","ranges":[{"startOffset":11382,"endOffset":11459,"count":0}],"isBlockCoverage":false},{"functionName":"ZSchema.getSchemaReader","ranges":[{"startOffset":11498,"endOffset":11546,"count":0}],"isBlockCoverage":false},{"functionName":"ZSchema.setSchemaReader","ranges":[{"startOffset":11634,"endOffset":11702,"count":0}],"isBlockCoverage":false},{"functionName":"ZSchema.registerFormat","ranges":[{"startOffset":11729,"endOffset":11827,"count":1}],"isBlockCoverage":true},{"functionName":"ZSchema.unregisterFormat","ranges":[{"startOffset":11856,"endOffset":11922,"count":0}],"isBlockCoverage":false},{"functionName":"ZSchema.getRegisteredFormats","ranges":[{"startOffset":11955,"endOffset":12012,"count":0}],"isBlockCoverage":false},{"functionName":"ZSchema.getDefaultOptions","ranges":[{"startOffset":12042,"endOffset":12101,"count":0}],"isBlockCoverage":false}]},{"scriptId":"829","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/z-schema/src/Polyfills.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":571,"count":1},{"startOffset":147,"endOffset":570,"count":0}],"isBlockCoverage":true},{"functionName":"isFinite","ranges":[{"startOffset":171,"endOffset":567,"count":0}],"isBlockCoverage":false}]},{"scriptId":"830","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/lodash.get/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23398,"count":1},{"startOffset":1708,"endOffset":1715,"count":0},{"startOffset":1716,"endOffset":1741,"count":0},{"startOffset":1742,"endOffset":1749,"count":0},{"startOffset":1823,"endOffset":1834,"count":0},{"startOffset":1835,"endOffset":1863,"count":0},{"startOffset":4115,"endOffset":4126,"count":0},{"startOffset":4184,"endOffset":4195,"count":0}],"isBlockCoverage":true},{"functionName":"getValue","ranges":[{"startOffset":2077,"endOffset":2162,"count":2},{"startOffset":2134,"endOffset":2145,"count":0}],"isBlockCoverage":true},{"functionName":"isHostObject","ranges":[{"startOffset":2356,"endOffset":2683,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3004,"endOffset":3156,"count":1},{"startOffset":3054,"endOffset":3072,"count":0},{"startOffset":3073,"endOffset":3100,"count":0},{"startOffset":3122,"endOffset":3148,"count":0}],"isBlockCoverage":true},{"functionName":"Hash","ranges":[{"startOffset":4321,"endOffset":4526,"count":2},{"startOffset":4387,"endOffset":4403,"count":0},{"startOffset":4453,"endOffset":4524,"count":0}],"isBlockCoverage":true},{"functionName":"hashClear","ranges":[{"startOffset":4632,"endOffset":4714,"count":2},{"startOffset":4707,"endOffset":4711,"count":0}],"isBlockCoverage":true},{"functionName":"hashDelete","ranges":[{"startOffset":4995,"endOffset":5076,"count":0}],"isBlockCoverage":false},{"functionName":"hashGet","ranges":[{"startOffset":5259,"endOffset":5490,"count":0}],"isBlockCoverage":false},{"functionName":"hashHas","ranges":[{"startOffset":5725,"endOffset":5860,"count":0}],"isBlockCoverage":false},{"functionName":"hashSet","ranges":[{"startOffset":6089,"endOffset":6242,"count":0}],"isBlockCoverage":false},{"functionName":"ListCache","ranges":[{"startOffset":6564,"endOffset":6774,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheClear","ranges":[{"startOffset":6891,"endOffset":6942,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheDelete","ranges":[{"startOffset":7190,"endOffset":7474,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheGet","ranges":[{"startOffset":7668,"endOffset":7815,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheHas","ranges":[{"startOffset":8061,"endOffset":8139,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheSet","ranges":[{"startOffset":8385,"endOffset":8596,"count":0}],"isBlockCoverage":false},{"functionName":"MapCache","ranges":[{"startOffset":8996,"endOffset":9205,"count":1},{"startOffset":9066,"endOffset":9082,"count":0},{"startOffset":9132,"endOffset":9203,"count":0}],"isBlockCoverage":true},{"functionName":"mapCacheClear","ranges":[{"startOffset":9314,"endOffset":9447,"count":1},{"startOffset":9403,"endOffset":9415,"count":0}],"isBlockCoverage":true},{"functionName":"mapCacheDelete","ranges":[{"startOffset":9687,"endOffset":9766,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheGet","ranges":[{"startOffset":9952,"endOffset":10022,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheHas","ranges":[{"startOffset":10260,"endOffset":10330,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheSet","ranges":[{"startOffset":10567,"endOffset":10659,"count":0}],"isBlockCoverage":false},{"functionName":"assocIndexOf","ranges":[{"startOffset":11154,"endOffset":11322,"count":0}],"isBlockCoverage":false},{"functionName":"baseGet","ranges":[{"startOffset":11575,"endOffset":11862,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsNative","ranges":[{"startOffset":12083,"endOffset":12310,"count":2},{"startOffset":12157,"endOffset":12180,"count":0},{"startOffset":12216,"endOffset":12238,"count":0},{"startOffset":12253,"endOffset":12267,"count":0}],"isBlockCoverage":true},{"functionName":"baseToString","ranges":[{"startOffset":12519,"endOffset":12873,"count":0}],"isBlockCoverage":false},{"functionName":"castPath","ranges":[{"startOffset":13048,"endOffset":13131,"count":0}],"isBlockCoverage":false},{"functionName":"getMapData","ranges":[{"startOffset":13305,"endOffset":13460,"count":0}],"isBlockCoverage":false},{"functionName":"getNative","ranges":[{"startOffset":13706,"endOffset":13828,"count":2},{"startOffset":13814,"endOffset":13825,"count":0}],"isBlockCoverage":true},{"functionName":"isKey","ranges":[{"startOffset":14097,"endOffset":14449,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyable","ranges":[{"startOffset":14652,"endOffset":14851,"count":0}],"isBlockCoverage":false},{"functionName":"isMasked","ranges":[{"startOffset":15040,"endOffset":15114,"count":2},{"startOffset":15088,"endOffset":15111,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15315,"endOffset":15618,"count":0}],"isBlockCoverage":false},{"functionName":"toKey","ranges":[{"startOffset":15800,"endOffset":15999,"count":0}],"isBlockCoverage":false},{"functionName":"toSource","ranges":[{"startOffset":16160,"endOffset":16348,"count":2},{"startOffset":16262,"endOffset":16329,"count":0},{"startOffset":16333,"endOffset":16347,"count":0}],"isBlockCoverage":true},{"functionName":"memoize","ranges":[{"startOffset":17795,"endOffset":18353,"count":1},{"startOffset":17875,"endOffset":17907,"count":0},{"startOffset":17910,"endOffset":17957,"count":0}],"isBlockCoverage":true},{"functionName":"memoized","ranges":[{"startOffset":17975,"endOffset":18279,"count":0}],"isBlockCoverage":false},{"functionName":"eq","ranges":[{"startOffset":19095,"endOffset":19190,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":19992,"endOffset":20284,"count":2},{"startOffset":20235,"endOffset":20239,"count":0},{"startOffset":20265,"endOffset":20281,"count":0}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":20867,"endOffset":20984,"count":4}],"isBlockCoverage":true},{"functionName":"isObjectLike","ranges":[{"startOffset":21483,"endOffset":21561,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":21920,"endOffset":22055,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":22471,"endOffset":22550,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23208,"endOffset":23374,"count":0}],"isBlockCoverage":false}]},{"scriptId":"831","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/z-schema/src/Report.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7524,"count":1}],"isBlockCoverage":true},{"functionName":"Report","ranges":[{"startOffset":217,"endOffset":822,"count":0}],"isBlockCoverage":false},{"functionName":"Report.isValid","ranges":[{"startOffset":881,"endOffset":1047,"count":0}],"isBlockCoverage":false},{"functionName":"Report.addAsyncTask","ranges":[{"startOffset":1168,"endOffset":1281,"count":0}],"isBlockCoverage":false},{"functionName":"Report.getAncestor","ranges":[{"startOffset":1315,"endOffset":1530,"count":0}],"isBlockCoverage":false},{"functionName":"Report.processAsyncTasks","ranges":[{"startOffset":1661,"endOffset":3009,"count":0}],"isBlockCoverage":false},{"functionName":"Report.getPath","ranges":[{"startOffset":3115,"endOffset":3781,"count":0}],"isBlockCoverage":false},{"functionName":"Report.getSchemaId","ranges":[{"startOffset":3815,"endOffset":4316,"count":0}],"isBlockCoverage":false},{"functionName":"Report.hasError","ranges":[{"startOffset":4427,"endOffset":4993,"count":0}],"isBlockCoverage":false},{"functionName":"Report.addError","ranges":[{"startOffset":5165,"endOffset":5381,"count":0}],"isBlockCoverage":false},{"functionName":"Report.getJson","ranges":[{"startOffset":5411,"endOffset":5621,"count":0}],"isBlockCoverage":false},{"functionName":"Report.addCustomError","ranges":[{"startOffset":5825,"endOffset":7496,"count":0}],"isBlockCoverage":false}]},{"scriptId":"832","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/z-schema/src/Errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4006,"count":1}],"isBlockCoverage":true}]},{"scriptId":"833","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/z-schema/src/Utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7259,"count":1}],"isBlockCoverage":true},{"functionName":"exports.sortedKeys","ranges":[{"startOffset":216,"endOffset":270,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isAbsoluteUri","ranges":[{"startOffset":356,"endOffset":411,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isRelativeUri","ranges":[{"startOffset":497,"endOffset":601,"count":0}],"isBlockCoverage":false},{"functionName":"exports.whatIs","ranges":[{"startOffset":621,"endOffset":1329,"count":0}],"isBlockCoverage":false},{"functionName":"areEqual","ranges":[{"startOffset":1451,"endOffset":3498,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isUniqueArray","ranges":[{"startOffset":3612,"endOffset":3919,"count":0}],"isBlockCoverage":false},{"functionName":"exports.difference","ranges":[{"startOffset":4017,"endOffset":4230,"count":0}],"isBlockCoverage":false},{"functionName":"exports.clone","ranges":[{"startOffset":4280,"endOffset":4794,"count":40},{"startOffset":4333,"endOffset":4351,"count":0},{"startOffset":4384,"endOffset":4399,"count":2},{"startOffset":4416,"endOffset":4793,"count":0}],"isBlockCoverage":true},{"functionName":"exports.cloneDeep","ranges":[{"startOffset":4817,"endOffset":5677,"count":2}],"isBlockCoverage":true},{"functionName":"cloneDeep","ranges":[{"startOffset":4890,"endOffset":5648,"count":261},{"startOffset":4952,"endOffset":4967,"count":130},{"startOffset":4969,"endOffset":4984,"count":131},{"startOffset":4984,"endOffset":5079,"count":130},{"startOffset":5079,"endOffset":5103,"count":0},{"startOffset":5103,"endOffset":5171,"count":130},{"startOffset":5171,"endOffset":5354,"count":15},{"startOffset":5281,"endOffset":5344,"count":32},{"startOffset":5354,"endOffset":5622,"count":115},{"startOffset":5512,"endOffset":5612,"count":227},{"startOffset":5622,"endOffset":5647,"count":130}],"isBlockCoverage":true},{"functionName":"exports.ucs2decode","ranges":[{"startOffset":6374,"endOffset":7240,"count":0}],"isBlockCoverage":false}]},{"scriptId":"834","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/z-schema/src/FormatValidators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4673,"count":1}],"isBlockCoverage":true},{"functionName":"date","ranges":[{"startOffset":102,"endOffset":667,"count":0}],"isBlockCoverage":false},{"functionName":"date-time","ranges":[{"startOffset":686,"endOffset":1486,"count":0}],"isBlockCoverage":false},{"functionName":"email","ranges":[{"startOffset":1501,"endOffset":1667,"count":0}],"isBlockCoverage":false},{"functionName":"hostname","ranges":[{"startOffset":1685,"endOffset":3589,"count":0}],"isBlockCoverage":false},{"functionName":"host-name","ranges":[{"startOffset":3608,"endOffset":3698,"count":0}],"isBlockCoverage":false},{"functionName":"ipv4","ranges":[{"startOffset":3712,"endOffset":3830,"count":0}],"isBlockCoverage":false},{"functionName":"ipv6","ranges":[{"startOffset":3844,"endOffset":3962,"count":0}],"isBlockCoverage":false},{"functionName":"regex","ranges":[{"startOffset":3977,"endOffset":4121,"count":0}],"isBlockCoverage":false},{"functionName":"uri","ranges":[{"startOffset":4134,"endOffset":4527,"count":0}],"isBlockCoverage":false},{"functionName":"strict-uri","ranges":[{"startOffset":4547,"endOffset":4633,"count":0}],"isBlockCoverage":false}]},{"scriptId":"835","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/z-schema/src/JsonValidation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24570,"count":1}],"isBlockCoverage":true},{"functionName":"shouldSkipValidate","ranges":[{"startOffset":182,"endOffset":411,"count":0}],"isBlockCoverage":false},{"functionName":"multipleOf","ranges":[{"startOffset":453,"endOffset":1091,"count":0}],"isBlockCoverage":false},{"functionName":"maximum","ranges":[{"startOffset":1106,"endOffset":1784,"count":0}],"isBlockCoverage":false},{"functionName":"exclusiveMaximum","ranges":[{"startOffset":1808,"endOffset":1857,"count":0}],"isBlockCoverage":false},{"functionName":"minimum","ranges":[{"startOffset":1872,"endOffset":2550,"count":0}],"isBlockCoverage":false},{"functionName":"exclusiveMinimum","ranges":[{"startOffset":2574,"endOffset":2623,"count":0}],"isBlockCoverage":false},{"functionName":"maxLength","ranges":[{"startOffset":2640,"endOffset":3104,"count":0}],"isBlockCoverage":false},{"functionName":"minLength","ranges":[{"startOffset":3121,"endOffset":3585,"count":0}],"isBlockCoverage":false},{"functionName":"pattern","ranges":[{"startOffset":3600,"endOffset":4044,"count":0}],"isBlockCoverage":false},{"functionName":"additionalItems","ranges":[{"startOffset":4067,"endOffset":4805,"count":0}],"isBlockCoverage":false},{"functionName":"items","ranges":[{"startOffset":4818,"endOffset":4900,"count":0}],"isBlockCoverage":false},{"functionName":"maxItems","ranges":[{"startOffset":4916,"endOffset":5370,"count":0}],"isBlockCoverage":false},{"functionName":"minItems","ranges":[{"startOffset":5386,"endOffset":5842,"count":0}],"isBlockCoverage":false},{"functionName":"uniqueItems","ranges":[{"startOffset":5861,"endOffset":6392,"count":0}],"isBlockCoverage":false},{"functionName":"maxProperties","ranges":[{"startOffset":6413,"endOffset":6950,"count":0}],"isBlockCoverage":false},{"functionName":"minProperties","ranges":[{"startOffset":6971,"endOffset":7508,"count":0}],"isBlockCoverage":false},{"functionName":"required","ranges":[{"startOffset":7524,"endOffset":8171,"count":0}],"isBlockCoverage":false},{"functionName":"additionalProperties","ranges":[{"startOffset":8199,"endOffset":8471,"count":0}],"isBlockCoverage":false},{"functionName":"patternProperties","ranges":[{"startOffset":8496,"endOffset":8704,"count":0}],"isBlockCoverage":false},{"functionName":"properties","ranges":[{"startOffset":8722,"endOffset":10938,"count":0}],"isBlockCoverage":false},{"functionName":"dependencies","ranges":[{"startOffset":10958,"endOffset":12421,"count":0}],"isBlockCoverage":false},{"functionName":"enum","ranges":[{"startOffset":12433,"endOffset":13334,"count":0}],"isBlockCoverage":false},{"functionName":"type","ranges":[{"startOffset":13346,"endOffset":14123,"count":0}],"isBlockCoverage":false},{"functionName":"allOf","ranges":[{"startOffset":14136,"endOffset":14547,"count":0}],"isBlockCoverage":false},{"functionName":"anyOf","ranges":[{"startOffset":14560,"endOffset":15134,"count":0}],"isBlockCoverage":false},{"functionName":"oneOf","ranges":[{"startOffset":15147,"endOffset":15858,"count":0}],"isBlockCoverage":false},{"functionName":"not","ranges":[{"startOffset":15869,"endOffset":16195,"count":0}],"isBlockCoverage":false},{"functionName":"definitions","ranges":[{"startOffset":16214,"endOffset":16377,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":16391,"endOffset":17790,"count":0}],"isBlockCoverage":false},{"functionName":"recurseArray","ranges":[{"startOffset":17814,"endOffset":19381,"count":0}],"isBlockCoverage":false},{"functionName":"recurseObject","ranges":[{"startOffset":19404,"endOffset":21780,"count":0}],"isBlockCoverage":false},{"functionName":"exports.validate","ranges":[{"startOffset":21921,"endOffset":24568,"count":0}],"isBlockCoverage":false}]},{"scriptId":"836","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/z-schema/src/SchemaCache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5308,"count":1}],"isBlockCoverage":true},{"functionName":"decodeJSONPointer","ranges":[{"startOffset":277,"endOffset":507,"count":0}],"isBlockCoverage":false},{"functionName":"getRemotePath","ranges":[{"startOffset":509,"endOffset":618,"count":2},{"startOffset":597,"endOffset":615,"count":0}],"isBlockCoverage":true},{"functionName":"getQueryPath","ranges":[{"startOffset":620,"endOffset":884,"count":0}],"isBlockCoverage":false},{"functionName":"findId","ranges":[{"startOffset":886,"endOffset":1802,"count":0}],"isBlockCoverage":false},{"functionName":"exports.cacheSchemaByUri","ranges":[{"startOffset":1903,"endOffset":2039,"count":2}],"isBlockCoverage":true},{"functionName":"exports.removeFromCacheByUri","ranges":[{"startOffset":2124,"endOffset":2250,"count":0}],"isBlockCoverage":false},{"functionName":"exports.checkCacheForUri","ranges":[{"startOffset":2334,"endOffset":2457,"count":0}],"isBlockCoverage":false},{"functionName":"exports.getSchema","ranges":[{"startOffset":2480,"endOffset":2758,"count":0}],"isBlockCoverage":false},{"functionName":"exports.getSchemaByReference","ranges":[{"startOffset":2792,"endOffset":3113,"count":0}],"isBlockCoverage":false},{"functionName":"exports.getSchemaByUri","ranges":[{"startOffset":3141,"endOffset":5266,"count":0}],"isBlockCoverage":false}]},{"scriptId":"837","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/lodash.isequal/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":49598,"count":1},{"startOffset":3324,"endOffset":3331,"count":0},{"startOffset":3332,"endOffset":3357,"count":0},{"startOffset":3358,"endOffset":3365,"count":0},{"startOffset":3439,"endOffset":3450,"count":0},{"startOffset":3451,"endOffset":3479,"count":0},{"startOffset":9407,"endOffset":9418,"count":0},{"startOffset":9622,"endOffset":9633,"count":0},{"startOffset":9824,"endOffset":9835,"count":0},{"startOffset":10547,"endOffset":10558,"count":0},{"startOffset":10614,"endOffset":10625,"count":0},{"startOffset":37843,"endOffset":37854,"count":0},{"startOffset":38616,"endOffset":39131,"count":0},{"startOffset":42529,"endOffset":42671,"count":0},{"startOffset":44216,"endOffset":44228,"count":0},{"startOffset":48209,"endOffset":48227,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4053,"endOffset":4170,"count":1},{"startOffset":4156,"endOffset":4168,"count":0}],"isBlockCoverage":true},{"functionName":"arrayFilter","ranges":[{"startOffset":4557,"endOffset":4868,"count":0}],"isBlockCoverage":false},{"functionName":"arrayPush","ranges":[{"startOffset":5070,"endOffset":5277,"count":0}],"isBlockCoverage":false},{"functionName":"arraySome","ranges":[{"startOffset":5612,"endOffset":5843,"count":0}],"isBlockCoverage":false},{"functionName":"baseTimes","ranges":[{"startOffset":6158,"endOffset":6319,"count":0}],"isBlockCoverage":false},{"functionName":"baseUnary","ranges":[{"startOffset":6539,"endOffset":6623,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6575,"endOffset":6620,"count":0}],"isBlockCoverage":false},{"functionName":"cacheHas","ranges":[{"startOffset":6875,"endOffset":6933,"count":0}],"isBlockCoverage":false},{"functionName":"getValue","ranges":[{"startOffset":7146,"endOffset":7231,"count":6},{"startOffset":7203,"endOffset":7214,"count":0}],"isBlockCoverage":true},{"functionName":"mapToArray","ranges":[{"startOffset":7390,"endOffset":7565,"count":0}],"isBlockCoverage":false},{"functionName":"overArg","ranges":[{"startOffset":7821,"endOffset":7921,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7866,"endOffset":7918,"count":0}],"isBlockCoverage":false},{"functionName":"setToArray","ranges":[{"startOffset":8074,"endOffset":8237,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8756,"endOffset":8908,"count":1},{"startOffset":8806,"endOffset":8824,"count":0},{"startOffset":8825,"endOffset":8852,"count":0},{"startOffset":8874,"endOffset":8900,"count":0}],"isBlockCoverage":true},{"functionName":"Hash","ranges":[{"startOffset":10751,"endOffset":10964,"count":0}],"isBlockCoverage":false},{"functionName":"hashClear","ranges":[{"startOffset":11070,"endOffset":11169,"count":0}],"isBlockCoverage":false},{"functionName":"hashDelete","ranges":[{"startOffset":11450,"endOffset":11585,"count":0}],"isBlockCoverage":false},{"functionName":"hashGet","ranges":[{"startOffset":11768,"endOffset":11999,"count":0}],"isBlockCoverage":false},{"functionName":"hashHas","ranges":[{"startOffset":12234,"endOffset":12371,"count":0}],"isBlockCoverage":false},{"functionName":"hashSet","ranges":[{"startOffset":12600,"endOffset":12791,"count":0}],"isBlockCoverage":false},{"functionName":"ListCache","ranges":[{"startOffset":13113,"endOffset":13331,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheClear","ranges":[{"startOffset":13448,"endOffset":13516,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheDelete","ranges":[{"startOffset":13764,"endOffset":14063,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheGet","ranges":[{"startOffset":14257,"endOffset":14404,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheHas","ranges":[{"startOffset":14650,"endOffset":14728,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheSet","ranges":[{"startOffset":14974,"endOffset":15202,"count":0}],"isBlockCoverage":false},{"functionName":"MapCache","ranges":[{"startOffset":15602,"endOffset":15819,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheClear","ranges":[{"startOffset":15928,"endOffset":16078,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheDelete","ranges":[{"startOffset":16318,"endOffset":16451,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheGet","ranges":[{"startOffset":16637,"endOffset":16707,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheHas","ranges":[{"startOffset":16945,"endOffset":17015,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheSet","ranges":[{"startOffset":17252,"endOffset":17430,"count":0}],"isBlockCoverage":false},{"functionName":"SetCache","ranges":[{"startOffset":17813,"endOffset":18006,"count":0}],"isBlockCoverage":false},{"functionName":"setCacheAdd","ranges":[{"startOffset":18206,"endOffset":18296,"count":0}],"isBlockCoverage":false},{"functionName":"setCacheHas","ranges":[{"startOffset":18516,"endOffset":18582,"count":0}],"isBlockCoverage":false},{"functionName":"Stack","ranges":[{"startOffset":18872,"endOffset":18977,"count":0}],"isBlockCoverage":false},{"functionName":"stackClear","ranges":[{"startOffset":19085,"endOffset":19160,"count":0}],"isBlockCoverage":false},{"functionName":"stackDelete","ranges":[{"startOffset":19399,"endOffset":19535,"count":0}],"isBlockCoverage":false},{"functionName":"stackGet","ranges":[{"startOffset":19720,"endOffset":19779,"count":0}],"isBlockCoverage":false},{"functionName":"stackHas","ranges":[{"startOffset":20016,"endOffset":20075,"count":0}],"isBlockCoverage":false},{"functionName":"stackSet","ranges":[{"startOffset":20313,"endOffset":20701,"count":0}],"isBlockCoverage":false},{"functionName":"arrayLikeKeys","ranges":[{"startOffset":21178,"endOffset":22225,"count":0}],"isBlockCoverage":false},{"functionName":"assocIndexOf","ranges":[{"startOffset":22486,"endOffset":22654,"count":0}],"isBlockCoverage":false},{"functionName":"baseGetAllKeys","ranges":[{"startOffset":23115,"endOffset":23282,"count":0}],"isBlockCoverage":false},{"functionName":"baseGetTag","ranges":[{"startOffset":23476,"endOffset":23703,"count":12},{"startOffset":23526,"endOffset":23588,"count":0},{"startOffset":23654,"endOffset":23672,"count":5},{"startOffset":23677,"endOffset":23700,"count":7}],"isBlockCoverage":true},{"functionName":"baseIsArguments","ranges":[{"startOffset":23889,"endOffset":23986,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsEqual","ranges":[{"startOffset":24541,"endOffset":24875,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsEqualDeep","ranges":[{"startOffset":25582,"endOffset":27112,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsNative","ranges":[{"startOffset":27333,"endOffset":27535,"count":6},{"startOffset":27407,"endOffset":27430,"count":0},{"startOffset":27478,"endOffset":27492,"count":0}],"isBlockCoverage":true},{"functionName":"baseIsTypedArray","ranges":[{"startOffset":27758,"endOffset":27893,"count":0}],"isBlockCoverage":false},{"functionName":"baseKeys","ranges":[{"startOffset":28105,"endOffset":28373,"count":0}],"isBlockCoverage":false},{"functionName":"equalArrays","ranges":[{"startOffset":28984,"endOffset":30700,"count":0}],"isBlockCoverage":false},{"functionName":"equalByTag","ranges":[{"startOffset":31519,"endOffset":33454,"count":0}],"isBlockCoverage":false},{"functionName":"equalObjects","ranges":[{"startOffset":34073,"endOffset":36016,"count":0}],"isBlockCoverage":false},{"functionName":"getAllKeys","ranges":[{"startOffset":36235,"endOffset":36317,"count":0}],"isBlockCoverage":false},{"functionName":"getMapData","ranges":[{"startOffset":36491,"endOffset":36646,"count":0}],"isBlockCoverage":false},{"functionName":"getNative","ranges":[{"startOffset":36892,"endOffset":37014,"count":6},{"startOffset":37000,"endOffset":37011,"count":0}],"isBlockCoverage":true},{"functionName":"getRawTag","ranges":[{"startOffset":37215,"endOffset":37623,"count":5},{"startOffset":37413,"endOffset":37425,"count":0},{"startOffset":37509,"endOffset":37551,"count":0}],"isBlockCoverage":true},{"functionName":"getSymbols","ranges":[{"startOffset":37857,"endOffset":38073,"count":0}],"isBlockCoverage":false},{"functionName":"getTag","ranges":[{"startOffset":38629,"endOffset":39128,"count":0}],"isBlockCoverage":false},{"functionName":"isIndex","ranges":[{"startOffset":39406,"endOffset":39629,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyable","ranges":[{"startOffset":39832,"endOffset":40031,"count":0}],"isBlockCoverage":false},{"functionName":"isMasked","ranges":[{"startOffset":40220,"endOffset":40294,"count":6},{"startOffset":40268,"endOffset":40291,"count":0}],"isBlockCoverage":true},{"functionName":"isPrototype","ranges":[{"startOffset":40488,"endOffset":40663,"count":0}],"isBlockCoverage":false},{"functionName":"objectToString","ranges":[{"startOffset":40848,"endOffset":40925,"count":7}],"isBlockCoverage":true},{"functionName":"toSource","ranges":[{"startOffset":41086,"endOffset":41274,"count":11},{"startOffset":41188,"endOffset":41255,"count":0},{"startOffset":41259,"endOffset":41273,"count":0}],"isBlockCoverage":true},{"functionName":"eq","ranges":[{"startOffset":41957,"endOffset":42052,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":42475,"endOffset":42507,"count":1}],"isBlockCoverage":true},{"functionName":"isArguments","ranges":[{"startOffset":42531,"endOffset":42671,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLike","ranges":[{"startOffset":43750,"endOffset":43853,"count":0}],"isBlockCoverage":false},{"functionName":"isEqual","ranges":[{"startOffset":45073,"endOffset":45143,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":45483,"endOffset":45828,"count":6},{"startOffset":45536,"endOffset":45559,"count":0},{"startOffset":45771,"endOffset":45787,"count":0},{"startOffset":45788,"endOffset":45806,"count":0},{"startOffset":45807,"endOffset":45825,"count":0}],"isBlockCoverage":true},{"functionName":"isLength","ranges":[{"startOffset":46375,"endOffset":46503,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":47086,"endOffset":47209,"count":12}],"isBlockCoverage":true},{"functionName":"isObjectLike","ranges":[{"startOffset":47708,"endOffset":47792,"count":1}],"isBlockCoverage":true},{"functionName":"keys","ranges":[{"startOffset":48858,"endOffset":48956,"count":0}],"isBlockCoverage":false},{"functionName":"stubArray","ranges":[{"startOffset":49281,"endOffset":49318,"count":0}],"isBlockCoverage":false},{"functionName":"stubFalse","ranges":[{"startOffset":49530,"endOffset":49570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"838","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/z-schema/src/SchemaCompilation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9744,"count":1}],"isBlockCoverage":true},{"functionName":"mergeReference","ranges":[{"startOffset":137,"endOffset":990,"count":0}],"isBlockCoverage":false},{"functionName":"collectReferences","ranges":[{"startOffset":992,"endOffset":2510,"count":0}],"isBlockCoverage":false},{"functionName":"compileArrayOfSchemasLoop","ranges":[{"startOffset":2544,"endOffset":2996,"count":0}],"isBlockCoverage":false},{"functionName":"findId","ranges":[{"startOffset":2999,"endOffset":3169,"count":0}],"isBlockCoverage":false},{"functionName":"compileArrayOfSchemas","ranges":[{"startOffset":3199,"endOffset":4879,"count":0}],"isBlockCoverage":false},{"functionName":"exports.compileSchema","ranges":[{"startOffset":4906,"endOffset":9742,"count":0}],"isBlockCoverage":false}]},{"scriptId":"839","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/z-schema/src/SchemaValidation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26826,"count":1}],"isBlockCoverage":true},{"functionName":"$ref","ranges":[{"startOffset":244,"endOffset":548,"count":0}],"isBlockCoverage":false},{"functionName":"$schema","ranges":[{"startOffset":563,"endOffset":810,"count":0}],"isBlockCoverage":false},{"functionName":"multipleOf","ranges":[{"startOffset":828,"endOffset":1229,"count":0}],"isBlockCoverage":false},{"functionName":"maximum","ranges":[{"startOffset":1244,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"exclusiveMaximum","ranges":[{"startOffset":1527,"endOffset":1941,"count":0}],"isBlockCoverage":false},{"functionName":"minimum","ranges":[{"startOffset":1956,"endOffset":2215,"count":0}],"isBlockCoverage":false},{"functionName":"exclusiveMinimum","ranges":[{"startOffset":2239,"endOffset":2653,"count":0}],"isBlockCoverage":false},{"functionName":"maxLength","ranges":[{"startOffset":2670,"endOffset":3079,"count":0}],"isBlockCoverage":false},{"functionName":"minLength","ranges":[{"startOffset":3096,"endOffset":3505,"count":0}],"isBlockCoverage":false},{"functionName":"pattern","ranges":[{"startOffset":3520,"endOffset":3975,"count":0}],"isBlockCoverage":false},{"functionName":"additionalItems","ranges":[{"startOffset":3998,"endOffset":4539,"count":0}],"isBlockCoverage":false},{"functionName":"items","ranges":[{"startOffset":4552,"endOffset":5834,"count":0}],"isBlockCoverage":false},{"functionName":"maxItems","ranges":[{"startOffset":5850,"endOffset":6247,"count":0}],"isBlockCoverage":false},{"functionName":"minItems","ranges":[{"startOffset":6263,"endOffset":6668,"count":0}],"isBlockCoverage":false},{"functionName":"uniqueItems","ranges":[{"startOffset":6687,"endOffset":6956,"count":0}],"isBlockCoverage":false},{"functionName":"maxProperties","ranges":[{"startOffset":6977,"endOffset":7402,"count":0}],"isBlockCoverage":false},{"functionName":"minProperties","ranges":[{"startOffset":7423,"endOffset":7848,"count":0}],"isBlockCoverage":false},{"functionName":"required","ranges":[{"startOffset":7864,"endOffset":8727,"count":0}],"isBlockCoverage":false},{"functionName":"additionalProperties","ranges":[{"startOffset":8755,"endOffset":9316,"count":0}],"isBlockCoverage":false},{"functionName":"properties","ranges":[{"startOffset":9334,"endOffset":10640,"count":0}],"isBlockCoverage":false},{"functionName":"patternProperties","ranges":[{"startOffset":10665,"endOffset":11772,"count":0}],"isBlockCoverage":false},{"functionName":"dependencies","ranges":[{"startOffset":11792,"endOffset":13555,"count":0}],"isBlockCoverage":false},{"functionName":"enum","ranges":[{"startOffset":13567,"endOffset":14123,"count":0}],"isBlockCoverage":false},{"functionName":"type","ranges":[{"startOffset":14135,"endOffset":18183,"count":0}],"isBlockCoverage":false},{"functionName":"allOf","ranges":[{"startOffset":18196,"endOffset":18943,"count":0}],"isBlockCoverage":false},{"functionName":"anyOf","ranges":[{"startOffset":18956,"endOffset":19703,"count":0}],"isBlockCoverage":false},{"functionName":"oneOf","ranges":[{"startOffset":19716,"endOffset":20463,"count":0}],"isBlockCoverage":false},{"functionName":"not","ranges":[{"startOffset":20474,"endOffset":20884,"count":0}],"isBlockCoverage":false},{"functionName":"definitions","ranges":[{"startOffset":20903,"endOffset":21637,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":21651,"endOffset":22029,"count":0}],"isBlockCoverage":false},{"functionName":"id","ranges":[{"startOffset":22039,"endOffset":22278,"count":0}],"isBlockCoverage":false},{"functionName":"title","ranges":[{"startOffset":22291,"endOffset":22542,"count":0}],"isBlockCoverage":false},{"functionName":"description","ranges":[{"startOffset":22561,"endOffset":22824,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":22841,"endOffset":23039,"count":0}],"isBlockCoverage":false},{"functionName":"validateArrayOfSchemas","ranges":[{"startOffset":23155,"endOffset":23323,"count":0}],"isBlockCoverage":false},{"functionName":"exports.validateSchema","ranges":[{"startOffset":23409,"endOffset":26824,"count":0}],"isBlockCoverage":false}]},{"scriptId":"840","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@apidevtools/openapi-schemas/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1171,"count":1}],"isBlockCoverage":true}]},{"scriptId":"841","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11986,"count":1}],"isBlockCoverage":true},{"functionName":"validateSpec","ranges":[{"startOffset":503,"endOffset":1203,"count":0}],"isBlockCoverage":false},{"functionName":"validatePath","ranges":[{"startOffset":1577,"endOffset":2531,"count":0}],"isBlockCoverage":false},{"functionName":"validateParameters","ranges":[{"startOffset":3004,"endOffset":4161,"count":0}],"isBlockCoverage":false},{"functionName":"validateBodyParameters","ranges":[{"startOffset":4398,"endOffset":5112,"count":0}],"isBlockCoverage":false},{"functionName":"validatePathParameters","ranges":[{"startOffset":5413,"endOffset":6723,"count":0}],"isBlockCoverage":false},{"functionName":"validateParameterTypes","ranges":[{"startOffset":7108,"endOffset":8407,"count":0}],"isBlockCoverage":false},{"functionName":"checkForDuplicates","ranges":[{"startOffset":8565,"endOffset":8949,"count":0}],"isBlockCoverage":false},{"functionName":"validateResponse","ranges":[{"startOffset":9243,"endOffset":10080,"count":0}],"isBlockCoverage":false},{"functionName":"validateSchema","ranges":[{"startOffset":10373,"endOffset":10744,"count":0}],"isBlockCoverage":false},{"functionName":"validateRequiredPropertiesExist","ranges":[{"startOffset":11011,"endOffset":11985,"count":0}],"isBlockCoverage":false}]},{"scriptId":"842","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@apidevtools/swagger-methods/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":98,"count":1}],"isBlockCoverage":true}]},{"scriptId":"843","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@apidevtools/json-schema-ref-parser/lib/normalize-args.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1112,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeArgs","ranges":[{"startOffset":211,"endOffset":1111,"count":2},{"startOffset":377,"endOffset":458,"count":1},{"startOffset":495,"endOffset":850,"count":1},{"startOffset":733,"endOffset":846,"count":0},{"startOffset":850,"endOffset":964,"count":1},{"startOffset":1003,"endOffset":1044,"count":1}],"isBlockCoverage":true}]},{"scriptId":"844","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@apidevtools/json-schema-ref-parser/lib/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3883,"count":1}],"isBlockCoverage":true},{"functionName":"$RefParserOptions","ranges":[{"startOffset":587,"endOffset":694,"count":3}],"isBlockCoverage":true},{"functionName":"excludedPathMatcher","ranges":[{"startOffset":2643,"endOffset":2654,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":2890,"endOffset":3533,"count":43},{"startOffset":2951,"endOffset":3514,"count":42},{"startOffset":3031,"endOffset":3510,"count":163},{"startOffset":3175,"endOffset":3306,"count":37},{"startOffset":3276,"endOffset":3281,"count":19},{"startOffset":3306,"endOffset":3504,"count":126}],"isBlockCoverage":true},{"functionName":"isMergeable","ranges":[{"startOffset":3716,"endOffset":3882,"count":206},{"startOffset":3758,"endOffset":3790,"count":193},{"startOffset":3791,"endOffset":3817,"count":83},{"startOffset":3818,"endOffset":3849,"count":79},{"startOffset":3850,"endOffset":3879,"count":79}],"isBlockCoverage":true}]},{"scriptId":"845","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1792,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":1203,"endOffset":1788,"count":0}],"isBlockCoverage":false}]},{"scriptId":"846","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@apidevtools/json-schema-ref-parser/lib/util/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3332,"count":1}],"isBlockCoverage":true},{"functionName":"JSONParserError","ranges":[{"startOffset":209,"endOffset":385,"count":0}],"isBlockCoverage":false},{"functionName":"get footprint","ranges":[{"startOffset":389,"endOffset":482,"count":0}],"isBlockCoverage":false},{"functionName":"JSONParserErrorGroup","ranges":[{"startOffset":624,"endOffset":872,"count":0}],"isBlockCoverage":false},{"functionName":"getParserErrors","ranges":[{"startOffset":883,"endOffset":1094,"count":0}],"isBlockCoverage":false},{"functionName":"get errors","ranges":[{"startOffset":1098,"endOffset":1178,"count":0}],"isBlockCoverage":false},{"functionName":"ParserError","ranges":[{"startOffset":1308,"endOffset":1429,"count":0}],"isBlockCoverage":false},{"functionName":"UnmatchedParserError","ranges":[{"startOffset":1577,"endOffset":1700,"count":0}],"isBlockCoverage":false},{"functionName":"ResolverError","ranges":[{"startOffset":1836,"endOffset":2036,"count":0}],"isBlockCoverage":false},{"functionName":"UnmatchedResolverError","ranges":[{"startOffset":2192,"endOffset":2319,"count":0}],"isBlockCoverage":false},{"functionName":"MissingPointerError","ranges":[{"startOffset":2475,"endOffset":2606,"count":0}],"isBlockCoverage":false},{"functionName":"InvalidPointerError","ranges":[{"startOffset":2759,"endOffset":2924,"count":0}],"isBlockCoverage":false},{"functionName":"setErrorName","ranges":[{"startOffset":2965,"endOffset":3094,"count":8}],"isBlockCoverage":true},{"functionName":"exports.isHandledError","ranges":[{"startOffset":3121,"endOffset":3219,"count":0}],"isBlockCoverage":false},{"functionName":"exports.normalizeError","ranges":[{"startOffset":3247,"endOffset":3330,"count":0}],"isBlockCoverage":false}]},{"scriptId":"847","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@apidevtools/json-schema-ref-parser/lib/util/url.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7392,"count":1}],"isBlockCoverage":true},{"functionName":"cwd","ranges":[{"startOffset":768,"endOffset":1009,"count":1},{"startOffset":809,"endOffset":840,"count":0},{"startOffset":949,"endOffset":971,"count":0}],"isBlockCoverage":true},{"functionName":"getProtocol","ranges":[{"startOffset":1173,"endOffset":1300,"count":1},{"startOffset":1258,"endOffset":1298,"count":0}],"isBlockCoverage":true},{"functionName":"getExtension","ranges":[{"startOffset":1489,"endOffset":1662,"count":0}],"isBlockCoverage":false},{"functionName":"stripQuery","ranges":[{"startOffset":1795,"endOffset":1946,"count":0}],"isBlockCoverage":false},{"functionName":"getHash","ranges":[{"startOffset":2142,"endOffset":2283,"count":0}],"isBlockCoverage":false},{"functionName":"stripHash","ranges":[{"startOffset":2429,"endOffset":2576,"count":1},{"startOffset":2516,"endOffset":2559,"count":0}],"isBlockCoverage":true},{"functionName":"isHttp","ranges":[{"startOffset":2711,"endOffset":3105,"count":0}],"isBlockCoverage":false},{"functionName":"isFileSystemPath","ranges":[{"startOffset":3286,"endOffset":3629,"count":1},{"startOffset":3344,"endOffset":3530,"count":0},{"startOffset":3604,"endOffset":3626,"count":0}],"isBlockCoverage":true},{"functionName":"fromFileSystemPath","ranges":[{"startOffset":4275,"endOffset":4940,"count":1},{"startOffset":4844,"endOffset":4922,"count":2}],"isBlockCoverage":true},{"functionName":"toFileSystemPath","ranges":[{"startOffset":5159,"endOffset":6904,"count":0}],"isBlockCoverage":false},{"functionName":"safePointerToPath","ranges":[{"startOffset":7060,"endOffset":7390,"count":0}],"isBlockCoverage":false}]},{"scriptId":"848","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/yaml.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1799,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":1315,"endOffset":1795,"count":0}],"isBlockCoverage":false}]},{"scriptId":"849","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/js-yaml/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1793,"count":1}],"isBlockCoverage":true},{"functionName":"renamed","ranges":[{"startOffset":94,"endOffset":298,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":132,"endOffset":295,"count":0}],"isBlockCoverage":false}]},{"scriptId":"850","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/js-yaml/lib/loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":47142,"count":1},{"startOffset":3337,"endOffset":3446,"count":256},{"startOffset":3388,"endOffset":3391,"count":18},{"startOffset":3392,"endOffset":3395,"count":238}],"isBlockCoverage":true},{"functionName":"_class","ranges":[{"startOffset":971,"endOffset":1039,"count":0}],"isBlockCoverage":false},{"functionName":"is_EOL","ranges":[{"startOffset":1041,"endOffset":1118,"count":0}],"isBlockCoverage":false},{"functionName":"is_WHITE_SPACE","ranges":[{"startOffset":1120,"endOffset":1209,"count":0}],"isBlockCoverage":false},{"functionName":"is_WS_OR_EOL","ranges":[{"startOffset":1211,"endOffset":1373,"count":0}],"isBlockCoverage":false},{"functionName":"is_FLOW_INDICATOR","ranges":[{"startOffset":1375,"endOffset":1556,"count":0}],"isBlockCoverage":false},{"functionName":"fromHexCode","ranges":[{"startOffset":1558,"endOffset":1819,"count":0}],"isBlockCoverage":false},{"functionName":"escapedHexLen","ranges":[{"startOffset":1821,"endOffset":1979,"count":0}],"isBlockCoverage":false},{"functionName":"fromDecimalCode","ranges":[{"startOffset":1981,"endOffset":2101,"count":0}],"isBlockCoverage":false},{"functionName":"simpleEscapeSequence","ranges":[{"startOffset":2103,"endOffset":2880,"count":512},{"startOffset":2197,"endOffset":2205,"count":2},{"startOffset":2206,"endOffset":2877,"count":510},{"startOffset":2236,"endOffset":2244,"count":2},{"startOffset":2245,"endOffset":2877,"count":508},{"startOffset":2275,"endOffset":2283,"count":2},{"startOffset":2284,"endOffset":2877,"count":506},{"startOffset":2314,"endOffset":2322,"count":2},{"startOffset":2323,"endOffset":2877,"count":504},{"startOffset":2355,"endOffset":2363,"count":2},{"startOffset":2364,"endOffset":2877,"count":502},{"startOffset":2394,"endOffset":2402,"count":2},{"startOffset":2403,"endOffset":2877,"count":500},{"startOffset":2433,"endOffset":2441,"count":2},{"startOffset":2442,"endOffset":2877,"count":498},{"startOffset":2472,"endOffset":2480,"count":2},{"startOffset":2481,"endOffset":2877,"count":496},{"startOffset":2511,"endOffset":2519,"count":2},{"startOffset":2520,"endOffset":2877,"count":494},{"startOffset":2550,"endOffset":2558,"count":2},{"startOffset":2559,"endOffset":2877,"count":492},{"startOffset":2593,"endOffset":2598,"count":2},{"startOffset":2599,"endOffset":2877,"count":490},{"startOffset":2629,"endOffset":2637,"count":2},{"startOffset":2638,"endOffset":2877,"count":488},{"startOffset":2668,"endOffset":2673,"count":2},{"startOffset":2674,"endOffset":2877,"count":486},{"startOffset":2704,"endOffset":2712,"count":2},{"startOffset":2713,"endOffset":2877,"count":484},{"startOffset":2743,"endOffset":2751,"count":2},{"startOffset":2752,"endOffset":2877,"count":482},{"startOffset":2782,"endOffset":2790,"count":2},{"startOffset":2791,"endOffset":2877,"count":480},{"startOffset":2821,"endOffset":2831,"count":2},{"startOffset":2832,"endOffset":2877,"count":478},{"startOffset":2862,"endOffset":2872,"count":2},{"startOffset":2873,"endOffset":2877,"count":476}],"isBlockCoverage":true},{"functionName":"charFromCodepoint","ranges":[{"startOffset":2882,"endOffset":3199,"count":0}],"isBlockCoverage":false},{"functionName":"State","ranges":[{"startOffset":3449,"endOffset":4476,"count":0}],"isBlockCoverage":false},{"functionName":"generateError","ranges":[{"startOffset":4479,"endOffset":4815,"count":0}],"isBlockCoverage":false},{"functionName":"throwError","ranges":[{"startOffset":4817,"endOffset":4895,"count":0}],"isBlockCoverage":false},{"functionName":"throwWarning","ranges":[{"startOffset":4897,"endOffset":5030,"count":0}],"isBlockCoverage":false},{"functionName":"handleYamlDirective","ranges":[{"startOffset":5068,"endOffset":5873,"count":0}],"isBlockCoverage":false},{"functionName":"handleTagDirective","ranges":[{"startOffset":5883,"endOffset":6727,"count":0}],"isBlockCoverage":false},{"functionName":"captureSegment","ranges":[{"startOffset":6733,"endOffset":7418,"count":0}],"isBlockCoverage":false},{"functionName":"mergeMappings","ranges":[{"startOffset":7420,"endOffset":7944,"count":0}],"isBlockCoverage":false},{"functionName":"storeMappingPair","ranges":[{"startOffset":7946,"endOffset":10215,"count":0}],"isBlockCoverage":false},{"functionName":"readLineBreak","ranges":[{"startOffset":10217,"endOffset":10666,"count":0}],"isBlockCoverage":false},{"functionName":"skipSeparationSpace","ranges":[{"startOffset":10668,"endOffset":11711,"count":0}],"isBlockCoverage":false},{"functionName":"testDocumentSeparator","ranges":[{"startOffset":11713,"endOffset":12289,"count":0}],"isBlockCoverage":false},{"functionName":"writeFoldedLines","ranges":[{"startOffset":12291,"endOffset":12462,"count":0}],"isBlockCoverage":false},{"functionName":"readPlainScalar","ranges":[{"startOffset":12465,"endOffset":15193,"count":0}],"isBlockCoverage":false},{"functionName":"readSingleQuotedScalar","ranges":[{"startOffset":15195,"endOffset":16456,"count":0}],"isBlockCoverage":false},{"functionName":"readDoubleQuotedScalar","ranges":[{"startOffset":16458,"endOffset":18614,"count":0}],"isBlockCoverage":false},{"functionName":"readFlowCollection","ranges":[{"startOffset":18616,"endOffset":21695,"count":0}],"isBlockCoverage":false},{"functionName":"readBlockScalar","ranges":[{"startOffset":21697,"endOffset":25674,"count":0}],"isBlockCoverage":false},{"functionName":"readBlockSequence","ranges":[{"startOffset":25676,"endOffset":27395,"count":0}],"isBlockCoverage":false},{"functionName":"readBlockMapping","ranges":[{"startOffset":27397,"endOffset":32676,"count":0}],"isBlockCoverage":false},{"functionName":"readTagProperty","ranges":[{"startOffset":32678,"endOffset":35185,"count":0}],"isBlockCoverage":false},{"functionName":"readAnchorProperty","ranges":[{"startOffset":35187,"endOffset":35848,"count":0}],"isBlockCoverage":false},{"functionName":"readAlias","ranges":[{"startOffset":35850,"endOffset":36608,"count":0}],"isBlockCoverage":false},{"functionName":"composeNode","ranges":[{"startOffset":36610,"endOffset":42371,"count":0}],"isBlockCoverage":false},{"functionName":"readDocument","ranges":[{"startOffset":42373,"endOffset":45368,"count":0}],"isBlockCoverage":false},{"functionName":"loadDocuments","ranges":[{"startOffset":45371,"endOffset":46319,"count":0}],"isBlockCoverage":false},{"functionName":"loadAll","ranges":[{"startOffset":46322,"endOffset":46743,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":46746,"endOffset":47074,"count":0}],"isBlockCoverage":false}]},{"scriptId":"851","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/js-yaml/lib/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1177,"count":1}],"isBlockCoverage":true},{"functionName":"isNothing","ranges":[{"startOffset":16,"endOffset":112,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":115,"endOffset":207,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":210,"endOffset":355,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":358,"endOffset":657,"count":0}],"isBlockCoverage":false},{"functionName":"repeat","ranges":[{"startOffset":660,"endOffset":812,"count":0}],"isBlockCoverage":false},{"functionName":"isNegativeZero","ranges":[{"startOffset":815,"endOffset":920,"count":0}],"isBlockCoverage":false}]},{"scriptId":"852","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/js-yaml/lib/exception.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1299,"count":1}],"isBlockCoverage":true},{"functionName":"formatError","ranges":[{"startOffset":83,"endOffset":534,"count":0}],"isBlockCoverage":false},{"functionName":"YAMLException","ranges":[{"startOffset":537,"endOffset":1004,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1177,"endOffset":1263,"count":0}],"isBlockCoverage":false}]},{"scriptId":"853","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/js-yaml/lib/snippet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3086,"count":1}],"isBlockCoverage":true},{"functionName":"getLine","ranges":[{"startOffset":107,"endOffset":679,"count":0}],"isBlockCoverage":false},{"functionName":"padStart","ranges":[{"startOffset":682,"endOffset":775,"count":0}],"isBlockCoverage":false},{"functionName":"makeSnippet","ranges":[{"startOffset":778,"endOffset":3053,"count":0}],"isBlockCoverage":false}]},{"scriptId":"854","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/js-yaml/lib/schema/default.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":538,"count":1}],"isBlockCoverage":true}]},{"scriptId":"855","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/js-yaml/lib/schema/core.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":288,"count":1}],"isBlockCoverage":true}]},{"scriptId":"856","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/js-yaml/lib/schema/json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":523,"count":1}],"isBlockCoverage":true}]},{"scriptId":"857","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/js-yaml/lib/schema/failsafe.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":278,"count":1}],"isBlockCoverage":true}]},{"scriptId":"858","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/js-yaml/lib/schema.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3384,"count":1}],"isBlockCoverage":true},{"functionName":"compileList","ranges":[{"startOffset":128,"endOffset":597,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":208,"endOffset":575,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":287,"endOffset":532,"count":48},{"startOffset":375,"endOffset":426,"count":0},{"startOffset":427,"endOffset":480,"count":0},{"startOffset":482,"endOffset":526,"count":0}],"isBlockCoverage":true},{"functionName":"compileMap","ranges":[{"startOffset":600,"endOffset":1259,"count":3},{"startOffset":1192,"endOffset":1240,"count":6}],"isBlockCoverage":true},{"functionName":"collectType","ranges":[{"startOffset":886,"endOffset":1117,"count":23},{"startOffset":935,"endOffset":1027,"count":0}],"isBlockCoverage":true},{"functionName":"Schema","ranges":[{"startOffset":1262,"endOffset":1327,"count":1}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":1356,"endOffset":3355,"count":3},{"startOffset":1463,"endOffset":1527,"count":0},{"startOffset":1564,"endOffset":1658,"count":0},{"startOffset":1718,"endOffset":1755,"count":1},{"startOffset":1880,"endOffset":1928,"count":2},{"startOffset":1958,"endOffset":2006,"count":2},{"startOffset":2011,"endOffset":2178,"count":0},{"startOffset":3038,"endOffset":3043,"count":1},{"startOffset":3098,"endOffset":3103,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2199,"endOffset":2748,"count":6},{"startOffset":2250,"endOffset":2374,"count":0},{"startOffset":2398,"endOffset":2427,"count":0},{"startOffset":2429,"endOffset":2582,"count":0},{"startOffset":2604,"endOffset":2744,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2771,"endOffset":2950,"count":7},{"startOffset":2822,"endOffset":2946,"count":0}],"isBlockCoverage":true}]},{"scriptId":"859","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/js-yaml/lib/type.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1849,"count":1}],"isBlockCoverage":true},{"functionName":"compileStyleAliases","ranges":[{"startOffset":312,"endOffset":562,"count":13},{"startOffset":388,"endOffset":542,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":419,"endOffset":536,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":463,"endOffset":528,"count":8}],"isBlockCoverage":true},{"functionName":"Type","ranges":[{"startOffset":564,"endOffset":1824,"count":13},{"startOffset":614,"endOffset":619,"count":0},{"startOffset":1065,"endOffset":1072,"count":0},{"startOffset":1122,"endOffset":1153,"count":3},{"startOffset":1203,"endOffset":1238,"count":1},{"startOffset":1288,"endOffset":1295,"count":12},{"startOffset":1345,"endOffset":1352,"count":8},{"startOffset":1402,"endOffset":1409,"count":7},{"startOffset":1516,"endOffset":1523,"count":9},{"startOffset":1650,"endOffset":1657,"count":12},{"startOffset":1710,"endOffset":1822,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":653,"endOffset":850,"count":52},{"startOffset":726,"endOffset":846,"count":0}],"isBlockCoverage":true},{"functionName":"Type.resolve","ranges":[{"startOffset":1125,"endOffset":1153,"count":0}],"isBlockCoverage":false},{"functionName":"Type.construct","ranges":[{"startOffset":1206,"endOffset":1238,"count":0}],"isBlockCoverage":false}]},{"scriptId":"860","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/js-yaml/lib/type/str.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":189,"count":1}],"isBlockCoverage":true},{"functionName":"construct","ranges":[{"startOffset":131,"endOffset":184,"count":0}],"isBlockCoverage":false}]},{"scriptId":"861","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/js-yaml/lib/type/seq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":191,"count":1}],"isBlockCoverage":true},{"functionName":"construct","ranges":[{"startOffset":133,"endOffset":186,"count":0}],"isBlockCoverage":false}]},{"scriptId":"862","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/js-yaml/lib/type/map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":190,"count":1}],"isBlockCoverage":true},{"functionName":"construct","ranges":[{"startOffset":132,"endOffset":185,"count":0}],"isBlockCoverage":false}]},{"scriptId":"863","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/js-yaml/lib/type/null.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":808,"count":1}],"isBlockCoverage":true},{"functionName":"resolveYamlNull","ranges":[{"startOffset":47,"endOffset":263,"count":0}],"isBlockCoverage":false},{"functionName":"constructYamlNull","ranges":[{"startOffset":265,"endOffset":312,"count":0}],"isBlockCoverage":false},{"functionName":"isNull","ranges":[{"startOffset":314,"endOffset":367,"count":0}],"isBlockCoverage":false},{"functionName":"canonical","ranges":[{"startOffset":552,"endOffset":582,"count":0}],"isBlockCoverage":false},{"functionName":"lowercase","ranges":[{"startOffset":599,"endOffset":629,"count":0}],"isBlockCoverage":false},{"functionName":"uppercase","ranges":[{"startOffset":646,"endOffset":676,"count":0}],"isBlockCoverage":false},{"functionName":"camelcase","ranges":[{"startOffset":693,"endOffset":723,"count":0}],"isBlockCoverage":false},{"functionName":"empty","ranges":[{"startOffset":740,"endOffset":770,"count":0}],"isBlockCoverage":false}]},{"scriptId":"864","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/js-yaml/lib/type/bool.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":971,"count":1}],"isBlockCoverage":true},{"functionName":"resolveYamlBoolean","ranges":[{"startOffset":47,"endOffset":313,"count":0}],"isBlockCoverage":false},{"functionName":"constructYamlBoolean","ranges":[{"startOffset":315,"endOffset":436,"count":0}],"isBlockCoverage":false},{"functionName":"isBoolean","ranges":[{"startOffset":438,"endOffset":540,"count":0}],"isBlockCoverage":false},{"functionName":"lowercase","ranges":[{"startOffset":734,"endOffset":789,"count":0}],"isBlockCoverage":false},{"functionName":"uppercase","ranges":[{"startOffset":806,"endOffset":861,"count":0}],"isBlockCoverage":false},{"functionName":"camelcase","ranges":[{"startOffset":878,"endOffset":933,"count":0}],"isBlockCoverage":false}]},{"scriptId":"865","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/js-yaml/lib/type/int.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3691,"count":1}],"isBlockCoverage":true},{"functionName":"isHexCode","ranges":[{"startOffset":84,"endOffset":272,"count":0}],"isBlockCoverage":false},{"functionName":"isOctCode","ranges":[{"startOffset":274,"endOffset":352,"count":0}],"isBlockCoverage":false},{"functionName":"isDecCode","ranges":[{"startOffset":354,"endOffset":432,"count":0}],"isBlockCoverage":false},{"functionName":"resolveYamlInteger","ranges":[{"startOffset":434,"endOffset":2099,"count":0}],"isBlockCoverage":false},{"functionName":"constructYamlInteger","ranges":[{"startOffset":2101,"endOffset":2689,"count":0}],"isBlockCoverage":false},{"functionName":"isInteger","ranges":[{"startOffset":2691,"endOffset":2859,"count":0}],"isBlockCoverage":false},{"functionName":"binary","ranges":[{"startOffset":3054,"endOffset":3149,"count":0}],"isBlockCoverage":false},{"functionName":"octal","ranges":[{"startOffset":3168,"endOffset":3265,"count":0}],"isBlockCoverage":false},{"functionName":"decimal","ranges":[{"startOffset":3284,"endOffset":3327,"count":0}],"isBlockCoverage":false},{"functionName":"hexadecimal","ranges":[{"startOffset":3379,"endOffset":3505,"count":0}],"isBlockCoverage":false}]},{"scriptId":"866","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/js-yaml/lib/type/float.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2467,"count":1}],"isBlockCoverage":true},{"functionName":"resolveYamlFloat","ranges":[{"startOffset":388,"endOffset":684,"count":0}],"isBlockCoverage":false},{"functionName":"constructYamlFloat","ranges":[{"startOffset":686,"endOffset":1099,"count":0}],"isBlockCoverage":false},{"functionName":"representYamlFloat","ranges":[{"startOffset":1149,"endOffset":2076,"count":0}],"isBlockCoverage":false},{"functionName":"isFloat","ranges":[{"startOffset":2078,"endOffset":2243,"count":0}],"isBlockCoverage":false}]},{"scriptId":"867","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/js-yaml/lib/type/timestamp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2571,"count":1}],"isBlockCoverage":true},{"functionName":"resolveYamlTimestamp","ranges":[{"startOffset":819,"endOffset":1028,"count":0}],"isBlockCoverage":false},{"functionName":"constructYamlTimestamp","ranges":[{"startOffset":1030,"endOffset":2274,"count":0}],"isBlockCoverage":false},{"functionName":"representYamlTimestamp","ranges":[{"startOffset":2276,"endOffset":2362,"count":0}],"isBlockCoverage":false}]},{"scriptId":"868","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/js-yaml/lib/type/merge.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":230,"count":1}],"isBlockCoverage":true},{"functionName":"resolveYamlMerge","ranges":[{"startOffset":47,"endOffset":123,"count":0}],"isBlockCoverage":false}]},{"scriptId":"869","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/js-yaml/lib/type/binary.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2912,"count":1}],"isBlockCoverage":true},{"functionName":"resolveYamlBinary","ranges":[{"startOffset":213,"endOffset":676,"count":0}],"isBlockCoverage":false},{"functionName":"constructYamlBinary","ranges":[{"startOffset":678,"endOffset":1584,"count":0}],"isBlockCoverage":false},{"functionName":"representYamlBinary","ranges":[{"startOffset":1586,"endOffset":2611,"count":0}],"isBlockCoverage":false},{"functionName":"isBinary","ranges":[{"startOffset":2613,"endOffset":2712,"count":0}],"isBlockCoverage":false}]},{"scriptId":"870","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/js-yaml/lib/type/omap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1023,"count":1}],"isBlockCoverage":true},{"functionName":"resolveYamlOmap","ranges":[{"startOffset":152,"endOffset":810,"count":0}],"isBlockCoverage":false},{"functionName":"constructYamlOmap","ranges":[{"startOffset":812,"endOffset":884,"count":0}],"isBlockCoverage":false}]},{"scriptId":"871","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/js-yaml/lib/type/pairs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1084,"count":1}],"isBlockCoverage":true},{"functionName":"resolveYamlPairs","ranges":[{"startOffset":91,"endOffset":569,"count":0}],"isBlockCoverage":false},{"functionName":"constructYamlPairs","ranges":[{"startOffset":571,"endOffset":942,"count":0}],"isBlockCoverage":false}]},{"scriptId":"872","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/js-yaml/lib/type/set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":547,"count":1}],"isBlockCoverage":true},{"functionName":"resolveYamlSet","ranges":[{"startOffset":103,"endOffset":339,"count":0}],"isBlockCoverage":false},{"functionName":"constructYamlSet","ranges":[{"startOffset":341,"endOffset":412,"count":0}],"isBlockCoverage":false}]},{"scriptId":"873","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/js-yaml/lib/dumper.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31675,"count":1}],"isBlockCoverage":true},{"functionName":"compileStyleMap","ranges":[{"startOffset":2224,"endOffset":2822,"count":0}],"isBlockCoverage":false},{"functionName":"encodeHex","ranges":[{"startOffset":2824,"endOffset":3331,"count":0}],"isBlockCoverage":false},{"functionName":"State","ranges":[{"startOffset":3393,"endOffset":4550,"count":0}],"isBlockCoverage":false},{"functionName":"indentString","ranges":[{"startOffset":4627,"endOffset":5155,"count":0}],"isBlockCoverage":false},{"functionName":"generateNextLine","ranges":[{"startOffset":5157,"endOffset":5258,"count":0}],"isBlockCoverage":false},{"functionName":"testImplicitResolving","ranges":[{"startOffset":5260,"endOffset":5534,"count":0}],"isBlockCoverage":false},{"functionName":"isWhitespace","ranges":[{"startOffset":5572,"endOffset":5645,"count":0}],"isBlockCoverage":false},{"functionName":"isPrintable","ranges":[{"startOffset":5903,"endOffset":6151,"count":0}],"isBlockCoverage":false},{"functionName":"isNsCharOrWhitespace","ranges":[{"startOffset":6469,"endOffset":6630,"count":0}],"isBlockCoverage":false},{"functionName":"isPlainSafe","ranges":[{"startOffset":7197,"endOffset":8006,"count":0}],"isBlockCoverage":false},{"functionName":"isPlainSafeFirst","ranges":[{"startOffset":8085,"endOffset":9133,"count":0}],"isBlockCoverage":false},{"functionName":"isPlainSafeLast","ranges":[{"startOffset":9211,"endOffset":9371,"count":0}],"isBlockCoverage":false},{"functionName":"codePointAt","ranges":[{"startOffset":9440,"endOffset":9855,"count":0}],"isBlockCoverage":false},{"functionName":"needIndentIndicator","ranges":[{"startOffset":9920,"endOffset":10030,"count":0}],"isBlockCoverage":false},{"functionName":"chooseScalarStyle","ranges":[{"startOffset":10537,"endOffset":13338,"count":0}],"isBlockCoverage":false},{"functionName":"writeScalar","ranges":[{"startOffset":13759,"endOffset":15986,"count":0}],"isBlockCoverage":false},{"functionName":"blockHeader","ranges":[{"startOffset":16069,"endOffset":16504,"count":0}],"isBlockCoverage":false},{"functionName":"dropEndingNewline","ranges":[{"startOffset":16541,"endOffset":16655,"count":0}],"isBlockCoverage":false},{"functionName":"foldString","ranges":[{"startOffset":16815,"endOffset":17933,"count":0}],"isBlockCoverage":false},{"functionName":"foldLine","ranges":[{"startOffset":18150,"endOffset":19617,"count":0}],"isBlockCoverage":false},{"functionName":"escapeString","ranges":[{"startOffset":19654,"endOffset":20096,"count":0}],"isBlockCoverage":false},{"functionName":"writeFlowSequence","ranges":[{"startOffset":20098,"endOffset":20836,"count":0}],"isBlockCoverage":false},{"functionName":"writeBlockSequence","ranges":[{"startOffset":20838,"endOffset":21817,"count":0}],"isBlockCoverage":false},{"functionName":"writeFlowMapping","ranges":[{"startOffset":21819,"endOffset":23002,"count":0}],"isBlockCoverage":false},{"functionName":"writeBlockMapping","ranges":[{"startOffset":23004,"endOffset":25074,"count":0}],"isBlockCoverage":false},{"functionName":"detectType","ranges":[{"startOffset":25076,"endOffset":26340,"count":0}],"isBlockCoverage":false},{"functionName":"writeNode","ranges":[{"startOffset":26458,"endOffset":30103,"count":0}],"isBlockCoverage":false},{"functionName":"getDuplicateReferences","ranges":[{"startOffset":30105,"endOffset":30478,"count":0}],"isBlockCoverage":false},{"functionName":"inspectNode","ranges":[{"startOffset":30480,"endOffset":31291,"count":0}],"isBlockCoverage":false},{"functionName":"dump","ranges":[{"startOffset":31293,"endOffset":31645,"count":0}],"isBlockCoverage":false}]},{"scriptId":"874","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/text.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2184,"count":1}],"isBlockCoverage":true},{"functionName":"canParse","ranges":[{"startOffset":1232,"endOffset":1452,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1918,"endOffset":2180,"count":0}],"isBlockCoverage":false}]},{"scriptId":"875","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/binary.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1928,"count":1}],"isBlockCoverage":true},{"functionName":"canParse","ranges":[{"startOffset":1046,"endOffset":1219,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1703,"endOffset":1924,"count":0}],"isBlockCoverage":false}]},{"scriptId":"876","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@apidevtools/json-schema-ref-parser/lib/resolvers/file.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2025,"count":1}],"isBlockCoverage":true},{"functionName":"canRead","ranges":[{"startOffset":883,"endOffset":946,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":1336,"endOffset":2021,"count":0}],"isBlockCoverage":false}]},{"scriptId":"877","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@apidevtools/json-schema-ref-parser/lib/resolvers/http.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5185,"count":1}],"isBlockCoverage":true},{"functionName":"canRead","ranges":[{"startOffset":1654,"endOffset":1707,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":2096,"endOffset":2326,"count":0}],"isBlockCoverage":false},{"functionName":"download","ranges":[{"startOffset":2739,"endOffset":4043,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4291,"endOffset":5184,"count":0}],"isBlockCoverage":false}]},{"scriptId":"878","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@apidevtools/swagger-parser/lib/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1010,"count":1}],"isBlockCoverage":true},{"functionName":"ParserOptions","ranges":[{"startOffset":484,"endOffset":621,"count":1}],"isBlockCoverage":true}]},{"scriptId":"879","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/call-me-maybe/src/maybe.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":330,"count":1}],"isBlockCoverage":true},{"functionName":"maybe","ranges":[{"startOffset":64,"endOffset":329,"count":2},{"startOffset":105,"endOffset":327,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":131,"endOffset":205,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":164,"endOffset":196,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":207,"endOffset":269,"count":0}],"isBlockCoverage":false}]},{"scriptId":"880","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/call-me-maybe/src/next.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":325,"count":1}],"isBlockCoverage":true},{"functionName":"makeNext","ranges":[{"startOffset":14,"endOffset":295,"count":1},{"startOffset":147,"endOffset":293,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":241,"endOffset":289,"count":0}],"isBlockCoverage":false}]},{"scriptId":"881","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@apidevtools/json-schema-ref-parser/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11836,"count":1}],"isBlockCoverage":true},{"functionName":"$RefParser","ranges":[{"startOffset":1298,"endOffset":1575,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":2256,"endOffset":2449,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":3141,"endOffset":5507,"count":1},{"startOffset":3287,"endOffset":3438,"count":0},{"startOffset":4487,"endOffset":4592,"count":0},{"startOffset":4831,"endOffset":5170,"count":0},{"startOffset":5177,"endOffset":5505,"count":0}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":6219,"endOffset":6416,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":7138,"endOffset":7524,"count":0}],"isBlockCoverage":false},{"functionName":"bundle","ranges":[{"startOffset":8286,"endOffset":8481,"count":0}],"isBlockCoverage":false},{"functionName":"bundle","ranges":[{"startOffset":9253,"endOffset":9627,"count":0}],"isBlockCoverage":false},{"functionName":"dereference","ranges":[{"startOffset":10346,"endOffset":10551,"count":0}],"isBlockCoverage":false},{"functionName":"dereference","ranges":[{"startOffset":11280,"endOffset":11664,"count":0}],"isBlockCoverage":false},{"functionName":"finalize","ranges":[{"startOffset":11667,"endOffset":11835,"count":0}],"isBlockCoverage":false}]},{"scriptId":"882","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@apidevtools/json-schema-ref-parser/lib/refs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5363,"count":1}],"isBlockCoverage":true},{"functionName":"$Refs","ranges":[{"startOffset":228,"endOffset":646,"count":2}],"isBlockCoverage":true},{"functionName":"$Refs.paths","ranges":[{"startOffset":922,"endOffset":1093,"count":0}],"isBlockCoverage":false},{"functionName":"$Refs.values","ranges":[{"startOffset":1324,"endOffset":1569,"count":0}],"isBlockCoverage":false},{"functionName":"$Refs.exists","ranges":[{"startOffset":1976,"endOffset":2107,"count":0}],"isBlockCoverage":false},{"functionName":"$Refs.get","ranges":[{"startOffset":2380,"endOffset":2457,"count":0}],"isBlockCoverage":false},{"functionName":"$Refs.set","ranges":[{"startOffset":2785,"endOffset":3087,"count":0}],"isBlockCoverage":false},{"functionName":"$Refs._add","ranges":[{"startOffset":3274,"endOffset":3503,"count":1}],"isBlockCoverage":true},{"functionName":"$Refs._resolve","ranges":[{"startOffset":3825,"endOffset":4176,"count":0}],"isBlockCoverage":false},{"functionName":"$Refs._get$Ref","ranges":[{"startOffset":4414,"endOffset":4558,"count":0}],"isBlockCoverage":false},{"functionName":"getPaths","ranges":[{"startOffset":4834,"endOffset":5362,"count":0}],"isBlockCoverage":false}]},{"scriptId":"883","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@apidevtools/json-schema-ref-parser/lib/ref.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8545,"count":1}],"isBlockCoverage":true},{"functionName":"$Ref","ranges":[{"startOffset":335,"endOffset":1456,"count":1}],"isBlockCoverage":true},{"functionName":"$Ref.addError","ranges":[{"startOffset":1637,"endOffset":2309,"count":0}],"isBlockCoverage":false},{"functionName":"$Ref.exists","ranges":[{"startOffset":2592,"endOffset":2718,"count":0}],"isBlockCoverage":false},{"functionName":"$Ref.get","ranges":[{"startOffset":3035,"endOffset":3107,"count":0}],"isBlockCoverage":false},{"functionName":"$Ref.resolve","ranges":[{"startOffset":3548,"endOffset":4298,"count":0}],"isBlockCoverage":false},{"functionName":"$Ref.set","ranges":[{"startOffset":4630,"endOffset":4744,"count":0}],"isBlockCoverage":false},{"functionName":"$Ref.is$Ref","ranges":[{"startOffset":4896,"endOffset":5020,"count":0}],"isBlockCoverage":false},{"functionName":"$Ref.isExternal$Ref","ranges":[{"startOffset":5190,"endOffset":5264,"count":0}],"isBlockCoverage":false},{"functionName":"$Ref.isAllowed$Ref","ranges":[{"startOffset":5598,"endOffset":5988,"count":0}],"isBlockCoverage":false},{"functionName":"$Ref.isExtended$Ref","ranges":[{"startOffset":7022,"endOffset":7104,"count":0}],"isBlockCoverage":false},{"functionName":"$Ref.dereference","ranges":[{"startOffset":8010,"endOffset":8543,"count":0}],"isBlockCoverage":false}]},{"scriptId":"884","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@apidevtools/json-schema-ref-parser/lib/pointer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8622,"count":1}],"isBlockCoverage":true},{"functionName":"Pointer","ranges":[{"startOffset":560,"endOffset":1571,"count":0}],"isBlockCoverage":false},{"functionName":"Pointer.resolve","ranges":[{"startOffset":2135,"endOffset":3109,"count":0}],"isBlockCoverage":false},{"functionName":"Pointer.set","ranges":[{"startOffset":3457,"endOffset":4307,"count":0}],"isBlockCoverage":false},{"functionName":"Pointer.parse","ranges":[{"startOffset":4735,"endOffset":5392,"count":0}],"isBlockCoverage":false},{"functionName":"Pointer.join","ranges":[{"startOffset":5686,"endOffset":6138,"count":0}],"isBlockCoverage":false},{"functionName":"resolveIf$Ref","ranges":[{"startOffset":6580,"endOffset":7673,"count":0}],"isBlockCoverage":false},{"functionName":"setValue","ranges":[{"startOffset":8105,"endOffset":8515,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapOrThrow","ranges":[{"startOffset":8518,"endOffset":8621,"count":0}],"isBlockCoverage":false}]},{"scriptId":"885","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@apidevtools/json-schema-ref-parser/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5497,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":637,"endOffset":1497,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":1981,"endOffset":3050,"count":0}],"isBlockCoverage":false},{"functionName":"parseFile","ranges":[{"startOffset":3662,"endOffset":5144,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":5250,"endOffset":5496,"count":0}],"isBlockCoverage":false}]},{"scriptId":"886","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@apidevtools/json-schema-ref-parser/lib/util/plugins.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4853,"count":1}],"isBlockCoverage":true},{"functionName":"exports.all","ranges":[{"startOffset":275,"endOffset":490,"count":0}],"isBlockCoverage":false},{"functionName":"exports.filter","ranges":[{"startOffset":868,"endOffset":1003,"count":0}],"isBlockCoverage":false},{"functionName":"exports.sort","ranges":[{"startOffset":1178,"endOffset":1361,"count":0}],"isBlockCoverage":false},{"functionName":"exports.run","ranges":[{"startOffset":2156,"endOffset":3560,"count":0}],"isBlockCoverage":false},{"functionName":"getResult","ranges":[{"startOffset":4208,"endOffset":4852,"count":0}],"isBlockCoverage":false}]},{"scriptId":"887","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@apidevtools/json-schema-ref-parser/lib/resolve-external.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4278,"count":1}],"isBlockCoverage":true},{"functionName":"resolveExternal","ranges":[{"startOffset":823,"endOffset":1255,"count":0}],"isBlockCoverage":false},{"functionName":"crawl","ranges":[{"startOffset":1999,"endOffset":2769,"count":0}],"isBlockCoverage":false},{"functionName":"resolve$Ref","ranges":[{"startOffset":3265,"endOffset":4277,"count":0}],"isBlockCoverage":false}]},{"scriptId":"888","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10847,"count":1}],"isBlockCoverage":true},{"functionName":"bundle","ranges":[{"startOffset":489,"endOffset":846,"count":0}],"isBlockCoverage":false},{"functionName":"crawl","ranges":[{"startOffset":1481,"endOffset":3176,"count":0}],"isBlockCoverage":false},{"functionName":"inventory$Ref","ranges":[{"startOffset":3886,"endOffset":6106,"count":0}],"isBlockCoverage":false},{"functionName":"remap","ranges":[{"startOffset":7153,"endOffset":10441,"count":0}],"isBlockCoverage":false},{"functionName":"findInInventory","ranges":[{"startOffset":10459,"endOffset":10723,"count":0}],"isBlockCoverage":false},{"functionName":"removeFromInventory","ranges":[{"startOffset":10725,"endOffset":10846,"count":0}],"isBlockCoverage":false}]},{"scriptId":"889","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@apidevtools/json-schema-ref-parser/lib/dereference.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7394,"count":1}],"isBlockCoverage":true},{"functionName":"dereference","ranges":[{"startOffset":451,"endOffset":797,"count":0}],"isBlockCoverage":false},{"functionName":"crawl","ranges":[{"startOffset":1549,"endOffset":3849,"count":0}],"isBlockCoverage":false},{"functionName":"dereference$Ref","ranges":[{"startOffset":4580,"endOffset":6780,"count":0}],"isBlockCoverage":false},{"functionName":"foundCircularReference","ranges":[{"startOffset":7179,"endOffset":7393,"count":0}],"isBlockCoverage":false}]},{"scriptId":"890","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/yaml/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":35,"count":1}],"isBlockCoverage":true}]},{"scriptId":"891","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/yaml/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2659,"count":1}],"isBlockCoverage":true},{"functionName":"warn","ranges":[{"startOffset":325,"endOffset":849,"count":0}],"isBlockCoverage":false},{"functionName":"parseAllDocuments","ranges":[{"startOffset":851,"endOffset":1129,"count":0}],"isBlockCoverage":false},{"functionName":"parseDocument","ranges":[{"startOffset":1130,"endOffset":1492,"count":4},{"startOffset":1287,"endOffset":1475,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":1493,"endOffset":1841,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":1842,"endOffset":2346,"count":0}],"isBlockCoverage":false}]},{"scriptId":"892","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/yaml/dist/_rollupPluginBabelHelpers-eed30217.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16679,"count":1}],"isBlockCoverage":true},{"functionName":"findLineStarts","ranges":[{"startOffset":718,"endOffset":925,"count":0}],"isBlockCoverage":false},{"functionName":"getSrcInfo","ranges":[{"startOffset":927,"endOffset":1341,"count":0}],"isBlockCoverage":false},{"functionName":"getLinePos","ranges":[{"startOffset":1908,"endOffset":2508,"count":0}],"isBlockCoverage":false},{"functionName":"getLine","ranges":[{"startOffset":2918,"endOffset":3295,"count":0}],"isBlockCoverage":false},{"functionName":"getPrettyContext","ranges":[{"startOffset":3869,"endOffset":4785,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":4810,"endOffset":4870,"count":32}],"isBlockCoverage":true},{"functionName":"Range","ranges":[{"startOffset":4874,"endOffset":4956,"count":314},{"startOffset":4943,"endOffset":4951,"count":4}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":4960,"endOffset":5057,"count":62}],"isBlockCoverage":true},{"functionName":"setOrigRange","ranges":[{"startOffset":5435,"endOffset":5974,"count":0}],"isBlockCoverage":false},{"functionName":"addStringTerminator","ranges":[{"startOffset":6033,"endOffset":6250,"count":0}],"isBlockCoverage":false},{"functionName":"atDocumentBoundary","ranges":[{"startOffset":6276,"endOffset":6821,"count":148},{"startOffset":6358,"endOffset":6370,"count":4},{"startOffset":6370,"endOffset":6418,"count":144},{"startOffset":6418,"endOffset":6434,"count":132},{"startOffset":6436,"endOffset":6449,"count":119},{"startOffset":6449,"endOffset":6464,"count":25},{"startOffset":6464,"endOffset":6508,"count":8},{"startOffset":6508,"endOffset":6603,"count":17},{"startOffset":6603,"endOffset":6705,"count":0},{"startOffset":6707,"endOffset":6785,"count":0},{"startOffset":6786,"endOffset":6801,"count":0},{"startOffset":6802,"endOffset":6816,"count":0}],"isBlockCoverage":true},{"functionName":"endOfIdentifier","ranges":[{"startOffset":6832,"endOffset":7161,"count":0}],"isBlockCoverage":false},{"functionName":"endOfIndent","ranges":[{"startOffset":7172,"endOffset":7295,"count":124},{"startOffset":7249,"endOffset":7271,"count":448}],"isBlockCoverage":true},{"functionName":"endOfLine","ranges":[{"startOffset":7306,"endOffset":7434,"count":0}],"isBlockCoverage":false},{"functionName":"endOfWhiteSpace","ranges":[{"startOffset":7445,"endOffset":7587,"count":390},{"startOffset":7526,"endOffset":7539,"count":833},{"startOffset":7541,"endOffset":7563,"count":443}],"isBlockCoverage":true},{"functionName":"startOfLine","ranges":[{"startOffset":7598,"endOffset":7772,"count":32},{"startOffset":7676,"endOffset":7690,"count":1},{"startOffset":7690,"endOffset":7706,"count":31},{"startOffset":7706,"endOffset":7720,"count":526},{"startOffset":7722,"endOffset":7744,"count":499},{"startOffset":7744,"endOffset":7771,"count":31}],"isBlockCoverage":true},{"functionName":"endOfBlockIndent","ranges":[{"startOffset":8000,"endOffset":8321,"count":13},{"startOffset":8132,"endOffset":8159,"count":0},{"startOffset":8280,"endOffset":8293,"count":0}],"isBlockCoverage":true},{"functionName":"atBlank","ranges":[{"startOffset":8332,"endOffset":8472,"count":80},{"startOffset":8418,"endOffset":8432,"count":53},{"startOffset":8433,"endOffset":8446,"count":53},{"startOffset":8447,"endOffset":8467,"count":30},{"startOffset":8461,"endOffset":8467,"count":0}],"isBlockCoverage":true},{"functionName":"nextNodeIsIndented","ranges":[{"startOffset":8483,"endOffset":8668,"count":50},{"startOffset":8570,"endOffset":8583,"count":0},{"startOffset":8620,"endOffset":8663,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeOffset","ranges":[{"startOffset":8747,"endOffset":8925,"count":101},{"startOffset":8821,"endOffset":8829,"count":19},{"startOffset":8830,"endOffset":8920,"count":82},{"startOffset":8844,"endOffset":8871,"count":64},{"startOffset":8872,"endOffset":8884,"count":12},{"startOffset":8885,"endOffset":8920,"count":70}],"isBlockCoverage":true},{"functionName":"foldNewline","ranges":[{"startOffset":9043,"endOffset":9761,"count":0}],"isBlockCoverage":false},{"functionName":"Node","ranges":[{"startOffset":9765,"endOffset":10057,"count":159},{"startOffset":10002,"endOffset":10007,"count":36}],"isBlockCoverage":true},{"functionName":"getPropValue","ranges":[{"startOffset":10061,"endOffset":10317,"count":0}],"isBlockCoverage":false},{"functionName":"get anchor","ranges":[{"startOffset":10321,"endOffset":10516,"count":0}],"isBlockCoverage":false},{"functionName":"get comment","ranges":[{"startOffset":10520,"endOffset":10798,"count":0}],"isBlockCoverage":false},{"functionName":"commentHasRequiredWhitespace","ranges":[{"startOffset":10802,"endOffset":11094,"count":0}],"isBlockCoverage":false},{"functionName":"get hasComment","ranges":[{"startOffset":11098,"endOffset":11348,"count":62},{"startOffset":11242,"endOffset":11319,"count":0}],"isBlockCoverage":true},{"functionName":"get hasProps","ranges":[{"startOffset":11352,"endOffset":11600,"count":1},{"startOffset":11494,"endOffset":11571,"count":0}],"isBlockCoverage":true},{"functionName":"get includesTrailingLines","ranges":[{"startOffset":11604,"endOffset":11655,"count":40}],"isBlockCoverage":true},{"functionName":"get jsonLike","ranges":[{"startOffset":11659,"endOffset":11827,"count":0}],"isBlockCoverage":false},{"functionName":"get rangeAsLinePos","ranges":[{"startOffset":11831,"endOffset":12120,"count":0}],"isBlockCoverage":false},{"functionName":"get rawValue","ranges":[{"startOffset":12124,"endOffset":12307,"count":0}],"isBlockCoverage":false},{"functionName":"get tag","ranges":[{"startOffset":12311,"endOffset":12810,"count":148},{"startOffset":12371,"endOffset":12788,"count":0}],"isBlockCoverage":true},{"functionName":"get valueRangeContainsNewline","ranges":[{"startOffset":12814,"endOffset":13118,"count":49},{"startOffset":12891,"endOffset":12904,"count":0},{"startOffset":13048,"endOffset":13095,"count":395},{"startOffset":13077,"endOffset":13089,"count":0}],"isBlockCoverage":true},{"functionName":"parseComment","ranges":[{"startOffset":13122,"endOffset":13411,"count":73},{"startOffset":13226,"endOffset":13388,"count":0}],"isBlockCoverage":true},{"functionName":"setOrigRanges","ranges":[{"startOffset":13789,"endOffset":14035,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":14039,"endOffset":14290,"count":0}],"isBlockCoverage":false},{"functionName":"YAMLError","ranges":[{"startOffset":14329,"endOffset":14559,"count":0}],"isBlockCoverage":false},{"functionName":"makePretty","ranges":[{"startOffset":14563,"endOffset":15486,"count":0}],"isBlockCoverage":false},{"functionName":"YAMLReferenceError","ranges":[{"startOffset":15537,"endOffset":15621,"count":0}],"isBlockCoverage":false},{"functionName":"YAMLSemanticError","ranges":[{"startOffset":15671,"endOffset":15754,"count":0}],"isBlockCoverage":false},{"functionName":"YAMLSyntaxError","ranges":[{"startOffset":15802,"endOffset":15883,"count":0}],"isBlockCoverage":false},{"functionName":"YAMLWarning","ranges":[{"startOffset":15927,"endOffset":16004,"count":0}],"isBlockCoverage":false},{"functionName":"_defineProperty","ranges":[{"startOffset":16009,"endOffset":16263,"count":204},{"startOffset":16071,"endOffset":16213,"count":0}],"isBlockCoverage":true}]},{"scriptId":"893","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/yaml/dist/parse-3997f544.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":53502,"count":1}],"isBlockCoverage":true},{"functionName":"BlankLine","ranges":[{"startOffset":159,"endOffset":232,"count":0}],"isBlockCoverage":false},{"functionName":"get includesTrailingLines","ranges":[{"startOffset":266,"endOffset":418,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":632,"endOffset":781,"count":0}],"isBlockCoverage":false},{"functionName":"CollectionItem","ranges":[{"startOffset":850,"endOffset":926,"count":50}],"isBlockCoverage":true},{"functionName":"get includesTrailingLines","ranges":[{"startOffset":930,"endOffset":1022,"count":49}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":1187,"endOffset":3805,"count":50},{"startOffset":1378,"endOffset":1434,"count":49},{"startOffset":1436,"endOffset":1570,"count":0},{"startOffset":1602,"endOffset":1621,"count":1},{"startOffset":1622,"endOffset":1638,"count":49},{"startOffset":1875,"endOffset":2543,"count":27},{"startOffset":1899,"endOffset":2082,"count":0},{"startOffset":2269,"endOffset":2293,"count":0},{"startOffset":2295,"endOffset":2426,"count":0},{"startOffset":2855,"endOffset":2931,"count":0},{"startOffset":2975,"endOffset":3306,"count":0},{"startOffset":3335,"endOffset":3384,"count":0},{"startOffset":3426,"endOffset":3647,"count":0},{"startOffset":3702,"endOffset":3710,"count":0}],"isBlockCoverage":true},{"functionName":"setOrigRanges","ranges":[{"startOffset":3809,"endOffset":3955,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":3959,"endOffset":4313,"count":0}],"isBlockCoverage":false},{"functionName":"Comment","ranges":[{"startOffset":4375,"endOffset":4445,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":4665,"endOffset":4853,"count":0}],"isBlockCoverage":false},{"functionName":"grabCollectionEndComments","ranges":[{"startOffset":4858,"endOffset":5865,"count":103},{"startOffset":4964,"endOffset":4983,"count":50},{"startOffset":5023,"endOffset":5035,"count":71},{"startOffset":5035,"endOffset":5524,"count":32},{"startOffset":5215,"endOffset":5438,"count":0},{"startOffset":5502,"endOffset":5509,"count":0},{"startOffset":5524,"endOffset":5555,"count":32},{"startOffset":5555,"endOffset":5864,"count":0}],"isBlockCoverage":true},{"functionName":"nextContentHasIndent","ranges":[{"startOffset":5933,"endOffset":6358,"count":0}],"isBlockCoverage":false},{"functionName":"Collection","ranges":[{"startOffset":6362,"endOffset":7126,"count":32},{"startOffset":6456,"endOffset":6492,"count":1},{"startOffset":6493,"endOffset":6529,"count":31},{"startOffset":6591,"endOffset":6982,"count":0},{"startOffset":7079,"endOffset":7122,"count":0}],"isBlockCoverage":true},{"functionName":"get includesTrailingLines","ranges":[{"startOffset":7130,"endOffset":7197,"count":27}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":7362,"endOffset":11838,"count":32},{"startOffset":8284,"endOffset":11814,"count":80},{"startOffset":8326,"endOffset":9740,"count":30},{"startOffset":8352,"endOffset":8366,"count":0},{"startOffset":8367,"endOffset":8396,"count":0},{"startOffset":8398,"endOffset":8771,"count":0},{"startOffset":8793,"endOffset":9272,"count":0},{"startOffset":9449,"endOffset":9677,"count":0},{"startOffset":9757,"endOffset":9781,"count":0},{"startOffset":9823,"endOffset":9853,"count":62},{"startOffset":9839,"endOffset":9852,"count":49},{"startOffset":9855,"endOffset":10178,"count":13},{"startOffset":9933,"endOffset":9952,"count":12},{"startOffset":9979,"endOffset":10170,"count":0},{"startOffset":10178,"endOffset":10250,"count":67},{"startOffset":10250,"endOffset":10365,"count":0},{"startOffset":10365,"endOffset":10777,"count":67},{"startOffset":10386,"endOffset":10400,"count":0},{"startOffset":10402,"endOffset":10777,"count":0},{"startOffset":10777,"endOffset":10950,"count":67},{"startOffset":10950,"endOffset":10964,"count":0},{"startOffset":10964,"endOffset":11468,"count":67},{"startOffset":11468,"endOffset":11699,"count":48},{"startOffset":11574,"endOffset":11591,"count":4},{"startOffset":11620,"endOffset":11691,"count":1},{"startOffset":11699,"endOffset":11765,"count":67},{"startOffset":11765,"endOffset":11808,"count":0}],"isBlockCoverage":true},{"functionName":"setOrigRanges","ranges":[{"startOffset":11842,"endOffset":12026,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":12030,"endOffset":12599,"count":0}],"isBlockCoverage":false},{"functionName":"Directive","ranges":[{"startOffset":12663,"endOffset":12757,"count":0}],"isBlockCoverage":false},{"functionName":"get parameters","ranges":[{"startOffset":12761,"endOffset":12864,"count":0}],"isBlockCoverage":false},{"functionName":"parseName","ranges":[{"startOffset":12868,"endOffset":13129,"count":0}],"isBlockCoverage":false},{"functionName":"parseParameters","ranges":[{"startOffset":13133,"endOffset":13417,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":13421,"endOffset":13691,"count":0}],"isBlockCoverage":false},{"functionName":"startCommentOrEndBlankLine","ranges":[{"startOffset":13761,"endOffset":13967,"count":8},{"startOffset":13946,"endOffset":13954,"count":0}],"isBlockCoverage":true},{"functionName":"Document","ranges":[{"startOffset":13971,"endOffset":14168,"count":4}],"isBlockCoverage":true},{"functionName":"parseDirectives","ranges":[{"startOffset":14172,"endOffset":16319,"count":4},{"startOffset":14579,"endOffset":14953,"count":0},{"startOffset":14963,"endOffset":15211,"count":0},{"startOffset":15221,"endOffset":15539,"count":0},{"startOffset":15587,"endOffset":15721,"count":0},{"startOffset":15759,"endOffset":15851,"count":0},{"startOffset":15891,"endOffset":16318,"count":0}],"isBlockCoverage":true},{"functionName":"parseContents","ranges":[{"startOffset":16323,"endOffset":19145,"count":4},{"startOffset":16518,"endOffset":16533,"count":0},{"startOffset":16883,"endOffset":17285,"count":0},{"startOffset":17295,"endOffset":17541,"count":0},{"startOffset":17942,"endOffset":17976,"count":0},{"startOffset":18188,"endOffset":18234,"count":0},{"startOffset":18384,"endOffset":19121,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":19310,"endOffset":19616,"count":4},{"startOffset":19476,"endOffset":19487,"count":0}],"isBlockCoverage":true},{"functionName":"setOrigRanges","ranges":[{"startOffset":19620,"endOffset":20084,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":20088,"endOffset":20498,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":20768,"endOffset":21154,"count":0}],"isBlockCoverage":false},{"functionName":"BlockValue","ranges":[{"startOffset":21287,"endOffset":21426,"count":0}],"isBlockCoverage":false},{"functionName":"get includesTrailingLines","ranges":[{"startOffset":21430,"endOffset":21504,"count":0}],"isBlockCoverage":false},{"functionName":"get strValue","ranges":[{"startOffset":21508,"endOffset":23522,"count":0}],"isBlockCoverage":false},{"functionName":"parseBlockHeader","ranges":[{"startOffset":23526,"endOffset":24283,"count":0}],"isBlockCoverage":false},{"functionName":"parseBlockValue","ranges":[{"startOffset":24287,"endOffset":26270,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":26752,"endOffset":27069,"count":0}],"isBlockCoverage":false},{"functionName":"setOrigRanges","ranges":[{"startOffset":27073,"endOffset":27222,"count":0}],"isBlockCoverage":false},{"functionName":"FlowCollection","ranges":[{"startOffset":27291,"endOffset":27368,"count":3}],"isBlockCoverage":true},{"functionName":"prevNodeIsJsonLike","ranges":[{"startOffset":27372,"endOffset":27589,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":27754,"endOffset":30976,"count":3},{"startOffset":28139,"endOffset":28154,"count":5},{"startOffset":28155,"endOffset":28170,"count":2},{"startOffset":28172,"endOffset":30665,"count":2},{"startOffset":28204,"endOffset":29060,"count":0},{"startOffset":29070,"endOffset":29232,"count":0},{"startOffset":29242,"endOffset":29452,"count":0},{"startOffset":29462,"endOffset":29471,"count":0},{"startOffset":29480,"endOffset":29928,"count":0},{"startOffset":30242,"endOffset":30410,"count":0}],"isBlockCoverage":true},{"functionName":"setOrigRanges","ranges":[{"startOffset":30980,"endOffset":31506,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":31510,"endOffset":32395,"count":0}],"isBlockCoverage":false},{"functionName":"endOfLine","ranges":[{"startOffset":32467,"endOffset":32957,"count":62},{"startOffset":32563,"endOffset":32577,"count":675},{"startOffset":32579,"endOffset":32933,"count":662},{"startOffset":32598,"endOffset":32669,"count":12},{"startOffset":32627,"endOffset":32640,"count":10},{"startOffset":32641,"endOffset":32654,"count":10},{"startOffset":32655,"endOffset":32668,"count":10},{"startOffset":32671,"endOffset":32677,"count":2},{"startOffset":32677,"endOffset":32735,"count":660},{"startOffset":32735,"endOffset":32821,"count":44},{"startOffset":32762,"endOffset":32778,"count":22},{"startOffset":32779,"endOffset":32794,"count":22},{"startOffset":32795,"endOffset":32820,"count":0},{"startOffset":32823,"endOffset":32829,"count":44},{"startOffset":32829,"endOffset":32852,"count":616},{"startOffset":32852,"endOffset":32866,"count":594},{"startOffset":32868,"endOffset":32883,"count":22},{"startOffset":32885,"endOffset":32891,"count":0},{"startOffset":32891,"endOffset":32933,"count":616}],"isBlockCoverage":true},{"functionName":"get strValue","ranges":[{"startOffset":32961,"endOffset":34558,"count":62},{"startOffset":33021,"endOffset":33033,"count":0},{"startOffset":33234,"endOffset":33254,"count":0},{"startOffset":33313,"endOffset":33911,"count":616},{"startOffset":33364,"endOffset":33531,"count":0},{"startOffset":33552,"endOffset":33566,"count":594},{"startOffset":33568,"endOffset":33871,"count":22},{"startOffset":33724,"endOffset":33782,"count":0},{"startOffset":33830,"endOffset":33857,"count":0},{"startOffset":33871,"endOffset":33905,"count":594},{"startOffset":33967,"endOffset":34223,"count":0},{"startOffset":34231,"endOffset":34240,"count":0},{"startOffset":34247,"endOffset":34512,"count":0}],"isBlockCoverage":true},{"functionName":"parseBlockValue","ranges":[{"startOffset":34562,"endOffset":35298,"count":62},{"startOffset":34772,"endOffset":35170,"count":13},{"startOffset":34852,"endOffset":34858,"count":0},{"startOffset":34974,"endOffset":34993,"count":0},{"startOffset":35001,"endOffset":35164,"count":0},{"startOffset":35207,"endOffset":35237,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":35807,"endOffset":36392,"count":62},{"startOffset":36286,"endOffset":36314,"count":0}],"isBlockCoverage":true},{"functionName":"endOfQuote","ranges":[{"startOffset":36465,"endOffset":36643,"count":0}],"isBlockCoverage":false},{"functionName":"get strValue","ranges":[{"startOffset":36728,"endOffset":40686,"count":0}],"isBlockCoverage":false},{"functionName":"parseCharCode","ranges":[{"startOffset":40690,"endOffset":41188,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":41417,"endOffset":41775,"count":0}],"isBlockCoverage":false},{"functionName":"endOfQuote","ranges":[{"startOffset":41848,"endOffset":42104,"count":8},{"startOffset":41916,"endOffset":42076,"count":98},{"startOffset":41940,"endOffset":42024,"count":8},{"startOffset":41985,"endOffset":42024,"count":0},{"startOffset":42024,"endOffset":42070,"count":90}],"isBlockCoverage":true},{"functionName":"get strValue","ranges":[{"startOffset":42189,"endOffset":43850,"count":8},{"startOffset":42249,"endOffset":42261,"count":0},{"startOffset":42433,"endOffset":42524,"count":0},{"startOffset":42590,"endOffset":43775,"count":90},{"startOffset":42641,"endOffset":43197,"count":0},{"startOffset":43219,"endOffset":43408,"count":0},{"startOffset":43445,"endOffset":43735,"count":0},{"startOffset":43806,"endOffset":43839,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":44079,"endOffset":44437,"count":8}],"isBlockCoverage":true},{"functionName":"createNewNode","ranges":[{"startOffset":44442,"endOffset":45510,"count":123},{"startOffset":44502,"endOffset":44581,"count":0},{"startOffset":44587,"endOffset":44636,"count":0},{"startOffset":44641,"endOffset":44733,"count":0},{"startOffset":44739,"endOffset":44784,"count":0},{"startOffset":44789,"endOffset":44880,"count":3},{"startOffset":44886,"endOffset":44930,"count":0},{"startOffset":44935,"endOffset":44981,"count":49},{"startOffset":44986,"endOffset":45077,"count":50},{"startOffset":45083,"endOffset":45127,"count":0},{"startOffset":45132,"endOffset":45216,"count":62},{"startOffset":45222,"endOffset":45314,"count":0},{"startOffset":45320,"endOffset":45412,"count":8},{"startOffset":45450,"endOffset":45477,"count":0}],"isBlockCoverage":true},{"functionName":"parseType","ranges":[{"startOffset":45976,"endOffset":47199,"count":123},{"startOffset":46042,"endOffset":46104,"count":0},{"startOffset":46112,"endOffset":46181,"count":0},{"startOffset":46189,"endOffset":46259,"count":0},{"startOffset":46267,"endOffset":46332,"count":0},{"startOffset":46340,"endOffset":46405,"count":3},{"startOffset":46413,"endOffset":46591,"count":0},{"startOffset":46599,"endOffset":46779,"count":49},{"startOffset":46740,"endOffset":46778,"count":0},{"startOffset":46787,"endOffset":46966,"count":1},{"startOffset":46927,"endOffset":46965,"count":0},{"startOffset":46974,"endOffset":47043,"count":0},{"startOffset":47051,"endOffset":47120,"count":8},{"startOffset":47128,"endOffset":47189,"count":62}],"isBlockCoverage":true},{"functionName":"ParseContext","ranges":[{"startOffset":47203,"endOffset":49305,"count":159},{"startOffset":48862,"endOffset":48875,"count":123},{"startOffset":48876,"endOffset":48903,"count":36},{"startOffset":48895,"endOffset":48903,"count":4},{"startOffset":48950,"endOffset":48964,"count":123},{"startOffset":48965,"endOffset":48993,"count":36},{"startOffset":49028,"endOffset":49036,"count":6},{"startOffset":49037,"endOffset":49059,"count":153},{"startOffset":49094,"endOffset":49102,"count":123},{"startOffset":49103,"endOffset":49116,"count":36},{"startOffset":49157,"endOffset":49168,"count":123},{"startOffset":49169,"endOffset":49185,"count":36},{"startOffset":49220,"endOffset":49228,"count":123},{"startOffset":49229,"endOffset":49248,"count":36},{"startOffset":49243,"endOffset":49248,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47390,"endOffset":48815,"count":123},{"startOffset":47490,"endOffset":47502,"count":0},{"startOffset":47886,"endOffset":48213,"count":0},{"startOffset":48261,"endOffset":48789,"count":32},{"startOffset":48311,"endOffset":48377,"count":0},{"startOffset":48379,"endOffset":48555,"count":0},{"startOffset":48789,"endOffset":48814,"count":91}],"isBlockCoverage":true},{"functionName":"nodeStartsCollection","ranges":[{"startOffset":49309,"endOffset":49748,"count":123},{"startOffset":49429,"endOffset":49438,"count":56},{"startOffset":49440,"endOffset":49453,"count":69},{"startOffset":49453,"endOffset":49494,"count":54},{"startOffset":49494,"endOffset":49506,"count":1},{"startOffset":49506,"endOffset":49596,"count":53},{"startOffset":49596,"endOffset":49623,"count":35},{"startOffset":49625,"endOffset":49638,"count":18},{"startOffset":49638,"endOffset":49747,"count":35}],"isBlockCoverage":true},{"functionName":"parseProps","ranges":[{"startOffset":49871,"endOffset":52319,"count":123},{"startOffset":50038,"endOffset":50095,"count":50},{"startOffset":50096,"endOffset":50157,"count":73},{"startOffset":50352,"endOffset":52022,"count":0},{"startOffset":52091,"endOffset":52104,"count":0},{"startOffset":52105,"endOffset":52169,"count":0},{"startOffset":52171,"endOffset":52183,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":52577,"endOffset":53415,"count":4},{"startOffset":52649,"endOffset":52779,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":52683,"endOffset":52773,"count":0}],"isBlockCoverage":false},{"functionName":"documents.setOrigRanges","ranges":[{"startOffset":53048,"endOffset":53336,"count":0}],"isBlockCoverage":false},{"functionName":"documents.toString","ranges":[{"startOffset":53362,"endOffset":53391,"count":0}],"isBlockCoverage":false}]},{"scriptId":"894","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/yaml/dist/stringifyNumber-dea1120c.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":37030,"count":1}],"isBlockCoverage":true},{"functionName":"addCommentBefore","ranges":[{"startOffset":100,"endOffset":274,"count":0}],"isBlockCoverage":false},{"functionName":"addComment","ranges":[{"startOffset":275,"endOffset":457,"count":0}],"isBlockCoverage":false},{"functionName":"toJS","ranges":[{"startOffset":859,"endOffset":1396,"count":175},{"startOffset":920,"endOffset":972,"count":0},{"startOffset":1025,"endOffset":1300,"count":105},{"startOffset":1065,"endOffset":1090,"count":0},{"startOffset":1108,"endOffset":1189,"count":0},{"startOffset":1245,"endOffset":1260,"count":0},{"startOffset":1262,"endOffset":1280,"count":0},{"startOffset":1300,"endOffset":1325,"count":70},{"startOffset":1327,"endOffset":1355,"count":70},{"startOffset":1357,"endOffset":1378,"count":0},{"startOffset":1378,"endOffset":1395,"count":70}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":937,"endOffset":970,"count":0}],"isBlockCoverage":false},{"functionName":"ctx.onCreate","ranges":[{"startOffset":1123,"endOffset":1188,"count":0}],"isBlockCoverage":false},{"functionName":"isScalarValue","ranges":[{"startOffset":1420,"endOffset":1495,"count":0}],"isBlockCoverage":false},{"functionName":"Scalar","ranges":[{"startOffset":1527,"endOffset":1588,"count":70}],"isBlockCoverage":true},{"functionName":"toJSON","ranges":[{"startOffset":1592,"endOffset":1684,"count":70},{"startOffset":1638,"endOffset":1650,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":1688,"endOffset":1735,"count":0}],"isBlockCoverage":false},{"functionName":"findTagObject","ranges":[{"startOffset":1740,"endOffset":2076,"count":0}],"isBlockCoverage":false},{"functionName":"createNode","ranges":[{"startOffset":2078,"endOffset":3407,"count":0}],"isBlockCoverage":false},{"functionName":"collectionFromPath","ranges":[{"startOffset":3409,"endOffset":4028,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyPath","ranges":[{"startOffset":4112,"endOffset":4199,"count":0}],"isBlockCoverage":false},{"functionName":"Collection","ranges":[{"startOffset":4235,"endOffset":4367,"count":35}],"isBlockCoverage":true},{"functionName":"addIn","ranges":[{"startOffset":4371,"endOffset":4777,"count":0}],"isBlockCoverage":false},{"functionName":"deleteIn","ranges":[{"startOffset":4781,"endOffset":5049,"count":0}],"isBlockCoverage":false},{"functionName":"getIn","ranges":[{"startOffset":5053,"endOffset":5305,"count":0}],"isBlockCoverage":false},{"functionName":"hasAllNullValues","ranges":[{"startOffset":5309,"endOffset":5572,"count":0}],"isBlockCoverage":false},{"functionName":"hasIn","ranges":[{"startOffset":5576,"endOffset":5756,"count":0}],"isBlockCoverage":false},{"functionName":"setIn","ranges":[{"startOffset":5760,"endOffset":6161,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":6226,"endOffset":6257,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":6261,"endOffset":8995,"count":0}],"isBlockCoverage":false},{"functionName":"asItemIndex","ranges":[{"startOffset":9093,"endOffset":9289,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":9328,"endOffset":9372,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":9376,"endOffset":9544,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9548,"endOffset":9755,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":9759,"endOffset":9870,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9874,"endOffset":10157,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":10161,"endOffset":10357,"count":4},{"startOffset":10227,"endOffset":10245,"count":0},{"startOffset":10297,"endOffset":10336,"count":3}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":10361,"endOffset":10708,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyKey","ranges":[{"startOffset":10734,"endOffset":11124,"count":49},{"startOffset":10779,"endOffset":10789,"count":0},{"startOffset":10844,"endOffset":10877,"count":0},{"startOffset":10878,"endOffset":10888,"count":0},{"startOffset":10890,"endOffset":11123,"count":0}],"isBlockCoverage":true},{"functionName":"createPair","ranges":[{"startOffset":11127,"endOffset":11274,"count":0}],"isBlockCoverage":false},{"functionName":"Pair","ranges":[{"startOffset":11303,"endOffset":11428,"count":49}],"isBlockCoverage":true},{"functionName":"get commentBefore","ranges":[{"startOffset":11432,"endOffset":11531,"count":0}],"isBlockCoverage":false},{"functionName":"set commentBefore","ranges":[{"startOffset":11535,"endOffset":11835,"count":0}],"isBlockCoverage":false},{"functionName":"addToJSMap","ranges":[{"startOffset":11839,"endOffset":12415,"count":49},{"startOffset":11932,"endOffset":12014,"count":0},{"startOffset":12044,"endOffset":12071,"count":0},{"startOffset":12219,"endOffset":12360,"count":0}],"isBlockCoverage":true},{"functionName":"toJSON","ranges":[{"startOffset":12419,"endOffset":12533,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":12537,"endOffset":15998,"count":0}],"isBlockCoverage":false},{"functionName":"getAliasCount","ranges":[{"startOffset":16131,"endOffset":16660,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":16699,"endOffset":17209,"count":0}],"isBlockCoverage":false},{"functionName":"Alias","ranges":[{"startOffset":17213,"endOffset":17331,"count":0}],"isBlockCoverage":false},{"functionName":"set tag","ranges":[{"startOffset":17335,"endOffset":17404,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":17408,"endOffset":18347,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":18445,"endOffset":18503,"count":0}],"isBlockCoverage":false},{"functionName":"findPair","ranges":[{"startOffset":18576,"endOffset":18856,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":18894,"endOffset":19663,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":19667,"endOffset":19842,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19846,"endOffset":20017,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":20021,"endOffset":20075,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":20079,"endOffset":20142,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":20349,"endOffset":20577,"count":31},{"startOffset":20393,"endOffset":20405,"count":0},{"startOffset":20428,"endOffset":20439,"count":0},{"startOffset":20475,"endOffset":20493,"count":0},{"startOffset":20530,"endOffset":20556,"count":49}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":20581,"endOffset":21047,"count":0}],"isBlockCoverage":false},{"functionName":"resolveScalar","ranges":[{"startOffset":21600,"endOffset":21940,"count":62},{"startOffset":21698,"endOffset":21889,"count":676},{"startOffset":21713,"endOffset":21730,"count":490},{"startOffset":21732,"endOffset":21885,"count":1},{"startOffset":21841,"endOffset":21861,"count":0},{"startOffset":21889,"endOffset":21939,"count":61}],"isBlockCoverage":true},{"functionName":"consumeMoreIndentedLines","ranges":[{"startOffset":22158,"endOffset":22344,"count":0}],"isBlockCoverage":false},{"functionName":"foldFlowLines","ranges":[{"startOffset":23289,"endOffset":25977,"count":0}],"isBlockCoverage":false},{"functionName":"getFoldOptions","ranges":[{"startOffset":26002,"endOffset":26112,"count":0}],"isBlockCoverage":false},{"functionName":"containsDocumentMarker","ranges":[{"startOffset":26271,"endOffset":26306,"count":0}],"isBlockCoverage":false},{"functionName":"lineLengthOverLimit","ranges":[{"startOffset":26309,"endOffset":26633,"count":0}],"isBlockCoverage":false},{"functionName":"doubleQuotedString","ranges":[{"startOffset":26635,"endOffset":29018,"count":0}],"isBlockCoverage":false},{"functionName":"singleQuotedString","ranges":[{"startOffset":29020,"endOffset":29587,"count":0}],"isBlockCoverage":false},{"functionName":"blockString","ranges":[{"startOffset":29589,"endOffset":31819,"count":0}],"isBlockCoverage":false},{"functionName":"plainString","ranges":[{"startOffset":31821,"endOffset":34223,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyString","ranges":[{"startOffset":34225,"endOffset":35772,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyNumber","ranges":[{"startOffset":35774,"endOffset":36318,"count":0}],"isBlockCoverage":false}]},{"scriptId":"895","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/yaml/dist/Schema-807430ba.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26668,"count":1}],"isBlockCoverage":true},{"functionName":"Merge","ranges":[{"startOffset":233,"endOffset":732,"count":0}],"isBlockCoverage":false},{"functionName":"addToJSMap","ranges":[{"startOffset":1265,"endOffset":1975,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1979,"endOffset":2223,"count":0}],"isBlockCoverage":false},{"functionName":"createMap","ranges":[{"startOffset":2228,"endOffset":2974,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":3113,"endOffset":3123,"count":31}],"isBlockCoverage":true},{"functionName":"createSeq","ranges":[{"startOffset":3128,"endOffset":3577,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":3716,"endOffset":3726,"count":4}],"isBlockCoverage":true},{"functionName":"identify","ranges":[{"startOffset":3760,"endOffset":3794,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":3856,"endOffset":3866,"count":8}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":3871,"endOffset":4064,"count":0}],"isBlockCoverage":false},{"functionName":"intIdentify","ranges":[{"startOffset":4188,"endOffset":4249,"count":0}],"isBlockCoverage":false},{"functionName":"intResolve","ranges":[{"startOffset":4271,"endOffset":4385,"count":0}],"isBlockCoverage":false},{"functionName":"intStringify","ranges":[{"startOffset":4388,"endOffset":4593,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":4625,"endOffset":4647,"count":0}],"isBlockCoverage":false},{"functionName":"createNode","ranges":[{"startOffset":4663,"endOffset":4744,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":4840,"endOffset":4946,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":5001,"endOffset":5118,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":5152,"endOffset":5187,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":5295,"endOffset":5334,"count":1},{"startOffset":5317,"endOffset":5334,"count":0}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":5389,"endOffset":5492,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":5525,"endOffset":5566,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":5667,"endOffset":5695,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":5749,"endOffset":5784,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":5915,"endOffset":5944,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":6062,"endOffset":6103,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":6210,"endOffset":6239,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":6293,"endOffset":6329,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":6362,"endOffset":6396,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":6512,"endOffset":6633,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":6712,"endOffset":6746,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":6893,"endOffset":6915,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":6930,"endOffset":6980,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":7015,"endOffset":7049,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":7151,"endOffset":7380,"count":0}],"isBlockCoverage":false},{"functionName":"intIdentify$1","ranges":[{"startOffset":7575,"endOffset":7636,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyJSON","ranges":[{"startOffset":7661,"endOffset":7699,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":7740,"endOffset":7774,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":7836,"endOffset":7846,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":7892,"endOffset":7914,"count":0}],"isBlockCoverage":false},{"functionName":"createNode","ranges":[{"startOffset":7930,"endOffset":8011,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":8092,"endOffset":8102,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":8148,"endOffset":8183,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":8270,"endOffset":8291,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":8445,"endOffset":8521,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":8536,"endOffset":8620,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":8638,"endOffset":8672,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":8802,"endOffset":8824,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":8891,"endOffset":8997,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":9065,"endOffset":9101,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":9493,"endOffset":10036,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":10094,"endOffset":11295,"count":0}],"isBlockCoverage":false},{"functionName":"parsePairs","ranges":[{"startOffset":11300,"endOffset":12187,"count":0}],"isBlockCoverage":false},{"functionName":"createPairs","ranges":[{"startOffset":12188,"endOffset":13047,"count":0}],"isBlockCoverage":false},{"functionName":"YAMLOMap","ranges":[{"startOffset":13220,"endOffset":13843,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":13847,"endOffset":14382,"count":0}],"isBlockCoverage":false},{"functionName":"parseOMap","ranges":[{"startOffset":14474,"endOffset":14906,"count":0}],"isBlockCoverage":false},{"functionName":"createOMap","ranges":[{"startOffset":14908,"endOffset":15080,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":15109,"endOffset":15138,"count":0}],"isBlockCoverage":false},{"functionName":"YAMLSet","ranges":[{"startOffset":15315,"endOffset":15387,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":15391,"endOffset":15600,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15604,"endOffset":15830,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":15834,"endOffset":16223,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":16227,"endOffset":16285,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":16289,"endOffset":16520,"count":0}],"isBlockCoverage":false},{"functionName":"parseSet","ranges":[{"startOffset":16610,"endOffset":16887,"count":0}],"isBlockCoverage":false},{"functionName":"createSet","ranges":[{"startOffset":16889,"endOffset":17208,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":17236,"endOffset":17265,"count":0}],"isBlockCoverage":false},{"functionName":"parseSexagesimal","ranges":[{"startOffset":17434,"endOffset":17784,"count":0}],"isBlockCoverage":false},{"functionName":"stringifySexagesimal","ranges":[{"startOffset":17835,"endOffset":18594,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":18627,"endOffset":18688,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":18816,"endOffset":18850,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":18921,"endOffset":18955,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":19094,"endOffset":19129,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":19200,"endOffset":19230,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":19831,"endOffset":20271,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":20287,"endOffset":20365,"count":0}],"isBlockCoverage":false},{"functionName":"boolStringify","ranges":[{"startOffset":20413,"endOffset":20512,"count":0}],"isBlockCoverage":false},{"functionName":"intIdentify$2","ranges":[{"startOffset":20537,"endOffset":20598,"count":0}],"isBlockCoverage":false},{"functionName":"intResolve$1","ranges":[{"startOffset":20601,"endOffset":21157,"count":0}],"isBlockCoverage":false},{"functionName":"intStringify$1","ranges":[{"startOffset":21159,"endOffset":21430,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":21478,"endOffset":21500,"count":0}],"isBlockCoverage":false},{"functionName":"createNode","ranges":[{"startOffset":21516,"endOffset":21597,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":21693,"endOffset":21799,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":21854,"endOffset":21971,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":21989,"endOffset":22024,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":22141,"endOffset":22151,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":22237,"endOffset":22272,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":22391,"endOffset":22402,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":22608,"endOffset":22638,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":22653,"endOffset":22690,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":22827,"endOffset":22857,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":22872,"endOffset":22908,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":23032,"endOffset":23063,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":23253,"endOffset":23284,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":23299,"endOffset":23337,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":23355,"endOffset":23389,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":23501,"endOffset":23622,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":23686,"endOffset":23720,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":23866,"endOffset":23906,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":23921,"endOffset":23971,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":23989,"endOffset":24023,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":24124,"endOffset":24431,"count":0}],"isBlockCoverage":false},{"functionName":"getSchemaTags","ranges":[{"startOffset":24847,"endOffset":25738,"count":4},{"startOffset":25005,"endOffset":25165,"count":0},{"startOffset":25200,"endOffset":25264,"count":0},{"startOffset":25308,"endOffset":25350,"count":0},{"startOffset":25392,"endOffset":25720,"count":44},{"startOffset":25453,"endOffset":25716,"count":0},{"startOffset":25720,"endOffset":25737,"count":44}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25049,"endOffset":25075,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25562,"endOffset":25588,"count":0}],"isBlockCoverage":false},{"functionName":"sortMapEntriesByKey","ranges":[{"startOffset":25768,"endOffset":25820,"count":0}],"isBlockCoverage":false},{"functionName":"Schema","ranges":[{"startOffset":26075,"endOffset":26584,"count":4},{"startOffset":26280,"endOffset":26284,"count":0},{"startOffset":26533,"endOffset":26554,"count":0}],"isBlockCoverage":true}]},{"scriptId":"896","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/yaml/dist/Document-f89a2614.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":51090,"count":1}],"isBlockCoverage":true},{"functionName":"get binary","ranges":[{"startOffset":555,"endOffset":615,"count":0}],"isBlockCoverage":false},{"functionName":"set binary","ranges":[{"startOffset":620,"endOffset":696,"count":0}],"isBlockCoverage":false},{"functionName":"get bool","ranges":[{"startOffset":701,"endOffset":757,"count":0}],"isBlockCoverage":false},{"functionName":"set bool","ranges":[{"startOffset":762,"endOffset":834,"count":0}],"isBlockCoverage":false},{"functionName":"get int","ranges":[{"startOffset":839,"endOffset":893,"count":0}],"isBlockCoverage":false},{"functionName":"set int","ranges":[{"startOffset":898,"endOffset":968,"count":0}],"isBlockCoverage":false},{"functionName":"get null","ranges":[{"startOffset":973,"endOffset":1029,"count":0}],"isBlockCoverage":false},{"functionName":"set null","ranges":[{"startOffset":1034,"endOffset":1106,"count":0}],"isBlockCoverage":false},{"functionName":"get str","ranges":[{"startOffset":1111,"endOffset":1165,"count":0}],"isBlockCoverage":false},{"functionName":"set str","ranges":[{"startOffset":1170,"endOffset":1240,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyTag","ranges":[{"startOffset":1945,"endOffset":2754,"count":0}],"isBlockCoverage":false},{"functionName":"getTagObject","ranges":[{"startOffset":2756,"endOffset":3558,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyProps","ranges":[{"startOffset":3642,"endOffset":4022,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":4024,"endOffset":5009,"count":0}],"isBlockCoverage":false},{"functionName":"validAnchorNode","ranges":[{"startOffset":5036,"endOffset":5200,"count":0}],"isBlockCoverage":false},{"functionName":"Anchors","ranges":[{"startOffset":5204,"endOffset":5337,"count":4}],"isBlockCoverage":true},{"functionName":"createAlias","ranges":[{"startOffset":5341,"endOffset":5446,"count":0}],"isBlockCoverage":false},{"functionName":"createMergePair","ranges":[{"startOffset":5450,"endOffset":5882,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":5886,"endOffset":5997,"count":0}],"isBlockCoverage":false},{"functionName":"getNames","ranges":[{"startOffset":6001,"endOffset":6051,"count":4}],"isBlockCoverage":true},{"functionName":"getNode","ranges":[{"startOffset":6055,"endOffset":6101,"count":0}],"isBlockCoverage":false},{"functionName":"newName","ranges":[{"startOffset":6105,"endOffset":6328,"count":0}],"isBlockCoverage":false},{"functionName":"resolveNodes","ranges":[{"startOffset":6384,"endOffset":6641,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6485,"endOffset":6529,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6557,"endOffset":6605,"count":0}],"isBlockCoverage":false},{"functionName":"setAnchor","ranges":[{"startOffset":6645,"endOffset":7374,"count":0}],"isBlockCoverage":false},{"functionName":"applyReviver","ranges":[{"startOffset":7656,"endOffset":8783,"count":0}],"isBlockCoverage":false},{"functionName":"visit","ranges":[{"startOffset":8799,"endOffset":9262,"count":0}],"isBlockCoverage":false},{"functionName":"listTagNames","ranges":[{"startOffset":9286,"endOffset":9322,"count":0}],"isBlockCoverage":false},{"functionName":"resolveTagHandle","ranges":[{"startOffset":9325,"endOffset":10396,"count":0}],"isBlockCoverage":false},{"functionName":"resolveTagName","ranges":[{"startOffset":10398,"endOffset":11805,"count":105},{"startOffset":10514,"endOffset":11045,"count":0},{"startOffset":11069,"endOffset":11118,"count":0},{"startOffset":11123,"endOffset":11173,"count":0},{"startOffset":11178,"endOffset":11227,"count":0},{"startOffset":11232,"endOffset":11337,"count":8},{"startOffset":11343,"endOffset":11388,"count":0},{"startOffset":11393,"endOffset":11489,"count":31},{"startOffset":11495,"endOffset":11540,"count":3},{"startOffset":11545,"endOffset":11641,"count":4},{"startOffset":11647,"endOffset":11766,"count":62},{"startOffset":11715,"endOffset":11758,"count":0},{"startOffset":11772,"endOffset":11799,"count":0}],"isBlockCoverage":true},{"functionName":"checkFlowCollectionEnd","ranges":[{"startOffset":11807,"endOffset":12966,"count":3},{"startOffset":11899,"endOffset":12000,"count":0},{"startOffset":12118,"endOffset":12240,"count":0},{"startOffset":12509,"endOffset":12964,"count":0}],"isBlockCoverage":true},{"functionName":"checkFlowCommentSpace","ranges":[{"startOffset":12967,"endOffset":13310,"count":0}],"isBlockCoverage":false},{"functionName":"getLongKeyError","ranges":[{"startOffset":13311,"endOffset":13527,"count":0}],"isBlockCoverage":false},{"functionName":"resolveComments","ranges":[{"startOffset":13528,"endOffset":14165,"count":35},{"startOffset":13647,"endOffset":14163,"count":0}],"isBlockCoverage":true},{"functionName":"resolveMap","ranges":[{"startOffset":14167,"endOffset":16297,"count":31},{"startOffset":14292,"endOffset":14323,"count":0},{"startOffset":14542,"endOffset":15984,"count":49},{"startOffset":14642,"endOffset":14666,"count":0},{"startOffset":14693,"endOffset":14700,"count":0},{"startOffset":14701,"endOffset":14735,"count":0},{"startOffset":14737,"endOffset":15535,"count":0},{"startOffset":15592,"endOffset":15974,"count":34},{"startOffset":15780,"endOffset":15966,"count":0},{"startOffset":15984,"endOffset":16009,"count":49},{"startOffset":16009,"endOffset":16033,"count":0},{"startOffset":16035,"endOffset":16258,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14871,"endOffset":15432,"count":0}],"isBlockCoverage":false},{"functionName":"valueHasPairComment","ranges":[{"startOffset":16327,"endOffset":16702,"count":49},{"startOffset":16436,"endOffset":16516,"count":0},{"startOffset":16518,"endOffset":16701,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePairComment","ranges":[{"startOffset":16705,"endOffset":17282,"count":49},{"startOffset":16788,"endOffset":16970,"count":0},{"startOffset":16972,"endOffset":17280,"count":0}],"isBlockCoverage":true},{"functionName":"resolveBlockMapItems","ranges":[{"startOffset":17284,"endOffset":21289,"count":31},{"startOffset":17461,"endOffset":21178,"count":98},{"startOffset":17526,"endOffset":17682,"count":0},{"startOffset":17690,"endOffset":17876,"count":0},{"startOffset":17884,"endOffset":18138,"count":0},{"startOffset":18146,"endOffset":20090,"count":49},{"startOffset":18236,"endOffset":18247,"count":0},{"startOffset":18274,"endOffset":18302,"count":0},{"startOffset":18414,"endOffset":18447,"count":26},{"startOffset":18449,"endOffset":18635,"count":0},{"startOffset":18700,"endOffset":18724,"count":0},{"startOffset":18726,"endOffset":19694,"count":0},{"startOffset":19955,"endOffset":19998,"count":0},{"startOffset":20098,"endOffset":21167,"count":49},{"startOffset":20138,"endOffset":20180,"count":0},{"startOffset":20280,"endOffset":20308,"count":0},{"startOffset":20453,"endOffset":20500,"count":0},{"startOffset":20513,"endOffset":20586,"count":0},{"startOffset":20686,"endOffset":20930,"count":0},{"startOffset":20998,"endOffset":21167,"count":0},{"startOffset":21205,"endOffset":21247,"count":0}],"isBlockCoverage":true},{"functionName":"resolveFlowMapItems","ranges":[{"startOffset":21291,"endOffset":23660,"count":0}],"isBlockCoverage":false},{"functionName":"resolveSeq","ranges":[{"startOffset":23662,"endOffset":24359,"count":4},{"startOffset":23787,"endOffset":23818,"count":3},{"startOffset":23819,"endOffset":23851,"count":1},{"startOffset":24097,"endOffset":24320,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24006,"endOffset":24094,"count":3},{"startOffset":24047,"endOffset":24094,"count":0}],"isBlockCoverage":true},{"functionName":"resolveBlockSeqItems","ranges":[{"startOffset":24361,"endOffset":25486,"count":1},{"startOffset":24557,"endOffset":24686,"count":0},{"startOffset":24694,"endOffset":24853,"count":0},{"startOffset":24931,"endOffset":24959,"count":0},{"startOffset":25037,"endOffset":25226,"count":0},{"startOffset":25250,"endOffset":25433,"count":0}],"isBlockCoverage":true},{"functionName":"resolveFlowSeqItems","ranges":[{"startOffset":25488,"endOffset":28676,"count":3},{"startOffset":25732,"endOffset":28522,"count":8},{"startOffset":25805,"endOffset":27701,"count":6},{"startOffset":25929,"endOffset":26147,"count":0},{"startOffset":26174,"endOffset":27695,"count":3},{"startOffset":26220,"endOffset":26235,"count":1},{"startOffset":26237,"endOffset":26274,"count":0},{"startOffset":26313,"endOffset":26333,"count":0},{"startOffset":26335,"endOffset":27414,"count":0},{"startOffset":27482,"endOffset":27695,"count":0},{"startOffset":27701,"endOffset":28518,"count":2},{"startOffset":27768,"endOffset":27836,"count":0},{"startOffset":27900,"endOffset":28046,"count":0},{"startOffset":28070,"endOffset":28223,"count":0},{"startOffset":28360,"endOffset":28458,"count":0},{"startOffset":28592,"endOffset":28634,"count":0}],"isBlockCoverage":true},{"functionName":"resolveByTagName","ranges":[{"startOffset":28678,"endOffset":29568,"count":43},{"startOffset":28811,"endOffset":29178,"count":63},{"startOffset":28842,"endOffset":29174,"count":43},{"startOffset":28864,"endOffset":29006,"count":0},{"startOffset":29120,"endOffset":29125,"count":35},{"startOffset":29126,"endOffset":29159,"count":8},{"startOffset":29178,"endOffset":29567,"count":0}],"isBlockCoverage":true},{"functionName":"resolveTag","ranges":[{"startOffset":29570,"endOffset":31631,"count":43},{"startOffset":29867,"endOffset":29912,"count":0},{"startOffset":29919,"endOffset":30147,"count":31},{"startOffset":30071,"endOffset":30132,"count":0},{"startOffset":30155,"endOffset":30200,"count":3},{"startOffset":30207,"endOffset":30436,"count":4},{"startOffset":30359,"endOffset":30421,"count":0},{"startOffset":30444,"endOffset":30769,"count":8},{"startOffset":30483,"endOffset":30488,"count":0},{"startOffset":30530,"endOffset":30635,"count":0},{"startOffset":30685,"endOffset":30745,"count":0},{"startOffset":30895,"endOffset":30913,"count":0},{"startOffset":30942,"endOffset":31629,"count":0}],"isBlockCoverage":true},{"functionName":"onError","ranges":[{"startOffset":29735,"endOffset":29825,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30563,"endOffset":30594,"count":0}],"isBlockCoverage":false},{"functionName":"isCollectionItem","ranges":[{"startOffset":31658,"endOffset":31890,"count":105},{"startOffset":31681,"endOffset":31694,"count":0},{"startOffset":31836,"endOffset":31887,"count":56}],"isBlockCoverage":true},{"functionName":"resolveNodeProps","ranges":[{"startOffset":31893,"endOffset":33540,"count":105},{"startOffset":32092,"endOffset":32138,"count":50},{"startOffset":32139,"endOffset":32151,"count":55},{"startOffset":32202,"endOffset":33481,"count":0}],"isBlockCoverage":true},{"functionName":"resolveNodeValue","ranges":[{"startOffset":33542,"endOffset":34751,"count":105},{"startOffset":33697,"endOffset":34096,"count":0},{"startOffset":34158,"endOffset":34196,"count":43},{"startOffset":34196,"endOffset":34256,"count":62},{"startOffset":34256,"endOffset":34413,"count":0},{"startOffset":34413,"endOffset":34451,"count":62},{"startOffset":34451,"endOffset":34456,"count":0},{"startOffset":34492,"endOffset":34579,"count":0},{"startOffset":34579,"endOffset":34645,"count":62},{"startOffset":34645,"endOffset":34749,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34519,"endOffset":34550,"count":0}],"isBlockCoverage":false},{"functionName":"resolveNode","ranges":[{"startOffset":34787,"endOffset":36261,"count":105},{"startOffset":34834,"endOffset":34846,"count":0},{"startOffset":34865,"endOffset":34893,"count":0},{"startOffset":35004,"endOffset":35508,"count":0},{"startOffset":35567,"endOffset":35591,"count":0},{"startOffset":35593,"endOffset":35744,"count":0},{"startOffset":36022,"endOffset":36111,"count":0},{"startOffset":36167,"endOffset":36224,"count":0}],"isBlockCoverage":true},{"functionName":"parseContents","ranges":[{"startOffset":36263,"endOffset":37821,"count":4},{"startOffset":36501,"endOffset":36701,"count":0},{"startOffset":36769,"endOffset":36839,"count":0},{"startOffset":36864,"endOffset":37361,"count":0},{"startOffset":37389,"endOffset":37396,"count":0},{"startOffset":37412,"endOffset":37494,"count":0},{"startOffset":37558,"endOffset":37761,"count":0}],"isBlockCoverage":true},{"functionName":"resolveTagDirective","ranges":[{"startOffset":37823,"endOffset":38385,"count":0}],"isBlockCoverage":false},{"functionName":"resolveYamlDirective","ranges":[{"startOffset":38387,"endOffset":38974,"count":0}],"isBlockCoverage":false},{"functionName":"parseDirectives","ranges":[{"startOffset":38976,"endOffset":40539,"count":4},{"startOffset":39129,"endOffset":40165,"count":0},{"startOffset":40181,"endOffset":40198,"count":0},{"startOffset":40199,"endOffset":40267,"count":0},{"startOffset":40269,"endOffset":40476,"count":0}],"isBlockCoverage":true},{"functionName":"copyTagPrefix","ranges":[{"startOffset":40297,"endOffset":40373,"count":0}],"isBlockCoverage":false},{"functionName":"assertCollection","ranges":[{"startOffset":40541,"endOffset":40717,"count":0}],"isBlockCoverage":false},{"functionName":"Document","ranges":[{"startOffset":40738,"endOffset":41567,"count":4},{"startOffset":40820,"endOffset":40851,"count":0},{"startOffset":40852,"endOffset":40879,"count":0},{"startOffset":40881,"endOffset":40942,"count":0},{"startOffset":41311,"endOffset":41398,"count":0},{"startOffset":41476,"endOffset":41563,"count":0}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":41571,"endOffset":41661,"count":0}],"isBlockCoverage":false},{"functionName":"addIn","ranges":[{"startOffset":41665,"endOffset":41764,"count":0}],"isBlockCoverage":false},{"functionName":"createNode","ranges":[{"startOffset":41768,"endOffset":43223,"count":0}],"isBlockCoverage":false},{"functionName":"createPair","ranges":[{"startOffset":43227,"endOffset":43404,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":43408,"endOffset":43500,"count":0}],"isBlockCoverage":false},{"functionName":"deleteIn","ranges":[{"startOffset":43504,"endOffset":43748,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaults","ranges":[{"startOffset":43752,"endOffset":43864,"count":4},{"startOffset":43854,"endOffset":43859,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":43868,"endOffset":44007,"count":0}],"isBlockCoverage":false},{"functionName":"getIn","ranges":[{"startOffset":44011,"endOffset":44308,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":44312,"endOffset":44423,"count":0}],"isBlockCoverage":false},{"functionName":"hasIn","ranges":[{"startOffset":44427,"endOffset":44623,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":44627,"endOffset":44885,"count":0}],"isBlockCoverage":false},{"functionName":"setIn","ranges":[{"startOffset":44889,"endOffset":45218,"count":0}],"isBlockCoverage":false},{"functionName":"setSchema","ranges":[{"startOffset":45222,"endOffset":45791,"count":4},{"startOffset":45293,"endOffset":45300,"count":0},{"startOffset":45333,"endOffset":45352,"count":0},{"startOffset":45408,"endOffset":45523,"count":0},{"startOffset":45536,"endOffset":45561,"count":0},{"startOffset":45563,"endOffset":45602,"count":0},{"startOffset":45639,"endOffset":45676,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":45795,"endOffset":46770,"count":4},{"startOffset":46077,"endOffset":46161,"count":0},{"startOffset":46240,"endOffset":46272,"count":0},{"startOffset":46338,"endOffset":46344,"count":0},{"startOffset":46548,"endOffset":46625,"count":0},{"startOffset":46667,"endOffset":46742,"count":0}],"isBlockCoverage":true},{"functionName":"listNonDefaultTags","ranges":[{"startOffset":46774,"endOffset":46913,"count":0}],"isBlockCoverage":false},{"functionName":"setTagPrefix","ranges":[{"startOffset":46917,"endOffset":47357,"count":0}],"isBlockCoverage":false},{"functionName":"toJS","ranges":[{"startOffset":47361,"endOffset":48287,"count":4},{"startOffset":47625,"endOffset":47647,"count":0},{"startOffset":47806,"endOffset":47831,"count":0},{"startOffset":48083,"endOffset":48093,"count":0},{"startOffset":48095,"endOffset":48179,"count":0},{"startOffset":48221,"endOffset":48276,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47503,"endOffset":47579,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":48291,"endOffset":48424,"count":4}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":48428,"endOffset":50893,"count":0}],"isBlockCoverage":false}]},{"scriptId":"897","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/swagger-jsdoc/src/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4166,"count":1}],"isBlockCoverage":true},{"functionName":"convertGlobPaths","ranges":[{"startOffset":297,"endOffset":462,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":356,"endOffset":393,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":407,"endOffset":454,"count":2}],"isBlockCoverage":true},{"functionName":"hasEmptyProperty","ranges":[{"startOffset":622,"endOffset":858,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":690,"endOffset":707,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":727,"endOffset":849,"count":0}],"isBlockCoverage":false},{"functionName":"extractYamlFromJsDoc","ranges":[{"startOffset":1075,"endOffset":1320,"count":4},{"startOffset":1219,"endOffset":1245,"count":0}],"isBlockCoverage":true},{"functionName":"extractAnnotations","ranges":[{"startOffset":1430,"endOffset":2335,"count":3},{"startOffset":1768,"endOffset":1780,"count":0},{"startOffset":1785,"endOffset":1841,"count":0},{"startOffset":1847,"endOffset":2143,"count":0},{"startOffset":2211,"endOffset":2216,"count":2},{"startOffset":2259,"endOffset":2296,"count":4}],"isBlockCoverage":true},{"functionName":"isTagPresentInTags","ranges":[{"startOffset":2413,"endOffset":2569,"count":1},{"startOffset":2538,"endOffset":2550,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2480,"endOffset":2522,"count":0}],"isBlockCoverage":false},{"functionName":"loadDefinition","ranges":[{"startOffset":2698,"endOffset":3442,"count":0}],"isBlockCoverage":false},{"functionName":"mergeDeep","ranges":[{"startOffset":3686,"endOffset":3802,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3760,"endOffset":3798,"count":49},{"startOffset":3782,"endOffset":3785,"count":0}],"isBlockCoverage":true}]},{"scriptId":"898","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/swagger-jsdoc/node_modules/glob/glob.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19433,"count":1}],"isBlockCoverage":true},{"functionName":"glob","ranges":[{"startOffset":2187,"endOffset":2498,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":2608,"endOffset":2836,"count":0}],"isBlockCoverage":false},{"functionName":"glob.hasMagic","ranges":[{"startOffset":2854,"endOffset":3211,"count":0}],"isBlockCoverage":false},{"functionName":"Glob","ranges":[{"startOffset":3249,"endOffset":4679,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._finish","ranges":[{"startOffset":4706,"endOffset":4909,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._realpath","ranges":[{"startOffset":4938,"endOffset":5253,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._realpathSet","ranges":[{"startOffset":5285,"endOffset":6101,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._mark","ranges":[{"startOffset":6126,"endOffset":6172,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._makeAbs","ranges":[{"startOffset":6200,"endOffset":6249,"count":0}],"isBlockCoverage":false},{"functionName":"Glob.abort","ranges":[{"startOffset":6274,"endOffset":6332,"count":0}],"isBlockCoverage":false},{"functionName":"Glob.pause","ranges":[{"startOffset":6357,"endOffset":6444,"count":0}],"isBlockCoverage":false},{"functionName":"Glob.resume","ranges":[{"startOffset":6470,"endOffset":7052,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._process","ranges":[{"startOffset":7080,"endOffset":8846,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processReaddir","ranges":[{"startOffset":8881,"endOffset":9117,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processReaddir2","ranges":[{"startOffset":9153,"endOffset":11197,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._emitMatch","ranges":[{"startOffset":11227,"endOffset":11795,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdirInGlobStar","ranges":[{"startOffset":11833,"endOffset":12630,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdir","ranges":[{"startOffset":12658,"endOffset":13170,"count":0}],"isBlockCoverage":false},{"functionName":"readdirCb","ranges":[{"startOffset":13172,"endOffset":13352,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdirEntries","ranges":[{"startOffset":13387,"endOffset":13884,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdirError","ranges":[{"startOffset":13917,"endOffset":15002,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processGlobStar","ranges":[{"startOffset":15038,"endOffset":15268,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processGlobStar2","ranges":[{"startOffset":15306,"endOffset":16453,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processSimple","ranges":[{"startOffset":16487,"endOffset":16743,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processSimple2","ranges":[{"startOffset":16777,"endOffset":17459,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._stat","ranges":[{"startOffset":17526,"endOffset":18907,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._stat2","ranges":[{"startOffset":18933,"endOffset":19432,"count":0}],"isBlockCoverage":false}]},{"scriptId":"899","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/minimatch/minimatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26266,"count":1},{"startOffset":134,"endOffset":151,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":72,"endOffset":130,"count":1},{"startOffset":117,"endOffset":129,"count":0}],"isBlockCoverage":true},{"functionName":"charSet","ranges":[{"startOffset":1148,"endOffset":1262,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1199,"endOffset":1255,"count":14}],"isBlockCoverage":true},{"functionName":"filter","ranges":[{"startOffset":1337,"endOffset":1480,"count":0}],"isBlockCoverage":false},{"functionName":"ext","ranges":[{"startOffset":1482,"endOffset":1665,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.defaults","ranges":[{"startOffset":1688,"endOffset":2709,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch.defaults","ranges":[{"startOffset":2732,"endOffset":2793,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch","ranges":[{"startOffset":2795,"endOffset":3068,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch","ranges":[{"startOffset":3070,"endOffset":3676,"count":2},{"startOffset":3146,"endOffset":3194,"count":0},{"startOffset":3243,"endOffset":3255,"count":0}],"isBlockCoverage":true},{"functionName":"Minimatch.debug","ranges":[{"startOffset":3706,"endOffset":3720,"count":38}],"isBlockCoverage":true},{"functionName":"make","ranges":[{"startOffset":3754,"endOffset":5005,"count":2},{"startOffset":3905,"endOffset":3933,"count":0},{"startOffset":3935,"endOffset":3975,"count":0},{"startOffset":3992,"endOffset":4030,"count":0},{"startOffset":4188,"endOffset":4261,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":4201,"endOffset":4261,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4595,"endOffset":4644,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4718,"endOffset":4780,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4898,"endOffset":4951,"count":2}],"isBlockCoverage":true},{"functionName":"parseNegate","ranges":[{"startOffset":5053,"endOffset":5438,"count":2},{"startOffset":5212,"endOffset":5291,"count":0},{"startOffset":5303,"endOffset":5437,"count":0}],"isBlockCoverage":true},{"functionName":"minimatch.braceExpand","ranges":[{"startOffset":5714,"endOffset":5784,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":5833,"endOffset":6374,"count":2},{"startOffset":5964,"endOffset":5996,"count":0},{"startOffset":6064,"endOffset":6073,"count":0},{"startOffset":6346,"endOffset":6373,"count":0}],"isBlockCoverage":true},{"functionName":"assertValidPattern","ranges":[{"startOffset":6436,"endOffset":6639,"count":11},{"startOffset":6492,"endOffset":6540,"count":0},{"startOffset":6585,"endOffset":6637,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":7337,"endOffset":17832,"count":7},{"startOffset":7471,"endOffset":7556,"count":0},{"startOffset":7579,"endOffset":7588,"count":0},{"startOffset":7973,"endOffset":7977,"count":2},{"startOffset":8055,"endOffset":8119,"count":5},{"startOffset":8069,"endOffset":8105,"count":0},{"startOffset":8688,"endOffset":8714,"count":27},{"startOffset":8726,"endOffset":13397,"count":27},{"startOffset":8835,"endOffset":8851,"count":0},{"startOffset":8853,"endOffset":8919,"count":0},{"startOffset":8977,"endOffset":9114,"count":0},{"startOffset":9122,"endOffset":9196,"count":0},{"startOffset":9276,"endOffset":9285,"count":0},{"startOffset":9292,"endOffset":9301,"count":1},{"startOffset":9308,"endOffset":9317,"count":1},{"startOffset":9324,"endOffset":9333,"count":1},{"startOffset":9340,"endOffset":10205,"count":1},{"startOffset":9551,"endOffset":9691,"count":0},{"startOffset":10174,"endOffset":10190,"count":0},{"startOffset":10213,"endOffset":10764,"count":0},{"startOffset":10772,"endOffset":11199,"count":0},{"startOffset":11207,"endOffset":11416,"count":0},{"startOffset":11478,"endOffset":11757,"count":0},{"startOffset":11765,"endOffset":13086,"count":0},{"startOffset":13094,"endOffset":13376,"count":26},{"startOffset":13206,"endOffset":13265,"count":0},{"startOffset":13299,"endOffset":13325,"count":4},{"startOffset":13314,"endOffset":13324,"count":0},{"startOffset":13327,"endOffset":13359,"count":4},{"startOffset":13514,"endOffset":13890,"count":0},{"startOffset":14294,"endOffset":15231,"count":0},{"startOffset":15330,"endOffset":15371,"count":0},{"startOffset":15547,"endOffset":15556,"count":1},{"startOffset":15557,"endOffset":15566,"count":1},{"startOffset":15567,"endOffset":15599,"count":1},{"startOffset":15920,"endOffset":16734,"count":0},{"startOffset":16936,"endOffset":16963,"count":1},{"startOffset":16988,"endOffset":17020,"count":1},{"startOffset":17095,"endOffset":17126,"count":0},{"startOffset":17286,"endOffset":17324,"count":6},{"startOffset":17324,"endOffset":17355,"count":1},{"startOffset":17355,"endOffset":17360,"count":0},{"startOffset":17361,"endOffset":17365,"count":1},{"startOffset":17429,"endOffset":17768,"count":0},{"startOffset":17768,"endOffset":17831,"count":1}],"isBlockCoverage":true},{"functionName":"clearStateChar","ranges":[{"startOffset":8141,"endOffset":8628,"count":34},{"startOffset":8189,"endOffset":8624,"count":1},{"startOffset":8395,"endOffset":8466,"count":0},{"startOffset":8475,"endOffset":8530,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14509,"endOffset":15009,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.makeRe","ranges":[{"startOffset":17853,"endOffset":17940,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe","ranges":[{"startOffset":17978,"endOffset":19165,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.match","ranges":[{"startOffset":19185,"endOffset":19439,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":19469,"endOffset":20941,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch.matchOne","ranges":[{"startOffset":21192,"endOffset":26081,"count":0}],"isBlockCoverage":false},{"functionName":"globUnescape","ranges":[{"startOffset":26115,"endOffset":26179,"count":6}],"isBlockCoverage":true},{"functionName":"regExpEscape","ranges":[{"startOffset":26181,"endOffset":26265,"count":0}],"isBlockCoverage":false}]},{"scriptId":"900","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/minimatch/node_modules/brace-expansion/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4792,"count":1}],"isBlockCoverage":true},{"functionName":"numeric","ranges":[{"startOffset":337,"endOffset":445,"count":0}],"isBlockCoverage":false},{"functionName":"escapeBraces","ranges":[{"startOffset":447,"endOffset":684,"count":0}],"isBlockCoverage":false},{"functionName":"unescapeBraces","ranges":[{"startOffset":686,"endOffset":915,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommaParts","ranges":[{"startOffset":1079,"endOffset":1545,"count":0}],"isBlockCoverage":false},{"functionName":"expandTop","ranges":[{"startOffset":1547,"endOffset":2124,"count":0}],"isBlockCoverage":false},{"functionName":"identity","ranges":[{"startOffset":2126,"endOffset":2162,"count":0}],"isBlockCoverage":false},{"functionName":"embrace","ranges":[{"startOffset":2164,"endOffset":2215,"count":0}],"isBlockCoverage":false},{"functionName":"isPadded","ranges":[{"startOffset":2216,"endOffset":2269,"count":0}],"isBlockCoverage":false},{"functionName":"lte","ranges":[{"startOffset":2271,"endOffset":2310,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":2311,"endOffset":2350,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":2352,"endOffset":4790,"count":0}],"isBlockCoverage":false}]},{"scriptId":"901","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/concat-map/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":345,"count":1},{"startOffset":255,"endOffset":343,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":224,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":258,"endOffset":343,"count":0}],"isBlockCoverage":false}]},{"scriptId":"902","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/path-is-absolute/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":611,"count":1},{"startOffset":542,"endOffset":549,"count":0}],"isBlockCoverage":true},{"functionName":"posix","ranges":[{"startOffset":15,"endOffset":71,"count":0}],"isBlockCoverage":false},{"functionName":"win32","ranges":[{"startOffset":73,"endOffset":486,"count":10},{"startOffset":348,"endOffset":353,"count":8},{"startOffset":383,"endOffset":410,"count":2},{"startOffset":474,"endOffset":482,"count":8}],"isBlockCoverage":true}]},{"scriptId":"903","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/swagger-jsdoc/node_modules/glob/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12002,"count":1}],"isBlockCoverage":true},{"functionName":"globSync","ranges":[{"startOffset":592,"endOffset":881,"count":2},{"startOffset":698,"endOffset":832,"count":0}],"isBlockCoverage":true},{"functionName":"GlobSync","ranges":[{"startOffset":883,"endOffset":1510,"count":2},{"startOffset":942,"endOffset":981,"count":0},{"startOffset":1050,"endOffset":1184,"count":0},{"startOffset":1225,"endOffset":1262,"count":0},{"startOffset":1325,"endOffset":1336,"count":0}],"isBlockCoverage":true},{"functionName":"GlobSync._finish","ranges":[{"startOffset":1541,"endOffset":2098,"count":2},{"startOffset":1611,"endOffset":2074,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1658,"endOffset":2069,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._process","ranges":[{"startOffset":2131,"endOffset":3632,"count":2},{"startOffset":2322,"endOffset":2336,"count":6},{"startOffset":2511,"endOffset":2596,"count":1},{"startOffset":2602,"endOffset":2766,"count":0},{"startOffset":2772,"endOffset":3001,"count":1},{"startOffset":3005,"endOffset":3108,"count":1},{"startOffset":3108,"endOffset":3118,"count":0},{"startOffset":3118,"endOffset":3297,"count":1},{"startOffset":3183,"endOffset":3274,"count":0},{"startOffset":3297,"endOffset":3403,"count":1},{"startOffset":3403,"endOffset":3409,"count":0},{"startOffset":3409,"endOffset":3485,"count":1},{"startOffset":3485,"endOffset":3552,"count":0},{"startOffset":3552,"endOffset":3630,"count":1}],"isBlockCoverage":true},{"functionName":"GlobSync._processReaddir","ranges":[{"startOffset":3672,"endOffset":5630,"count":1},{"startOffset":3851,"endOffset":3857,"count":0},{"startOffset":4190,"endOffset":4423,"count":2},{"startOffset":4243,"endOffset":4251,"count":0},{"startOffset":4284,"endOffset":4294,"count":0},{"startOffset":4296,"endOffset":4330,"count":0},{"startOffset":4540,"endOffset":4546,"count":0},{"startOffset":4926,"endOffset":5227,"count":2},{"startOffset":5048,"endOffset":5086,"count":0},{"startOffset":5126,"endOffset":5142,"count":0},{"startOffset":5144,"endOffset":5189,"count":0},{"startOffset":5297,"endOffset":5628,"count":0}],"isBlockCoverage":true},{"functionName":"GlobSync._emitMatch","ranges":[{"startOffset":5665,"endOffset":6053,"count":3},{"startOffset":5717,"endOffset":5723,"count":0},{"startOffset":5776,"endOffset":5793,"count":0},{"startOffset":5816,"endOffset":5833,"count":0},{"startOffset":5869,"endOffset":5875,"count":0},{"startOffset":5895,"endOffset":5982,"count":0},{"startOffset":6038,"endOffset":6051,"count":0}],"isBlockCoverage":true},{"functionName":"GlobSync._readdirInGlobStar","ranges":[{"startOffset":6096,"endOffset":6803,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdir","ranges":[{"startOffset":6835,"endOffset":7261,"count":1},{"startOffset":6896,"endOffset":6927,"count":0},{"startOffset":6933,"endOffset":6968,"count":0},{"startOffset":7002,"endOffset":7123,"count":0},{"startOffset":7195,"endOffset":7259,"count":0}],"isBlockCoverage":true},{"functionName":"GlobSync._readdirEntries","ranges":[{"startOffset":7300,"endOffset":7781,"count":1},{"startOffset":7560,"endOffset":7699,"count":2},{"startOffset":7618,"endOffset":7629,"count":0}],"isBlockCoverage":true},{"functionName":"GlobSync._readdirError","ranges":[{"startOffset":7818,"endOffset":8682,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._processGlobStar","ranges":[{"startOffset":8722,"endOffset":9820,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._processSimple","ranges":[{"startOffset":9858,"endOffset":10604,"count":1},{"startOffset":10175,"endOffset":10181,"count":0},{"startOffset":10218,"endOffset":10234,"count":0},{"startOffset":10236,"endOffset":10465,"count":0}],"isBlockCoverage":true},{"functionName":"GlobSync._stat","ranges":[{"startOffset":10675,"endOffset":11845,"count":1},{"startOffset":10793,"endOffset":10805,"count":0},{"startOffset":10853,"endOffset":11183,"count":0},{"startOffset":11308,"endOffset":11458,"count":0},{"startOffset":11501,"endOffset":11602,"count":0},{"startOffset":11724,"endOffset":11731,"count":0},{"startOffset":11798,"endOffset":11813,"count":0},{"startOffset":11819,"endOffset":11831,"count":0}],"isBlockCoverage":true},{"functionName":"GlobSync._mark","ranges":[{"startOffset":11874,"endOffset":11920,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._makeAbs","ranges":[{"startOffset":11952,"endOffset":12001,"count":5}],"isBlockCoverage":true}]},{"scriptId":"904","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/swagger-jsdoc/node_modules/glob/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6167,"count":1}],"isBlockCoverage":true},{"functionName":"ownProp","ranges":[{"startOffset":257,"endOffset":348,"count":4}],"isBlockCoverage":true},{"functionName":"alphasorti","ranges":[{"startOffset":496,"endOffset":582,"count":0}],"isBlockCoverage":false},{"functionName":"alphasort","ranges":[{"startOffset":584,"endOffset":641,"count":1}],"isBlockCoverage":true},{"functionName":"setupIgnores","ranges":[{"startOffset":643,"endOffset":867,"count":2},{"startOffset":760,"endOffset":787,"count":0},{"startOffset":815,"endOffset":865,"count":0}],"isBlockCoverage":true},{"functionName":"ignoreMap","ranges":[{"startOffset":917,"endOffset":1210,"count":0}],"isBlockCoverage":false},{"functionName":"setopts","ranges":[{"startOffset":1212,"endOffset":3387,"count":2},{"startOffset":1362,"endOffset":1392,"count":0},{"startOffset":1394,"endOffset":1522,"count":0},{"startOffset":1870,"endOffset":1886,"count":0},{"startOffset":2511,"endOffset":2604,"count":0},{"startOffset":2983,"endOffset":3008,"count":0}],"isBlockCoverage":true},{"functionName":"finish","ranges":[{"startOffset":3389,"endOffset":4733,"count":2},{"startOffset":3456,"endOffset":3460,"count":0},{"startOffset":3631,"endOffset":3867,"count":0},{"startOffset":3954,"endOffset":3976,"count":0},{"startOffset":4158,"endOffset":4170,"count":0},{"startOffset":4247,"endOffset":4609,"count":0},{"startOffset":4641,"endOffset":4711,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4006,"endOffset":4054,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4377,"endOffset":4598,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4658,"endOffset":4710,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":4735,"endOffset":5186,"count":0}],"isBlockCoverage":false},{"functionName":"makeAbs","ranges":[{"startOffset":5207,"endOffset":5562,"count":5},{"startOffset":5277,"endOffset":5316,"count":0},{"startOffset":5353,"endOffset":5370,"count":0},{"startOffset":5397,"endOffset":5438,"count":0}],"isBlockCoverage":true},{"functionName":"isIgnored","ranges":[{"startOffset":5758,"endOffset":5972,"count":3},{"startOffset":5835,"endOffset":5971,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5863,"endOffset":5969,"count":0}],"isBlockCoverage":false},{"functionName":"childrenIgnored","ranges":[{"startOffset":5974,"endOffset":6166,"count":1},{"startOffset":6057,"endOffset":6165,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6085,"endOffset":6163,"count":0}],"isBlockCoverage":false}]},{"scriptId":"905","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/lodash.mergewith/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":51182,"count":1},{"startOffset":3263,"endOffset":3270,"count":0},{"startOffset":3271,"endOffset":3296,"count":0},{"startOffset":3297,"endOffset":3304,"count":0},{"startOffset":3378,"endOffset":3389,"count":0},{"startOffset":3390,"endOffset":3418,"count":0},{"startOffset":7827,"endOffset":7838,"count":0},{"startOffset":7946,"endOffset":7957,"count":0},{"startOffset":8194,"endOffset":8205,"count":0},{"startOffset":8501,"endOffset":8512,"count":0},{"startOffset":28453,"endOffset":28463,"count":0},{"startOffset":41292,"endOffset":41434,"count":0},{"startOffset":43594,"endOffset":43606,"count":0},{"startOffset":47661,"endOffset":47679,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3992,"endOffset":4339,"count":1},{"startOffset":4183,"endOffset":4288,"count":0},{"startOffset":4289,"endOffset":4319,"count":0},{"startOffset":4325,"endOffset":4337,"count":0}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":4811,"endOffset":5125,"count":3},{"startOffset":4878,"endOffset":4912,"count":0},{"startOffset":4917,"endOffset":4960,"count":0},{"startOffset":5022,"endOffset":5083,"count":0},{"startOffset":5087,"endOffset":5124,"count":0}],"isBlockCoverage":true},{"functionName":"baseTimes","ranges":[{"startOffset":5440,"endOffset":5601,"count":4},{"startOffset":5540,"endOffset":5582,"count":3}],"isBlockCoverage":true},{"functionName":"baseUnary","ranges":[{"startOffset":5821,"endOffset":5905,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5857,"endOffset":5902,"count":23}],"isBlockCoverage":true},{"functionName":"getValue","ranges":[{"startOffset":6118,"endOffset":6203,"count":3},{"startOffset":6175,"endOffset":6186,"count":0}],"isBlockCoverage":true},{"functionName":"overArg","ranges":[{"startOffset":6459,"endOffset":6559,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6504,"endOffset":6556,"count":46}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7078,"endOffset":7230,"count":1},{"startOffset":7128,"endOffset":7146,"count":0},{"startOffset":7147,"endOffset":7174,"count":0},{"startOffset":7196,"endOffset":7222,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8230,"endOffset":8360,"count":1},{"startOffset":8346,"endOffset":8358,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8962,"endOffset":9258,"count":1}],"isBlockCoverage":true},{"functionName":"object","ranges":[{"startOffset":8977,"endOffset":8997,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9007,"endOffset":9255,"count":23},{"startOffset":9051,"endOffset":9075,"count":0},{"startOffset":9139,"endOffset":9254,"count":0}],"isBlockCoverage":true},{"functionName":"Hash","ranges":[{"startOffset":9387,"endOffset":9600,"count":0}],"isBlockCoverage":false},{"functionName":"hashClear","ranges":[{"startOffset":9706,"endOffset":9805,"count":0}],"isBlockCoverage":false},{"functionName":"hashDelete","ranges":[{"startOffset":10086,"endOffset":10221,"count":0}],"isBlockCoverage":false},{"functionName":"hashGet","ranges":[{"startOffset":10404,"endOffset":10635,"count":0}],"isBlockCoverage":false},{"functionName":"hashHas","ranges":[{"startOffset":10870,"endOffset":11007,"count":0}],"isBlockCoverage":false},{"functionName":"hashSet","ranges":[{"startOffset":11236,"endOffset":11427,"count":0}],"isBlockCoverage":false},{"functionName":"ListCache","ranges":[{"startOffset":11749,"endOffset":11967,"count":4},{"startOffset":11832,"endOffset":11848,"count":0},{"startOffset":11894,"endOffset":11965,"count":0}],"isBlockCoverage":true},{"functionName":"listCacheClear","ranges":[{"startOffset":12084,"endOffset":12152,"count":4}],"isBlockCoverage":true},{"functionName":"listCacheDelete","ranges":[{"startOffset":12400,"endOffset":12699,"count":27},{"startOffset":12517,"endOffset":12540,"count":0},{"startOffset":12623,"endOffset":12667,"count":0}],"isBlockCoverage":true},{"functionName":"listCacheGet","ranges":[{"startOffset":12893,"endOffset":13040,"count":27},{"startOffset":13021,"endOffset":13037,"count":0}],"isBlockCoverage":true},{"functionName":"listCacheHas","ranges":[{"startOffset":13286,"endOffset":13364,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheSet","ranges":[{"startOffset":13610,"endOffset":13838,"count":0}],"isBlockCoverage":false},{"functionName":"MapCache","ranges":[{"startOffset":14238,"endOffset":14455,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheClear","ranges":[{"startOffset":14564,"endOffset":14714,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheDelete","ranges":[{"startOffset":14954,"endOffset":15087,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheGet","ranges":[{"startOffset":15273,"endOffset":15343,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheHas","ranges":[{"startOffset":15581,"endOffset":15651,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheSet","ranges":[{"startOffset":15888,"endOffset":16066,"count":0}],"isBlockCoverage":false},{"functionName":"Stack","ranges":[{"startOffset":16457,"endOffset":16562,"count":4}],"isBlockCoverage":true},{"functionName":"stackClear","ranges":[{"startOffset":16670,"endOffset":16745,"count":0}],"isBlockCoverage":false},{"functionName":"stackDelete","ranges":[{"startOffset":16984,"endOffset":17120,"count":27}],"isBlockCoverage":true},{"functionName":"stackGet","ranges":[{"startOffset":17305,"endOffset":17364,"count":27}],"isBlockCoverage":true},{"functionName":"stackHas","ranges":[{"startOffset":17601,"endOffset":17660,"count":0}],"isBlockCoverage":false},{"functionName":"stackSet","ranges":[{"startOffset":17898,"endOffset":18286,"count":27},{"startOffset":18168,"endOffset":18285,"count":0}],"isBlockCoverage":true},{"functionName":"arrayLikeKeys","ranges":[{"startOffset":18763,"endOffset":19810,"count":4},{"startOffset":18857,"endOffset":18878,"count":0},{"startOffset":18902,"endOffset":18911,"count":0},{"startOffset":18912,"endOffset":18930,"count":0},{"startOffset":18954,"endOffset":18963,"count":0},{"startOffset":18964,"endOffset":18974,"count":0},{"startOffset":18975,"endOffset":18997,"count":0},{"startOffset":19025,"endOffset":19033,"count":0},{"startOffset":19034,"endOffset":19043,"count":0},{"startOffset":19044,"endOffset":19053,"count":0},{"startOffset":19116,"endOffset":19120,"count":0},{"startOffset":19178,"endOffset":19791,"count":3},{"startOffset":19199,"endOffset":19233,"count":0},{"startOffset":19462,"endOffset":19501,"count":0},{"startOffset":19604,"endOffset":19670,"count":0},{"startOffset":19756,"endOffset":19787,"count":0}],"isBlockCoverage":true},{"functionName":"assignMergeValue","ranges":[{"startOffset":20074,"endOffset":20277,"count":49},{"startOffset":20177,"endOffset":20227,"count":0}],"isBlockCoverage":true},{"functionName":"assignValue","ranges":[{"startOffset":20648,"endOffset":20886,"count":0}],"isBlockCoverage":false},{"functionName":"assocIndexOf","ranges":[{"startOffset":21147,"endOffset":21315,"count":54},{"startOffset":21231,"endOffset":21300,"count":87},{"startOffset":21268,"endOffset":21296,"count":27},{"startOffset":21300,"endOffset":21314,"count":27}],"isBlockCoverage":true},{"functionName":"baseAssignValue","ranges":[{"startOffset":21579,"endOffset":21854,"count":49},{"startOffset":21651,"endOffset":21668,"count":0},{"startOffset":21670,"endOffset":21816,"count":0}],"isBlockCoverage":true},{"functionName":"baseGetTag","ranges":[{"startOffset":22565,"endOffset":22792,"count":31},{"startOffset":22615,"endOffset":22677,"count":0},{"startOffset":22743,"endOffset":22761,"count":0}],"isBlockCoverage":true},{"functionName":"baseIsArguments","ranges":[{"startOffset":22978,"endOffset":23075,"count":24},{"startOffset":23041,"endOffset":23072,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsNative","ranges":[{"startOffset":23296,"endOffset":23498,"count":3},{"startOffset":23370,"endOffset":23393,"count":0},{"startOffset":23441,"endOffset":23455,"count":0}],"isBlockCoverage":true},{"functionName":"baseIsTypedArray","ranges":[{"startOffset":23721,"endOffset":23856,"count":0}],"isBlockCoverage":false},{"functionName":"baseKeysIn","ranges":[{"startOffset":24070,"endOffset":24386,"count":27},{"startOffset":24125,"endOffset":24163,"count":0},{"startOffset":24247,"endOffset":24367,"count":46},{"startOffset":24280,"endOffset":24329,"count":0}],"isBlockCoverage":true},{"functionName":"baseMerge","ranges":[{"startOffset":24803,"endOffset":25402,"count":31},{"startOffset":24894,"endOffset":24911,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24930,"endOffset":25390,"count":49},{"startOffset":24966,"endOffset":24988,"count":4},{"startOffset":25018,"endOffset":25107,"count":27},{"startOffset":25107,"endOffset":25386,"count":22},{"startOffset":25247,"endOffset":25258,"count":0}],"isBlockCoverage":true},{"functionName":"baseMergeDeep","ranges":[{"startOffset":26039,"endOffset":27758,"count":27},{"startOffset":26256,"endOffset":26317,"count":0},{"startOffset":26422,"endOffset":26433,"count":0},{"startOffset":26555,"endOffset":26576,"count":23},{"startOffset":26603,"endOffset":26613,"count":23},{"startOffset":26614,"endOffset":26639,"count":23},{"startOffset":26681,"endOffset":26690,"count":23},{"startOffset":26691,"endOffset":26701,"count":23},{"startOffset":26703,"endOffset":27135,"count":4},{"startOffset":26734,"endOffset":26772,"count":0},{"startOffset":26817,"endOffset":26866,"count":0},{"startOffset":26890,"endOffset":26973,"count":0},{"startOffset":26998,"endOffset":27085,"count":0},{"startOffset":27135,"endOffset":27477,"count":23},{"startOffset":27173,"endOffset":27197,"count":0},{"startOffset":27261,"endOffset":27314,"count":0},{"startOffset":27350,"endOffset":27373,"count":0},{"startOffset":27436,"endOffset":27477,"count":0}],"isBlockCoverage":true},{"functionName":"baseRest","ranges":[{"startOffset":28067,"endOffset":28167,"count":1}],"isBlockCoverage":true},{"functionName":"baseSetToString","ranges":[{"startOffset":28466,"endOffset":28645,"count":1}],"isBlockCoverage":true},{"functionName":"cloneBuffer","ranges":[{"startOffset":28850,"endOffset":29091,"count":0}],"isBlockCoverage":false},{"functionName":"cloneArrayBuffer","ranges":[{"startOffset":29275,"endOffset":29461,"count":0}],"isBlockCoverage":false},{"functionName":"cloneTypedArray","ranges":[{"startOffset":29682,"endOffset":29898,"count":0}],"isBlockCoverage":false},{"functionName":"copyArray","ranges":[{"startOffset":30119,"endOffset":30324,"count":0}],"isBlockCoverage":false},{"functionName":"copyObject","ranges":[{"startOffset":30694,"endOffset":31240,"count":0}],"isBlockCoverage":false},{"functionName":"createAssigner","ranges":[{"startOffset":31423,"endOffset":32158,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31477,"endOffset":32154,"count":3},{"startOffset":31612,"endOffset":31623,"count":0},{"startOffset":31665,"endOffset":31676,"count":0},{"startOffset":31790,"endOffset":31801,"count":0},{"startOffset":31868,"endOffset":31949,"count":0},{"startOffset":32008,"endOffset":32131,"count":6},{"startOffset":32063,"endOffset":32125,"count":4}],"isBlockCoverage":true},{"functionName":"createBaseFor","ranges":[{"startOffset":32377,"endOffset":32774,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32422,"endOffset":32771,"count":31},{"startOffset":32603,"endOffset":32748,"count":49},{"startOffset":32637,"endOffset":32645,"count":0},{"startOffset":32718,"endOffset":32742,"count":0}],"isBlockCoverage":true},{"functionName":"getMapData","ranges":[{"startOffset":32948,"endOffset":33103,"count":0}],"isBlockCoverage":false},{"functionName":"getNative","ranges":[{"startOffset":33349,"endOffset":33471,"count":3},{"startOffset":33457,"endOffset":33468,"count":0}],"isBlockCoverage":true},{"functionName":"getRawTag","ranges":[{"startOffset":33672,"endOffset":34080,"count":0}],"isBlockCoverage":false},{"functionName":"initCloneObject","ranges":[{"startOffset":34236,"endOffset":34396,"count":23},{"startOffset":34389,"endOffset":34393,"count":0}],"isBlockCoverage":true},{"functionName":"isIndex","ranges":[{"startOffset":34671,"endOffset":34946,"count":3},{"startOffset":34758,"endOffset":34776,"count":0}],"isBlockCoverage":true},{"functionName":"isIterateeCall","ranges":[{"startOffset":35316,"endOffset":35644,"count":3},{"startOffset":35389,"endOffset":35412,"count":0},{"startOffset":35471,"endOffset":35527,"count":0},{"startOffset":35556,"endOffset":35574,"count":0},{"startOffset":35584,"endOffset":35626,"count":0}],"isBlockCoverage":true},{"functionName":"isKeyable","ranges":[{"startOffset":35847,"endOffset":36046,"count":0}],"isBlockCoverage":false},{"functionName":"isMasked","ranges":[{"startOffset":36235,"endOffset":36309,"count":3},{"startOffset":36283,"endOffset":36306,"count":0}],"isBlockCoverage":true},{"functionName":"isPrototype","ranges":[{"startOffset":36503,"endOffset":36678,"count":50},{"startOffset":36634,"endOffset":36648,"count":0}],"isBlockCoverage":true},{"functionName":"nativeKeysIn","ranges":[{"startOffset":36972,"endOffset":37137,"count":0}],"isBlockCoverage":false},{"functionName":"objectToString","ranges":[{"startOffset":37322,"endOffset":37399,"count":31}],"isBlockCoverage":true},{"functionName":"overRest","ranges":[{"startOffset":37754,"endOffset":38318,"count":1},{"startOffset":37858,"endOffset":37865,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37880,"endOffset":38315,"count":3},{"startOffset":38052,"endOffset":38101,"count":9}],"isBlockCoverage":true},{"functionName":"safeGet","ranges":[{"startOffset":38563,"endOffset":38748,"count":76},{"startOffset":38623,"endOffset":38659,"count":0},{"startOffset":38661,"endOffset":38678,"count":0},{"startOffset":38706,"endOffset":38723,"count":0}],"isBlockCoverage":true},{"functionName":"shortOut","ranges":[{"startOffset":39310,"endOffset":39688,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39385,"endOffset":39685,"count":1},{"startOffset":39528,"endOffset":39606,"count":0}],"isBlockCoverage":true},{"functionName":"toSource","ranges":[{"startOffset":39849,"endOffset":40037,"count":3},{"startOffset":39951,"endOffset":40018,"count":0},{"startOffset":40022,"endOffset":40036,"count":0}],"isBlockCoverage":true},{"functionName":"eq","ranges":[{"startOffset":40720,"endOffset":40815,"count":136},{"startOffset":40773,"endOffset":40812,"count":109},{"startOffset":40793,"endOffset":40811,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41238,"endOffset":41270,"count":1}],"isBlockCoverage":true},{"functionName":"isArguments","ranges":[{"startOffset":41294,"endOffset":41434,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLike","ranges":[{"startOffset":42513,"endOffset":42616,"count":31},{"startOffset":42592,"endOffset":42613,"count":4}],"isBlockCoverage":true},{"functionName":"isArrayLikeObject","ranges":[{"startOffset":43142,"endOffset":43231,"count":4},{"startOffset":43207,"endOffset":43228,"count":0}],"isBlockCoverage":true},{"functionName":"isFunction","ranges":[{"startOffset":43947,"endOffset":44292,"count":7},{"startOffset":44000,"endOffset":44023,"count":0},{"startOffset":44235,"endOffset":44251,"count":4},{"startOffset":44252,"endOffset":44270,"count":4},{"startOffset":44271,"endOffset":44289,"count":4}],"isBlockCoverage":true},{"functionName":"isLength","ranges":[{"startOffset":44839,"endOffset":44967,"count":31},{"startOffset":44900,"endOffset":44917,"count":4},{"startOffset":44918,"endOffset":44935,"count":4},{"startOffset":44936,"endOffset":44964,"count":4}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":45550,"endOffset":45673,"count":135},{"startOffset":45627,"endOffset":45670,"count":112},{"startOffset":45648,"endOffset":45669,"count":31}],"isBlockCoverage":true},{"functionName":"isObjectLike","ranges":[{"startOffset":46172,"endOffset":46256,"count":51},{"startOffset":46226,"endOffset":46253,"count":24}],"isBlockCoverage":true},{"functionName":"isPlainObject","ranges":[{"startOffset":46857,"endOffset":47244,"count":23},{"startOffset":46951,"endOffset":46974,"count":0},{"startOffset":47032,"endOffset":47054,"count":0}],"isBlockCoverage":true},{"functionName":"toPlainObject","ranges":[{"startOffset":48238,"endOffset":48314,"count":0}],"isBlockCoverage":false},{"functionName":"keysIn","ranges":[{"startOffset":48822,"endOffset":48930,"count":31},{"startOffset":48877,"endOffset":48906,"count":4},{"startOffset":48907,"endOffset":48927,"count":27}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":49953,"endOffset":50054,"count":4}],"isBlockCoverage":true},{"functionName":"constant","ranges":[{"startOffset":50484,"endOffset":50557,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50520,"endOffset":50554,"count":0}],"isBlockCoverage":false},{"functionName":"identity","ranges":[{"startOffset":50856,"endOffset":50900,"count":3}],"isBlockCoverage":true},{"functionName":"stubFalse","ranges":[{"startOffset":51112,"endOffset":51152,"count":0}],"isBlockCoverage":false}]},{"scriptId":"906","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/swagger-ui-express/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10354,"count":1}],"isBlockCoverage":true},{"functionName":"trimQuery","ranges":[{"startOffset":323,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"toExternalScriptTag","ranges":[{"startOffset":4820,"endOffset":4899,"count":0}],"isBlockCoverage":false},{"functionName":"toInlineScriptTag","ranges":[{"startOffset":4901,"endOffset":4977,"count":0}],"isBlockCoverage":false},{"functionName":"toExternalStylesheetTag","ranges":[{"startOffset":4979,"endOffset":5069,"count":0}],"isBlockCoverage":false},{"functionName":"toTags","ranges":[{"startOffset":5071,"endOffset":5302,"count":3},{"startOffset":5149,"endOffset":5186,"count":0},{"startOffset":5223,"endOffset":5275,"count":0}],"isBlockCoverage":true},{"functionName":"generateHTML","ranges":[{"startOffset":5323,"endOffset":7637,"count":1},{"startOffset":5564,"endOffset":5591,"count":0},{"startOffset":5593,"endOffset":5999,"count":0},{"startOffset":6136,"endOffset":6140,"count":0},{"startOffset":6252,"endOffset":6269,"count":0},{"startOffset":6397,"endOffset":6413,"count":0},{"startOffset":6444,"endOffset":6458,"count":0},{"startOffset":6498,"endOffset":6555,"count":0},{"startOffset":6597,"endOffset":6649,"count":0},{"startOffset":7340,"endOffset":7352,"count":0}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":7651,"endOffset":8154,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7890,"endOffset":8152,"count":0}],"isBlockCoverage":false},{"functionName":"swaggerInitFn","ranges":[{"startOffset":8156,"endOffset":8449,"count":0}],"isBlockCoverage":false},{"functionName":"swaggerInitFunction","ranges":[{"startOffset":8477,"endOffset":9091,"count":0}],"isBlockCoverage":false},{"functionName":"swaggerAssetMiddleware","ranges":[{"startOffset":9122,"endOffset":9242,"count":1}],"isBlockCoverage":true},{"functionName":"serveFiles","ranges":[{"startOffset":9261,"endOffset":9641,"count":0}],"isBlockCoverage":false},{"functionName":"serveWithOptions","ranges":[{"startOffset":9720,"endOffset":9779,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":9797,"endOffset":10206,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9918,"endOffset":10054,"count":193},{"startOffset":9979,"endOffset":10033,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10123,"endOffset":10164,"count":0}],"isBlockCoverage":false}]},{"scriptId":"907","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/express/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":224,"count":1}],"isBlockCoverage":true}]},{"scriptId":"908","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/express/lib/express.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2409,"count":1}],"isBlockCoverage":true},{"functionName":"createApplication","ranges":[{"startOffset":696,"endOffset":1263,"count":1}],"isBlockCoverage":true},{"functionName":"app","ranges":[{"startOffset":739,"endOffset":801,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2096,"endOffset":2406,"count":17}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2164,"endOffset":2374,"count":0}],"isBlockCoverage":false}]},{"scriptId":"909","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/body-parser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2681,"count":1}],"isBlockCoverage":true},{"functionName":"bodyParser","ranges":[{"startOffset":1413,"endOffset":1886,"count":0}],"isBlockCoverage":false},{"functionName":"createParserGetter","ranges":[{"startOffset":1950,"endOffset":2047,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1996,"endOffset":2045,"count":4}],"isBlockCoverage":true},{"functionName":"loadParser","ranges":[{"startOffset":2095,"endOffset":2680,"count":4},{"startOffset":2194,"endOffset":2217,"count":0},{"startOffset":2299,"endOffset":2366,"count":1},{"startOffset":2371,"endOffset":2436,"count":1},{"startOffset":2441,"endOffset":2508,"count":1},{"startOffset":2513,"endOffset":2592,"count":1}],"isBlockCoverage":true}]},{"scriptId":"910","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/depd/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10932,"count":1}],"isBlockCoverage":true},{"functionName":"containsNamespace","ranges":[{"startOffset":347,"endOffset":666,"count":18},{"startOffset":573,"endOffset":617,"count":0},{"startOffset":619,"endOffset":644,"count":0}],"isBlockCoverage":true},{"functionName":"convertDataDescriptorToAccessor","ranges":[{"startOffset":730,"endOffset":1171,"count":0}],"isBlockCoverage":false},{"functionName":"createArgumentsString","ranges":[{"startOffset":1224,"endOffset":1369,"count":15}],"isBlockCoverage":true},{"functionName":"createStackString","ranges":[{"startOffset":1415,"endOffset":1674,"count":0}],"isBlockCoverage":false},{"functionName":"depd","ranges":[{"startOffset":1730,"endOffset":2308,"count":9},{"startOffset":1776,"endOffset":1839,"count":0}],"isBlockCoverage":true},{"functionName":"deprecate","ranges":[{"startOffset":1930,"endOffset":2024,"count":0}],"isBlockCoverage":false},{"functionName":"eehaslisteners","ranges":[{"startOffset":2624,"endOffset":2816,"count":0}],"isBlockCoverage":false},{"functionName":"isignored","ranges":[{"startOffset":2865,"endOffset":3095,"count":9},{"startOffset":2927,"endOffset":2980,"count":0}],"isBlockCoverage":true},{"functionName":"istraced","ranges":[{"startOffset":3143,"endOffset":3380,"count":9},{"startOffset":3207,"endOffset":3263,"count":0}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":3423,"endOffset":5120,"count":0}],"isBlockCoverage":false},{"functionName":"callSiteLocation","ranges":[{"startOffset":5167,"endOffset":5537,"count":24},{"startOffset":5242,"endOffset":5258,"count":0},{"startOffset":5363,"endOffset":5418,"count":0}],"isBlockCoverage":true},{"functionName":"defaultMessage","ranges":[{"startOffset":5593,"endOffset":6176,"count":0}],"isBlockCoverage":false},{"functionName":"formatPlain","ranges":[{"startOffset":6232,"endOffset":6668,"count":0}],"isBlockCoverage":false},{"functionName":"formatColor","ranges":[{"startOffset":6721,"endOffset":7264,"count":0}],"isBlockCoverage":false},{"functionName":"formatLocation","ranges":[{"startOffset":7305,"endOffset":7432,"count":0}],"isBlockCoverage":false},{"functionName":"getStack","ranges":[{"startOffset":7484,"endOffset":7903,"count":24}],"isBlockCoverage":true},{"functionName":"prepareObjectStackTrace","ranges":[{"startOffset":7950,"endOffset":8014,"count":24}],"isBlockCoverage":true},{"functionName":"wrapfunction","ranges":[{"startOffset":8080,"endOffset":8686,"count":15},{"startOffset":8150,"endOffset":8213,"count":0}],"isBlockCoverage":true},{"functionName":"wrapproperty","ranges":[{"startOffset":8740,"endOffset":9901,"count":0}],"isBlockCoverage":false},{"functionName":"DeprecationError","ranges":[{"startOffset":9955,"endOffset":10931,"count":0}],"isBlockCoverage":false}]},{"scriptId":"911","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":163,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":162,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":160,"count":0}],"isBlockCoverage":false}]},{"scriptId":"912","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/merge-descriptors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1215,"count":1}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":612,"endOffset":1214,"count":2},{"startOffset":663,"endOffset":721,"count":0},{"startOffset":735,"endOffset":792,"count":0},{"startOffset":824,"endOffset":872,"count":0}],"isBlockCoverage":true},{"functionName":"forEachOwnPropertyName","ranges":[{"startOffset":916,"endOffset":1196,"count":71},{"startOffset":1010,"endOffset":1054,"count":0}],"isBlockCoverage":true}]},{"scriptId":"913","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/express/lib/application.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14593,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":1425,"endOffset":1538,"count":1}],"isBlockCoverage":true},{"functionName":"defaultConfiguration","ranges":[{"startOffset":1630,"endOffset":3237,"count":1},{"startOffset":1697,"endOffset":1713,"count":0},{"startOffset":2984,"endOffset":3020,"count":0}],"isBlockCoverage":true},{"functionName":"onmount","ranges":[{"startOffset":2137,"endOffset":2636,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3073,"endOffset":3229,"count":0}],"isBlockCoverage":false},{"functionName":"lazyrouter","ranges":[{"startOffset":3477,"endOffset":3779,"count":6},{"startOffset":3522,"endOffset":3777,"count":1}],"isBlockCoverage":true},{"functionName":"handle","ranges":[{"startOffset":4028,"endOffset":4365,"count":5},{"startOffset":4261,"endOffset":4329,"count":0}],"isBlockCoverage":true},{"functionName":"use","ranges":[{"startOffset":4609,"endOffset":5784,"count":4},{"startOffset":4754,"endOffset":4965,"count":2},{"startOffset":4805,"endOffset":4824,"count":0},{"startOffset":4826,"endOffset":4853,"count":0},{"startOffset":5044,"endOffset":5117,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5202,"endOffset":5758,"count":6},{"startOffset":5267,"endOffset":5277,"count":1},{"startOffset":5321,"endOffset":5757,"count":0}],"isBlockCoverage":true},{"functionName":"mounted_app","ranges":[{"startOffset":5474,"endOffset":5701,"count":0}],"isBlockCoverage":false},{"functionName":"route","ranges":[{"startOffset":6012,"endOffset":6092,"count":0}],"isBlockCoverage":false},{"functionName":"engine","ranges":[{"startOffset":7349,"endOffset":7618,"count":0}],"isBlockCoverage":false},{"functionName":"param","ranges":[{"startOffset":7899,"endOffset":8130,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8439,"endOffset":9387,"count":45},{"startOffset":8498,"endOffset":8788,"count":33},{"startOffset":8578,"endOffset":8610,"count":50},{"startOffset":8664,"endOffset":8706,"count":16},{"startOffset":8706,"endOffset":8788,"count":17},{"startOffset":8788,"endOffset":8935,"count":12},{"startOffset":8935,"endOffset":9005,"count":1},{"startOffset":9010,"endOffset":9103,"count":1},{"startOffset":9108,"endOffset":9365,"count":1},{"startOffset":9369,"endOffset":9386,"count":12}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":9687,"endOffset":9779,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":10025,"endOffset":10091,"count":7}],"isBlockCoverage":true},{"functionName":"disabled","ranges":[{"startOffset":10332,"endOffset":10391,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":10508,"endOffset":10570,"count":1}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":10689,"endOffset":10753,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10835,"endOffset":11148,"count":34}],"isBlockCoverage":true},{"functionName":"app.<computed>","ranges":[{"startOffset":10869,"endOffset":11145,"count":28},{"startOffset":10937,"endOffset":10999,"count":26},{"startOffset":10999,"endOffset":11144,"count":2}],"isBlockCoverage":true},{"functionName":"all","ranges":[{"startOffset":11380,"endOffset":11611,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":12081,"endOffset":13530,"count":0}],"isBlockCoverage":false},{"functionName":"listen","ranges":[{"startOffset":14086,"endOffset":14196,"count":1}],"isBlockCoverage":true},{"functionName":"logerror","ranges":[{"startOffset":14279,"endOffset":14412,"count":0}],"isBlockCoverage":false},{"functionName":"tryRender","ranges":[{"startOffset":14460,"endOffset":14592,"count":0}],"isBlockCoverage":false}]},{"scriptId":"914","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/finalhandler/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6689,"count":1},{"startOffset":617,"endOffset":683,"count":0}],"isBlockCoverage":true},{"functionName":"defer","ranges":[{"startOffset":619,"endOffset":683,"count":0}],"isBlockCoverage":false},{"functionName":"createHtmlDocument","ranges":[{"startOffset":810,"endOffset":1209,"count":0}],"isBlockCoverage":false},{"functionName":"finalhandler","ranges":[{"startOffset":1455,"endOffset":2786,"count":5},{"startOffset":1520,"endOffset":1525,"count":0},{"startOffset":1569,"endOffset":1592,"count":0},{"startOffset":1593,"endOffset":1609,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1674,"endOffset":2784,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorHeaders","ranges":[{"startOffset":2888,"endOffset":3202,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorMessage","ranges":[{"startOffset":3381,"endOffset":3730,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorStatusCode","ranges":[{"startOffset":3836,"endOffset":4172,"count":0}],"isBlockCoverage":false},{"functionName":"getResourceName","ranges":[{"startOffset":4419,"endOffset":4546,"count":0}],"isBlockCoverage":false},{"functionName":"getResponseStatusCode","ranges":[{"startOffset":4658,"endOffset":4890,"count":0}],"isBlockCoverage":false},{"functionName":"headersSent","ranges":[{"startOffset":5014,"endOffset":5139,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5327,"endOffset":6352,"count":0}],"isBlockCoverage":false},{"functionName":"setHeaders","ranges":[{"startOffset":6477,"endOffset":6688,"count":0}],"isBlockCoverage":false}]},{"scriptId":"915","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/finalhandler/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":263,"count":1},{"startOffset":165,"endOffset":212,"count":0}],"isBlockCoverage":true}]},{"scriptId":"916","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/finalhandler/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6015,"count":1},{"startOffset":1443,"endOffset":1650,"count":0},{"startOffset":1674,"endOffset":1690,"count":0},{"startOffset":1732,"endOffset":1776,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":661,"endOffset":710,"count":170}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":719,"endOffset":1172,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1462,"endOffset":1474,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":1847,"endOffset":1976,"count":1},{"startOffset":1915,"endOffset":1952,"count":0}],"isBlockCoverage":true},{"functionName":"exports.formatters.o","ranges":[{"startOffset":2063,"endOffset":2244,"count":0}],"isBlockCoverage":false},{"functionName":"exports.formatters.O","ranges":[{"startOffset":2345,"endOffset":2448,"count":0}],"isBlockCoverage":false},{"functionName":"formatArgs","ranges":[{"startOffset":2522,"endOffset":2965,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3056,"endOffset":3140,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3222,"endOffset":3498,"count":1},{"startOffset":3449,"endOffset":3496,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3615,"endOffset":3662,"count":1}],"isBlockCoverage":true},{"functionName":"createWritableStdioStream","ranges":[{"startOffset":3866,"endOffset":5545,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":5710,"endOffset":5918,"count":1},{"startOffset":5848,"endOffset":5916,"count":0}],"isBlockCoverage":true}]},{"scriptId":"917","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/finalhandler/node_modules/debug/src/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4394,"count":1}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":818,"endOffset":1071,"count":1},{"startOffset":895,"endOffset":1003,"count":12}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1200,"endOffset":2957,"count":1}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1237,"endOffset":2646,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3117,"endOffset":3657,"count":1},{"startOffset":3267,"endOffset":3279,"count":0},{"startOffset":3392,"endOffset":3651,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":3711,"endOffset":3755,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":3897,"endOffset":4206,"count":1},{"startOffset":3992,"endOffset":4062,"count":0},{"startOffset":4119,"endOffset":4188,"count":0}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":4294,"endOffset":4393,"count":0}],"isBlockCoverage":false}]},{"scriptId":"918","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/finalhandler/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2764,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":407,"endOffset":783,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":907,"endOffset":1910,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2008,"endOffset":2285,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2382,"endOffset":2546,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2582,"endOffset":2763,"count":0}],"isBlockCoverage":false}]},{"scriptId":"919","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/encodeurl/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1586,"count":1}],"isBlockCoverage":true},{"functionName":"encodeUrl","ranges":[{"startOffset":1411,"endOffset":1585,"count":0}],"isBlockCoverage":false}]},{"scriptId":"920","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/escape-html/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1362,"count":1}],"isBlockCoverage":true},{"functionName":"escapeHtml","ranges":[{"startOffset":493,"endOffset":1361,"count":0}],"isBlockCoverage":false}]},{"scriptId":"921","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/on-finished/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4430,"count":1},{"startOffset":489,"endOffset":555,"count":0}],"isBlockCoverage":true},{"functionName":"defer","ranges":[{"startOffset":491,"endOffset":555,"count":0}],"isBlockCoverage":false},{"functionName":"onFinished","ranges":[{"startOffset":752,"endOffset":969,"count":0}],"isBlockCoverage":false},{"functionName":"isFinished","ranges":[{"startOffset":1083,"endOffset":1479,"count":0}],"isBlockCoverage":false},{"functionName":"attachFinishedListener","ranges":[{"startOffset":1604,"endOffset":2467,"count":0}],"isBlockCoverage":false},{"functionName":"attachListener","ranges":[{"startOffset":2577,"endOffset":2875,"count":0}],"isBlockCoverage":false},{"functionName":"createListener","ranges":[{"startOffset":2977,"endOffset":3314,"count":0}],"isBlockCoverage":false},{"functionName":"patchAssignSocket","ranges":[{"startOffset":3508,"endOffset":3808,"count":0}],"isBlockCoverage":false},{"functionName":"tryRequireAsyncHooks","ranges":[{"startOffset":3861,"endOffset":3973,"count":1},{"startOffset":3942,"endOffset":3971,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":4095,"endOffset":4429,"count":0}],"isBlockCoverage":false}]},{"scriptId":"922","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/ee-first/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1684,"count":1}],"isBlockCoverage":true},{"functionName":"first","ranges":[{"startOffset":288,"endOffset":1274,"count":0}],"isBlockCoverage":false},{"functionName":"listener","ranges":[{"startOffset":1327,"endOffset":1683,"count":0}],"isBlockCoverage":false}]},{"scriptId":"923","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/parseurl/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2809,"count":1}],"isBlockCoverage":true},{"functionName":"parseurl","ranges":[{"startOffset":467,"endOffset":806,"count":30},{"startOffset":539,"endOffset":589,"count":0},{"startOffset":648,"endOffset":702,"count":20},{"startOffset":702,"endOffset":805,"count":10}],"isBlockCoverage":true},{"functionName":"originalurl","ranges":[{"startOffset":945,"endOffset":1313,"count":0}],"isBlockCoverage":false},{"functionName":"fastparse","ranges":[{"startOffset":1432,"endOffset":2477,"count":10},{"startOffset":1528,"endOffset":1555,"count":0},{"startOffset":1809,"endOffset":2268,"count":124},{"startOffset":1850,"endOffset":2040,"count":0},{"startOffset":2047,"endOffset":2057,"count":0},{"startOffset":2073,"endOffset":2083,"count":0},{"startOffset":2099,"endOffset":2109,"count":0},{"startOffset":2125,"endOffset":2135,"count":0},{"startOffset":2151,"endOffset":2161,"count":0},{"startOffset":2177,"endOffset":2187,"count":0},{"startOffset":2203,"endOffset":2213,"count":0},{"startOffset":2220,"endOffset":2258,"count":0},{"startOffset":2320,"endOffset":2324,"count":0},{"startOffset":2410,"endOffset":2461,"count":0}],"isBlockCoverage":true},{"functionName":"fresh","ranges":[{"startOffset":2623,"endOffset":2808,"count":30},{"startOffset":2696,"endOffset":2721,"count":25},{"startOffset":2722,"endOffset":2776,"count":25},{"startOffset":2777,"endOffset":2806,"count":25}],"isBlockCoverage":true}]},{"scriptId":"924","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/statuses/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2610,"count":1}],"isBlockCoverage":true},{"functionName":"createMessageToStatusCodeMap","ranges":[{"startOffset":906,"endOffset":1170,"count":1}],"isBlockCoverage":true},{"functionName":"forEachCode","ranges":[{"startOffset":999,"endOffset":1153,"count":63}],"isBlockCoverage":true},{"functionName":"createStatusCodeList","ranges":[{"startOffset":1231,"endOffset":1359,"count":1}],"isBlockCoverage":true},{"functionName":"mapCode","ranges":[{"startOffset":1303,"endOffset":1356,"count":63}],"isBlockCoverage":true},{"functionName":"getStatusCode","ranges":[{"startOffset":1424,"endOffset":1656,"count":0}],"isBlockCoverage":false},{"functionName":"getStatusMessage","ranges":[{"startOffset":1721,"endOffset":1913,"count":0}],"isBlockCoverage":false},{"functionName":"status","ranges":[{"startOffset":2288,"endOffset":2609,"count":0}],"isBlockCoverage":false}]},{"scriptId":"925","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/unpipe/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1118,"count":1}],"isBlockCoverage":true},{"functionName":"hasPipeDataListeners","ranges":[{"startOffset":242,"endOffset":460,"count":0}],"isBlockCoverage":false},{"functionName":"unpipe","ranges":[{"startOffset":553,"endOffset":1117,"count":0}],"isBlockCoverage":false}]},{"scriptId":"926","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/express/lib/router/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15123,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":922,"endOffset":1316,"count":2},{"startOffset":963,"endOffset":968,"count":1}],"isBlockCoverage":true},{"functionName":"router","ranges":[{"startOffset":973,"endOffset":1045,"count":5}],"isBlockCoverage":true},{"functionName":"param","ranges":[{"startOffset":2469,"endOffset":3280,"count":0}],"isBlockCoverage":false},{"functionName":"handle","ranges":[{"startOffset":3359,"endOffset":8105,"count":10},{"startOffset":3857,"endOffset":3862,"count":5},{"startOffset":4075,"endOffset":4233,"count":0},{"startOffset":4326,"endOffset":4336,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4099,"endOffset":4227,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":4352,"endOffset":6866,"count":25},{"startOffset":4416,"endOffset":4422,"count":0},{"startOffset":4483,"endOffset":4549,"count":0},{"startOffset":4612,"endOffset":4740,"count":0},{"startOffset":4804,"endOffset":4855,"count":0},{"startOffset":4917,"endOffset":4976,"count":0},{"startOffset":5022,"endOffset":5066,"count":0},{"startOffset":5155,"endOffset":5193,"count":0},{"startOffset":5299,"endOffset":5320,"count":45},{"startOffset":5322,"endOffset":6181,"count":45},{"startOffset":5457,"endOffset":5541,"count":0},{"startOffset":5569,"endOffset":5596,"count":20},{"startOffset":5596,"endOffset":5616,"count":25},{"startOffset":5616,"endOffset":5690,"count":20},{"startOffset":5690,"endOffset":5714,"count":5},{"startOffset":5714,"endOffset":5816,"count":0},{"startOffset":5816,"endOffset":5971,"count":5},{"startOffset":5971,"endOffset":5994,"count":0},{"startOffset":5996,"endOffset":6055,"count":0},{"startOffset":6055,"endOffset":6121,"count":5},{"startOffset":6121,"endOffset":6141,"count":0},{"startOffset":6143,"endOffset":6175,"count":0},{"startOffset":6223,"endOffset":6261,"count":0},{"startOffset":6320,"endOffset":6352,"count":5},{"startOffset":6431,"endOffset":6472,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6623,"endOffset":6860,"count":25},{"startOffset":6655,"endOffset":6696,"count":0},{"startOffset":6713,"endOffset":6767,"count":5},{"startOffset":6767,"endOffset":6838,"count":20}],"isBlockCoverage":true},{"functionName":"trim_prefix","ranges":[{"startOffset":6870,"endOffset":8103,"count":20},{"startOffset":6961,"endOffset":7893,"count":5},{"startOffset":7061,"endOffset":7110,"count":0},{"startOffset":7224,"endOffset":7236,"count":0},{"startOffset":7238,"endOffset":7261,"count":0},{"startOffset":7633,"endOffset":7702,"count":0},{"startOffset":7825,"endOffset":7867,"count":0},{"startOffset":7981,"endOffset":8042,"count":0}],"isBlockCoverage":true},{"functionName":"process_params","ranges":[{"startOffset":8193,"endOffset":9886,"count":25},{"startOffset":8412,"endOffset":8436,"count":22},{"startOffset":8436,"endOffset":9885,"count":3}],"isBlockCoverage":true},{"functionName":"param","ranges":[{"startOffset":8619,"endOffset":9440,"count":6},{"startOffset":8654,"endOffset":8685,"count":0},{"startOffset":8714,"endOffset":8956,"count":3},{"startOffset":8958,"endOffset":8987,"count":3},{"startOffset":8987,"endOffset":9171,"count":0},{"startOffset":9173,"endOffset":9439,"count":0}],"isBlockCoverage":true},{"functionName":"paramCallback","ranges":[{"startOffset":9472,"endOffset":9872,"count":0}],"isBlockCoverage":false},{"functionName":"use","ranges":[{"startOffset":10432,"endOffset":11459,"count":8},{"startOffset":10580,"endOffset":10791,"count":6},{"startOffset":10631,"endOffset":10650,"count":0},{"startOffset":10652,"endOffset":10679,"count":0},{"startOffset":10882,"endOffset":10958,"count":0},{"startOffset":11069,"endOffset":11174,"count":0},{"startOffset":11239,"endOffset":11255,"count":2}],"isBlockCoverage":true},{"functionName":"route","ranges":[{"startOffset":11755,"endOffset":12018,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12083,"endOffset":12249,"count":35}],"isBlockCoverage":true},{"functionName":"proto.<computed>","ranges":[{"startOffset":12119,"endOffset":12246,"count":6}],"isBlockCoverage":true},{"functionName":"appendMethods","ranges":[{"startOffset":12292,"endOffset":12484,"count":0}],"isBlockCoverage":false},{"functionName":"getPathname","ranges":[{"startOffset":12513,"endOffset":12629,"count":25},{"startOffset":12588,"endOffset":12627,"count":0}],"isBlockCoverage":true},{"functionName":"getProtohost","ranges":[{"startOffset":12668,"endOffset":13062,"count":10},{"startOffset":12792,"endOffset":12886,"count":0},{"startOffset":12891,"endOffset":12903,"count":0},{"startOffset":12993,"endOffset":13044,"count":0},{"startOffset":13049,"endOffset":13060,"count":0}],"isBlockCoverage":true},{"functionName":"gettype","ranges":[{"startOffset":13094,"endOffset":13291,"count":0}],"isBlockCoverage":false},{"functionName":"matchLayer","ranges":[{"startOffset":13391,"endOffset":13503,"count":45},{"startOffset":13468,"endOffset":13501,"count":0}],"isBlockCoverage":true},{"functionName":"mergeParams","ranges":[{"startOffset":13540,"endOffset":14198,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":14236,"endOffset":14638,"count":10},{"startOffset":14399,"endOffset":14466,"count":30}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14477,"endOffset":14635,"count":0}],"isBlockCoverage":false},{"functionName":"sendOptionsResponse","ranges":[{"startOffset":14668,"endOffset":14847,"count":0}],"isBlockCoverage":false},{"functionName":"wrap","ranges":[{"startOffset":14868,"endOffset":15122,"count":0}],"isBlockCoverage":false}]},{"scriptId":"927","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/express/lib/router/route.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4399,"count":1}],"isBlockCoverage":true},{"functionName":"Route","ranges":[{"startOffset":663,"endOffset":818,"count":8}],"isBlockCoverage":true},{"functionName":"_handles_method","ranges":[{"startOffset":925,"endOffset":1222,"count":5},{"startOffset":985,"endOffset":1007,"count":0},{"startOffset":1100,"endOffset":1108,"count":0},{"startOffset":1132,"endOffset":1156,"count":0},{"startOffset":1158,"endOffset":1181,"count":0}],"isBlockCoverage":true},{"functionName":"_options","ranges":[{"startOffset":1315,"endOffset":1622,"count":0}],"isBlockCoverage":false},{"functionName":"dispatch","ranges":[{"startOffset":1710,"endOffset":2672,"count":5},{"startOffset":1829,"endOffset":1853,"count":0},{"startOffset":1935,"endOffset":1947,"count":0},{"startOffset":1973,"endOffset":1997,"count":0},{"startOffset":1999,"endOffset":2024,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":2060,"endOffset":2670,"count":5},{"startOffset":2121,"endOffset":2139,"count":0},{"startOffset":2141,"endOffset":2169,"count":0},{"startOffset":2212,"endOffset":2231,"count":0},{"startOffset":2233,"endOffset":2263,"count":0},{"startOffset":2309,"endOffset":2353,"count":0},{"startOffset":2422,"endOffset":2452,"count":0},{"startOffset":2503,"endOffset":2526,"count":0},{"startOffset":2541,"endOffset":2595,"count":0}],"isBlockCoverage":true},{"functionName":"all","ranges":[{"startOffset":3281,"endOffset":3768,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3787,"endOffset":4396,"count":34}],"isBlockCoverage":true},{"functionName":"Route.<computed>","ranges":[{"startOffset":3833,"endOffset":4393,"count":8},{"startOffset":3941,"endOffset":4371,"count":9},{"startOffset":4015,"endOffset":4186,"count":0}],"isBlockCoverage":true}]},{"scriptId":"928","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/express/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":263,"count":1},{"startOffset":165,"endOffset":212,"count":0}],"isBlockCoverage":true}]},{"scriptId":"929","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/express/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6015,"count":1},{"startOffset":1443,"endOffset":1650,"count":0},{"startOffset":1674,"endOffset":1690,"count":0},{"startOffset":1732,"endOffset":1776,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":661,"endOffset":710,"count":170}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":719,"endOffset":1172,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1462,"endOffset":1474,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":1847,"endOffset":1976,"count":5},{"startOffset":1915,"endOffset":1952,"count":0}],"isBlockCoverage":true},{"functionName":"exports.formatters.o","ranges":[{"startOffset":2063,"endOffset":2244,"count":0}],"isBlockCoverage":false},{"functionName":"exports.formatters.O","ranges":[{"startOffset":2345,"endOffset":2448,"count":0}],"isBlockCoverage":false},{"functionName":"formatArgs","ranges":[{"startOffset":2522,"endOffset":2965,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3056,"endOffset":3140,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3222,"endOffset":3498,"count":1},{"startOffset":3449,"endOffset":3496,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3615,"endOffset":3662,"count":1}],"isBlockCoverage":true},{"functionName":"createWritableStdioStream","ranges":[{"startOffset":3866,"endOffset":5545,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":5710,"endOffset":5918,"count":5},{"startOffset":5848,"endOffset":5916,"count":0}],"isBlockCoverage":true}]},{"scriptId":"930","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/express/node_modules/debug/src/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4394,"count":1}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":818,"endOffset":1071,"count":5},{"startOffset":895,"endOffset":1003,"count":85}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1200,"endOffset":2957,"count":5}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1237,"endOffset":2646,"count":98},{"startOffset":1304,"endOffset":1422,"count":0},{"startOffset":1649,"endOffset":2583,"count":0},{"startOffset":2584,"endOffset":2612,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1957,"endOffset":2445,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3117,"endOffset":3657,"count":1},{"startOffset":3267,"endOffset":3279,"count":0},{"startOffset":3392,"endOffset":3651,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":3711,"endOffset":3755,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":3897,"endOffset":4206,"count":5},{"startOffset":3992,"endOffset":4062,"count":0},{"startOffset":4119,"endOffset":4188,"count":0}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":4294,"endOffset":4393,"count":0}],"isBlockCoverage":false}]},{"scriptId":"931","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/express/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2764,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":407,"endOffset":783,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":907,"endOffset":1910,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2008,"endOffset":2285,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2382,"endOffset":2546,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2582,"endOffset":2763,"count":0}],"isBlockCoverage":false}]},{"scriptId":"932","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/array-flatten/array-flatten.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1195,"count":1}],"isBlockCoverage":true},{"functionName":"flattenWithDepth","ranges":[{"startOffset":230,"endOffset":510,"count":0}],"isBlockCoverage":false},{"functionName":"flattenForever","ranges":[{"startOffset":659,"endOffset":904,"count":21},{"startOffset":742,"endOffset":885,"count":24},{"startOffset":800,"endOffset":843,"count":1},{"startOffset":843,"endOffset":881,"count":23}],"isBlockCoverage":true},{"functionName":"arrayFlatten","ranges":[{"startOffset":1045,"endOffset":1194,"count":20},{"startOffset":1147,"endOffset":1193,"count":0}],"isBlockCoverage":true}]},{"scriptId":"933","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/express/lib/router/layer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3296,"count":1}],"isBlockCoverage":true},{"functionName":"Layer","ranges":[{"startOffset":486,"endOffset":951,"count":34},{"startOffset":554,"endOffset":600,"count":9},{"startOffset":600,"endOffset":647,"count":25},{"startOffset":647,"endOffset":652,"count":0},{"startOffset":697,"endOffset":713,"count":4},{"startOffset":928,"endOffset":949,"count":14}],"isBlockCoverage":true},{"functionName":"handle_error","ranges":[{"startOffset":1146,"endOffset":1385,"count":0}],"isBlockCoverage":false},{"functionName":"handle","ranges":[{"startOffset":1561,"endOffset":1775,"count":30},{"startOffset":1641,"endOffset":1703,"count":0},{"startOffset":1741,"endOffset":1773,"count":0}],"isBlockCoverage":true},{"functionName":"match","ranges":[{"startOffset":1943,"endOffset":2872,"count":45},{"startOffset":2092,"endOffset":2161,"count":15},{"startOffset":2161,"endOffset":2249,"count":30},{"startOffset":2249,"endOffset":2343,"count":0},{"startOffset":2343,"endOffset":2421,"count":30},{"startOffset":2421,"endOffset":2500,"count":20},{"startOffset":2500,"endOffset":2658,"count":10},{"startOffset":2658,"endOffset":2854,"count":3},{"startOffset":2776,"endOffset":2815,"count":0},{"startOffset":2854,"endOffset":2871,"count":10}],"isBlockCoverage":true},{"functionName":"decode_param","ranges":[{"startOffset":2965,"endOffset":3295,"count":3},{"startOffset":3045,"endOffset":3066,"count":0},{"startOffset":3116,"endOffset":3293,"count":0}],"isBlockCoverage":true}]},{"scriptId":"934","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/path-to-regexp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3328,"count":1}],"isBlockCoverage":true},{"functionName":"pathtoRegexp","ranges":[{"startOffset":520,"endOffset":3326,"count":25},{"startOffset":585,"endOffset":590,"count":0},{"startOffset":606,"endOffset":611,"count":0},{"startOffset":711,"endOffset":715,"count":0},{"startOffset":847,"endOffset":1033,"count":0},{"startOffset":1062,"endOffset":1447,"count":0},{"startOffset":1480,"endOffset":1484,"count":0},{"startOffset":1517,"endOffset":1522,"count":14},{"startOffset":1523,"endOffset":1529,"count":11},{"startOffset":2645,"endOffset":3148,"count":3},{"startOffset":2740,"endOffset":2768,"count":0},{"startOffset":2845,"endOffset":2868,"count":0},{"startOffset":2951,"endOffset":3134,"count":0},{"startOffset":3229,"endOffset":3234,"count":17},{"startOffset":3235,"endOffset":3287,"count":8},{"startOffset":3268,"endOffset":3272,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1300,"endOffset":1380,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1654,"endOffset":2280,"count":3},{"startOffset":1746,"endOffset":1751,"count":0},{"startOffset":2028,"endOffset":2032,"count":0},{"startOffset":2087,"endOffset":2094,"count":0},{"startOffset":2127,"endOffset":2160,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2302,"endOffset":2530,"count":0}],"isBlockCoverage":false}]},{"scriptId":"935","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/utils-merge/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":381,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":276,"endOffset":379,"count":1},{"startOffset":331,"endOffset":361,"count":0}],"isBlockCoverage":true}]},{"scriptId":"936","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/setprototypeof/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":407,"count":1},{"startOffset":77,"endOffset":147,"count":0}],"isBlockCoverage":true},{"functionName":"setProtoOf","ranges":[{"startOffset":149,"endOffset":222,"count":0}],"isBlockCoverage":false},{"functionName":"mixinProperties","ranges":[{"startOffset":224,"endOffset":406,"count":0}],"isBlockCoverage":false}]},{"scriptId":"937","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/express/lib/middleware/init.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":853,"count":1}],"isBlockCoverage":true},{"functionName":"exports.init","ranges":[{"startOffset":502,"endOffset":850,"count":1}],"isBlockCoverage":true},{"functionName":"expressInit","ranges":[{"startOffset":526,"endOffset":847,"count":5}],"isBlockCoverage":true}]},{"scriptId":"938","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/express/lib/middleware/query.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":885,"count":1}],"isBlockCoverage":true},{"functionName":"query","ranges":[{"startOffset":400,"endOffset":883,"count":1},{"startOffset":605,"endOffset":642,"count":0},{"startOffset":644,"endOffset":715,"count":0}],"isBlockCoverage":true},{"functionName":"query","ranges":[{"startOffset":726,"endOffset":880,"count":5}],"isBlockCoverage":true}]},{"scriptId":"939","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/qs/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":211,"count":1}],"isBlockCoverage":true}]},{"scriptId":"940","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/qs/lib/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10356,"count":1}],"isBlockCoverage":true},{"functionName":"brackets","ranges":[{"startOffset":217,"endOffset":280,"count":0}],"isBlockCoverage":false},{"functionName":"indices","ranges":[{"startOffset":315,"endOffset":393,"count":0}],"isBlockCoverage":false},{"functionName":"repeat","ranges":[{"startOffset":407,"endOffset":461,"count":0}],"isBlockCoverage":false},{"functionName":"pushToArray","ranges":[{"startOffset":582,"endOffset":690,"count":0}],"isBlockCoverage":false},{"functionName":"serializeDate","ranges":[{"startOffset":1118,"endOffset":1187,"count":0}],"isBlockCoverage":false},{"functionName":"isNonNullishPrimitive","ranges":[{"startOffset":1273,"endOffset":1477,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":1516,"endOffset":5632,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeStringifyOptions","ranges":[{"startOffset":5667,"endOffset":7889,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":7909,"endOffset":10354,"count":0}],"isBlockCoverage":false}]},{"scriptId":"941","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/qs/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6823,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":141,"endOffset":317,"count":1},{"startOffset":209,"endOffset":296,"count":256},{"startOffset":245,"endOffset":250,"count":16},{"startOffset":251,"endOffset":255,"count":240}],"isBlockCoverage":true},{"functionName":"compactQueue","ranges":[{"startOffset":342,"endOffset":780,"count":0}],"isBlockCoverage":false},{"functionName":"arrayToObject","ranges":[{"startOffset":803,"endOffset":1079,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":1094,"endOffset":2706,"count":0}],"isBlockCoverage":false},{"functionName":"assignSingleSource","ranges":[{"startOffset":2722,"endOffset":2897,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":2913,"endOffset":3294,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":3310,"endOffset":5309,"count":0}],"isBlockCoverage":false},{"functionName":"compact","ranges":[{"startOffset":5326,"endOffset":5934,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":5952,"endOffset":6048,"count":5}],"isBlockCoverage":true},{"functionName":"isBuffer","ranges":[{"startOffset":6066,"endOffset":6257,"count":0}],"isBlockCoverage":false},{"functionName":"combine","ranges":[{"startOffset":6274,"endOffset":6328,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMap","ranges":[{"startOffset":6346,"endOffset":6571,"count":0}],"isBlockCoverage":false}]},{"scriptId":"942","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/qs/lib/formats.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":476,"count":1}],"isBlockCoverage":true},{"functionName":"RFC1738","ranges":[{"startOffset":237,"endOffset":327,"count":0}],"isBlockCoverage":false},{"functionName":"RFC3986","ranges":[{"startOffset":346,"endOffset":408,"count":0}],"isBlockCoverage":false}]},{"scriptId":"943","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/qs/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9374,"count":1}],"isBlockCoverage":true},{"functionName":"interpretNumericEntities","ranges":[{"startOffset":567,"endOffset":717,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrayValue","ranges":[{"startOffset":742,"endOffset":907,"count":0}],"isBlockCoverage":false},{"functionName":"parseQueryStringValues","ranges":[{"startOffset":1550,"endOffset":3679,"count":0}],"isBlockCoverage":false},{"functionName":"parseObject","ranges":[{"startOffset":3700,"endOffset":4825,"count":0}],"isBlockCoverage":false},{"functionName":"parseQueryStringKeys","ranges":[{"startOffset":4844,"endOffset":6346,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeParseOptions","ranges":[{"startOffset":6377,"endOffset":8598,"count":5},{"startOffset":6431,"endOffset":6463,"count":0},{"startOffset":6525,"endOffset":6562,"count":0},{"startOffset":6564,"endOffset":6633,"count":0},{"startOffset":6679,"endOffset":6706,"count":0},{"startOffset":6707,"endOffset":6739,"count":0},{"startOffset":6741,"endOffset":6846,"count":0},{"startOffset":6920,"endOffset":6934,"count":0},{"startOffset":7028,"endOffset":7046,"count":0},{"startOffset":7138,"endOffset":7164,"count":0},{"startOffset":7225,"endOffset":7243,"count":0},{"startOffset":7324,"endOffset":7341,"count":0},{"startOffset":7458,"endOffset":7480,"count":0},{"startOffset":7556,"endOffset":7568,"count":0},{"startOffset":7639,"endOffset":7653,"count":0},{"startOffset":7762,"endOffset":7778,"count":0},{"startOffset":7947,"endOffset":7960,"count":0},{"startOffset":8124,"endOffset":8155,"count":0},{"startOffset":8257,"endOffset":8278,"count":0},{"startOffset":8416,"endOffset":8435,"count":0},{"startOffset":8534,"endOffset":8559,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":8618,"endOffset":9372,"count":5},{"startOffset":8724,"endOffset":8753,"count":0},{"startOffset":8793,"endOffset":8814,"count":0},{"startOffset":8826,"endOffset":8897,"count":0},{"startOffset":8898,"endOffset":8903,"count":0},{"startOffset":8940,"endOffset":8961,"count":0},{"startOffset":8962,"endOffset":8966,"count":0},{"startOffset":9103,"endOffset":9371,"count":0}],"isBlockCoverage":true}]},{"scriptId":"944","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/express/lib/view.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3325,"count":1}],"isBlockCoverage":true},{"functionName":"View","ranges":[{"startOffset":854,"endOffset":1853,"count":0}],"isBlockCoverage":false},{"functionName":"lookup","ranges":[{"startOffset":1962,"endOffset":2343,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":2485,"endOffset":2603,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":2750,"endOffset":3091,"count":0}],"isBlockCoverage":false},{"functionName":"tryStat","ranges":[{"startOffset":3189,"endOffset":3324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"945","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/express/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5871,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isAbsolute","ranges":[{"startOffset":1107,"endOffset":1345,"count":0}],"isBlockCoverage":false},{"functionName":"exports.normalizeType","ranges":[{"startOffset":1717,"endOffset":1835,"count":0}],"isBlockCoverage":false},{"functionName":"exports.normalizeTypes","ranges":[{"startOffset":1996,"endOffset":2140,"count":0}],"isBlockCoverage":false},{"functionName":"acceptParams","ranges":[{"startOffset":2669,"endOffset":3012,"count":0}],"isBlockCoverage":false},{"functionName":"exports.compileETag","ranges":[{"startOffset":3164,"endOffset":3523,"count":1},{"startOffset":3224,"endOffset":3245,"count":0},{"startOffset":3268,"endOffset":3278,"count":0},{"startOffset":3339,"endOffset":3363,"count":0},{"startOffset":3368,"endOffset":3420,"count":0},{"startOffset":3425,"endOffset":3503,"count":0}],"isBlockCoverage":true},{"functionName":"compileQueryParser","ranges":[{"startOffset":3682,"endOffset":4110,"count":1},{"startOffset":3761,"endOffset":3782,"count":0},{"startOffset":3805,"endOffset":3815,"count":0},{"startOffset":3820,"endOffset":3877,"count":0},{"startOffset":3882,"endOffset":3928,"count":0},{"startOffset":4004,"endOffset":4090,"count":0}],"isBlockCoverage":true},{"functionName":"exports.compileTrust","ranges":[{"startOffset":4283,"endOffset":4745,"count":1},{"startOffset":4332,"endOffset":4343,"count":0},{"startOffset":4365,"endOffset":4440,"count":0},{"startOffset":4473,"endOffset":4557,"count":0},{"startOffset":4590,"endOffset":4703,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4410,"endOffset":4435,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4520,"endOffset":4552,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4666,"endOffset":4698,"count":0}],"isBlockCoverage":false},{"functionName":"setCharset","ranges":[{"startOffset":4918,"endOffset":5173,"count":5},{"startOffset":4980,"endOffset":5002,"count":0}],"isBlockCoverage":true},{"functionName":"createETagGenerator","ranges":[{"startOffset":5331,"endOffset":5544,"count":2}],"isBlockCoverage":true},{"functionName":"generateETag","ranges":[{"startOffset":5381,"endOffset":5542,"count":5},{"startOffset":5465,"endOffset":5494,"count":0}],"isBlockCoverage":true},{"functionName":"parseExtendedQueryString","ranges":[{"startOffset":5656,"endOffset":5755,"count":5}],"isBlockCoverage":true},{"functionName":"newObject","ranges":[{"startOffset":5833,"endOffset":5870,"count":0}],"isBlockCoverage":false}]},{"scriptId":"946","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/safe-buffer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1670,"count":1},{"startOffset":438,"endOffset":550,"count":0}],"isBlockCoverage":true},{"functionName":"copyProps","ranges":[{"startOffset":241,"endOffset":327,"count":1},{"startOffset":296,"endOffset":325,"count":12}],"isBlockCoverage":true},{"functionName":"SafeBuffer","ranges":[{"startOffset":552,"endOffset":654,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.from","ranges":[{"startOffset":796,"endOffset":981,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.alloc","ranges":[{"startOffset":1002,"endOffset":1336,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.allocUnsafe","ranges":[{"startOffset":1363,"endOffset":1495,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.allocUnsafeSlow","ranges":[{"startOffset":1526,"endOffset":1669,"count":0}],"isBlockCoverage":false}]},{"scriptId":"947","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/content-disposition/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10594,"count":1}],"isBlockCoverage":true},{"functionName":"contentDisposition","ranges":[{"startOffset":4223,"endOffset":4508,"count":0}],"isBlockCoverage":false},{"functionName":"createparams","ranges":[{"startOffset":4683,"endOffset":5943,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":6124,"endOffset":6792,"count":0}],"isBlockCoverage":false},{"functionName":"decodefield","ranges":[{"startOffset":6908,"endOffset":7503,"count":0}],"isBlockCoverage":false},{"functionName":"getlatin1","ranges":[{"startOffset":7609,"endOffset":7739,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":7854,"endOffset":9380,"count":0}],"isBlockCoverage":false},{"functionName":"pdecode","ranges":[{"startOffset":9510,"endOffset":9589,"count":0}],"isBlockCoverage":false},{"functionName":"pencode","ranges":[{"startOffset":9697,"endOffset":9808,"count":0}],"isBlockCoverage":false},{"functionName":"qstring","ranges":[{"startOffset":9905,"endOffset":10011,"count":0}],"isBlockCoverage":false},{"functionName":"ustring","ranges":[{"startOffset":10128,"endOffset":10331,"count":0}],"isBlockCoverage":false},{"functionName":"ContentDisposition","ranges":[{"startOffset":10493,"endOffset":10593,"count":0}],"isBlockCoverage":false}]},{"scriptId":"948","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/content-type/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5002,"count":1}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":1786,"endOffset":2478,"count":5},{"startOffset":1849,"endOffset":1906,"count":0},{"startOffset":2005,"endOffset":2050,"count":0},{"startOffset":2321,"endOffset":2384,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":2587,"endOffset":3947,"count":7},{"startOffset":2628,"endOffset":2688,"count":0},{"startOffset":2782,"endOffset":2806,"count":2},{"startOffset":2811,"endOffset":2819,"count":5},{"startOffset":2855,"endOffset":2930,"count":0},{"startOffset":2996,"endOffset":3027,"count":5},{"startOffset":3032,"endOffset":3047,"count":2},{"startOffset":3080,"endOffset":3131,"count":0},{"startOffset":3224,"endOffset":3931,"count":5},{"startOffset":3386,"endOffset":3451,"count":0},{"startOffset":3591,"endOffset":3790,"count":0},{"startOffset":3866,"endOffset":3927,"count":0}],"isBlockCoverage":true},{"functionName":"getcontenttype","ranges":[{"startOffset":4054,"endOffset":4457,"count":2},{"startOffset":4143,"endOffset":4207,"count":0},{"startOffset":4363,"endOffset":4438,"count":0}],"isBlockCoverage":true},{"functionName":"qstring","ranges":[{"startOffset":4558,"endOffset":4851,"count":5},{"startOffset":4687,"endOffset":4735,"count":0},{"startOffset":4737,"endOffset":4850,"count":0}],"isBlockCoverage":true},{"functionName":"ContentType","ranges":[{"startOffset":4911,"endOffset":5001,"count":7}],"isBlockCoverage":true}]},{"scriptId":"949","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/send/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23502,"count":1}],"isBlockCoverage":true},{"functionName":"send","ranges":[{"startOffset":1552,"endOffset":1634,"count":0}],"isBlockCoverage":false},{"functionName":"SendStream","ranges":[{"startOffset":1789,"endOffset":3540,"count":0}],"isBlockCoverage":false},{"functionName":"etag","ranges":[{"startOffset":3773,"endOffset":3869,"count":0}],"isBlockCoverage":false},{"functionName":"hidden","ranges":[{"startOffset":4074,"endOffset":4207,"count":0}],"isBlockCoverage":false},{"functionName":"index","ranges":[{"startOffset":4456,"endOffset":4612,"count":0}],"isBlockCoverage":false},{"functionName":"root","ranges":[{"startOffset":4774,"endOffset":4880,"count":0}],"isBlockCoverage":false},{"functionName":"maxage","ranges":[{"startOffset":5258,"endOffset":5518,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":5691,"endOffset":6444,"count":0}],"isBlockCoverage":false},{"functionName":"hasTrailingSlash","ranges":[{"startOffset":6571,"endOffset":6652,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalGET","ranges":[{"startOffset":6790,"endOffset":6993,"count":0}],"isBlockCoverage":false},{"functionName":"isPreconditionFailure","ranges":[{"startOffset":7131,"endOffset":7777,"count":0}],"isBlockCoverage":false},{"functionName":"removeContentHeaderFields","ranges":[{"startOffset":7915,"endOffset":8164,"count":0}],"isBlockCoverage":false},{"functionName":"notModified","ranges":[{"startOffset":8263,"endOffset":8405,"count":0}],"isBlockCoverage":false},{"functionName":"headersAlreadySent","ranges":[{"startOffset":8519,"endOffset":8673,"count":0}],"isBlockCoverage":false},{"functionName":"isCachable","ranges":[{"startOffset":8863,"endOffset":9003,"count":0}],"isBlockCoverage":false},{"functionName":"onStatError","ranges":[{"startOffset":9112,"endOffset":9331,"count":0}],"isBlockCoverage":false},{"functionName":"isFresh","ranges":[{"startOffset":9445,"endOffset":9603,"count":0}],"isBlockCoverage":false},{"functionName":"isRangeFresh","ranges":[{"startOffset":9722,"endOffset":10149,"count":0}],"isBlockCoverage":false},{"functionName":"redirect","ranges":[{"startOffset":10252,"endOffset":10981,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":11102,"endOffset":12769,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":12870,"endOffset":15093,"count":0}],"isBlockCoverage":false},{"functionName":"sendFile","ranges":[{"startOffset":15207,"endOffset":16062,"count":0}],"isBlockCoverage":false},{"functionName":"sendIndex","ranges":[{"startOffset":16178,"endOffset":16639,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":16784,"endOffset":17326,"count":0}],"isBlockCoverage":false},{"functionName":"type","ranges":[{"startOffset":17481,"endOffset":17821,"count":0}],"isBlockCoverage":false},{"functionName":"setHeader","ranges":[{"startOffset":17998,"endOffset":18867,"count":0}],"isBlockCoverage":false},{"functionName":"clearHeaders","ranges":[{"startOffset":18954,"endOffset":19104,"count":0}],"isBlockCoverage":false},{"functionName":"collapseLeadingSlashes","ranges":[{"startOffset":19204,"endOffset":19386,"count":0}],"isBlockCoverage":false},{"functionName":"containsDotFile","ranges":[{"startOffset":19462,"endOffset":19655,"count":0}],"isBlockCoverage":false},{"functionName":"contentRange","ranges":[{"startOffset":19777,"endOffset":19903,"count":0}],"isBlockCoverage":false},{"functionName":"createHtmlDocument","ranges":[{"startOffset":20013,"endOffset":20308,"count":0}],"isBlockCoverage":false},{"functionName":"createHttpError","ranges":[{"startOffset":20441,"endOffset":20644,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":20793,"endOffset":20899,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaderNames","ranges":[{"startOffset":21014,"endOffset":21162,"count":0}],"isBlockCoverage":false},{"functionName":"hasListeners","ranges":[{"startOffset":21472,"endOffset":21662,"count":0}],"isBlockCoverage":false},{"functionName":"headersSent","ranges":[{"startOffset":21786,"endOffset":21911,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeList","ranges":[{"startOffset":22043,"endOffset":22293,"count":0}],"isBlockCoverage":false},{"functionName":"parseHttpDate","ranges":[{"startOffset":22380,"endOffset":22522,"count":0}],"isBlockCoverage":false},{"functionName":"parseTokenList","ranges":[{"startOffset":22599,"endOffset":23204,"count":0}],"isBlockCoverage":false},{"functionName":"setHeaders","ranges":[{"startOffset":23323,"endOffset":23501,"count":0}],"isBlockCoverage":false}]},{"scriptId":"950","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/http-errors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6391,"count":1}],"isBlockCoverage":true},{"functionName":"codeClass","ranges":[{"startOffset":783,"endOffset":863,"count":63}],"isBlockCoverage":true},{"functionName":"createError","ranges":[{"startOffset":936,"endOffset":2422,"count":0}],"isBlockCoverage":false},{"functionName":"createHttpErrorConstructor","ranges":[{"startOffset":2487,"endOffset":2668,"count":1}],"isBlockCoverage":true},{"functionName":"HttpError","ranges":[{"startOffset":2530,"endOffset":2616,"count":0}],"isBlockCoverage":false},{"functionName":"createClientErrorConstructor","ranges":[{"startOffset":2735,"endOffset":3762,"count":29}],"isBlockCoverage":true},{"functionName":"ClientError","ranges":[{"startOffset":2838,"endOffset":3548,"count":0}],"isBlockCoverage":false},{"functionName":"createIsHttpErrorFunction","ranges":[{"startOffset":3839,"endOffset":4211,"count":1}],"isBlockCoverage":true},{"functionName":"isHttpError","ranges":[{"startOffset":3897,"endOffset":4209,"count":0}],"isBlockCoverage":false},{"functionName":"createServerErrorConstructor","ranges":[{"startOffset":4278,"endOffset":5306,"count":12}],"isBlockCoverage":true},{"functionName":"ServerError","ranges":[{"startOffset":4381,"endOffset":5091,"count":0}],"isBlockCoverage":false},{"functionName":"nameFunc","ranges":[{"startOffset":5373,"endOffset":5574,"count":41}],"isBlockCoverage":true},{"functionName":"populateConstructorExports","ranges":[{"startOffset":5669,"endOffset":6223,"count":1}],"isBlockCoverage":true},{"functionName":"forEachCode","ranges":[{"startOffset":5751,"endOffset":6220,"count":63},{"startOffset":5889,"endOffset":5984,"count":29},{"startOffset":5991,"endOffset":6086,"count":12},{"startOffset":6113,"endOffset":6216,"count":41}],"isBlockCoverage":true},{"functionName":"toClassName","ranges":[{"startOffset":6290,"endOffset":6390,"count":41},{"startOffset":6361,"endOffset":6377,"count":40},{"startOffset":6382,"endOffset":6388,"count":1}],"isBlockCoverage":true}]},{"scriptId":"951","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/toidentifier/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":504,"count":1}],"isBlockCoverage":true},{"functionName":"toIdentifier","ranges":[{"startOffset":298,"endOffset":503,"count":63}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":366,"endOffset":452,"count":133}],"isBlockCoverage":true}]},{"scriptId":"952","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/send/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":263,"count":1},{"startOffset":165,"endOffset":212,"count":0}],"isBlockCoverage":true}]},{"scriptId":"953","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/send/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6015,"count":1},{"startOffset":1443,"endOffset":1650,"count":0},{"startOffset":1674,"endOffset":1690,"count":0},{"startOffset":1732,"endOffset":1776,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":661,"endOffset":710,"count":170}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":719,"endOffset":1172,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1462,"endOffset":1474,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":1847,"endOffset":1976,"count":1},{"startOffset":1915,"endOffset":1952,"count":0}],"isBlockCoverage":true},{"functionName":"exports.formatters.o","ranges":[{"startOffset":2063,"endOffset":2244,"count":0}],"isBlockCoverage":false},{"functionName":"exports.formatters.O","ranges":[{"startOffset":2345,"endOffset":2448,"count":0}],"isBlockCoverage":false},{"functionName":"formatArgs","ranges":[{"startOffset":2522,"endOffset":2965,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3056,"endOffset":3140,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3222,"endOffset":3498,"count":1},{"startOffset":3449,"endOffset":3496,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3615,"endOffset":3662,"count":1}],"isBlockCoverage":true},{"functionName":"createWritableStdioStream","ranges":[{"startOffset":3866,"endOffset":5545,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":5710,"endOffset":5918,"count":1},{"startOffset":5848,"endOffset":5916,"count":0}],"isBlockCoverage":true}]},{"scriptId":"954","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/send/node_modules/debug/src/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4394,"count":1}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":818,"endOffset":1071,"count":1},{"startOffset":895,"endOffset":1003,"count":4}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1200,"endOffset":2957,"count":1}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1237,"endOffset":2646,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3117,"endOffset":3657,"count":1},{"startOffset":3267,"endOffset":3279,"count":0},{"startOffset":3392,"endOffset":3651,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":3711,"endOffset":3755,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":3897,"endOffset":4206,"count":1},{"startOffset":3992,"endOffset":4062,"count":0},{"startOffset":4119,"endOffset":4188,"count":0}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":4294,"endOffset":4393,"count":0}],"isBlockCoverage":false}]},{"scriptId":"955","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/send/node_modules/debug/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2764,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":407,"endOffset":783,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":907,"endOffset":1910,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2008,"endOffset":2285,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2382,"endOffset":2546,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2582,"endOffset":2763,"count":0}],"isBlockCoverage":false}]},{"scriptId":"956","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/destroy/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4258,"count":1}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":556,"endOffset":927,"count":0}],"isBlockCoverage":false},{"functionName":"destroyReadStream","ranges":[{"startOffset":1004,"endOffset":1182,"count":0}],"isBlockCoverage":false},{"functionName":"closeZlibStream","ranges":[{"startOffset":1372,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"destroyZlibStream","ranges":[{"startOffset":2143,"endOffset":3053,"count":0}],"isBlockCoverage":false},{"functionName":"hasDestroy","ranges":[{"startOffset":3112,"endOffset":3222,"count":0}],"isBlockCoverage":false},{"functionName":"isEventEmitter","ranges":[{"startOffset":3282,"endOffset":3352,"count":0}],"isBlockCoverage":false},{"functionName":"isFsReadStream","ranges":[{"startOffset":3423,"endOffset":3497,"count":0}],"isBlockCoverage":false},{"functionName":"isZlibStream","ranges":[{"startOffset":3559,"endOffset":3861,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":3903,"endOffset":3922,"count":0}],"isBlockCoverage":false},{"functionName":"onDrainClearBinding","ranges":[{"startOffset":4020,"endOffset":4079,"count":0}],"isBlockCoverage":false},{"functionName":"onOpenClose","ranges":[{"startOffset":4138,"endOffset":4257,"count":0}],"isBlockCoverage":false}]},{"scriptId":"957","url":"node:internal/fs/streams","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15837,"count":1}],"isBlockCoverage":false},{"functionName":"_construct","ranges":[{"startOffset":1129,"endOffset":2067,"count":0}],"isBlockCoverage":false},{"functionName":"FileHandleOperations","ranges":[{"startOffset":2163,"endOffset":3282,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":3287,"endOffset":3538,"count":0}],"isBlockCoverage":false},{"functionName":"_close","ranges":[{"startOffset":3542,"endOffset":3669,"count":0}],"isBlockCoverage":false},{"functionName":"importFd","ranges":[{"startOffset":3673,"endOffset":4702,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream","ranges":[{"startOffset":4706,"endOffset":6514,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6709,"endOffset":6766,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6771,"endOffset":6830,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6869,"endOffset":6896,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._read","ranges":[{"startOffset":7077,"endOffset":8254,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._destroy","ranges":[{"startOffset":8291,"endOffset":8864,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.close","ranges":[{"startOffset":8898,"endOffset":8987,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9071,"endOffset":9105,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":9138,"endOffset":11211,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11409,"endOffset":11466,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":11471,"endOffset":11530,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11570,"endOffset":11597,"count":0}],"isBlockCoverage":false},{"functionName":"writeAll","ranges":[{"startOffset":11753,"endOffset":12573,"count":0}],"isBlockCoverage":false},{"functionName":"writevAll","ranges":[{"startOffset":12577,"endOffset":13421,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._write","ranges":[{"startOffset":13456,"endOffset":13855,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._writev","ranges":[{"startOffset":13892,"endOffset":14480,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._destroy","ranges":[{"startOffset":14518,"endOffset":15091,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.close","ranges":[{"startOffset":15126,"endOffset":15526,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15715,"endOffset":15749,"count":0}],"isBlockCoverage":false}]},{"scriptId":"958","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/etag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2479,"count":1}],"isBlockCoverage":true},{"functionName":"entitytag","ranges":[{"startOffset":459,"endOffset":918,"count":5},{"startOffset":516,"endOffset":589,"count":0},{"startOffset":809,"endOffset":844,"count":0}],"isBlockCoverage":true},{"functionName":"etag","ranges":[{"startOffset":1091,"endOffset":1679,"count":5},{"startOffset":1147,"endOffset":1207,"count":0},{"startOffset":1351,"endOffset":1360,"count":0},{"startOffset":1459,"endOffset":1543,"count":0},{"startOffset":1594,"endOffset":1611,"count":0},{"startOffset":1672,"endOffset":1677,"count":0}],"isBlockCoverage":true},{"functionName":"isstats","ranges":[{"startOffset":1795,"endOffset":2226,"count":5},{"startOffset":1901,"endOffset":1922,"count":0},{"startOffset":2003,"endOffset":2050,"count":0},{"startOffset":2051,"endOffset":2072,"count":0},{"startOffset":2073,"endOffset":2120,"count":0},{"startOffset":2121,"endOffset":2140,"count":0},{"startOffset":2141,"endOffset":2171,"count":0},{"startOffset":2172,"endOffset":2192,"count":0},{"startOffset":2193,"endOffset":2224,"count":0}],"isBlockCoverage":true},{"functionName":"stattag","ranges":[{"startOffset":2326,"endOffset":2478,"count":0}],"isBlockCoverage":false}]},{"scriptId":"959","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/fresh/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2711,"count":1}],"isBlockCoverage":true},{"functionName":"fresh","ranges":[{"startOffset":522,"endOffset":1800,"count":2},{"startOffset":762,"endOffset":1036,"count":0},{"startOffset":1038,"endOffset":1117,"count":0},{"startOffset":1119,"endOffset":1799,"count":0}],"isBlockCoverage":true},{"functionName":"parseHttpDate","ranges":[{"startOffset":1887,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"parseTokenList","ranges":[{"startOffset":2175,"endOffset":2710,"count":0}],"isBlockCoverage":false}]},{"scriptId":"960","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/mime/mime.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2726,"count":1}],"isBlockCoverage":true},{"functionName":"Mime","ranges":[{"startOffset":53,"endOffset":220,"count":1}],"isBlockCoverage":true},{"functionName":"Mime.define","ranges":[{"startOffset":562,"endOffset":1094,"count":1},{"startOffset":603,"endOffset":1092,"count":844},{"startOffset":673,"endOffset":953,"count":1069},{"startOffset":708,"endOffset":730,"count":0},{"startOffset":732,"endOffset":912,"count":0}],"isBlockCoverage":true},{"functionName":"Mime.load","ranges":[{"startOffset":1346,"endOffset":1776,"count":0}],"isBlockCoverage":false},{"functionName":"Mime.lookup","ranges":[{"startOffset":1852,"endOffset":1999,"count":1},{"startOffset":1964,"endOffset":1975,"count":0},{"startOffset":1976,"endOffset":1996,"count":0}],"isBlockCoverage":true},{"functionName":"Mime.extension","ranges":[{"startOffset":2090,"endOffset":2217,"count":0}],"isBlockCoverage":false},{"functionName":"lookup","ranges":[{"startOffset":2538,"endOffset":2698,"count":5},{"startOffset":2683,"endOffset":2693,"count":0}],"isBlockCoverage":true}]},{"scriptId":"961","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/range-parser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2900,"count":1}],"isBlockCoverage":true},{"functionName":"rangeParser","ranges":[{"startOffset":401,"endOffset":1535,"count":0}],"isBlockCoverage":false},{"functionName":"combineRanges","ranges":[{"startOffset":1600,"endOffset":2281,"count":0}],"isBlockCoverage":false},{"functionName":"mapWithIndex","ranges":[{"startOffset":2350,"endOffset":2466,"count":0}],"isBlockCoverage":false},{"functionName":"mapWithoutIndex","ranges":[{"startOffset":2540,"endOffset":2634,"count":0}],"isBlockCoverage":false},{"functionName":"sortByRangeIndex","ranges":[{"startOffset":2699,"endOffset":2762,"count":0}],"isBlockCoverage":false},{"functionName":"sortByRangeStart","ranges":[{"startOffset":2836,"endOffset":2899,"count":0}],"isBlockCoverage":false}]},{"scriptId":"962","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":163,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":162,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":160,"count":0}],"isBlockCoverage":false}]},{"scriptId":"963","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/proxy-addr/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6000,"count":1}],"isBlockCoverage":true},{"functionName":"alladdrs","ranges":[{"startOffset":879,"endOffset":1227,"count":0}],"isBlockCoverage":false},{"functionName":"compile","ranges":[{"startOffset":1323,"endOffset":1948,"count":1},{"startOffset":1360,"endOffset":1413,"count":0},{"startOffset":1459,"endOffset":1482,"count":0},{"startOffset":1541,"endOffset":1606,"count":0},{"startOffset":1649,"endOffset":1895,"count":0}],"isBlockCoverage":true},{"functionName":"compileRangeSubnets","ranges":[{"startOffset":2042,"endOffset":2238,"count":1},{"startOffset":2162,"endOffset":2213,"count":0}],"isBlockCoverage":true},{"functionName":"compileTrust","ranges":[{"startOffset":2346,"endOffset":2586,"count":1},{"startOffset":2503,"endOffset":2584,"count":0}],"isBlockCoverage":true},{"functionName":"parseipNotation","ranges":[{"startOffset":2683,"endOffset":3531,"count":0}],"isBlockCoverage":false},{"functionName":"parseNetmask","ranges":[{"startOffset":3625,"endOffset":3786,"count":0}],"isBlockCoverage":false},{"functionName":"proxyaddr","ranges":[{"startOffset":3919,"endOffset":4187,"count":0}],"isBlockCoverage":false},{"functionName":"trustNone","ranges":[{"startOffset":4256,"endOffset":4296,"count":0}],"isBlockCoverage":false},{"functionName":"trustMulti","ranges":[{"startOffset":4396,"endOffset":5273,"count":0}],"isBlockCoverage":false},{"functionName":"trustSingle","ranges":[{"startOffset":5370,"endOffset":5999,"count":0}],"isBlockCoverage":false}]},{"scriptId":"964","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/forwarded/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1578,"count":1}],"isBlockCoverage":true},{"functionName":"forwarded","ranges":[{"startOffset":310,"endOffset":625,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketAddr","ranges":[{"startOffset":735,"endOffset":853,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":942,"endOffset":1577,"count":0}],"isBlockCoverage":false}]},{"scriptId":"965","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/ipaddr.js/lib/ipaddr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19333,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":19319,"count":1},{"startOffset":257,"endOffset":297,"count":0}],"isBlockCoverage":true},{"functionName":"matchCIDR","ranges":[{"startOffset":313,"endOffset":802,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.subnetMatch","ranges":[{"startOffset":828,"endOffset":1475,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1495,"endOffset":4290,"count":1}],"isBlockCoverage":true},{"functionName":"IPv4","ranges":[{"startOffset":1512,"endOffset":1917,"count":15},{"startOffset":1592,"endOffset":1666,"count":0},{"startOffset":1720,"endOffset":1883,"count":60},{"startOffset":1794,"endOffset":1875,"count":0}],"isBlockCoverage":true},{"functionName":"ipaddr.IPv4.IPv4.kind","ranges":[{"startOffset":1945,"endOffset":1984,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.toString","ranges":[{"startOffset":2017,"endOffset":2071,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.toNormalizedString","ranges":[{"startOffset":2114,"endOffset":2162,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.toByteArray","ranges":[{"startOffset":2198,"endOffset":2251,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.match","ranges":[{"startOffset":2281,"endOffset":2619,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.range","ranges":[{"startOffset":3342,"endOffset":3419,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.toIPv4MappedAddress","ranges":[{"startOffset":3463,"endOffset":3544,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.prefixLengthFromSubnetMask","ranges":[{"startOffset":3595,"endOffset":4266,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.parser","ranges":[{"startOffset":4545,"endOffset":5637,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5657,"endOffset":11106,"count":1}],"isBlockCoverage":true},{"functionName":"IPv6","ranges":[{"startOffset":5674,"endOffset":6372,"count":11},{"startOffset":5771,"endOffset":5921,"count":0},{"startOffset":5988,"endOffset":6073,"count":0},{"startOffset":6148,"endOffset":6308,"count":88},{"startOffset":6219,"endOffset":6300,"count":0},{"startOffset":6327,"endOffset":6366,"count":0}],"isBlockCoverage":true},{"functionName":"ipaddr.IPv6.IPv6.kind","ranges":[{"startOffset":6400,"endOffset":6439,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toString","ranges":[{"startOffset":6472,"endOffset":6564,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toRFC5952String","ranges":[{"startOffset":6604,"endOffset":7192,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toByteArray","ranges":[{"startOffset":7228,"endOffset":7491,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toNormalizedString","ranges":[{"startOffset":7534,"endOffset":7996,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toFixedLengthString","ranges":[{"startOffset":8040,"endOffset":8519,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.match","ranges":[{"startOffset":8549,"endOffset":8886,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.range","ranges":[{"startOffset":9656,"endOffset":9733,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.isIPv4MappedAddress","ranges":[{"startOffset":9777,"endOffset":9839,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toIPv4Address","ranges":[{"startOffset":9877,"endOffset":10196,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.prefixLengthFromSubnetMask","ranges":[{"startOffset":10247,"endOffset":11082,"count":0}],"isBlockCoverage":false},{"functionName":"expandIPv6","ranges":[{"startOffset":11548,"endOffset":12889,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.parser","ranges":[{"startOffset":12915,"endOffset":13759,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.isIPv4.ipaddr.IPv6.isIPv6","ranges":[{"startOffset":13806,"endOffset":13869,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.isValid","ranges":[{"startOffset":13896,"endOffset":14062,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.isValidFourPartDecimal","ranges":[{"startOffset":14104,"endOffset":14276,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.isValid","ranges":[{"startOffset":14303,"endOffset":14607,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.parse","ranges":[{"startOffset":14632,"endOffset":14836,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.parse","ranges":[{"startOffset":14861,"endOffset":15086,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.parseCIDR","ranges":[{"startOffset":15115,"endOffset":15620,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.subnetMaskFromPrefixLength","ranges":[{"startOffset":15666,"endOffset":16169,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.broadcastAddressFromCIDR","ranges":[{"startOffset":16213,"endOffset":16814,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.networkAddressFromCIDR","ranges":[{"startOffset":16856,"endOffset":17451,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.parseCIDR","ranges":[{"startOffset":17480,"endOffset":17986,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.isValid","ranges":[{"startOffset":18008,"endOffset":18101,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.parse","ranges":[{"startOffset":18121,"endOffset":18406,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.parseCIDR","ranges":[{"startOffset":18430,"endOffset":18761,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.fromByteArray","ranges":[{"startOffset":18789,"endOffset":19089,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.process","ranges":[{"startOffset":19111,"endOffset":19315,"count":0}],"isBlockCoverage":false}]},{"scriptId":"966","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":169,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":168,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":166,"count":0}],"isBlockCoverage":false}]},{"scriptId":"967","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":169,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":168,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":166,"count":0}],"isBlockCoverage":false}]},{"scriptId":"968","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/express/lib/request.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12505,"count":1}],"isBlockCoverage":true},{"functionName":"header","ranges":[{"startOffset":1150,"endOffset":1565,"count":1},{"startOffset":1187,"endOffset":1257,"count":0},{"startOffset":1291,"endOffset":1357,"count":0},{"startOffset":1411,"endOffset":1426,"count":0},{"startOffset":1431,"endOffset":1515,"count":0}],"isBlockCoverage":true},{"functionName":"req.accepts","ranges":[{"startOffset":2913,"endOffset":3004,"count":0}],"isBlockCoverage":false},{"functionName":"req.acceptsEncodings","ranges":[{"startOffset":3158,"endOffset":3253,"count":0}],"isBlockCoverage":false},{"functionName":"req.acceptsCharsets","ranges":[{"startOffset":3585,"endOffset":3679,"count":0}],"isBlockCoverage":false},{"functionName":"req.acceptsLanguages","ranges":[{"startOffset":4002,"endOffset":4097,"count":0}],"isBlockCoverage":false},{"functionName":"range","ranges":[{"startOffset":5220,"endOffset":5351,"count":0}],"isBlockCoverage":false},{"functionName":"param","ranges":[{"startOffset":5806,"endOffset":6298,"count":0}],"isBlockCoverage":false},{"functionName":"is","ranges":[{"startOffset":6898,"endOffset":7154,"count":0}],"isBlockCoverage":false},{"functionName":"protocol","ranges":[{"startOffset":7546,"endOffset":8029,"count":0}],"isBlockCoverage":false},{"functionName":"secure","ranges":[{"startOffset":8158,"endOffset":8214,"count":0}],"isBlockCoverage":false},{"functionName":"ip","ranges":[{"startOffset":8416,"endOffset":8511,"count":0}],"isBlockCoverage":false},{"functionName":"ips","ranges":[{"startOffset":8860,"endOffset":9086,"count":0}],"isBlockCoverage":false},{"functionName":"subdomains","ranges":[{"startOffset":9633,"endOffset":9894,"count":0}],"isBlockCoverage":false},{"functionName":"path","ranges":[{"startOffset":10016,"endOffset":10066,"count":0}],"isBlockCoverage":false},{"functionName":"hostname","ranges":[{"startOffset":10314,"endOffset":10948,"count":0}],"isBlockCoverage":false},{"functionName":"host","ranges":[{"startOffset":11052,"endOffset":11094,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11295,"endOffset":11736,"count":5},{"startOffset":11462,"endOffset":11482,"count":3},{"startOffset":11484,"endOffset":11497,"count":3},{"startOffset":11497,"endOffset":11572,"count":2},{"startOffset":11574,"endOffset":11591,"count":0},{"startOffset":11593,"endOffset":11717,"count":2},{"startOffset":11717,"endOffset":11735,"count":0}],"isBlockCoverage":true},{"functionName":"stale","ranges":[{"startOffset":11921,"endOffset":11962,"count":0}],"isBlockCoverage":false},{"functionName":"xhr","ranges":[{"startOffset":12084,"endOffset":12198,"count":0}],"isBlockCoverage":false},{"functionName":"defineGetter","ranges":[{"startOffset":12355,"endOffset":12504,"count":11}],"isBlockCoverage":true}]},{"scriptId":"969","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/accepts/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5252,"count":1}],"isBlockCoverage":true},{"functionName":"Accepts","ranges":[{"startOffset":411,"endOffset":575,"count":0}],"isBlockCoverage":false},{"functionName":"Accepts.type.Accepts.types","ranges":[{"startOffset":1772,"endOffset":2431,"count":0}],"isBlockCoverage":false},{"functionName":"Accepts.encoding.Accepts.encodings","ranges":[{"startOffset":2760,"endOffset":3232,"count":0}],"isBlockCoverage":false},{"functionName":"Accepts.charset.Accepts.charsets","ranges":[{"startOffset":3591,"endOffset":4048,"count":0}],"isBlockCoverage":false},{"functionName":"Accepts.lang.Accepts.langs.Accepts.language.Accepts.languages","ranges":[{"startOffset":4422,"endOffset":4894,"count":0}],"isBlockCoverage":false},{"functionName":"extToMime","ranges":[{"startOffset":4993,"endOffset":5091,"count":0}],"isBlockCoverage":false},{"functionName":"validMime","ranges":[{"startOffset":5188,"endOffset":5251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"970","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/negotiator/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2451,"count":1}],"isBlockCoverage":true},{"functionName":"Negotiator","ranges":[{"startOffset":593,"endOffset":731,"count":0}],"isBlockCoverage":false},{"functionName":"charset","ranges":[{"startOffset":764,"endOffset":857,"count":0}],"isBlockCoverage":false},{"functionName":"charsets","ranges":[{"startOffset":892,"endOffset":1003,"count":0}],"isBlockCoverage":false},{"functionName":"encoding","ranges":[{"startOffset":1038,"endOffset":1133,"count":0}],"isBlockCoverage":false},{"functionName":"encodings","ranges":[{"startOffset":1169,"endOffset":1283,"count":0}],"isBlockCoverage":false},{"functionName":"language","ranges":[{"startOffset":1318,"endOffset":1413,"count":0}],"isBlockCoverage":false},{"functionName":"languages","ranges":[{"startOffset":1449,"endOffset":1563,"count":0}],"isBlockCoverage":false},{"functionName":"mediaType","ranges":[{"startOffset":1599,"endOffset":1696,"count":0}],"isBlockCoverage":false},{"functionName":"mediaTypes","ranges":[{"startOffset":1733,"endOffset":1837,"count":0}],"isBlockCoverage":false}]},{"scriptId":"971","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/negotiator/lib/charset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3081,"count":1}],"isBlockCoverage":true},{"functionName":"parseAcceptCharset","ranges":[{"startOffset":471,"endOffset":772,"count":0}],"isBlockCoverage":false},{"functionName":"parseCharset","ranges":[{"startOffset":846,"endOffset":1282,"count":0}],"isBlockCoverage":false},{"functionName":"getCharsetPriority","ranges":[{"startOffset":1339,"endOffset":1679,"count":0}],"isBlockCoverage":false},{"functionName":"specify","ranges":[{"startOffset":1741,"endOffset":1995,"count":0}],"isBlockCoverage":false},{"functionName":"preferredCharsets","ranges":[{"startOffset":2078,"endOffset":2717,"count":0}],"isBlockCoverage":false},{"functionName":"compareSpecs","ranges":[{"startOffset":2762,"endOffset":2865,"count":0}],"isBlockCoverage":false},{"functionName":"getFullCharset","ranges":[{"startOffset":2916,"endOffset":2972,"count":0}],"isBlockCoverage":false},{"functionName":"isQuality","ranges":[{"startOffset":3031,"endOffset":3080,"count":0}],"isBlockCoverage":false}]},{"scriptId":"972","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/negotiator/lib/encoding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3506,"count":1}],"isBlockCoverage":true},{"functionName":"parseAcceptEncoding","ranges":[{"startOffset":476,"endOffset":1232,"count":0}],"isBlockCoverage":false},{"functionName":"parseEncoding","ranges":[{"startOffset":1309,"endOffset":1751,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodingPriority","ranges":[{"startOffset":1810,"endOffset":2153,"count":0}],"isBlockCoverage":false},{"functionName":"specify","ranges":[{"startOffset":2216,"endOffset":2474,"count":0}],"isBlockCoverage":false},{"functionName":"preferredEncodings","ranges":[{"startOffset":2560,"endOffset":3139,"count":0}],"isBlockCoverage":false},{"functionName":"compareSpecs","ranges":[{"startOffset":3184,"endOffset":3287,"count":0}],"isBlockCoverage":false},{"functionName":"getFullEncoding","ranges":[{"startOffset":3339,"endOffset":3397,"count":0}],"isBlockCoverage":false},{"functionName":"isQuality","ranges":[{"startOffset":3456,"endOffset":3505,"count":0}],"isBlockCoverage":false}]},{"scriptId":"973","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/negotiator/lib/language.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3409,"count":1}],"isBlockCoverage":true},{"functionName":"parseAcceptLanguage","ranges":[{"startOffset":493,"endOffset":799,"count":0}],"isBlockCoverage":false},{"functionName":"parseLanguage","ranges":[{"startOffset":875,"endOffset":1387,"count":0}],"isBlockCoverage":false},{"functionName":"getLanguagePriority","ranges":[{"startOffset":1445,"endOffset":1788,"count":0}],"isBlockCoverage":false},{"functionName":"specify","ranges":[{"startOffset":1851,"endOffset":2314,"count":0}],"isBlockCoverage":false},{"functionName":"preferredLanguages","ranges":[{"startOffset":2400,"endOffset":3046,"count":0}],"isBlockCoverage":false},{"functionName":"compareSpecs","ranges":[{"startOffset":3091,"endOffset":3194,"count":0}],"isBlockCoverage":false},{"functionName":"getFullLanguage","ranges":[{"startOffset":3246,"endOffset":3300,"count":0}],"isBlockCoverage":false},{"functionName":"isQuality","ranges":[{"startOffset":3359,"endOffset":3408,"count":0}],"isBlockCoverage":false}]},{"scriptId":"974","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/negotiator/lib/mediaType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5358,"count":1}],"isBlockCoverage":true},{"functionName":"parseAccept","ranges":[{"startOffset":484,"endOffset":792,"count":0}],"isBlockCoverage":false},{"functionName":"parseMediaType","ranges":[{"startOffset":861,"endOffset":1694,"count":0}],"isBlockCoverage":false},{"functionName":"getMediaTypePriority","ranges":[{"startOffset":1754,"endOffset":2090,"count":0}],"isBlockCoverage":false},{"functionName":"specify","ranges":[{"startOffset":2155,"endOffset":2870,"count":0}],"isBlockCoverage":false},{"functionName":"preferredMediaTypes","ranges":[{"startOffset":2948,"endOffset":3576,"count":0}],"isBlockCoverage":false},{"functionName":"compareSpecs","ranges":[{"startOffset":3621,"endOffset":3724,"count":0}],"isBlockCoverage":false},{"functionName":"getFullType","ranges":[{"startOffset":3772,"endOffset":3843,"count":0}],"isBlockCoverage":false},{"functionName":"isQuality","ranges":[{"startOffset":3902,"endOffset":3951,"count":0}],"isBlockCoverage":false},{"functionName":"quoteCount","ranges":[{"startOffset":4017,"endOffset":4186,"count":0}],"isBlockCoverage":false},{"functionName":"splitKeyValuePair","ranges":[{"startOffset":4236,"endOffset":4465,"count":0}],"isBlockCoverage":false},{"functionName":"splitMediaTypes","ranges":[{"startOffset":4532,"endOffset":4857,"count":0}],"isBlockCoverage":false},{"functionName":"splitParameters","ranges":[{"startOffset":4913,"endOffset":5357,"count":0}],"isBlockCoverage":false}]},{"scriptId":"975","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/type-is/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5562,"count":1}],"isBlockCoverage":true},{"functionName":"typeis","ranges":[{"startOffset":798,"endOffset":1524,"count":2},{"startOffset":972,"endOffset":994,"count":0},{"startOffset":1269,"endOffset":1289,"count":0},{"startOffset":1460,"endOffset":1465,"count":0},{"startOffset":1490,"endOffset":1523,"count":0}],"isBlockCoverage":true},{"functionName":"hasbody","ranges":[{"startOffset":1805,"endOffset":1932,"count":7}],"isBlockCoverage":true},{"functionName":"typeofrequest","ranges":[{"startOffset":2796,"endOffset":3211,"count":2},{"startOffset":2891,"endOffset":2912,"count":0},{"startOffset":2975,"endOffset":3109,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":3577,"endOffset":3986,"count":2},{"startOffset":3637,"endOffset":3679,"count":0},{"startOffset":3703,"endOffset":3770,"count":0},{"startOffset":3775,"endOffset":3819,"count":0},{"startOffset":3848,"endOffset":3914,"count":0},{"startOffset":3954,"endOffset":3973,"count":0}],"isBlockCoverage":true},{"functionName":"mimeMatch","ranges":[{"startOffset":4188,"endOffset":4984,"count":2},{"startOffset":4272,"endOffset":4294,"count":0},{"startOffset":4476,"endOffset":4498,"count":0},{"startOffset":4590,"endOffset":4612,"count":0},{"startOffset":4690,"endOffset":4850,"count":0},{"startOffset":4945,"endOffset":4967,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeType","ranges":[{"startOffset":5098,"endOffset":5288,"count":2}],"isBlockCoverage":true},{"functionName":"tryNormalizeType","ranges":[{"startOffset":5409,"endOffset":5561,"count":2},{"startOffset":5459,"endOffset":5480,"count":0},{"startOffset":5526,"endOffset":5559,"count":0}],"isBlockCoverage":true}]},{"scriptId":"976","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/media-typer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6375,"count":1}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":2747,"endOffset":3799,"count":2},{"startOffset":2809,"endOffset":2866,"count":0},{"startOffset":3022,"endOffset":3067,"count":0},{"startOffset":3121,"endOffset":3169,"count":0},{"startOffset":3270,"endOffset":3393,"count":0},{"startOffset":3435,"endOffset":3468,"count":0},{"startOffset":3470,"endOffset":3780,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":3912,"endOffset":5027,"count":2},{"startOffset":3952,"endOffset":4012,"count":0},{"startOffset":4094,"endOffset":4135,"count":0},{"startOffset":4171,"endOffset":4246,"count":0},{"startOffset":4312,"endOffset":4337,"count":0},{"startOffset":4509,"endOffset":4878,"count":0},{"startOffset":4899,"endOffset":4925,"count":0},{"startOffset":4927,"endOffset":4984,"count":0}],"isBlockCoverage":true},{"functionName":"getcontenttype","ranges":[{"startOffset":5138,"endOffset":5392,"count":0}],"isBlockCoverage":false},{"functionName":"qstring","ranges":[{"startOffset":5497,"endOffset":5786,"count":0}],"isBlockCoverage":false},{"functionName":"splitType","ranges":[{"startOffset":5905,"endOffset":6374,"count":2},{"startOffset":6001,"endOffset":6052,"count":0},{"startOffset":6199,"endOffset":6282,"count":0}],"isBlockCoverage":true}]},{"scriptId":"977","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":159,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":158,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":156,"count":0}],"isBlockCoverage":false}]},{"scriptId":"978","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":159,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":158,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":156,"count":0}],"isBlockCoverage":false}]},{"scriptId":"979","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/express/lib/response.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28339,"count":1}],"isBlockCoverage":true},{"functionName":"status","ranges":[{"startOffset":1466,"endOffset":1737,"count":5},{"startOffset":1552,"endOffset":1564,"count":0},{"startOffset":1565,"endOffset":1579,"count":0},{"startOffset":1581,"endOffset":1694,"count":0}],"isBlockCoverage":true},{"functionName":"res.links","ranges":[{"startOffset":2029,"endOffset":2253,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2493,"endOffset":5665,"count":5},{"startOffset":2678,"endOffset":3105,"count":0},{"startOffset":3200,"endOffset":3225,"count":0},{"startOffset":3227,"endOffset":3499,"count":0},{"startOffset":3616,"endOffset":3652,"count":0},{"startOffset":3670,"endOffset":3685,"count":0},{"startOffset":3690,"endOffset":3704,"count":0},{"startOffset":3709,"endOffset":3962,"count":0},{"startOffset":4483,"endOffset":4545,"count":0},{"startOffset":4569,"endOffset":4591,"count":0},{"startOffset":4593,"endOffset":4705,"count":0},{"startOffset":5096,"endOffset":5118,"count":0},{"startOffset":5208,"endOffset":5353,"count":0},{"startOffset":5413,"endOffset":5512,"count":0},{"startOffset":5543,"endOffset":5590,"count":0}],"isBlockCoverage":true},{"functionName":"json","ranges":[{"startOffset":5845,"endOffset":6672,"count":5},{"startOffset":5939,"endOffset":6324,"count":0}],"isBlockCoverage":true},{"functionName":"jsonp","ranges":[{"startOffset":6883,"endOffset":8705,"count":0}],"isBlockCoverage":false},{"functionName":"sendStatus","ranges":[{"startOffset":9041,"endOffset":9220,"count":0}],"isBlockCoverage":false},{"functionName":"sendFile","ranges":[{"startOffset":10604,"endOffset":11583,"count":0}],"isBlockCoverage":false},{"functionName":"res.sendfile","ranges":[{"startOffset":12967,"endOffset":13578,"count":0}],"isBlockCoverage":false},{"functionName":"download","ranges":[{"startOffset":14331,"endOffset":15567,"count":0}],"isBlockCoverage":false},{"functionName":"contentType","ranges":[{"startOffset":15995,"endOffset":16137,"count":0}],"isBlockCoverage":false},{"functionName":"res.format","ranges":[{"startOffset":17572,"endOffset":18107,"count":0}],"isBlockCoverage":false},{"functionName":"attachment","ranges":[{"startOffset":18284,"endOffset":18455,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":18859,"endOffset":19149,"count":0}],"isBlockCoverage":false},{"functionName":"header","ranges":[{"startOffset":19568,"endOffset":20230,"count":20},{"startOffset":19671,"endOffset":19688,"count":0},{"startOffset":19794,"endOffset":20095,"count":10},{"startOffset":19828,"endOffset":19908,"count":0},{"startOffset":19947,"endOffset":20089,"count":5},{"startOffset":20134,"endOffset":20213,"count":0}],"isBlockCoverage":true},{"functionName":"res.get","ranges":[{"startOffset":20344,"endOffset":20394,"count":24}],"isBlockCoverage":true},{"functionName":"clearCookie","ranges":[{"startOffset":20556,"endOffset":20700,"count":0}],"isBlockCoverage":false},{"functionName":"res.cookie","ranges":[{"startOffset":21331,"endOffset":22057,"count":0}],"isBlockCoverage":false},{"functionName":"location","ranges":[{"startOffset":22433,"endOffset":22906,"count":0}],"isBlockCoverage":false},{"functionName":"redirect","ranges":[{"startOffset":23374,"endOffset":24396,"count":0}],"isBlockCoverage":false},{"functionName":"res.vary","ranges":[{"startOffset":24602,"endOffset":24817,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":25203,"endOffset":25720,"count":0}],"isBlockCoverage":false},{"functionName":"sendfile","ranges":[{"startOffset":25752,"endOffset":27386,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":27667,"endOffset":28338,"count":5},{"startOffset":27875,"endOffset":27916,"count":0},{"startOffset":27960,"endOffset":27987,"count":0},{"startOffset":27989,"endOffset":28321,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28025,"endOffset":28316,"count":0}],"isBlockCoverage":false}]},{"scriptId":"980","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/cookie-signature/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1230,"count":1}],"isBlockCoverage":true},{"functionName":"exports.sign","ranges":[{"startOffset":217,"endOffset":554,"count":0}],"isBlockCoverage":false},{"functionName":"exports.unsign","ranges":[{"startOffset":781,"endOffset":1123,"count":0}],"isBlockCoverage":false},{"functionName":"sha1","ranges":[{"startOffset":1146,"endOffset":1229,"count":0}],"isBlockCoverage":false}]},{"scriptId":"981","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/cookie/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5281,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":819,"endOffset":1766,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2150,"endOffset":4507,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":4634,"endOffset":4732,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":4811,"endOffset":4869,"count":0}],"isBlockCoverage":false},{"functionName":"isDate","ranges":[{"startOffset":4946,"endOffset":5048,"count":0}],"isBlockCoverage":false},{"functionName":"tryDecode","ranges":[{"startOffset":5177,"endOffset":5280,"count":0}],"isBlockCoverage":false}]},{"scriptId":"982","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/vary/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2930,"count":1}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":695,"endOffset":1759,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1868,"endOffset":2409,"count":0}],"isBlockCoverage":false},{"functionName":"vary","ranges":[{"startOffset":2540,"endOffset":2929,"count":0}],"isBlockCoverage":false}]},{"scriptId":"983","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":175,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":174,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":172,"count":0}],"isBlockCoverage":false}]},{"scriptId":"984","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/body-parser/lib/types/json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5299,"count":1}],"isBlockCoverage":true},{"functionName":"json","ranges":[{"startOffset":1078,"endOffset":3292,"count":1},{"startOffset":1222,"endOffset":1234,"count":0},{"startOffset":1445,"endOffset":1476,"count":0},{"startOffset":1478,"endOffset":1541,"count":0},{"startOffset":1669,"endOffset":1675,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":1679,"endOffset":2303,"count":2},{"startOffset":1730,"endOffset":1900,"count":0},{"startOffset":1979,"endOffset":1995,"count":0},{"startOffset":1997,"endOffset":2091,"count":0},{"startOffset":2180,"endOffset":2299,"count":0}],"isBlockCoverage":true},{"functionName":"jsonParser","ranges":[{"startOffset":2314,"endOffset":3290,"count":5},{"startOffset":2372,"endOffset":2440,"count":0},{"startOffset":2539,"endOffset":2603,"count":3},{"startOffset":2603,"endOffset":2736,"count":2},{"startOffset":2736,"endOffset":2797,"count":0},{"startOffset":2797,"endOffset":2886,"count":2},{"startOffset":2927,"endOffset":3135,"count":0},{"startOffset":3135,"endOffset":3289,"count":2}],"isBlockCoverage":true},{"functionName":"createStrictSyntaxError","ranges":[{"startOffset":3447,"endOffset":4066,"count":0}],"isBlockCoverage":false},{"functionName":"firstchar","ranges":[{"startOffset":4192,"endOffset":4309,"count":2},{"startOffset":4296,"endOffset":4307,"count":0}],"isBlockCoverage":true},{"functionName":"getCharset","ranges":[{"startOffset":4395,"endOffset":4548,"count":2},{"startOffset":4510,"endOffset":4546,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeJsonSyntaxError","ranges":[{"startOffset":4683,"endOffset":5097,"count":0}],"isBlockCoverage":false},{"functionName":"typeChecker","ranges":[{"startOffset":5189,"endOffset":5298,"count":1}],"isBlockCoverage":true},{"functionName":"checkType","ranges":[{"startOffset":5228,"endOffset":5296,"count":2}],"isBlockCoverage":true}]},{"scriptId":"985","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/bytes/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3613,"count":1}],"isBlockCoverage":true},{"functionName":"bytes","ranges":[{"startOffset":941,"endOffset":1130,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":1598,"endOffset":2797,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2997,"endOffset":3612,"count":3},{"startOffset":3049,"endOffset":3063,"count":2},{"startOffset":3065,"endOffset":3086,"count":2},{"startOffset":3086,"endOffset":3119,"count":1},{"startOffset":3119,"endOffset":3141,"count":0},{"startOffset":3141,"endOffset":3275,"count":1},{"startOffset":3275,"endOffset":3387,"count":0},{"startOffset":3387,"endOffset":3542,"count":1},{"startOffset":3542,"endOffset":3564,"count":0},{"startOffset":3564,"endOffset":3611,"count":1}],"isBlockCoverage":true}]},{"scriptId":"986","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/body-parser/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":263,"count":1},{"startOffset":165,"endOffset":212,"count":0}],"isBlockCoverage":true}]},{"scriptId":"987","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/body-parser/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6015,"count":1},{"startOffset":1443,"endOffset":1650,"count":0},{"startOffset":1674,"endOffset":1690,"count":0},{"startOffset":1732,"endOffset":1776,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":661,"endOffset":710,"count":170}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":719,"endOffset":1172,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1462,"endOffset":1474,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":1847,"endOffset":1976,"count":4},{"startOffset":1915,"endOffset":1952,"count":0}],"isBlockCoverage":true},{"functionName":"exports.formatters.o","ranges":[{"startOffset":2063,"endOffset":2244,"count":0}],"isBlockCoverage":false},{"functionName":"exports.formatters.O","ranges":[{"startOffset":2345,"endOffset":2448,"count":0}],"isBlockCoverage":false},{"functionName":"formatArgs","ranges":[{"startOffset":2522,"endOffset":2965,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3056,"endOffset":3140,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3222,"endOffset":3498,"count":1},{"startOffset":3449,"endOffset":3496,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3615,"endOffset":3662,"count":1}],"isBlockCoverage":true},{"functionName":"createWritableStdioStream","ranges":[{"startOffset":3866,"endOffset":5545,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":5710,"endOffset":5918,"count":4},{"startOffset":5848,"endOffset":5916,"count":0}],"isBlockCoverage":true}]},{"scriptId":"988","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/body-parser/node_modules/debug/src/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4394,"count":1}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":818,"endOffset":1071,"count":4},{"startOffset":895,"endOffset":1003,"count":69}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1200,"endOffset":2957,"count":4}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1237,"endOffset":2646,"count":13},{"startOffset":1304,"endOffset":1422,"count":0},{"startOffset":1649,"endOffset":2583,"count":0},{"startOffset":2584,"endOffset":2612,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1957,"endOffset":2445,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3117,"endOffset":3657,"count":1},{"startOffset":3267,"endOffset":3279,"count":0},{"startOffset":3392,"endOffset":3651,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":3711,"endOffset":3755,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":3897,"endOffset":4206,"count":4},{"startOffset":3992,"endOffset":4062,"count":0},{"startOffset":4119,"endOffset":4188,"count":0}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":4294,"endOffset":4393,"count":0}],"isBlockCoverage":false}]},{"scriptId":"989","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/body-parser/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2764,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":407,"endOffset":783,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":907,"endOffset":1910,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2008,"endOffset":2285,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2382,"endOffset":2546,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2582,"endOffset":2763,"count":0}],"isBlockCoverage":false}]},{"scriptId":"990","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/body-parser/lib/read.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4325,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":664,"endOffset":2935,"count":2},{"startOffset":890,"endOffset":896,"count":0},{"startOffset":1077,"endOffset":1115,"count":0},{"startOffset":1195,"endOffset":1201,"count":0},{"startOffset":1280,"endOffset":1300,"count":0},{"startOffset":1301,"endOffset":1335,"count":0},{"startOffset":1337,"endOffset":1514,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1576,"endOffset":2932,"count":2},{"startOffset":1616,"endOffset":2268,"count":0},{"startOffset":2300,"endOffset":2556,"count":0},{"startOffset":2663,"endOffset":2683,"count":0},{"startOffset":2692,"endOffset":2722,"count":0},{"startOffset":2772,"endOffset":2916,"count":0}],"isBlockCoverage":true},{"functionName":"onfinished","ranges":[{"startOffset":2177,"endOffset":2248,"count":0}],"isBlockCoverage":false},{"functionName":"contentstream","ranges":[{"startOffset":3112,"endOffset":4056,"count":2},{"startOffset":3365,"endOffset":3391,"count":0},{"startOffset":3393,"endOffset":3527,"count":0},{"startOffset":3555,"endOffset":3669,"count":0},{"startOffset":3674,"endOffset":3783,"count":0},{"startOffset":3869,"endOffset":4033,"count":0}],"isBlockCoverage":true},{"functionName":"dump","ranges":[{"startOffset":4174,"endOffset":4324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"991","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/raw-body/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7171,"count":1}],"isBlockCoverage":true},{"functionName":"getDecoder","ranges":[{"startOffset":633,"endOffset":1022,"count":2},{"startOffset":683,"endOffset":694,"count":0},{"startOffset":746,"endOffset":1020,"count":0}],"isBlockCoverage":true},{"functionName":"getRawBody","ranges":[{"startOffset":1200,"endOffset":2733,"count":2},{"startOffset":1293,"endOffset":1298,"count":0},{"startOffset":1350,"endOffset":1410,"count":0},{"startOffset":1502,"endOffset":1567,"count":0},{"startOffset":1624,"endOffset":1702,"count":0},{"startOffset":1741,"endOffset":1779,"count":0},{"startOffset":1887,"endOffset":1956,"count":0},{"startOffset":2013,"endOffset":2031,"count":0},{"startOffset":2033,"endOffset":2095,"count":0},{"startOffset":2179,"endOffset":2188,"count":0},{"startOffset":2407,"endOffset":2413,"count":0},{"startOffset":2529,"endOffset":2732,"count":0}],"isBlockCoverage":true},{"functionName":"executor","ranges":[{"startOffset":2552,"endOffset":2730,"count":0}],"isBlockCoverage":false},{"functionName":"halt","ranges":[{"startOffset":2803,"endOffset":2971,"count":0}],"isBlockCoverage":false},{"functionName":"readStream","ranges":[{"startOffset":3165,"endOffset":6549,"count":2},{"startOffset":3477,"endOffset":3650,"count":0},{"startOffset":3982,"endOffset":4124,"count":0},{"startOffset":4192,"endOffset":4300,"count":0},{"startOffset":4383,"endOffset":4421,"count":0},{"startOffset":4459,"endOffset":4463,"count":0}],"isBlockCoverage":true},{"functionName":"done","ranges":[{"startOffset":4684,"endOffset":5168,"count":2},{"startOffset":4811,"endOffset":4847,"count":4},{"startOffset":4905,"endOffset":4951,"count":0}],"isBlockCoverage":true},{"functionName":"invokeCallback","ranges":[{"startOffset":4993,"endOffset":5164,"count":2},{"startOffset":5058,"endOffset":5124,"count":0}],"isBlockCoverage":true},{"functionName":"onAborted","ranges":[{"startOffset":5172,"endOffset":5410,"count":0}],"isBlockCoverage":false},{"functionName":"onData","ranges":[{"startOffset":5414,"endOffset":5803,"count":2},{"startOffset":5458,"endOffset":5464,"count":0},{"startOffset":5540,"endOffset":5698,"count":0},{"startOffset":5761,"endOffset":5799,"count":0}],"isBlockCoverage":true},{"functionName":"onEnd","ranges":[{"startOffset":5807,"endOffset":6283,"count":2},{"startOffset":5848,"endOffset":5854,"count":0},{"startOffset":5868,"endOffset":5884,"count":0},{"startOffset":5934,"endOffset":6141,"count":0},{"startOffset":6225,"endOffset":6248,"count":0}],"isBlockCoverage":true},{"functionName":"cleanup","ranges":[{"startOffset":6287,"endOffset":6547,"count":2}],"isBlockCoverage":true},{"functionName":"tryRequireAsyncHooks","ranges":[{"startOffset":6602,"endOffset":6714,"count":1},{"startOffset":6683,"endOffset":6712,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":6836,"endOffset":7170,"count":2},{"startOffset":7072,"endOffset":7091,"count":0}],"isBlockCoverage":true}]},{"scriptId":"992","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/iconv-lite/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5120,"count":1},{"startOffset":4754,"endOffset":4776,"count":0},{"startOffset":4924,"endOffset":5119,"count":0}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":585,"endOffset":877,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":894,"endOffset":1476,"count":0}],"isBlockCoverage":false},{"functionName":"encodingExists","ranges":[{"startOffset":1501,"endOffset":1639,"count":0}],"isBlockCoverage":false},{"functionName":"getCodec","ranges":[{"startOffset":1879,"endOffset":3589,"count":2},{"startOffset":1943,"endOffset":1985,"count":1},{"startOffset":2269,"endOffset":3587,"count":3},{"startOffset":2350,"endOffset":2363,"count":1},{"startOffset":2363,"endOffset":2458,"count":2},{"startOffset":2458,"endOffset":2562,"count":0},{"startOffset":2576,"endOffset":2905,"count":1},{"startOffset":2692,"endOffset":2726,"count":2},{"startOffset":2919,"endOffset":3444,"count":1},{"startOffset":3021,"endOffset":3053,"count":0},{"startOffset":3458,"endOffset":3571,"count":0}],"isBlockCoverage":true},{"functionName":"iconv._canonicalizeEncoding","ranges":[{"startOffset":3621,"endOffset":3804,"count":2}],"isBlockCoverage":true},{"functionName":"getEncoder","ranges":[{"startOffset":3825,"endOffset":4101,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":4122,"endOffset":4411,"count":2},{"startOffset":4295,"endOffset":4324,"count":0}],"isBlockCoverage":true}]},{"scriptId":"993","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/safer-buffer/safer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2110,"count":1},{"startOffset":163,"endOffset":294,"count":14},{"startOffset":200,"endOffset":208,"count":0},{"startOffset":236,"endOffset":255,"count":13},{"startOffset":257,"endOffset":265,"count":2},{"startOffset":265,"endOffset":294,"count":12},{"startOffset":346,"endOffset":487,"count":12},{"startOffset":383,"endOffset":391,"count":0},{"startOffset":420,"endOffset":448,"count":11},{"startOffset":450,"endOffset":458,"count":2},{"startOffset":458,"endOffset":487,"count":10},{"startOffset":583,"endOffset":1070,"count":0},{"startOffset":1090,"endOffset":1642,"count":0},{"startOffset":1673,"endOffset":1900,"count":0},{"startOffset":1924,"endOffset":2085,"count":0}],"isBlockCoverage":true},{"functionName":"Safer.from","ranges":[{"startOffset":600,"endOffset":1068,"count":0}],"isBlockCoverage":false},{"functionName":"Safer.alloc","ranges":[{"startOffset":1108,"endOffset":1640,"count":0}],"isBlockCoverage":false}]},{"scriptId":"994","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/iconv-lite/lib/bom-handling.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1109,"count":1}],"isBlockCoverage":true},{"functionName":"PrependBOMWrapper","ranges":[{"startOffset":79,"endOffset":179,"count":0}],"isBlockCoverage":false},{"functionName":"PrependBOMWrapper.write","ranges":[{"startOffset":217,"endOffset":358,"count":0}],"isBlockCoverage":false},{"functionName":"PrependBOMWrapper.end","ranges":[{"startOffset":394,"endOffset":439,"count":0}],"isBlockCoverage":false},{"functionName":"StripBOMWrapper","ranges":[{"startOffset":560,"endOffset":691,"count":2}],"isBlockCoverage":true},{"functionName":"StripBOMWrapper.write","ranges":[{"startOffset":727,"endOffset":1028,"count":2},{"startOffset":817,"endOffset":828,"count":0},{"startOffset":858,"endOffset":987,"count":0}],"isBlockCoverage":true},{"functionName":"StripBOMWrapper.end","ranges":[{"startOffset":1062,"endOffset":1107,"count":2}],"isBlockCoverage":true}]},{"scriptId":"995","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/iconv-lite/lib/streams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3387,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":199,"endOffset":824,"count":1}],"isBlockCoverage":true},{"functionName":"encodeStream","ranges":[{"startOffset":277,"endOffset":414,"count":0}],"isBlockCoverage":false},{"functionName":"decodeStream","ranges":[{"startOffset":441,"endOffset":578,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream","ranges":[{"startOffset":905,"endOffset":1136,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream._transform","ranges":[{"startOffset":1312,"endOffset":1626,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream._flush","ranges":[{"startOffset":1670,"endOffset":1841,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream.collect","ranges":[{"startOffset":1886,"endOffset":2109,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream","ranges":[{"startOffset":2189,"endOffset":2394,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream._transform","ranges":[{"startOffset":2570,"endOffset":2898,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream._flush","ranges":[{"startOffset":2942,"endOffset":3144,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream.collect","ranges":[{"startOffset":3189,"endOffset":3385,"count":0}],"isBlockCoverage":false}]},{"scriptId":"996","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/iconv-lite/lib/extend-node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8701,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":229,"endOffset":8700,"count":1},{"startOffset":564,"endOffset":602,"count":0}],"isBlockCoverage":true},{"functionName":"extendNodeEncodings","ranges":[{"startOffset":638,"endOffset":7624,"count":0}],"isBlockCoverage":false},{"functionName":"undoExtendNodeEncodings","ranges":[{"startOffset":7714,"endOffset":8698,"count":0}],"isBlockCoverage":false}]},{"scriptId":"997","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/body-parser/lib/types/raw.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1884,"count":1}],"isBlockCoverage":true},{"functionName":"raw","ranges":[{"startOffset":452,"endOffset":1682,"count":0}],"isBlockCoverage":false},{"functionName":"typeChecker","ranges":[{"startOffset":1774,"endOffset":1883,"count":0}],"isBlockCoverage":false}]},{"scriptId":"998","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/serve-static/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4570,"count":1}],"isBlockCoverage":true},{"functionName":"serveStatic","ranges":[{"startOffset":621,"endOffset":2702,"count":1},{"startOffset":673,"endOffset":724,"count":0},{"startOffset":758,"endOffset":817,"count":0},{"startOffset":879,"endOffset":886,"count":0},{"startOffset":1093,"endOffset":1128,"count":0},{"startOffset":1130,"endOffset":1197,"count":0},{"startOffset":1411,"endOffset":1446,"count":0}],"isBlockCoverage":true},{"functionName":"serveStatic","ranges":[{"startOffset":1457,"endOffset":2700,"count":0}],"isBlockCoverage":false},{"functionName":"collapseLeadingSlashes","ranges":[{"startOffset":2776,"endOffset":2978,"count":0}],"isBlockCoverage":false},{"functionName":"createHtmlDocument","ranges":[{"startOffset":3088,"endOffset":3383,"count":0}],"isBlockCoverage":false},{"functionName":"createNotFoundDirectoryListener","ranges":[{"startOffset":3453,"endOffset":3556,"count":0}],"isBlockCoverage":false},{"functionName":"createRedirectDirectoryListener","ranges":[{"startOffset":3636,"endOffset":4569,"count":1}],"isBlockCoverage":true},{"functionName":"redirect","ranges":[{"startOffset":3691,"endOffset":4567,"count":0}],"isBlockCoverage":false}]},{"scriptId":"999","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/body-parser/lib/types/text.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2285,"count":1}],"isBlockCoverage":true},{"functionName":"text","ranges":[{"startOffset":497,"endOffset":1844,"count":0}],"isBlockCoverage":false},{"functionName":"getCharset","ranges":[{"startOffset":1930,"endOffset":2083,"count":0}],"isBlockCoverage":false},{"functionName":"typeChecker","ranges":[{"startOffset":2175,"endOffset":2284,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1000","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/body-parser/lib/types/urlencoded.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5797,"count":1}],"isBlockCoverage":true},{"functionName":"urlencoded","ranges":[{"startOffset":717,"endOffset":2669,"count":0}],"isBlockCoverage":false},{"functionName":"extendedparser","ranges":[{"startOffset":2744,"endOffset":3638,"count":0}],"isBlockCoverage":false},{"functionName":"getCharset","ranges":[{"startOffset":3724,"endOffset":3877,"count":0}],"isBlockCoverage":false},{"functionName":"parameterCount","ranges":[{"startOffset":4019,"endOffset":4248,"count":0}],"isBlockCoverage":false},{"functionName":"parser","ranges":[{"startOffset":4367,"endOffset":4755,"count":0}],"isBlockCoverage":false},{"functionName":"simpleparser","ranges":[{"startOffset":4828,"endOffset":5595,"count":0}],"isBlockCoverage":false},{"functionName":"typeChecker","ranges":[{"startOffset":5687,"endOffset":5796,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1001","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/swagger-ui-dist/absolute-path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":530,"count":1}],"isBlockCoverage":true},{"functionName":"getAbsoluteFSPath","ranges":[{"startOffset":226,"endOffset":493,"count":1},{"startOffset":404,"endOffset":492,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1002","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pino/pino.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6173,"count":1}],"isBlockCoverage":true},{"functionName":"bindings","ranges":[{"startOffset":1683,"endOffset":1732,"count":1}],"isBlockCoverage":true},{"functionName":"level","ranges":[{"startOffset":1738,"endOffset":1798,"count":6}],"isBlockCoverage":true},{"functionName":"pino","ranges":[{"startOffset":2122,"endOffset":5399,"count":1},{"startOffset":2898,"endOffset":2930,"count":0},{"startOffset":2968,"endOffset":3011,"count":0},{"startOffset":3071,"endOffset":3079,"count":0},{"startOffset":3461,"endOffset":3541,"count":0},{"startOffset":3614,"endOffset":3650,"count":0},{"startOffset":3727,"endOffset":3743,"count":0},{"startOffset":3745,"endOffset":3819,"count":0},{"startOffset":3832,"endOffset":3862,"count":0},{"startOffset":3864,"endOffset":3937,"count":0},{"startOffset":3954,"endOffset":3986,"count":0},{"startOffset":3988,"endOffset":4067,"count":0},{"startOffset":4974,"endOffset":5009,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports.destination","ranges":[{"startOffset":5453,"endOffset":5736,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1003","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pino-std-serializers/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1288,"count":1}],"isBlockCoverage":true},{"functionName":"wrapErrorSerializer","ranges":[{"startOffset":488,"endOffset":711,"count":0}],"isBlockCoverage":false},{"functionName":"wrapRequestSerializer","ranges":[{"startOffset":739,"endOffset":997,"count":0}],"isBlockCoverage":false},{"functionName":"wrapResponseSerializer","ranges":[{"startOffset":1026,"endOffset":1285,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1004","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pino-std-serializers/lib/err.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1254,"count":1}],"isBlockCoverage":true},{"functionName":"errSerializer","ranges":[{"startOffset":271,"endOffset":1253,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1005","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pino-std-serializers/lib/err-helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2594,"count":1}],"isBlockCoverage":true},{"functionName":"isErrorLike","ranges":[{"startOffset":299,"endOffset":359,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorCause","ranges":[{"startOffset":479,"endOffset":856,"count":0}],"isBlockCoverage":false},{"functionName":"_stackWithCauses","ranges":[{"startOffset":1081,"endOffset":1469,"count":0}],"isBlockCoverage":false},{"functionName":"stackWithCauses","ranges":[{"startOffset":1546,"endOffset":1587,"count":0}],"isBlockCoverage":false},{"functionName":"_messageWithCauses","ranges":[{"startOffset":1841,"endOffset":2378,"count":0}],"isBlockCoverage":false},{"functionName":"messageWithCauses","ranges":[{"startOffset":2457,"endOffset":2500,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1006","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pino-std-serializers/lib/err-proto.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":796,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":509,"endOffset":557,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":568,"endOffset":618,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1007","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pino-std-serializers/lib/err-with-cause.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1272,"count":1}],"isBlockCoverage":true},{"functionName":"errWithCauseSerializer","ranges":[{"startOffset":244,"endOffset":1271,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1008","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pino-std-serializers/lib/req.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1963,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":833,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":844,"endOffset":894,"count":0}],"isBlockCoverage":false},{"functionName":"reqSerializer","ranges":[{"startOffset":985,"endOffset":1884,"count":0}],"isBlockCoverage":false},{"functionName":"mapHttpRequest","ranges":[{"startOffset":1886,"endOffset":1962,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1009","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pino-std-serializers/lib/res.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":860,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":348,"endOffset":396,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":407,"endOffset":457,"count":0}],"isBlockCoverage":false},{"functionName":"resSerializer","ranges":[{"startOffset":548,"endOffset":780,"count":0}],"isBlockCoverage":false},{"functionName":"mapHttpResponse","ranges":[{"startOffset":782,"endOffset":859,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1010","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pino/lib/caller.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":551,"count":1}],"isBlockCoverage":true},{"functionName":"noOpPrepareStackTrace","ranges":[{"startOffset":14,"endOffset":74,"count":1}],"isBlockCoverage":true},{"functionName":"getCallers","ranges":[{"startOffset":93,"endOffset":550,"count":1},{"startOffset":326,"endOffset":352,"count":0},{"startOffset":443,"endOffset":528,"count":8},{"startOffset":461,"endOffset":483,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1011","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pino/lib/redaction.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3332,"count":1}],"isBlockCoverage":true},{"functionName":"ERR_PATHS_MUST_BE_STRINGS","ranges":[{"startOffset":216,"endOffset":261,"count":0}],"isBlockCoverage":false},{"functionName":"ERR_INVALID_PATH","ranges":[{"startOffset":283,"endOffset":349,"count":0}],"isBlockCoverage":false},{"functionName":"redaction","ranges":[{"startOffset":441,"endOffset":2912,"count":0}],"isBlockCoverage":false},{"functionName":"handle","ranges":[{"startOffset":2914,"endOffset":3303,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1012","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/fast-redact/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1665,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":357,"endOffset":365,"count":0}],"isBlockCoverage":false},{"functionName":"fastRedact","ranges":[{"startOffset":505,"endOffset":1664,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1013","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/fast-redact/lib/validator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1034,"count":1}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":42,"endOffset":1033,"count":2}],"isBlockCoverage":true},{"functionName":"ERR_PATHS_MUST_BE_STRINGS","ranges":[{"startOffset":117,"endOffset":172,"count":0}],"isBlockCoverage":false},{"functionName":"ERR_INVALID_PATH","ranges":[{"startOffset":197,"endOffset":239,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":261,"endOffset":1031,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1014","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/fast-redact/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1045,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":66,"endOffset":1044,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1015","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/fast-redact/lib/rx.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":677,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1016","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/fast-redact/lib/redactor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3270,"count":1}],"isBlockCoverage":true},{"functionName":"redactor","ranges":[{"startOffset":69,"endOffset":905,"count":0}],"isBlockCoverage":false},{"functionName":"redactTmpl","ranges":[{"startOffset":907,"endOffset":2301,"count":0}],"isBlockCoverage":false},{"functionName":"dynamicRedactTmpl","ranges":[{"startOffset":2303,"endOffset":2915,"count":0}],"isBlockCoverage":false},{"functionName":"resultTmpl","ranges":[{"startOffset":2917,"endOffset":3065,"count":0}],"isBlockCoverage":false},{"functionName":"strictImpl","ranges":[{"startOffset":3067,"endOffset":3269,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1017","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/fast-redact/lib/restorer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2635,"count":1}],"isBlockCoverage":true},{"functionName":"restorer","ranges":[{"startOffset":105,"endOffset":675,"count":0}],"isBlockCoverage":false},{"functionName":"resetTmpl","ranges":[{"startOffset":1152,"endOffset":1651,"count":0}],"isBlockCoverage":false},{"functionName":"restoreTmpl","ranges":[{"startOffset":2113,"endOffset":2634,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1018","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/fast-redact/lib/modifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9434,"count":1}],"isBlockCoverage":true},{"functionName":"groupRestore","ranges":[{"startOffset":99,"endOffset":328,"count":0}],"isBlockCoverage":false},{"functionName":"groupRedact","ranges":[{"startOffset":330,"endOffset":1128,"count":0}],"isBlockCoverage":false},{"functionName":"nestedRestore","ranges":[{"startOffset":1238,"endOffset":1526,"count":0}],"isBlockCoverage":false},{"functionName":"nestedRedact","ranges":[{"startOffset":1528,"endOffset":1912,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":1914,"endOffset":2101,"count":0}],"isBlockCoverage":false},{"functionName":"specialSet","ranges":[{"startOffset":2103,"endOffset":5342,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5344,"endOffset":5475,"count":0}],"isBlockCoverage":false},{"functionName":"iterateNthLevel","ranges":[{"startOffset":5477,"endOffset":6865,"count":0}],"isBlockCoverage":false},{"functionName":"tree","ranges":[{"startOffset":7304,"endOffset":7385,"count":0}],"isBlockCoverage":false},{"functionName":"node","ranges":[{"startOffset":8098,"endOffset":8332,"count":0}],"isBlockCoverage":false},{"functionName":"restoreInstr","ranges":[{"startOffset":9215,"endOffset":9433,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1019","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/fast-redact/lib/state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":422,"count":1}],"isBlockCoverage":true},{"functionName":"state","ranges":[{"startOffset":38,"endOffset":421,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1020","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pino/lib/symbols.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2095,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1021","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pino/lib/time.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":328,"count":1}],"isBlockCoverage":true},{"functionName":"nullTime","ranges":[{"startOffset":31,"endOffset":39,"count":0}],"isBlockCoverage":false},{"functionName":"epochTime","ranges":[{"startOffset":59,"endOffset":88,"count":0}],"isBlockCoverage":false},{"functionName":"unixTime","ranges":[{"startOffset":107,"endOffset":157,"count":0}],"isBlockCoverage":false},{"functionName":"isoTime","ranges":[{"startOffset":175,"endOffset":230,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1022","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pino/lib/proto.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6554,"count":1}],"isBlockCoverage":true},{"functionName":"get level","ranges":[{"startOffset":1094,"endOffset":1137,"count":0}],"isBlockCoverage":false},{"functionName":"set level","ranges":[{"startOffset":1141,"endOffset":1183,"count":0}],"isBlockCoverage":false},{"functionName":"get levelVal","ranges":[{"startOffset":1187,"endOffset":1231,"count":0}],"isBlockCoverage":false},{"functionName":"set levelVal","ranges":[{"startOffset":1235,"endOffset":1292,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1622,"endOffset":1671,"count":1}],"isBlockCoverage":true},{"functionName":"resetChildingsFormatter","ranges":[{"startOffset":1705,"endOffset":1725,"count":0}],"isBlockCoverage":false},{"functionName":"child","ranges":[{"startOffset":1726,"endOffset":4332,"count":0}],"isBlockCoverage":false},{"functionName":"bindings","ranges":[{"startOffset":4334,"endOffset":4644,"count":0}],"isBlockCoverage":false},{"functionName":"setBindings","ranges":[{"startOffset":4646,"endOffset":4802,"count":0}],"isBlockCoverage":false},{"functionName":"defaultMixinMergeStrategy","ranges":[{"startOffset":5148,"endOffset":5262,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":5264,"endOffset":6278,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":6280,"endOffset":6299,"count":0}],"isBlockCoverage":false},{"functionName":"flush","ranges":[{"startOffset":6301,"endOffset":6553,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1023","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pino/lib/levels.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6707,"count":1}],"isBlockCoverage":true},{"functionName":"fatal","ranges":[{"startOffset":338,"endOffset":729,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":417,"endOffset":725,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":740,"endOffset":784,"count":1}],"isBlockCoverage":true},{"functionName":"warn","ranges":[{"startOffset":794,"endOffset":837,"count":1}],"isBlockCoverage":true},{"functionName":"info","ranges":[{"startOffset":847,"endOffset":890,"count":1}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":901,"endOffset":945,"count":0}],"isBlockCoverage":false},{"functionName":"trace","ranges":[{"startOffset":956,"endOffset":1000,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1052,"endOffset":1103,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1158,"endOffset":1215,"count":6}],"isBlockCoverage":true},{"functionName":"genLsCache","ranges":[{"startOffset":1222,"endOffset":1559,"count":1},{"startOffset":1391,"endOffset":1508,"count":6}],"isBlockCoverage":true},{"functionName":"isStandardLevel","ranges":[{"startOffset":1561,"endOffset":1848,"count":4},{"startOffset":1644,"endOffset":1666,"count":0},{"startOffset":1691,"endOffset":1704,"count":1},{"startOffset":1709,"endOffset":1722,"count":2},{"startOffset":1727,"endOffset":1739,"count":3},{"startOffset":1815,"endOffset":1842,"count":0}],"isBlockCoverage":true},{"functionName":"setLevel","ranges":[{"startOffset":1850,"endOffset":2746,"count":1},{"startOffset":1952,"endOffset":2063,"count":0},{"startOffset":2099,"endOffset":2136,"count":0},{"startOffset":2406,"endOffset":2630,"count":6},{"startOffset":2466,"endOffset":2511,"count":2},{"startOffset":2511,"endOffset":2598,"count":4},{"startOffset":2599,"endOffset":2626,"count":0}],"isBlockCoverage":true},{"functionName":"getLevel","ranges":[{"startOffset":2748,"endOffset":3024,"count":0}],"isBlockCoverage":false},{"functionName":"isLevelEnabled","ranges":[{"startOffset":3026,"endOffset":3225,"count":0}],"isBlockCoverage":false},{"functionName":"compareLevel","ranges":[{"startOffset":3576,"endOffset":3739,"count":6},{"startOffset":3671,"endOffset":3707,"count":0}],"isBlockCoverage":true},{"functionName":"genLevelComparison","ranges":[{"startOffset":4076,"endOffset":4252,"count":1},{"startOffset":4224,"endOffset":4251,"count":0}],"isBlockCoverage":true},{"functionName":"mappings","ranges":[{"startOffset":4254,"endOffset":4895,"count":2},{"startOffset":4388,"endOffset":4495,"count":0},{"startOffset":4660,"endOffset":4666,"count":0},{"startOffset":4820,"endOffset":4826,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4423,"endOffset":4490,"count":0}],"isBlockCoverage":false},{"functionName":"assertDefaultLevelFound","ranges":[{"startOffset":4897,"endOffset":5661,"count":1},{"startOffset":5022,"endOffset":5364,"count":0},{"startOffset":5492,"endOffset":5498,"count":0},{"startOffset":5571,"endOffset":5659,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5096,"endOffset":5120,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5178,"endOffset":5193,"count":0}],"isBlockCoverage":false},{"functionName":"assertNoLevelCollisions","ranges":[{"startOffset":5663,"endOffset":5994,"count":0}],"isBlockCoverage":false},{"functionName":"assertLevelComparison","ranges":[{"startOffset":6159,"endOffset":6482,"count":1},{"startOffset":6255,"endOffset":6271,"count":0},{"startOffset":6390,"endOffset":6481,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1024","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pino/lib/tools.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11864,"count":1},{"startOffset":6870,"endOffset":6896,"count":0}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":649,"endOffset":669,"count":0}],"isBlockCoverage":false},{"functionName":"genLog","ranges":[{"startOffset":671,"endOffset":1994,"count":4},{"startOffset":726,"endOffset":1993,"count":0}],"isBlockCoverage":true},{"functionName":"hookWrappedLog","ranges":[{"startOffset":737,"endOffset":814,"count":0}],"isBlockCoverage":false},{"functionName":"LOG","ranges":[{"startOffset":818,"endOffset":1992,"count":0}],"isBlockCoverage":false},{"functionName":"asString","ranges":[{"startOffset":2180,"endOffset":2697,"count":0}],"isBlockCoverage":false},{"functionName":"asJson","ranges":[{"startOffset":2699,"endOffset":5739,"count":0}],"isBlockCoverage":false},{"functionName":"asChindings","ranges":[{"startOffset":5741,"endOffset":6711,"count":1},{"startOffset":6480,"endOffset":6505,"count":0},{"startOffset":6637,"endOffset":6645,"count":0}],"isBlockCoverage":true},{"functionName":"hasBeenTampered","ranges":[{"startOffset":6713,"endOffset":6811,"count":1}],"isBlockCoverage":true},{"functionName":"buildSafeSonicBoom","ranges":[{"startOffset":6898,"endOffset":7935,"count":1},{"startOffset":7226,"endOffset":7239,"count":0},{"startOffset":7240,"endOffset":7255,"count":0},{"startOffset":7257,"endOffset":7376,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7320,"endOffset":7371,"count":0}],"isBlockCoverage":false},{"functionName":"filterBrokenPipe","ranges":[{"startOffset":7396,"endOffset":7933,"count":0}],"isBlockCoverage":false},{"functionName":"autoEnd","ranges":[{"startOffset":7937,"endOffset":8463,"count":0}],"isBlockCoverage":false},{"functionName":"createArgsNormalizer","ranges":[{"startOffset":8465,"endOffset":10723,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeArgs","ranges":[{"startOffset":8523,"endOffset":10721,"count":1},{"startOffset":8654,"endOffset":8727,"count":0},{"startOffset":8765,"endOffset":8947,"count":0},{"startOffset":9024,"endOffset":9067,"count":0},{"startOffset":9093,"endOffset":9820,"count":0},{"startOffset":10070,"endOffset":10213,"count":0},{"startOffset":10280,"endOffset":10301,"count":0},{"startOffset":10621,"endOffset":10625,"count":0},{"startOffset":10636,"endOffset":10683,"count":0}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":10725,"endOffset":11042,"count":1},{"startOffset":10812,"endOffset":11040,"count":0}],"isBlockCoverage":true},{"functionName":"buildFormatters","ranges":[{"startOffset":11044,"endOffset":11143,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeDestFileDescriptor","ranges":[{"startOffset":11352,"endOffset":11690,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1025","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/quick-format-unescaped/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2661,"count":1}],"isBlockCoverage":true},{"functionName":"tryStringify","ranges":[{"startOffset":13,"endOffset":112,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":139,"endOffset":2660,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1026","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sonic-boom/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16106,"count":1}],"isBlockCoverage":true},{"functionName":"openFile","ranges":[{"startOffset":519,"endOffset":2288,"count":0}],"isBlockCoverage":false},{"functionName":"SonicBoom","ranges":[{"startOffset":2290,"endOffset":6772,"count":1},{"startOffset":2354,"endOffset":2390,"count":0},{"startOffset":2517,"endOffset":2522,"count":0},{"startOffset":2534,"endOffset":2541,"count":0},{"startOffset":3051,"endOffset":3059,"count":0},{"startOffset":3233,"endOffset":3545,"count":0},{"startOffset":3581,"endOffset":3616,"count":0},{"startOffset":3912,"endOffset":4042,"count":0},{"startOffset":4143,"endOffset":4290,"count":0},{"startOffset":4330,"endOffset":4419,"count":0}],"isBlockCoverage":true},{"functionName":"SonicBoom.retryEAGAIN","ranges":[{"startOffset":3116,"endOffset":3126,"count":0}],"isBlockCoverage":false},{"functionName":"fsWriteSync","ranges":[{"startOffset":3426,"endOffset":3471,"count":0}],"isBlockCoverage":false},{"functionName":"fsWrite","ranges":[{"startOffset":3486,"endOffset":3541,"count":0}],"isBlockCoverage":false},{"functionName":"fsWriteSync","ranges":[{"startOffset":3777,"endOffset":3830,"count":0}],"isBlockCoverage":false},{"functionName":"fsWrite","ranges":[{"startOffset":3845,"endOffset":3908,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4114,"endOffset":4138,"count":1}],"isBlockCoverage":true},{"functionName":"SonicBoom.release","ranges":[{"startOffset":4438,"endOffset":6647,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6674,"endOffset":6769,"count":1},{"startOffset":6718,"endOffset":6765,"count":0}],"isBlockCoverage":true},{"functionName":"releaseWritingBuf","ranges":[{"startOffset":7158,"endOffset":7728,"count":0}],"isBlockCoverage":false},{"functionName":"emitDrain","ranges":[{"startOffset":7730,"endOffset":7903,"count":0}],"isBlockCoverage":false},{"functionName":"mergeBuf","ranges":[{"startOffset":7940,"endOffset":8114,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":8116,"endOffset":8702,"count":0}],"isBlockCoverage":false},{"functionName":"writeBuffer","ranges":[{"startOffset":8704,"endOffset":9383,"count":0}],"isBlockCoverage":false},{"functionName":"callFlushCallbackOnDrain","ranges":[{"startOffset":9385,"endOffset":9919,"count":0}],"isBlockCoverage":false},{"functionName":"flush","ranges":[{"startOffset":9921,"endOffset":10434,"count":0}],"isBlockCoverage":false},{"functionName":"flushBuffer","ranges":[{"startOffset":10436,"endOffset":10978,"count":0}],"isBlockCoverage":false},{"functionName":"SonicBoom.reopen","ranges":[{"startOffset":11009,"endOffset":11686,"count":0}],"isBlockCoverage":false},{"functionName":"SonicBoom.end","ranges":[{"startOffset":11714,"endOffset":12095,"count":0}],"isBlockCoverage":false},{"functionName":"flushSync","ranges":[{"startOffset":12097,"endOffset":13129,"count":0}],"isBlockCoverage":false},{"functionName":"flushBufferSync","ranges":[{"startOffset":13131,"endOffset":14068,"count":0}],"isBlockCoverage":false},{"functionName":"SonicBoom.destroy","ranges":[{"startOffset":14100,"endOffset":14174,"count":0}],"isBlockCoverage":false},{"functionName":"actualWrite","ranges":[{"startOffset":14176,"endOffset":14569,"count":0}],"isBlockCoverage":false},{"functionName":"actualWriteBuffer","ranges":[{"startOffset":14571,"endOffset":15003,"count":0}],"isBlockCoverage":false},{"functionName":"actualClose","ranges":[{"startOffset":15005,"endOffset":15601,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1027","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/atomic-sleep/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1211,"count":1},{"startOffset":678,"endOffset":1210,"count":0}],"isBlockCoverage":true},{"functionName":"sleep","ranges":[{"startOffset":195,"endOffset":651,"count":0}],"isBlockCoverage":false},{"functionName":"sleep","ranges":[{"startOffset":689,"endOffset":1181,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1028","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/on-exit-leak-free/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1964,"count":1}],"isBlockCoverage":true},{"functionName":"ensureRegistry","ranges":[{"startOffset":140,"endOffset":253,"count":0}],"isBlockCoverage":false},{"functionName":"install","ranges":[{"startOffset":255,"endOffset":369,"count":0}],"isBlockCoverage":false},{"functionName":"uninstall","ranges":[{"startOffset":371,"endOffset":591,"count":0}],"isBlockCoverage":false},{"functionName":"onExit","ranges":[{"startOffset":593,"endOffset":634,"count":0}],"isBlockCoverage":false},{"functionName":"onBeforeExit","ranges":[{"startOffset":636,"endOffset":689,"count":0}],"isBlockCoverage":false},{"functionName":"callRefs","ranges":[{"startOffset":691,"endOffset":1011,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":1013,"endOffset":1194,"count":0}],"isBlockCoverage":false},{"functionName":"_register","ranges":[{"startOffset":1196,"endOffset":1456,"count":0}],"isBlockCoverage":false},{"functionName":"register","ranges":[{"startOffset":1458,"endOffset":1518,"count":0}],"isBlockCoverage":false},{"functionName":"registerBeforeExit","ranges":[{"startOffset":1520,"endOffset":1596,"count":0}],"isBlockCoverage":false},{"functionName":"unregister","ranges":[{"startOffset":1598,"endOffset":1894,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1029","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pino/lib/transport.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3871,"count":1}],"isBlockCoverage":true},{"functionName":"setupOnExit","ranges":[{"startOffset":276,"endOffset":515,"count":0}],"isBlockCoverage":false},{"functionName":"buildStream","ranges":[{"startOffset":517,"endOffset":1388,"count":0}],"isBlockCoverage":false},{"functionName":"autoEnd","ranges":[{"startOffset":1390,"endOffset":1531,"count":0}],"isBlockCoverage":false},{"functionName":"flush","ranges":[{"startOffset":1533,"endOffset":1581,"count":0}],"isBlockCoverage":false},{"functionName":"transport","ranges":[{"startOffset":1583,"endOffset":3842,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1030","url":"node:module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":408,"count":1}],"isBlockCoverage":false}]},{"scriptId":"1031","url":"node:internal/source_map/source_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12453,"count":1}],"isBlockCoverage":false},{"functionName":"StringCharIterator","ranges":[{"startOffset":4090,"endOffset":4169,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":4212,"endOffset":4292,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":4335,"endOffset":4413,"count":0}],"isBlockCoverage":false},{"functionName":"hasNext","ranges":[{"startOffset":4457,"endOffset":4523,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4672,"endOffset":10340,"count":0}],"isBlockCoverage":false},{"functionName":"isSeparator","ranges":[{"startOffset":10401,"endOffset":10472,"count":0}],"isBlockCoverage":false},{"functionName":"decodeVLQ","ranges":[{"startOffset":10568,"endOffset":11527,"count":0}],"isBlockCoverage":false},{"functionName":"cloneSourceMapV3","ranges":[{"startOffset":11600,"endOffset":11922,"count":0}],"isBlockCoverage":false},{"functionName":"compareSourceMapEntry","ranges":[{"startOffset":12125,"endOffset":12411,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1032","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/thread-stream/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13772,"count":1},{"startOffset":909,"endOffset":966,"count":0},{"startOffset":1026,"endOffset":1057,"count":0}],"isBlockCoverage":true},{"functionName":"FakeWeakRef","ranges":[{"startOffset":529,"endOffset":578,"count":0}],"isBlockCoverage":false},{"functionName":"deref","ranges":[{"startOffset":582,"endOffset":619,"count":0}],"isBlockCoverage":false},{"functionName":"register","ranges":[{"startOffset":658,"endOffset":672,"count":0}],"isBlockCoverage":false},{"functionName":"unregister","ranges":[{"startOffset":676,"endOffset":692,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1101,"endOffset":1175,"count":0}],"isBlockCoverage":false},{"functionName":"createWorker","ranges":[{"startOffset":1178,"endOffset":2148,"count":0}],"isBlockCoverage":false},{"functionName":"drain","ranges":[{"startOffset":2150,"endOffset":2305,"count":0}],"isBlockCoverage":false},{"functionName":"nextFlush","ranges":[{"startOffset":2307,"endOffset":4286,"count":0}],"isBlockCoverage":false},{"functionName":"onWorkerMessage","ranges":[{"startOffset":4288,"endOffset":5122,"count":0}],"isBlockCoverage":false},{"functionName":"onWorkerExit","ranges":[{"startOffset":5124,"endOffset":5463,"count":0}],"isBlockCoverage":false},{"functionName":"ThreadStream","ranges":[{"startOffset":5509,"endOffset":6510,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":6514,"endOffset":7468,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":7472,"endOffset":7581,"count":0}],"isBlockCoverage":false},{"functionName":"flush","ranges":[{"startOffset":7585,"endOffset":8326,"count":0}],"isBlockCoverage":false},{"functionName":"flushSync","ranges":[{"startOffset":8330,"endOffset":8441,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":8445,"endOffset":8483,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":8487,"endOffset":8521,"count":0}],"isBlockCoverage":false},{"functionName":"get ready","ranges":[{"startOffset":8525,"endOffset":8572,"count":0}],"isBlockCoverage":false},{"functionName":"get destroyed","ranges":[{"startOffset":8576,"endOffset":8631,"count":0}],"isBlockCoverage":false},{"functionName":"get closed","ranges":[{"startOffset":8635,"endOffset":8684,"count":0}],"isBlockCoverage":false},{"functionName":"get writable","ranges":[{"startOffset":8688,"endOffset":8766,"count":0}],"isBlockCoverage":false},{"functionName":"get writableEnded","ranges":[{"startOffset":8770,"endOffset":8826,"count":0}],"isBlockCoverage":false},{"functionName":"get writableFinished","ranges":[{"startOffset":8830,"endOffset":8891,"count":0}],"isBlockCoverage":false},{"functionName":"get writableNeedDrain","ranges":[{"startOffset":8895,"endOffset":8958,"count":0}],"isBlockCoverage":false},{"functionName":"get writableObjectMode","ranges":[{"startOffset":8962,"endOffset":9010,"count":0}],"isBlockCoverage":false},{"functionName":"get writableErrored","ranges":[{"startOffset":9014,"endOffset":9073,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":9077,"endOffset":9167,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":9169,"endOffset":9644,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":9646,"endOffset":10022,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":10024,"endOffset":11253,"count":0}],"isBlockCoverage":false},{"functionName":"writeSync","ranges":[{"startOffset":11255,"endOffset":12886,"count":0}],"isBlockCoverage":false},{"functionName":"flushSync","ranges":[{"startOffset":12888,"endOffset":13740,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1033","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/thread-stream/lib/wait.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1556,"count":1}],"isBlockCoverage":true},{"functionName":"wait","ranges":[{"startOffset":40,"endOffset":718,"count":0}],"isBlockCoverage":false},{"functionName":"waitDiff","ranges":[{"startOffset":745,"endOffset":1518,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1034","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/thread-stream/lib/indexes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":107,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1035","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pino/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":375,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1036","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pino/lib/meta.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":52,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1037","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/safe-stable-stringify/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19368,"count":1}],"isBlockCoverage":true},{"functionName":"strEscape","ranges":[{"startOffset":761,"endOffset":986,"count":0}],"isBlockCoverage":false},{"functionName":"insertSort","ranges":[{"startOffset":988,"endOffset":1513,"count":0}],"isBlockCoverage":false},{"functionName":"isTypedArrayWithEntries","ranges":[{"startOffset":1725,"endOffset":1866,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyTypedArray","ranges":[{"startOffset":1868,"endOffset":2224,"count":0}],"isBlockCoverage":false},{"functionName":"getCircularValueOption","ranges":[{"startOffset":2226,"endOffset":2861,"count":2},{"startOffset":2323,"endOffset":2835,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":2613,"endOffset":2707,"count":0}],"isBlockCoverage":false},{"functionName":"getBooleanOption","ranges":[{"startOffset":2863,"endOffset":3154,"count":4},{"startOffset":2959,"endOffset":3108,"count":0},{"startOffset":3145,"endOffset":3152,"count":0}],"isBlockCoverage":true},{"functionName":"getPositiveIntegerOption","ranges":[{"startOffset":3156,"endOffset":3661,"count":4},{"startOffset":3260,"endOffset":3611,"count":2},{"startOffset":3322,"endOffset":3403,"count":0},{"startOffset":3438,"endOffset":3515,"count":0},{"startOffset":3535,"endOffset":3607,"count":0},{"startOffset":3641,"endOffset":3651,"count":2},{"startOffset":3652,"endOffset":3659,"count":2}],"isBlockCoverage":true},{"functionName":"getItemCount","ranges":[{"startOffset":3663,"endOffset":3770,"count":0}],"isBlockCoverage":false},{"functionName":"getUniqueReplacerSet","ranges":[{"startOffset":3772,"endOffset":4026,"count":0}],"isBlockCoverage":false},{"functionName":"getStrictOption","ranges":[{"startOffset":4028,"endOffset":4529,"count":2},{"startOffset":4111,"endOffset":4527,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4295,"endOffset":4517,"count":0}],"isBlockCoverage":false},{"functionName":"configure","ranges":[{"startOffset":4531,"endOffset":19367,"count":2},{"startOffset":4641,"endOffset":4804,"count":0}],"isBlockCoverage":true},{"functionName":"stringifyFnReplacer","ranges":[{"startOffset":5134,"endOffset":8791,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyArrayReplacer","ranges":[{"startOffset":8795,"endOffset":11693,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyIndent","ranges":[{"startOffset":11697,"endOffset":15405,"count":0}],"isBlockCoverage":false},{"functionName":"stringifySimple","ranges":[{"startOffset":15409,"endOffset":18589,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":18593,"endOffset":19345,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1038","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pino/lib/multistream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4431,"count":1}],"isBlockCoverage":true},{"functionName":"multistream","ranges":[{"startOffset":158,"endOffset":4104,"count":0}],"isBlockCoverage":false},{"functionName":"compareByLevel","ranges":[{"startOffset":4106,"endOffset":4167,"count":0}],"isBlockCoverage":false},{"functionName":"initLoopVar","ranges":[{"startOffset":4169,"endOffset":4243,"count":0}],"isBlockCoverage":false},{"functionName":"adjustLoopVar","ranges":[{"startOffset":4245,"endOffset":4315,"count":0}],"isBlockCoverage":false},{"functionName":"checkLoopVar","ranges":[{"startOffset":4317,"endOffset":4400,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1039","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/dayjs/dayjs.min.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7160,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":199,"count":1},{"startOffset":86,"endOffset":198,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":206,"endOffset":7157,"count":1}],"isBlockCoverage":true},{"functionName":"ordinal","ranges":[{"startOffset":763,"endOffset":854,"count":0}],"isBlockCoverage":false},{"functionName":"m","ranges":[{"startOffset":858,"endOffset":947,"count":8},{"startOffset":911,"endOffset":913,"count":5},{"startOffset":913,"endOffset":946,"count":3}],"isBlockCoverage":true},{"functionName":"z","ranges":[{"startOffset":957,"endOffset":1077,"count":1},{"startOffset":1045,"endOffset":1049,"count":0}],"isBlockCoverage":true},{"functionName":"t","ranges":[{"startOffset":1080,"endOffset":1276,"count":0}],"isBlockCoverage":false},{"functionName":"a","ranges":[{"startOffset":1279,"endOffset":1332,"count":0}],"isBlockCoverage":false},{"functionName":"p","ranges":[{"startOffset":1335,"endOffset":1445,"count":0}],"isBlockCoverage":false},{"functionName":"u","ranges":[{"startOffset":1448,"endOffset":1478,"count":1}],"isBlockCoverage":true},{"functionName":"S","ranges":[{"startOffset":1524,"endOffset":1572,"count":1},{"startOffset":1563,"endOffset":1570,"count":0}],"isBlockCoverage":true},{"functionName":"t","ranges":[{"startOffset":1575,"endOffset":1796,"count":1},{"startOffset":1614,"endOffset":1786,"count":0},{"startOffset":1788,"endOffset":1795,"count":0}],"isBlockCoverage":true},{"functionName":"O","ranges":[{"startOffset":1799,"endOffset":1910,"count":1},{"startOffset":1821,"endOffset":1838,"count":0},{"startOffset":1862,"endOffset":1864,"count":0}],"isBlockCoverage":true},{"functionName":"b.w","ranges":[{"startOffset":1931,"endOffset":2005,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2012,"endOffset":6828,"count":1}],"isBlockCoverage":true},{"functionName":"M","ranges":[{"startOffset":2023,"endOffset":2115,"count":1}],"isBlockCoverage":true},{"functionName":"m.parse","ranges":[{"startOffset":2148,"endOffset":2564,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2168,"endOffset":2548,"count":1},{"startOffset":2213,"endOffset":2234,"count":0},{"startOffset":2260,"endOffset":2337,"count":0},{"startOffset":2338,"endOffset":2547,"count":0}],"isBlockCoverage":true},{"functionName":"m.init","ranges":[{"startOffset":2572,"endOffset":2777,"count":1}],"isBlockCoverage":true},{"functionName":"m.$utils","ranges":[{"startOffset":2787,"endOffset":2807,"count":0}],"isBlockCoverage":false},{"functionName":"m.isValid","ranges":[{"startOffset":2818,"endOffset":2861,"count":1}],"isBlockCoverage":true},{"functionName":"m.isSame","ranges":[{"startOffset":2871,"endOffset":2940,"count":0}],"isBlockCoverage":false},{"functionName":"m.isAfter","ranges":[{"startOffset":2951,"endOffset":2993,"count":0}],"isBlockCoverage":false},{"functionName":"m.isBefore","ranges":[{"startOffset":3005,"endOffset":3045,"count":0}],"isBlockCoverage":false},{"functionName":"m.$g","ranges":[{"startOffset":3051,"endOffset":3103,"count":0}],"isBlockCoverage":false},{"functionName":"m.unix","ranges":[{"startOffset":3111,"endOffset":3160,"count":0}],"isBlockCoverage":false},{"functionName":"m.valueOf","ranges":[{"startOffset":3171,"endOffset":3207,"count":0}],"isBlockCoverage":false},{"functionName":"m.startOf","ranges":[{"startOffset":3218,"endOffset":3842,"count":0}],"isBlockCoverage":false},{"functionName":"m.endOf","ranges":[{"startOffset":3851,"endOffset":3889,"count":0}],"isBlockCoverage":false},{"functionName":"m.$set","ranges":[{"startOffset":3897,"endOffset":4294,"count":0}],"isBlockCoverage":false},{"functionName":"m.set","ranges":[{"startOffset":4301,"endOffset":4345,"count":0}],"isBlockCoverage":false},{"functionName":"m.get","ranges":[{"startOffset":4352,"endOffset":4386,"count":0}],"isBlockCoverage":false},{"functionName":"m.add","ranges":[{"startOffset":4393,"endOffset":4721,"count":0}],"isBlockCoverage":false},{"functionName":"m.subtract","ranges":[{"startOffset":4733,"endOffset":4771,"count":0}],"isBlockCoverage":false},{"functionName":"m.format","ranges":[{"startOffset":4781,"endOffset":5945,"count":1},{"startOffset":4840,"endOffset":4864,"count":0}],"isBlockCoverage":true},{"functionName":"h","ranges":[{"startOffset":4977,"endOffset":5037,"count":0}],"isBlockCoverage":false},{"functionName":"d","ranges":[{"startOffset":5040,"endOffset":5079,"count":0}],"isBlockCoverage":false},{"functionName":"$","ranges":[{"startOffset":5085,"endOffset":5149,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5170,"endOffset":5942,"count":7},{"startOffset":5922,"endOffset":5941,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5194,"endOffset":5919,"count":7},{"startOffset":5216,"endOffset":5255,"count":0},{"startOffset":5255,"endOffset":5289,"count":1},{"startOffset":5289,"endOffset":5308,"count":0},{"startOffset":5308,"endOffset":5339,"count":1},{"startOffset":5339,"endOffset":5424,"count":0},{"startOffset":5424,"endOffset":5456,"count":1},{"startOffset":5456,"endOffset":5622,"count":0},{"startOffset":5622,"endOffset":5651,"count":1},{"startOffset":5651,"endOffset":5767,"count":0},{"startOffset":5767,"endOffset":5796,"count":1},{"startOffset":5796,"endOffset":5824,"count":0},{"startOffset":5824,"endOffset":5856,"count":1},{"startOffset":5856,"endOffset":5890,"count":0},{"startOffset":5890,"endOffset":5906,"count":1},{"startOffset":5907,"endOffset":5918,"count":0}],"isBlockCoverage":true},{"functionName":"m.utcOffset","ranges":[{"startOffset":5958,"endOffset":6023,"count":1}],"isBlockCoverage":true},{"functionName":"m.diff","ranges":[{"startOffset":6031,"endOffset":6366,"count":0}],"isBlockCoverage":false},{"functionName":"m.daysInMonth","ranges":[{"startOffset":6381,"endOffset":6416,"count":0}],"isBlockCoverage":false},{"functionName":"m.$locale","ranges":[{"startOffset":6427,"endOffset":6456,"count":1}],"isBlockCoverage":true},{"functionName":"m.locale","ranges":[{"startOffset":6466,"endOffset":6553,"count":0}],"isBlockCoverage":false},{"functionName":"m.clone","ranges":[{"startOffset":6562,"endOffset":6598,"count":0}],"isBlockCoverage":false},{"functionName":"m.toDate","ranges":[{"startOffset":6608,"endOffset":6651,"count":0}],"isBlockCoverage":false},{"functionName":"m.toJSON","ranges":[{"startOffset":6661,"endOffset":6718,"count":0}],"isBlockCoverage":false},{"functionName":"m.toISOString","ranges":[{"startOffset":6733,"endOffset":6773,"count":0}],"isBlockCoverage":false},{"functionName":"m.toString","ranges":[{"startOffset":6785,"endOffset":6825,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6950,"endOffset":7011,"count":8}],"isBlockCoverage":true},{"functionName":"forEach.k.<computed>","ranges":[{"startOffset":6970,"endOffset":7010,"count":0}],"isBlockCoverage":false},{"functionName":"O.extend","ranges":[{"startOffset":7023,"endOffset":7071,"count":0}],"isBlockCoverage":false},{"functionName":"O.unix","ranges":[{"startOffset":7102,"endOffset":7130,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1040","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/jsonwebtoken/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":276,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1041","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/jsonwebtoken/decode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":767,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":44,"endOffset":765,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1042","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/jws/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":609,"count":1}],"isBlockCoverage":true},{"functionName":"createSign","ranges":[{"startOffset":458,"endOffset":518,"count":0}],"isBlockCoverage":false},{"functionName":"createVerify","ranges":[{"startOffset":543,"endOffset":607,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1043","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/jws/lib/sign-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2197,"count":1}],"isBlockCoverage":true},{"functionName":"base64url","ranges":[{"startOffset":230,"endOffset":412,"count":0}],"isBlockCoverage":false},{"functionName":"jwsSecuredInput","ranges":[{"startOffset":414,"endOffset":688,"count":0}],"isBlockCoverage":false},{"functionName":"jwsSign","ranges":[{"startOffset":690,"endOffset":1065,"count":0}],"isBlockCoverage":false},{"functionName":"SignStream","ranges":[{"startOffset":1067,"endOffset":1643,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":1708,"endOffset":2137,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1044","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/jws/lib/data-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1242,"count":1}],"isBlockCoverage":true},{"functionName":"DataStream","ranges":[{"startOffset":132,"endOffset":844,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":910,"endOffset":1026,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":1056,"endOffset":1210,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1045","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/jwa/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6501,"count":1}],"isBlockCoverage":true},{"functionName":"checkIsPublicKey","ranges":[{"startOffset":821,"endOffset":1404,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsPrivateKey","ranges":[{"startOffset":1407,"endOffset":1632,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsSecretKey","ranges":[{"startOffset":1635,"endOffset":2088,"count":0}],"isBlockCoverage":false},{"functionName":"fromBase64","ranges":[{"startOffset":2090,"endOffset":2211,"count":0}],"isBlockCoverage":false},{"functionName":"toBase64","ranges":[{"startOffset":2213,"endOffset":2491,"count":0}],"isBlockCoverage":false},{"functionName":"typeError","ranges":[{"startOffset":2493,"endOffset":2666,"count":0}],"isBlockCoverage":false},{"functionName":"bufferOrString","ranges":[{"startOffset":2668,"endOffset":2758,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeInput","ranges":[{"startOffset":2760,"endOffset":2875,"count":0}],"isBlockCoverage":false},{"functionName":"createHmacSigner","ranges":[{"startOffset":2877,"endOffset":3163,"count":0}],"isBlockCoverage":false},{"functionName":"createHmacVerifier","ranges":[{"startOffset":3165,"endOffset":3394,"count":0}],"isBlockCoverage":false},{"functionName":"createKeySigner","ranges":[{"startOffset":3396,"endOffset":3794,"count":0}],"isBlockCoverage":false},{"functionName":"createKeyVerifier","ranges":[{"startOffset":3796,"endOffset":4143,"count":0}],"isBlockCoverage":false},{"functionName":"createPSSKeySigner","ranges":[{"startOffset":4145,"endOffset":4588,"count":0}],"isBlockCoverage":false},{"functionName":"createPSSKeyVerifier","ranges":[{"startOffset":4590,"endOffset":5073,"count":0}],"isBlockCoverage":false},{"functionName":"createECDSASigner","ranges":[{"startOffset":5075,"endOffset":5315,"count":0}],"isBlockCoverage":false},{"functionName":"createECDSAVerifer","ranges":[{"startOffset":5317,"endOffset":5608,"count":0}],"isBlockCoverage":false},{"functionName":"createNoneSigner","ranges":[{"startOffset":5610,"endOffset":5687,"count":0}],"isBlockCoverage":false},{"functionName":"createNoneVerifier","ranges":[{"startOffset":5689,"endOffset":5800,"count":0}],"isBlockCoverage":false},{"functionName":"jwa","ranges":[{"startOffset":5819,"endOffset":6499,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1046","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/buffer-equal-constant-time/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1045,"count":1}],"isBlockCoverage":true},{"functionName":"bufferEq","ranges":[{"startOffset":165,"endOffset":671,"count":0}],"isBlockCoverage":false},{"functionName":"bufferEq.install","ranges":[{"startOffset":692,"endOffset":823,"count":0}],"isBlockCoverage":false},{"functionName":"bufferEq.restore","ranges":[{"startOffset":939,"endOffset":1043,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1047","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/ecdsa-sig-formatter/src/ecdsa-sig-formatter.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5009,"count":1}],"isBlockCoverage":true},{"functionName":"base64Url","ranges":[{"startOffset":347,"endOffset":460,"count":0}],"isBlockCoverage":false},{"functionName":"signatureAsBuffer","ranges":[{"startOffset":462,"endOffset":727,"count":0}],"isBlockCoverage":false},{"functionName":"derToJose","ranges":[{"startOffset":729,"endOffset":3182,"count":0}],"isBlockCoverage":false},{"functionName":"countPadding","ranges":[{"startOffset":3184,"endOffset":3430,"count":0}],"isBlockCoverage":false},{"functionName":"joseToDer","ranges":[{"startOffset":3432,"endOffset":4940,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1048","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":456,"count":1}],"isBlockCoverage":true},{"functionName":"getParamSize","ranges":[{"startOffset":15,"endOffset":130,"count":3},{"startOffset":103,"endOffset":106,"count":2},{"startOffset":107,"endOffset":110,"count":1}],"isBlockCoverage":true},{"functionName":"getParamBytesForAlg","ranges":[{"startOffset":241,"endOffset":416,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1049","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/jws/lib/tostring.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":262,"count":1}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":75,"endOffset":260,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1050","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/jws/lib/verify-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3226,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":306,"endOffset":404,"count":0}],"isBlockCoverage":false},{"functionName":"safeJsonParse","ranges":[{"startOffset":406,"endOffset":550,"count":0}],"isBlockCoverage":false},{"functionName":"headerFromJWS","ranges":[{"startOffset":552,"endOffset":714,"count":0}],"isBlockCoverage":false},{"functionName":"securedInputFromJWS","ranges":[{"startOffset":716,"endOffset":797,"count":0}],"isBlockCoverage":false},{"functionName":"signatureFromJWS","ranges":[{"startOffset":799,"endOffset":867,"count":0}],"isBlockCoverage":false},{"functionName":"payloadFromJWS","ranges":[{"startOffset":869,"endOffset":1045,"count":0}],"isBlockCoverage":false},{"functionName":"isValidJws","ranges":[{"startOffset":1047,"endOffset":1138,"count":0}],"isBlockCoverage":false},{"functionName":"jwsVerify","ranges":[{"startOffset":1140,"endOffset":1552,"count":0}],"isBlockCoverage":false},{"functionName":"jwsDecode","ranges":[{"startOffset":1554,"endOffset":1988,"count":0}],"isBlockCoverage":false},{"functionName":"VerifyStream","ranges":[{"startOffset":1990,"endOffset":2615,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":2685,"endOffset":3090,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1051","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/jsonwebtoken/verify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8612,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":866,"endOffset":8610,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1052","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/jsonwebtoken/lib/JsonWebTokenError.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":428,"count":1}],"isBlockCoverage":true},{"functionName":"JsonWebTokenError","ranges":[{"startOffset":24,"endOffset":265,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1053","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/jsonwebtoken/lib/NotBeforeError.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":362,"count":1}],"isBlockCoverage":true},{"functionName":"NotBeforeError","ranges":[{"startOffset":78,"endOffset":199,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1054","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/jsonwebtoken/lib/TokenExpiredError.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":395,"count":1}],"isBlockCoverage":true},{"functionName":"TokenExpiredError","ranges":[{"startOffset":81,"endOffset":220,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1055","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/jsonwebtoken/lib/timespan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":412,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":42,"endOffset":411,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1056","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/jsonwebtoken/lib/validateAsymmetricKey.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2238,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":458,"endOffset":2237,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1057","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/jsonwebtoken/lib/asymmetricKeyDetailsSupported.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":99,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1058","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/jsonwebtoken/lib/rsaPssKeyDetailsSupported.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":99,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1059","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/jsonwebtoken/lib/psSupported.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":107,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1060","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/jsonwebtoken/sign.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9350,"count":1}],"isBlockCoverage":true},{"functionName":"isValid","ranges":[{"startOffset":839,"endOffset":913,"count":0}],"isBlockCoverage":false},{"functionName":"isValid","ranges":[{"startOffset":1029,"endOffset":1103,"count":0}],"isBlockCoverage":false},{"functionName":"isValid","ranges":[{"startOffset":1218,"endOffset":1285,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":2560,"endOffset":3107,"count":0}],"isBlockCoverage":false},{"functionName":"validateOptions","ranges":[{"startOffset":3109,"endOffset":3213,"count":0}],"isBlockCoverage":false},{"functionName":"validatePayload","ranges":[{"startOffset":3215,"endOffset":3323,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":3583,"endOffset":9348,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1061","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/lodash.includes/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18716,"count":1}],"isBlockCoverage":true},{"functionName":"arrayMap","ranges":[{"startOffset":1595,"endOffset":1831,"count":0}],"isBlockCoverage":false},{"functionName":"baseFindIndex","ranges":[{"startOffset":2276,"endOffset":2565,"count":0}],"isBlockCoverage":false},{"functionName":"baseIndexOf","ranges":[{"startOffset":2885,"endOffset":3183,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsNaN","ranges":[{"startOffset":3396,"endOffset":3451,"count":0}],"isBlockCoverage":false},{"functionName":"baseTimes","ranges":[{"startOffset":3766,"endOffset":3927,"count":0}],"isBlockCoverage":false},{"functionName":"baseValues","ranges":[{"startOffset":4283,"endOffset":4392,"count":0}],"isBlockCoverage":false},{"functionName":"overArg","ranges":[{"startOffset":4648,"endOffset":4748,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4693,"endOffset":4745,"count":0}],"isBlockCoverage":false},{"functionName":"arrayLikeKeys","ranges":[{"startOffset":5646,"endOffset":6195,"count":0}],"isBlockCoverage":false},{"functionName":"baseKeys","ranges":[{"startOffset":6407,"endOffset":6675,"count":0}],"isBlockCoverage":false},{"functionName":"isIndex","ranges":[{"startOffset":6950,"endOffset":7173,"count":0}],"isBlockCoverage":false},{"functionName":"isPrototype","ranges":[{"startOffset":7367,"endOffset":7542,"count":0}],"isBlockCoverage":false},{"functionName":"includes","ranges":[{"startOffset":8490,"endOffset":8969,"count":0}],"isBlockCoverage":false},{"functionName":"isArguments","ranges":[{"startOffset":9358,"endOffset":9626,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLike","ranges":[{"startOffset":10704,"endOffset":10807,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLikeObject","ranges":[{"startOffset":11333,"endOffset":11422,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":11762,"endOffset":12054,"count":0}],"isBlockCoverage":false},{"functionName":"isLength","ranges":[{"startOffset":12601,"endOffset":12729,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":13312,"endOffset":13429,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLike","ranges":[{"startOffset":13928,"endOffset":14006,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":14351,"endOffset":14505,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":14864,"endOffset":14999,"count":0}],"isBlockCoverage":false},{"functionName":"toFinite","ranges":[{"startOffset":15405,"endOffset":15677,"count":0}],"isBlockCoverage":false},{"functionName":"toInteger","ranges":[{"startOffset":16202,"endOffset":16370,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":16743,"endOffset":17333,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":17963,"endOffset":18061,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":18603,"endOffset":18687,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1062","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/lodash.isboolean/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1819,"count":1}],"isBlockCoverage":true},{"functionName":"isBoolean","ranges":[{"startOffset":1085,"endOffset":1228,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLike","ranges":[{"startOffset":1711,"endOffset":1789,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1063","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/lodash.isinteger/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6036,"count":1}],"isBlockCoverage":true},{"functionName":"isInteger","ranges":[{"startOffset":1808,"endOffset":1901,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":2484,"endOffset":2601,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLike","ranges":[{"startOffset":3100,"endOffset":3178,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":3537,"endOffset":3672,"count":0}],"isBlockCoverage":false},{"functionName":"toFinite","ranges":[{"startOffset":4078,"endOffset":4350,"count":0}],"isBlockCoverage":false},{"functionName":"toInteger","ranges":[{"startOffset":4875,"endOffset":5043,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":5416,"endOffset":6006,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1064","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/lodash.isnumber/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2025,"count":1}],"isBlockCoverage":true},{"functionName":"isObjectLike","ranges":[{"startOffset":1224,"endOffset":1302,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":1861,"endOffset":1996,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1065","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/lodash.isplainobject/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3673,"count":1}],"isBlockCoverage":true},{"functionName":"isHostObject","ranges":[{"startOffset":661,"endOffset":988,"count":0}],"isBlockCoverage":false},{"functionName":"overArg","ranges":[{"startOffset":1244,"endOffset":1344,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1289,"endOffset":1341,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLike","ranges":[{"startOffset":2533,"endOffset":2611,"count":0}],"isBlockCoverage":false},{"functionName":"isPlainObject","ranges":[{"startOffset":3212,"endOffset":3639,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1066","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/lodash.isstring/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2302,"count":1}],"isBlockCoverage":true},{"functionName":"isObjectLike","ranges":[{"startOffset":1700,"endOffset":1778,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":2119,"endOffset":2273,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1067","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/lodash.once/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7094,"count":1}],"isBlockCoverage":true},{"functionName":"before","ranges":[{"startOffset":2051,"endOffset":2357,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":2915,"endOffset":2964,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":3547,"endOffset":3664,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLike","ranges":[{"startOffset":4163,"endOffset":4241,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":4600,"endOffset":4735,"count":0}],"isBlockCoverage":false},{"functionName":"toFinite","ranges":[{"startOffset":5141,"endOffset":5413,"count":0}],"isBlockCoverage":false},{"functionName":"toInteger","ranges":[{"startOffset":5938,"endOffset":6106,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":6479,"endOffset":7069,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1068","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/bcrypt/bcrypt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7315,"count":1}],"isBlockCoverage":true},{"functionName":"genSaltSync","ranges":[{"startOffset":435,"endOffset":870,"count":0}],"isBlockCoverage":false},{"functionName":"genSalt","ranges":[{"startOffset":1022,"endOffset":2359,"count":0}],"isBlockCoverage":false},{"functionName":"hashSync","ranges":[{"startOffset":2547,"endOffset":3076,"count":0}],"isBlockCoverage":false},{"functionName":"hash","ranges":[{"startOffset":3279,"endOffset":4867,"count":0}],"isBlockCoverage":false},{"functionName":"compareSync","ranges":[{"startOffset":5080,"endOffset":5456,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":5707,"endOffset":6916,"count":0}],"isBlockCoverage":false},{"functionName":"getRounds","ranges":[{"startOffset":7072,"endOffset":7313,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1069","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@mapbox/node-pre-gyp/lib/node-pre-gyp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8844,"count":1},{"startOffset":945,"endOffset":1013,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1135,"endOffset":1193,"count":1}],"isBlockCoverage":true},{"functionName":"Run","ranges":[{"startOffset":1953,"endOffset":2490,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2129,"endOffset":2318,"count":13}],"isBlockCoverage":true},{"functionName":"self.commands.<computed>","ranges":[{"startOffset":2173,"endOffset":2313,"count":0}],"isBlockCoverage":false},{"functionName":"parseOpts","ranges":[{"startOffset":3371,"endOffset":5621,"count":1},{"startOffset":4141,"endOffset":4203,"count":0},{"startOffset":4368,"endOffset":4448,"count":0},{"startOffset":5562,"endOffset":5603,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3619,"endOffset":3742,"count":1},{"startOffset":3684,"endOffset":3722,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3847,"endOffset":4111,"count":1},{"startOffset":3888,"endOffset":4107,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4788,"endOffset":5532,"count":170},{"startOffset":4847,"endOffset":4854,"count":155},{"startOffset":4854,"endOffset":4939,"count":15},{"startOffset":4939,"endOffset":4969,"count":0},{"startOffset":4969,"endOffset":5528,"count":15},{"startOffset":5270,"endOffset":5476,"count":1},{"startOffset":5418,"endOffset":5468,"count":0},{"startOffset":5476,"endOffset":5522,"count":14}],"isBlockCoverage":true},{"functionName":"proto.setBinaryHostProperty","ranges":[{"startOffset":6964,"endOffset":8209,"count":1},{"startOffset":7010,"endOffset":7057,"count":0},{"startOffset":7232,"endOffset":7375,"count":0},{"startOffset":7377,"endOffset":7486,"count":0},{"startOffset":7488,"endOffset":7805,"count":0},{"startOffset":7807,"endOffset":8208,"count":0}],"isBlockCoverage":true},{"functionName":"usage","ranges":[{"startOffset":8287,"endOffset":8683,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8770,"endOffset":8819,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1070","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@mapbox/node-pre-gyp/lib/util/s3_setup.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4581,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports.detect","ranges":[{"startOffset":151,"endOffset":925,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.get_s3","ranges":[{"startOffset":952,"endOffset":2529,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.get_mockS3Http","ranges":[{"startOffset":2765,"endOffset":4576,"count":1},{"startOffset":2873,"endOffset":4575,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2855,"endOffset":2868,"count":2}],"isBlockCoverage":true},{"functionName":"mock_http","ranges":[{"startOffset":3267,"endOffset":3856,"count":0}],"isBlockCoverage":false},{"functionName":"mockS3Http","ranges":[{"startOffset":4060,"endOffset":4343,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1071","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@mapbox/node-pre-gyp/node_modules/nopt/lib/nopt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12220,"count":1},{"startOffset":98,"endOffset":155,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":100,"endOffset":155,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":160,"endOffset":174,"count":3}],"isBlockCoverage":true},{"functionName":"nopt","ranges":[{"startOffset":813,"endOffset":1480,"count":1},{"startOffset":876,"endOffset":891,"count":0},{"startOffset":908,"endOffset":913,"count":0},{"startOffset":940,"endOffset":945,"count":0}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":1370,"endOffset":1442,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":1482,"endOffset":4022,"count":1},{"startOffset":1545,"endOffset":1564,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1667,"endOffset":4019,"count":0}],"isBlockCoverage":false},{"functionName":"validateString","ranges":[{"startOffset":4024,"endOffset":4090,"count":0}],"isBlockCoverage":false},{"functionName":"validatePath","ranges":[{"startOffset":4092,"endOffset":4500,"count":0}],"isBlockCoverage":false},{"functionName":"validateNumber","ranges":[{"startOffset":4502,"endOffset":4648,"count":0}],"isBlockCoverage":false},{"functionName":"validateDate","ranges":[{"startOffset":4650,"endOffset":4816,"count":0}],"isBlockCoverage":false},{"functionName":"validateBoolean","ranges":[{"startOffset":4818,"endOffset":5102,"count":0}],"isBlockCoverage":false},{"functionName":"validateUrl","ranges":[{"startOffset":5104,"endOffset":5225,"count":0}],"isBlockCoverage":false},{"functionName":"validateStream","ranges":[{"startOffset":5227,"endOffset":5330,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":5332,"endOffset":6784,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":6786,"endOffset":10517,"count":1},{"startOffset":7110,"endOffset":7254,"count":0},{"startOffset":7307,"endOffset":7324,"count":0},{"startOffset":7326,"endOffset":10490,"count":0}],"isBlockCoverage":true},{"functionName":"resolveShort","ranges":[{"startOffset":10519,"endOffset":12219,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1072","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/abbrev/abbrev.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1763,"count":1}],"isBlockCoverage":true},{"functionName":"monkeyPatch","ranges":[{"startOffset":85,"endOffset":455,"count":0}],"isBlockCoverage":false},{"functionName":"abbrev","ranges":[{"startOffset":457,"endOffset":1695,"count":2},{"startOffset":536,"endOffset":593,"count":0},{"startOffset":655,"endOffset":730,"count":13},{"startOffset":709,"endOffset":726,"count":0},{"startOffset":1006,"endOffset":1676,"count":13},{"startOffset":1061,"endOffset":1066,"count":2},{"startOffset":1147,"endOffset":1155,"count":0},{"startOffset":1213,"endOffset":1459,"count":21},{"startOffset":1285,"endOffset":1314,"count":17},{"startOffset":1347,"endOffset":1376,"count":17},{"startOffset":1400,"endOffset":1415,"count":17},{"startOffset":1417,"endOffset":1453,"count":13},{"startOffset":1497,"endOffset":1552,"count":2},{"startOffset":1552,"endOffset":1609,"count":11},{"startOffset":1609,"endOffset":1672,"count":57}],"isBlockCoverage":true},{"functionName":"lexSort","ranges":[{"startOffset":1697,"endOffset":1762,"count":23},{"startOffset":1740,"endOffset":1743,"count":0},{"startOffset":1752,"endOffset":1755,"count":16},{"startOffset":1756,"endOffset":1760,"count":7}],"isBlockCoverage":true}]},{"scriptId":"1073","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/npmlog/log.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9007,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":390,"endOffset":511,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":520,"endOffset":555,"count":0}],"isBlockCoverage":false},{"functionName":"log.useColor","ranges":[{"startOffset":634,"endOffset":709,"count":1},{"startOffset":678,"endOffset":692,"count":0}],"isBlockCoverage":true},{"functionName":"log.enableColor","ranges":[{"startOffset":729,"endOffset":842,"count":0}],"isBlockCoverage":false},{"functionName":"log.disableColor","ranges":[{"startOffset":862,"endOffset":976,"count":0}],"isBlockCoverage":false},{"functionName":"log.enableUnicode","ranges":[{"startOffset":1601,"endOffset":1719,"count":0}],"isBlockCoverage":false},{"functionName":"log.disableUnicode","ranges":[{"startOffset":1742,"endOffset":1861,"count":0}],"isBlockCoverage":false},{"functionName":"log.setGaugeThemeset","ranges":[{"startOffset":1886,"endOffset":1940,"count":0}],"isBlockCoverage":false},{"functionName":"log.setGaugeTemplate","ranges":[{"startOffset":1965,"endOffset":2023,"count":0}],"isBlockCoverage":false},{"functionName":"log.enableProgress","ranges":[{"startOffset":2046,"endOffset":2244,"count":0}],"isBlockCoverage":false},{"functionName":"log.disableProgress","ranges":[{"startOffset":2268,"endOffset":2442,"count":1},{"startOffset":2327,"endOffset":2441,"count":0}],"isBlockCoverage":true},{"functionName":"mixinLog","ranges":[{"startOffset":2523,"endOffset":3390,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3476,"endOffset":3589,"count":3}],"isBlockCoverage":true},{"functionName":"log.<computed>","ranges":[{"startOffset":3502,"endOffset":3587,"count":0}],"isBlockCoverage":false},{"functionName":"log.clearProgress","ranges":[{"startOffset":3612,"endOffset":3725,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3746,"endOffset":4360,"count":0}],"isBlockCoverage":false},{"functionName":"log.pause","ranges":[{"startOffset":4477,"endOffset":4573,"count":0}],"isBlockCoverage":false},{"functionName":"log.resume","ranges":[{"startOffset":4588,"endOffset":4825,"count":1},{"startOffset":4639,"endOffset":4823,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4720,"endOffset":4758,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4908,"endOffset":6044,"count":0}],"isBlockCoverage":false},{"functionName":"log.emitLog","ranges":[{"startOffset":6070,"endOffset":6941,"count":0}],"isBlockCoverage":false},{"functionName":"log._format","ranges":[{"startOffset":6957,"endOffset":7706,"count":0}],"isBlockCoverage":false},{"functionName":"log.write","ranges":[{"startOffset":7720,"endOffset":7819,"count":0}],"isBlockCoverage":false},{"functionName":"log.addLevel","ranges":[{"startOffset":7836,"endOffset":8310,"count":9},{"startOffset":7951,"endOffset":7971,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8058,"endOffset":8269,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8991,"endOffset":9005,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1074","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/are-we-there-yet/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":163,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1075","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/are-we-there-yet/lib/tracker-group.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3281,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":213,"endOffset":440,"count":1}],"isBlockCoverage":true},{"functionName":"bubbleChange","ranges":[{"startOffset":483,"endOffset":777,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":531,"endOffset":775,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.nameInTree","ranges":[{"startOffset":815,"endOffset":968,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.addUnit","ranges":[{"startOffset":1003,"endOffset":1670,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.completed","ranges":[{"startOffset":1707,"endOffset":2045,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.newGroup","ranges":[{"startOffset":2081,"endOffset":2162,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.newItem","ranges":[{"startOffset":2197,"endOffset":2285,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.newStream","ranges":[{"startOffset":2322,"endOffset":2416,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.finish","ranges":[{"startOffset":2450,"endOffset":2777,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.debug","ranges":[{"startOffset":2860,"endOffset":3280,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1076","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/are-we-there-yet/lib/tracker-base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":274,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":144,"endOffset":232,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1077","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/are-we-there-yet/lib/tracker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":836,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":119,"endOffset":223,"count":0}],"isBlockCoverage":false},{"functionName":"Tracker.completed","ranges":[{"startOffset":291,"endOffset":371,"count":0}],"isBlockCoverage":false},{"functionName":"Tracker.addWork","ranges":[{"startOffset":401,"endOffset":501,"count":0}],"isBlockCoverage":false},{"functionName":"Tracker.completeWork","ranges":[{"startOffset":536,"endOffset":713,"count":0}],"isBlockCoverage":false},{"functionName":"Tracker.finish","ranges":[{"startOffset":742,"endOffset":835,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1078","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/are-we-there-yet/lib/tracker-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":963,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":192,"endOffset":403,"count":0}],"isBlockCoverage":false},{"functionName":"delegateChange","ranges":[{"startOffset":452,"endOffset":613,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerStream._transform","ranges":[{"startOffset":652,"endOffset":769,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerStream._flush","ranges":[{"startOffset":804,"endOffset":852,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1079","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/are-we-there-yet/node_modules/readable-stream/readable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":729,"count":1},{"startOffset":78,"endOffset":87,"count":0},{"startOffset":89,"endOffset":203,"count":0},{"startOffset":304,"endOffset":314,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1080","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/are-we-there-yet/node_modules/readable-stream/lib/_stream_readable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":36023,"count":1},{"startOffset":1643,"endOffset":1725,"count":0},{"startOffset":1738,"endOffset":1755,"count":0},{"startOffset":2064,"endOffset":2104,"count":0}],"isBlockCoverage":true},{"functionName":"EElistenerCount","ranges":[{"startOffset":1349,"endOffset":1433,"count":0}],"isBlockCoverage":false},{"functionName":"OurUint8Array","ranges":[{"startOffset":1741,"endOffset":1755,"count":0}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":1757,"endOffset":1825,"count":0}],"isBlockCoverage":false},{"functionName":"_isUint8Array","ranges":[{"startOffset":1826,"endOffset":1920,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":2082,"endOffset":2101,"count":0}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":2966,"endOffset":3752,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableState","ranges":[{"startOffset":3753,"endOffset":6617,"count":0}],"isBlockCoverage":false},{"functionName":"Readable","ranges":[{"startOffset":6618,"endOffset":7236,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7456,"endOffset":7589,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7598,"endOffset":7876,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._destroy","ranges":[{"startOffset":8016,"endOffset":8049,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.push","ranges":[{"startOffset":8278,"endOffset":8749,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unshift","ranges":[{"startOffset":8844,"endOffset":8923,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunk","ranges":[{"startOffset":8925,"endOffset":10565,"count":0}],"isBlockCoverage":false},{"functionName":"addChunk","ranges":[{"startOffset":10566,"endOffset":11003,"count":0}],"isBlockCoverage":false},{"functionName":"chunkInvalid","ranges":[{"startOffset":11004,"endOffset":11261,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.isPaused","ranges":[{"startOffset":11292,"endOffset":11355,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.setEncoding","ranges":[{"startOffset":11419,"endOffset":12102,"count":0}],"isBlockCoverage":false},{"functionName":"computeNewHighWaterMark","ranges":[{"startOffset":12160,"endOffset":12524,"count":0}],"isBlockCoverage":false},{"functionName":"howMuchToRead","ranges":[{"startOffset":12637,"endOffset":13234,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.read","ranges":[{"startOffset":13331,"endOffset":16902,"count":0}],"isBlockCoverage":false},{"functionName":"onEofChunk","ranges":[{"startOffset":16904,"endOffset":17635,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable","ranges":[{"startOffset":17836,"endOffset":18161,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable_","ranges":[{"startOffset":18162,"endOffset":18783,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore","ranges":[{"startOffset":19132,"endOffset":19288,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore_","ranges":[{"startOffset":19289,"endOffset":21062,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._read","ranges":[{"startOffset":21333,"endOffset":21416,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pipe","ranges":[{"startOffset":21444,"endOffset":25163,"count":0}],"isBlockCoverage":false},{"functionName":"pipeOnDrain","ranges":[{"startOffset":25165,"endOffset":25490,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unpipe","ranges":[{"startOffset":25519,"endOffset":26722,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.on","ranges":[{"startOffset":26847,"endOffset":27742,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.removeListener","ranges":[{"startOffset":27836,"endOffset":28347,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.removeAllListeners","ranges":[{"startOffset":28389,"endOffset":28924,"count":0}],"isBlockCoverage":false},{"functionName":"updateReadableListening","ranges":[{"startOffset":28926,"endOffset":29354,"count":0}],"isBlockCoverage":false},{"functionName":"nReadingNextTick","ranges":[{"startOffset":29355,"endOffset":29443,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.resume","ranges":[{"startOffset":29597,"endOffset":29918,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":29920,"endOffset":30070,"count":0}],"isBlockCoverage":false},{"functionName":"resume_","ranges":[{"startOffset":30071,"endOffset":30317,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pause","ranges":[{"startOffset":30345,"endOffset":30611,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":30613,"endOffset":30758,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":30942,"endOffset":32458,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":32541,"endOffset":32763,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32998,"endOffset":33064,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33293,"endOffset":33375,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33605,"endOffset":33665,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":33674,"endOffset":33779,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34078,"endOffset":34137,"count":0}],"isBlockCoverage":false},{"functionName":"fromList","ranges":[{"startOffset":34367,"endOffset":34885,"count":0}],"isBlockCoverage":false},{"functionName":"endReadable","ranges":[{"startOffset":34886,"endOffset":35104,"count":0}],"isBlockCoverage":false},{"functionName":"endReadableNT","ranges":[{"startOffset":35105,"endOffset":35683,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.from","ranges":[{"startOffset":35738,"endOffset":35897,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":35901,"endOffset":36023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1081","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/are-we-there-yet/node_modules/readable-stream/lib/internal/streams/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":36,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1082","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/are-we-there-yet/node_modules/readable-stream/lib/internal/streams/buffer_list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6905,"count":1},{"startOffset":2542,"endOffset":2554,"count":0}],"isBlockCoverage":true},{"functionName":"ownKeys","ranges":[{"startOffset":15,"endOffset":356,"count":0}],"isBlockCoverage":false},{"functionName":"_objectSpread","ranges":[{"startOffset":357,"endOffset":863,"count":0}],"isBlockCoverage":false},{"functionName":"_defineProperty","ranges":[{"startOffset":864,"endOffset":1100,"count":0}],"isBlockCoverage":false},{"functionName":"_classCallCheck","ranges":[{"startOffset":1101,"endOffset":1254,"count":0}],"isBlockCoverage":false},{"functionName":"_defineProperties","ranges":[{"startOffset":1255,"endOffset":1588,"count":1},{"startOffset":1338,"endOffset":1586,"count":11}],"isBlockCoverage":true},{"functionName":"_createClass","ranges":[{"startOffset":1589,"endOffset":1874,"count":1},{"startOffset":1738,"endOffset":1782,"count":0}],"isBlockCoverage":true},{"functionName":"_toPropertyKey","ranges":[{"startOffset":1875,"endOffset":1998,"count":11},{"startOffset":1976,"endOffset":1981,"count":1},{"startOffset":1982,"endOffset":1995,"count":10}],"isBlockCoverage":true},{"functionName":"_toPrimitive","ranges":[{"startOffset":1999,"endOffset":2376,"count":11},{"startOffset":2066,"endOffset":2083,"count":0},{"startOffset":2098,"endOffset":2356,"count":0},{"startOffset":2357,"endOffset":2365,"count":0}],"isBlockCoverage":true},{"functionName":"copyBuffer","ranges":[{"startOffset":2556,"endOffset":2651,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2682,"endOffset":6902,"count":1}],"isBlockCoverage":true},{"functionName":"BufferList","ranges":[{"startOffset":2698,"endOffset":2829,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":2888,"endOffset":3097,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":3136,"endOffset":3327,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":3364,"endOffset":3587,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":3624,"endOffset":3707,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":3743,"endOffset":3923,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":3961,"endOffset":4255,"count":0}],"isBlockCoverage":false},{"functionName":"consume","ranges":[{"startOffset":4377,"endOffset":4892,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":4929,"endOffset":4982,"count":0}],"isBlockCoverage":false},{"functionName":"_getString","ranges":[{"startOffset":5098,"endOffset":5745,"count":0}],"isBlockCoverage":false},{"functionName":"_getBuffer","ranges":[{"startOffset":5856,"endOffset":6520,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":6636,"endOffset":6872,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1083","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/are-we-there-yet/node_modules/readable-stream/lib/internal/streams/destroy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3109,"count":1}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":77,"endOffset":1592,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorAndCloseNT","ranges":[{"startOffset":1593,"endOffset":1683,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":1684,"endOffset":1874,"count":0}],"isBlockCoverage":false},{"functionName":"undestroy","ranges":[{"startOffset":1875,"endOffset":2432,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":2433,"endOffset":2495,"count":0}],"isBlockCoverage":false},{"functionName":"errorOrDestroy","ranges":[{"startOffset":2496,"endOffset":3010,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1084","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/are-we-there-yet/node_modules/readable-stream/lib/internal/streams/state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":745,"count":1}],"isBlockCoverage":true},{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":99,"endOffset":262,"count":0}],"isBlockCoverage":false},{"functionName":"getHighWaterMark","ranges":[{"startOffset":263,"endOffset":686,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1085","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/are-we-there-yet/node_modules/readable-stream/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3715,"count":1}],"isBlockCoverage":true},{"functionName":"createErrorType","ranges":[{"startOffset":34,"endOffset":513,"count":12},{"startOffset":95,"endOffset":117,"count":8}],"isBlockCoverage":true},{"functionName":"getMessage","ranges":[{"startOffset":121,"endOffset":283,"count":0}],"isBlockCoverage":false},{"functionName":"NodeError","ranges":[{"startOffset":322,"endOffset":403,"count":0}],"isBlockCoverage":false},{"functionName":"oneOf","ranges":[{"startOffset":585,"endOffset":1079,"count":0}],"isBlockCoverage":false},{"functionName":"startsWith","ranges":[{"startOffset":1183,"endOffset":1298,"count":0}],"isBlockCoverage":false},{"functionName":"endsWith","ranges":[{"startOffset":1400,"endOffset":1598,"count":0}],"isBlockCoverage":false},{"functionName":"includes","ranges":[{"startOffset":1700,"endOffset":1919,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1962,"endOffset":2062,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2116,"endOffset":2775,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2908,"endOffset":2981,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3090,"endOffset":3175,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3525,"endOffset":3579,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1086","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/are-we-there-yet/node_modules/readable-stream/lib/_stream_writable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21907,"count":1},{"startOffset":2145,"endOffset":2227,"count":0},{"startOffset":2240,"endOffset":2257,"count":0},{"startOffset":8301,"endOffset":8405,"count":0}],"isBlockCoverage":true},{"functionName":"WriteReq","ranges":[{"startOffset":1354,"endOffset":1488,"count":0}],"isBlockCoverage":false},{"functionName":"CorkedRequest","ranges":[{"startOffset":1579,"endOffset":1742,"count":0}],"isBlockCoverage":false},{"functionName":"OurUint8Array","ranges":[{"startOffset":2243,"endOffset":2257,"count":0}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":2259,"endOffset":2327,"count":0}],"isBlockCoverage":false},{"functionName":"_isUint8Array","ranges":[{"startOffset":2328,"endOffset":2422,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":3247,"endOffset":3264,"count":0}],"isBlockCoverage":false},{"functionName":"WritableState","ranges":[{"startOffset":3265,"endOffset":7167,"count":0}],"isBlockCoverage":false},{"functionName":"getBuffer","ranges":[{"startOffset":7204,"endOffset":7371,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7374,"endOffset":7694,"count":1},{"startOffset":7680,"endOffset":7692,"count":0}],"isBlockCoverage":true},{"functionName":"writableStateBufferGetter","ranges":[{"startOffset":7493,"endOffset":7572,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":8090,"endOffset":8293,"count":0}],"isBlockCoverage":false},{"functionName":"realHasInstance","ranges":[{"startOffset":8329,"endOffset":8402,"count":0}],"isBlockCoverage":false},{"functionName":"Writable","ranges":[{"startOffset":8406,"endOffset":9611,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.pipe","ranges":[{"startOffset":9707,"endOffset":9776,"count":0}],"isBlockCoverage":false},{"functionName":"writeAfterEnd","ranges":[{"startOffset":9778,"endOffset":9990,"count":0}],"isBlockCoverage":false},{"functionName":"validChunk","ranges":[{"startOffset":10214,"endOffset":10587,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.write","ranges":[{"startOffset":10615,"endOffset":11266,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.cork","ranges":[{"startOffset":11294,"endOffset":11341,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.uncork","ranges":[{"startOffset":11371,"endOffset":11586,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":11628,"endOffset":12050,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12276,"endOffset":12363,"count":0}],"isBlockCoverage":false},{"functionName":"decodeChunk","ranges":[{"startOffset":12368,"endOffset":12567,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12799,"endOffset":12865,"count":0}],"isBlockCoverage":false},{"functionName":"writeOrBuffer","ranges":[{"startOffset":13058,"endOffset":14027,"count":0}],"isBlockCoverage":false},{"functionName":"doWrite","ranges":[{"startOffset":14028,"endOffset":14388,"count":0}],"isBlockCoverage":false},{"functionName":"onwriteError","ranges":[{"startOffset":14389,"endOffset":15099,"count":0}],"isBlockCoverage":false},{"functionName":"onwriteStateUpdate","ranges":[{"startOffset":15100,"endOffset":15243,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":15244,"endOffset":15925,"count":0}],"isBlockCoverage":false},{"functionName":"afterWrite","ranges":[{"startOffset":15926,"endOffset":16083,"count":0}],"isBlockCoverage":false},{"functionName":"onwriteDrain","ranges":[{"startOffset":16276,"endOffset":16422,"count":0}],"isBlockCoverage":false},{"functionName":"clearBuffer","ranges":[{"startOffset":16487,"endOffset":18291,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._write","ranges":[{"startOffset":18320,"endOffset":18404,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.end","ranges":[{"startOffset":18466,"endOffset":18990,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19216,"endOffset":19275,"count":0}],"isBlockCoverage":false},{"functionName":"needFinish","ranges":[{"startOffset":19280,"endOffset":19426,"count":0}],"isBlockCoverage":false},{"functionName":"callFinal","ranges":[{"startOffset":19427,"endOffset":19674,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":19675,"endOffset":20023,"count":0}],"isBlockCoverage":false},{"functionName":"finishMaybe","ranges":[{"startOffset":20024,"endOffset":20568,"count":0}],"isBlockCoverage":false},{"functionName":"endWritable","ranges":[{"startOffset":20569,"endOffset":20807,"count":0}],"isBlockCoverage":false},{"functionName":"onCorkedFinish","ranges":[{"startOffset":20808,"endOffset":21093,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21313,"endOffset":21446,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":21455,"endOffset":21733,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._destroy","ranges":[{"startOffset":21873,"endOffset":21906,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1087","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/util-deprecate/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":123,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1088","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/are-we-there-yet/node_modules/readable-stream/lib/_stream_duplex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4381,"count":1},{"startOffset":1419,"endOffset":1511,"count":0},{"startOffset":1815,"endOffset":1936,"count":11},{"startOffset":1878,"endOffset":1932,"count":7}],"isBlockCoverage":true},{"functionName":"objectKeys","ranges":[{"startOffset":1422,"endOffset":1511,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex","ranges":[{"startOffset":1939,"endOffset":2374,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2604,"endOffset":2670,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2897,"endOffset":2984,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3211,"endOffset":3270,"count":0}],"isBlockCoverage":false},{"functionName":"onend","ranges":[{"startOffset":3305,"endOffset":3535,"count":0}],"isBlockCoverage":false},{"functionName":"onEndNT","ranges":[{"startOffset":3536,"endOffset":3576,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3794,"endOffset":3997,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4006,"endOffset":4377,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1089","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/are-we-there-yet/node_modules/readable-stream/lib/_stream_transform.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7936,"count":1}],"isBlockCoverage":true},{"functionName":"afterTransform","ranges":[{"startOffset":3961,"endOffset":4470,"count":0}],"isBlockCoverage":false},{"functionName":"Transform","ranges":[{"startOffset":4471,"endOffset":5392,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":5393,"endOffset":5632,"count":0}],"isBlockCoverage":false},{"functionName":"Transform.push","ranges":[{"startOffset":5660,"endOffset":5796,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._transform","ranges":[{"startOffset":6279,"endOffset":6367,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._write","ranges":[{"startOffset":6398,"endOffset":6711,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._read","ranges":[{"startOffset":6883,"endOffset":7254,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._destroy","ranges":[{"startOffset":7287,"endOffset":7391,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":7393,"endOffset":7936,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1090","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/are-we-there-yet/node_modules/readable-stream/lib/_stream_passthrough.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1628,"count":1}],"isBlockCoverage":true},{"functionName":"PassThrough","ranges":[{"startOffset":1401,"endOffset":1538,"count":0}],"isBlockCoverage":false},{"functionName":"PassThrough._transform","ranges":[{"startOffset":1574,"endOffset":1627,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1091","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/are-we-there-yet/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3084,"count":1}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":231,"endOffset":520,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":521,"endOffset":539,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":540,"endOffset":635,"count":0}],"isBlockCoverage":false},{"functionName":"eos","ranges":[{"startOffset":636,"endOffset":3062,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1092","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/are-we-there-yet/node_modules/readable-stream/lib/internal/streams/pipeline.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2416,"count":1}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":137,"endOffset":296,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":468,"endOffset":571,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":572,"endOffset":667,"count":0}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":668,"endOffset":1422,"count":0}],"isBlockCoverage":false},{"functionName":"call","ranges":[{"startOffset":1423,"endOffset":1452,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":1453,"endOffset":1504,"count":0}],"isBlockCoverage":false},{"functionName":"popCallback","ranges":[{"startOffset":1505,"endOffset":1668,"count":0}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":1669,"endOffset":2389,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1093","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/delegates/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2065,"count":1}],"isBlockCoverage":true},{"functionName":"Delegator","ranges":[{"startOffset":167,"endOffset":407,"count":2},{"startOffset":239,"endOffset":406,"count":1}],"isBlockCoverage":true},{"functionName":"Delegator.method","ranges":[{"startOffset":544,"endOffset":754,"count":3}],"isBlockCoverage":true},{"functionName":"proto.<computed>","ranges":[{"startOffset":658,"endOffset":735,"count":0}],"isBlockCoverage":false},{"functionName":"Delegator.access","ranges":[{"startOffset":895,"endOffset":953,"count":0}],"isBlockCoverage":false},{"functionName":"Delegator.getter","ranges":[{"startOffset":1092,"endOffset":1287,"count":0}],"isBlockCoverage":false},{"functionName":"Delegator.setter","ranges":[{"startOffset":1426,"endOffset":1630,"count":0}],"isBlockCoverage":false},{"functionName":"Delegator.fluent","ranges":[{"startOffset":1770,"endOffset":2063,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1094","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/gauge/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6998,"count":1}],"isBlockCoverage":true},{"functionName":"callWith","ranges":[{"startOffset":366,"endOffset":456,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":409,"endOffset":454,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge","ranges":[{"startOffset":458,"endOffset":2340,"count":1},{"startOffset":577,"endOffset":582,"count":0},{"startOffset":586,"endOffset":738,"count":0},{"startOffset":1186,"endOffset":1206,"count":0},{"startOffset":1309,"endOffset":1333,"count":0},{"startOffset":1423,"endOffset":1447,"count":0},{"startOffset":1610,"endOffset":1811,"count":0},{"startOffset":2147,"endOffset":2171,"count":0},{"startOffset":2251,"endOffset":2263,"count":0},{"startOffset":2264,"endOffset":2282,"count":0},{"startOffset":2285,"endOffset":2308,"count":0}],"isBlockCoverage":true},{"functionName":"Gauge.isEnabled","ranges":[{"startOffset":2391,"endOffset":2431,"count":1}],"isBlockCoverage":true},{"functionName":"Gauge.setTemplate","ranges":[{"startOffset":2463,"endOffset":2565,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge._computeTheme","ranges":[{"startOffset":2599,"endOffset":3110,"count":1},{"startOffset":2632,"endOffset":2642,"count":0},{"startOffset":2676,"endOffset":2722,"count":0},{"startOffset":2893,"endOffset":2911,"count":0},{"startOffset":2954,"endOffset":2964,"count":0}],"isBlockCoverage":true},{"functionName":"Gauge.setThemeset","ranges":[{"startOffset":3142,"endOffset":3216,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge.setTheme","ranges":[{"startOffset":3245,"endOffset":3380,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge._requestRedraw","ranges":[{"startOffset":3415,"endOffset":3503,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge.getWidth","ranges":[{"startOffset":3532,"endOffset":3601,"count":1},{"startOffset":3589,"endOffset":3594,"count":0}],"isBlockCoverage":true},{"functionName":"Gauge.setWriteTo","ranges":[{"startOffset":3632,"endOffset":3980,"count":1},{"startOffset":3705,"endOffset":3719,"count":0},{"startOffset":3842,"endOffset":3875,"count":0},{"startOffset":3876,"endOffset":3892,"count":0},{"startOffset":3912,"endOffset":3949,"count":0},{"startOffset":3965,"endOffset":3978,"count":0}],"isBlockCoverage":true},{"functionName":"Gauge.enable","ranges":[{"startOffset":4007,"endOffset":4148,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge.disable","ranges":[{"startOffset":4176,"endOffset":4412,"count":1},{"startOffset":4218,"endOffset":4410,"count":0}],"isBlockCoverage":true},{"functionName":"Gauge._enableEvents","ranges":[{"startOffset":4446,"endOffset":4779,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge._disableEvents","ranges":[{"startOffset":4814,"endOffset":5001,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge.hide","ranges":[{"startOffset":5026,"endOffset":5223,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge.show","ranges":[{"startOffset":5248,"endOffset":5711,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge.pulse","ranges":[{"startOffset":5737,"endOffset":5911,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge._handleSizeChange","ranges":[{"startOffset":5949,"endOffset":6034,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge._doRedraw","ranges":[{"startOffset":6064,"endOffset":6997,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1095","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/gauge/plumbing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1269,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":188,"endOffset":386,"count":1},{"startOffset":238,"endOffset":248,"count":0}],"isBlockCoverage":true},{"functionName":"Plumbing.setTheme","ranges":[{"startOffset":442,"endOffset":508,"count":0}],"isBlockCoverage":false},{"functionName":"Plumbing.setTemplate","ranges":[{"startOffset":543,"endOffset":621,"count":0}],"isBlockCoverage":false},{"functionName":"Plumbing.setWidth","ranges":[{"startOffset":653,"endOffset":719,"count":0}],"isBlockCoverage":false},{"functionName":"Plumbing.hide","ranges":[{"startOffset":747,"endOffset":825,"count":0}],"isBlockCoverage":false},{"functionName":"Plumbing.show","ranges":[{"startOffset":971,"endOffset":1268,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1096","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/console-control-strings/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2339,"count":1}],"isBlockCoverage":true},{"functionName":"up","ranges":[{"startOffset":87,"endOffset":144,"count":0}],"isBlockCoverage":false},{"functionName":"down","ranges":[{"startOffset":161,"endOffset":220,"count":0}],"isBlockCoverage":false},{"functionName":"forward","ranges":[{"startOffset":240,"endOffset":302,"count":0}],"isBlockCoverage":false},{"functionName":"back","ranges":[{"startOffset":319,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"nextLine","ranges":[{"startOffset":399,"endOffset":462,"count":0}],"isBlockCoverage":false},{"functionName":"previousLine","ranges":[{"startOffset":487,"endOffset":554,"count":0}],"isBlockCoverage":false},{"functionName":"horizontalAbsolute","ranges":[{"startOffset":585,"endOffset":740,"count":0}],"isBlockCoverage":false},{"functionName":"eraseData","ranges":[{"startOffset":762,"endOffset":809,"count":0}],"isBlockCoverage":false},{"functionName":"eraseLine","ranges":[{"startOffset":831,"endOffset":878,"count":0}],"isBlockCoverage":false},{"functionName":"exports.goto","ranges":[{"startOffset":895,"endOffset":950,"count":0}],"isBlockCoverage":false},{"functionName":"exports.gotoSOL","ranges":[{"startOffset":970,"endOffset":999,"count":0}],"isBlockCoverage":false},{"functionName":"exports.beep","ranges":[{"startOffset":1016,"endOffset":1047,"count":0}],"isBlockCoverage":false},{"functionName":"hideCursor","ranges":[{"startOffset":1070,"endOffset":1121,"count":0}],"isBlockCoverage":false},{"functionName":"showCursor","ranges":[{"startOffset":1144,"endOffset":1195,"count":0}],"isBlockCoverage":false},{"functionName":"color","ranges":[{"startOffset":1977,"endOffset":2191,"count":8},{"startOffset":2035,"endOffset":2063,"count":4}],"isBlockCoverage":true},{"functionName":"colorNameToCode","ranges":[{"startOffset":2193,"endOffset":2338,"count":12},{"startOffset":2277,"endOffset":2337,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1097","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/gauge/render-template.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5646,"count":1}],"isBlockCoverage":true},{"functionName":"renderValueWithValues","ranges":[{"startOffset":204,"endOffset":315,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":355,"endOffset":570,"count":0}],"isBlockCoverage":false},{"functionName":"preType","ranges":[{"startOffset":572,"endOffset":702,"count":0}],"isBlockCoverage":false},{"functionName":"postType","ranges":[{"startOffset":704,"endOffset":836,"count":0}],"isBlockCoverage":false},{"functionName":"hasPreOrPost","ranges":[{"startOffset":838,"endOffset":960,"count":0}],"isBlockCoverage":false},{"functionName":"generatePreAndPost","ranges":[{"startOffset":962,"endOffset":1579,"count":0}],"isBlockCoverage":false},{"functionName":"prepareItems","ranges":[{"startOffset":1581,"endOffset":4855,"count":0}],"isBlockCoverage":false},{"functionName":"renderFunction","ranges":[{"startOffset":4857,"endOffset":5085,"count":0}],"isBlockCoverage":false},{"functionName":"renderValue","ranges":[{"startOffset":5087,"endOffset":5645,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1098","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/wide-align/align.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1428,"count":1}],"isBlockCoverage":true},{"functionName":"createPadding","ranges":[{"startOffset":185,"endOffset":408,"count":0}],"isBlockCoverage":false},{"functionName":"alignLeft","ranges":[{"startOffset":410,"endOffset":701,"count":0}],"isBlockCoverage":false},{"functionName":"alignRight","ranges":[{"startOffset":703,"endOffset":994,"count":0}],"isBlockCoverage":false},{"functionName":"alignCenter","ranges":[{"startOffset":996,"endOffset":1427,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1099","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/aproba/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3644,"count":1}],"isBlockCoverage":true},{"functionName":"isArguments","ranges":[{"startOffset":40,"endOffset":162,"count":1}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":209,"endOffset":219,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":251,"endOffset":290,"count":3},{"startOffset":273,"endOffset":290,"count":1}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":323,"endOffset":349,"count":1}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":382,"endOffset":408,"count":1}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":443,"endOffset":471,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":504,"endOffset":585,"count":1}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":619,"endOffset":646,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":678,"endOffset":701,"count":1}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":732,"endOffset":746,"count":0}],"isBlockCoverage":false},{"functionName":"addSchema","ranges":[{"startOffset":751,"endOffset":910,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":912,"endOffset":2318,"count":1},{"startOffset":981,"endOffset":1030,"count":0},{"startOffset":1050,"endOffset":1091,"count":0},{"startOffset":1105,"endOffset":1140,"count":0},{"startOffset":1175,"endOffset":1219,"count":0},{"startOffset":1248,"endOffset":1285,"count":0},{"startOffset":1847,"endOffset":1913,"count":0},{"startOffset":1957,"endOffset":2316,"count":3},{"startOffset":2150,"endOffset":2285,"count":0},{"startOffset":2316,"endOffset":2317,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1364,"endOffset":1792,"count":1},{"startOffset":1423,"endOffset":1512,"count":3},{"startOffset":1479,"endOffset":1506,"count":0},{"startOffset":1542,"endOffset":1572,"count":0},{"startOffset":1628,"endOffset":1788,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1997,"endOffset":2119,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2186,"endOffset":2209,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2218,"endOffset":2232,"count":0}],"isBlockCoverage":false},{"functionName":"missingRequiredArg","ranges":[{"startOffset":2320,"endOffset":2437,"count":0}],"isBlockCoverage":false},{"functionName":"unknownType","ranges":[{"startOffset":2439,"endOffset":2568,"count":0}],"isBlockCoverage":false},{"functionName":"invalidType","ranges":[{"startOffset":2570,"endOffset":2897,"count":0}],"isBlockCoverage":false},{"functionName":"englishList","ranges":[{"startOffset":2899,"endOffset":2987,"count":0}],"isBlockCoverage":false},{"functionName":"wrongNumberOfArgs","ranges":[{"startOffset":2989,"endOffset":3259,"count":0}],"isBlockCoverage":false},{"functionName":"moreThanOneError","ranges":[{"startOffset":3261,"endOffset":3445,"count":0}],"isBlockCoverage":false},{"functionName":"newException","ranges":[{"startOffset":3447,"endOffset":3643,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1100","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/gauge/wide-truncate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":828,"count":1}],"isBlockCoverage":true},{"functionName":"wideTruncate","ranges":[{"startOffset":125,"endOffset":827,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1101","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/gauge/error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":616,"count":1}],"isBlockCoverage":true},{"functionName":"User","ranges":[{"startOffset":67,"endOffset":189,"count":0}],"isBlockCoverage":false},{"functionName":"MissingTemplateValue","ranges":[{"startOffset":222,"endOffset":456,"count":0}],"isBlockCoverage":false},{"functionName":"Internal","ranges":[{"startOffset":477,"endOffset":615,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1102","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/gauge/template-item.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1903,"count":1}],"isBlockCoverage":true},{"functionName":"isPercent","ranges":[{"startOffset":87,"endOffset":190,"count":0}],"isBlockCoverage":false},{"functionName":"percent","ranges":[{"startOffset":192,"endOffset":258,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateItem","ranges":[{"startOffset":260,"endOffset":1150,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateItem.getBaseLength","ranges":[{"startOffset":1220,"endOffset":1429,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateItem.getLength","ranges":[{"startOffset":1466,"endOffset":1598,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateItem.getMaxLength","ranges":[{"startOffset":1638,"endOffset":1750,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateItem.getMinLength","ranges":[{"startOffset":1790,"endOffset":1902,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1103","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/has-unicode/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":657,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":71,"endOffset":656,"count":1},{"startOffset":522,"endOffset":606,"count":0},{"startOffset":607,"endOffset":626,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1104","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/gauge/has-color.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":99,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1105","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/color-support/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2644,"count":1}],"isBlockCoverage":true},{"functionName":"hasNone","ranges":[{"startOffset":136,"endOffset":317,"count":0}],"isBlockCoverage":false},{"functionName":"hasBasic","ranges":[{"startOffset":319,"endOffset":439,"count":2}],"isBlockCoverage":true},{"functionName":"has256","ranges":[{"startOffset":441,"endOffset":558,"count":0}],"isBlockCoverage":false},{"functionName":"has16m","ranges":[{"startOffset":560,"endOffset":676,"count":0}],"isBlockCoverage":false},{"functionName":"colorSupport","ranges":[{"startOffset":678,"endOffset":2643,"count":2},{"startOffset":737,"endOffset":742,"count":1},{"startOffset":756,"endOffset":761,"count":1},{"startOffset":864,"endOffset":1080,"count":0},{"startOffset":1294,"endOffset":1332,"count":0},{"startOffset":1563,"endOffset":1601,"count":0},{"startOffset":1648,"endOffset":1665,"count":0},{"startOffset":1667,"endOffset":1705,"count":0},{"startOffset":1765,"endOffset":1872,"count":0},{"startOffset":1874,"endOffset":2227,"count":0},{"startOffset":2233,"endOffset":2250,"count":0},{"startOffset":2255,"endOffset":2293,"count":0},{"startOffset":2299,"endOffset":2339,"count":0},{"startOffset":2345,"endOffset":2392,"count":0},{"startOffset":2396,"endOffset":2642,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1106","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/signal-exit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5708,"count":1},{"startOffset":778,"endOffset":844,"count":0},{"startOffset":1059,"endOffset":1089,"count":0},{"startOffset":1144,"endOffset":1195,"count":0}],"isBlockCoverage":true},{"functionName":"processOk","ranges":[{"startOffset":293,"endOffset":677,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":799,"endOffset":842,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1703,"endOffset":2301,"count":0}],"isBlockCoverage":false},{"functionName":"unload","ranges":[{"startOffset":2318,"endOffset":2676,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":2724,"endOffset":2919,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3001,"endOffset":3890,"count":5}],"isBlockCoverage":true},{"functionName":"listener","ranges":[{"startOffset":3042,"endOffset":3886,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.signals","ranges":[{"startOffset":3920,"endOffset":3956,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":3993,"endOffset":4602,"count":0}],"isBlockCoverage":false},{"functionName":"processReallyExit","ranges":[{"startOffset":4712,"endOffset":5108,"count":0}],"isBlockCoverage":false},{"functionName":"processEmit","ranges":[{"startOffset":5171,"endOffset":5705,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1107","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/signal-exit/signals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1295,"count":1},{"startOffset":910,"endOffset":1153,"count":0},{"startOffset":1189,"endOffset":1294,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1108","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/gauge/themes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1625,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1109","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/gauge/theme-set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3692,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":75,"endOffset":127,"count":1}],"isBlockCoverage":true},{"functionName":"ThemeSetProto.newTheme","ranges":[{"startOffset":232,"endOffset":368,"count":4},{"startOffset":273,"endOffset":325,"count":2}],"isBlockCoverage":true},{"functionName":"ThemeSetProto.getThemeNames","ranges":[{"startOffset":400,"endOffset":449,"count":0}],"isBlockCoverage":false},{"functionName":"ThemeSetProto.addTheme","ranges":[{"startOffset":476,"endOffset":561,"count":4}],"isBlockCoverage":true},{"functionName":"ThemeSetProto.addToAllThemes","ranges":[{"startOffset":594,"endOffset":770,"count":0}],"isBlockCoverage":false},{"functionName":"ThemeSetProto.getTheme","ranges":[{"startOffset":797,"endOffset":907,"count":3},{"startOffset":841,"endOffset":878,"count":0}],"isBlockCoverage":true},{"functionName":"ThemeSetProto.setDefault","ranges":[{"startOffset":936,"endOffset":1290,"count":6},{"startOffset":980,"endOffset":1015,"count":0},{"startOffset":1055,"endOffset":1067,"count":2},{"startOffset":1068,"endOffset":1083,"count":4},{"startOffset":1186,"endOffset":1233,"count":3}],"isBlockCoverage":true},{"functionName":"ThemeSetProto.getDefault","ranges":[{"startOffset":1319,"endOffset":2542,"count":1},{"startOffset":1350,"endOffset":1359,"count":0},{"startOffset":1573,"endOffset":1647,"count":0},{"startOffset":1687,"endOffset":2353,"count":0},{"startOffset":2454,"endOffset":2540,"count":0}],"isBlockCoverage":true},{"functionName":"newMissingThemeError","ranges":[{"startOffset":2581,"endOffset":2815,"count":0}],"isBlockCoverage":false},{"functionName":"newMissingDefaultThemeError","ranges":[{"startOffset":2861,"endOffset":3362,"count":0}],"isBlockCoverage":false},{"functionName":"ThemeSetProto.newThemeSet","ranges":[{"startOffset":3392,"endOffset":3691,"count":1}],"isBlockCoverage":true},{"functionName":"themeset","ranges":[{"startOffset":3423,"endOffset":3481,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1110","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/object-assign/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2108,"count":1},{"startOffset":1600,"endOffset":2106,"count":0}],"isBlockCoverage":true},{"functionName":"toObject","ranges":[{"startOffset":277,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUseNative","ranges":[{"startOffset":452,"endOffset":1547,"count":1},{"startOffset":510,"endOffset":532,"count":0},{"startOffset":804,"endOffset":826,"count":0},{"startOffset":935,"endOffset":984,"count":10},{"startOffset":1119,"endOffset":1141,"count":0},{"startOffset":1400,"endOffset":1422,"count":0},{"startOffset":1442,"endOffset":1545,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1038,"endOffset":1076,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1262,"endOffset":1312,"count":20}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":1602,"endOffset":2106,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1111","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/gauge/base-theme.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":395,"count":1}],"isBlockCoverage":true},{"functionName":"activityIndicator","ranges":[{"startOffset":133,"endOffset":242,"count":0}],"isBlockCoverage":false},{"functionName":"progressbar","ranges":[{"startOffset":259,"endOffset":392,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1112","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/gauge/spin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":105,"count":1}],"isBlockCoverage":true},{"functionName":"spin","ranges":[{"startOffset":31,"endOffset":104,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1113","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/gauge/progress-bar.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1000,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":205,"endOffset":681,"count":0}],"isBlockCoverage":false},{"functionName":"repeat","ranges":[{"startOffset":712,"endOffset":999,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1114","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/gauge/set-interval.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":93,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1115","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/gauge/process.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":89,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1116","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/gauge/set-immediate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":139,"count":1},{"startOffset":88,"endOffset":138,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1117","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/set-blocking/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":252,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":251,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":82,"endOffset":248,"count":2}],"isBlockCoverage":true}]},{"scriptId":"1118","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@mapbox/node-pre-gyp/lib/util/napi.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8098,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":163,"endOffset":196,"count":3}],"isBlockCoverage":true},{"functionName":"module.exports.get_napi_version","ranges":[{"startOffset":448,"endOffset":893,"count":12},{"startOffset":686,"endOffset":873,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports.get_napi_version_as_string","ranges":[{"startOffset":940,"endOffset":1144,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.validate_package_json","ranges":[{"startOffset":1186,"endOffset":3363,"count":2},{"startOffset":2009,"endOffset":2191,"count":0},{"startOffset":2215,"endOffset":2232,"count":0},{"startOffset":2233,"endOffset":2251,"count":0},{"startOffset":2282,"endOffset":2468,"count":0},{"startOffset":2563,"endOffset":2611,"count":0},{"startOffset":2613,"endOffset":2934,"count":0},{"startOffset":2990,"endOffset":3037,"count":0},{"startOffset":3039,"endOffset":3360,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1683,"endOffset":1912,"count":2},{"startOffset":1804,"endOffset":1906,"count":0}],"isBlockCoverage":true},{"functionName":"pathOK","ranges":[{"startOffset":3366,"endOffset":3499,"count":6},{"startOffset":3452,"endOffset":3495,"count":2}],"isBlockCoverage":true},{"functionName":"module.exports.expand_commands","ranges":[{"startOffset":3534,"endOffset":4476,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3716,"endOffset":4444,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.get_napi_build_versions","ranges":[{"startOffset":4520,"endOffset":5715,"count":7},{"startOffset":4721,"endOffset":4734,"count":3},{"startOffset":4735,"endOffset":4746,"count":4},{"startOffset":5368,"endOffset":5409,"count":3},{"startOffset":5411,"endOffset":5642,"count":0},{"startOffset":5701,"endOffset":5712,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4932,"endOffset":5350,"count":7},{"startOffset":5175,"endOffset":5344,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5473,"endOffset":5570,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.get_napi_build_versions_raw","ranges":[{"startOffset":5763,"endOffset":6179,"count":2},{"startOffset":6165,"endOffset":6176,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5957,"endOffset":6100,"count":2}],"isBlockCoverage":true},{"functionName":"module.exports.get_command_arg","ranges":[{"startOffset":6215,"endOffset":6301,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.get_napi_build_version_from_command_args","ranges":[{"startOffset":6362,"endOffset":6624,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.swap_build_dir_out","ranges":[{"startOffset":6663,"endOffset":6902,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.swap_build_dir_in","ranges":[{"startOffset":6940,"endOffset":7138,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.get_build_dir","ranges":[{"startOffset":7172,"endOffset":7254,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.get_best_napi_build_version","ranges":[{"startOffset":7302,"endOffset":7895,"count":3},{"startOffset":7553,"endOffset":7566,"count":1},{"startOffset":7567,"endOffset":7578,"count":2},{"startOffset":7855,"endOffset":7866,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7613,"endOffset":7809,"count":3}],"isBlockCoverage":true},{"functionName":"module.exports.build_napi_only","ranges":[{"startOffset":7931,"endOffset":8096,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1119","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@mapbox/node-pre-gyp/lib/pre-binding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1178,"count":1},{"startOffset":188,"endOffset":217,"count":0}],"isBlockCoverage":true},{"functionName":"exports.validate","ranges":[{"startOffset":377,"endOffset":459,"count":0}],"isBlockCoverage":false},{"functionName":"exports.find","ranges":[{"startOffset":477,"endOffset":1176,"count":1},{"startOffset":551,"endOffset":615,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1120","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@mapbox/node-pre-gyp/lib/util/versioning.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14514,"count":1},{"startOffset":411,"endOffset":481,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":605,"endOffset":715,"count":650},{"startOffset":677,"endOffset":713,"count":18}],"isBlockCoverage":true},{"functionName":"get_electron_abi","ranges":[{"startOffset":719,"endOffset":1219,"count":0}],"isBlockCoverage":false},{"functionName":"get_node_webkit_abi","ranges":[{"startOffset":1273,"endOffset":1634,"count":0}],"isBlockCoverage":false},{"functionName":"get_node_abi","ranges":[{"startOffset":1694,"endOffset":2428,"count":1},{"startOffset":1753,"endOffset":1822,"count":0},{"startOffset":1840,"endOffset":1921,"count":0},{"startOffset":1995,"endOffset":2015,"count":0},{"startOffset":2017,"endOffset":2136,"count":0},{"startOffset":2361,"endOffset":2421,"count":0}],"isBlockCoverage":true},{"functionName":"get_runtime_abi","ranges":[{"startOffset":2474,"endOffset":8579,"count":1},{"startOffset":2542,"endOffset":2614,"count":0},{"startOffset":2648,"endOffset":2745,"count":0},{"startOffset":2779,"endOffset":2867,"count":0},{"startOffset":2903,"endOffset":2971,"count":0},{"startOffset":3058,"endOffset":8573,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3320,"endOffset":3341,"count":0}],"isBlockCoverage":false},{"functionName":"validate_config","ranges":[{"startOffset":8708,"endOffset":9704,"count":2},{"startOffset":8883,"endOffset":8914,"count":0},{"startOffset":8944,"endOffset":8978,"count":0},{"startOffset":9005,"endOffset":9036,"count":0},{"startOffset":9065,"endOffset":9098,"count":0},{"startOffset":9316,"endOffset":9419,"count":0},{"startOffset":9541,"endOffset":9648,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9175,"endOffset":9281,"count":6},{"startOffset":9229,"endOffset":9275,"count":0}],"isBlockCoverage":true},{"functionName":"eval_template","ranges":[{"startOffset":9757,"endOffset":10006,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9826,"endOffset":9983,"count":116},{"startOffset":9917,"endOffset":9979,"count":8}],"isBlockCoverage":true},{"functionName":"fix_slashes","ranges":[{"startOffset":10201,"endOffset":10321,"count":2},{"startOffset":10300,"endOffset":10320,"count":0}],"isBlockCoverage":true},{"functionName":"drop_double_slashes","ranges":[{"startOffset":10437,"endOffset":10520,"count":1}],"isBlockCoverage":true},{"functionName":"get_process_runtime","ranges":[{"startOffset":10522,"endOffset":10732,"count":1},{"startOffset":10618,"endOffset":10652,"count":0},{"startOffset":10681,"endOffset":10712,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports.evaluate","ranges":[{"startOffset":10945,"endOffset":14512,"count":1},{"startOffset":11019,"endOffset":11024,"count":0},{"startOffset":11357,"endOffset":11366,"count":0},{"startOffset":11542,"endOffset":11579,"count":0},{"startOffset":11625,"endOffset":11657,"count":0},{"startOffset":11907,"endOffset":11949,"count":0},{"startOffset":12097,"endOffset":12102,"count":0},{"startOffset":12176,"endOffset":12218,"count":0},{"startOffset":13709,"endOffset":13861,"count":0},{"startOffset":14077,"endOffset":14098,"count":0},{"startOffset":14191,"endOffset":14213,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1121","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/detect-libc/lib/detect-libc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6231,"count":1}],"isBlockCoverage":true},{"functionName":"safeCommand","ranges":[{"startOffset":455,"endOffset":682,"count":0}],"isBlockCoverage":false},{"functionName":"safeCommandSync","ranges":[{"startOffset":709,"endOffset":898,"count":0}],"isBlockCoverage":false},{"functionName":"isFileMusl","ranges":[{"startOffset":1274,"endOffset":1331,"count":0}],"isBlockCoverage":false},{"functionName":"familyFromReport","ranges":[{"startOffset":1359,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"familyFromCommand","ranges":[{"startOffset":1647,"endOffset":1846,"count":0}],"isBlockCoverage":false},{"functionName":"getFamilyFromLddContent","ranges":[{"startOffset":1881,"endOffset":2032,"count":0}],"isBlockCoverage":false},{"functionName":"familyFromFilesystem","ranges":[{"startOffset":2064,"endOffset":2370,"count":0}],"isBlockCoverage":false},{"functionName":"familyFromFilesystemSync","ranges":[{"startOffset":2406,"endOffset":2704,"count":0}],"isBlockCoverage":false},{"functionName":"family","ranges":[{"startOffset":2839,"endOffset":3121,"count":0}],"isBlockCoverage":false},{"functionName":"familySync","ranges":[{"startOffset":3245,"endOffset":3517,"count":1},{"startOffset":3291,"endOffset":3498,"count":0}],"isBlockCoverage":true},{"functionName":"isNonGlibcLinux","ranges":[{"startOffset":3670,"endOffset":3719,"count":0}],"isBlockCoverage":false},{"functionName":"isNonGlibcLinuxSync","ranges":[{"startOffset":3866,"endOffset":3907,"count":0}],"isBlockCoverage":false},{"functionName":"versionFromFilesystem","ranges":[{"startOffset":3940,"endOffset":4324,"count":0}],"isBlockCoverage":false},{"functionName":"versionFromFilesystemSync","ranges":[{"startOffset":4361,"endOffset":4737,"count":0}],"isBlockCoverage":false},{"functionName":"versionFromReport","ranges":[{"startOffset":4766,"endOffset":4930,"count":0}],"isBlockCoverage":false},{"functionName":"versionSuffix","ranges":[{"startOffset":4955,"endOffset":4986,"count":0}],"isBlockCoverage":false},{"functionName":"versionFromCommand","ranges":[{"startOffset":5016,"endOffset":5261,"count":0}],"isBlockCoverage":false},{"functionName":"version","ranges":[{"startOffset":5398,"endOffset":5690,"count":0}],"isBlockCoverage":false},{"functionName":"versionSync","ranges":[{"startOffset":5816,"endOffset":6098,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1122","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/detect-libc/lib/process.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":569,"count":1}],"isBlockCoverage":true},{"functionName":"isLinux","ranges":[{"startOffset":115,"endOffset":149,"count":1}],"isBlockCoverage":true},{"functionName":"getReport","ranges":[{"startOffset":189,"endOffset":525,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1123","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/detect-libc/lib/filesystem.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":717,"count":1}],"isBlockCoverage":true},{"functionName":"readFileSync","ranges":[{"startOffset":325,"endOffset":365,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":480,"endOffset":653,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1124","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/bcrypt/promises.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1148,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports.promise","ranges":[{"startOffset":366,"endOffset":860,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.reject","ranges":[{"startOffset":927,"endOffset":977,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.use","ranges":[{"startOffset":1104,"endOffset":1146,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1125","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6968,"count":1}],"isBlockCoverage":true},{"functionName":"internals.root","ranges":[{"startOffset":1245,"endOffset":2392,"count":1},{"startOffset":1391,"endOffset":1659,"count":12},{"startOffset":1879,"endOffset":1990,"count":17},{"startOffset":2112,"endOffset":2204,"count":3}],"isBlockCoverage":true},{"functionName":"root.<computed>","ranges":[{"startOffset":1414,"endOffset":1652,"count":213},{"startOffset":1468,"endOffset":1520,"count":33}],"isBlockCoverage":true},{"functionName":"root.<computed>","ranges":[{"startOffset":1904,"endOffset":1983,"count":19}],"isBlockCoverage":true},{"functionName":"assert","ranges":[{"startOffset":2525,"endOffset":2644,"count":0}],"isBlockCoverage":false},{"functionName":"attempt","ranges":[{"startOffset":2651,"endOffset":2779,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":2786,"endOffset":2938,"count":0}],"isBlockCoverage":false},{"functionName":"checkPreferences","ranges":[{"startOffset":2945,"endOffset":3017,"count":0}],"isBlockCoverage":false},{"functionName":"compile","ranges":[{"startOffset":3024,"endOffset":3112,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":3119,"endOffset":3609,"count":0}],"isBlockCoverage":false},{"functionName":"expression","ranges":[{"startOffset":3616,"endOffset":3682,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3689,"endOffset":4828,"count":0}],"isBlockCoverage":false},{"functionName":"in","ranges":[{"startOffset":4973,"endOffset":5025,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":5072,"endOffset":5129,"count":0}],"isBlockCoverage":false},{"functionName":"types","ranges":[{"startOffset":5136,"endOffset":5398,"count":0}],"isBlockCoverage":false},{"functionName":"internals.assert","ranges":[{"startOffset":5435,"endOffset":6203,"count":0}],"isBlockCoverage":false},{"functionName":"internals.generate","ranges":[{"startOffset":6228,"endOffset":6490,"count":213},{"startOffset":6378,"endOffset":6401,"count":92},{"startOffset":6403,"endOffset":6434,"count":180},{"startOffset":6434,"endOffset":6489,"count":33}],"isBlockCoverage":true},{"functionName":"internals.expandExtension","ranges":[{"startOffset":6522,"endOffset":6929,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1126","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@hapi/hoek/lib/assert.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":307,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":98,"endOffset":305,"count":7595},{"startOffset":173,"endOffset":236,"count":0},{"startOffset":238,"endOffset":304,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1127","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@hapi/hoek/lib/error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":595,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":127,"endOffset":591,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1128","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@hapi/hoek/lib/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":224,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":56,"endOffset":222,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1129","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@hapi/hoek/lib/clone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4164,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports.internals.clone","ranges":[{"startOffset":261,"endOffset":2835,"count":3039},{"startOffset":339,"endOffset":362,"count":1338},{"startOffset":364,"endOffset":392,"count":1769},{"startOffset":392,"endOffset":475,"count":1270},{"startOffset":475,"endOffset":628,"count":199},{"startOffset":515,"endOffset":587,"count":0},{"startOffset":628,"endOffset":795,"count":1071},{"startOffset":648,"endOffset":752,"count":849},{"startOffset":708,"endOffset":746,"count":86},{"startOffset":752,"endOffset":795,"count":222},{"startOffset":795,"endOffset":914,"count":1184},{"startOffset":914,"endOffset":1002,"count":0},{"startOffset":1002,"endOffset":1038,"count":1184},{"startOffset":1038,"endOffset":1085,"count":0},{"startOffset":1085,"endOffset":1122,"count":1184},{"startOffset":1122,"endOffset":1161,"count":0},{"startOffset":1161,"endOffset":1271,"count":1184},{"startOffset":1271,"endOffset":1298,"count":252},{"startOffset":1298,"endOffset":1314,"count":932},{"startOffset":1314,"endOffset":1418,"count":733},{"startOffset":1418,"endOffset":1453,"count":932},{"startOffset":1453,"endOffset":1558,"count":0},{"startOffset":1558,"endOffset":1714,"count":932},{"startOffset":1597,"endOffset":1714,"count":229},{"startOffset":1639,"endOffset":1708,"count":82},{"startOffset":1714,"endOffset":1787,"count":932},{"startOffset":1787,"endOffset":2813,"count":2853},{"startOffset":1822,"endOffset":1855,"count":0},{"startOffset":1895,"endOffset":1926,"count":325},{"startOffset":1928,"endOffset":2002,"count":265},{"startOffset":2002,"endOffset":2561,"count":2588},{"startOffset":2131,"endOffset":2164,"count":2558},{"startOffset":2166,"endOffset":2246,"count":30},{"startOffset":2246,"endOffset":2551,"count":2558},{"startOffset":2291,"endOffset":2368,"count":1538},{"startOffset":2368,"endOffset":2551,"count":1020},{"startOffset":2561,"endOffset":2807,"count":0},{"startOffset":2813,"endOffset":2834,"count":932}],"isBlockCoverage":true},{"functionName":"clone","ranges":[{"startOffset":605,"endOffset":621,"count":22}],"isBlockCoverage":true},{"functionName":"internals.cloneWithShallow","ranges":[{"startOffset":2868,"endOffset":3285,"count":0}],"isBlockCoverage":false},{"functionName":"internals.base","ranges":[{"startOffset":3306,"endOffset":4162,"count":1184},{"startOffset":3381,"endOffset":3591,"count":0},{"startOffset":3683,"endOffset":3711,"count":252},{"startOffset":3711,"endOffset":3748,"count":932},{"startOffset":3748,"endOffset":3901,"count":265},{"startOffset":3810,"endOffset":3871,"count":0},{"startOffset":3901,"endOffset":3952,"count":667},{"startOffset":3952,"endOffset":4126,"count":229},{"startOffset":4035,"endOffset":4096,"count":0},{"startOffset":4126,"endOffset":4161,"count":438}],"isBlockCoverage":true}]},{"scriptId":"1130","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@hapi/hoek/lib/reach.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1885,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":94,"endOffset":1721,"count":0}],"isBlockCoverage":false},{"functionName":"internals.iterables","ranges":[{"startOffset":1747,"endOffset":1883,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1131","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@hapi/hoek/lib/types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1263,"count":1}],"isBlockCoverage":true},{"functionName":"exports.getInternalProto","ranges":[{"startOffset":735,"endOffset":1261,"count":1184},{"startOffset":781,"endOffset":818,"count":265},{"startOffset":818,"endOffset":859,"count":919},{"startOffset":861,"endOffset":933,"count":0},{"startOffset":933,"endOffset":964,"count":919},{"startOffset":964,"endOffset":1000,"count":0},{"startOffset":1000,"endOffset":1033,"count":919},{"startOffset":1033,"endOffset":1070,"count":0},{"startOffset":1070,"endOffset":1102,"count":919},{"startOffset":1102,"endOffset":1139,"count":0},{"startOffset":1139,"endOffset":1240,"count":919},{"startOffset":1240,"endOffset":1258,"count":690}],"isBlockCoverage":true}]},{"scriptId":"1132","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@hapi/hoek/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":205,"count":1}],"isBlockCoverage":true},{"functionName":"exports.keys","ranges":[{"startOffset":54,"endOffset":203,"count":932},{"startOffset":146,"endOffset":179,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1133","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/cache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2565,"count":1}],"isBlockCoverage":true},{"functionName":"provision","ranges":[{"startOffset":285,"endOffset":357,"count":0}],"isBlockCoverage":false},{"functionName":"internals.Cache","ranges":[{"startOffset":430,"endOffset":873,"count":0}],"isBlockCoverage":false},{"functionName":"get length","ranges":[{"startOffset":879,"endOffset":931,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":937,"endOffset":1341,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1347,"endOffset":1509,"count":0}],"isBlockCoverage":false},{"functionName":"_compact","ranges":[{"startOffset":1515,"endOffset":1669,"count":0}],"isBlockCoverage":false},{"functionName":"internals.List","ranges":[{"startOffset":1705,"endOffset":1779,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":1785,"endOffset":2051,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":2057,"endOffset":2198,"count":0}],"isBlockCoverage":false},{"functionName":"pop","ranges":[{"startOffset":2204,"endOffset":2258,"count":0}],"isBlockCoverage":false},{"functionName":"_remove","ranges":[{"startOffset":2264,"endOffset":2561,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1134","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4963,"count":1}],"isBlockCoverage":true},{"functionName":"exports.assertOptions","ranges":[{"startOffset":1684,"endOffset":2009,"count":720}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1895,"endOffset":1919,"count":1527}],"isBlockCoverage":true},{"functionName":"exports.checkPreferences","ranges":[{"startOffset":2040,"endOffset":2262,"count":9},{"startOffset":2082,"endOffset":2105,"count":1},{"startOffset":2187,"endOffset":2260,"count":0}],"isBlockCoverage":true},{"functionName":"exports.compare","ranges":[{"startOffset":2284,"endOffset":2510,"count":0}],"isBlockCoverage":false},{"functionName":"exports.default","ranges":[{"startOffset":2532,"endOffset":2622,"count":2},{"startOffset":2612,"endOffset":2619,"count":0}],"isBlockCoverage":true},{"functionName":"exports.isIsoDate","ranges":[{"startOffset":2646,"endOffset":2707,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isNumber","ranges":[{"startOffset":2730,"endOffset":2806,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isResolvable","ranges":[{"startOffset":2833,"endOffset":2967,"count":282},{"startOffset":2865,"endOffset":2894,"count":15},{"startOffset":2894,"endOffset":2964,"count":267}],"isBlockCoverage":true},{"functionName":"exports.isSchema","ranges":[{"startOffset":2990,"endOffset":3254,"count":1387},{"startOffset":3048,"endOffset":3078,"count":1367},{"startOffset":3094,"endOffset":3123,"count":444},{"startOffset":3123,"endOffset":3185,"count":943}],"isBlockCoverage":true},{"functionName":"exports.isValues","ranges":[{"startOffset":3277,"endOffset":3336,"count":0}],"isBlockCoverage":false},{"functionName":"exports.limit","ranges":[{"startOffset":3356,"endOffset":3431,"count":9}],"isBlockCoverage":true},{"functionName":"exports.preferences","ranges":[{"startOffset":3457,"endOffset":4039,"count":13},{"startOffset":3510,"endOffset":3534,"count":1},{"startOffset":3557,"endOffset":3562,"count":12},{"startOffset":3584,"endOffset":3589,"count":0},{"startOffset":3668,"endOffset":3692,"count":0},{"startOffset":3694,"endOffset":3863,"count":0},{"startOffset":3890,"endOffset":3975,"count":9}],"isBlockCoverage":true},{"functionName":"exports.tryWithPath","ranges":[{"startOffset":4065,"endOffset":4428,"count":318},{"startOffset":4142,"endOffset":4426,"count":0}],"isBlockCoverage":true},{"functionName":"exports.validateArg","ranges":[{"startOffset":4454,"endOffset":4782,"count":10},{"startOffset":4536,"endOffset":4687,"count":0},{"startOffset":4717,"endOffset":4780,"count":0}],"isBlockCoverage":true},{"functionName":"exports.verifyFlat","ranges":[{"startOffset":4807,"endOffset":4961,"count":98},{"startOffset":4862,"endOffset":4959,"count":237}],"isBlockCoverage":true}]},{"scriptId":"1135","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/compile.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8034,"count":1}],"isBlockCoverage":true},{"functionName":"exports.schema","ranges":[{"startOffset":174,"endOffset":535,"count":223},{"startOffset":353,"endOffset":533,"count":0}],"isBlockCoverage":true},{"functionName":"internals.schema","ranges":[{"startOffset":558,"endOffset":1985,"count":223},{"startOffset":687,"endOffset":833,"count":13},{"startOffset":784,"endOffset":827,"count":0},{"startOffset":1066,"endOffset":1108,"count":5},{"startOffset":1108,"endOffset":1148,"count":218},{"startOffset":1148,"endOffset":1190,"count":0},{"startOffset":1190,"endOffset":1312,"count":218},{"startOffset":1312,"endOffset":1354,"count":0},{"startOffset":1354,"endOffset":1389,"count":218},{"startOffset":1389,"endOffset":1419,"count":197},{"startOffset":1419,"endOffset":1452,"count":21},{"startOffset":1452,"endOffset":1660,"count":13},{"startOffset":1489,"endOffset":1615,"count":23},{"startOffset":1532,"endOffset":1605,"count":8},{"startOffset":1615,"endOffset":1660,"count":5},{"startOffset":1660,"endOffset":1696,"count":8},{"startOffset":1696,"endOffset":1746,"count":0},{"startOffset":1746,"endOffset":1780,"count":8},{"startOffset":1780,"endOffset":1829,"count":0},{"startOffset":1829,"endOffset":1984,"count":8}],"isBlockCoverage":true},{"functionName":"valid","ranges":[{"startOffset":853,"endOffset":1029,"count":10},{"startOffset":984,"endOffset":1028,"count":0}],"isBlockCoverage":true},{"functionName":"exports.ref","ranges":[{"startOffset":2003,"endOffset":2087,"count":11},{"startOffset":2054,"endOffset":2058,"count":0}],"isBlockCoverage":true},{"functionName":"exports.compile","ranges":[{"startOffset":2109,"endOffset":2936,"count":0}],"isBlockCoverage":false},{"functionName":"internals.walk","ranges":[{"startOffset":2957,"endOffset":3699,"count":0}],"isBlockCoverage":false},{"functionName":"internals.simple","ranges":[{"startOffset":3722,"endOffset":3828,"count":246},{"startOffset":3768,"endOffset":3825,"count":245}],"isBlockCoverage":true},{"functionName":"exports.when","ranges":[{"startOffset":3847,"endOffset":7720,"count":3},{"startOffset":3919,"endOffset":4072,"count":0},{"startOffset":4106,"endOffset":4152,"count":0},{"startOffset":4306,"endOffset":4729,"count":0},{"startOffset":4893,"endOffset":4920,"count":0},{"startOffset":5065,"endOffset":5188,"count":0},{"startOffset":5257,"endOffset":5311,"count":0},{"startOffset":5352,"endOffset":5383,"count":0},{"startOffset":5496,"endOffset":5522,"count":0},{"startOffset":5523,"endOffset":5554,"count":0},{"startOffset":5736,"endOffset":5864,"count":1},{"startOffset":6015,"endOffset":7719,"count":0}],"isBlockCoverage":true},{"functionName":"internals.condition","ranges":[{"startOffset":7746,"endOffset":8032,"count":3},{"startOffset":7823,"endOffset":8007,"count":6},{"startOffset":7867,"endOffset":8001,"count":3}],"isBlockCoverage":true}]},{"scriptId":"1136","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/ref.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10254,"count":1}],"isBlockCoverage":true},{"functionName":"exports.create","ranges":[{"startOffset":514,"endOffset":2152,"count":202},{"startOffset":759,"endOffset":796,"count":0},{"startOffset":1120,"endOffset":2034,"count":15},{"startOffset":1148,"endOffset":1365,"count":3},{"startOffset":1423,"endOffset":1489,"count":4},{"startOffset":1489,"endOffset":2028,"count":11},{"startOffset":1549,"endOffset":1678,"count":7},{"startOffset":1593,"endOffset":1616,"count":4},{"startOffset":1678,"endOffset":2018,"count":4},{"startOffset":1803,"endOffset":1962,"count":1},{"startOffset":2077,"endOffset":2081,"count":8},{"startOffset":2082,"endOffset":2104,"count":194},{"startOffset":2106,"endOffset":2113,"count":0}],"isBlockCoverage":true},{"functionName":"exports.in","ranges":[{"startOffset":2169,"endOffset":2260,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isRef","ranges":[{"startOffset":2280,"endOffset":2351,"count":308},{"startOffset":2341,"endOffset":2348,"count":0}],"isBlockCoverage":true},{"functionName":"internals.Ref","ranges":[{"startOffset":2384,"endOffset":3677,"count":202},{"startOffset":2955,"endOffset":2994,"count":0},{"startOffset":3062,"endOffset":3091,"count":0},{"startOffset":3154,"endOffset":3172,"count":0},{"startOffset":3314,"endOffset":3344,"count":187},{"startOffset":3436,"endOffset":3489,"count":0},{"startOffset":3566,"endOffset":3598,"count":194},{"startOffset":3599,"endOffset":3605,"count":8}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":3683,"endOffset":4476,"count":0}],"isBlockCoverage":false},{"functionName":"_resolve","ranges":[{"startOffset":4482,"endOffset":5281,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":5287,"endOffset":5335,"count":0}],"isBlockCoverage":false},{"functionName":"absolute","ranges":[{"startOffset":5341,"endOffset":5436,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":5442,"endOffset":5498,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":5504,"endOffset":6241,"count":0}],"isBlockCoverage":false},{"functionName":"updateDisplay","ranges":[{"startOffset":6247,"endOffset":7033,"count":202},{"startOffset":6304,"endOffset":6314,"count":194},{"startOffset":6315,"endOffset":6319,"count":8},{"startOffset":6356,"endOffset":6441,"count":187},{"startOffset":6441,"endOffset":6472,"count":15},{"startOffset":6472,"endOffset":6544,"count":0},{"startOffset":6544,"endOffset":6574,"count":15},{"startOffset":6574,"endOffset":6663,"count":8},{"startOffset":6663,"endOffset":6703,"count":7},{"startOffset":6703,"endOffset":6780,"count":3},{"startOffset":6780,"endOffset":6815,"count":4},{"startOffset":6815,"endOffset":6895,"count":3},{"startOffset":6855,"endOffset":6862,"count":0},{"startOffset":6895,"endOffset":7024,"count":1}],"isBlockCoverage":true},{"functionName":"exports.build","ranges":[{"startOffset":7109,"endOffset":7328,"count":0}],"isBlockCoverage":false},{"functionName":"internals.context","ranges":[{"startOffset":7352,"endOffset":8163,"count":202},{"startOffset":7433,"endOffset":8125,"count":198},{"startOffset":7493,"endOffset":7508,"count":0},{"startOffset":7584,"endOffset":7667,"count":0},{"startOffset":7724,"endOffset":7738,"count":0},{"startOffset":7810,"endOffset":7890,"count":187},{"startOffset":7890,"endOffset":7944,"count":11},{"startOffset":7945,"endOffset":7958,"count":0},{"startOffset":7991,"endOffset":8026,"count":11},{"startOffset":8028,"endOffset":8119,"count":3},{"startOffset":8125,"endOffset":8162,"count":12}],"isBlockCoverage":true},{"functionName":"internals.ancestor","ranges":[{"startOffset":8188,"endOffset":8621,"count":4},{"startOffset":8237,"endOffset":8303,"count":0},{"startOffset":8335,"endOffset":8392,"count":3},{"startOffset":8392,"endOffset":8424,"count":1},{"startOffset":8424,"endOffset":8480,"count":0},{"startOffset":8480,"endOffset":8620,"count":1}],"isBlockCoverage":true},{"functionName":"exports.Manager","ranges":[{"startOffset":8704,"endOffset":8834,"count":200}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":8840,"endOffset":9917,"count":282},{"startOffset":8889,"endOffset":8920,"count":0},{"startOffset":8960,"endOffset":8978,"count":241},{"startOffset":8979,"endOffset":8987,"count":41},{"startOffset":9043,"endOffset":9173,"count":0},{"startOffset":9231,"endOffset":9489,"count":225},{"startOffset":9283,"endOffset":9458,"count":4},{"startOffset":9334,"endOffset":9444,"count":1},{"startOffset":9489,"endOffset":9547,"count":57},{"startOffset":9547,"endOffset":9585,"count":3},{"startOffset":9586,"endOffset":9630,"count":3},{"startOffset":9632,"endOffset":9731,"count":3},{"startOffset":9731,"endOffset":9782,"count":57},{"startOffset":9782,"endOffset":9806,"count":1},{"startOffset":9850,"endOffset":9911,"count":0}],"isBlockCoverage":true},{"functionName":"get length","ranges":[{"startOffset":9923,"endOffset":9977,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":9983,"endOffset":10102,"count":199}],"isBlockCoverage":true},{"functionName":"reset","ranges":[{"startOffset":10108,"endOffset":10148,"count":56}],"isBlockCoverage":true},{"functionName":"roots","ranges":[{"startOffset":10154,"endOffset":10250,"count":148}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10197,"endOffset":10219,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10225,"endOffset":10242,"count":2}],"isBlockCoverage":true}]},{"scriptId":"1137","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6064,"count":1}],"isBlockCoverage":true},{"functionName":"exports.Report","ranges":[{"startOffset":187,"endOffset":991,"count":0}],"isBlockCoverage":false},{"functionName":"_setTemplate","ranges":[{"startOffset":997,"endOffset":1303,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1309,"endOffset":2187,"count":0}],"isBlockCoverage":false},{"functionName":"_template","ranges":[{"startOffset":2193,"endOffset":2325,"count":0}],"isBlockCoverage":false},{"functionName":"exports.path","ranges":[{"startOffset":2346,"endOffset":2782,"count":0}],"isBlockCoverage":false},{"functionName":"exports.template","ranges":[{"startOffset":2805,"endOffset":3472,"count":0}],"isBlockCoverage":false},{"functionName":"exports.label","ranges":[{"startOffset":3492,"endOffset":4066,"count":0}],"isBlockCoverage":false},{"functionName":"exports.process","ranges":[{"startOffset":4088,"endOffset":4623,"count":9},{"startOffset":4171,"endOffset":4622,"count":0}],"isBlockCoverage":true},{"functionName":"exports.details","ranges":[{"startOffset":4645,"endOffset":5602,"count":0}],"isBlockCoverage":false},{"functionName":"exports.ValidationError","ranges":[{"startOffset":5659,"endOffset":5798,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":5811,"endOffset":5887,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1138","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/annotate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5217,"count":1}],"isBlockCoverage":true},{"functionName":"exports.error","ranges":[{"startOffset":181,"endOffset":2763,"count":0}],"isBlockCoverage":false},{"functionName":"internals.safeStringify","ranges":[{"startOffset":2829,"endOffset":2920,"count":0}],"isBlockCoverage":false},{"functionName":"internals.serializer","ranges":[{"startOffset":2947,"endOffset":5215,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1139","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/template.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11335,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports.internals.Template","ranges":[{"startOffset":757,"endOffset":1756,"count":136},{"startOffset":1122,"endOffset":1620,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1391,"endOffset":1423,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1521,"endOffset":1555,"count":0}],"isBlockCoverage":false},{"functionName":"_parse","ranges":[{"startOffset":1762,"endOffset":3446,"count":136},{"startOffset":1892,"endOffset":1923,"count":24},{"startOffset":1923,"endOffset":2242,"count":112},{"startOffset":2242,"endOffset":2287,"count":1},{"startOffset":2287,"endOffset":2323,"count":112},{"startOffset":2323,"endOffset":3303,"count":187},{"startOffset":2396,"endOffset":2401,"count":14},{"startOffset":2402,"endOffset":2408,"count":173},{"startOffset":2579,"endOffset":2734,"count":0},{"startOffset":2778,"endOffset":2781,"count":14},{"startOffset":2782,"endOffset":2785,"count":173},{"startOffset":2867,"endOffset":2928,"count":20},{"startOffset":3222,"endOffset":3293,"count":149},{"startOffset":3303,"endOffset":3324,"count":112},{"startOffset":3324,"endOffset":3403,"count":0},{"startOffset":3403,"endOffset":3445,"count":112}],"isBlockCoverage":true},{"functionName":"date","ranges":[{"startOffset":3459,"endOffset":3551,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":3557,"endOffset":3935,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":3948,"endOffset":4115,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamic","ranges":[{"startOffset":4121,"endOffset":4174,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplate","ranges":[{"startOffset":4187,"endOffset":4287,"count":213},{"startOffset":4273,"endOffset":4280,"count":0}],"isBlockCoverage":true},{"functionName":"refs","ranges":[{"startOffset":4293,"endOffset":4571,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":4577,"endOffset":4869,"count":0}],"isBlockCoverage":false},{"functionName":"_part","ranges":[{"startOffset":4875,"endOffset":5029,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":5035,"endOffset":5913,"count":0}],"isBlockCoverage":false},{"functionName":"_ref","ranges":[{"startOffset":5919,"endOffset":7067,"count":187},{"startOffset":6357,"endOffset":6405,"count":0},{"startOffset":6560,"endOffset":6703,"count":0},{"startOffset":6733,"endOffset":7021,"count":181},{"startOffset":6885,"endOffset":6931,"count":161},{"startOffset":6948,"endOffset":7021,"count":0},{"startOffset":7021,"endOffset":7066,"count":6}],"isBlockCoverage":true},{"functionName":"reference","ranges":[{"startOffset":6005,"endOffset":6294,"count":191}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6131,"endOffset":6283,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":7073,"endOffset":7120,"count":0}],"isBlockCoverage":false},{"functionName":"internals.encode","ranges":[{"startOffset":7323,"endOffset":7587,"count":112}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7391,"endOffset":7471,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7502,"endOffset":7583,"count":0}],"isBlockCoverage":false},{"functionName":"internals.decode","ranges":[{"startOffset":7610,"endOffset":7717,"count":336}],"isBlockCoverage":true},{"functionName":"internals.split","ranges":[{"startOffset":7739,"endOffset":8266,"count":112},{"startOffset":7849,"endOffset":8220,"count":5613},{"startOffset":7910,"endOffset":8160,"count":187},{"startOffset":7980,"endOffset":8020,"count":360},{"startOffset":8022,"endOffset":8088,"count":173},{"startOffset":8160,"endOffset":8214,"count":5426}],"isBlockCoverage":true},{"functionName":"internals.wrap","ranges":[{"startOffset":8287,"endOffset":8480,"count":0}],"isBlockCoverage":false},{"functionName":"internals.stringify","ranges":[{"startOffset":8506,"endOffset":9877,"count":0}],"isBlockCoverage":false},{"functionName":"if","ranges":[{"startOffset":10087,"endOffset":10171,"count":0}],"isBlockCoverage":false},{"functionName":"length","ranges":[{"startOffset":10178,"endOffset":10486,"count":0}],"isBlockCoverage":false},{"functionName":"msg","ranges":[{"startOffset":10493,"endOffset":10942,"count":0}],"isBlockCoverage":false},{"functionName":"number","ranges":[{"startOffset":10949,"endOffset":11331,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1140","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@hapi/hoek/lib/escapeHtml.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1735,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":56,"endOffset":433,"count":0}],"isBlockCoverage":false},{"functionName":"internals.escapeHtmlChar","ranges":[{"startOffset":464,"endOffset":768,"count":0}],"isBlockCoverage":false},{"functionName":"internals.isSafe","ranges":[{"startOffset":791,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1136,"endOffset":1730,"count":1},{"startOffset":1215,"endOffset":1710,"count":91},{"startOffset":1240,"endOffset":1301,"count":65},{"startOffset":1290,"endOffset":1300,"count":32},{"startOffset":1302,"endOffset":1352,"count":39},{"startOffset":1341,"endOffset":1351,"count":23},{"startOffset":1353,"endOffset":1391,"count":29},{"startOffset":1392,"endOffset":1444,"count":28},{"startOffset":1445,"endOffset":1493,"count":27},{"startOffset":1494,"endOffset":1542,"count":26},{"startOffset":1543,"endOffset":1591,"count":25},{"startOffset":1592,"endOffset":1640,"count":24},{"startOffset":1642,"endOffset":1704,"count":68}],"isBlockCoverage":true}]},{"scriptId":"1141","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@sideway/formula/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12972,"count":1}],"isBlockCoverage":true},{"functionName":"exports.Parser","ranges":[{"startOffset":661,"endOffset":1406,"count":204},{"startOffset":739,"endOffset":771,"count":187},{"startOffset":773,"endOffset":1163,"count":187},{"startOffset":830,"endOffset":1153,"count":1309},{"startOffset":926,"endOffset":1004,"count":1122},{"startOffset":1006,"endOffset":1139,"count":0},{"startOffset":1217,"endOffset":1226,"count":17},{"startOffset":1227,"endOffset":1313,"count":187}],"isBlockCoverage":true},{"functionName":"_parse","ranges":[{"startOffset":1412,"endOffset":7819,"count":204},{"startOffset":4234,"endOffset":5510,"count":1744},{"startOffset":4261,"endOffset":4472,"count":99},{"startOffset":4298,"endOffset":4383,"count":17},{"startOffset":4383,"endOffset":4458,"count":82},{"startOffset":4472,"endOffset":5500,"count":1645},{"startOffset":4507,"endOffset":4991,"count":289},{"startOffset":4540,"endOffset":4628,"count":1},{"startOffset":4628,"endOffset":4977,"count":288},{"startOffset":4665,"endOffset":4902,"count":8},{"startOffset":4740,"endOffset":4797,"count":7},{"startOffset":4797,"endOffset":4884,"count":1},{"startOffset":4902,"endOffset":4977,"count":280},{"startOffset":4991,"endOffset":5500,"count":1356},{"startOffset":5038,"endOffset":5102,"count":17},{"startOffset":5102,"endOffset":5500,"count":1339},{"startOffset":5135,"endOffset":5206,"count":7},{"startOffset":5206,"endOffset":5500,"count":1332},{"startOffset":5270,"endOffset":5364,"count":18},{"startOffset":5364,"endOffset":5500,"count":1314},{"startOffset":5397,"endOffset":5442,"count":1282},{"startOffset":5442,"endOffset":5500,"count":32},{"startOffset":5979,"endOffset":6634,"count":226},{"startOffset":6023,"endOffset":6472,"count":11},{"startOffset":6093,"endOffset":6142,"count":0},{"startOffset":6175,"endOffset":6283,"count":0},{"startOffset":6348,"endOffset":6458,"count":0},{"startOffset":6472,"endOffset":6589,"count":215},{"startOffset":6504,"endOffset":6589,"count":0},{"startOffset":6659,"endOffset":6745,"count":0},{"startOffset":6811,"endOffset":6886,"count":195},{"startOffset":6888,"endOffset":7014,"count":190},{"startOffset":6955,"endOffset":6968,"count":182},{"startOffset":6969,"endOffset":6978,"count":8}],"isBlockCoverage":true},{"functionName":"flush","ranges":[{"startOffset":1561,"endOffset":4199,"count":303},{"startOffset":1604,"endOffset":1691,"count":0},{"startOffset":1731,"endOffset":1756,"count":89},{"startOffset":1757,"endOffset":1763,"count":214},{"startOffset":1791,"endOffset":1818,"count":286},{"startOffset":1819,"endOffset":1844,"count":64},{"startOffset":1846,"endOffset":1886,"count":64},{"startOffset":1886,"endOffset":1909,"count":239},{"startOffset":1909,"endOffset":1953,"count":35},{"startOffset":1954,"endOffset":1986,"count":13},{"startOffset":1988,"endOffset":2241,"count":6},{"startOffset":2241,"endOffset":2274,"count":233},{"startOffset":2274,"endOffset":2496,"count":1},{"startOffset":2496,"endOffset":4162,"count":232},{"startOffset":2527,"endOffset":2910,"count":17},{"startOffset":2566,"endOffset":2788,"count":4},{"startOffset":2788,"endOffset":2910,"count":13},{"startOffset":2910,"endOffset":4162,"count":215},{"startOffset":2980,"endOffset":3402,"count":18},{"startOffset":3092,"endOffset":3165,"count":7},{"startOffset":3167,"endOffset":3277,"count":7},{"startOffset":3277,"endOffset":3388,"count":11},{"startOffset":3402,"endOffset":4162,"count":197},{"startOffset":3459,"endOffset":3600,"count":4},{"startOffset":3600,"endOffset":4162,"count":193},{"startOffset":3670,"endOffset":3813,"count":0},{"startOffset":3978,"endOffset":4080,"count":0},{"startOffset":4162,"endOffset":4198,"count":229}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5615,"endOffset":5877,"count":226},{"startOffset":5672,"endOffset":5709,"count":11},{"startOffset":5710,"endOffset":5766,"count":0},{"startOffset":5813,"endOffset":5876,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7074,"endOffset":7811,"count":226},{"startOffset":7155,"endOffset":7261,"count":11},{"startOffset":7227,"endOffset":7233,"count":0},{"startOffset":7261,"endOffset":7352,"count":215},{"startOffset":7352,"endOffset":7402,"count":24},{"startOffset":7402,"endOffset":7469,"count":191},{"startOffset":7469,"endOffset":7527,"count":0},{"startOffset":7529,"endOffset":7630,"count":0},{"startOffset":7630,"endOffset":7748,"count":191},{"startOffset":7748,"endOffset":7810,"count":0}],"isBlockCoverage":true},{"functionName":"_subFormula","ranges":[{"startOffset":7825,"endOffset":9702,"count":6},{"startOffset":7950,"endOffset":8035,"count":0},{"startOffset":8506,"endOffset":9337,"count":245},{"startOffset":8574,"endOffset":8731,"count":67},{"startOffset":8649,"endOffset":8713,"count":12},{"startOffset":8731,"endOffset":9323,"count":178},{"startOffset":8781,"endOffset":8816,"count":14},{"startOffset":8818,"endOffset":8925,"count":12},{"startOffset":8925,"endOffset":9323,"count":166},{"startOffset":8961,"endOffset":8996,"count":10},{"startOffset":8998,"endOffset":9047,"count":10},{"startOffset":9047,"endOffset":9323,"count":156},{"startOffset":9140,"endOffset":9202,"count":1},{"startOffset":9202,"endOffset":9305,"count":155},{"startOffset":9243,"endOffset":9305,"count":1}],"isBlockCoverage":true},{"functionName":"flush","ranges":[{"startOffset":8205,"endOffset":8451,"count":16},{"startOffset":8244,"endOffset":8370,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9395,"endOffset":9442,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9461,"endOffset":9695,"count":0}],"isBlockCoverage":false},{"functionName":"evaluate","ranges":[{"startOffset":9708,"endOffset":10987,"count":0}],"isBlockCoverage":false},{"functionName":"internals.reference","ranges":[{"startOffset":11068,"endOffset":11206,"count":0}],"isBlockCoverage":false},{"functionName":"internals.evaluate","ranges":[{"startOffset":11231,"endOffset":11485,"count":0}],"isBlockCoverage":false},{"functionName":"internals.single","ranges":[{"startOffset":11508,"endOffset":11758,"count":0}],"isBlockCoverage":false},{"functionName":"internals.calculate","ranges":[{"startOffset":11784,"endOffset":12876,"count":0}],"isBlockCoverage":false},{"functionName":"internals.exists","ranges":[{"startOffset":12899,"endOffset":12970,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1142","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/extend.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7561,"count":1}],"isBlockCoverage":true},{"functionName":"exports.type","ranges":[{"startOffset":229,"endOffset":5151,"count":13},{"startOffset":583,"endOffset":588,"count":1},{"startOffset":933,"endOffset":1271,"count":8},{"startOffset":973,"endOffset":1265,"count":23},{"startOffset":1346,"endOffset":1385,"count":10},{"startOffset":1505,"endOffset":1799,"count":7},{"startOffset":1553,"endOffset":1613,"count":1},{"startOffset":1643,"endOffset":1689,"count":5},{"startOffset":1691,"endOffset":1793,"count":3},{"startOffset":2036,"endOffset":3531,"count":12},{"startOffset":2076,"endOffset":3525,"count":98},{"startOffset":2290,"endOffset":2413,"count":0},{"startOffset":2439,"endOffset":2574,"count":96},{"startOffset":2707,"endOffset":2894,"count":2},{"startOffset":2923,"endOffset":3515,"count":15},{"startOffset":3657,"endOffset":4137,"count":1},{"startOffset":3701,"endOffset":4131,"count":3},{"startOffset":4212,"endOffset":4740,"count":3},{"startOffset":4952,"endOffset":4973,"count":8},{"startOffset":4991,"endOffset":5015,"count":12}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":2317,"endOffset":2398,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3012,"endOffset":3499,"count":27},{"startOffset":3073,"endOffset":3141,"count":20},{"startOffset":3295,"endOffset":3392,"count":0}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":3959,"endOffset":4041,"count":0}],"isBlockCoverage":false},{"functionName":"internals.build","ranges":[{"startOffset":5185,"endOffset":5380,"count":13},{"startOffset":5228,"endOffset":5246,"count":8},{"startOffset":5248,"endOffset":5288,"count":6},{"startOffset":5272,"endOffset":5281,"count":5},{"startOffset":5288,"endOffset":5379,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5301,"endOffset":5377,"count":0}],"isBlockCoverage":false},{"functionName":"internals.coerce","ranges":[{"startOffset":5403,"endOffset":6369,"count":13},{"startOffset":5446,"endOffset":5464,"count":7},{"startOffset":5490,"endOffset":5499,"count":6},{"startOffset":5506,"endOffset":5560,"count":0},{"startOffset":5561,"endOffset":5608,"count":0},{"startOffset":5609,"endOffset":5615,"count":0}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":5625,"endOffset":6360,"count":0}],"isBlockCoverage":false},{"functionName":"internals.prepare","ranges":[{"startOffset":6393,"endOffset":6848,"count":13},{"startOffset":6436,"endOffset":6454,"count":0},{"startOffset":6496,"endOffset":6847,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6509,"endOffset":6845,"count":0}],"isBlockCoverage":false},{"functionName":"internals.rebuild","ranges":[{"startOffset":6872,"endOffset":7064,"count":13},{"startOffset":6915,"endOffset":6933,"count":3},{"startOffset":6959,"endOffset":6968,"count":10},{"startOffset":6975,"endOffset":7063,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6988,"endOffset":7061,"count":0}],"isBlockCoverage":false},{"functionName":"internals.validate","ranges":[{"startOffset":7089,"endOffset":7559,"count":13},{"startOffset":7132,"endOffset":7150,"count":10},{"startOffset":7176,"endOffset":7185,"count":3},{"startOffset":7192,"endOffset":7558,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7205,"endOffset":7556,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1143","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/messages.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4311,"count":1}],"isBlockCoverage":true},{"functionName":"exports.compile","ranges":[{"startOffset":196,"endOffset":1878,"count":10},{"startOffset":345,"endOffset":452,"count":0},{"startOffset":523,"endOffset":618,"count":0},{"startOffset":798,"endOffset":813,"count":0},{"startOffset":852,"endOffset":1856,"count":30},{"startOffset":968,"endOffset":1038,"count":0},{"startOffset":1164,"endOffset":1310,"count":0},{"startOffset":1418,"endOffset":1423,"count":0},{"startOffset":1456,"endOffset":1850,"count":0}],"isBlockCoverage":true},{"functionName":"exports.decompile","ranges":[{"startOffset":1902,"endOffset":2778,"count":0}],"isBlockCoverage":false},{"functionName":"exports.merge","ranges":[{"startOffset":2798,"endOffset":4309,"count":13},{"startOffset":2842,"endOffset":2891,"count":1},{"startOffset":2891,"endOffset":2912,"count":12},{"startOffset":2912,"endOffset":2940,"count":2},{"startOffset":2940,"endOffset":3008,"count":10},{"startOffset":3008,"endOffset":3054,"count":0},{"startOffset":3054,"endOffset":3125,"count":10},{"startOffset":3125,"endOffset":3157,"count":0},{"startOffset":3157,"endOffset":3283,"count":10},{"startOffset":3283,"endOffset":4287,"count":106},{"startOffset":3399,"endOffset":3469,"count":0},{"startOffset":3595,"endOffset":3741,"count":0},{"startOffset":3849,"endOffset":3854,"count":0},{"startOffset":3887,"endOffset":4281,"count":0},{"startOffset":4287,"endOffset":4308,"count":10}],"isBlockCoverage":true}]},{"scriptId":"1144","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/manifest.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11824,"count":1}],"isBlockCoverage":true},{"functionName":"exports.describe","ranges":[{"startOffset":317,"endOffset":3917,"count":0}],"isBlockCoverage":false},{"functionName":"internals.describe","ranges":[{"startOffset":3942,"endOffset":5299,"count":0}],"isBlockCoverage":false},{"functionName":"exports.build","ranges":[{"startOffset":5319,"endOffset":5424,"count":0}],"isBlockCoverage":false},{"functionName":"internals.Builder","ranges":[{"startOffset":5461,"endOffset":5510,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":5516,"endOffset":9559,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":9565,"endOffset":11480,"count":0}],"isBlockCoverage":false},{"functionName":"internals.regex","ranges":[{"startOffset":11504,"endOffset":11681,"count":0}],"isBlockCoverage":false},{"functionName":"internals.validate","ranges":[{"startOffset":11706,"endOffset":11822,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1145","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/trace.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8216,"count":1}],"isBlockCoverage":true},{"functionName":"exports.setup","ranges":[{"startOffset":365,"endOffset":670,"count":1}],"isBlockCoverage":true},{"functionName":"trace","ranges":[{"startOffset":402,"endOffset":514,"count":0}],"isBlockCoverage":false},{"functionName":"root.untrace","ranges":[{"startOffset":624,"endOffset":667,"count":0}],"isBlockCoverage":false},{"functionName":"exports.location","ranges":[{"startOffset":693,"endOffset":832,"count":0}],"isBlockCoverage":false},{"functionName":"internals.Tracer","ranges":[{"startOffset":868,"endOffset":952,"count":0}],"isBlockCoverage":false},{"functionName":"_register","ranges":[{"startOffset":958,"endOffset":1411,"count":0}],"isBlockCoverage":false},{"functionName":"_combine","ranges":[{"startOffset":1417,"endOffset":1564,"count":0}],"isBlockCoverage":false},{"functionName":"report","ranges":[{"startOffset":1570,"endOffset":4514,"count":0}],"isBlockCoverage":false},{"functionName":"internals.Store","ranges":[{"startOffset":4551,"endOffset":4798,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":4804,"endOffset":4956,"count":0}],"isBlockCoverage":false},{"functionName":"entry","ranges":[{"startOffset":4962,"endOffset":5126,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":5132,"endOffset":5327,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":5333,"endOffset":5651,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":5657,"endOffset":5878,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":5884,"endOffset":6200,"count":0}],"isBlockCoverage":false},{"functionName":"_record","ranges":[{"startOffset":6206,"endOffset":6496,"count":0}],"isBlockCoverage":false},{"functionName":"_scan","ranges":[{"startOffset":6502,"endOffset":7154,"count":0}],"isBlockCoverage":false},{"functionName":"_combine","ranges":[{"startOffset":7160,"endOffset":7237,"count":0}],"isBlockCoverage":false},{"functionName":"internals.message","ranges":[{"startOffset":7263,"endOffset":7428,"count":0}],"isBlockCoverage":false},{"functionName":"internals.id","ranges":[{"startOffset":7447,"endOffset":7745,"count":0}],"isBlockCoverage":false},{"functionName":"internals.sub","ranges":[{"startOffset":7765,"endOffset":8006,"count":0}],"isBlockCoverage":false},{"functionName":"internals.debug","ranges":[{"startOffset":8028,"endOffset":8214,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1146","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@hapi/hoek/lib/deepEqual.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7662,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":114,"endOffset":266,"count":108}],"isBlockCoverage":true},{"functionName":"internals.isDeepEqual","ranges":[{"startOffset":294,"endOffset":1959,"count":108},{"startOffset":353,"endOffset":591,"count":0},{"startOffset":652,"endOffset":681,"count":89},{"startOffset":681,"endOffset":727,"count":19},{"startOffset":729,"endOffset":759,"count":0},{"startOffset":759,"endOffset":790,"count":19},{"startOffset":790,"endOffset":951,"count":0},{"startOffset":951,"endOffset":1074,"count":19},{"startOffset":1013,"endOffset":1027,"count":0},{"startOffset":1074,"endOffset":1280,"count":0},{"startOffset":1321,"endOffset":1372,"count":0},{"startOffset":1381,"endOffset":1452,"count":0},{"startOffset":1461,"endOffset":1513,"count":0},{"startOffset":1519,"endOffset":1957,"count":0}],"isBlockCoverage":true},{"functionName":"internals.getSharedType","ranges":[{"startOffset":1989,"endOffset":2386,"count":0}],"isBlockCoverage":false},{"functionName":"internals.valueOf","ranges":[{"startOffset":2410,"endOffset":2625,"count":0}],"isBlockCoverage":false},{"functionName":"internals.hasOwnEnumerableProperty","ranges":[{"startOffset":2666,"endOffset":2755,"count":0}],"isBlockCoverage":false},{"functionName":"internals.isSetSimpleEqual","ranges":[{"startOffset":2788,"endOffset":2981,"count":0}],"isBlockCoverage":false},{"functionName":"internals.isDeepEqualObj","ranges":[{"startOffset":3012,"endOffset":7457,"count":0}],"isBlockCoverage":false},{"functionName":"internals.SeenEntry","ranges":[{"startOffset":7496,"endOffset":7574,"count":0}],"isBlockCoverage":false},{"functionName":"isSame","ranges":[{"startOffset":7580,"endOffset":7658,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1147","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@sideway/pinpoint/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":426,"count":1}],"isBlockCoverage":true},{"functionName":"exports.location","ranges":[{"startOffset":58,"endOffset":424,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1148","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/types/alternatives.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10159,"count":1}],"isBlockCoverage":true},{"functionName":"args","ranges":[{"startOffset":546,"endOffset":774,"count":4},{"startOffset":728,"endOffset":773,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":781,"endOffset":4428,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":4480,"endOffset":5384,"count":1},{"startOffset":4980,"endOffset":4994,"count":0},{"startOffset":5122,"endOffset":5256,"count":0}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":5426,"endOffset":5863,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":5903,"endOffset":6374,"count":12},{"startOffset":6213,"endOffset":6313,"count":36}],"isBlockCoverage":true},{"functionName":"label","ranges":[{"startOffset":6419,"endOffset":6734,"count":0}],"isBlockCoverage":false},{"functionName":"rebuild","ranges":[{"startOffset":6747,"endOffset":7076,"count":13}],"isBlockCoverage":true},{"functionName":"each","ranges":[{"startOffset":6841,"endOffset":7033,"count":41},{"startOffset":6892,"endOffset":6932,"count":40},{"startOffset":6934,"endOffset":7023,"count":2}],"isBlockCoverage":true},{"functionName":"build","ranges":[{"startOffset":7104,"endOffset":7737,"count":0}],"isBlockCoverage":false},{"functionName":"internals.errors","ranges":[{"startOffset":8200,"endOffset":9894,"count":0}],"isBlockCoverage":false},{"functionName":"internals.unmatched","ranges":[{"startOffset":9920,"endOffset":10157,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1149","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@hapi/hoek/lib/merge.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2417,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports.internals.merge","ranges":[{"startOffset":180,"endOffset":2415,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1150","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/types/any.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4880,"count":1}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":627,"endOffset":988,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":1002,"endOffset":1266,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":1381,"endOffset":1463,"count":9}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":1506,"endOffset":1873,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":1917,"endOffset":2131,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":2145,"endOffset":2254,"count":0}],"isBlockCoverage":false},{"functionName":"keep","ranges":[{"startOffset":2361,"endOffset":2433,"count":0}],"isBlockCoverage":false},{"functionName":"message","ranges":[{"startOffset":2444,"endOffset":2533,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":2544,"endOffset":2616,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":2650,"endOffset":4256,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1151","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29602,"count":1}],"isBlockCoverage":true},{"functionName":"internals.Base","ranges":[{"startOffset":708,"endOffset":911,"count":1}],"isBlockCoverage":true},{"functionName":"_reset","ranges":[{"startOffset":917,"endOffset":1695,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":1718,"endOffset":1869,"count":0}],"isBlockCoverage":false},{"functionName":"allow","ranges":[{"startOffset":1889,"endOffset":2006,"count":30}],"isBlockCoverage":true},{"functionName":"alter","ranges":[{"startOffset":2012,"endOffset":2651,"count":0}],"isBlockCoverage":false},{"functionName":"artifact","ranges":[{"startOffset":2657,"endOffset":2866,"count":0}],"isBlockCoverage":false},{"functionName":"cast","ranges":[{"startOffset":2872,"endOffset":3149,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":3155,"endOffset":3244,"count":0}],"isBlockCoverage":false},{"functionName":"description","ranges":[{"startOffset":3250,"endOffset":3421,"count":0}],"isBlockCoverage":false},{"functionName":"empty","ranges":[{"startOffset":3427,"endOffset":3661,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":3667,"endOffset":3888,"count":0}],"isBlockCoverage":false},{"functionName":"example","ranges":[{"startOffset":3894,"endOffset":4140,"count":0}],"isBlockCoverage":false},{"functionName":"external","ranges":[{"startOffset":4146,"endOffset":4691,"count":0}],"isBlockCoverage":false},{"functionName":"failover","ranges":[{"startOffset":4697,"endOffset":4788,"count":0}],"isBlockCoverage":false},{"functionName":"forbidden","ranges":[{"startOffset":4794,"endOffset":4857,"count":1}],"isBlockCoverage":true},{"functionName":"id","ranges":[{"startOffset":4863,"endOffset":5150,"count":0}],"isBlockCoverage":false},{"functionName":"invalid","ranges":[{"startOffset":5156,"endOffset":5233,"count":0}],"isBlockCoverage":false},{"functionName":"label","ranges":[{"startOffset":5239,"endOffset":5397,"count":0}],"isBlockCoverage":false},{"functionName":"meta","ranges":[{"startOffset":5403,"endOffset":5548,"count":0}],"isBlockCoverage":false},{"functionName":"note","ranges":[{"startOffset":5554,"endOffset":5804,"count":0}],"isBlockCoverage":false},{"functionName":"only","ranges":[{"startOffset":5810,"endOffset":5948,"count":0}],"isBlockCoverage":false},{"functionName":"optional","ranges":[{"startOffset":5954,"endOffset":6015,"count":6}],"isBlockCoverage":true},{"functionName":"prefs","ranges":[{"startOffset":6021,"endOffset":6546,"count":9}],"isBlockCoverage":true},{"functionName":"presence","ranges":[{"startOffset":6552,"endOffset":6726,"count":32}],"isBlockCoverage":true},{"functionName":"raw","ranges":[{"startOffset":6732,"endOffset":6830,"count":0}],"isBlockCoverage":false},{"functionName":"result","ranges":[{"startOffset":6836,"endOffset":6983,"count":0}],"isBlockCoverage":false},{"functionName":"required","ranges":[{"startOffset":6989,"endOffset":7050,"count":25}],"isBlockCoverage":true},{"functionName":"strict","ranges":[{"startOffset":7056,"endOffset":7279,"count":3},{"startOffset":7164,"endOffset":7174,"count":0}],"isBlockCoverage":true},{"functionName":"strip","ranges":[{"startOffset":7285,"endOffset":7387,"count":0}],"isBlockCoverage":false},{"functionName":"tag","ranges":[{"startOffset":7393,"endOffset":7632,"count":0}],"isBlockCoverage":false},{"functionName":"unit","ranges":[{"startOffset":7638,"endOffset":7793,"count":0}],"isBlockCoverage":false},{"functionName":"valid","ranges":[{"startOffset":7799,"endOffset":7996,"count":16}],"isBlockCoverage":true},{"functionName":"when","ranges":[{"startOffset":8002,"endOffset":8817,"count":2},{"startOffset":8305,"endOffset":8318,"count":0},{"startOffset":8427,"endOffset":8457,"count":0},{"startOffset":8564,"endOffset":8596,"count":0},{"startOffset":8597,"endOffset":8632,"count":0},{"startOffset":8685,"endOffset":8707,"count":0}],"isBlockCoverage":true},{"functionName":"cache","ranges":[{"startOffset":8839,"endOffset":9238,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":9244,"endOffset":9358,"count":186}],"isBlockCoverage":true},{"functionName":"concat","ranges":[{"startOffset":9364,"endOffset":12418,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":12424,"endOffset":12563,"count":13}],"isBlockCoverage":true},{"functionName":"extract","ranges":[{"startOffset":12569,"endOffset":12690,"count":0}],"isBlockCoverage":false},{"functionName":"fork","ranges":[{"startOffset":12696,"endOffset":13133,"count":0}],"isBlockCoverage":false},{"functionName":"rule","ranges":[{"startOffset":13139,"endOffset":14234,"count":0}],"isBlockCoverage":false},{"functionName":"get ruleset","ranges":[{"startOffset":14240,"endOffset":14464,"count":0}],"isBlockCoverage":false},{"functionName":"get $","ranges":[{"startOffset":14470,"endOffset":14515,"count":0}],"isBlockCoverage":false},{"functionName":"tailor","ranges":[{"startOffset":14521,"endOffset":15295,"count":0}],"isBlockCoverage":false},{"functionName":"tracer","ranges":[{"startOffset":15301,"endOffset":15419,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":15425,"endOffset":15512,"count":9}],"isBlockCoverage":true},{"functionName":"validateAsync","ranges":[{"startOffset":15518,"endOffset":15615,"count":0}],"isBlockCoverage":false},{"functionName":"$_addRule","ranges":[{"startOffset":15640,"endOffset":18135,"count":44},{"startOffset":15730,"endOffset":15782,"count":12},{"startOffset":15982,"endOffset":16067,"count":104},{"startOffset":16205,"endOffset":16217,"count":35},{"startOffset":16445,"endOffset":17692,"count":32},{"startOffset":16497,"endOffset":16574,"count":12},{"startOffset":16667,"endOffset":17682,"count":44},{"startOffset":16750,"endOffset":17506,"count":29},{"startOffset":16859,"endOffset":16910,"count":10},{"startOffset":16912,"endOffset":17036,"count":0},{"startOffset":17112,"endOffset":17243,"count":0},{"startOffset":17290,"endOffset":17466,"count":10},{"startOffset":17547,"endOffset":17634,"count":5},{"startOffset":17634,"endOffset":17682,"count":39},{"startOffset":17750,"endOffset":17870,"count":37},{"startOffset":17914,"endOffset":17964,"count":3},{"startOffset":17999,"endOffset":18048,"count":8},{"startOffset":18048,"endOffset":18108,"count":36}],"isBlockCoverage":true},{"functionName":"$_compile","ranges":[{"startOffset":18141,"endOffset":18237,"count":223}],"isBlockCoverage":true},{"functionName":"$_createError","ranges":[{"startOffset":18243,"endOffset":18597,"count":0}],"isBlockCoverage":false},{"functionName":"$_getFlag","ranges":[{"startOffset":18603,"endOffset":18661,"count":0}],"isBlockCoverage":false},{"functionName":"$_getRule","ranges":[{"startOffset":18667,"endOffset":18735,"count":0}],"isBlockCoverage":false},{"functionName":"$_mapLabels","ranges":[{"startOffset":18741,"endOffset":18867,"count":0}],"isBlockCoverage":false},{"functionName":"$_match","ranges":[{"startOffset":18873,"endOffset":19219,"count":0}],"isBlockCoverage":false},{"functionName":"$_modify","ranges":[{"startOffset":19225,"endOffset":19378,"count":69}],"isBlockCoverage":true},{"functionName":"$_mutateRebuild","ranges":[{"startOffset":19384,"endOffset":20020,"count":56},{"startOffset":19900,"endOffset":19955,"count":55}],"isBlockCoverage":true},{"functionName":"each","ranges":[{"startOffset":19560,"endOffset":19825,"count":217}],"isBlockCoverage":true},{"functionName":"$_mutateRegister","ranges":[{"startOffset":20026,"endOffset":20171,"count":282}],"isBlockCoverage":true},{"functionName":"$_property","ranges":[{"startOffset":20177,"endOffset":20252,"count":243}],"isBlockCoverage":true},{"functionName":"$_reach","ranges":[{"startOffset":20258,"endOffset":20318,"count":0}],"isBlockCoverage":false},{"functionName":"$_rootReferences","ranges":[{"startOffset":20324,"endOffset":20386,"count":148}],"isBlockCoverage":true},{"functionName":"$_setFlag","ranges":[{"startOffset":20392,"endOffset":21118,"count":54},{"startOffset":20463,"endOffset":20484,"count":51},{"startOffset":20574,"endOffset":20579,"count":35},{"startOffset":20625,"endOffset":20667,"count":0},{"startOffset":20718,"endOffset":20754,"count":0},{"startOffset":20800,"endOffset":20814,"count":35},{"startOffset":20815,"endOffset":20821,"count":19},{"startOffset":20947,"endOffset":21009,"count":0},{"startOffset":21040,"endOffset":21091,"count":51}],"isBlockCoverage":true},{"functionName":"$_parent","ranges":[{"startOffset":21124,"endOffset":21230,"count":0}],"isBlockCoverage":false},{"functionName":"$_validate","ranges":[{"startOffset":21236,"endOffset":21338,"count":153}],"isBlockCoverage":true},{"functionName":"_assign","ranges":[{"startOffset":21362,"endOffset":22412,"count":199},{"startOffset":21672,"endOffset":21695,"count":11},{"startOffset":21739,"endOffset":21764,"count":0},{"startOffset":22085,"endOffset":22184,"count":2053},{"startOffset":22139,"endOffset":22166,"count":706},{"startOffset":22167,"endOffset":22173,"count":1347},{"startOffset":22296,"endOffset":22382,"count":98},{"startOffset":22382,"endOffset":22411,"count":198}],"isBlockCoverage":true},{"functionName":"_bare","ranges":[{"startOffset":22418,"endOffset":22702,"count":0}],"isBlockCoverage":false},{"functionName":"_default","ranges":[{"startOffset":22708,"endOffset":23250,"count":0}],"isBlockCoverage":false},{"functionName":"_generate","ranges":[{"startOffset":23256,"endOffset":26158,"count":0}],"isBlockCoverage":false},{"functionName":"_inner","ranges":[{"startOffset":26164,"endOffset":26644,"count":0}],"isBlockCoverage":false},{"functionName":"_inRuleset","ranges":[{"startOffset":26650,"endOffset":26749,"count":107},{"startOffset":26710,"endOffset":26742,"count":10}],"isBlockCoverage":true},{"functionName":"_ruleRemove","ranges":[{"startOffset":26755,"endOffset":27459,"count":37},{"startOffset":26868,"endOffset":26928,"count":0},{"startOffset":26929,"endOffset":26935,"count":0},{"startOffset":27059,"endOffset":27458,"count":0}],"isBlockCoverage":true},{"functionName":"_values","ranges":[{"startOffset":27465,"endOffset":28804,"count":30},{"startOffset":27664,"endOffset":27713,"count":10},{"startOffset":27816,"endOffset":27950,"count":0},{"startOffset":27975,"endOffset":28010,"count":0},{"startOffset":28034,"endOffset":28078,"count":10},{"startOffset":28116,"endOffset":28777,"count":54},{"startOffset":28347,"endOffset":28358,"count":0},{"startOffset":28402,"endOffset":28722,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1152","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/modify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6847,"count":1}],"isBlockCoverage":true},{"functionName":"exports.Ids.internals.Ids","ranges":[{"startOffset":201,"endOffset":323,"count":200}],"isBlockCoverage":true},{"functionName":"clone","ranges":[{"startOffset":329,"endOffset":546,"count":199}],"isBlockCoverage":true},{"functionName":"concat","ranges":[{"startOffset":552,"endOffset":1059,"count":0}],"isBlockCoverage":false},{"functionName":"fork","ranges":[{"startOffset":1065,"endOffset":1582,"count":0}],"isBlockCoverage":false},{"functionName":"labels","ranges":[{"startOffset":1588,"endOffset":2021,"count":0}],"isBlockCoverage":false},{"functionName":"reach","ranges":[{"startOffset":2027,"endOffset":2404,"count":0}],"isBlockCoverage":false},{"functionName":"register","ranges":[{"startOffset":2410,"endOffset":3303,"count":282},{"startOffset":2505,"endOffset":2537,"count":57},{"startOffset":2537,"endOffset":2584,"count":225},{"startOffset":2584,"endOffset":2623,"count":221},{"startOffset":2625,"endOffset":2675,"count":8},{"startOffset":2675,"endOffset":2730,"count":225},{"startOffset":2730,"endOffset":3042,"count":0},{"startOffset":3042,"endOffset":3061,"count":225},{"startOffset":3061,"endOffset":3297,"count":148}],"isBlockCoverage":true},{"functionName":"reset","ranges":[{"startOffset":3309,"endOffset":3425,"count":56}],"isBlockCoverage":true},{"functionName":"_collect","ranges":[{"startOffset":3431,"endOffset":3862,"count":0}],"isBlockCoverage":false},{"functionName":"_get","ranges":[{"startOffset":3868,"endOffset":3943,"count":0}],"isBlockCoverage":false},{"functionName":"internals.fork","ranges":[{"startOffset":3966,"endOffset":4251,"count":0}],"isBlockCoverage":false},{"functionName":"exports.schema","ranges":[{"startOffset":4272,"endOffset":5586,"count":69},{"startOffset":4354,"endOffset":4647,"count":0},{"startOffset":4700,"endOffset":5231,"count":10},{"startOffset":4872,"endOffset":5225,"count":0},{"startOffset":5272,"endOffset":5567,"count":755},{"startOffset":5303,"endOffset":5336,"count":24},{"startOffset":5336,"endOffset":5469,"count":731},{"startOffset":5469,"endOffset":5561,"count":0}],"isBlockCoverage":true},{"functionName":"internals.scan","ranges":[{"startOffset":5607,"endOffset":6845,"count":1381},{"startOffset":5679,"endOffset":5684,"count":741},{"startOffset":5709,"endOffset":5744,"count":934},{"startOffset":5746,"endOffset":5770,"count":609},{"startOffset":5770,"endOffset":5817,"count":772},{"startOffset":5817,"endOffset":6221,"count":284},{"startOffset":5865,"endOffset":6192,"count":250},{"startOffset":5943,"endOffset":5957,"count":148},{"startOffset":6085,"endOffset":6182,"count":0},{"startOffset":6221,"endOffset":6280,"count":488},{"startOffset":6281,"endOffset":6332,"count":234},{"startOffset":6334,"endOffset":6502,"count":258},{"startOffset":6441,"endOffset":6472,"count":0},{"startOffset":6502,"endOffset":6532,"count":230},{"startOffset":6532,"endOffset":6824,"count":390},{"startOffset":6562,"endOffset":6595,"count":0},{"startOffset":6720,"endOffset":6818,"count":0},{"startOffset":6824,"endOffset":6844,"count":230}],"isBlockCoverage":true}]},{"scriptId":"1153","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/validator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20979,"count":1}],"isBlockCoverage":true},{"functionName":"exports.entry","ranges":[{"startOffset":386,"endOffset":1371,"count":9},{"startOffset":472,"endOffset":766,"count":0},{"startOffset":999,"endOffset":1044,"count":0},{"startOffset":1087,"endOffset":1162,"count":0},{"startOffset":1195,"endOffset":1249,"count":0},{"startOffset":1286,"endOffset":1348,"count":0}],"isBlockCoverage":true},{"functionName":"exports.entryAsync","ranges":[{"startOffset":1396,"endOffset":5732,"count":0}],"isBlockCoverage":false},{"functionName":"internals.Mainstay","ranges":[{"startOffset":5770,"endOffset":6045,"count":9}],"isBlockCoverage":true},{"functionName":"snapshot","ranges":[{"startOffset":6051,"endOffset":6204,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":6210,"endOffset":6364,"count":0}],"isBlockCoverage":false},{"functionName":"commit","ranges":[{"startOffset":6370,"endOffset":6418,"count":0}],"isBlockCoverage":false},{"functionName":"internals.entry","ranges":[{"startOffset":6442,"endOffset":7165,"count":9},{"startOffset":6594,"endOffset":6598,"count":0},{"startOffset":6650,"endOffset":6661,"count":0},{"startOffset":6782,"endOffset":6796,"count":0},{"startOffset":7006,"endOffset":7046,"count":0}],"isBlockCoverage":true},{"functionName":"internals.tracer","ranges":[{"startOffset":7188,"endOffset":7544,"count":9},{"startOffset":7247,"endOffset":7322,"count":0},{"startOffset":7345,"endOffset":7500,"count":0}],"isBlockCoverage":true},{"functionName":"exports.validate","ranges":[{"startOffset":7567,"endOffset":13334,"count":162},{"startOffset":7655,"endOffset":7725,"count":0},{"startOffset":7789,"endOffset":7844,"count":9},{"startOffset":7882,"endOffset":7904,"count":0},{"startOffset":7906,"endOffset":8098,"count":0},{"startOffset":8755,"endOffset":8785,"count":0},{"startOffset":8786,"endOffset":8810,"count":0},{"startOffset":8812,"endOffset":9217,"count":0},{"startOffset":9260,"endOffset":9290,"count":99},{"startOffset":9291,"endOffset":9315,"count":0},{"startOffset":9316,"endOffset":9387,"count":0},{"startOffset":9389,"endOffset":9794,"count":0},{"startOffset":9869,"endOffset":9960,"count":0},{"startOffset":9962,"endOffset":10068,"count":0},{"startOffset":10229,"endOffset":10235,"count":0},{"startOffset":10284,"endOffset":10870,"count":144},{"startOffset":10324,"endOffset":10396,"count":0},{"startOffset":10435,"endOffset":10568,"count":0},{"startOffset":10759,"endOffset":10864,"count":0},{"startOffset":10870,"endOffset":11034,"count":18},{"startOffset":10910,"endOffset":11034,"count":0},{"startOffset":11034,"endOffset":11107,"count":18},{"startOffset":11107,"endOffset":11870,"count":0},{"startOffset":11870,"endOffset":11920,"count":18},{"startOffset":11920,"endOffset":12421,"count":0},{"startOffset":12421,"endOffset":13157,"count":18},{"startOffset":12534,"endOffset":13151,"count":9},{"startOffset":12724,"endOffset":12903,"count":0},{"startOffset":12945,"endOffset":13127,"count":0},{"startOffset":13157,"endOffset":13279,"count":18},{"startOffset":13279,"endOffset":13333,"count":0}],"isBlockCoverage":true},{"functionName":"createError","ranges":[{"startOffset":8140,"endOffset":8237,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":8418,"endOffset":8513,"count":0}],"isBlockCoverage":false},{"functionName":"message","ranges":[{"startOffset":8532,"endOffset":8625,"count":0}],"isBlockCoverage":false},{"functionName":"internals.rules","ranges":[{"startOffset":13356,"endOffset":15544,"count":0}],"isBlockCoverage":false},{"functionName":"internals.rule","ranges":[{"startOffset":15565,"endOffset":15946,"count":0}],"isBlockCoverage":false},{"functionName":"internals.error","ranges":[{"startOffset":15968,"endOffset":16089,"count":0}],"isBlockCoverage":false},{"functionName":"internals.finalize","ranges":[{"startOffset":16114,"endOffset":19031,"count":162},{"startOffset":16171,"endOffset":16176,"count":144},{"startOffset":16271,"endOffset":16542,"count":0},{"startOffset":16589,"endOffset":16619,"count":0},{"startOffset":16621,"endOffset":17084,"count":0},{"startOffset":17131,"endOffset":17318,"count":144},{"startOffset":17360,"endOffset":17390,"count":0},{"startOffset":17392,"endOffset":17685,"count":0},{"startOffset":17738,"endOffset":17764,"count":0},{"startOffset":17765,"endOffset":17802,"count":0},{"startOffset":17804,"endOffset":18050,"count":0},{"startOffset":18117,"endOffset":18125,"count":0},{"startOffset":18167,"endOffset":18410,"count":0},{"startOffset":18448,"endOffset":18480,"count":0},{"startOffset":18481,"endOffset":18512,"count":0},{"startOffset":18514,"endOffset":18575,"count":0},{"startOffset":18623,"endOffset":18648,"count":18},{"startOffset":18649,"endOffset":18696,"count":18},{"startOffset":18698,"endOffset":19009,"count":0}],"isBlockCoverage":true},{"functionName":"internals.prefs","ranges":[{"startOffset":19053,"endOffset":19457,"count":9},{"startOffset":19216,"endOffset":19282,"count":8},{"startOffset":19282,"endOffset":19456,"count":1}],"isBlockCoverage":true},{"functionName":"internals.default","ranges":[{"startOffset":19481,"endOffset":20429,"count":144},{"startOffset":19698,"endOffset":20428,"count":0}],"isBlockCoverage":true},{"functionName":"internals.trim","ranges":[{"startOffset":20450,"endOffset":20690,"count":0}],"isBlockCoverage":false},{"functionName":"internals.errorsArray","ranges":[{"startOffset":20877,"endOffset":20977,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1154","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@hapi/hoek/lib/ignore.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":73,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":56,"endOffset":71,"count":315}],"isBlockCoverage":true}]},{"scriptId":"1155","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3520,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports.internals.State","ranges":[{"startOffset":248,"endOffset":537,"count":162}],"isBlockCoverage":true},{"functionName":"localize","ranges":[{"startOffset":543,"endOffset":826,"count":153},{"startOffset":710,"endOffset":797,"count":0}],"isBlockCoverage":true},{"functionName":"nest","ranges":[{"startOffset":832,"endOffset":1075,"count":0}],"isBlockCoverage":false},{"functionName":"shadow","ranges":[{"startOffset":1081,"endOffset":1250,"count":0}],"isBlockCoverage":false},{"functionName":"snapshot","ranges":[{"startOffset":1256,"endOffset":1430,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":1436,"endOffset":1644,"count":0}],"isBlockCoverage":false},{"functionName":"commit","ranges":[{"startOffset":1650,"endOffset":1856,"count":0}],"isBlockCoverage":false},{"functionName":"internals.schemas","ranges":[{"startOffset":1882,"endOffset":1992,"count":0}],"isBlockCoverage":false},{"functionName":"internals.Shadow","ranges":[{"startOffset":2028,"endOffset":2079,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":2085,"endOffset":2828,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2834,"endOffset":2962,"count":0}],"isBlockCoverage":false},{"functionName":"node","ranges":[{"startOffset":2968,"endOffset":3110,"count":0}],"isBlockCoverage":false},{"functionName":"override","ranges":[{"startOffset":3116,"endOffset":3516,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1156","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/values.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5865,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports.internals.Values","ranges":[{"startOffset":231,"endOffset":430,"count":41}],"isBlockCoverage":true},{"functionName":"get length","ranges":[{"startOffset":436,"endOffset":509,"count":54}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":515,"endOffset":1103,"count":54},{"startOffset":597,"endOffset":855,"count":0},{"startOffset":1007,"endOffset":1087,"count":38}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":1116,"endOffset":1649,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":1655,"endOffset":1973,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":1979,"endOffset":2086,"count":54}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2092,"endOffset":4120,"count":54},{"startOffset":2159,"endOffset":2196,"count":30},{"startOffset":2196,"endOffset":2260,"count":24},{"startOffset":2260,"endOffset":2301,"count":0},{"startOffset":2301,"endOffset":2383,"count":24},{"startOffset":2383,"endOffset":2403,"count":20},{"startOffset":2404,"endOffset":2430,"count":20},{"startOffset":2432,"endOffset":2592,"count":0},{"startOffset":2592,"endOffset":2663,"count":24},{"startOffset":2665,"endOffset":2703,"count":24},{"startOffset":2703,"endOffset":4119,"count":0}],"isBlockCoverage":true},{"functionName":"override","ranges":[{"startOffset":4126,"endOffset":4176,"count":10}],"isBlockCoverage":true},{"functionName":"values","ranges":[{"startOffset":4182,"endOffset":4573,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":4579,"endOffset":4723,"count":11}],"isBlockCoverage":true},{"functionName":"concat","ranges":[{"startOffset":4729,"endOffset":5002,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":5008,"endOffset":5434,"count":0}],"isBlockCoverage":false},{"functionName":"internals.lowercases","ranges":[{"startOffset":5618,"endOffset":5863,"count":41},{"startOffset":5679,"endOffset":5844,"count":11},{"startOffset":5760,"endOffset":5828,"count":9}],"isBlockCoverage":true}]},{"scriptId":"1157","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/types/array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26729,"count":1}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":715,"endOffset":1045,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":1058,"endOffset":1616,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":1660,"endOffset":1915,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":1929,"endOffset":2597,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":2664,"endOffset":3089,"count":8},{"startOffset":2851,"endOffset":3088,"count":22}],"isBlockCoverage":true},{"functionName":"Common.tryWithPath.append","ranges":[{"startOffset":2905,"endOffset":2937,"count":22}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":3103,"endOffset":12600,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":12701,"endOffset":12822,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":12836,"endOffset":13121,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":13398,"endOffset":13535,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":13575,"endOffset":13712,"count":2}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":13756,"endOffset":14291,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":14334,"endOffset":14612,"count":2},{"startOffset":14412,"endOffset":14423,"count":0}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":14653,"endOffset":15159,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":15173,"endOffset":15738,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":15808,"endOffset":16166,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":16209,"endOffset":17028,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":17042,"endOffset":19965,"count":0}],"isBlockCoverage":false},{"functionName":"to","ranges":[{"startOffset":20126,"endOffset":20200,"count":0}],"isBlockCoverage":false},{"functionName":"rebuild","ranges":[{"startOffset":20223,"endOffset":20941,"count":8},{"startOffset":20414,"endOffset":20819,"count":22},{"startOffset":20522,"endOffset":20591,"count":0},{"startOffset":20651,"endOffset":20721,"count":0},{"startOffset":20872,"endOffset":20935,"count":0}],"isBlockCoverage":true},{"functionName":"build","ranges":[{"startOffset":20969,"endOffset":21214,"count":0}],"isBlockCoverage":false},{"functionName":"internals.fillMissedErrors","ranges":[{"startOffset":22734,"endOffset":23546,"count":0}],"isBlockCoverage":false},{"functionName":"internals.fillOrderedErrors","ranges":[{"startOffset":23580,"endOffset":23960,"count":0}],"isBlockCoverage":false},{"functionName":"internals.fillDefault","ranges":[{"startOffset":23988,"endOffset":24635,"count":0}],"isBlockCoverage":false},{"functionName":"internals.fastSplice","ranges":[{"startOffset":24662,"endOffset":24788,"count":0}],"isBlockCoverage":false},{"functionName":"internals.validateSingle","ranges":[{"startOffset":24819,"endOffset":25071,"count":22},{"startOffset":24873,"endOffset":24907,"count":21},{"startOffset":24909,"endOffset":25069,"count":1}],"isBlockCoverage":true},{"functionName":"internals.sort","ranges":[{"startOffset":25092,"endOffset":26297,"count":0}],"isBlockCoverage":false},{"functionName":"internals.compare","ranges":[{"startOffset":26321,"endOffset":26727,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1158","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/types/boolean.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3325,"count":1}],"isBlockCoverage":true},{"functionName":"internals.isBool","ranges":[{"startOffset":214,"endOffset":274,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":584,"endOffset":1249,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":1256,"endOffset":1404,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":1450,"endOffset":1942,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":1984,"endOffset":2471,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":2517,"endOffset":2617,"count":0}],"isBlockCoverage":false},{"functionName":"to","ranges":[{"startOffset":2714,"endOffset":2787,"count":0}],"isBlockCoverage":false},{"functionName":"to","ranges":[{"startOffset":2865,"endOffset":2949,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":2993,"endOffset":3235,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1159","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/types/date.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5320,"count":1}],"isBlockCoverage":true},{"functionName":"internals.isDate","ranges":[{"startOffset":218,"endOffset":273,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":385,"endOffset":508,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":521,"endOffset":957,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":1032,"endOffset":1387,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":1523,"endOffset":1635,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":1665,"endOffset":1688,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":1825,"endOffset":2017,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":2061,"endOffset":2200,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":2240,"endOffset":2308,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":2349,"endOffset":2485,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":2525,"endOffset":2661,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":2701,"endOffset":2837,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":2883,"endOffset":3077,"count":0}],"isBlockCoverage":false},{"functionName":"to","ranges":[{"startOffset":3174,"endOffset":3249,"count":0}],"isBlockCoverage":false},{"functionName":"to","ranges":[{"startOffset":3327,"endOffset":3416,"count":0}],"isBlockCoverage":false},{"functionName":"internals.parse","ranges":[{"startOffset":4158,"endOffset":5163,"count":0}],"isBlockCoverage":false},{"functionName":"internals.date","ranges":[{"startOffset":5184,"endOffset":5318,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1160","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/types/function.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2304,"count":1}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":273,"endOffset":462,"count":3}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":476,"endOffset":682,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":724,"endOffset":797,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":811,"endOffset":1034,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":1079,"endOffset":1277,"count":2}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":1291,"endOffset":1499,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":1544,"endOffset":1736,"count":7}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":1750,"endOffset":1958,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1161","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/types/keys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32568,"count":1}],"isBlockCoverage":true},{"functionName":"args","ranges":[{"startOffset":1088,"endOffset":1149,"count":25}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":1156,"endOffset":4696,"count":18},{"startOffset":1324,"endOffset":1435,"count":0},{"startOffset":1606,"endOffset":1691,"count":9},{"startOffset":1692,"endOffset":1732,"count":9},{"startOffset":1734,"endOffset":1934,"count":9},{"startOffset":1934,"endOffset":2003,"count":0},{"startOffset":2005,"endOffset":2055,"count":0},{"startOffset":2055,"endOffset":2119,"count":9},{"startOffset":2119,"endOffset":2204,"count":0},{"startOffset":2205,"endOffset":2248,"count":0},{"startOffset":2250,"endOffset":2300,"count":0},{"startOffset":2300,"endOffset":3537,"count":9},{"startOffset":2533,"endOffset":3527,"count":153},{"startOffset":2866,"endOffset":3196,"count":0},{"startOffset":3311,"endOffset":3332,"count":144},{"startOffset":3334,"endOffset":3393,"count":0},{"startOffset":3447,"endOffset":3513,"count":9},{"startOffset":3537,"endOffset":3638,"count":9},{"startOffset":3640,"endOffset":3816,"count":0},{"startOffset":3816,"endOffset":3893,"count":9},{"startOffset":3893,"endOffset":4655,"count":0},{"startOffset":4655,"endOffset":4695,"count":9}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":4740,"endOffset":4911,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":4954,"endOffset":5219,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":5262,"endOffset":5835,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":5849,"endOffset":6317,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":6439,"endOffset":6715,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":6729,"endOffset":6978,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":7062,"endOffset":8082,"count":33},{"startOffset":7359,"endOffset":7473,"count":0},{"startOffset":7528,"endOffset":7634,"count":0},{"startOffset":7714,"endOffset":7785,"count":0},{"startOffset":7856,"endOffset":8003,"count":148}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7740,"endOffset":7784,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7901,"endOffset":7974,"count":148}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":8125,"endOffset":8246,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":8260,"endOffset":8559,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":8836,"endOffset":8973,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":9013,"endOffset":9150,"count":1}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":9191,"endOffset":9364,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":9403,"endOffset":9572,"count":2}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":9613,"endOffset":9735,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":9779,"endOffset":11296,"count":11},{"startOffset":9911,"endOffset":10007,"count":0},{"startOffset":10570,"endOffset":10580,"count":0},{"startOffset":10645,"endOffset":11047,"count":0},{"startOffset":11090,"endOffset":11156,"count":0}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":11336,"endOffset":11407,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":11421,"endOffset":11622,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":11664,"endOffset":11737,"count":2}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":11751,"endOffset":11957,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":12000,"endOffset":13059,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":13102,"endOffset":13214,"count":2}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":13228,"endOffset":13507,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":13551,"endOffset":13648,"count":1}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":13689,"endOffset":13818,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":13862,"endOffset":13994,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":14034,"endOffset":14205,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":14250,"endOffset":14453,"count":0}],"isBlockCoverage":false},{"functionName":"rebuild","ranges":[{"startOffset":14466,"endOffset":14850,"count":34},{"startOffset":14518,"endOffset":14844,"count":33},{"startOffset":14617,"endOffset":14764,"count":148}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14654,"endOffset":14737,"count":148}],"isBlockCoverage":true},{"functionName":"build","ranges":[{"startOffset":14878,"endOffset":15691,"count":0}],"isBlockCoverage":false},{"functionName":"internals.clone","ranges":[{"startOffset":17725,"endOffset":18407,"count":9},{"startOffset":17838,"endOffset":17901,"count":0},{"startOffset":18034,"endOffset":18406,"count":0}],"isBlockCoverage":true},{"functionName":"clone","ranges":[{"startOffset":18071,"endOffset":18138,"count":0}],"isBlockCoverage":false},{"functionName":"internals.dependency","ranges":[{"startOffset":18434,"endOffset":19477,"count":2},{"startOffset":18505,"endOffset":18531,"count":0},{"startOffset":18708,"endOffset":18721,"count":0},{"startOffset":18968,"endOffset":19129,"count":4},{"startOffset":19170,"endOffset":19252,"count":0}],"isBlockCoverage":true},{"functionName":"and","ranges":[{"startOffset":19513,"endOffset":20417,"count":0}],"isBlockCoverage":false},{"functionName":"nand","ranges":[{"startOffset":20424,"endOffset":21205,"count":0}],"isBlockCoverage":false},{"functionName":"or","ranges":[{"startOffset":21212,"endOffset":21705,"count":0}],"isBlockCoverage":false},{"functionName":"oxor","ranges":[{"startOffset":21712,"endOffset":22407,"count":0}],"isBlockCoverage":false},{"functionName":"with","ranges":[{"startOffset":22414,"endOffset":23069,"count":0}],"isBlockCoverage":false},{"functionName":"without","ranges":[{"startOffset":23076,"endOffset":23727,"count":0}],"isBlockCoverage":false},{"functionName":"xor","ranges":[{"startOffset":23734,"endOffset":24498,"count":0}],"isBlockCoverage":false},{"functionName":"internals.keysToLabels","ranges":[{"startOffset":24529,"endOffset":24691,"count":0}],"isBlockCoverage":false},{"functionName":"internals.isPresent","ranges":[{"startOffset":24717,"endOffset":24851,"count":0}],"isBlockCoverage":false},{"functionName":"internals.rename","ranges":[{"startOffset":24874,"endOffset":27161,"count":0}],"isBlockCoverage":false},{"functionName":"internals.unknown","ranges":[{"startOffset":27185,"endOffset":31248,"count":0}],"isBlockCoverage":false},{"functionName":"internals.Dependency","ranges":[{"startOffset":31288,"endOffset":31477,"count":2}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":31483,"endOffset":31970,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":32020,"endOffset":32564,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1162","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@hapi/hoek/lib/applyToDefaults.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2672,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":196,"endOffset":1123,"count":0}],"isBlockCoverage":false},{"functionName":"internals.applyToDefaultsWithShallow","ranges":[{"startOffset":1166,"endOffset":2081,"count":0}],"isBlockCoverage":false},{"functionName":"internals.reachCopy","ranges":[{"startOffset":2107,"endOffset":2670,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1163","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@hapi/topo/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5926,"count":1}],"isBlockCoverage":true},{"functionName":"exports.Sorter","ranges":[{"startOffset":120,"endOffset":193,"count":33}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":199,"endOffset":1471,"count":148},{"startOffset":248,"endOffset":253,"count":0},{"startOffset":385,"endOffset":390,"count":0},{"startOffset":429,"endOffset":435,"count":0},{"startOffset":1389,"endOffset":1393,"count":0}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":1477,"endOffset":2119,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":2125,"endOffset":2264,"count":0}],"isBlockCoverage":false},{"functionName":"_sort","ranges":[{"startOffset":2270,"endOffset":5819,"count":148},{"startOffset":2533,"endOffset":3115,"count":765},{"startOffset":2981,"endOffset":3105,"count":13},{"startOffset":3189,"endOffset":3518,"count":765},{"startOffset":3284,"endOffset":3465,"count":0},{"startOffset":3633,"endOffset":3822,"count":13},{"startOffset":3918,"endOffset":4133,"count":765},{"startOffset":4004,"endOffset":4123,"count":13},{"startOffset":4266,"endOffset":5344,"count":765},{"startOffset":4382,"endOffset":5213,"count":13},{"startOffset":4474,"endOffset":5199,"count":53},{"startOffset":4561,"endOffset":4618,"count":40},{"startOffset":4618,"endOffset":4659,"count":13},{"startOffset":4659,"endOffset":4725,"count":0},{"startOffset":4725,"endOffset":5181,"count":13},{"startOffset":5396,"endOffset":5433,"count":0},{"startOffset":5504,"endOffset":5554,"count":765},{"startOffset":5644,"endOffset":5791,"count":765}],"isBlockCoverage":true},{"functionName":"internals.mergeSort","ranges":[{"startOffset":5847,"endOffset":5924,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1164","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/types/link.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4542,"count":1}],"isBlockCoverage":true},{"functionName":"args","ranges":[{"startOffset":428,"endOffset":486,"count":4}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":493,"endOffset":836,"count":0}],"isBlockCoverage":false},{"functionName":"generate","ranges":[{"startOffset":843,"endOffset":953,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":997,"endOffset":1490,"count":4},{"startOffset":1172,"endOffset":1195,"count":0},{"startOffset":1306,"endOffset":1325,"count":1}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":1535,"endOffset":1634,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":1679,"endOffset":2163,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":2197,"endOffset":2337,"count":0}],"isBlockCoverage":false},{"functionName":"internals.generate","ranges":[{"startOffset":2383,"endOffset":3233,"count":0}],"isBlockCoverage":false},{"functionName":"internals.perspective","ranges":[{"startOffset":3261,"endOffset":4215,"count":0}],"isBlockCoverage":false},{"functionName":"internals.assert","ranges":[{"startOffset":4238,"endOffset":4540,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1165","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/types/number.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10410,"count":1}],"isBlockCoverage":true},{"functionName":"decimalPlaces","ranges":[{"startOffset":429,"endOffset":764,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":925,"endOffset":2096,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":2109,"endOffset":3128,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":3203,"endOffset":3482,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":3756,"endOffset":3897,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":3941,"endOffset":4016,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":4030,"endOffset":4235,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":4276,"endOffset":4414,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":4454,"endOffset":4592,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":4632,"endOffset":4770,"count":1}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":4815,"endOffset":5267,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":5281,"endOffset":5918,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":6051,"endOffset":6119,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":6342,"endOffset":6413,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":6454,"endOffset":6526,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":6540,"endOffset":6811,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":6856,"endOffset":6927,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":6973,"endOffset":7164,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":7178,"endOffset":7604,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":7672,"endOffset":7862,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":7876,"endOffset":8149,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":8192,"endOffset":8373,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":8440,"endOffset":8476,"count":0}],"isBlockCoverage":false},{"functionName":"to","ranges":[{"startOffset":8490,"endOffset":8566,"count":0}],"isBlockCoverage":false},{"functionName":"internals.extractSignificantDigits","ranges":[{"startOffset":9550,"endOffset":9791,"count":0}],"isBlockCoverage":false},{"functionName":"internals.normalizeDecimal","ranges":[{"startOffset":9824,"endOffset":10408,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1166","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/types/object.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":341,"count":1}],"isBlockCoverage":true},{"functionName":"from","ranges":[{"startOffset":171,"endOffset":216,"count":0}],"isBlockCoverage":false},{"functionName":"to","ranges":[{"startOffset":230,"endOffset":320,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1167","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/types/string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28220,"count":1},{"startOffset":538,"endOffset":545,"count":0}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":2107,"endOffset":4048,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":4061,"endOffset":4467,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":4516,"endOffset":4592,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":4606,"endOffset":4809,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":4852,"endOffset":5323,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":5337,"endOffset":5635,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":5676,"endOffset":5881,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":5895,"endOffset":6238,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":6312,"endOffset":6390,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":6404,"endOffset":6921,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":6965,"endOffset":7321,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":7335,"endOffset":7987,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":8030,"endOffset":8408,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":8422,"endOffset":8644,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":8686,"endOffset":9314,"count":1},{"startOffset":8943,"endOffset":8983,"count":0},{"startOffset":9159,"endOffset":9191,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":9328,"endOffset":9878,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":9946,"endOffset":11745,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":11759,"endOffset":12209,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":12249,"endOffset":12745,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":12759,"endOffset":13406,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":13451,"endOffset":13527,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":13541,"endOffset":13817,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":13865,"endOffset":13950,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":13989,"endOffset":14336,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":14350,"endOffset":14768,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":14812,"endOffset":14887,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":14901,"endOffset":15093,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":15141,"endOffset":15220,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":15234,"endOffset":15450,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":15493,"endOffset":15612,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":15626,"endOffset":16059,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":16370,"endOffset":16438,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":16478,"endOffset":16595,"count":1}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":16676,"endOffset":16793,"count":3}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":16880,"endOffset":17145,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":17159,"endOffset":17387,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":17486,"endOffset":18148,"count":7},{"startOffset":17770,"endOffset":17838,"count":0},{"startOffset":17976,"endOffset":17987,"count":0},{"startOffset":18007,"endOffset":18016,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":18162,"endOffset":18488,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":18597,"endOffset":19213,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":19255,"endOffset":19328,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":19342,"endOffset":19533,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":19574,"endOffset":19773,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":19787,"endOffset":20026,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":20098,"endOffset":20281,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":20327,"endOffset":20395,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":20435,"endOffset":21079,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":21093,"endOffset":22446,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":22490,"endOffset":22750,"count":0}],"isBlockCoverage":false},{"functionName":"internals.addressOptions","ranges":[{"startOffset":25394,"endOffset":27329,"count":1},{"startOffset":25434,"endOffset":25513,"count":0},{"startOffset":25592,"endOffset":25683,"count":0},{"startOffset":25812,"endOffset":25903,"count":0},{"startOffset":26000,"endOffset":26031,"count":0},{"startOffset":26231,"endOffset":27328,"count":0}],"isBlockCoverage":true},{"functionName":"internals.validateTlds","ranges":[{"startOffset":27358,"endOffset":27560,"count":0}],"isBlockCoverage":false},{"functionName":"internals.isoDate","ranges":[{"startOffset":27584,"endOffset":27920,"count":0}],"isBlockCoverage":false},{"functionName":"internals.length","ranges":[{"startOffset":27943,"endOffset":28218,"count":5},{"startOffset":28018,"endOffset":28058,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1168","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@sideway/address/lib/domain.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3300,"count":1},{"startOffset":427,"endOffset":433,"count":0}],"isBlockCoverage":true},{"functionName":"exports.analyze","ranges":[{"startOffset":546,"endOffset":2945,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isValid","ranges":[{"startOffset":2967,"endOffset":3044,"count":0}],"isBlockCoverage":false},{"functionName":"internals.punycode","ranges":[{"startOffset":3069,"endOffset":3298,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1169","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@sideway/address/lib/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1378,"count":1}],"isBlockCoverage":true},{"functionName":"exports.code","ranges":[{"startOffset":1307,"endOffset":1376,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1170","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@sideway/address/lib/email.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4915,"count":1},{"startOffset":207,"endOffset":221,"count":0}],"isBlockCoverage":true},{"functionName":"exports.analyze","ranges":[{"startOffset":316,"endOffset":390,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isValid","ranges":[{"startOffset":412,"endOffset":487,"count":0}],"isBlockCoverage":false},{"functionName":"internals.email","ranges":[{"startOffset":509,"endOffset":1865,"count":0}],"isBlockCoverage":false},{"functionName":"internals.local","ranges":[{"startOffset":1887,"endOffset":2586,"count":0}],"isBlockCoverage":false},{"functionName":"internals.binary","ranges":[{"startOffset":2609,"endOffset":2728,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1171","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@sideway/address/lib/ip.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1915,"count":1}],"isBlockCoverage":true},{"functionName":"exports.regex","ranges":[{"startOffset":137,"endOffset":1913,"count":1},{"startOffset":345,"endOffset":357,"count":0},{"startOffset":545,"endOffset":583,"count":0},{"startOffset":584,"endOffset":617,"count":0},{"startOffset":781,"endOffset":819,"count":0},{"startOffset":960,"endOffset":1282,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1376,"endOffset":1781,"count":3},{"startOffset":1495,"endOffset":1583,"count":0},{"startOffset":1584,"endOffset":1599,"count":0},{"startOffset":1637,"endOffset":1780,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1172","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@sideway/address/lib/uri.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9909,"count":1}],"isBlockCoverage":true},{"functionName":"internals.generate","ranges":[{"startOffset":170,"endOffset":6972,"count":1}],"isBlockCoverage":true},{"functionName":"internals.createRegex","ranges":[{"startOffset":7268,"endOffset":9252,"count":1},{"startOffset":7406,"endOffset":7435,"count":0},{"startOffset":7629,"endOffset":7653,"count":0},{"startOffset":7704,"endOffset":7761,"count":0},{"startOffset":7837,"endOffset":8850,"count":0},{"startOffset":8950,"endOffset":8978,"count":0},{"startOffset":9053,"endOffset":9074,"count":0},{"startOffset":9139,"endOffset":9180,"count":0}],"isBlockCoverage":true},{"functionName":"internals.wrap","ranges":[{"startOffset":9273,"endOffset":9562,"count":1}],"isBlockCoverage":true},{"functionName":"exports.regex","ranges":[{"startOffset":9632,"endOffset":9907,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1173","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@hapi/hoek/lib/escapeRegex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":198,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":56,"endOffset":196,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1174","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@sideway/address/lib/tlds.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20077,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20047,"endOffset":20073,"count":1452}],"isBlockCoverage":true}]},{"scriptId":"1175","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/types/symbol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2313,"count":1}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":162,"endOffset":218,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":363,"endOffset":761,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":774,"endOffset":920,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":963,"endOffset":1984,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":2028,"endOffset":2165,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1176","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/types/binary.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2546,"count":1}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":268,"endOffset":572,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":585,"endOffset":729,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":777,"endOffset":956,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":999,"endOffset":1138,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":1152,"endOffset":1438,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":1715,"endOffset":1852,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":1892,"endOffset":2029,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":2096,"endOffset":2129,"count":0}],"isBlockCoverage":false},{"functionName":"to","ranges":[{"startOffset":2143,"endOffset":2219,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1177","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/joi/lib/schemas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8112,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1178","url":"node:cluster","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1405,"count":1}],"isBlockCoverage":false}]},{"scriptId":"1179","url":"node:internal/cluster/primary","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10492,"count":1}],"isBlockCoverage":false},{"functionName":"cluster.setupPrimary","ranges":[{"startOffset":1899,"endOffset":3564,"count":0}],"isBlockCoverage":false},{"functionName":"setupSettingsNT","ranges":[{"startOffset":3666,"endOffset":3741,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkerProcess","ranges":[{"startOffset":3745,"endOffset":4572,"count":0}],"isBlockCoverage":false},{"functionName":"removeWorker","ranges":[{"startOffset":4576,"endOffset":4819,"count":0}],"isBlockCoverage":false},{"functionName":"removeHandlesForWorker","ranges":[{"startOffset":4823,"endOffset":4993,"count":0}],"isBlockCoverage":false},{"functionName":"cluster.fork","ranges":[{"startOffset":5012,"endOffset":6679,"count":0}],"isBlockCoverage":false},{"functionName":"emitForkNT","ranges":[{"startOffset":6684,"endOffset":6749,"count":0}],"isBlockCoverage":false},{"functionName":"cluster.disconnect","ranges":[{"startOffset":6774,"endOffset":7160,"count":0}],"isBlockCoverage":false},{"functionName":"onmessage","ranges":[{"startOffset":7280,"endOffset":7456,"count":0}],"isBlockCoverage":false},{"functionName":"online","ranges":[{"startOffset":7460,"endOffset":7577,"count":0}],"isBlockCoverage":false},{"functionName":"exitedAfterDisconnect","ranges":[{"startOffset":7581,"endOffset":7712,"count":0}],"isBlockCoverage":false},{"functionName":"queryServer","ranges":[{"startOffset":7716,"endOffset":9343,"count":0}],"isBlockCoverage":false},{"functionName":"listening","ranges":[{"startOffset":9347,"endOffset":9639,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":9798,"endOffset":9966,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":9970,"endOffset":10076,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.disconnect","ranges":[{"startOffset":10182,"endOffset":10345,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.destroy","ranges":[{"startOffset":10377,"endOffset":10489,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1180","url":"node:internal/cluster/round_robin_handle","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3592,"count":1}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle","ranges":[{"startOffset":392,"endOffset":1364,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.add","ranges":[{"startOffset":1401,"endOffset":2055,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.remove","ranges":[{"startOffset":2096,"endOffset":2475,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.distribute","ranges":[{"startOffset":2520,"endOffset":2954,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.handoff","ranges":[{"startOffset":2996,"endOffset":3589,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1181","url":"node:internal/cluster/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1105,"count":1}],"isBlockCoverage":false},{"functionName":"sendHelper","ranges":[{"startOffset":179,"endOffset":538,"count":0}],"isBlockCoverage":false},{"functionName":"internal","ranges":[{"startOffset":676,"endOffset":1103,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1182","url":"node:internal/cluster/shared_handle","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1147,"count":1}],"isBlockCoverage":false},{"functionName":"SharedHandle","ranges":[{"startOffset":200,"endOffset":694,"count":0}],"isBlockCoverage":false},{"functionName":"SharedHandle.add","ranges":[{"startOffset":727,"endOffset":875,"count":0}],"isBlockCoverage":false},{"functionName":"SharedHandle.remove","ranges":[{"startOffset":912,"endOffset":1144,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1183","url":"node:internal/cluster/worker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1436,"count":1}],"isBlockCoverage":false},{"functionName":"Worker","ranges":[{"startOffset":294,"endOffset":911,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.kill","ranges":[{"startOffset":1051,"endOffset":1114,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.send","ranges":[{"startOffset":1143,"endOffset":1226,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.isDead","ranges":[{"startOffset":1257,"endOffset":1348,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.isConnected","ranges":[{"startOffset":1384,"endOffset":1433,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1185","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/iconv-lite/encodings/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":710,"count":1},{"startOffset":546,"endOffset":709,"count":8},{"startOffset":613,"endOffset":707,"count":408}],"isBlockCoverage":true}]},{"scriptId":"1186","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/iconv-lite/encodings/internal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6113,"count":1},{"startOffset":1579,"endOffset":1623,"count":0}],"isBlockCoverage":true},{"functionName":"InternalCodec","ranges":[{"startOffset":571,"endOffset":1182,"count":1},{"startOffset":742,"endOffset":779,"count":0},{"startOffset":815,"endOffset":1180,"count":0}],"isBlockCoverage":true},{"functionName":"StringDecoder.end","ranges":[{"startOffset":1609,"endOffset":1622,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoder","ranges":[{"startOffset":1626,"endOffset":1711,"count":2}],"isBlockCoverage":true},{"functionName":"InternalEncoder","ranges":[{"startOffset":1879,"endOffset":1949,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoder.write","ranges":[{"startOffset":1985,"endOffset":2041,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoder.end","ranges":[{"startOffset":2075,"endOffset":2089,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderBase64","ranges":[{"startOffset":2227,"endOffset":2300,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderBase64.write","ranges":[{"startOffset":2342,"endOffset":2568,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderBase64.end","ranges":[{"startOffset":2608,"endOffset":2670,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderCesu8","ranges":[{"startOffset":2790,"endOffset":2839,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderCesu8.write","ranges":[{"startOffset":2880,"endOffset":3698,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderCesu8.end","ranges":[{"startOffset":3737,"endOffset":3751,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoderCesu8","ranges":[{"startOffset":3886,"endOffset":4056,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoderCesu8.write","ranges":[{"startOffset":4097,"endOffset":5958,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoderCesu8.end","ranges":[{"startOffset":5997,"endOffset":6112,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1187","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/iconv-lite/encodings/utf16.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5011,"count":1}],"isBlockCoverage":true},{"functionName":"Utf16BECodec","ranges":[{"startOffset":254,"endOffset":281,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEEncoder","ranges":[{"startOffset":439,"endOffset":468,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEEncoder.write","ranges":[{"startOffset":503,"endOffset":689,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEEncoder.end","ranges":[{"startOffset":722,"endOffset":736,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEDecoder","ranges":[{"startOffset":755,"endOffset":812,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEDecoder.write","ranges":[{"startOffset":847,"endOffset":1331,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEDecoder.end","ranges":[{"startOffset":1364,"endOffset":1378,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Codec","ranges":[{"startOffset":1920,"endOffset":1988,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Encoder","ranges":[{"startOffset":2113,"endOffset":2316,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Encoder.write","ranges":[{"startOffset":2349,"endOffset":2402,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Encoder.end","ranges":[{"startOffset":2433,"endOffset":2478,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Decoder","ranges":[{"startOffset":2497,"endOffset":2686,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Decoder.write","ranges":[{"startOffset":2719,"endOffset":3387,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Decoder.end","ranges":[{"startOffset":3418,"endOffset":3819,"count":0}],"isBlockCoverage":false},{"functionName":"detectEncoding","ranges":[{"startOffset":3821,"endOffset":5008,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1188","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/iconv-lite/encodings/utf7.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9215,"count":1},{"startOffset":1342,"endOffset":1400,"count":256}],"isBlockCoverage":true},{"functionName":"Utf7Codec","ranges":[{"startOffset":311,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Encoder","ranges":[{"startOffset":583,"endOffset":653,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Encoder.write","ranges":[{"startOffset":685,"endOffset":1061,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Encoder.end","ranges":[{"startOffset":1091,"endOffset":1105,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Decoder","ranges":[{"startOffset":1124,"endOffset":1248,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Decoder.write","ranges":[{"startOffset":1536,"endOffset":3319,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Decoder.end","ranges":[{"startOffset":3349,"endOffset":3592,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPCodec","ranges":[{"startOffset":4130,"endOffset":4201,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPEncoder","ranges":[{"startOffset":4365,"endOffset":4535,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPEncoder.write","ranges":[{"startOffset":4571,"endOffset":6249,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPEncoder.end","ranges":[{"startOffset":6283,"endOffset":6744,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPDecoder","ranges":[{"startOffset":6763,"endOffset":6891,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPDecoder.write","ranges":[{"startOffset":7014,"endOffset":8935,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPDecoder.end","ranges":[{"startOffset":8969,"endOffset":9212,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1189","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/iconv-lite/encodings/sbcs-codec.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2191,"count":1}],"isBlockCoverage":true},{"functionName":"SBCSCodec","ranges":[{"startOffset":248,"endOffset":1203,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSEncoder","ranges":[{"startOffset":1293,"endOffset":1371,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSEncoder.write","ranges":[{"startOffset":1403,"endOffset":1574,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSEncoder.end","ranges":[{"startOffset":1604,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSDecoder","ranges":[{"startOffset":1621,"endOffset":1699,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSDecoder.write","ranges":[{"startOffset":1731,"endOffset":2146,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSDecoder.end","ranges":[{"startOffset":2176,"endOffset":2190,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1190","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/iconv-lite/encodings/sbcs-data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4184,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1191","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/iconv-lite/encodings/sbcs-data-generated.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18865,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1192","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/iconv-lite/encodings/dbcs-codec.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21415,"count":1},{"startOffset":522,"endOffset":554,"count":256}],"isBlockCoverage":true},{"functionName":"DBCSCodec","ranges":[{"startOffset":614,"endOffset":5289,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._getDecodeTrieNode","ranges":[{"startOffset":5438,"endOffset":6214,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._addDecodeChunk","ranges":[{"startOffset":6255,"endOffset":8486,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._getEncodeBucket","ranges":[{"startOffset":8546,"endOffset":8814,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._setEncodeChar","ranges":[{"startOffset":8853,"endOffset":9204,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._setEncodeSequence","ranges":[{"startOffset":9247,"endOffset":10426,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._fillEncodeTable","ranges":[{"startOffset":10467,"endOffset":11039,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSEncoder","ranges":[{"startOffset":11125,"endOffset":11442,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSEncoder.write","ranges":[{"startOffset":11474,"endOffset":16174,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSEncoder.end","ranges":[{"startOffset":16204,"endOffset":17110,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSDecoder","ranges":[{"startOffset":17259,"endOffset":17580,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSDecoder.write","ranges":[{"startOffset":17612,"endOffset":20538,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSDecoder.end","ranges":[{"startOffset":20568,"endOffset":21017,"count":0}],"isBlockCoverage":false},{"functionName":"findIdx","ranges":[{"startOffset":21094,"endOffset":21413,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1193","url":"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/iconv-lite/encodings/dbcs-data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8288,"count":1}],"isBlockCoverage":true},{"functionName":"table","ranges":[{"startOffset":2563,"endOffset":2618,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":3052,"endOffset":3104,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":3996,"endOffset":4048,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":4205,"endOffset":4300,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":4732,"endOffset":4827,"count":0}],"isBlockCoverage":false},{"functionName":"gb18030","ranges":[{"startOffset":4846,"endOffset":4907,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":5275,"endOffset":5327,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":7815,"endOffset":7867,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":8064,"endOffset":8160,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1194","url":"node:internal/modules/esm/handle_process_exit","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":448,"count":1}],"isBlockCoverage":false},{"functionName":"handleProcessExit","ranges":[{"startOffset":315,"endOffset":398,"count":0}],"isBlockCoverage":false}]}],"timestamp":6939.732402,"source-map-cache":{"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/index.js":{"lineLengths":[25,13,0,46,13,3,40,19,23,28,3,3,45,19,23,32,3,3,45,19,23,27,3,3,54,19,23,36,3,3,45,19,23,27,3,3,52,19,23,34,3,3,49,19,23,35,3,3,43,19,23,24,3,3,44,19,23,26,3,3,48,19,23,30,3,3,46,19,23,29,3,3,46,19,23,29,3,3,48,19,23,31,3,3,46,19,23,29,3,3,41,19,23,24,3,3,51,19,23,35,3,3,55,19,23,39,3,3,47,19,23,31,3,3,55,19,23,36,3,3,55,19,23,36,3,3,0,23,3,25,54,23,1,0,3,25,40,23,1,0,3,25,30,23,1,0,3,25,30,23,1,0,3,25,38,23,1,0,3,25,28,23,1,0,3,25,30,23,1,0,3,25,32,23,1,0,3,25,33,23,1,0,3,25,33,23,1,0,3,25,33,23,1,0,3,25,35,23,1,0,3,25,31,23,1,0,3,25,31,23,1,0,123,0,23,3012,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/src/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["/* See LICENSE file for terms of use */\n\n/*\n * Text diff implementation.\n *\n * This library supports the following APIS:\n * JsDiff.diffChars: Character by character diff\n * JsDiff.diffWords: Word (as defined by \\b regex) diff which ignores whitespace\n * JsDiff.diffLines: Line based diff\n *\n * JsDiff.diffCss: Diff targeted at CSS content\n *\n * These methods are based on the implementation proposed in\n * \"An O(ND) Difference Algorithm and its Variations\" (Myers, 1986).\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.4.6927\n */\nimport Diff from './diff/base';\nimport {diffChars} from './diff/character';\nimport {diffWords, diffWordsWithSpace} from './diff/word';\nimport {diffLines, diffTrimmedLines} from './diff/line';\nimport {diffSentences} from './diff/sentence';\n\nimport {diffCss} from './diff/css';\nimport {diffJson, canonicalize} from './diff/json';\n\nimport {diffArrays} from './diff/array';\n\nimport {applyPatch, applyPatches} from './patch/apply';\nimport {parsePatch} from './patch/parse';\nimport {merge} from './patch/merge';\nimport {structuredPatch, createTwoFilesPatch, createPatch} from './patch/create';\n\nimport {convertChangesToDMP} from './convert/dmp';\nimport {convertChangesToXML} from './convert/xml';\n\nexport {\n  Diff,\n\n  diffChars,\n  diffWords,\n  diffWordsWithSpace,\n  diffLines,\n  diffTrimmedLines,\n  diffSentences,\n\n  diffCss,\n  diffJson,\n\n  diffArrays,\n\n  structuredPatch,\n  createTwoFilesPatch,\n  createPatch,\n  applyPatch,\n  applyPatches,\n  parsePatch,\n  merge,\n  convertChangesToDMP,\n  convertChangesToXML,\n  canonicalize\n};\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/diff/base.js":{"lineLengths":[25,13,0,46,13,3,26,0,23,18,0,18,27,0,25,45,29,7,27,85,36,0,40,25,19,5,0,27,20,0,26,21,32,37,14,20,14,21,7,63,0,0,42,42,59,59,34,34,23,40,21,17,20,76,0,74,0,67,48,20,36,31,10,91,0,0,31,95,22,33,14,31,9,0,49,52,74,0,22,72,49,9,0,60,71,0,36,50,45,19,81,80,57,0,0,73,43,67,16,80,0,28,67,9,0,143,0,69,106,16,77,44,9,7,0,19,89,86,19,0,0,19,24,32,60,0,36,43,30,11,0,34,19,11,14,11,12,43,35,0,18,21,9,7,5,4,0,27,0,25,69,49,0,67,71,31,43,30,21,24,8,12,23,17,21,24,9,5,4,0,27,0,25,87,34,34,33,39,24,0,117,15,15,20,5,0,22,32,26,9,5,0,29,18,4,0,27,0,25,40,34,50,12,101,5,4,0,27,0,25,44,17,0,44,21,27,7,5,0,15,4,0,27,0,25,40,17,4,0,27,0,25,38,27,4,0,27,0,25,30,26,3,2,0,79,23,39,17,17,0,55,45,0,29,48,70,47,47,67,11,43,14,87,7,0,47,0,29,34,7,12,85,113,89,63,0,63,47,64,39,7,5,78,83,44,0,0,51,0,158,62,21,3,0,20,1,0,26,10,24,40,4,1,22136,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/src/diff/base.js"],"names":["Diff","prototype","diff","oldString","newString","options","callback","self","done","value","setTimeout","undefined","castInput","removeEmpty","tokenize","newLen","length","oldLen","editLength","maxEditLength","bestPath","newPos","components","oldPos","extractCommon","join","count","execEditLength","diagonalPath","basePath","addPath","removePath","canAdd","canRemove","clonePath","pushComponent","buildValues","useLongestToken","exec","ret","added","removed","last","push","commonCount","equals","left","right","comparator","ignoreCase","toLowerCase","array","i","split","chars","componentPos","componentLen","component","slice","map","oldValue","tmp","lastComponent","pop","path"],"mappings":"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","sourcesContent":["export default function Diff() {}\n\nDiff.prototype = {\n  diff(oldString, newString, options = {}) {\n    let callback = options.callback;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    this.options = options;\n\n    let self = this;\n\n    function done(value) {\n      if (callback) {\n        setTimeout(function() { callback(undefined, value); }, 0);\n        return true;\n      } else {\n        return value;\n      }\n    }\n\n    // Allow subclasses to massage the input prior to running\n    oldString = this.castInput(oldString);\n    newString = this.castInput(newString);\n\n    oldString = this.removeEmpty(this.tokenize(oldString));\n    newString = this.removeEmpty(this.tokenize(newString));\n\n    let newLen = newString.length, oldLen = oldString.length;\n    let editLength = 1;\n    let maxEditLength = newLen + oldLen;\n    let bestPath = [{ newPos: -1, components: [] }];\n\n    // Seed editLength = 0, i.e. the content starts with the same values\n    let oldPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      // Identity per the equality and tokenizer\n      return done([{value: this.join(newString), count: newString.length}]);\n    }\n\n    // Main worker method. checks all permutations of a given edit length for acceptance.\n    function execEditLength() {\n      for (let diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        let basePath;\n        let addPath = bestPath[diagonalPath - 1],\n            removePath = bestPath[diagonalPath + 1],\n            oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        let canAdd = addPath && addPath.newPos + 1 < newLen,\n            canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        }\n\n        // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n        if (!canAdd || (canRemove && addPath.newPos < removePath.newPos)) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        oldPos = self.extractCommon(basePath, newString, oldString, diagonalPath);\n\n        // If we have hit the end of both strings, then we are done\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          return done(buildValues(self, basePath.components, newString, oldString, self.useLongestToken));\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    }\n\n    // Performs the length of edit iteration. Is a bit fugly as this has to support the\n    // sync and async mode which is never fun. Loops over execEditLength until a value\n    // is produced.\n    if (callback) {\n      (function exec() {\n        setTimeout(function() {\n          // This should not happen, but we want to be safe.\n          /* istanbul ignore next */\n          if (editLength > maxEditLength) {\n            return callback();\n          }\n\n          if (!execEditLength()) {\n            exec();\n          }\n        }, 0);\n      }());\n    } else {\n      while (editLength <= maxEditLength) {\n        let ret = execEditLength();\n        if (ret) {\n          return ret;\n        }\n      }\n    }\n  },\n\n  pushComponent(components, added, removed) {\n    let last = components[components.length - 1];\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {count: last.count + 1, added: added, removed: removed };\n    } else {\n      components.push({count: 1, added: added, removed: removed });\n    }\n  },\n  extractCommon(basePath, newString, oldString, diagonalPath) {\n    let newLen = newString.length,\n        oldLen = oldString.length,\n        newPos = basePath.newPos,\n        oldPos = newPos - diagonalPath,\n\n        commonCount = 0;\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({count: commonCount});\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n\n  equals(left, right) {\n    if (this.options.comparator) {\n      return this.options.comparator(left, right);\n    } else {\n      return left === right\n        || (this.options.ignoreCase && left.toLowerCase() === right.toLowerCase());\n    }\n  },\n  removeEmpty(array) {\n    let ret = [];\n    for (let i = 0; i < array.length; i++) {\n      if (array[i]) {\n        ret.push(array[i]);\n      }\n    }\n    return ret;\n  },\n  castInput(value) {\n    return value;\n  },\n  tokenize(value) {\n    return value.split('');\n  },\n  join(chars) {\n    return chars.join('');\n  }\n};\n\nfunction buildValues(diff, components, newString, oldString, useLongestToken) {\n  let componentPos = 0,\n      componentLen = components.length,\n      newPos = 0,\n      oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    let component = components[componentPos];\n    if (!component.removed) {\n      if (!component.added && useLongestToken) {\n        let value = newString.slice(newPos, newPos + component.count);\n        value = value.map(function(value, i) {\n          let oldValue = oldString[oldPos + i];\n          return oldValue.length > value.length ? oldValue : value;\n        });\n\n        component.value = diff.join(value);\n      } else {\n        component.value = diff.join(newString.slice(newPos, newPos + component.count));\n      }\n      newPos += component.count;\n\n      // Common case\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\n      oldPos += component.count;\n\n      // Reverse add and remove so removes are output first to match common convention\n      // The diffing algorithm is tied to add then remove output and this is the simplest\n      // route to get the desired output with minimal overhead.\n      if (componentPos && components[componentPos - 1].added) {\n        let tmp = components[componentPos - 1];\n        components[componentPos - 1] = components[componentPos];\n        components[componentPos] = tmp;\n      }\n    }\n  }\n\n  // Special case handle for when one terminal is ignored (i.e. whitespace).\n  // For this case we merge the terminal into the prior string and drop the change.\n  // This is only available for string mode.\n  let lastComponent = components[componentLen - 1];\n  if (componentLen > 1\n      && typeof lastComponent.value === 'string'\n      && (lastComponent.added || lastComponent.removed)\n      && diff.equals('', lastComponent.value)) {\n    components[componentLen - 2].value += lastComponent.value;\n    components.pop();\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return { newPos: path.newPos, components: path.components.slice(0) };\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/diff/character.js":{"lineLengths":[25,13,0,46,13,3,30,31,0,23,3,25,49,23,1,0,123,0,23,23,25,5,23,1,25,9,23,4,0,25,38,0,23,45,53,1,880,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/src/diff/character.js"],"names":["characterDiff","Diff","diffChars","oldStr","newStr","options","diff"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAEO,IAAMA,aAAa,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAtB;;;;;;AACA,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,OAAnC,EAA4C;AAAE,SAAOL,aAAa,CAACM,IAAd,CAAmBH,MAAnB,EAA2BC,MAA3B,EAAmCC,OAAnC,CAAP;AAAqD","sourcesContent":["import Diff from './base';\n\nexport const characterDiff = new Diff();\nexport function diffChars(oldStr, newStr, options) { return characterDiff.diff(oldStr, newStr, options); }\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/diff/word.js":{"lineLengths":[25,13,0,46,13,3,30,48,26,0,23,3,25,49,23,1,0,3,25,35,23,1,0,123,0,23,65,2,25,32,35,29,30,30,28,38,29,29,33,34,30,35,43,39,88,24,18,25,5,23,1,25,9,23,4,0,25,28,0,23,42,32,30,32,3,0,114,2,0,38,97,184,0,47,103,120,33,30,10,5,3,0,16,2,0,45,11,27,5,25,0,27,9,25,3,27,18,25,13,26,5,48,1,0,54,48,1,5824,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/src/diff/word.js"],"names":["extendedWordChars","reWhitespace","wordDiff","Diff","equals","left","right","options","ignoreCase","toLowerCase","ignoreWhitespace","test","tokenize","value","tokens","split","i","length","splice","diffWords","oldStr","newStr","generateOptions","diff","diffWordsWithSpace"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,iBAAiB,GAAG,+DAA1B;AAEA,IAAMC,YAAY,GAAG,IAArB;AAEO,IAAMC,QAAQ,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAjB;;;;;;AACPD,QAAQ,CAACE,MAAT,GAAkB,UAASC,IAAT,EAAeC,KAAf,EAAsB;AACtC,MAAI,KAAKC,OAAL,CAAaC,UAAjB,EAA6B;AAC3BH,IAAAA,IAAI,GAAGA,IAAI,CAACI,WAAL,EAAP;AACAH,IAAAA,KAAK,GAAGA,KAAK,CAACG,WAAN,EAAR;AACD;;AACD,SAAOJ,IAAI,KAAKC,KAAT,IAAmB,KAAKC,OAAL,CAAaG,gBAAb,IAAiC,CAACT,YAAY,CAACU,IAAb,CAAkBN,IAAlB,CAAlC,IAA6D,CAACJ,YAAY,CAACU,IAAb,CAAkBL,KAAlB,CAAxF;AACD,CAND;;AAOAJ,QAAQ,CAACU,QAAT,GAAoB,UAASC,KAAT,EAAgB;AAClC;AACA,MAAIC,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAY,iCAAZ,CAAb,CAFkC,CAIlC;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAAP,GAAgB,CAApC,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C;AACA,QAAI,CAACF,MAAM,CAACE,CAAC,GAAG,CAAL,CAAP,IAAkBF,MAAM,CAACE,CAAC,GAAG,CAAL,CAAxB,IACKhB,iBAAiB,CAACW,IAAlB,CAAuBG,MAAM,CAACE,CAAD,CAA7B,CADL,IAEKhB,iBAAiB,CAACW,IAAlB,CAAuBG,MAAM,CAACE,CAAC,GAAG,CAAL,CAA7B,CAFT,EAEgD;AAC9CF,MAAAA,MAAM,CAACE,CAAD,CAAN,IAAaF,MAAM,CAACE,CAAC,GAAG,CAAL,CAAnB;AACAF,MAAAA,MAAM,CAACI,MAAP,CAAcF,CAAC,GAAG,CAAlB,EAAqB,CAArB;AACAA,MAAAA,CAAC;AACF;AACF;;AAED,SAAOF,MAAP;AACD,CAjBD;;AAmBO,SAASK,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCd,OAAnC,EAA4C;AACjDA,EAAAA,OAAO;AAAG;AAAA;AAAA;;AAAAe;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAA;AAAA,GAAgBf,OAAhB,EAAyB;AAACG,IAAAA,gBAAgB,EAAE;AAAnB,GAAzB,CAAV;AACA,SAAOR,QAAQ,CAACqB,IAAT,CAAcH,MAAd,EAAsBC,MAAtB,EAA8Bd,OAA9B,CAAP;AACD;;AAEM,SAASiB,kBAAT,CAA4BJ,MAA5B,EAAoCC,MAApC,EAA4Cd,OAA5C,EAAqD;AAC1D,SAAOL,QAAQ,CAACqB,IAAT,CAAcH,MAAd,EAAsBC,MAAtB,EAA8Bd,OAA9B,CAAP;AACD","sourcesContent":["import Diff from './base';\nimport {generateOptions} from '../util/params';\n\n// Based on https://en.wikipedia.org/wiki/Latin_script_in_Unicode\n//\n// Ranges and exceptions:\n// Latin-1 Supplement, 0080–00FF\n//  - U+00D7  × Multiplication sign\n//  - U+00F7  ÷ Division sign\n// Latin Extended-A, 0100–017F\n// Latin Extended-B, 0180–024F\n// IPA Extensions, 0250–02AF\n// Spacing Modifier Letters, 02B0–02FF\n//  - U+02C7  ˇ &#711;  Caron\n//  - U+02D8  ˘ &#728;  Breve\n//  - U+02D9  ˙ &#729;  Dot Above\n//  - U+02DA  ˚ &#730;  Ring Above\n//  - U+02DB  ˛ &#731;  Ogonek\n//  - U+02DC  ˜ &#732;  Small Tilde\n//  - U+02DD  ˝ &#733;  Double Acute Accent\n// Latin Extended Additional, 1E00–1EFF\nconst extendedWordChars = /^[a-zA-Z\\u{C0}-\\u{FF}\\u{D8}-\\u{F6}\\u{F8}-\\u{2C6}\\u{2C8}-\\u{2D7}\\u{2DE}-\\u{2FF}\\u{1E00}-\\u{1EFF}]+$/u;\n\nconst reWhitespace = /\\S/;\n\nexport const wordDiff = new Diff();\nwordDiff.equals = function(left, right) {\n  if (this.options.ignoreCase) {\n    left = left.toLowerCase();\n    right = right.toLowerCase();\n  }\n  return left === right || (this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right));\n};\nwordDiff.tokenize = function(value) {\n  // All whitespace symbols except newline group into one token, each newline - in separate token\n  let tokens = value.split(/([^\\S\\r\\n]+|[()[\\]{}'\"\\r\\n]|\\b)/);\n\n  // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\n  for (let i = 0; i < tokens.length - 1; i++) {\n    // If we have an empty string in the next field and we have only word chars before and after, merge\n    if (!tokens[i + 1] && tokens[i + 2]\n          && extendedWordChars.test(tokens[i])\n          && extendedWordChars.test(tokens[i + 2])) {\n      tokens[i] += tokens[i + 2];\n      tokens.splice(i + 1, 2);\n      i--;\n    }\n  }\n\n  return tokens;\n};\n\nexport function diffWords(oldStr, newStr, options) {\n  options = generateOptions(options, {ignoreWhitespace: true});\n  return wordDiff.diff(oldStr, newStr, options);\n}\n\nexport function diffWordsWithSpace(oldStr, newStr, options) {\n  return wordDiff.diff(oldStr, newStr, options);\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/util/params.js":{"lineLengths":[25,13,0,46,13,3,42,0,23,45,38,32,23,31,32,41,39,7,5,3,0,18,1,1248,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/src/util/params.js"],"names":["generateOptions","options","defaults","callback","name","hasOwnProperty"],"mappings":";;;;;;;;;AAAO,SAASA,eAAT,CAAyBC,OAAzB,EAAkCC,QAAlC,EAA4C;AACjD,MAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;AACjCC,IAAAA,QAAQ,CAACC,QAAT,GAAoBF,OAApB;AACD,GAFD,MAEO,IAAIA,OAAJ,EAAa;AAClB,SAAK,IAAIG,IAAT,IAAiBH,OAAjB,EAA0B;AACxB;AACA,UAAIA,OAAO,CAACI,cAAR,CAAuBD,IAAvB,CAAJ,EAAkC;AAChCF,QAAAA,QAAQ,CAACE,IAAD,CAAR,GAAiBH,OAAO,CAACG,IAAD,CAAxB;AACD;AACF;AACF;;AACD,SAAOF,QAAP;AACD","sourcesContent":["export function generateOptions(options, defaults) {\n  if (typeof options === 'function') {\n    defaults.callback = options;\n  } else if (options) {\n    for (let name in options) {\n      /* istanbul ignore else */\n      if (options.hasOwnProperty(name)) {\n        defaults[name] = options[name];\n      }\n    }\n  }\n  return defaults;\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/diff/line.js":{"lineLengths":[25,13,0,46,13,3,30,44,26,0,23,3,25,49,23,1,0,3,25,35,23,1,0,123,0,23,18,25,5,23,1,25,9,23,4,0,25,28,0,23,38,20,129,0,55,27,63,0,0,53,35,0,48,44,12,42,27,7,0,26,5,3,0,18,2,0,46,49,1,0,53,15,27,5,25,0,27,9,25,3,27,18,25,14,26,5,48,1,3728,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/src/diff/line.js"],"names":["lineDiff","Diff","tokenize","value","retLines","linesAndNewlines","split","length","pop","i","line","options","newlineIsToken","ignoreWhitespace","trim","push","diffLines","oldStr","newStr","callback","diff","diffTrimmedLines","generateOptions"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;AAEO,IAAMA,QAAQ,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAjB;;;;;;AACPD,QAAQ,CAACE,QAAT,GAAoB,UAASC,KAAT,EAAgB;AAClC,MAAIC,QAAQ,GAAG,EAAf;AAAA,MACIC,gBAAgB,GAAGF,KAAK,CAACG,KAAN,CAAY,WAAZ,CADvB,CADkC,CAIlC;;AACA,MAAI,CAACD,gBAAgB,CAACA,gBAAgB,CAACE,MAAjB,GAA0B,CAA3B,CAArB,EAAoD;AAClDF,IAAAA,gBAAgB,CAACG,GAAjB;AACD,GAPiC,CASlC;;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,gBAAgB,CAACE,MAArC,EAA6CE,CAAC,EAA9C,EAAkD;AAChD,QAAIC,IAAI,GAAGL,gBAAgB,CAACI,CAAD,CAA3B;;AAEA,QAAIA,CAAC,GAAG,CAAJ,IAAS,CAAC,KAAKE,OAAL,CAAaC,cAA3B,EAA2C;AACzCR,MAAAA,QAAQ,CAACA,QAAQ,CAACG,MAAT,GAAkB,CAAnB,CAAR,IAAiCG,IAAjC;AACD,KAFD,MAEO;AACL,UAAI,KAAKC,OAAL,CAAaE,gBAAjB,EAAmC;AACjCH,QAAAA,IAAI,GAAGA,IAAI,CAACI,IAAL,EAAP;AACD;;AACDV,MAAAA,QAAQ,CAACW,IAAT,CAAcL,IAAd;AACD;AACF;;AAED,SAAON,QAAP;AACD,CAxBD;;AA0BO,SAASY,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,QAAnC,EAA6C;AAAE,SAAOnB,QAAQ,CAACoB,IAAT,CAAcH,MAAd,EAAsBC,MAAtB,EAA8BC,QAA9B,CAAP;AAAiD;;AAChG,SAASE,gBAAT,CAA0BJ,MAA1B,EAAkCC,MAAlC,EAA0CC,QAA1C,EAAoD;AACzD,MAAIR,OAAO;AAAG;AAAA;AAAA;;AAAAW;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAA;AAAA,GAAgBH,QAAhB,EAA0B;AAACN,IAAAA,gBAAgB,EAAE;AAAnB,GAA1B,CAAd;AACA,SAAOb,QAAQ,CAACoB,IAAT,CAAcH,MAAd,EAAsBC,MAAtB,EAA8BP,OAA9B,CAAP;AACD","sourcesContent":["import Diff from './base';\nimport {generateOptions} from '../util/params';\n\nexport const lineDiff = new Diff();\nlineDiff.tokenize = function(value) {\n  let retLines = [],\n      linesAndNewlines = value.split(/(\\n|\\r\\n)/);\n\n  // Ignore the final empty token that occurs if the string ends with a new line\n  if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n    linesAndNewlines.pop();\n  }\n\n  // Merge the content and line separators into single tokens\n  for (let i = 0; i < linesAndNewlines.length; i++) {\n    let line = linesAndNewlines[i];\n\n    if (i % 2 && !this.options.newlineIsToken) {\n      retLines[retLines.length - 1] += line;\n    } else {\n      if (this.options.ignoreWhitespace) {\n        line = line.trim();\n      }\n      retLines.push(line);\n    }\n  }\n\n  return retLines;\n};\n\nexport function diffLines(oldStr, newStr, callback) { return lineDiff.diff(oldStr, newStr, callback); }\nexport function diffTrimmedLines(oldStr, newStr, callback) {\n  let options = generateOptions(callback, {ignoreWhitespace: true});\n  return lineDiff.diff(oldStr, newStr, options);\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/diff/sentence.js":{"lineLengths":[25,13,0,46,13,3,38,30,0,23,3,25,49,23,1,0,123,0,23,22,25,5,23,1,25,9,23,4,0,25,36,0,23,42,46,2,0,50,53,1,1196,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/src/diff/sentence.js"],"names":["sentenceDiff","Diff","tokenize","value","split","diffSentences","oldStr","newStr","callback","diff"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAGO,IAAMA,YAAY,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAArB;;;;;;AACPD,YAAY,CAACE,QAAb,GAAwB,UAASC,KAAT,EAAgB;AACtC,SAAOA,KAAK,CAACC,KAAN,CAAY,uBAAZ,CAAP;AACD,CAFD;;AAIO,SAASC,aAAT,CAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,QAAvC,EAAiD;AAAE,SAAOR,YAAY,CAACS,IAAb,CAAkBH,MAAlB,EAA0BC,MAA1B,EAAkCC,QAAlC,CAAP;AAAqD","sourcesContent":["import Diff from './base';\n\n\nexport const sentenceDiff = new Diff();\nsentenceDiff.tokenize = function(value) {\n  return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\n};\n\nexport function diffSentences(oldStr, newStr, callback) { return sentenceDiff.diff(oldStr, newStr, callback); }\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/diff/css.js":{"lineLengths":[25,13,0,46,13,3,26,25,0,23,3,25,49,23,1,0,123,0,23,17,25,5,23,1,25,9,23,4,0,25,26,0,23,37,38,2,0,44,48,1,1128,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/src/diff/css.js"],"names":["cssDiff","Diff","tokenize","value","split","diffCss","oldStr","newStr","callback","diff"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAEO,IAAMA,OAAO,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAhB;;;;;;AACPD,OAAO,CAACE,QAAR,GAAmB,UAASC,KAAT,EAAgB;AACjC,SAAOA,KAAK,CAACC,KAAN,CAAY,eAAZ,CAAP;AACD,CAFD;;AAIO,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,MAAzB,EAAiCC,QAAjC,EAA2C;AAAE,SAAOR,OAAO,CAACS,IAAR,CAAaH,MAAb,EAAqBC,MAArB,EAA6BC,QAA7B,CAAP;AAAgD","sourcesContent":["import Diff from './base';\n\nexport const cssDiff = new Diff();\ncssDiff.tokenize = function(value) {\n  return value.split(/([{}:;,]|\\s+)/);\n};\n\nexport function diffCss(oldStr, newStr, callback) { return cssDiff.diff(oldStr, newStr, callback); }\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/diff/json.js":{"lineLengths":[25,13,0,46,13,3,28,36,26,0,23,3,25,49,23,1,0,3,25,25,23,1,0,123,0,378,0,23,56,18,25,5,23,1,25,9,23,97,105,0,25,28,0,23,32,19,25,5,23,1,25,8,23,10,0,39,27,21,25,15,64,62,76,27,3,12,29,57,6,28,137,2,0,42,10,29,9,27,5,29,13,27,106,4,2,0,44,48,98,95,0,0,68,22,44,0,17,29,3,0,8,0,41,27,33,5,3,0,23,0,63,20,45,44,0,41,89,5,0,16,27,28,3,0,26,23,3,0,6,27,10,25,38,20,26,44,0,24,13,0,23,32,37,30,7,5,0,22,0,48,27,96,5,0,16,27,10,27,3,0,26,1,8576,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/src/diff/json.js"],"names":["objectPrototypeToString","Object","prototype","toString","jsonDiff","Diff","useLongestToken","tokenize","lineDiff","castInput","value","options","undefinedReplacement","stringifyReplacer","k","v","JSON","stringify","canonicalize","equals","left","right","call","replace","diffJson","oldObj","newObj","diff","obj","stack","replacementStack","replacer","key","i","length","canonicalizedObj","push","Array","pop","toJSON","sortedKeys","hasOwnProperty","sort"],"mappings":"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","sourcesContent":["import Diff from './base';\nimport {lineDiff} from './line';\n\nconst objectPrototypeToString = Object.prototype.toString;\n\n\nexport const jsonDiff = new Diff();\n// Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n// dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\njsonDiff.useLongestToken = true;\n\njsonDiff.tokenize = lineDiff.tokenize;\njsonDiff.castInput = function(value) {\n  const {undefinedReplacement, stringifyReplacer = (k, v) => typeof v === 'undefined' ? undefinedReplacement : v} = this.options;\n\n  return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\n};\njsonDiff.equals = function(left, right) {\n  return Diff.prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\n};\n\nexport function diffJson(oldObj, newObj, options) { return jsonDiff.diff(oldObj, newObj, options); }\n\n// This function handles the presence of circular references by bailing out when encountering an\n// object that is already on the \"stack\" of items being processed. Accepts an optional replacer\nexport function canonicalize(obj, stack, replacementStack, replacer, key) {\n  stack = stack || [];\n  replacementStack = replacementStack || [];\n\n  if (replacer) {\n    obj = replacer(key, obj);\n  }\n\n  let i;\n\n  for (i = 0; i < stack.length; i += 1) {\n    if (stack[i] === obj) {\n      return replacementStack[i];\n    }\n  }\n\n  let canonicalizedObj;\n\n  if ('[object Array]' === objectPrototypeToString.call(obj)) {\n    stack.push(obj);\n    canonicalizedObj = new Array(obj.length);\n    replacementStack.push(canonicalizedObj);\n    for (i = 0; i < obj.length; i += 1) {\n      canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\n    }\n    stack.pop();\n    replacementStack.pop();\n    return canonicalizedObj;\n  }\n\n  if (obj && obj.toJSON) {\n    obj = obj.toJSON();\n  }\n\n  if (typeof obj === 'object' && obj !== null) {\n    stack.push(obj);\n    canonicalizedObj = {};\n    replacementStack.push(canonicalizedObj);\n    let sortedKeys = [],\n        key;\n    for (key in obj) {\n      /* istanbul ignore else */\n      if (obj.hasOwnProperty(key)) {\n        sortedKeys.push(key);\n      }\n    }\n    sortedKeys.sort();\n    for (i = 0; i < sortedKeys.length; i += 1) {\n      key = sortedKeys[i];\n      canonicalizedObj[key] = canonicalize(obj[key], stack, replacementStack, replacer, key);\n    }\n    stack.pop();\n    replacementStack.pop();\n  } else {\n    canonicalizedObj = obj;\n  }\n  return canonicalizedObj;\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/diff/array.js":{"lineLengths":[25,13,0,46,13,3,32,27,0,23,3,25,49,23,1,0,123,0,23,19,25,5,23,1,25,9,23,4,0,25,30,0,23,39,23,2,0,59,15,2,0,47,50,1,1376,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/src/diff/array.js"],"names":["arrayDiff","Diff","tokenize","value","slice","join","removeEmpty","diffArrays","oldArr","newArr","callback","diff"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAEO,IAAMA,SAAS,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAlB;;;;;;AACPD,SAAS,CAACE,QAAV,GAAqB,UAASC,KAAT,EAAgB;AACnC,SAAOA,KAAK,CAACC,KAAN,EAAP;AACD,CAFD;;AAGAJ,SAAS,CAACK,IAAV,GAAiBL,SAAS,CAACM,WAAV,GAAwB,UAASH,KAAT,EAAgB;AACvD,SAAOA,KAAP;AACD,CAFD;;AAIO,SAASI,UAAT,CAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,QAApC,EAA8C;AAAE,SAAOV,SAAS,CAACW,IAAV,CAAeH,MAAf,EAAuBC,MAAvB,EAA+BC,QAA/B,CAAP;AAAkD","sourcesContent":["import Diff from './base';\n\nexport const arrayDiff = new Diff();\narrayDiff.tokenize = function(value) {\n  return value.slice();\n};\narrayDiff.join = arrayDiff.removeEmpty = function(value) {\n  return value;\n};\n\nexport function diffArrays(oldArr, newArr, callback) { return arrayDiff.diff(oldArr, newArr, callback); }\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/patch/apply.js":{"lineLengths":[25,13,0,46,13,3,32,36,0,23,3,25,27,23,1,0,3,25,80,23,1,0,123,0,23,38,27,5,25,83,0,36,13,29,7,27,0,29,10,27,5,29,15,27,14,3,0,31,29,68,5,0,25,34,0,0,50,62,28,95,27,3,12,29,27,6,4,21,43,18,17,18,15,5,61,5,0,0,34,49,31,54,60,0,51,31,72,23,0,40,25,11,9,0,16,7,5,0,16,71,0,0,42,24,47,24,43,18,29,7,27,0,29,21,27,5,29,13,27,32,0,65,48,44,14,7,5,0,36,19,80,39,0,0,58,24,0,0,21,0,45,26,64,0,50,0,50,32,54,60,46,0,30,17,37,32,37,34,37,41,48,17,38,82,0,40,29,47,26,9,7,5,37,0,0,20,38,18,23,5,24,19,26,3,0,49,43,3,0,24,63,0,0,41,36,13,29,7,27,0,29,10,27,5,29,15,27,14,3,0,23,0,27,40,0,17,32,5,0,50,16,37,7,0,60,61,18,39,9,0,23,9,7,3,0,17,1,14196,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/src/patch/apply.js"],"names":["applyPatch","source","uniDiff","options","parsePatch","Array","isArray","length","Error","lines","split","delimiters","match","hunks","compareLine","lineNumber","line","operation","patchContent","errorCount","fuzzFactor","minLine","offset","removeEOFNL","addEOFNL","hunkFits","hunk","toPos","j","content","substr","i","maxLine","oldLines","localOffset","oldStart","iterator","distanceIterator","undefined","diffOffset","newLines","delimiter","linedelimiters","splice","previousOperation","pop","push","_k","join","applyPatches","currentIndex","processIndex","index","complete","loadFile","err","data","updatedContent","patched"],"mappings":"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","sourcesContent":["import {parsePatch} from './parse';\nimport distanceIterator from '../util/distance-iterator';\n\nexport function applyPatch(source, uniDiff, options = {}) {\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  if (Array.isArray(uniDiff)) {\n    if (uniDiff.length > 1) {\n      throw new Error('applyPatch only works with a single input.');\n    }\n\n    uniDiff = uniDiff[0];\n  }\n\n  // Apply the diff to the input\n  let lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      hunks = uniDiff.hunks,\n\n      compareLine = options.compareLine || ((lineNumber, line, operation, patchContent) => line === patchContent),\n      errorCount = 0,\n      fuzzFactor = options.fuzzFactor || 0,\n      minLine = 0,\n      offset = 0,\n\n      removeEOFNL,\n      addEOFNL;\n\n  /**\n   * Checks if the hunk exactly fits on the provided location\n   */\n  function hunkFits(hunk, toPos) {\n    for (let j = 0; j < hunk.lines.length; j++) {\n      let line = hunk.lines[j],\n          operation = (line.length > 0 ? line[0] : ' '),\n          content = (line.length > 0 ? line.substr(1) : line);\n\n      if (operation === ' ' || operation === '-') {\n        // Context sanity check\n        if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\n          errorCount++;\n\n          if (errorCount > fuzzFactor) {\n            return false;\n          }\n        }\n        toPos++;\n      }\n    }\n\n    return true;\n  }\n\n  // Search best fit offsets for each hunk based on the previous ones\n  for (let i = 0; i < hunks.length; i++) {\n    let hunk = hunks[i],\n        maxLine = lines.length - hunk.oldLines,\n        localOffset = 0,\n        toPos = offset + hunk.oldStart - 1;\n\n    let iterator = distanceIterator(toPos, minLine, maxLine);\n\n    for (; localOffset !== undefined; localOffset = iterator()) {\n      if (hunkFits(hunk, toPos + localOffset)) {\n        hunk.offset = offset += localOffset;\n        break;\n      }\n    }\n\n    if (localOffset === undefined) {\n      return false;\n    }\n\n    // Set lower text limit to end of the current hunk, so next ones don't try\n    // to fit over already patched text\n    minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\n  }\n\n  // Apply patch hunks\n  let diffOffset = 0;\n  for (let i = 0; i < hunks.length; i++) {\n    let hunk = hunks[i],\n        toPos = hunk.oldStart + hunk.offset + diffOffset - 1;\n    diffOffset += hunk.newLines - hunk.oldLines;\n\n    for (let j = 0; j < hunk.lines.length; j++) {\n      let line = hunk.lines[j],\n          operation = (line.length > 0 ? line[0] : ' '),\n          content = (line.length > 0 ? line.substr(1) : line),\n          delimiter = hunk.linedelimiters[j];\n\n      if (operation === ' ') {\n        toPos++;\n      } else if (operation === '-') {\n        lines.splice(toPos, 1);\n        delimiters.splice(toPos, 1);\n      /* istanbul ignore else */\n      } else if (operation === '+') {\n        lines.splice(toPos, 0, content);\n        delimiters.splice(toPos, 0, delimiter);\n        toPos++;\n      } else if (operation === '\\\\') {\n        let previousOperation = hunk.lines[j - 1] ? hunk.lines[j - 1][0] : null;\n        if (previousOperation === '+') {\n          removeEOFNL = true;\n        } else if (previousOperation === '-') {\n          addEOFNL = true;\n        }\n      }\n    }\n  }\n\n  // Handle EOFNL insertion/removal\n  if (removeEOFNL) {\n    while (!lines[lines.length - 1]) {\n      lines.pop();\n      delimiters.pop();\n    }\n  } else if (addEOFNL) {\n    lines.push('');\n    delimiters.push('\\n');\n  }\n  for (let _k = 0; _k < lines.length - 1; _k++) {\n    lines[_k] = lines[_k] + delimiters[_k];\n  }\n  return lines.join('');\n}\n\n// Wrapper that supports multiple file patches via callbacks.\nexport function applyPatches(uniDiff, options) {\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  let currentIndex = 0;\n  function processIndex() {\n    let index = uniDiff[currentIndex++];\n    if (!index) {\n      return options.complete();\n    }\n\n    options.loadFile(index, function(err, data) {\n      if (err) {\n        return options.complete(err);\n      }\n\n      let updatedContent = applyPatch(data, index, options);\n      options.patched(index, updatedContent, function(err) {\n        if (err) {\n          return options.complete(err);\n        }\n\n        processIndex();\n      });\n    });\n  }\n  processIndex();\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/patch/parse.js":{"lineLengths":[25,13,0,46,13,3,32,0,23,30,27,5,25,83,53,63,16,12,0,25,19,44,0,32,76,0,47,14,21,0,0,73,0,19,32,7,0,10,80,79,0,0,27,42,0,21,0,32,29,0,57,14,37,38,43,58,81,14,12,7,5,66,18,0,0,35,62,0,21,62,46,52,0,36,59,7,0,47,59,10,5,20,53,0,0,24,29,39,90,16,32,76,32,76,16,24,60,59,64,0,30,25,5,0,30,25,5,0,21,24,0,37,84,88,149,14,7,0,94,0,94,36,56,0,32,21,39,24,39,21,24,9,14,14,7,42,0,0,43,24,5,0,46,24,41,0,0,25,39,101,7,0,42,103,7,5,0,16,3,0,30,17,3,0,14,1,13176,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/src/patch/parse.js"],"names":["parsePatch","uniDiff","options","diffstr","split","delimiters","match","list","i","parseIndex","index","push","length","line","test","header","exec","parseFileHeader","hunks","parseHunk","strict","Error","JSON","stringify","fileHeader","keyPrefix","data","fileName","replace","substr","trim","chunkHeaderIndex","chunkHeaderLine","chunkHeader","hunk","oldStart","oldLines","newStart","newLines","lines","linedelimiters","addCount","removeCount","indexOf","operation"],"mappings":"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","sourcesContent":["export function parsePatch(uniDiff, options = {}) {\n  let diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      list = [],\n      i = 0;\n\n  function parseIndex() {\n    let index = {};\n    list.push(index);\n\n    // Parse diff metadata\n    while (i < diffstr.length) {\n      let line = diffstr[i];\n\n      // File header found, end parsing diff metadata\n      if ((/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/).test(line)) {\n        break;\n      }\n\n      // Diff index\n      let header = (/^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/).exec(line);\n      if (header) {\n        index.index = header[1];\n      }\n\n      i++;\n    }\n\n    // Parse file headers if they are defined. Unified diff requires them, but\n    // there's no technical issues to have an isolated hunk without file header\n    parseFileHeader(index);\n    parseFileHeader(index);\n\n    // Parse hunks\n    index.hunks = [];\n\n    while (i < diffstr.length) {\n      let line = diffstr[i];\n\n      if ((/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/).test(line)) {\n        break;\n      } else if ((/^@@/).test(line)) {\n        index.hunks.push(parseHunk());\n      } else if (line && options.strict) {\n        // Ignore unexpected content unless in strict mode\n        throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(line));\n      } else {\n        i++;\n      }\n    }\n  }\n\n  // Parses the --- and +++ headers, if none are found, no lines\n  // are consumed.\n  function parseFileHeader(index) {\n    const fileHeader = (/^(---|\\+\\+\\+)\\s+(.*)$/).exec(diffstr[i]);\n    if (fileHeader) {\n      let keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n      const data = fileHeader[2].split('\\t', 2);\n      let fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\n      if ((/^\".*\"$/).test(fileName)) {\n        fileName = fileName.substr(1, fileName.length - 2);\n      }\n      index[keyPrefix + 'FileName'] = fileName;\n      index[keyPrefix + 'Header'] = (data[1] || '').trim();\n\n      i++;\n    }\n  }\n\n  // Parses a hunk\n  // This assumes that we are at the start of a hunk.\n  function parseHunk() {\n    let chunkHeaderIndex = i,\n        chunkHeaderLine = diffstr[i++],\n        chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\n\n    let hunk = {\n      oldStart: +chunkHeader[1],\n      oldLines: typeof chunkHeader[2] === 'undefined' ? 1 : +chunkHeader[2],\n      newStart: +chunkHeader[3],\n      newLines: typeof chunkHeader[4] === 'undefined' ? 1 : +chunkHeader[4],\n      lines: [],\n      linedelimiters: []\n    };\n\n    // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n    if (hunk.oldLines === 0) {\n      hunk.oldStart += 1;\n    }\n    if (hunk.newLines === 0) {\n      hunk.newStart += 1;\n    }\n\n    let addCount = 0,\n        removeCount = 0;\n    for (; i < diffstr.length; i++) {\n      // Lines starting with '---' could be mistaken for the \"remove line\" operation\n      // But they could be the header for the next file. Therefore prune such cases out.\n      if (diffstr[i].indexOf('--- ') === 0\n            && (i + 2 < diffstr.length)\n            && diffstr[i + 1].indexOf('+++ ') === 0\n            && diffstr[i + 2].indexOf('@@') === 0) {\n          break;\n      }\n      let operation = (diffstr[i].length == 0 && i != (diffstr.length - 1)) ? ' ' : diffstr[i][0];\n\n      if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\n        hunk.lines.push(diffstr[i]);\n        hunk.linedelimiters.push(delimiters[i] || '\\n');\n\n        if (operation === '+') {\n          addCount++;\n        } else if (operation === '-') {\n          removeCount++;\n        } else if (operation === ' ') {\n          addCount++;\n          removeCount++;\n        }\n      } else {\n        break;\n      }\n    }\n\n    // Handle the empty block count case\n    if (!addCount && hunk.newLines === 1) {\n      hunk.newLines = 0;\n    }\n    if (!removeCount && hunk.oldLines === 1) {\n      hunk.oldLines = 0;\n    }\n\n    // Perform optional sanity checking\n    if (options.strict) {\n      if (addCount !== hunk.newLines) {\n        throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n      if (removeCount !== hunk.oldLines) {\n        throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n    }\n\n    return hunk;\n  }\n\n  while (i < diffstr.length) {\n    parseIndex();\n  }\n\n  return list;\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/util/distance-iterator.js":{"lineLengths":[25,13,0,46,13,3,30,0,23,63,65,47,8,25,8,23,27,25,32,31,22,30,43,30,22,14,28,79,71,0,0,43,27,7,0,30,5,0,29,30,27,82,31,0,0,43,30,7,0,31,24,80,51,0,4,1,3156,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/src/util/distance-iterator.js"],"names":["start","minLine","maxLine","wantForward","backwardExhausted","forwardExhausted","localOffset","iterator"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACe;AAAA;AAAA;AAAA;AAAA,CAASA,KAAT,EAAgBC,OAAhB,EAAyBC,OAAzB,EAAkC;AAC/C,MAAIC,WAAW,GAAG,IAAlB;AAAA,MACIC,iBAAiB,GAAG,KADxB;AAAA,MAEIC,gBAAgB,GAAG,KAFvB;AAAA,MAGIC,WAAW,GAAG,CAHlB;AAKA,SAAO,SAASC,QAAT,GAAoB;AACzB,QAAIJ,WAAW,IAAI,CAACE,gBAApB,EAAsC;AACpC,UAAID,iBAAJ,EAAuB;AACrBE,QAAAA,WAAW;AACZ,OAFD,MAEO;AACLH,QAAAA,WAAW,GAAG,KAAd;AACD,OALmC,CAOpC;AACA;;;AACA,UAAIH,KAAK,GAAGM,WAAR,IAAuBJ,OAA3B,EAAoC;AAClC,eAAOI,WAAP;AACD;;AAEDD,MAAAA,gBAAgB,GAAG,IAAnB;AACD;;AAED,QAAI,CAACD,iBAAL,EAAwB;AACtB,UAAI,CAACC,gBAAL,EAAuB;AACrBF,QAAAA,WAAW,GAAG,IAAd;AACD,OAHqB,CAKtB;AACA;;;AACA,UAAIF,OAAO,IAAID,KAAK,GAAGM,WAAvB,EAAoC;AAClC,eAAO,CAACA,WAAW,EAAnB;AACD;;AAEDF,MAAAA,iBAAiB,GAAG,IAApB;AACA,aAAOG,QAAQ,EAAf;AACD,KA9BwB,CAgCzB;AACA;;AACD,GAlCD;AAmCD","sourcesContent":["// Iterator that traverses in the range of [min, max], stepping\n// by distance from a given start position. I.e. for [0, 4], with\n// start of 2, this will iterate 2, 3, 1, 4, 0.\nexport default function(start, minLine, maxLine) {\n  let wantForward = true,\n      backwardExhausted = false,\n      forwardExhausted = false,\n      localOffset = 1;\n\n  return function iterator() {\n    if (wantForward && !forwardExhausted) {\n      if (backwardExhausted) {\n        localOffset++;\n      } else {\n        wantForward = false;\n      }\n\n      // Check if trying to fit beyond text length, and if not, check it fits\n      // after offset location (or desired location on first iteration)\n      if (start + localOffset <= maxLine) {\n        return localOffset;\n      }\n\n      forwardExhausted = true;\n    }\n\n    if (!backwardExhausted) {\n      if (!forwardExhausted) {\n        wantForward = true;\n      }\n\n      // Check if trying to fit before text beginning, and if not, check it fits\n      // before offset location\n      if (minLine <= start - localOffset) {\n        return -localOffset++;\n      }\n\n      backwardExhausted = true;\n      return iterator();\n    }\n\n    // We tried to fit hunk before text beginning and beyond text length, then\n    // hunk can't fit on the text. Return undefined\n  };\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/patch/merge.js":{"lineLengths":[25,13,0,46,13,3,38,22,0,23,3,25,29,23,1,0,3,25,27,23,1,0,3,25,33,23,1,0,179,0,190,0,416,0,130,0,91,0,183,0,23,30,27,28,25,34,47,47,0,31,29,10,25,3,0,31,29,10,25,3,1,0,36,31,35,98,83,34,0,35,43,3,0,47,33,87,63,63,57,57,42,51,41,41,37,37,12,38,79,79,73,73,5,3,0,17,20,22,21,23,0,78,48,24,6,54,24,6,0,49,65,57,18,66,56,65,61,20,68,12,38,24,73,20,101,20,17,8,115,20,18,33,5,3,0,13,1,0,33,34,55,14,33,11,31,0,33,14,31,9,33,19,31,18,8,5,0,16,74,5,0,12,31,9,29,0,31,13,29,7,31,22,29,41,6,3,0,15,1,0,33,70,1,0,43,24,16,10,26,12,17,20,6,3,1,0,34,90,1,0,34,10,28,28,37,28,21,4,1,0,75,91,74,14,23,21,12,4,15,24,22,12,34,0,35,118,0,78,45,48,0,117,26,38,67,31,22,0,29,22,0,31,0,29,0,31,20,29,29,31,17,29,7,31,25,29,28,67,31,23,0,29,24,0,31,0,29,0,31,21,29,29,31,18,29,7,31,25,29,29,67,31,33,67,32,39,46,25,35,19,20,12,25,64,5,46,0,0,29,30,22,1,0,42,38,42,0,58,72,8,29,7,27,0,29,10,27,5,29,20,27,112,31,23,0,29,0,31,0,29,0,31,21,29,29,31,18,29,7,31,25,29,18,0,13,15,29,7,27,0,29,10,27,5,29,20,27,114,31,23,0,29,0,31,0,29,0,31,21,29,29,31,18,29,7,31,25,29,21,0,13,5,13,27,5,25,0,27,8,25,3,27,13,25,30,29,21,0,27,0,29,0,27,0,29,19,27,27,29,16,27,5,29,23,27,16,0,11,3,0,42,1,0,43,38,54,0,28,29,21,0,27,0,29,0,27,0,29,19,27,27,29,16,27,5,29,23,27,26,10,85,3,1,0,38,23,19,19,15,17,5,1,0,45,78,44,26,20,3,1,0,39,46,44,26,3,1,0,31,15,46,0,44,145,0,47,22,5,0,32,21,20,12,12,5,3,0,13,1,0,46,19,18,21,29,25,0,80,42,85,0,27,12,5,0,57,23,86,50,0,28,24,0,33,29,44,7,5,0,47,27,20,12,24,5,3,0,70,22,3,0,19,19,3,0,44,44,3,0,10,19,20,4,1,0,30,49,37,11,1,0,58,35,82,0,63,19,5,3,0,23,14,1,0,37,19,19,33,35,51,56,0,35,55,39,16,31,9,7,0,35,55,39,16,31,9,7,12,75,19,7,0,75,19,7,5,5,10,23,22,4,1,34588,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/src/patch/merge.js"],"names":["calcLineCount","hunk","calcOldNewLineCount","lines","oldLines","newLines","undefined","merge","mine","theirs","base","loadPatch","ret","index","newFileName","fileNameChanged","oldFileName","oldHeader","newHeader","selectField","hunks","mineIndex","theirsIndex","mineOffset","theirsOffset","length","mineCurrent","oldStart","Infinity","theirsCurrent","hunkBefore","push","cloneHunk","mergedHunk","Math","min","newStart","mergeLines","param","test","parsePatch","Error","structuredPatch","patch","conflict","check","offset","mineLines","theirOffset","theirLines","their","insertLeading","theirCurrent","mutualChange","collectChange","removal","insertTrailing","myChanges","theirChanges","allRemoves","arrayStartsWith","skipRemoveSuperset","arrayEqual","swap","collectContext","merged","insert","line","state","operation","matchChanges","changes","matchIndex","contextChanges","conflicted","change","match","substr","reduce","prev","removeChanges","delta","i","changeContent","forEach","myCount","theirCount"],"mappings":"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","sourcesContent":["import {structuredPatch} from './create';\nimport {parsePatch} from './parse';\n\nimport {arrayEqual, arrayStartsWith} from '../util/array';\n\nexport function calcLineCount(hunk) {\n  const {oldLines, newLines} = calcOldNewLineCount(hunk.lines);\n\n  if (oldLines !== undefined) {\n    hunk.oldLines = oldLines;\n  } else {\n    delete hunk.oldLines;\n  }\n\n  if (newLines !== undefined) {\n    hunk.newLines = newLines;\n  } else {\n    delete hunk.newLines;\n  }\n}\n\nexport function merge(mine, theirs, base) {\n  mine = loadPatch(mine, base);\n  theirs = loadPatch(theirs, base);\n\n  let ret = {};\n\n  // For index we just let it pass through as it doesn't have any necessary meaning.\n  // Leaving sanity checks on this to the API consumer that may know more about the\n  // meaning in their own context.\n  if (mine.index || theirs.index) {\n    ret.index = mine.index || theirs.index;\n  }\n\n  if (mine.newFileName || theirs.newFileName) {\n    if (!fileNameChanged(mine)) {\n      // No header or no change in ours, use theirs (and ours if theirs does not exist)\n      ret.oldFileName = theirs.oldFileName || mine.oldFileName;\n      ret.newFileName = theirs.newFileName || mine.newFileName;\n      ret.oldHeader = theirs.oldHeader || mine.oldHeader;\n      ret.newHeader = theirs.newHeader || mine.newHeader;\n    } else if (!fileNameChanged(theirs)) {\n      // No header or no change in theirs, use ours\n      ret.oldFileName = mine.oldFileName;\n      ret.newFileName = mine.newFileName;\n      ret.oldHeader = mine.oldHeader;\n      ret.newHeader = mine.newHeader;\n    } else {\n      // Both changed... figure it out\n      ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\n      ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\n      ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\n      ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\n    }\n  }\n\n  ret.hunks = [];\n\n  let mineIndex = 0,\n      theirsIndex = 0,\n      mineOffset = 0,\n      theirsOffset = 0;\n\n  while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\n    let mineCurrent = mine.hunks[mineIndex] || {oldStart: Infinity},\n        theirsCurrent = theirs.hunks[theirsIndex] || {oldStart: Infinity};\n\n    if (hunkBefore(mineCurrent, theirsCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\n      mineIndex++;\n      theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\n    } else if (hunkBefore(theirsCurrent, mineCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\n      theirsIndex++;\n      mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\n    } else {\n      // Overlap, merge as best we can\n      let mergedHunk = {\n        oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\n        oldLines: 0,\n        newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\n        newLines: 0,\n        lines: []\n      };\n      mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\n      theirsIndex++;\n      mineIndex++;\n\n      ret.hunks.push(mergedHunk);\n    }\n  }\n\n  return ret;\n}\n\nfunction loadPatch(param, base) {\n  if (typeof param === 'string') {\n    if ((/^@@/m).test(param) || ((/^Index:/m).test(param))) {\n      return parsePatch(param)[0];\n    }\n\n    if (!base) {\n      throw new Error('Must provide a base reference or pass in a patch');\n    }\n    return structuredPatch(undefined, undefined, base, param);\n  }\n\n  return param;\n}\n\nfunction fileNameChanged(patch) {\n  return patch.newFileName && patch.newFileName !== patch.oldFileName;\n}\n\nfunction selectField(index, mine, theirs) {\n  if (mine === theirs) {\n    return mine;\n  } else {\n    index.conflict = true;\n    return {mine, theirs};\n  }\n}\n\nfunction hunkBefore(test, check) {\n  return test.oldStart < check.oldStart\n    && (test.oldStart + test.oldLines) < check.oldStart;\n}\n\nfunction cloneHunk(hunk, offset) {\n  return {\n    oldStart: hunk.oldStart, oldLines: hunk.oldLines,\n    newStart: hunk.newStart + offset, newLines: hunk.newLines,\n    lines: hunk.lines\n  };\n}\n\nfunction mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\n  // This will generally result in a conflicted hunk, but there are cases where the context\n  // is the only overlap where we can successfully merge the content here.\n  let mine = {offset: mineOffset, lines: mineLines, index: 0},\n      their = {offset: theirOffset, lines: theirLines, index: 0};\n\n  // Handle any leading content\n  insertLeading(hunk, mine, their);\n  insertLeading(hunk, their, mine);\n\n  // Now in the overlap content. Scan through and select the best changes from each.\n  while (mine.index < mine.lines.length && their.index < their.lines.length) {\n    let mineCurrent = mine.lines[mine.index],\n        theirCurrent = their.lines[their.index];\n\n    if ((mineCurrent[0] === '-' || mineCurrent[0] === '+')\n        && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\n      // Both modified ...\n      mutualChange(hunk, mine, their);\n    } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\n      // Mine inserted\n      hunk.lines.push(... collectChange(mine));\n    } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\n      // Theirs inserted\n      hunk.lines.push(... collectChange(their));\n    } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\n      // Mine removed or edited\n      removal(hunk, mine, their);\n    } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\n      // Their removed or edited\n      removal(hunk, their, mine, true);\n    } else if (mineCurrent === theirCurrent) {\n      // Context identity\n      hunk.lines.push(mineCurrent);\n      mine.index++;\n      their.index++;\n    } else {\n      // Context mismatch\n      conflict(hunk, collectChange(mine), collectChange(their));\n    }\n  }\n\n  // Now push anything that may be remaining\n  insertTrailing(hunk, mine);\n  insertTrailing(hunk, their);\n\n  calcLineCount(hunk);\n}\n\nfunction mutualChange(hunk, mine, their) {\n  let myChanges = collectChange(mine),\n      theirChanges = collectChange(their);\n\n  if (allRemoves(myChanges) && allRemoves(theirChanges)) {\n    // Special case for remove changes that are supersets of one another\n    if (arrayStartsWith(myChanges, theirChanges)\n        && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\n      hunk.lines.push(... myChanges);\n      return;\n    } else if (arrayStartsWith(theirChanges, myChanges)\n        && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\n      hunk.lines.push(... theirChanges);\n      return;\n    }\n  } else if (arrayEqual(myChanges, theirChanges)) {\n    hunk.lines.push(... myChanges);\n    return;\n  }\n\n  conflict(hunk, myChanges, theirChanges);\n}\n\nfunction removal(hunk, mine, their, swap) {\n  let myChanges = collectChange(mine),\n      theirChanges = collectContext(their, myChanges);\n  if (theirChanges.merged) {\n    hunk.lines.push(... theirChanges.merged);\n  } else {\n    conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\n  }\n}\n\nfunction conflict(hunk, mine, their) {\n  hunk.conflict = true;\n  hunk.lines.push({\n    conflict: true,\n    mine: mine,\n    theirs: their\n  });\n}\n\nfunction insertLeading(hunk, insert, their) {\n  while (insert.offset < their.offset && insert.index < insert.lines.length) {\n    let line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n    insert.offset++;\n  }\n}\nfunction insertTrailing(hunk, insert) {\n  while (insert.index < insert.lines.length) {\n    let line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n  }\n}\n\nfunction collectChange(state) {\n  let ret = [],\n      operation = state.lines[state.index][0];\n  while (state.index < state.lines.length) {\n    let line = state.lines[state.index];\n\n    // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\n    if (operation === '-' && line[0] === '+') {\n      operation = '+';\n    }\n\n    if (operation === line[0]) {\n      ret.push(line);\n      state.index++;\n    } else {\n      break;\n    }\n  }\n\n  return ret;\n}\nfunction collectContext(state, matchChanges) {\n  let changes = [],\n      merged = [],\n      matchIndex = 0,\n      contextChanges = false,\n      conflicted = false;\n  while (matchIndex < matchChanges.length\n        && state.index < state.lines.length) {\n    let change = state.lines[state.index],\n        match = matchChanges[matchIndex];\n\n    // Once we've hit our add, then we are done\n    if (match[0] === '+') {\n      break;\n    }\n\n    contextChanges = contextChanges || change[0] !== ' ';\n\n    merged.push(match);\n    matchIndex++;\n\n    // Consume any additions in the other block as a conflict to attempt\n    // to pull in the remaining context after this\n    if (change[0] === '+') {\n      conflicted = true;\n\n      while (change[0] === '+') {\n        changes.push(change);\n        change = state.lines[++state.index];\n      }\n    }\n\n    if (match.substr(1) === change.substr(1)) {\n      changes.push(change);\n      state.index++;\n    } else {\n      conflicted = true;\n    }\n  }\n\n  if ((matchChanges[matchIndex] || '')[0] === '+'\n      && contextChanges) {\n    conflicted = true;\n  }\n\n  if (conflicted) {\n    return changes;\n  }\n\n  while (matchIndex < matchChanges.length) {\n    merged.push(matchChanges[matchIndex++]);\n  }\n\n  return {\n    merged,\n    changes\n  };\n}\n\nfunction allRemoves(changes) {\n  return changes.reduce(function(prev, change) {\n    return prev && change[0] === '-';\n  }, true);\n}\nfunction skipRemoveSuperset(state, removeChanges, delta) {\n  for (let i = 0; i < delta; i++) {\n    let changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\n    if (state.lines[state.index + i] !== ' ' + changeContent) {\n      return false;\n    }\n  }\n\n  state.index += delta;\n  return true;\n}\n\nfunction calcOldNewLineCount(lines) {\n  let oldLines = 0;\n  let newLines = 0;\n\n  lines.forEach(function(line) {\n    if (typeof line !== 'string') {\n      let myCount = calcOldNewLineCount(line.mine);\n      let theirCount = calcOldNewLineCount(line.theirs);\n\n      if (oldLines !== undefined) {\n        if (myCount.oldLines === theirCount.oldLines) {\n          oldLines += myCount.oldLines;\n        } else {\n          oldLines = undefined;\n        }\n      }\n\n      if (newLines !== undefined) {\n        if (myCount.newLines === theirCount.newLines) {\n          newLines += myCount.newLines;\n        } else {\n          newLines = undefined;\n        }\n      }\n    } else {\n      if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\n        newLines++;\n      }\n      if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\n        oldLines++;\n      }\n    }\n  });\n\n  return {oldLines, newLines};\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/patch/create.js":{"lineLengths":[25,13,0,46,13,3,42,34,50,34,0,23,3,25,31,23,1,0,179,0,190,0,416,0,130,0,91,0,183,0,23,99,17,17,3,0,47,24,3,0,12,27,5,25,0,27,7,25,3,27,12,25,28,13,14,13,53,0,32,39,25,7,3,0,17,24,24,20,18,18,0,27,29,25,6,26,78,26,0,43,31,20,0,29,53,27,31,32,32,0,19,97,43,43,9,29,0,0,31,0,29,0,31,18,29,27,31,15,29,7,31,25,29,34,51,46,0,0,26,32,14,32,7,12,52,26,76,73,35,25,0,33,24,0,35,0,33,0,35,23,33,31,35,20,33,11,35,29,33,32,16,35,25,0,33,37,68,0,35,0,33,0,35,23,33,31,35,20,33,11,35,29,33,54,0,22,36,60,36,60,27,12,0,72,38,51,51,86,0,72,99,80,80,13,0,70,60,13,11,0,27,28,28,24,9,7,0,30,30,5,4,0,41,29,10,27,7,3,0,10,29,29,25,25,16,4,1,0,28,15,0,45,43,3,0,82,109,109,0,47,83,59,64,0,30,25,5,0,30,25,5,0,112,36,3,0,31,1,0,103,111,1,0,79,96,1,15220,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/src/patch/create.js"],"names":["structuredPatch","oldFileName","newFileName","oldStr","newStr","oldHeader","newHeader","options","context","diff","diffLines","push","value","lines","contextLines","map","entry","hunks","oldRangeStart","newRangeStart","curRange","oldLine","newLine","i","current","replace","split","added","removed","prev","slice","length","contextSize","Math","min","hunk","oldStart","oldLines","newStart","newLines","oldEOFNewline","test","newEOFNewline","noNlBeforeAdds","splice","formatPatch","ret","apply","join","createTwoFilesPatch","createPatch","fileName"],"mappings":"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","sourcesContent":["import {diffLines} from '../diff/line';\n\nexport function structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  if (!options) {\n    options = {};\n  }\n  if (typeof options.context === 'undefined') {\n    options.context = 4;\n  }\n\n  const diff = diffLines(oldStr, newStr, options);\n  diff.push({value: '', lines: []}); // Append an empty value to make cleanup easier\n\n  function contextLines(lines) {\n    return lines.map(function(entry) { return ' ' + entry; });\n  }\n\n  let hunks = [];\n  let oldRangeStart = 0, newRangeStart = 0, curRange = [],\n      oldLine = 1, newLine = 1;\n  for (let i = 0; i < diff.length; i++) {\n    const current = diff[i],\n          lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n    current.lines = lines;\n\n    if (current.added || current.removed) {\n      // If we have previous context, start with that\n      if (!oldRangeStart) {\n        const prev = diff[i - 1];\n        oldRangeStart = oldLine;\n        newRangeStart = newLine;\n\n        if (prev) {\n          curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\n          oldRangeStart -= curRange.length;\n          newRangeStart -= curRange.length;\n        }\n      }\n\n      // Output our changes\n      curRange.push(... lines.map(function(entry) {\n        return (current.added ? '+' : '-') + entry;\n      }));\n\n      // Track the updated file position\n      if (current.added) {\n        newLine += lines.length;\n      } else {\n        oldLine += lines.length;\n      }\n    } else {\n      // Identical context lines. Track line changes\n      if (oldRangeStart) {\n        // Close out any changes that have been output (or join overlapping)\n        if (lines.length <= options.context * 2 && i < diff.length - 2) {\n          // Overlapping\n          curRange.push(... contextLines(lines));\n        } else {\n          // end the range and output\n          let contextSize = Math.min(lines.length, options.context);\n          curRange.push(... contextLines(lines.slice(0, contextSize)));\n\n          let hunk = {\n            oldStart: oldRangeStart,\n            oldLines: (oldLine - oldRangeStart + contextSize),\n            newStart: newRangeStart,\n            newLines: (newLine - newRangeStart + contextSize),\n            lines: curRange\n          };\n          if (i >= diff.length - 2 && lines.length <= options.context) {\n            // EOF is inside this hunk\n            let oldEOFNewline = ((/\\n$/).test(oldStr));\n            let newEOFNewline = ((/\\n$/).test(newStr));\n            let noNlBeforeAdds = lines.length == 0 && curRange.length > hunk.oldLines;\n            if (!oldEOFNewline && noNlBeforeAdds && oldStr.length > 0) {\n              // special case: old has no eol and no trailing context; no-nl can end up before adds\n              // however, if the old file is empty, do not output the no-nl line\n              curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\n            }\n            if ((!oldEOFNewline && !noNlBeforeAdds) || !newEOFNewline) {\n              curRange.push('\\\\ No newline at end of file');\n            }\n          }\n          hunks.push(hunk);\n\n          oldRangeStart = 0;\n          newRangeStart = 0;\n          curRange = [];\n        }\n      }\n      oldLine += lines.length;\n      newLine += lines.length;\n    }\n  }\n\n  return {\n    oldFileName: oldFileName, newFileName: newFileName,\n    oldHeader: oldHeader, newHeader: newHeader,\n    hunks: hunks\n  };\n}\n\nexport function formatPatch(diff) {\n  const ret = [];\n  if (diff.oldFileName == diff.newFileName) {\n    ret.push('Index: ' + diff.oldFileName);\n  }\n  ret.push('===================================================================');\n  ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\n  ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\n\n  for (let i = 0; i < diff.hunks.length; i++) {\n    const hunk = diff.hunks[i];\n    // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n    if (hunk.oldLines === 0) {\n      hunk.oldStart -= 1;\n    }\n    if (hunk.newLines === 0) {\n      hunk.newStart -= 1;\n    }\n    ret.push(\n      '@@ -' + hunk.oldStart + ',' + hunk.oldLines\n      + ' +' + hunk.newStart + ',' + hunk.newLines\n      + ' @@'\n    );\n    ret.push.apply(ret, hunk.lines);\n  }\n\n  return ret.join('\\n') + '\\n';\n}\n\nexport function createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return formatPatch(structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options));\n}\n\nexport function createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/util/array.js":{"lineLengths":[25,13,0,46,13,3,32,42,0,23,27,30,17,3,0,31,1,0,40,36,17,3,0,42,32,19,5,3,0,14,1,1476,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/src/util/array.js"],"names":["arrayEqual","a","b","length","arrayStartsWith","array","start","i"],"mappings":";;;;;;;;;;AAAO,SAASA,UAAT,CAAoBC,CAApB,EAAuBC,CAAvB,EAA0B;AAC/B,MAAID,CAAC,CAACE,MAAF,KAAaD,CAAC,CAACC,MAAnB,EAA2B;AACzB,WAAO,KAAP;AACD;;AAED,SAAOC,eAAe,CAACH,CAAD,EAAIC,CAAJ,CAAtB;AACD;;AAEM,SAASE,eAAT,CAAyBC,KAAzB,EAAgCC,KAAhC,EAAuC;AAC5C,MAAIA,KAAK,CAACH,MAAN,GAAeE,KAAK,CAACF,MAAzB,EAAiC;AAC/B,WAAO,KAAP;AACD;;AAED,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACH,MAA1B,EAAkCI,CAAC,EAAnC,EAAuC;AACrC,QAAID,KAAK,CAACC,CAAD,CAAL,KAAaF,KAAK,CAACE,CAAD,CAAtB,EAA2B;AACzB,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD","sourcesContent":["export function arrayEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  return arrayStartsWith(a, b);\n}\n\nexport function arrayStartsWith(array, start) {\n  if (start.length > array.length) {\n    return false;\n  }\n\n  for (let i = 0; i < start.length; i++) {\n    if (start[i] !== array[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/convert/dmp.js":{"lineLengths":[25,13,0,46,13,3,50,0,23,65,39,15,13,16,0,44,24,0,23,20,32,21,12,20,5,0,40,3,0,13,1,1644,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/src/convert/dmp.js"],"names":["convertChangesToDMP","changes","ret","change","operation","i","length","added","removed","push","value"],"mappings":";;;;;;;;;AAAA;AACO,SAASA,mBAAT,CAA6BC,OAA7B,EAAsC;AAC3C,MAAIC,GAAG,GAAG,EAAV;AAAA,MACIC,MADJ;AAAA,MAEIC,SAFJ;;AAGA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,OAAO,CAACK,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvCF,IAAAA,MAAM,GAAGF,OAAO,CAACI,CAAD,CAAhB;;AACA,QAAIF,MAAM,CAACI,KAAX,EAAkB;AAChBH,MAAAA,SAAS,GAAG,CAAZ;AACD,KAFD,MAEO,IAAID,MAAM,CAACK,OAAX,EAAoB;AACzBJ,MAAAA,SAAS,GAAG,CAAC,CAAb;AACD,KAFM,MAEA;AACLA,MAAAA,SAAS,GAAG,CAAZ;AACD;;AAEDF,IAAAA,GAAG,CAACO,IAAJ,CAAS,CAACL,SAAD,EAAYD,MAAM,CAACO,KAAnB,CAAT;AACD;;AACD,SAAOR,GAAP;AACD","sourcesContent":["// See: http://code.google.com/p/google-diff-match-patch/wiki/API\nexport function convertChangesToDMP(changes) {\n  let ret = [],\n      change,\n      operation;\n  for (let i = 0; i < changes.length; i++) {\n    change = changes[i];\n    if (change.added) {\n      operation = 1;\n    } else if (change.removed) {\n      operation = -1;\n    } else {\n      operation = 0;\n    }\n\n    ret.push([operation, change.value]);\n  }\n  return ret;\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/lib/convert/xml.js":{"lineLengths":[25,13,0,46,13,3,50,0,23,39,15,0,44,28,0,23,24,32,24,5,0,39,0,23,25,32,25,5,3,0,22,1,0,24,12,31,30,30,32,11,1,2564,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/diff/src/convert/xml.js"],"names":["convertChangesToXML","changes","ret","i","length","change","added","push","removed","escapeHTML","value","join","s","n","replace"],"mappings":";;;;;;;;;AAAO,SAASA,mBAAT,CAA6BC,OAA7B,EAAsC;AAC3C,MAAIC,GAAG,GAAG,EAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,QAAIE,MAAM,GAAGJ,OAAO,CAACE,CAAD,CAApB;;AACA,QAAIE,MAAM,CAACC,KAAX,EAAkB;AAChBJ,MAAAA,GAAG,CAACK,IAAJ,CAAS,OAAT;AACD,KAFD,MAEO,IAAIF,MAAM,CAACG,OAAX,EAAoB;AACzBN,MAAAA,GAAG,CAACK,IAAJ,CAAS,OAAT;AACD;;AAEDL,IAAAA,GAAG,CAACK,IAAJ,CAASE,UAAU,CAACJ,MAAM,CAACK,KAAR,CAAnB;;AAEA,QAAIL,MAAM,CAACC,KAAX,EAAkB;AAChBJ,MAAAA,GAAG,CAACK,IAAJ,CAAS,QAAT;AACD,KAFD,MAEO,IAAIF,MAAM,CAACG,OAAX,EAAoB;AACzBN,MAAAA,GAAG,CAACK,IAAJ,CAAS,QAAT;AACD;AACF;;AACD,SAAOL,GAAG,CAACS,IAAJ,CAAS,EAAT,CAAP;AACD;;AAED,SAASF,UAAT,CAAoBG,CAApB,EAAuB;AACrB,MAAIC,CAAC,GAAGD,CAAR;AACAC,EAAAA,CAAC,GAAGA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,OAAhB,CAAJ;AACAD,EAAAA,CAAC,GAAGA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,MAAhB,CAAJ;AACAD,EAAAA,CAAC,GAAGA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,MAAhB,CAAJ;AACAD,EAAAA,CAAC,GAAGA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,QAAhB,CAAJ;AAEA,SAAOD,CAAP;AACD","sourcesContent":["export function convertChangesToXML(changes) {\n  let ret = [];\n  for (let i = 0; i < changes.length; i++) {\n    let change = changes[i];\n    if (change.added) {\n      ret.push('<ins>');\n    } else if (change.removed) {\n      ret.push('<del>');\n    }\n\n    ret.push(escapeHTML(change.value));\n\n    if (change.added) {\n      ret.push('</ins>');\n    } else if (change.removed) {\n      ret.push('</del>');\n    }\n  }\n  return ret.join('');\n}\n\nfunction escapeHTML(s) {\n  let n = s;\n  n = n.replace(/&/g, '&amp;');\n  n = n.replace(/</g, '&lt;');\n  n = n.replace(/>/g, '&gt;');\n  n = n.replace(/\"/g, '&quot;');\n\n  return n;\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/get-caller-file/index.js":{"lineLengths":[13,69,69,2,58,51,46,44,208,5,55,68,34,51,54,35,56,54,75,5,2,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/get-caller-file/index.ts"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,qEAAqE;AACrE,EAAE;AACF,0DAA0D;AAE1D,iBAAS,SAAS,aAAa,CAAC,QAAY;IAAZ,yBAAA,EAAA,YAAY;IAC1C,IAAI,QAAQ,IAAI,KAAK,CAAC,eAAe,EAAE;QACrC,MAAM,IAAI,SAAS,CAAC,kGAAkG,GAAG,QAAQ,GAAG,oCAAoC,GAAG,KAAK,CAAC,eAAe,GAAG,GAAG,CAAC,CAAC;KACzM;IAED,IAAM,oBAAoB,GAAG,KAAK,CAAC,iBAAiB,CAAC;IACrD,KAAK,CAAC,iBAAiB,GAAG,UAAC,CAAC,EAAE,KAAK,IAAM,OAAA,KAAK,EAAL,CAAK,CAAC;IAC/C,IAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC,KAAK,CAAC;IAChC,KAAK,CAAC,iBAAiB,GAAG,oBAAoB,CAAC;IAG/C,IAAI,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC/C,2BAA2B;QAC3B,gDAAgD;QAChD,8CAA8C;QAC9C,OAAO,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAE,KAAK,CAAC,QAAQ,CAAS,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;KAC7E;AACH,CAAC,CAAC"},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/lib/node/index.js":{"lineLengths":[13,0,3,23,3,0,7,8,19,33,31,29,25,29,29,25,29,33,38,41,45,39,53,34,47,40,7,7,23,39,7,8,8,10,31,13,34,55,3,0,14,31,46,3,42,1,25,25,0,3,20,3,0,26,0,3,28,3,0,35,0,3,8,3,0,18,0,3,21,3,0,28,0,3,27,3,0,13,74,9,0,3,16,3,0,21,16,18,17,2,0,3,29,2,63,37,9,2,3,0,21,52,35,2,0,3,19,2,63,23,9,2,3,0,37,0,3,52,39,2,51,3,20,0,3,72,2,35,15,3,33,22,40,4,21,33,4,1,0,3,64,2,25,29,14,3,0,31,20,49,71,22,24,23,17,21,23,22,44,20,15,19,71,26,30,27,49,1,0,3,62,23,3,31,48,0,3,27,2,16,2,9,35,13,20,2,35,17,20,6,2,17,2,9,29,35,18,20,6,2,26,33,14,3,0,43,50,82,3,55,14,2,0,3,68,41,2,9,42,70,20,6,2,31,2,9,42,34,20,6,2,24,44,33,33,14,3,0,60,13,21,68,5,26,38,11,25,8,5,35,41,68,39,33,45,38,9,42,29,5,47,3,14,2,46,24,36,41,37,24,72,37,15,7,27,19,7,3,24,2,0,3,75,80,2,28,23,14,3,0,44,49,22,14,2,0,3,62,2,27,21,14,3,0,46,50,24,14,2,0,3,70,2,12,2,25,22,26,25,2,25,23,27,25,2,25,35,27,25,2,23,33,14,3,0,42,82,2,0,3,64,2,12,2,51,2,29,25,25,2,29,37,25,2,25,33,14,3,0,44,76,2,0,3,26,2,12,2,26,24,32,2,29,33,14,3,0,44,34,28,10,34,3,14,2,0,3,47,2,30,27,20,14,3,0,53,34,29,31,3,40,2,0,3,37,2,25,26,19,14,3,0,53,31,21,13,45,2,62,36,15,81,92,5,19,25,30,33,45,40,52,67,29,17,9,36,9,50,79,54,12,32,46,5,5,16,2,0,3,30,2,26,33,14,3,0,45,33,14,2,0,3,19,2,31,33,15,3,0,46,33,13,76,3,44,0,13,36,0,42,37,15,80,69,0,53,57,37,26,56,0,16,58,0,17,22,3,0,22,31,37,26,56,0,19,24,0,17,22,3,0,25,25,22,18,24,0,44,21,0,13,17,26,17,15,25,20,23,36,27,14,2,0,3,56,2,12,2,32,29,18,43,2,23,25,101,33,14,3,0,57,40,50,56,19,14,3,17,15,19,6,3,67,50,2,0,3,58,2,31,33,14,3,0,40,18,14,2,0,3,59,2,32,33,14,3,0,41,19,14,2,0,3,80,2,32,33,14,3,0,41,59,25,39,10,21,3,14,2,0,3,55,2,32,33,14,3,0,42,20,14,2,0,3,46,75,2,33,14,3,0,49,31,14,2,0,3,29,2,28,15,3,0,38,41,32,21,7,41,21,30,7,16,19,30,5,32,17,35,3,7,18,11,32,0,23,73,33,7,12,10,44,0,25,49,23,44,0,26,59,18,22,3,0,38,30,11,14,12,115,16,29,31,35,7,18,18,38,29,29,14,24,27,7,0,20,62,20,34,27,7,29,5,3,0,12,31,26,22,30,24,26,26,28,40,30,32,150,0,70,26,64,3,95,39,3,0,21,118,0,12,38,9,7,11,0,21,23,34,54,3,27,23,0,18,27,23,5,28,42,59,58,30,66,46,42,61,51,30,25,5,0,9,37,42,3,39,44,3,34,71,3,0,16,21,41,14,53,63,56,103,12,44,5,3,13,2,0,3,43,26,2,21,24,15,3,0,52,38,25,3,0,106,36,22,74,21,15,9,37,51,18,61,9,35,52,7,19,18,68,5,3,0,65,29,15,25,3,23,58,0,49,68,52,30,3,17,2,0,3,35,2,34,37,15,3,47,91,2,0,3,53,33,2,23,33,14,3,0,58,38,27,42,27,25,3,25,24,33,89,6,3,34,18,2,0,3,59,2,15,3,0,47,38,42,34,2,39,17,40,24,84,3,25,0,19,30,14,2,38,115,24,9,7,11,9,10,11,22,0,9,46,22,35,54,77,63,73,46,58,7,44,5,0,21,51,101,5,3,0,13,40,31,64,37,47,5,21,13,5,35,79,34,47,43,48,44,19,0,15,48,33,5,33,23,48,13,5,0,19,33,22,5,30,57,45,5,30,41,207,20,5,18,25,71,22,29,45,39,22,34,37,96,39,37,35,36,34,54,32,51,34,26,36,40,71,22,7,5,0,72,63,20,5,31,33,17,57,65,29,79,36,52,67,35,60,48,35,38,29,34,37,9,9,5,17,11,66,68,34,47,30,56,19,11,0,86,38,40,40,11,33,28,75,41,27,43,44,67,43,26,40,19,17,15,26,42,43,67,42,26,39,19,17,15,13,29,67,11,11,21,27,15,7,5,19,0,17,18,55,48,67,29,50,25,9,13,5,0,25,32,31,33,7,50,48,54,23,48,7,5,29,36,34,50,19,44,58,29,29,28,25,15,13,9,28,6,20,4,36,63,43,38,46,43,49,51,27,5,24,55,37,5,40,0,20,4,0,78,34,17,18,42,30,31,66,37,7,5,0,45,43,59,70,55,39,48,7,52,7,37,62,10,18,3,2,0,61,41,57,45,17,3,0,88,46,97,17,3,0,22,74,2,0,3,88,2,87,85,2,70,2,25,42,36,10,3,56,44,29,26,6,51,44,10,38,3,14,2,54,62,14,2,0,29,31,51,49,12,25,22,1,29,22,48,32,38,42,37,16,18,5,15,50,29,14,28,7,5,29,20,4,1,0,3,50,2,23,20,14,3,0,23,32,22,45,25,54,64,1,0,58,56,84,25,41,57,45,97,1,0,3,65,2,23,20,15,3,0,23,32,22,42,1,0,3,49,2,23,20,15,3,0,27,55,1,92496],"data":{"version":3,"names":["format","require","Stream","https","http","fs","zlib","util","qs","mime","methods","FormData","formidable","debug","CookieJar","safeStringify","utils","RequestBase","http2","unzip","Response","mixin","hasOwn","request","method","url","exports","Request","end","arguments","length","module","agent","noop","define","protocols","serialize","stringify","parse","buffer","_initHeaders","request_","_header","header","call","_enableHttp2","Boolean","process","env","HTTP2_TEST","_agent","_formData","writable","_redirects","redirects","cookies","_query","qsRaw","_redirectList","_streamRequest","_lookup","undefined","once","clearTimeout","bind","inherits","prototype","bool","Error","attach","field","file","options","_data","o","filename","createReadStream","on","error","formData","_getFormData","emit","path","append","called","callback","abort","lookup","type","set","includes","getType","accept","query","value","push","Object","assign","write","data","encoding","pipe","stream","piped","_pipeContinue","req","res","isRedirect","statusCode","_maxRedirects","_redirect","_emitResponse","_aborted","_shouldUnzip","unzipObject","createUnzip","code","_buffer","headers","location","URL","href","resume","getHeaders","_headers","changesOrigin","host","cleanHeader","_endCalled","_emitRedirect","_callback","auth","user","pass","encoder","string","Buffer","from","toString","_auth","ca","cert","_ca","key","_key","pfx","isBuffer","_pfx","_passphrase","passphrase","_cert","disableTLSCerts","_disableTLSCerts","indices","strictNullHandling","_finalizeQueryString","err","urlString","retries","_retries","indexOf","protocol","pathname","search","test","split","socketPath","hostname","replace","_connectOverride","match","newHost","newPort","port","rejectUnauthorized","NODE_TLS_REJECT_UNAUTHORIZED","servername","_trustLocalhost","module_","setProtocol","setNoDelay","setHeader","response","username","password","temporaryJar","setCookies","cookie","getCookies","CookieAccessInfo","All","toValueString","_shouldRetry","_retry","fn","console","warn","_isResponseOK","message","STATUS_CODES","status","_maxRetries","listeners","_isHost","object","body","files","_end","_setTimeouts","_headerSent","contentType","getHeader","_serializer","isJSON","byteLength","_responseTimeoutTimer","max","toLowerCase","trim","multipart","redirect","responseType","_responseType","parser","_parser","image","form","isBinary","text","isText","_resBuffered","parserHandlesEnd","responseBytesLeft","_maxResponseSize","buf","destroy","timedout","Array","isArray","getProgressMonitor","lengthComputable","total","loaded","progress","Transform","_transform","chunk","direction","bufferToChunks","chunkSize","chunking","Readable","totalLength","remainder","cutoff","i","slice","remainderBuffer","getLength","connect","connectOverride","trustLocalhost","toggle","name","toUpperCase","send","parts","subtype","registry"],"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/src/node/index.js"],"sourcesContent":["/**\n * Module dependencies.\n */\n\nconst { format } = require('url');\nconst Stream = require('stream');\nconst https = require('https');\nconst http = require('http');\nconst fs = require('fs');\nconst zlib = require('zlib');\nconst util = require('util');\nconst qs = require('qs');\nconst mime = require('mime');\nlet methods = require('methods');\nconst FormData = require('form-data');\nconst formidable = require('formidable');\nconst debug = require('debug')('superagent');\nconst CookieJar = require('cookiejar');\nconst safeStringify = require('fast-safe-stringify');\n\nconst utils = require('../utils');\nconst RequestBase = require('../request-base');\nconst http2 = require('./http2wrapper');\nconst { unzip } = require('./unzip');\nconst Response = require('./response');\n\nconst { mixin, hasOwn } = utils;\n\nfunction request(method, url) {\n  // callback\n  if (typeof url === 'function') {\n    return new exports.Request('GET', method).end(url);\n  }\n\n  // url first\n  if (arguments.length === 1) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n}\n\nmodule.exports = request;\nexports = module.exports;\n\n/**\n * Expose `Request`.\n */\n\nexports.Request = Request;\n\n/**\n * Expose the agent function\n */\n\nexports.agent = require('./agent');\n\n/**\n * Noop.\n */\n\nfunction noop() {}\n\n/**\n * Expose `Response`.\n */\n\nexports.Response = Response;\n\n/**\n * Define \"form\" mime type.\n */\n\nmime.define(\n  {\n    'application/x-www-form-urlencoded': ['form', 'urlencoded', 'form-data']\n  },\n  true\n);\n\n/**\n * Protocol map.\n */\n\nexports.protocols = {\n  'http:': http,\n  'https:': https,\n  'http2:': http2\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\nexports.serialize = {\n  'application/x-www-form-urlencoded': qs.stringify,\n  'application/json': safeStringify\n};\n\n/**\n * Default parsers.\n *\n *     superagent.parse['application/xml'] = function(res, fn){\n *       fn(null, res);\n *     };\n *\n */\n\nexports.parse = require('./parsers');\n\n/**\n * Default buffering map. Can be used to set certain\n * response types to buffer/not buffer.\n *\n *     superagent.buffer['application/xml'] = true;\n */\nexports.buffer = {};\n\n/**\n * Initialize internal header tracking properties on a request instance.\n *\n * @param {Object} req the instance\n * @api private\n */\nfunction _initHeaders(request_) {\n  request_._header = {\n    // coerces header names to lowercase\n  };\n  request_.header = {\n    // preserves header name case\n  };\n}\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String|Object} url\n * @api public\n */\n\nfunction Request(method, url) {\n  Stream.call(this);\n  if (typeof url !== 'string') url = format(url);\n  this._enableHttp2 = Boolean(process.env.HTTP2_TEST); // internal only\n  this._agent = false;\n  this._formData = null;\n  this.method = method;\n  this.url = url;\n  _initHeaders(this);\n  this.writable = true;\n  this._redirects = 0;\n  this.redirects(method === 'HEAD' ? 0 : 5);\n  this.cookies = '';\n  this.qs = {};\n  this._query = [];\n  this.qsRaw = this._query; // Unused, for backwards compatibility only\n  this._redirectList = [];\n  this._streamRequest = false;\n  this._lookup = undefined;\n  this.once('end', this.clearTimeout.bind(this));\n}\n\n/**\n * Inherit from `Stream` (which inherits from `EventEmitter`).\n * Mixin `RequestBase`.\n */\nutil.inherits(Request, Stream);\n\nmixin(Request.prototype, RequestBase.prototype);\n\n/**\n * Enable or Disable http2.\n *\n * Enable http2.\n *\n * ``` js\n * request.get('http://localhost/')\n *   .http2()\n *   .end(callback);\n *\n * request.get('http://localhost/')\n *   .http2(true)\n *   .end(callback);\n * ```\n *\n * Disable http2.\n *\n * ``` js\n * request = request.http2();\n * request.get('http://localhost/')\n *   .http2(false)\n *   .end(callback);\n * ```\n *\n * @param {Boolean} enable\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.http2 = function (bool) {\n  if (exports.protocols['http2:'] === undefined) {\n    throw new Error(\n      'superagent: this version of Node.js does not support http2'\n    );\n  }\n\n  this._enableHttp2 = bool === undefined ? true : bool;\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('http://localhost/upload')\n *   .attach('field', Buffer.from('<b>Hello world</b>'), 'hello.html')\n *   .end(callback);\n * ```\n *\n * A filename may also be used:\n *\n * ``` js\n * request.post('http://localhost/upload')\n *   .attach('files', 'image.jpg')\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {String|fs.ReadStream|Buffer} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function (field, file, options) {\n  if (file) {\n    if (this._data) {\n      throw new Error(\"superagent can't mix .send() and .attach()\");\n    }\n\n    let o = options || {};\n    if (typeof options === 'string') {\n      o = { filename: options };\n    }\n\n    if (typeof file === 'string') {\n      if (!o.filename) o.filename = file;\n      debug('creating `fs.ReadStream` instance for file: %s', file);\n      file = fs.createReadStream(file);\n      file.on('error', (error) => {\n        const formData = this._getFormData();\n        formData.emit('error', error);\n      });\n    } else if (!o.filename && file.path) {\n      o.filename = file.path;\n    }\n\n    this._getFormData().append(field, file, o);\n  }\n\n  return this;\n};\n\nRequest.prototype._getFormData = function () {\n  if (!this._formData) {\n    this._formData = new FormData();\n    this._formData.on('error', (error) => {\n      debug('FormData error', error);\n      if (this.called) {\n        // The request has already finished and the callback was called.\n        // Silently ignore the error.\n        return;\n      }\n\n      this.callback(error);\n      this.abort();\n    });\n  }\n\n  return this._formData;\n};\n\n/**\n * Gets/sets the `Agent` to use for this HTTP request. The default (if this\n * function is not called) is to opt out of connection pooling (`agent: false`).\n *\n * @param {http.Agent} agent\n * @return {http.Agent}\n * @api public\n */\n\nRequest.prototype.agent = function (agent) {\n  if (arguments.length === 0) return this._agent;\n  this._agent = agent;\n  return this;\n};\n\n/**\n * Gets/sets the `lookup` function to use custom DNS resolver.\n *\n * @param {Function} lookup\n * @return {Function}\n * @api public\n */\n\nRequest.prototype.lookup = function (lookup) {\n  if (arguments.length === 0) return this._lookup;\n  this._lookup = lookup;\n  return this;\n};\n\n/**\n * Set _Content-Type_ response header passed through `mime.getType()`.\n *\n * Examples:\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('json')\n *        .send(jsonstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/json')\n *        .send(jsonstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function (type) {\n  return this.set(\n    'Content-Type',\n    type.includes('/') ? type : mime.getType(type)\n  );\n};\n\n/**\n * Set _Accept_ response header passed through `mime.getType()`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function (type) {\n  return this.set('Accept', type.includes('/') ? type : mime.getType(type));\n};\n\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get('/shoes')\n *     .query('size=10')\n *     .query({ color: 'blue' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.query = function (value) {\n  if (typeof value === 'string') {\n    this._query.push(value);\n  } else {\n    Object.assign(this.qs, value);\n  }\n\n  return this;\n};\n\n/**\n * Write raw `data` / `encoding` to the socket.\n *\n * @param {Buffer|String} data\n * @param {String} encoding\n * @return {Boolean}\n * @api public\n */\n\nRequest.prototype.write = function (data, encoding) {\n  const request_ = this.request();\n  if (!this._streamRequest) {\n    this._streamRequest = true;\n  }\n\n  return request_.write(data, encoding);\n};\n\n/**\n * Pipe the request body to `stream`.\n *\n * @param {Stream} stream\n * @param {Object} options\n * @return {Stream}\n * @api public\n */\n\nRequest.prototype.pipe = function (stream, options) {\n  this.piped = true; // HACK...\n  this.buffer(false);\n  this.end();\n  return this._pipeContinue(stream, options);\n};\n\nRequest.prototype._pipeContinue = function (stream, options) {\n  this.req.once('response', (res) => {\n    // redirect\n    if (\n      isRedirect(res.statusCode) &&\n      this._redirects++ !== this._maxRedirects\n    ) {\n      return this._redirect(res) === this\n        ? this._pipeContinue(stream, options)\n        : undefined;\n    }\n\n    this.res = res;\n    this._emitResponse();\n    if (this._aborted) return;\n\n    if (this._shouldUnzip(res)) {\n      const unzipObject = zlib.createUnzip();\n      unzipObject.on('error', (error) => {\n        if (error && error.code === 'Z_BUF_ERROR') {\n          // unexpected end of file is ignored by browsers and curl\n          stream.emit('end');\n          return;\n        }\n\n        stream.emit('error', error);\n      });\n      res.pipe(unzipObject).pipe(stream, options);\n      // don't emit 'end' until unzipObject has completed writing all its data.\n      unzipObject.once('end', () => this.emit('end'));\n    } else {\n      res.pipe(stream, options);\n      res.once('end', () => this.emit('end'));\n    }\n  });\n  return stream;\n};\n\n/**\n * Enable / disable buffering.\n *\n * @return {Boolean} [val]\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.buffer = function (value) {\n  this._buffer = value !== false;\n  return this;\n};\n\n/**\n * Redirect to `url\n *\n * @param {IncomingMessage} res\n * @return {Request} for chaining\n * @api private\n */\n\nRequest.prototype._redirect = function (res) {\n  let url = res.headers.location;\n  if (!url) {\n    return this.callback(new Error('No location header for redirect'), res);\n  }\n\n  debug('redirect %s -> %s', this.url, url);\n\n  // location\n  url = new URL(url, this.url).href;\n\n  // ensure the response is being consumed\n  // this is required for Node v0.10+\n  res.resume();\n\n  let headers = this.req.getHeaders ? this.req.getHeaders() : this.req._headers;\n\n  const changesOrigin = new URL(url).host !== new URL(this.url).host;\n\n  // implementation of 302 following defacto standard\n  if (res.statusCode === 301 || res.statusCode === 302) {\n    // strip Content-* related fields\n    // in case of POST etc\n    headers = utils.cleanHeader(headers, changesOrigin);\n\n    // force GET\n    this.method = this.method === 'HEAD' ? 'HEAD' : 'GET';\n\n    // clear data\n    this._data = null;\n  }\n\n  // 303 is always GET\n  if (res.statusCode === 303) {\n    // strip Content-* related fields\n    // in case of POST etc\n    headers = utils.cleanHeader(headers, changesOrigin);\n\n    // force method\n    this.method = 'GET';\n\n    // clear data\n    this._data = null;\n  }\n\n  // 307 preserves method\n  // 308 preserves method\n  delete headers.host;\n\n  delete this.req;\n  delete this._formData;\n\n  // remove all add header except User-Agent\n  _initHeaders(this);\n\n  // redirect\n  this.res = res;\n  this._endCalled = false;\n  this.url = url;\n  this.qs = {};\n  this._query.length = 0;\n  this.set(headers);\n  this._emitRedirect();\n  this._redirectList.push(this.url);\n  this.end(this._callback);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * Examples:\n *\n *   .auth('tobi', 'learnboost')\n *   .auth('tobi:learnboost')\n *   .auth('tobi')\n *   .auth(accessToken, { type: 'bearer' })\n *\n * @param {String} user\n * @param {String} [pass]\n * @param {Object} [options] options with authorization type 'basic' or 'bearer' ('basic' is default)\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function (user, pass, options) {\n  if (arguments.length === 1) pass = '';\n  if (typeof pass === 'object' && pass !== null) {\n    // pass is optional and can be replaced with options\n    options = pass;\n    pass = '';\n  }\n\n  if (!options) {\n    options = { type: 'basic' };\n  }\n\n  const encoder = (string) => Buffer.from(string).toString('base64');\n\n  return this._auth(user, pass, options, encoder);\n};\n\n/**\n * Set the certificate authority option for https request.\n *\n * @param {Buffer | Array} cert\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.ca = function (cert) {\n  this._ca = cert;\n  return this;\n};\n\n/**\n * Set the client certificate key option for https request.\n *\n * @param {Buffer | String} cert\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.key = function (cert) {\n  this._key = cert;\n  return this;\n};\n\n/**\n * Set the key, certificate, and CA certs of the client in PFX or PKCS12 format.\n *\n * @param {Buffer | String} cert\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.pfx = function (cert) {\n  if (typeof cert === 'object' && !Buffer.isBuffer(cert)) {\n    this._pfx = cert.pfx;\n    this._passphrase = cert.passphrase;\n  } else {\n    this._pfx = cert;\n  }\n\n  return this;\n};\n\n/**\n * Set the client certificate option for https request.\n *\n * @param {Buffer | String} cert\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.cert = function (cert) {\n  this._cert = cert;\n  return this;\n};\n\n/**\n * Do not reject expired or invalid TLS certs.\n * sets `rejectUnauthorized=true`. Be warned that this allows MITM attacks.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.disableTLSCerts = function () {\n  this._disableTLSCerts = true;\n  return this;\n};\n\n/**\n * Return an http[s] request.\n *\n * @return {OutgoingMessage}\n * @api private\n */\n\n// eslint-disable-next-line complexity\nRequest.prototype.request = function () {\n  if (this.req) return this.req;\n\n  const options = {};\n\n  try {\n    const query = qs.stringify(this.qs, {\n      indices: false,\n      strictNullHandling: true\n    });\n    if (query) {\n      this.qs = {};\n      this._query.push(query);\n    }\n\n    this._finalizeQueryString();\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  let { url: urlString } = this;\n  const retries = this._retries;\n\n  // default to http://\n  if (urlString.indexOf('http') !== 0) urlString = `http://${urlString}`;\n  const url = new URL(urlString);\n  let { protocol } = url;\n  let path = `${url.pathname}${url.search}`;\n\n  // support unix sockets\n  if (/^https?\\+unix:/.test(protocol) === true) {\n    // get the protocol\n    protocol = `${protocol.split('+')[0]}:`;\n\n    // get the socket path\n    options.socketPath = url.hostname.replace(/%2F/g, '/');\n    url.host = '';\n    url.hostname = '';\n  }\n\n  // Override IP address of a hostname\n  if (this._connectOverride) {\n    const { hostname } = url;\n    const match =\n      hostname in this._connectOverride\n        ? this._connectOverride[hostname]\n        : this._connectOverride['*'];\n    if (match) {\n      // backup the real host\n      if (!this._header.host) {\n        this.set('host', url.host);\n      }\n\n      let newHost;\n      let newPort;\n\n      if (typeof match === 'object') {\n        newHost = match.host;\n        newPort = match.port;\n      } else {\n        newHost = match;\n        newPort = url.port;\n      }\n\n      // wrap [ipv6]\n      url.host = /:/.test(newHost) ? `[${newHost}]` : newHost;\n      if (newPort) {\n        url.host += `:${newPort}`;\n        url.port = newPort;\n      }\n\n      url.hostname = newHost;\n    }\n  }\n\n  // options\n  options.method = this.method;\n  options.port = url.port;\n  options.path = path;\n  options.host = url.hostname;\n  options.ca = this._ca;\n  options.key = this._key;\n  options.pfx = this._pfx;\n  options.cert = this._cert;\n  options.passphrase = this._passphrase;\n  options.agent = this._agent;\n  options.lookup = this._lookup;\n  options.rejectUnauthorized =\n    typeof this._disableTLSCerts === 'boolean'\n      ? !this._disableTLSCerts\n      : process.env.NODE_TLS_REJECT_UNAUTHORIZED !== '0';\n\n  // Allows request.get('https://1.2.3.4/').set('Host', 'example.com')\n  if (this._header.host) {\n    options.servername = this._header.host.replace(/:\\d+$/, '');\n  }\n\n  if (\n    this._trustLocalhost &&\n    /^(?:localhost|127\\.0\\.0\\.\\d+|(0*:)+:0*1)$/.test(url.hostname)\n  ) {\n    options.rejectUnauthorized = false;\n  }\n\n  // initiate request\n  const module_ = this._enableHttp2\n    ? exports.protocols['http2:'].setProtocol(protocol)\n    : exports.protocols[protocol];\n\n  // request\n  this.req = module_.request(options);\n  const { req } = this;\n\n  // set tcp no delay\n  req.setNoDelay(true);\n\n  if (options.method !== 'HEAD') {\n    req.setHeader('Accept-Encoding', 'gzip, deflate');\n  }\n\n  this.protocol = protocol;\n  this.host = url.host;\n\n  // expose events\n  req.once('drain', () => {\n    this.emit('drain');\n  });\n\n  req.on('error', (error) => {\n    // flag abortion here for out timeouts\n    // because node will emit a faux-error \"socket hang up\"\n    // when request is aborted before a connection is made\n    if (this._aborted) return;\n    // if not the same, we are in the **old** (cancelled) request,\n    // so need to continue (same as for above)\n    if (this._retries !== retries) return;\n    // if we've received a response then we don't want to let\n    // an error in the request blow up the response\n    if (this.response) return;\n    this.callback(error);\n  });\n\n  // auth\n  if (url.username || url.password) {\n    this.auth(url.username, url.password);\n  }\n\n  if (this.username && this.password) {\n    this.auth(this.username, this.password);\n  }\n\n  for (const key in this.header) {\n    if (hasOwn(this.header, key)) req.setHeader(key, this.header[key]);\n  }\n\n  // add cookies\n  if (this.cookies) {\n    if (hasOwn(this._header, 'cookie')) {\n      // merge\n      const temporaryJar = new CookieJar.CookieJar();\n      temporaryJar.setCookies(this._header.cookie.split('; '));\n      temporaryJar.setCookies(this.cookies.split('; '));\n      req.setHeader(\n        'Cookie',\n        temporaryJar.getCookies(CookieJar.CookieAccessInfo.All).toValueString()\n      );\n    } else {\n      req.setHeader('Cookie', this.cookies);\n    }\n  }\n\n  return req;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function (error, res) {\n  if (this._shouldRetry(error, res)) {\n    return this._retry();\n  }\n\n  // Avoid the error which is emitted from 'socket hang up' to cause the fn undefined error on JS runtime.\n  const fn = this._callback || noop;\n  this.clearTimeout();\n  if (this.called) return console.warn('superagent: double callback bug');\n  this.called = true;\n\n  if (!error) {\n    try {\n      if (!this._isResponseOK(res)) {\n        let message = 'Unsuccessful HTTP response';\n        if (res) {\n          message = http.STATUS_CODES[res.status] || message;\n        }\n\n        error = new Error(message);\n        error.status = res ? res.status : undefined;\n      }\n    } catch (err) {\n      error = err;\n      error.status = error.status || (res ? res.status : undefined);\n    }\n  }\n\n  // It's important that the callback is called outside try/catch\n  // to avoid double callback\n  if (!error) {\n    return fn(null, res);\n  }\n\n  error.response = res;\n  if (this._maxRetries) error.retries = this._retries - 1;\n\n  // only emit error event if there is a listener\n  // otherwise we assume the callback to `.end()` will get the error\n  if (error && this.listeners('error').length > 0) {\n    this.emit('error', error);\n  }\n\n  fn(error, res);\n};\n\n/**\n * Check if `obj` is a host object,\n *\n * @param {Object} obj host object\n * @return {Boolean} is a host object\n * @api private\n */\nRequest.prototype._isHost = function (object) {\n  return (\n    Buffer.isBuffer(object) ||\n    object instanceof Stream ||\n    object instanceof FormData\n  );\n};\n\n/**\n * Initiate request, invoking callback `fn(err, res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype._emitResponse = function (body, files) {\n  const response = new Response(this);\n  this.response = response;\n  response.redirects = this._redirectList;\n  if (undefined !== body) {\n    response.body = body;\n  }\n\n  response.files = files;\n  if (this._endCalled) {\n    response.pipe = function () {\n      throw new Error(\n        \"end() has already been called, so it's too late to start piping\"\n      );\n    };\n  }\n\n  this.emit('response', response);\n  return response;\n};\n\n/**\n * Emit `redirect` event, passing an instanceof `Response`.\n *\n * @api private\n */\n\nRequest.prototype._emitRedirect = function () {\n  const response = new Response(this);\n  response.redirects = this._redirectList;\n  this.emit('redirect', response);\n};\n\nRequest.prototype.end = function (fn) {\n  this.request();\n  debug('%s %s', this.method, this.url);\n\n  if (this._endCalled) {\n    throw new Error(\n      '.end() was called twice. This is not supported in superagent'\n    );\n  }\n\n  this._endCalled = true;\n\n  // store callback\n  this._callback = fn || noop;\n\n  this._end();\n};\n\nRequest.prototype._end = function () {\n  if (this._aborted)\n    return this.callback(\n      new Error('The request has been aborted even before .end() was called')\n    );\n\n  let data = this._data;\n  const { req } = this;\n  const { method } = this;\n\n  this._setTimeouts();\n\n  // body\n  if (method !== 'HEAD' && !req._headerSent) {\n    // serialize stuff\n    if (typeof data !== 'string') {\n      let contentType = req.getHeader('Content-Type');\n      // Parse out just the content type from the header (ignore the charset)\n      if (contentType) contentType = contentType.split(';')[0];\n      let serialize = this._serializer || exports.serialize[contentType];\n      if (!serialize && isJSON(contentType)) {\n        serialize = exports.serialize['application/json'];\n      }\n\n      if (serialize) data = serialize(data);\n    }\n\n    // content-length\n    if (data && !req.getHeader('Content-Length')) {\n      req.setHeader(\n        'Content-Length',\n        Buffer.isBuffer(data) ? data.length : Buffer.byteLength(data)\n      );\n    }\n  }\n\n  // response\n  // eslint-disable-next-line complexity\n  req.once('response', (res) => {\n    debug('%s %s -> %s', this.method, this.url, res.statusCode);\n\n    if (this._responseTimeoutTimer) {\n      clearTimeout(this._responseTimeoutTimer);\n    }\n\n    if (this.piped) {\n      return;\n    }\n\n    const max = this._maxRedirects;\n    const mime = utils.type(res.headers['content-type'] || '') || 'text/plain';\n    let type = mime.split('/')[0];\n    if (type) type = type.toLowerCase().trim();\n    const multipart = type === 'multipart';\n    const redirect = isRedirect(res.statusCode);\n    const responseType = this._responseType;\n\n    this.res = res;\n\n    // redirect\n    if (redirect && this._redirects++ !== max) {\n      return this._redirect(res);\n    }\n\n    if (this.method === 'HEAD') {\n      this.emit('end');\n      this.callback(null, this._emitResponse());\n      return;\n    }\n\n    // zlib support\n    if (this._shouldUnzip(res)) {\n      unzip(req, res);\n    }\n\n    let buffer = this._buffer;\n    if (buffer === undefined && mime in exports.buffer) {\n      buffer = Boolean(exports.buffer[mime]);\n    }\n\n    let parser = this._parser;\n    if (undefined === buffer && parser) {\n      console.warn(\n        \"A custom superagent parser has been set, but buffering strategy for the parser hasn't been configured. Call `req.buffer(true or false)` or set `superagent.buffer[mime] = true or false`\"\n      );\n      buffer = true;\n    }\n\n    if (!parser) {\n      if (responseType) {\n        parser = exports.parse.image; // It's actually a generic Buffer\n        buffer = true;\n      } else if (multipart) {\n        const form = formidable.formidable();\n        parser = form.parse.bind(form);\n        buffer = true;\n      } else if (isBinary(mime)) {\n        parser = exports.parse.image;\n        buffer = true; // For backwards-compatibility buffering default is ad-hoc MIME-dependent\n      } else if (exports.parse[mime]) {\n        parser = exports.parse[mime];\n      } else if (type === 'text') {\n        parser = exports.parse.text;\n        buffer = buffer !== false;\n        // everyone wants their own white-labeled json\n      } else if (isJSON(mime)) {\n        parser = exports.parse['application/json'];\n        buffer = buffer !== false;\n      } else if (buffer) {\n        parser = exports.parse.text;\n      } else if (undefined === buffer) {\n        parser = exports.parse.image; // It's actually a generic Buffer\n        buffer = true;\n      }\n    }\n\n    // by default only buffer text/*, json and messed up thing from hell\n    if ((undefined === buffer && isText(mime)) || isJSON(mime)) {\n      buffer = true;\n    }\n\n    this._resBuffered = buffer;\n    let parserHandlesEnd = false;\n    if (buffer) {\n      // Protectiona against zip bombs and other nuisance\n      let responseBytesLeft = this._maxResponseSize || 200000000;\n      res.on('data', (buf) => {\n        responseBytesLeft -= buf.byteLength || buf.length > 0 ? buf.length : 0;\n        if (responseBytesLeft < 0) {\n          // This will propagate through error event\n          const error = new Error('Maximum response size reached');\n          error.code = 'ETOOLARGE';\n          // Parsers aren't required to observe error event,\n          // so would incorrectly report success\n          parserHandlesEnd = false;\n          // Will not emit error event\n          res.destroy(error);\n          // so we do callback now\n          this.callback(error, null);\n        }\n      });\n    }\n\n    if (parser) {\n      try {\n        // Unbuffered parsers are supposed to emit response early,\n        // which is weird BTW, because response.body won't be there.\n        parserHandlesEnd = buffer;\n\n        parser(res, (error, object, files) => {\n          if (this.timedout) {\n            // Timeout has already handled all callbacks\n            return;\n          }\n\n          // Intentional (non-timeout) abort is supposed to preserve partial response,\n          // even if it doesn't parse.\n          if (error && !this._aborted) {\n            return this.callback(error);\n          }\n\n          if (parserHandlesEnd) {\n            if (multipart) {\n              // formidable v3 always returns an array with the value in it\n              // so we need to flatten it\n              if (object) {\n                for (const key in object) {\n                  const value = object[key];\n                  if (Array.isArray(value) && value.length === 1) {\n                    object[key] = value[0];\n                  } else {\n                    object[key] = value;\n                  }\n                }\n              }\n\n              if (files) {\n                for (const key in files) {\n                  const value = files[key];\n                  if (Array.isArray(value) && value.length === 1) {\n                    files[key] = value[0];\n                  } else {\n                    files[key] = value;\n                  }\n                }\n              }\n            }\n            this.emit('end');\n            this.callback(null, this._emitResponse(object, files));\n          }\n        });\n      } catch (err) {\n        this.callback(err);\n        return;\n      }\n    }\n\n    this.res = res;\n\n    // unbuffered\n    if (!buffer) {\n      debug('unbuffered %s %s', this.method, this.url);\n      this.callback(null, this._emitResponse());\n      if (multipart) return; // allow multipart to handle end event\n      res.once('end', () => {\n        debug('end %s %s', this.method, this.url);\n        this.emit('end');\n      });\n      return;\n    }\n\n    // terminating events\n    res.once('error', (error) => {\n      parserHandlesEnd = false;\n      this.callback(error, null);\n    });\n    if (!parserHandlesEnd)\n      res.once('end', () => {\n        debug('end %s %s', this.method, this.url);\n        // TODO: unless buffering emit earlier to stream\n        this.emit('end');\n        this.callback(null, this._emitResponse());\n      });\n  });\n\n  this.emit('request', this);\n\n  const getProgressMonitor = () => {\n    const lengthComputable = true;\n    const total = req.getHeader('Content-Length');\n    let loaded = 0;\n\n    const progress = new Stream.Transform();\n    progress._transform = (chunk, encoding, callback) => {\n      loaded += chunk.length;\n      this.emit('progress', {\n        direction: 'upload',\n        lengthComputable,\n        loaded,\n        total\n      });\n      callback(null, chunk);\n    };\n\n    return progress;\n  };\n\n  const bufferToChunks = (buffer) => {\n    const chunkSize = 16 * 1024; // default highWaterMark value\n    const chunking = new Stream.Readable();\n    const totalLength = buffer.length;\n    const remainder = totalLength % chunkSize;\n    const cutoff = totalLength - remainder;\n\n    for (let i = 0; i < cutoff; i += chunkSize) {\n      const chunk = buffer.slice(i, i + chunkSize);\n      chunking.push(chunk);\n    }\n\n    if (remainder > 0) {\n      const remainderBuffer = buffer.slice(-remainder);\n      chunking.push(remainderBuffer);\n    }\n\n    chunking.push(null); // no more data\n\n    return chunking;\n  };\n\n  // if a FormData instance got created, then we send that as the request body\n  const formData = this._formData;\n  if (formData) {\n    // set headers\n    const headers = formData.getHeaders();\n    for (const i in headers) {\n      if (hasOwn(headers, i)) {\n        debug('setting FormData header: \"%s: %s\"', i, headers[i]);\n        req.setHeader(i, headers[i]);\n      }\n    }\n\n    // attempt to get \"Content-Length\" header\n    formData.getLength((error, length) => {\n      // TODO: Add chunked encoding when no length (if err)\n      if (error) debug('formData.getLength had error', error, length);\n\n      debug('got FormData Content-Length: %s', length);\n      if (typeof length === 'number') {\n        req.setHeader('Content-Length', length);\n      }\n\n      formData.pipe(getProgressMonitor()).pipe(req);\n    });\n  } else if (Buffer.isBuffer(data)) {\n    bufferToChunks(data).pipe(getProgressMonitor()).pipe(req);\n  } else {\n    req.end(data);\n  }\n};\n\n// Check whether response has a non-0-sized gzip-encoded body\nRequest.prototype._shouldUnzip = (res) => {\n  if (res.statusCode === 204 || res.statusCode === 304) {\n    // These aren't supposed to have any body\n    return false;\n  }\n\n  // header content is a string, and distinction between 0 and no information is crucial\n  if (res.headers['content-length'] === '0') {\n    // We know that the body is empty (unfortunately, this check does not cover chunked encoding)\n    return false;\n  }\n\n  // console.log(res);\n  return /^\\s*(?:deflate|gzip)\\s*$/.test(res.headers['content-encoding']);\n};\n\n/**\n * Overrides DNS for selected hostnames. Takes object mapping hostnames to IP addresses.\n *\n * When making a request to a URL with a hostname exactly matching a key in the object,\n * use the given IP address to connect, instead of using DNS to resolve the hostname.\n *\n * A special host `*` matches every hostname (keep redirects in mind!)\n *\n *      request.connect({\n *        'test.example.com': '127.0.0.1',\n *        'ipv6.example.com': '::1',\n *      })\n */\nRequest.prototype.connect = function (connectOverride) {\n  if (typeof connectOverride === 'string') {\n    this._connectOverride = { '*': connectOverride };\n  } else if (typeof connectOverride === 'object') {\n    this._connectOverride = connectOverride;\n  } else {\n    this._connectOverride = undefined;\n  }\n\n  return this;\n};\n\nRequest.prototype.trustLocalhost = function (toggle) {\n  this._trustLocalhost = toggle === undefined ? true : toggle;\n  return this;\n};\n\n// generate HTTP verb methods\nif (!methods.includes('del')) {\n  // create a copy so we don't cause conflicts with\n  // other packages using the methods package and\n  // npm 3.x\n  methods = [...methods];\n  methods.push('del');\n}\n\nfor (let method of methods) {\n  const name = method;\n  method = method === 'del' ? 'delete' : method;\n\n  method = method.toUpperCase();\n  request[name] = (url, data, fn) => {\n    const request_ = request(method, url);\n    if (typeof data === 'function') {\n      fn = data;\n      data = null;\n    }\n\n    if (data) {\n      if (method === 'GET' || method === 'HEAD') {\n        request_.query(data);\n      } else {\n        request_.send(data);\n      }\n    }\n\n    if (fn) request_.end(fn);\n    return request_;\n  };\n}\n\n/**\n * Check if `mime` is text and should be buffered.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api public\n */\n\nfunction isText(mime) {\n  const parts = mime.split('/');\n  let type = parts[0];\n  if (type) type = type.toLowerCase().trim();\n  let subtype = parts[1];\n  if (subtype) subtype = subtype.toLowerCase().trim();\n\n  return type === 'text' || subtype === 'x-www-form-urlencoded';\n}\n\n// This is not a catchall, but a start. It might be useful\n// in the long run to have file that includes all binary\n// content types from https://www.iana.org/assignments/media-types/media-types.xhtml\nfunction isBinary(mime) {\n  let [registry, name] = mime.split('/');\n  if (registry) registry = registry.toLowerCase().trim();\n  if (name) name = name.toLowerCase().trim();\n  return (\n    ['audio', 'font', 'image', 'video'].includes(registry) ||\n    ['gz', 'gzip'].includes(name)\n  );\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  // should match /json or +json\n  // but not /json-seq\n  return /[/+]json($|[^-\\w])/i.test(mime);\n}\n\n/**\n * Check if we should follow the redirect `code`.\n *\n * @param {Number} code\n * @return {Boolean}\n * @api private\n */\n\nfunction isRedirect(code) {\n  return [301, 302, 303, 305, 307, 308].includes(code);\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/lib/utils.js":{"lineLengths":[13,0,3,44,2,22,19,15,3,0,57,0,3,34,2,22,19,15,3,0,27,20,47,41,30,32,42,3,16,2,0,3,28,2,22,19,15,3,0,31,20,47,41,38,56,22,3,16,2,0,3,46,2,25,26,15,3,0,50,32,34,37,21,13,22,32,25,3,16,2,0,3,31,2,25,20,15,3,30,55,2,0,3,35,2,63,15,3,63,23,70,3,76,2,37,29,38,32,5,3,2,6320],"data":{"version":3,"names":["exports","type","string_","split","shift","params","value","object","parts","key","parseLinks","url","slice","rel","cleanHeader","header","changesOrigin","host","authorization","cookie","isObject","hasOwn","Object","property","TypeError","prototype","hasOwnProperty","call","mixin","target","source"],"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/src/utils.js"],"sourcesContent":["/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.type = (string_) => string_.split(/ *; */).shift();\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.params = (value) => {\n  const object = {};\n  for (const string_ of value.split(/ *; */)) {\n    const parts = string_.split(/ *= */);\n    const key = parts.shift();\n    const value = parts.shift();\n\n    if (key && value) object[key] = value;\n  }\n\n  return object;\n};\n\n/**\n * Parse Link header fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.parseLinks = (value) => {\n  const object = {};\n  for (const string_ of value.split(/ *, */)) {\n    const parts = string_.split(/ *; */);\n    const url = parts[0].slice(1, -1);\n    const rel = parts[1].split(/ *= */)[1].slice(1, -1);\n    object[rel] = url;\n  }\n\n  return object;\n};\n\n/**\n * Strip content related fields from `header`.\n *\n * @param {Object} header\n * @return {Object} header\n * @api private\n */\n\nexports.cleanHeader = (header, changesOrigin) => {\n  delete header['content-type'];\n  delete header['content-length'];\n  delete header['transfer-encoding'];\n  delete header.host;\n  // secuirty\n  if (changesOrigin) {\n    delete header.authorization;\n    delete header.cookie;\n  }\n\n  return header;\n};\n\n/**\n * Check if `obj` is an object.\n *\n * @param {Object} object\n * @return {Boolean}\n * @api private\n */\nexports.isObject = (object) => {\n  return object !== null && typeof object === 'object';\n};\n\n/**\n * Object.hasOwn fallback/polyfill.\n *\n * @type {(object: object, property: string) => boolean} object\n * @api private\n */\nexports.hasOwn =\n  Object.hasOwn ||\n  function (object, property) {\n    if (object == null) {\n      throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    return Object.prototype.hasOwnProperty.call(new Object(object), property);\n  };\n\nexports.mixin = (target, source) => {\n  for (const key in source) {\n    if (exports.hasOwn(source, key)) {\n      target[key] = source[key];\n    }\n  }\n};\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/lib/request-base.js":{"lineLengths":[13,0,3,67,3,7,11,8,23,0,3,24,3,0,29,0,3,34,2,14,3,0,25,0,3,26,2,33,14,3,0,50,28,43,41,21,36,34,14,2,0,3,40,2,74,2,20,14,3,0,45,20,14,2,0,3,38,57,51,2,39,2,12,2,20,31,25,2,22,33,14,3,0,55,29,14,2,0,3,43,2,93,2,20,14,3,0,49,24,14,2,0,3,16,2,133,169,120,2,40,2,52,33,14,3,0,52,48,28,30,28,16,3,33,34,23,24,43,16,24,51,16,22,47,16,16,57,7,5,3,14,2,0,3,41,2,79,2,24,25,33,14,3,0,52,44,58,28,27,20,27,14,2,0,2,81,55,2,78,89,97,2,2,46,2,137,81,0,110,81,0,3,44,58,2,30,35,50,3,60,65,17,3,28,9,55,41,43,41,19,25,5,3,0,112,4,6,15,22,47,3,17,4,69,14,63,25,68,39,3,15,2,0,3,16,2,33,15,3,0,44,22,0,9,17,20,30,3,24,24,28,21,2,0,3,18,2,28,29,20,3,0,57,33,22,26,149,5,64,30,67,17,9,50,37,17,9,43,31,35,35,29,22,9,32,51,9,7,3,55,2,51,40,2,0,3,22,3,0,43,11,14,2,48,75,30,14,2,54,13,17,3,25,33,3,47,2,0,3,30,20,2,24,19,14,3,0,46,43,2,0,3,45,64,2,71,2,24,19,15,14,3,0,60,0,3,67,20,2,12,2,20,44,37,25,2,20,69,25,2,31,22,33,14,3,0,53,24,30,56,5,16,3,44,29,14,2,0,3,25,20,2,11,2,20,30,25,2,35,3,48,43,28,14,2,0,3,71,44,2,9,26,25,20,2,26,39,20,6,2,44,68,53,33,14,3,63,49,44,63,3,19,119,3,23,29,56,5,16,3,29,28,55,5,16,3,0,30,46,62,3,35,26,3,0,56,109,14,2,0,3,50,2,28,14,3,43,22,16,3,23,44,17,29,3,22,21,14,2,77,25,17,77,12,16,27,27,12,18,62,50,12,12,12,3,14,2,0,3,57,2,52,55,55,13,59,33,14,3,0,55,60,34,29,14,2,0,3,76,2,20,33,14,3,0,48,25,14,2,0,3,78,17,2,36,33,3,54,30,44,3,28,14,2,0,3,79,69,24,2,68,14,3,0,44,10,24,18,21,25,4,2,0,3,75,22,2,12,2,23,30,24,33,25,2,21,30,32,25,2,40,30,24,27,25,2,38,30,24,32,25,2,45,29,28,33,24,2,30,33,14,3,0,38,46,35,42,23,132,3,33,30,22,37,22,5,62,52,3,0,10,42,29,118,57,5,127,39,33,40,47,55,63,12,45,5,10,22,3,41,16,3,0,20,31,14,2,0,3,42,2,2,12,2,25,29,30,33,23,25,2,36,29,30,33,37,40,13,25,2,2,25,33,14,3,0,51,69,57,14,2,0,3,43,2,15,3,58,38,14,61,3,54,0,19,40,21,62,45,36,14,26,7,71,5,3,2,0,28,50,30,2,0,3,38,2,15,3,0,73,22,11,3,60,26,30,22,23,29,15,23,2,50,20,0,13,38,36,64,22,3,0,21,61,51,85,30,3,2,46028],"data":{"version":3,"names":["isObject","hasOwn","require","module","exports","RequestBase","prototype","clearTimeout","_timer","_responseTimeoutTimer","_uploadTimeoutTimer","parse","fn","_parser","responseType","value","_responseType","serialize","_serializer","timeout","options","_timeout","_responseTimeout","_uploadTimeout","option","deadline","response","upload","console","warn","retry","count","arguments","length","_maxRetries","_retries","_retryCallback","ERROR_CODES","Set","STATUS_CODES","_shouldRetry","error","res","override","err","status","has","code","crossDomain","_retry","req","request","_aborted","timedout","timedoutError","_end","then","resolve","reject","_fullfilledPromise","self","_endCalled","Promise","on","Error","method","url","end","catch","callback","undefined","use","ok","_okCallback","_isResponseOK","get","field","_header","toLowerCase","getHeader","set","key","header","unset","name","_data","Array","isArray","i","String","_getFormData","append","abort","xhr","emit","_auth","user","pass","base64Encoder","type","username","password","withCredentials","_withCredentials","redirects","n","_maxRedirects","maxResponseSize","TypeError","_maxResponseSize","toJSON","data","headers","send","isObject_","_formData","_isHost","trim","sortQuery","sort","_sort","_finalizeQueryString","query","_query","join","includes","index","indexOf","queryArray","slice","split","_appendQueryString","_timeoutError","reason","errno","_setTimeouts","setTimeout"],"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/src/request-base.js"],"sourcesContent":["/**\n * Module of mixed-in functions shared between node and client code\n */\nconst { isObject, hasOwn } = require('./utils');\n\n/**\n * Expose `RequestBase`.\n */\n\nmodule.exports = RequestBase;\n\n/**\n * Initialize a new `RequestBase`.\n *\n * @api public\n */\n\nfunction RequestBase() {}\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.clearTimeout = function () {\n  clearTimeout(this._timer);\n  clearTimeout(this._responseTimeoutTimer);\n  clearTimeout(this._uploadTimeoutTimer);\n  delete this._timer;\n  delete this._responseTimeoutTimer;\n  delete this._uploadTimeoutTimer;\n  return this;\n};\n\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.parse = function (fn) {\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Set format of binary response body.\n * In browser valid formats are 'blob' and 'arraybuffer',\n * which return Blob and ArrayBuffer, respectively.\n *\n * In Node all values result in Buffer.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.responseType = function (value) {\n  this._responseType = value;\n  return this;\n};\n\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.serialize = function (fn) {\n  this._serializer = fn;\n  return this;\n};\n\n/**\n * Set timeouts.\n *\n * - response timeout is time between sending request and receiving the first byte of the response. Includes DNS and connection time.\n * - deadline is the time from start of the request to receiving response body in full. If the deadline is too short large files may not load at all on slow connections.\n * - upload is the time  since last bit of data was sent or received. This timeout works only if deadline timeout is off\n *\n * Value of 0 or false means no timeout.\n *\n * @param {Number|Object} ms or {response, deadline}\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.timeout = function (options) {\n  if (!options || typeof options !== 'object') {\n    this._timeout = options;\n    this._responseTimeout = 0;\n    this._uploadTimeout = 0;\n    return this;\n  }\n\n  for (const option in options) {\n    if (hasOwn(options, option)) {\n      switch (option) {\n        case 'deadline':\n          this._timeout = options.deadline;\n          break;\n        case 'response':\n          this._responseTimeout = options.response;\n          break;\n        case 'upload':\n          this._uploadTimeout = options.upload;\n          break;\n        default:\n          console.warn('Unknown timeout option', option);\n      }\n    }\n  }\n\n  return this;\n};\n\n/**\n * Set number of retry attempts on error.\n *\n * Failed requests will be retried 'count' times if timeout or err.code >= 500.\n *\n * @param {Number} count\n * @param {Function} [fn]\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.retry = function (count, fn) {\n  // Default to 1 if no count passed or true\n  if (arguments.length === 0 || count === true) count = 1;\n  if (count <= 0) count = 0;\n  this._maxRetries = count;\n  this._retries = 0;\n  this._retryCallback = fn;\n  return this;\n};\n\n//\n// NOTE: we do not include ESOCKETTIMEDOUT because that is from `request` package\n//       <https://github.com/sindresorhus/got/pull/537>\n//\n// NOTE: we do not include EADDRINFO because it was removed from libuv in 2014\n//       <https://github.com/libuv/libuv/commit/02e1ebd40b807be5af46343ea873331b2ee4e9c1>\n//       <https://github.com/request/request/search?q=ESOCKETTIMEDOUT&unscoped_q=ESOCKETTIMEDOUT>\n//\n//\n// TODO: expose these as configurable defaults\n//\nconst ERROR_CODES = new Set([\n  'ETIMEDOUT',\n  'ECONNRESET',\n  'EADDRINUSE',\n  'ECONNREFUSED',\n  'EPIPE',\n  'ENOTFOUND',\n  'ENETUNREACH',\n  'EAI_AGAIN'\n]);\n\nconst STATUS_CODES = new Set([\n  408, 413, 429, 500, 502, 503, 504, 521, 522, 524\n]);\n\n// TODO: we would need to make this easily configurable before adding it in (e.g. some might want to add POST)\n// const METHODS = new Set(['GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE']);\n\n/**\n * Determine if a request should be retried.\n * (Inspired by https://github.com/sindresorhus/got#retry)\n *\n * @param {Error} err an error\n * @param {Response} [res] response\n * @returns {Boolean} if segment should be retried\n */\nRequestBase.prototype._shouldRetry = function (error, res) {\n  if (!this._maxRetries || this._retries++ >= this._maxRetries) {\n    return false;\n  }\n\n  if (this._retryCallback) {\n    try {\n      const override = this._retryCallback(error, res);\n      if (override === true) return true;\n      if (override === false) return false;\n      // undefined falls back to defaults\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  // TODO: we would need to make this easily configurable before adding it in (e.g. some might want to add POST)\n  /*\n  if (\n    this.req &&\n    this.req.method &&\n    !METHODS.has(this.req.method.toUpperCase())\n  )\n    return false;\n  */\n  if (res && res.status && STATUS_CODES.has(res.status)) return true;\n  if (error) {\n    if (error.code && ERROR_CODES.has(error.code)) return true;\n    // Superagent timeout\n    if (error.timeout && error.code === 'ECONNABORTED') return true;\n    if (error.crossDomain) return true;\n  }\n\n  return false;\n};\n\n/**\n * Retry request\n *\n * @return {Request} for chaining\n * @api private\n */\n\nRequestBase.prototype._retry = function () {\n  this.clearTimeout();\n\n  // node\n  if (this.req) {\n    this.req = null;\n    this.req = this.request();\n  }\n\n  this._aborted = false;\n  this.timedout = false;\n  this.timedoutError = null;\n\n  return this._end();\n};\n\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} [reject]\n * @return {Request}\n */\n\nRequestBase.prototype.then = function (resolve, reject) {\n  if (!this._fullfilledPromise) {\n    const self = this;\n    if (this._endCalled) {\n      console.warn(\n        'Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises'\n      );\n    }\n\n    this._fullfilledPromise = new Promise((resolve, reject) => {\n      self.on('abort', () => {\n        if (this._maxRetries && this._maxRetries > this._retries) {\n          return;\n        }\n\n        if (this.timedout && this.timedoutError) {\n          reject(this.timedoutError);\n          return;\n        }\n\n        const error = new Error('Aborted');\n        error.code = 'ABORTED';\n        error.status = this.status;\n        error.method = this.method;\n        error.url = this.url;\n        reject(error);\n      });\n      self.end((error, res) => {\n        if (error) reject(error);\n        else resolve(res);\n      });\n    });\n  }\n\n  return this._fullfilledPromise.then(resolve, reject);\n};\n\nRequestBase.prototype.catch = function (callback) {\n  return this.then(undefined, callback);\n};\n\n/**\n * Allow for extension\n */\n\nRequestBase.prototype.use = function (fn) {\n  fn(this);\n  return this;\n};\n\nRequestBase.prototype.ok = function (callback) {\n  if (typeof callback !== 'function') throw new Error('Callback required');\n  this._okCallback = callback;\n  return this;\n};\n\nRequestBase.prototype._isResponseOK = function (res) {\n  if (!res) {\n    return false;\n  }\n\n  if (this._okCallback) {\n    return this._okCallback(res);\n  }\n\n  return res.status >= 200 && res.status < 300;\n};\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nRequestBase.prototype.get = function (field) {\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nRequestBase.prototype.getHeader = RequestBase.prototype.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.set = function (field, value) {\n  if (isObject(field)) {\n    for (const key in field) {\n      if (hasOwn(field, key)) this.set(key, field[key]);\n    }\n\n    return this;\n  }\n\n  this._header[field.toLowerCase()] = value;\n  this.header[field] = value;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field field name\n */\nRequestBase.prototype.unset = function (field) {\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val`, or multiple fields with one object\n * for \"multipart/form-data\" request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n *\n * request.post('/upload')\n *   .field({ foo: 'bar', baz: 'qux' })\n *   .end(callback);\n * ```\n *\n * @param {String|Object} name name of field\n * @param {String|Blob|File|Buffer|fs.ReadStream} val value of field\n * @param {String} options extra options, e.g. 'blob'\n * @return {Request} for chaining\n * @api public\n */\nRequestBase.prototype.field = function (name, value, options) {\n  // name should be either a string or an object.\n  if (name === null || undefined === name) {\n    throw new Error('.field(name, val) name can not be empty');\n  }\n\n  if (this._data) {\n    throw new Error(\n      \".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()\"\n    );\n  }\n\n  if (isObject(name)) {\n    for (const key in name) {\n      if (hasOwn(name, key)) this.field(key, name[key]);\n    }\n\n    return this;\n  }\n\n  if (Array.isArray(value)) {\n    for (const i in value) {\n      if (hasOwn(value, i)) this.field(name, value[i]);\n    }\n\n    return this;\n  }\n\n  // val should be defined now\n  if (value === null || undefined === value) {\n    throw new Error('.field(name, val) val can not be empty');\n  }\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  // fix https://github.com/ladjs/superagent/issues/1680\n  if (options) this._getFormData().append(name, value, options);\n  else this._getFormData().append(name, value);\n\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request} request\n * @api public\n */\nRequestBase.prototype.abort = function () {\n  if (this._aborted) {\n    return this;\n  }\n\n  this._aborted = true;\n  if (this.xhr) this.xhr.abort(); // browser\n  if (this.req) {\n    this.req.abort(); // node\n  }\n\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\nRequestBase.prototype._auth = function (user, pass, options, base64Encoder) {\n  switch (options.type) {\n    case 'basic':\n      this.set('Authorization', `Basic ${base64Encoder(`${user}:${pass}`)}`);\n      break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n      break;\n\n    case 'bearer': // usage would be .auth(accessToken, { type: 'bearer' })\n      this.set('Authorization', `Bearer ${user}`);\n      break;\n    default:\n      break;\n  }\n\n  return this;\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n * @param {Boolean} [on=true] - Set 'withCredentials' state\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.withCredentials = function (on) {\n  // This is browser-only functionality. Node side is no-op.\n  if (on === undefined) on = true;\n  this._withCredentials = on;\n  return this;\n};\n\n/**\n * Set the max redirects to `n`. Does nothing in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.redirects = function (n) {\n  this._maxRedirects = n;\n  return this;\n};\n\n/**\n * Maximum size of buffered response body, in bytes. Counts uncompressed size.\n * Default 200MB.\n *\n * @param {Number} n number of bytes\n * @return {Request} for chaining\n */\nRequestBase.prototype.maxResponseSize = function (n) {\n  if (typeof n !== 'number') {\n    throw new TypeError('Invalid argument');\n  }\n\n  this._maxResponseSize = n;\n  return this;\n};\n\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\nRequestBase.prototype.toJSON = function () {\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data,\n    headers: this._header\n  };\n};\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post('/user')\n *        .send('name=tobi')\n *        .send('species=ferret')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\n// eslint-disable-next-line complexity\nRequestBase.prototype.send = function (data) {\n  const isObject_ = isObject(data);\n  let type = this._header['content-type'];\n\n  if (this._formData) {\n    throw new Error(\n      \".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()\"\n    );\n  }\n\n  if (isObject_ && !this._data) {\n    if (Array.isArray(data)) {\n      this._data = [];\n    } else if (!this._isHost(data)) {\n      this._data = {};\n    }\n  } else if (data && this._data && this._isHost(this._data)) {\n    throw new Error(\"Can't merge these send calls\");\n  }\n\n  // merge\n  if (isObject_ && isObject(this._data)) {\n    for (const key in data) {\n      if (typeof data[key] == 'bigint' && !data[key].toJSON)\n        throw new Error('Cannot serialize BigInt value to json');\n      if (hasOwn(data, key)) this._data[key] = data[key];\n    }\n  }\n  else if (typeof data === 'bigint') throw new Error(\"Cannot send value of type BigInt\");\n  else if (typeof data === 'string') {\n    // default to x-www-form-urlencoded\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if (type) type = type.toLowerCase().trim();\n    if (type === 'application/x-www-form-urlencoded') {\n      this._data = this._data ? `${this._data}&${data}` : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!isObject_ || this._isHost(data)) {\n    return this;\n  }\n\n  // default to json\n  if (!type) this.type('json');\n  return this;\n};\n\n/**\n * Sort `querystring` by the sort function\n *\n *\n * Examples:\n *\n *       // default order\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery()\n *         .end(callback)\n *\n *       // customized sort function\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery(function(a, b){\n *           return a.length - b.length;\n *         })\n *         .end(callback)\n *\n *\n * @param {Function} sort\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.sortQuery = function (sort) {\n  // _sort default to true but otherwise can be a function or boolean\n  this._sort = typeof sort === 'undefined' ? true : sort;\n  return this;\n};\n\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\nRequestBase.prototype._finalizeQueryString = function () {\n  const query = this._query.join('&');\n  if (query) {\n    this.url += (this.url.includes('?') ? '&' : '?') + query;\n  }\n\n  this._query.length = 0; // Makes the call idempotent\n\n  if (this._sort) {\n    const index = this.url.indexOf('?');\n    if (index >= 0) {\n      const queryArray = this.url.slice(index + 1).split('&');\n      if (typeof this._sort === 'function') {\n        queryArray.sort(this._sort);\n      } else {\n        queryArray.sort();\n      }\n\n      this.url = this.url.slice(0, index) + '?' + queryArray.join('&');\n    }\n  }\n};\n\n// For backwards compat only\nRequestBase.prototype._appendQueryString = () => {\n  console.warn('Unsupported');\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequestBase.prototype._timeoutError = function (reason, timeout, errno) {\n  if (this._aborted) {\n    return;\n  }\n\n  const error = new Error(`${reason + timeout}ms exceeded`);\n  error.timeout = timeout;\n  error.code = 'ECONNABORTED';\n  error.errno = errno;\n  this.timedout = true;\n  this.timedoutError = error;\n  this.abort();\n  this.callback(error);\n};\n\nRequestBase.prototype._setTimeouts = function () {\n  const self = this;\n\n  // deadline\n  if (this._timeout && !this._timer) {\n    this._timer = setTimeout(() => {\n      self._timeoutError('Timeout of ', self._timeout, 'ETIME');\n    }, this._timeout);\n  }\n\n  // response timeout\n  if (this._responseTimeout && !this._responseTimeoutTimer) {\n    this._responseTimeoutTimer = setTimeout(() => {\n      self._timeoutError(\n        'Response timeout of ',\n        self._responseTimeout,\n        'ETIMEDOUT'\n      );\n    }, this._responseTimeout);\n  }\n};\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/lib/node/http2wrapper.js":{"lineLengths":[13,0,31,33,27,27,7,20,22,22,25,20,26,16,20,32,10,22,44,5,4,1,30,34,12,57,36,45,45,24,24,33,29,29,21,26,24,28,16,6,29,53,77,5,23,82,46,60,27,3,44,28,19,47,20,39,39,37,56,14,63,5,3,20,45,82,75,3,14,21,24,5,20,37,40,6,55,45,48,48,46,30,54,38,35,7,28,50,58,50,23,17,3,28,38,28,27,31,30,20,37,57,16,16,16,7,32,5,24,3,29,38,28,27,31,30,20,31,39,85,16,16,16,7,32,5,24,3,26,46,3,19,45,3,25,34,39,3,25,34,39,3,13,34,20,3,15,34,32,27,3,1,34,14072],"data":{"version":3,"names":["http2","require","Stream","net","tls","HTTP2_HEADER_PATH","HTTP2_HEADER_STATUS","HTTP2_HEADER_METHOD","HTTP2_HEADER_AUTHORITY","HTTP2_HEADER_HOST","HTTP2_HEADER_SET_COOKIE","NGHTTP2_CANCEL","constants","setProtocol","protocol","request","options","Request","constructor","defaultPort","defaultHost","port","host","method","path","sessionOptions","socketPath","createConnection","createUnixConnection","bind","_headers","session","connect","setHeader","on","error","emit","authority","ALPNProtocols","servername","allowHalfOpen","Error","setNoDelay","bool","getFrame","frame","headers","mapToHttp2Header","Object","assign","once","flags","mapToHttpHeader","statusCode","status","_headerSent","close","keys","http2Headers","key","value","toLowerCase","Array","isArray","test","URL","name","getHeader","write","data","encoding","pipe","stream","end","abort","destroy","exports"],"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/src/node/http2wrapper.js"],"sourcesContent":["const http2 = require('http2');\nconst Stream = require('stream');\nconst net = require('net');\nconst tls = require('tls');\n\nconst {\n  HTTP2_HEADER_PATH,\n  HTTP2_HEADER_STATUS,\n  HTTP2_HEADER_METHOD,\n  HTTP2_HEADER_AUTHORITY,\n  HTTP2_HEADER_HOST,\n  HTTP2_HEADER_SET_COOKIE,\n  NGHTTP2_CANCEL\n} = http2.constants;\n\nfunction setProtocol(protocol) {\n  return {\n    request(options) {\n      return new Request(protocol, options);\n    }\n  };\n}\n\nclass Request extends Stream {\n  constructor(protocol, options) {\n    super();\n    const defaultPort = protocol === 'https:' ? 443 : 80;\n    const defaultHost = 'localhost';\n    const port = options.port || defaultPort;\n    const host = options.host || defaultHost;\n\n    delete options.port;\n    delete options.host;\n\n    this.method = options.method;\n    this.path = options.path;\n    this.protocol = protocol;\n    this.host = host;\n\n    delete options.method;\n    delete options.path;\n\n    const sessionOptions = { ...options };\n    if (options.socketPath) {\n      sessionOptions.socketPath = options.socketPath;\n      sessionOptions.createConnection = this.createUnixConnection.bind(this);\n    }\n\n    this._headers = {};\n\n    const session = http2.connect(\n      `${protocol}//${host}:${port}`,\n      sessionOptions\n    );\n    this.setHeader('host', `${host}:${port}`);\n\n    session.on('error', (error) => this.emit('error', error));\n\n    this.session = session;\n  }\n\n  createUnixConnection(authority, options) {\n    switch (this.protocol) {\n      case 'http:':\n        return net.connect(options.socketPath);\n      case 'https:':\n        options.ALPNProtocols = ['h2'];\n        options.servername = this.host;\n        options.allowHalfOpen = true;\n        return tls.connect(options.socketPath, options);\n      default:\n        throw new Error('Unsupported protocol', this.protocol);\n    }\n  }\n\n  setNoDelay(bool) {\n    // We can not use setNoDelay with HTTP/2.\n    // Node 10 limits http2session.socket methods to ones safe to use with HTTP/2.\n    // See also https://nodejs.org/api/http2.html#http2_http2session_socket\n  }\n\n  getFrame() {\n    if (this.frame) {\n      return this.frame;\n    }\n\n    const method = {\n      [HTTP2_HEADER_PATH]: this.path,\n      [HTTP2_HEADER_METHOD]: this.method\n    };\n\n    let headers = this.mapToHttp2Header(this._headers);\n\n    headers = Object.assign(headers, method);\n\n    const frame = this.session.request(headers);\n\n    frame.once('response', (headers, flags) => {\n      headers = this.mapToHttpHeader(headers);\n      frame.headers = headers;\n      frame.statusCode = headers[HTTP2_HEADER_STATUS];\n      frame.status = frame.statusCode;\n      this.emit('response', frame);\n    });\n\n    this._headerSent = true;\n\n    frame.once('drain', () => this.emit('drain'));\n    frame.on('error', (error) => this.emit('error', error));\n    frame.on('close', () => this.session.close());\n\n    this.frame = frame;\n    return frame;\n  }\n\n  mapToHttpHeader(headers) {\n    const keys = Object.keys(headers);\n    const http2Headers = {};\n    for (let key of keys) {\n      let value = headers[key];\n      key = key.toLowerCase();\n      switch (key) {\n        case HTTP2_HEADER_SET_COOKIE:\n          value = Array.isArray(value) ? value : [value];\n          break;\n        default:\n          break;\n      }\n\n      http2Headers[key] = value;\n    }\n\n    return http2Headers;\n  }\n\n  mapToHttp2Header(headers) {\n    const keys = Object.keys(headers);\n    const http2Headers = {};\n    for (let key of keys) {\n      let value = headers[key];\n      key = key.toLowerCase();\n      switch (key) {\n        case HTTP2_HEADER_HOST:\n          key = HTTP2_HEADER_AUTHORITY;\n          value = /^http:\\/\\/|^https:\\/\\//.test(value)\n            ? new URL(value).host\n            : value;\n          break;\n        default:\n          break;\n      }\n\n      http2Headers[key] = value;\n    }\n\n    return http2Headers;\n  }\n\n  setHeader(name, value) {\n    this._headers[name.toLowerCase()] = value;\n  }\n\n  getHeader(name) {\n    return this._headers[name.toLowerCase()];\n  }\n\n  write(data, encoding) {\n    const frame = this.getFrame();\n    return frame.write(data, encoding);\n  }\n\n  pipe(stream, options) {\n    const frame = this.getFrame();\n    return frame.pipe(stream, options);\n  }\n\n  end(data) {\n    const frame = this.getFrame();\n    frame.end(data);\n  }\n\n  abort(data) {\n    const frame = this.getFrame();\n    frame.close(NGHTTP2_CANCEL);\n    this.session.destroy();\n  }\n}\n\nexports.setProtocol = setProtocol;\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/lib/node/unzip.js":{"lineLengths":[13,0,3,23,3,0,7,15,30,33,29,0,3,67,2,23,24,15,3,0,35,35,30,14,0,36,23,30,48,63,25,13,5,32,5,0,18,18,0,47,29,38,4,0,53,27,18,41,59,12,31,5,5,25,23,5,0,44,21,32,44,36,34,36,30,12,30,5,16,4,2,4944],"data":{"version":3,"names":["StringDecoder","require","Stream","zlib","exports","unzip","request","res","createUnzip","stream","decoder","req","on","error","code","emit","pipe","setEncoding","type","buf","string_","write","length","_on","fn","bind","call"],"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/src/node/unzip.js"],"sourcesContent":["/**\n * Module dependencies.\n */\n\nconst { StringDecoder } = require('string_decoder');\nconst Stream = require('stream');\nconst zlib = require('zlib');\n\n/**\n * Buffers response data events and re-emits when they're unzipped.\n *\n * @param {Request} req\n * @param {Response} res\n * @api private\n */\n\nexports.unzip = (request, res) => {\n  const unzip = zlib.createUnzip();\n  const stream = new Stream();\n  let decoder;\n\n  // make node responseOnEnd() happy\n  stream.req = request;\n\n  unzip.on('error', (error) => {\n    if (error && error.code === 'Z_BUF_ERROR') {\n      // unexpected end of file is ignored by browsers and curl\n      stream.emit('end');\n      return;\n    }\n\n    stream.emit('error', error);\n  });\n\n  // pipe to unzip\n  res.pipe(unzip);\n\n  // override `setEncoding` to capture encoding\n  res.setEncoding = (type) => {\n    decoder = new StringDecoder(type);\n  };\n\n  // decode upon decompressing with captured encoding\n  unzip.on('data', (buf) => {\n    if (decoder) {\n      const string_ = decoder.write(buf);\n      if (string_.length > 0) stream.emit('data', string_);\n    } else {\n      stream.emit('data', buf);\n    }\n  });\n\n  unzip.on('end', () => {\n    stream.emit('end');\n  });\n\n  // override `on` to capture data listeners\n  const _on = res.on;\n  res.on = function (type, fn) {\n    if (type === 'data' || type === 'end') {\n      stream.on(type, fn.bind(res));\n    } else if (type === 'error') {\n      stream.on(type, fn.bind(res));\n      _on.call(res, type, fn);\n    } else {\n      _on.call(res, type, fn);\n    }\n\n    return this;\n  };\n};\n"],"mappings":";;AAAA;AACA;AACA;;AAEA,MAAM;EAAEA;AAAc,CAAC,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AACnD,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAG,OAAO,CAACC,KAAK,GAAG,CAACC,OAAO,EAAEC,GAAG,KAAK;EAChC,MAAMF,KAAK,GAAGF,IAAI,CAACK,WAAW,CAAC,CAAC;EAChC,MAAMC,MAAM,GAAG,IAAIP,MAAM,CAAC,CAAC;EAC3B,IAAIQ,OAAO;;EAEX;EACAD,MAAM,CAACE,GAAG,GAAGL,OAAO;EAEpBD,KAAK,CAACO,EAAE,CAAC,OAAO,EAAGC,KAAK,IAAK;IAC3B,IAAIA,KAAK,IAAIA,KAAK,CAACC,IAAI,KAAK,aAAa,EAAE;MACzC;MACAL,MAAM,CAACM,IAAI,CAAC,KAAK,CAAC;MAClB;IACF;IAEAN,MAAM,CAACM,IAAI,CAAC,OAAO,EAAEF,KAAK,CAAC;EAC7B,CAAC,CAAC;;EAEF;EACAN,GAAG,CAACS,IAAI,CAACX,KAAK,CAAC;;EAEf;EACAE,GAAG,CAACU,WAAW,GAAIC,IAAI,IAAK;IAC1BR,OAAO,GAAG,IAAIV,aAAa,CAACkB,IAAI,CAAC;EACnC,CAAC;;EAED;EACAb,KAAK,CAACO,EAAE,CAAC,MAAM,EAAGO,GAAG,IAAK;IACxB,IAAIT,OAAO,EAAE;MACX,MAAMU,OAAO,GAAGV,OAAO,CAACW,KAAK,CAACF,GAAG,CAAC;MAClC,IAAIC,OAAO,CAACE,MAAM,GAAG,CAAC,EAAEb,MAAM,CAACM,IAAI,CAAC,MAAM,EAAEK,OAAO,CAAC;IACtD,CAAC,MAAM;MACLX,MAAM,CAACM,IAAI,CAAC,MAAM,EAAEI,GAAG,CAAC;IAC1B;EACF,CAAC,CAAC;EAEFd,KAAK,CAACO,EAAE,CAAC,KAAK,EAAE,MAAM;IACpBH,MAAM,CAACM,IAAI,CAAC,KAAK,CAAC;EACpB,CAAC,CAAC;;EAEF;EACA,MAAMQ,GAAG,GAAGhB,GAAG,CAACK,EAAE;EAClBL,GAAG,CAACK,EAAE,GAAG,UAAUM,IAAI,EAAEM,EAAE,EAAE;IAC3B,IAAIN,IAAI,KAAK,MAAM,IAAIA,IAAI,KAAK,KAAK,EAAE;MACrCT,MAAM,CAACG,EAAE,CAACM,IAAI,EAAEM,EAAE,CAACC,IAAI,CAAClB,GAAG,CAAC,CAAC;IAC/B,CAAC,MAAM,IAAIW,IAAI,KAAK,OAAO,EAAE;MAC3BT,MAAM,CAACG,EAAE,CAACM,IAAI,EAAEM,EAAE,CAACC,IAAI,CAAClB,GAAG,CAAC,CAAC;MAC7BgB,GAAG,CAACG,IAAI,CAACnB,GAAG,EAAEW,IAAI,EAAEM,EAAE,CAAC;IACzB,CAAC,MAAM;MACLD,GAAG,CAACG,IAAI,CAACnB,GAAG,EAAEW,IAAI,EAAEM,EAAE,CAAC;IACzB;IAEA,OAAO,IAAI;EACb,CAAC;AACH,CAAC","ignoreList":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/lib/node/response.js":{"lineLengths":[13,0,3,23,3,0,29,33,49,7,7,24,0,3,21,3,0,26,0,3,52,2,34,18,2,23,26,15,20,31,15,3,0,28,20,25,9,7,11,25,25,23,31,39,29,29,44,41,47,47,45,49,49,1,0,24,67,51,9,100,4,14,23,3,3,0,3,25,3,0,32,50,0,3,43,3,0,47,26,2,0,3,9,3,0,40,19,2,0,3,10,3,0,41,20,2,0,3,53,2,18,14,3,0,42,9,7,11,9,10,10,9,8,10,62,35,29,25,24,20,15,2,60,76,43,2,0,3,11,2,19,14,3,0,41,10,31,24,24,19,4,2,8864],"data":{"version":3,"names":["util","require","Stream","ResponseBase","mixin","module","exports","Response","request","call","res","req","text","files","buffered","_resBuffered","headers","header","_setStatusProperties","statusCode","_setHeaderProperties","setEncoding","bind","on","emit","Object","defineProperty","prototype","get","_body","undefined","body","set","value","inherits","destroy","error","pause","resume","toError","method","path","message","status","Error","setStatusProperties","console","warn","toJSON"],"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/src/node/response.js"],"sourcesContent":["/**\n * Module dependencies.\n */\n\nconst util = require('util');\nconst Stream = require('stream');\nconst ResponseBase = require('../response-base');\nconst { mixin } = require('../utils');\n\n/**\n * Expose `Response`.\n */\n\nmodule.exports = Response;\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * @param {Request} req\n * @param {Object} options\n * @constructor\n * @extends {Stream}\n * @implements {ReadableStream}\n * @api private\n */\n\nfunction Response(request) {\n  Stream.call(this);\n  this.res = request.res;\n  const { res } = this;\n  this.request = request;\n  this.req = request.req;\n  this.text = res.text;\n  this.files = res.files || {};\n  this.buffered = request._resBuffered;\n  this.headers = res.headers;\n  this.header = this.headers;\n  this._setStatusProperties(res.statusCode);\n  this._setHeaderProperties(this.header);\n  this.setEncoding = res.setEncoding.bind(res);\n  res.on('data', this.emit.bind(this, 'data'));\n  res.on('end', this.emit.bind(this, 'end'));\n  res.on('close', this.emit.bind(this, 'close'));\n  res.on('error', this.emit.bind(this, 'error'));\n}\n\n// Lazy access res.body.\n// https://github.com/nodejs/node/pull/39520#issuecomment-889697136\nObject.defineProperty(Response.prototype, 'body', {\n  get() {\n    return this._body !== undefined\n      ? this._body\n      : this.res.body !== undefined\n      ? this.res.body\n      : {};\n  },\n  set(value) {\n    this._body = value;\n  }\n});\n\n/**\n * Inherit from `Stream`.\n */\n\nutil.inherits(Response, Stream);\n\nmixin(Response.prototype, ResponseBase.prototype);\n\n/**\n * Implements methods of a `ReadableStream`\n */\n\nResponse.prototype.destroy = function (error) {\n  this.res.destroy(error);\n};\n\n/**\n * Pause.\n */\n\nResponse.prototype.pause = function () {\n  this.res.pause();\n};\n\n/**\n * Resume.\n */\n\nResponse.prototype.resume = function () {\n  this.res.resume();\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function () {\n  const { req } = this;\n  const { method } = req;\n  const { path } = req;\n\n  const message = `cannot ${method} ${path} (${this.status})`;\n  const error = new Error(message);\n  error.status = this.status;\n  error.text = this.text;\n  error.method = method;\n  error.path = path;\n\n  return error;\n};\n\nResponse.prototype.setStatusProperties = function (status) {\n  console.warn('In superagent 2.x setStatusProperties is a private method');\n  return this._setStatusProperties(status);\n};\n\n/**\n * To json.\n *\n * @return {Object}\n * @api public\n */\n\nResponse.prototype.toJSON = function () {\n  return {\n    req: this.request.toJSON(),\n    header: this.header,\n    status: this.status,\n    text: this.text\n  };\n};\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/lib/response-base.js":{"lineLengths":[13,0,3,23,3,0,33,0,3,25,3,0,30,0,3,35,2,14,3,0,26,0,3,38,2,24,19,14,3,0,47,42,2,0,3,33,2,46,2,58,51,2,25,15,3,0,65,16,27,0,17,42,29,0,11,38,33,91,3,18,0,10,7,22,49,5,17,13,3,2,0,3,45,2,63,67,66,70,51,2,77,2,17,18,20,21,16,2,25,15,3,0,65,40,0,19,27,32,25,0,11,25,23,29,32,32,65,0,10,32,33,34,35,37,38,34,33,44,2,7372],"data":{"version":3,"names":["utils","require","module","exports","ResponseBase","prototype","get","field","header","toLowerCase","_setHeaderProperties","ct","type","parameters","params","key","Object","hasOwnProperty","call","links","link","parseLinks","err","_setStatusProperties","status","Math","trunc","statusCode","statusType","info","ok","redirect","clientError","serverError","error","toError","created","accepted","noContent","badRequest","unauthorized","notAcceptable","forbidden","notFound","unprocessableEntity"],"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/src/response-base.js"],"sourcesContent":["/**\n * Module dependencies.\n */\n\nconst utils = require('./utils');\n\n/**\n * Expose `ResponseBase`.\n */\n\nmodule.exports = ResponseBase;\n\n/**\n * Initialize a new `ResponseBase`.\n *\n * @api public\n */\n\nfunction ResponseBase() {}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponseBase.prototype.get = function (field) {\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponseBase.prototype._setHeaderProperties = function (header) {\n  // TODO: moar!\n  // TODO: make this a util\n\n  // content-type\n  const ct = header['content-type'] || '';\n  this.type = utils.type(ct);\n\n  // params\n  const parameters = utils.params(ct);\n  for (const key in parameters) {\n    if (Object.prototype.hasOwnProperty.call(parameters, key))\n      this[key] = parameters[key];\n  }\n\n  this.links = {};\n\n  // links\n  try {\n    if (header.link) {\n      this.links = utils.parseLinks(header.link);\n    }\n  } catch (err) {\n    // ignore\n  }\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponseBase.prototype._setStatusProperties = function (status) {\n  const type = Math.trunc(status / 100);\n\n  // status / class\n  this.statusCode = status;\n  this.status = this.statusCode;\n  this.statusType = type;\n\n  // basics\n  this.info = type === 1;\n  this.ok = type === 2;\n  this.redirect = type === 3;\n  this.clientError = type === 4;\n  this.serverError = type === 5;\n  this.error = type === 4 || type === 5 ? this.toError() : false;\n\n  // sugar\n  this.created = status === 201;\n  this.accepted = status === 202;\n  this.noContent = status === 204;\n  this.badRequest = status === 400;\n  this.unauthorized = status === 401;\n  this.notAcceptable = status === 406;\n  this.forbidden = status === 403;\n  this.notFound = status === 404;\n  this.unprocessableEntity = status === 422;\n};\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/lib/node/agent.js":{"lineLengths":[13,0,3,23,3,0,7,11,25,7,18,25,35,33,43,0,3,28,2,14,3,0,31,24,12,31,18,23,28,7,24,30,7,24,30,7,25,32,7,49,31,7,5,3,0,5,43,44,4,26,17,5,21,46,18,23,128,63,5,3,0,5,54,4,25,17,5,28,38,95,64,31,3,1,29,36,46,54,58,58,70,32,34,13,23,5,20,4,1,45,0,78,44,37,41,40,3,3,28,7708],"data":{"version":3,"names":["CookieJar","require","CookieAccessInfo","methods","request","AgentBase","Agent","constructor","options","jar","ca","key","pfx","cert","rejectUnauthorized","disableTLSCerts","_saveCookies","res","cookies","headers","_res$request","url","URL","setCookies","hostname","pathname","_attachCookies","request_","access","protocol","getCookies","toValueString","name","method","toUpperCase","prototype","fn","Request","on","bind","_setDefaults","end","del","delete","proxyAgent","Proxy","apply","target","thisArg","argumentsList","module","exports"],"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/src/node/agent.js"],"sourcesContent":["/**\n * Module dependencies.\n */\n\nconst { CookieJar } = require('cookiejar');\nconst { CookieAccessInfo } = require('cookiejar');\nconst methods = require('methods');\nconst request = require('../..');\nconst AgentBase = require('../agent-base');\n\n/**\n * Initialize a new `Agent`.\n *\n * @api public\n */\n\nclass Agent extends AgentBase {\n  constructor (options) {\n    super();\n\n    this.jar = new CookieJar();\n\n    if (options) {\n      if (options.ca) {\n        this.ca(options.ca);\n      }\n\n      if (options.key) {\n        this.key(options.key);\n      }\n\n      if (options.pfx) {\n        this.pfx(options.pfx);\n      }\n\n      if (options.cert) {\n        this.cert(options.cert);\n      }\n\n      if (options.rejectUnauthorized === false) {\n        this.disableTLSCerts();\n      }\n    }\n  }\n\n  /**\n   * Save the cookies in the given `res` to\n   * the agent's cookie jar for persistence.\n   *\n   * @param {Response} res\n   * @api private\n   */\n  _saveCookies (res) {\n    const cookies = res.headers['set-cookie'];\n    if (cookies) {\n      const url = new URL(res.request?.url || '');\n      this.jar.setCookies(cookies, url.hostname, url.pathname);\n    }\n  }\n\n  /**\n   * Attach cookies when available to the given `req`.\n   *\n   * @param {Request} req\n   * @api private\n   */\n  _attachCookies (request_) {\n    const url = new URL(request_.url);\n    const access = new CookieAccessInfo(\n      url.hostname,\n      url.pathname,\n      url.protocol === 'https:'\n    );\n    const cookies = this.jar.getCookies(access).toValueString();\n    request_.cookies = cookies;\n  }\n}\n\nfor (const name of methods) {\n  const method = name.toUpperCase();\n  Agent.prototype[name] = function (url, fn) {\n    const request_ = new request.Request(method, url);\n\n    request_.on('response', this._saveCookies.bind(this));\n    request_.on('redirect', this._saveCookies.bind(this));\n    request_.on('redirect', this._attachCookies.bind(this, request_));\n    this._setDefaults(request_);\n    this._attachCookies(request_);\n\n    if (fn) {\n      request_.end(fn);\n    }\n\n    return request_;\n  };\n}\n\nAgent.prototype.del = Agent.prototype.delete;\n\n// create a Proxy that can instantiate a new Agent without using `new` keyword\n// (for backward compatibility and chaining)\nconst proxyAgent = new Proxy(Agent, {\n  apply (target, thisArg, argumentsList) {\n    return new target(...argumentsList);\n  }\n});\n\nmodule.exports = proxyAgent;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA,MAAM;EAAEA;AAAU,CAAC,GAAGC,OAAO,CAAC,WAAW,CAAC;AAC1C,MAAM;EAAEC;AAAiB,CAAC,GAAGD,OAAO,CAAC,WAAW,CAAC;AACjD,MAAME,OAAO,GAAGF,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMG,OAAO,GAAGH,OAAO,CAAC,OAAO,CAAC;AAChC,MAAMI,SAAS,GAAGJ,OAAO,CAAC,eAAe,CAAC;;AAE1C;AACA;AACA;AACA;AACA;;AAEA,MAAMK,KAAK,SAASD,SAAS,CAAC;EAC5BE,WAAWA,CAAEC,OAAO,EAAE;IACpB,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,GAAG,GAAG,IAAIT,SAAS,CAAC,CAAC;IAE1B,IAAIQ,OAAO,EAAE;MACX,IAAIA,OAAO,CAACE,EAAE,EAAE;QACd,IAAI,CAACA,EAAE,CAACF,OAAO,CAACE,EAAE,CAAC;MACrB;MAEA,IAAIF,OAAO,CAACG,GAAG,EAAE;QACf,IAAI,CAACA,GAAG,CAACH,OAAO,CAACG,GAAG,CAAC;MACvB;MAEA,IAAIH,OAAO,CAACI,GAAG,EAAE;QACf,IAAI,CAACA,GAAG,CAACJ,OAAO,CAACI,GAAG,CAAC;MACvB;MAEA,IAAIJ,OAAO,CAACK,IAAI,EAAE;QAChB,IAAI,CAACA,IAAI,CAACL,OAAO,CAACK,IAAI,CAAC;MACzB;MAEA,IAAIL,OAAO,CAACM,kBAAkB,KAAK,KAAK,EAAE;QACxC,IAAI,CAACC,eAAe,CAAC,CAAC;MACxB;IACF;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,YAAYA,CAAEC,GAAG,EAAE;IACjB,MAAMC,OAAO,GAAGD,GAAG,CAACE,OAAO,CAAC,YAAY,CAAC;IACzC,IAAID,OAAO,EAAE;MAAA,IAAAE,YAAA;MACX,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAAC,EAAAF,YAAA,GAAAH,GAAG,CAACb,OAAO,cAAAgB,YAAA,uBAAXA,YAAA,CAAaC,GAAG,KAAI,EAAE,CAAC;MAC3C,IAAI,CAACZ,GAAG,CAACc,UAAU,CAACL,OAAO,EAAEG,GAAG,CAACG,QAAQ,EAAEH,GAAG,CAACI,QAAQ,CAAC;IAC1D;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,cAAcA,CAAEC,QAAQ,EAAE;IACxB,MAAMN,GAAG,GAAG,IAAIC,GAAG,CAACK,QAAQ,CAACN,GAAG,CAAC;IACjC,MAAMO,MAAM,GAAG,IAAI1B,gBAAgB,CACjCmB,GAAG,CAACG,QAAQ,EACZH,GAAG,CAACI,QAAQ,EACZJ,GAAG,CAACQ,QAAQ,KAAK,QACnB,CAAC;IACD,MAAMX,OAAO,GAAG,IAAI,CAACT,GAAG,CAACqB,UAAU,CAACF,MAAM,CAAC,CAACG,aAAa,CAAC,CAAC;IAC3DJ,QAAQ,CAACT,OAAO,GAAGA,OAAO;EAC5B;AACF;AAEA,KAAK,MAAMc,IAAI,IAAI7B,OAAO,EAAE;EAC1B,MAAM8B,MAAM,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC;EACjC5B,KAAK,CAAC6B,SAAS,CAACH,IAAI,CAAC,GAAG,UAAUX,GAAG,EAAEe,EAAE,EAAE;IACzC,MAAMT,QAAQ,GAAG,IAAIvB,OAAO,CAACiC,OAAO,CAACJ,MAAM,EAAEZ,GAAG,CAAC;IAEjDM,QAAQ,CAACW,EAAE,CAAC,UAAU,EAAE,IAAI,CAACtB,YAAY,CAACuB,IAAI,CAAC,IAAI,CAAC,CAAC;IACrDZ,QAAQ,CAACW,EAAE,CAAC,UAAU,EAAE,IAAI,CAACtB,YAAY,CAACuB,IAAI,CAAC,IAAI,CAAC,CAAC;IACrDZ,QAAQ,CAACW,EAAE,CAAC,UAAU,EAAE,IAAI,CAACZ,cAAc,CAACa,IAAI,CAAC,IAAI,EAAEZ,QAAQ,CAAC,CAAC;IACjE,IAAI,CAACa,YAAY,CAACb,QAAQ,CAAC;IAC3B,IAAI,CAACD,cAAc,CAACC,QAAQ,CAAC;IAE7B,IAAIS,EAAE,EAAE;MACNT,QAAQ,CAACc,GAAG,CAACL,EAAE,CAAC;IAClB;IAEA,OAAOT,QAAQ;EACjB,CAAC;AACH;AAEArB,KAAK,CAAC6B,SAAS,CAACO,GAAG,GAAGpC,KAAK,CAAC6B,SAAS,CAACQ,MAAM;;AAE5C;AACA;AACA,MAAMC,UAAU,GAAG,IAAIC,KAAK,CAACvC,KAAK,EAAE;EAClCwC,KAAKA,CAAEC,MAAM,EAAEC,OAAO,EAAEC,aAAa,EAAE;IACrC,OAAO,IAAIF,MAAM,CAAC,GAAGE,aAAa,CAAC;EACrC;AACF,CAAC,CAAC;AAEFC,MAAM,CAACC,OAAO,GAAGP,UAAU","ignoreList":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/lib/agent-base.js":{"lineLengths":[13,0,231,13,17,24,3,25,39,35,5,3,1,28,53,37,94,35,5,25,9,10,7,16,4,1,23,2580],"data":{"version":3,"names":["defaults","Agent","constructor","_defaults","_setDefaults","request","def","fn","args","prototype","_len","arguments","length","Array","_key","push","module","exports"],"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/src/agent-base.js"],"sourcesContent":["const defaults = [\n  'use',\n  'on',\n  'once',\n  'set',\n  'query',\n  'type',\n  'accept',\n  'auth',\n  'withCredentials',\n  'sortQuery',\n  'retry',\n  'ok',\n  'redirects',\n  'timeout',\n  'buffer',\n  'serialize',\n  'parse',\n  'ca',\n  'key',\n  'pfx',\n  'cert',\n  'disableTLSCerts'\n]\n\nclass Agent {\n  constructor () {\n    this._defaults = [];\n  }\n\n  _setDefaults (request) {\n    for (const def of this._defaults) {\n      request[def.fn](...def.args);\n    }\n  }\n}\n\nfor (const fn of defaults) {\n  // Default setting for all requests from this agent\n  Agent.prototype[fn] = function (...args) {\n    this._defaults.push({ fn, args });\n    return this;\n  };\n}\n\n\nmodule.exports = Agent;\n"],"mappings":";;AAAA,MAAMA,QAAQ,GAAG,CACf,KAAK,EACL,IAAI,EACJ,MAAM,EACN,KAAK,EACL,OAAO,EACP,MAAM,EACN,QAAQ,EACR,MAAM,EACN,iBAAiB,EACjB,WAAW,EACX,OAAO,EACP,IAAI,EACJ,WAAW,EACX,SAAS,EACT,QAAQ,EACR,WAAW,EACX,OAAO,EACP,IAAI,EACJ,KAAK,EACL,KAAK,EACL,MAAM,EACN,iBAAiB,CAClB;AAED,MAAMC,KAAK,CAAC;EACVC,WAAWA,CAAA,EAAI;IACb,IAAI,CAACC,SAAS,GAAG,EAAE;EACrB;EAEAC,YAAYA,CAAEC,OAAO,EAAE;IACrB,KAAK,MAAMC,GAAG,IAAI,IAAI,CAACH,SAAS,EAAE;MAChCE,OAAO,CAACC,GAAG,CAACC,EAAE,CAAC,CAAC,GAAGD,GAAG,CAACE,IAAI,CAAC;IAC9B;EACF;AACF;AAEA,KAAK,MAAMD,EAAE,IAAIP,QAAQ,EAAE;EACzB;EACAC,KAAK,CAACQ,SAAS,CAACF,EAAE,CAAC,GAAG,YAAmB;IAAA,SAAAG,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAANJ,IAAI,OAAAK,KAAA,CAAAH,IAAA,GAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;MAAJN,IAAI,CAAAM,IAAA,IAAAH,SAAA,CAAAG,IAAA;IAAA;IACrC,IAAI,CAACX,SAAS,CAACY,IAAI,CAAC;MAAER,EAAE;MAAEC;IAAK,CAAC,CAAC;IACjC,OAAO,IAAI;EACb,CAAC;AACH;AAGAQ,MAAM,CAACC,OAAO,GAAGhB,KAAK","ignoreList":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/lib/node/parsers/index.js":{"lineLengths":[13,0,71,48,33,47,34,45,36,23,1256],"data":{"version":3,"names":["exports","require","text","binary","image"],"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/src/node/parsers/index.js"],"sourcesContent":["exports['application/x-www-form-urlencoded'] = require('./urlencoded');\nexports['application/json'] = require('./json');\nexports.text = require('./text');\n\nexports['application/json-seq'] = exports.text;\n\nconst binary = require('./image');\n\nexports['application/octet-stream'] = binary;\nexports['application/pdf'] = binary;\nexports.image = binary;\n"],"mappings":";;AAAAA,OAAO,CAAC,mCAAmC,CAAC,GAAGC,OAAO,CAAC,cAAc,CAAC;AACtED,OAAO,CAAC,kBAAkB,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC/CD,OAAO,CAACE,IAAI,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAEhCD,OAAO,CAAC,sBAAsB,CAAC,GAAGA,OAAO,CAACE,IAAI;AAE9C,MAAMC,MAAM,GAAGF,OAAO,CAAC,SAAS,CAAC;AAEjCD,OAAO,CAAC,0BAA0B,CAAC,GAAGG,MAAM;AAC5CH,OAAO,CAAC,iBAAiB,CAAC,GAAGG,MAAM;AACnCH,OAAO,CAACI,KAAK,GAAGD,MAAM","ignoreList":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/lib/node/parsers/urlencoded.js":{"lineLengths":[13,0,3,23,3,0,25,31,16,27,27,22,5,23,9,35,19,14,5,5,2,1476],"data":{"version":3,"names":["qs","require","module","exports","res","fn","text","setEncoding","on","chunk","parse","err"],"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/src/node/parsers/urlencoded.js"],"sourcesContent":["/**\n * Module dependencies.\n */\n\nconst qs = require('qs');\n\nmodule.exports = (res, fn) => {\n  res.text = '';\n  res.setEncoding('ascii');\n  res.on('data', (chunk) => {\n    res.text += chunk;\n  });\n  res.on('end', () => {\n    try {\n      fn(null, qs.parse(res.text));\n    } catch (err) {\n      fn(err);\n    }\n  });\n};\n"],"mappings":";;AAAA;AACA;AACA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AAExBC,MAAM,CAACC,OAAO,GAAG,CAACC,GAAG,EAAEC,EAAE,KAAK;EAC5BD,GAAG,CAACE,IAAI,GAAG,EAAE;EACbF,GAAG,CAACG,WAAW,CAAC,OAAO,CAAC;EACxBH,GAAG,CAACI,EAAE,CAAC,MAAM,EAAGC,KAAK,IAAK;IACxBL,GAAG,CAACE,IAAI,IAAIG,KAAK;EACnB,CAAC,CAAC;EACFL,GAAG,CAACI,EAAE,CAAC,KAAK,EAAE,MAAM;IAClB,IAAI;MACFH,EAAE,CAAC,IAAI,EAAEL,EAAE,CAACU,KAAK,CAACN,GAAG,CAACE,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZN,EAAE,CAACM,GAAG,CAAC;IACT;EACF,CAAC,CAAC;AACJ,CAAC","ignoreList":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/lib/node/parsers/json.js":{"lineLengths":[13,0,37,16,26,27,22,5,23,13,14,9,46,19,18,74,43,78,40,15,22,5,5,2,2056],"data":{"version":3,"names":["module","exports","res","fn","text","setEncoding","on","chunk","body","error","JSON","parse","err","rawResponse","statusCode"],"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/src/node/parsers/json.js"],"sourcesContent":["module.exports = function (res, fn) {\n  res.text = '';\n  res.setEncoding('utf8');\n  res.on('data', (chunk) => {\n    res.text += chunk;\n  });\n  res.on('end', () => {\n    let body;\n    let error;\n    try {\n      body = res.text && JSON.parse(res.text);\n    } catch (err) {\n      error = err;\n      // issue #675: return the raw response if the response parsing fails\n      error.rawResponse = res.text || null;\n      // issue #876: return the http status code if the response parsing fails\n      error.statusCode = res.statusCode;\n    } finally {\n      fn(error, body);\n    }\n  });\n};\n"],"mappings":";;AAAAA,MAAM,CAACC,OAAO,GAAG,UAAUC,GAAG,EAAEC,EAAE,EAAE;EAClCD,GAAG,CAACE,IAAI,GAAG,EAAE;EACbF,GAAG,CAACG,WAAW,CAAC,MAAM,CAAC;EACvBH,GAAG,CAACI,EAAE,CAAC,MAAM,EAAGC,KAAK,IAAK;IACxBL,GAAG,CAACE,IAAI,IAAIG,KAAK;EACnB,CAAC,CAAC;EACFL,GAAG,CAACI,EAAE,CAAC,KAAK,EAAE,MAAM;IAClB,IAAIE,IAAI;IACR,IAAIC,KAAK;IACT,IAAI;MACFD,IAAI,GAAGN,GAAG,CAACE,IAAI,IAAIM,IAAI,CAACC,KAAK,CAACT,GAAG,CAACE,IAAI,CAAC;IACzC,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZH,KAAK,GAAGG,GAAG;MACX;MACAH,KAAK,CAACI,WAAW,GAAGX,GAAG,CAACE,IAAI,IAAI,IAAI;MACpC;MACAK,KAAK,CAACK,UAAU,GAAGZ,GAAG,CAACY,UAAU;IACnC,CAAC,SAAS;MACRX,EAAE,CAACM,KAAK,EAAED,IAAI,CAAC;IACjB;EACF,CAAC,CAAC;AACJ,CAAC","ignoreList":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/lib/node/parsers/text.js":{"lineLengths":[13,0,31,16,26,27,22,5,20,2,916],"data":{"version":3,"names":["module","exports","res","fn","text","setEncoding","on","chunk"],"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/src/node/parsers/text.js"],"sourcesContent":["module.exports = (res, fn) => {\n  res.text = '';\n  res.setEncoding('utf8');\n  res.on('data', (chunk) => {\n    res.text += chunk;\n  });\n  res.on('end', fn);\n};\n"],"mappings":";;AAAAA,MAAM,CAACC,OAAO,GAAG,CAACC,GAAG,EAAEC,EAAE,KAAK;EAC5BD,GAAG,CAACE,IAAI,GAAG,EAAE;EACbF,GAAG,CAACG,WAAW,CAAC,MAAM,CAAC;EACvBH,GAAG,CAACI,EAAE,CAAC,MAAM,EAAGC,KAAK,IAAK;IACxBL,GAAG,CAACE,IAAI,IAAIG,KAAK;EACnB,CAAC,CAAC;EACFL,GAAG,CAACI,EAAE,CAAC,KAAK,EAAEH,EAAE,CAAC;AACnB,CAAC","ignoreList":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/lib/node/parsers/image.js":{"lineLengths":[13,0,31,54,0,27,21,5,23,34,5,2,1068],"data":{"version":3,"names":["module","exports","res","fn","data","on","chunk","push","Buffer","concat"],"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/superagent/src/node/parsers/image.js"],"sourcesContent":["module.exports = (res, fn) => {\n  const data = []; // Binary data needs binary storage\n\n  res.on('data', (chunk) => {\n    data.push(chunk);\n  });\n  res.on('end', () => {\n    fn(null, Buffer.concat(data));\n  });\n};\n"],"mappings":";;AAAAA,MAAM,CAACC,OAAO,GAAG,CAACC,GAAG,EAAEC,EAAE,KAAK;EAC5B,MAAMC,IAAI,GAAG,EAAE,CAAC,CAAC;;EAEjBF,GAAG,CAACG,EAAE,CAAC,MAAM,EAAGC,KAAK,IAAK;IACxBF,IAAI,CAACG,IAAI,CAACD,KAAK,CAAC;EAClB,CAAC,CAAC;EACFJ,GAAG,CAACG,EAAE,CAAC,KAAK,EAAE,MAAM;IAClBF,EAAE,CAAC,IAAI,EAAEK,MAAM,CAACC,MAAM,CAACL,IAAI,CAAC,CAAC;EAC/B,CAAC,CAAC;AACJ,CAAC","ignoreList":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/index.js":{"lineLengths":[13,40,33,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/index.js"],"sourcesContent":["'use strict';\n\n/**\n  * A Sequelize module that contains the sequelize entry point.\n  *\n  * @module sequelize\n  */\n\n/** Exports the sequelize entry point. */\nmodule.exports = require('./sequelize');\n"],"mappings":";AASA,OAAO,UAAU,QAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/sequelize.js":{"lineLengths":[13,38,41,57,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,66,27,29,59,51,28,33,33,42,43,48,45,44,44,44,44,33,52,64,34,53,74,59,49,68,55,79,54,17,54,15,65,25,83,130,18,31,53,60,39,107,71,71,7,30,63,7,26,37,7,26,51,39,33,57,7,27,34,45,9,37,64,16,50,39,17,59,49,25,13,11,9,7,65,86,7,12,30,48,5,54,35,20,26,30,24,22,17,16,15,25,38,27,22,20,25,18,15,29,16,14,15,16,43,9,8,50,27,25,28,23,27,32,32,16,32,78,5,48,40,5,82,158,5,40,35,41,5,36,19,57,57,65,45,45,30,38,34,28,44,48,56,60,49,6,16,32,21,48,14,19,46,14,19,46,14,20,47,14,22,49,14,20,47,14,17,44,14,23,50,14,14,155,5,37,72,57,39,85,68,43,5,54,21,47,60,42,3,18,56,3,16,32,3,21,32,3,23,31,3,47,34,29,39,6,36,17,3,20,37,59,5,49,3,24,80,3,29,78,45,51,5,46,25,5,29,71,5,35,114,120,7,24,59,41,14,38,7,5,166,32,37,37,5,34,34,46,105,9,42,7,32,38,95,9,32,7,33,24,7,5,21,47,87,5,31,72,5,23,23,111,5,36,97,226,24,20,7,6,95,30,61,64,7,25,134,60,43,39,9,7,70,11,59,27,52,17,58,35,63,9,7,21,3,33,107,63,78,5,80,61,5,23,25,25,117,44,3,17,53,3,39,72,3,33,66,3,37,70,3,33,66,3,23,123,53,7,24,54,117,7,5,24,53,5,24,31,5,48,39,12,73,27,61,7,23,35,34,7,5,24,52,5,16,3,50,41,65,55,36,9,9,13,5,51,107,5,51,98,5,3,27,77,60,55,66,208,5,66,66,74,9,5,37,33,38,12,72,5,3,23,37,53,34,7,5,77,23,41,34,7,5,41,65,55,36,9,9,13,5,51,45,104,57,99,10,5,51,32,5,3,31,30,16,18,29,16,75,11,3,34,67,3,12,74,31,5,27,3,26,34,3,19,30,3,26,37,3,23,34,3,23,30,3,22,29,3,40,51,3,41,52,3,44,40,29,23,5,55,24,50,25,5,42,49,17,11,49,21,13,39,26,9,18,7,33,20,7,3,21,103,52,24,16,3,22,30,12,18,12,43,15,3,16,16,30,97,21,44,40,7,12,29,5,26,37,37,38,7,93,57,7,31,5,3,11,42,3,27,62,54,33,49,5,42,23,76,7,40,66,7,5,16,3,33,38,38,5,24,23,60,74,145,62,7,5,51,29,81,14,49,7,37,66,7,5,21,3,1,38,40,42,48,40,38,42,44,64,45,19,9,46,3,3,34,24,18,34,34,36,42,67,64,24,42,32,26,28,40,32,35,44,1,34,70,46,25,35,44,51,44,1,27,37,35,37,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/sequelize.js"],"sourcesContent":["'use strict';\n\nconst url = require('url');\nconst path = require('path');\nconst pgConnectionString = require('pg-connection-string');\nconst retry = require('retry-as-promised').default;\nconst _ = require('lodash');\n\nconst Utils = require('./utils');\nconst Model = require('./model');\nconst DataTypes = require('./data-types');\nconst Deferrable = require('./deferrable');\nconst ModelManager = require('./model-manager');\nconst Transaction = require('./transaction');\nconst QueryTypes = require('./query-types');\nconst TableHints = require('./table-hints');\nconst IndexHints = require('./index-hints');\nconst sequelizeErrors = require('./errors');\nconst Hooks = require('./hooks');\nconst Association = require('./associations/index');\nconst Validator = require('./utils/validator-extras').validator;\nconst Op = require('./operators');\nconst deprecations = require('./utils/deprecations');\nconst { QueryInterface } = require('./dialects/abstract/query-interface');\nconst { BelongsTo } = require('./associations/belongs-to');\nconst HasOne = require('./associations/has-one');\nconst { BelongsToMany } = require('./associations/belongs-to-many');\nconst { HasMany } = require('./associations/has-many');\nconst { withSqliteForeignKeysOff } = require('./dialects/sqlite/sqlite-utils');\nconst { injectReplacements } = require('./utils/sql');\n\n/**\n * This is the main class, the entry point to sequelize.\n */\nclass Sequelize {\n  /**\n   * Instantiate sequelize with name of database, username and password.\n   *\n   * @example\n   * // without password / with blank password\n   * const sequelize = new Sequelize('database', 'username', null, {\n   *   dialect: 'mysql'\n   * })\n   *\n   * // with password and options\n   * const sequelize = new Sequelize('my_database', 'john', 'doe', {\n   *   dialect: 'postgres'\n   * })\n   *\n   * // with database, username, and password in the options object\n   * const sequelize = new Sequelize({ database, username, password, dialect: 'mssql' });\n   *\n   * // with uri\n   * const sequelize = new Sequelize('mysql://localhost:3306/database', {})\n   *\n   * // option examples\n   * const sequelize = new Sequelize('database', 'username', 'password', {\n   *   // the sql dialect of the database\n   *   // currently supported: 'mysql', 'sqlite', 'postgres', 'mssql'\n   *   dialect: 'mysql',\n   *\n   *   // custom host; default: localhost\n   *   host: 'my.server.tld',\n   *   // for postgres, you can also specify an absolute path to a directory\n   *   // containing a UNIX socket to connect over\n   *   // host: '/sockets/psql_sockets'.\n   *\n   *   // custom port; default: dialect default\n   *   port: 12345,\n   *\n   *   // custom protocol; default: 'tcp'\n   *   // postgres only, useful for Heroku\n   *   protocol: null,\n   *\n   *   // disable logging or provide a custom logging function; default: console.log\n   *   logging: false,\n   *\n   *   // you can also pass any dialect options to the underlying dialect library\n   *   // - default is empty\n   *   // - currently supported: 'mysql', 'postgres', 'mssql'\n   *   dialectOptions: {\n   *     socketPath: '/Applications/MAMP/tmp/mysql/mysql.sock',\n   *     supportBigNumbers: true,\n   *     bigNumberStrings: true\n   *   },\n   *\n   *   // the storage engine for sqlite\n   *   // - default ':memory:'\n   *   storage: 'path/to/database.sqlite',\n   *\n   *   // disable inserting undefined values as NULL\n   *   // - default: false\n   *   omitNull: true,\n   *\n   *   // a flag for using a native library or not.\n   *   // in the case of 'pg' -- set this to true will allow SSL support\n   *   // - default: false\n   *   native: true,\n   *\n   *   // A flag that defines if connection should be over ssl or not\n   *   // - default: undefined\n   *   ssl: true,\n   *\n   *   // Specify options, which are used when sequelize.define is called.\n   *   // The following example:\n   *   //   define: { timestamps: false }\n   *   // is basically the same as:\n   *   //   Model.init(attributes, { timestamps: false });\n   *   //   sequelize.define(name, attributes, { timestamps: false });\n   *   // so defining the timestamps for each model will be not necessary\n   *   define: {\n   *     underscored: false,\n   *     freezeTableName: false,\n   *     charset: 'utf8',\n   *     dialectOptions: {\n   *       collate: 'utf8_general_ci'\n   *     },\n   *     timestamps: true\n   *   },\n   *\n   *   // similar for sync: you can define this to always force sync for models\n   *   sync: { force: true },\n   *\n   *   // pool configuration used to pool database connections\n   *   pool: {\n   *     max: 5,\n   *     idle: 30000,\n   *     acquire: 60000,\n   *   },\n   *\n   *   // isolation level of each transaction\n   *   // defaults to dialect default\n   *   isolationLevel: Transaction.ISOLATION_LEVELS.REPEATABLE_READ\n   * })\n   *\n   * @param {string}   [database] The name of the database\n   * @param {string}   [username=null] The username which is used to authenticate against the database.\n   * @param {string}   [password=null] The password which is used to authenticate against the database. Supports SQLCipher encryption for SQLite.\n   * @param {object}   [options={}] An object with options.\n   * @param {string}   [options.host='localhost'] The host of the relational database.\n   * @param {number}   [options.port] The port of the relational database.\n   * @param {string}   [options.username=null] The username which is used to authenticate against the database.\n   * @param {string}   [options.password=null] The password which is used to authenticate against the database.\n   * @param {string}   [options.database=null] The name of the database.\n   * @param {string}   [options.dialect] The dialect of the database you are connecting to. One of mysql, postgres, sqlite, db2, mariadb and mssql.\n   * @param {string}   [options.dialectModule=null] If specified, use this dialect library. For example, if you want to use pg.js instead of pg when connecting to a pg database, you should specify 'require(\"pg.js\")' here\n   * @param {string}   [options.dialectModulePath=null] If specified, load the dialect library from this path. For example, if you want to use pg.js instead of pg when connecting to a pg database, you should specify '/path/to/pg.js' here\n   * @param {object}   [options.dialectOptions] An object of additional options, which are passed directly to the connection library\n   * @param {string}   [options.storage] Only used by sqlite. Defaults to ':memory:'\n   * @param {string}   [options.protocol='tcp'] The protocol of the relational database.\n   * @param {object}   [options.define={}] Default options for model definitions. See {@link Model.init}.\n   * @param {object}   [options.query={}] Default options for sequelize.query\n   * @param {string}   [options.schema=null] A schema to use\n   * @param {object}   [options.set={}] Default options for sequelize.set\n   * @param {object}   [options.sync={}] Default options for sequelize.sync\n   * @param {string}   [options.timezone='+00:00'] The timezone used when converting a date from the database into a JavaScript date. The timezone is also used to SET TIMEZONE when connecting to the server, to ensure that the result of NOW, CURRENT_TIMESTAMP and other time related functions have in the right timezone. For best cross platform performance use the format +/-HH:MM. Will also accept string versions of timezones used by moment.js (e.g. 'America/Los_Angeles'); this is useful to capture daylight savings time changes.\n   * @param {string|boolean} [options.clientMinMessages='warning'] (Deprecated) The PostgreSQL `client_min_messages` session parameter. Set to `false` to not override the database's default.\n   * @param {boolean}  [options.standardConformingStrings=true] The PostgreSQL `standard_conforming_strings` session parameter. Set to `false` to not set the option. WARNING: Setting this to false may expose vulnerabilities and is not recommended!\n   * @param {Function} [options.logging=console.log] A function that gets executed every time Sequelize would log something. Function may receive multiple parameters but only first one is printed by `console.log`. To print all values use `(...msg) => console.log(msg)`\n   * @param {boolean}  [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param {boolean}  [options.omitNull=false] A flag that defines if null values should be passed as values to CREATE/UPDATE SQL queries or not.\n   * @param {boolean}  [options.native=false] A flag that defines if native library shall be used or not. Currently only has an effect for postgres\n   * @param {boolean}  [options.ssl=undefined] A flag that defines if connection should be over ssl or not\n   * @param {boolean}  [options.replication=false] Use read / write replication. To enable replication, pass an object, with two properties, read and write. Write should be an object (a single server for handling writes), and read an array of object (several servers to handle reads). Each read/write server can have the following properties: `host`, `port`, `username`, `password`, `database`\n   * @param {object}   [options.pool] sequelize connection pool configuration\n   * @param {number}   [options.pool.max=5] Maximum number of connection in pool\n   * @param {number}   [options.pool.min=0] Minimum number of connection in pool\n   * @param {number}   [options.pool.idle=10000] The maximum time, in milliseconds, that a connection can be idle before being released.\n   * @param {number}   [options.pool.acquire=60000] The maximum time, in milliseconds, that pool will try to get connection before throwing error\n   * @param {number}   [options.pool.evict=1000] The time interval, in milliseconds, after which sequelize-pool will remove idle connections.\n   * @param {Function} [options.pool.validate] A function that validates a connection. Called with client. The default function checks that client is an object, and that its state is not disconnected\n   * @param {number}   [options.pool.maxUses=Infinity] The number of times a connection can be used before discarding it for a replacement, [`used for eventual cluster rebalancing`](https://github.com/sequelize/sequelize-pool).\n   * @param {boolean}  [options.quoteIdentifiers=true] Set to `false` to make table names and attributes case-insensitive on Postgres and skip double quoting of them.  WARNING: Setting this to false may expose vulnerabilities and is not recommended!\n   * @param {string}   [options.transactionType='DEFERRED'] Set the default transaction type. See `Sequelize.Transaction.TYPES` for possible options. Sqlite only.\n   * @param {string}   [options.isolationLevel] Set the default transaction isolation level. See `Sequelize.Transaction.ISOLATION_LEVELS` for possible options.\n   * @param {object}   [options.retry] Set of flags that control when a query is automatically retried. Accepts all options for [`retry-as-promised`](https://github.com/mickhansen/retry-as-promised).\n   * @param {Array}    [options.retry.match] Only retry a query if the error matches one of these strings.\n   * @param {number}   [options.retry.max] How many times a failing query is automatically retried.  Set to 0 to disable retrying on SQL_BUSY error.\n   * @param {boolean}  [options.typeValidation=false] Run built-in type validators on insert and update, and select with where clause, e.g. validate that arguments passed to integer fields are integer-like.\n   * @param {object}   [options.operatorsAliases] String based operator alias. Pass object to limit set of aliased operators.\n   * @param {object}   [options.hooks] An object of global hook functions that are called before and after certain lifecycle events. Global hooks will run after any model-specific hooks defined for the same event (See `Sequelize.Model.init()` for a list).  Additionally, `beforeConnect()`, `afterConnect()`, `beforeDisconnect()`, and `afterDisconnect()` hooks may be defined here.\n   * @param {boolean}  [options.minifyAliases=false] A flag that defines if aliases should be minified (mostly useful to avoid Postgres alias character limit of 64)\n   * @param {boolean}  [options.logQueryParameters=false] A flag that defines if show bind parameters in log.\n   */\n  constructor(database, username, password, options) {\n    let config;\n\n    if (arguments.length === 1 && typeof database === 'object') {\n      // new Sequelize({ ... options })\n      options = database;\n      config = _.pick(options, 'host', 'port', 'database', 'username', 'password');\n    } else if (arguments.length === 1 && typeof database === 'string' || arguments.length === 2 && typeof username === 'object') {\n      // new Sequelize(URI, { ... options })\n\n      config = {};\n      options = username || {};\n\n      const urlParts = url.parse(arguments[0], true);\n\n      options.dialect = urlParts.protocol.replace(/:$/, '');\n      options.host = urlParts.hostname;\n\n      if (options.dialect === 'sqlite' && urlParts.pathname && !urlParts.pathname.startsWith('/:memory')) {\n        const storagePath = path.join(options.host, urlParts.pathname);\n        options.storage = path.resolve(options.storage || storagePath);\n      }\n\n      if (urlParts.pathname) {\n        config.database = urlParts.pathname.replace(/^\\//, '');\n      }\n\n      if (urlParts.port) {\n        options.port = urlParts.port;\n      }\n\n      if (urlParts.auth) {\n        const authParts = urlParts.auth.split(':');\n\n        config.username = authParts[0];\n\n        if (authParts.length > 1)\n          config.password = authParts.slice(1).join(':');\n      }\n\n      if (urlParts.query) {\n        // Allow host query argument to override the url host.\n        // Enables specifying domain socket hosts which cannot be specified via the typical\n        // host part of a url.\n        if (urlParts.query.host) {\n          options.host = urlParts.query.host;\n        }\n\n        if (options.dialectOptions) {\n          Object.assign(options.dialectOptions, urlParts.query);\n        } else {\n          options.dialectOptions = urlParts.query;\n          if (urlParts.query.options) {\n            try {\n              const o = JSON.parse(urlParts.query.options);\n              options.dialectOptions.options = o;\n            } catch (e) {\n              // Nothing to do, string is not a valid JSON\n              // an thus does not need any further processing\n            }\n          }\n        }\n      }\n\n      // For postgres, we can use this helper to load certs directly from the\n      // connection string.\n      if (['postgres', 'postgresql'].includes(options.dialect)) {\n        Object.assign(options.dialectOptions, pgConnectionString.parse(arguments[0]));\n      }\n    } else {\n      // new Sequelize(database, username, password, { ... options })\n      options = options || {};\n      config = { database, username, password };\n    }\n\n    Sequelize.runHooks('beforeInit', config, options);\n\n    this.options = {\n      dialect: null,\n      dialectModule: null,\n      dialectModulePath: null,\n      host: 'localhost',\n      protocol: 'tcp',\n      define: {},\n      query: {},\n      sync: {},\n      timezone: '+00:00',\n      standardConformingStrings: true,\n      // eslint-disable-next-line no-console\n      logging: console.log,\n      omitNull: false,\n      native: false,\n      replication: false,\n      ssl: undefined,\n      pool: {},\n      quoteIdentifiers: true,\n      hooks: {},\n      retry: {\n        max: 5,\n        match: [\n          'SQLITE_BUSY: database is locked'\n        ]\n      },\n      transactionType: Transaction.TYPES.DEFERRED,\n      isolationLevel: null,\n      databaseVersion: 0,\n      typeValidation: false,\n      benchmark: false,\n      minifyAliases: false,\n      logQueryParameters: false,\n      attributeBehavior: 'throw',\n      ...options\n    };\n\n    if (!this.options.dialect) {\n      throw new Error('Dialect needs to be explicitly supplied as of v4.0.0');\n    }\n\n    if (this.options.dialect === 'postgresql') {\n      this.options.dialect = 'postgres';\n    }\n\n    if (this.options.dialect === 'sqlite' && this.options.timezone !== '+00:00') {\n      throw new Error('Setting a custom timezone is not supported by SQLite, dates are always returned as UTC. Please remove the custom timezone parameter.');\n    }\n\n    if (this.options.logging === true) {\n      deprecations.noTrueLogging();\n      // eslint-disable-next-line no-console\n      this.options.logging = console.log;\n    }\n\n    this._setupHooks(options.hooks);\n\n    this.config = {\n      database: config.database || this.options.database,\n      username: config.username || this.options.username,\n      password: config.password || this.options.password || null,\n      host: config.host || this.options.host,\n      port: config.port || this.options.port,\n      pool: this.options.pool,\n      protocol: this.options.protocol,\n      native: this.options.native,\n      ssl: this.options.ssl,\n      replication: this.options.replication,\n      dialectModule: this.options.dialectModule,\n      dialectModulePath: this.options.dialectModulePath,\n      keepDefaultTimezone: this.options.keepDefaultTimezone,\n      dialectOptions: this.options.dialectOptions\n    };\n\n    let Dialect;\n    // Requiring the dialect in a switch-case to keep the\n    // require calls static. (Browserify fix)\n    switch (this.getDialect()) {\n      case 'mariadb':\n        Dialect = require('./dialects/mariadb');\n        break;\n      case 'mssql':\n        Dialect = require('./dialects/mssql');\n        break;\n      case 'mysql':\n        Dialect = require('./dialects/mysql');\n        break;\n      case 'oracle':\n        Dialect = require('./dialects/oracle');\n        break;\n      case 'postgres':\n        Dialect = require('./dialects/postgres');\n        break;\n      case 'sqlite':\n        Dialect = require('./dialects/sqlite');\n        break;\n      case 'db2':\n        Dialect = require('./dialects/db2');\n        break;\n      case 'snowflake':\n        Dialect = require('./dialects/snowflake');\n        break;\n      default:\n        throw new Error(`The dialect ${this.getDialect()} is not supported. Supported dialects: mssql, mariadb, mysql, oracle, postgres, db2 and sqlite.`);\n    }\n\n    this.dialect = new Dialect(this);\n    this.dialect.queryGenerator.typeValidation = options.typeValidation;\n\n    if (_.isPlainObject(this.options.operatorsAliases)) {\n      deprecations.noStringOperators();\n      this.dialect.queryGenerator.setOperatorsAliases(this.options.operatorsAliases);\n    } else if (typeof this.options.operatorsAliases === 'boolean') {\n      deprecations.noBoolOperatorAliases();\n    }\n\n    this.queryInterface = this.dialect.queryInterface;\n\n    /**\n     * Models are stored here under the name given to `sequelize.define`\n     */\n    this.models = {};\n    this.modelManager = new ModelManager(this);\n    this.connectionManager = this.dialect.connectionManager;\n\n    Sequelize.runHooks('afterInit', this);\n  }\n\n  /**\n   * Refresh data types and parsers.\n   *\n   * @private\n   */\n  refreshTypes() {\n    this.connectionManager.refreshTypeParser(DataTypes);\n  }\n\n  /**\n   * Returns the specified dialect.\n   *\n   * @returns {string} The specified dialect.\n   */\n  getDialect() {\n    return this.options.dialect;\n  }\n\n  /**\n   * Returns the database name.\n   *\n   * @returns {string} The database name.\n   */\n  getDatabaseName() {\n    return this.config.database;\n  }\n\n  /**\n   * Returns an instance of QueryInterface.\n   *\n   * @returns {QueryInterface} An instance (singleton) of QueryInterface.\n   */\n  getQueryInterface() {\n    return this.queryInterface;\n  }\n\n  /**\n   * Define a new model, representing a table in the database.\n   *\n   * The table columns are defined by the object that is given as the second argument. Each key of the object represents a column\n   *\n   * @param {string} modelName The name of the model. The model will be stored in `sequelize.models` under this name\n   * @param {object} attributes An object, where each attribute is a column of the table. See {@link Model.init}\n   * @param {object} [options] These options are merged with the default define options provided to the Sequelize constructor and passed to Model.init()\n   *\n   * @see\n   * {@link Model.init} for a more comprehensive specification of the `options` and `attributes` objects.\n   * @see\n   * <a href=\"/master/manual/model-basics.html\">Model Basics</a> guide\n   *\n   * @returns {Model} Newly defined model\n   *\n   * @example\n   * sequelize.define('modelName', {\n   *   columnA: {\n   *       type: Sequelize.BOOLEAN,\n   *       validate: {\n   *         is: [\"[a-z]\",'i'],        // will only allow letters\n   *         max: 23,                  // only allow values <= 23\n   *         isIn: {\n   *           args: [['en', 'zh']],\n   *           msg: \"Must be English or Chinese\"\n   *         }\n   *       },\n   *       field: 'column_a'\n   *   },\n   *   columnB: Sequelize.STRING,\n   *   columnC: 'MY VERY OWN COLUMN TYPE'\n   * });\n   *\n   * sequelize.models.modelName // The model will now be available in models under the name given to define\n   */\n  define(modelName, attributes, options = {}) {\n    options.modelName = modelName;\n    options.sequelize = this;\n\n    const model = class extends Model {};\n\n    model.init(attributes, options);\n\n    return model;\n  }\n\n  /**\n   * Fetch a Model which is already defined\n   *\n   * @param {string} modelName The name of a model defined with Sequelize.define\n   *\n   * @throws Will throw an error if the model is not defined (that is, if sequelize#isDefined returns false)\n   * @returns {Model} Specified model\n   */\n  model(modelName) {\n    if (!this.isDefined(modelName)) {\n      throw new Error(`${modelName} has not been defined`);\n    }\n\n    return this.modelManager.getModel(modelName);\n  }\n\n  /**\n   * Checks whether a model with the given name is defined\n   *\n   * @param {string} modelName The name of a model defined with Sequelize.define\n   *\n   * @returns {boolean} Returns true if model is already defined, otherwise false\n   */\n  isDefined(modelName) {\n    return !!this.modelManager.models.find(model => model.name === modelName);\n  }\n\n  /**\n   * Execute a query on the DB, optionally bypassing all the Sequelize goodness.\n   *\n   * By default, the function will return two arguments: an array of results, and a metadata object, containing number of affected rows etc.\n   *\n   * If you are running a type of query where you don't need the metadata, for example a `SELECT` query, you can pass in a query type to make sequelize format the results:\n   *\n   * ```js\n   * const [results, metadata] = await sequelize.query('SELECT...'); // Raw query - use array destructuring\n   *\n   * const results = await sequelize.query('SELECT...', { type: sequelize.QueryTypes.SELECT }); // SELECT query - no destructuring\n   * ```\n   *\n   * @param {string}          sql\n   * @param {object}          [options={}] Query options.\n   * @param {boolean}         [options.raw] If true, sequelize will not try to format the results of the query, or build an instance of a model from the result\n   * @param {Transaction}     [options.transaction=null] The transaction that the query should be executed under\n   * @param {QueryTypes}      [options.type='RAW'] The type of query you are executing. The query type affects how results are formatted before they are passed back. The type is a string, but `Sequelize.QueryTypes` is provided as convenience shortcuts.\n   * @param {boolean}         [options.nest=false] If true, transforms objects with `.` separated property names into nested objects using [dottie.js](https://github.com/mickhansen/dottie.js). For example { 'user.username': 'john' } becomes { user: { username: 'john' }}. When `nest` is true, the query type is assumed to be `'SELECT'`, unless otherwise specified\n   * @param {boolean}         [options.plain=false] Sets the query type to `SELECT` and return a single row\n   * @param {object|Array}    [options.replacements] Either an object of named parameter replacements in the format `:param` or an array of unnamed replacements to replace `?` in your SQL.\n   * @param {object|Array}    [options.bind] Either an object of named bind parameter in the format `_param` or an array of unnamed bind parameter to replace `$1, $2, ...` in your SQL.\n   * @param {boolean}         [options.useMaster=false] Force the query to use the write pool, regardless of the query type.\n   * @param {Function}        [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {Model}           [options.instance] A sequelize model instance whose Model is to be used to build the query result\n   * @param {typeof Model}    [options.model] A sequelize model used to build the returned model instances\n   * @param {object}          [options.retry] Set of flags that control when a query is automatically retried. Accepts all options for [`retry-as-promised`](https://github.com/mickhansen/retry-as-promised).\n   * @param {Array}           [options.retry.match] Only retry a query if the error matches one of these strings.\n   * @param {Integer}         [options.retry.max] How many times a failing query is automatically retried.\n   * @param {string}          [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   * @param {boolean}         [options.supportsSearchPath] If false do not prepend the query with the search_path (Postgres only)\n   * @param {boolean}         [options.mapToModel=false] Map returned fields to model's fields if `options.model` or `options.instance` is present. Mapping will occur before building the model instance.\n   * @param {object}          [options.fieldMap] Map returned fields to arbitrary names for `SELECT` query type.\n   * @param {boolean}         [options.rawErrors=false] Set to `true` to cause errors coming from the underlying connection/database library to be propagated unmodified and unformatted. Else, the default behavior (=false) is to reinterpret errors as sequelize.errors.BaseError objects.\n   *\n   * @returns {Promise}\n   *\n   * @see {@link Model.build} for more information about instance option.\n   */\n\n  async query(sql, options) {\n    options = { ...this.options.query, ...options };\n\n    if (options.instance && !options.model) {\n      options.model = options.instance.constructor;\n    }\n\n    if (!options.instance && !options.model) {\n      options.raw = true;\n    }\n\n    // map raw fields to model attributes\n    if (options.mapToModel) {\n      options.fieldMap = _.get(options, 'model.fieldAttributeMap', {});\n    }\n\n    options = _.defaults(options, {\n      // eslint-disable-next-line no-console\n      logging: Object.prototype.hasOwnProperty.call(this.options, 'logging') ? this.options.logging : console.log,\n      searchPath: Object.prototype.hasOwnProperty.call(this.options, 'searchPath') ? this.options.searchPath : 'DEFAULT'\n    });\n\n    if (!options.type) {\n      if (options.model || options.nest || options.plain) {\n        options.type = QueryTypes.SELECT;\n      } else {\n        options.type = QueryTypes.RAW;\n      }\n    }\n\n    //if dialect doesn't support search_path or dialect option\n    //to prepend searchPath is not true delete the searchPath option\n    if (\n      !this.dialect.supports.searchPath ||\n      !this.options.dialectOptions ||\n      !this.options.dialectOptions.prependSearchPath ||\n      options.supportsSearchPath === false\n    ) {\n      delete options.searchPath;\n    } else if (!options.searchPath) {\n      //if user wants to always prepend searchPath (dialectOptions.preprendSearchPath = true)\n      //then set to DEFAULT if none is provided\n      options.searchPath = 'DEFAULT';\n    }\n\n    if (typeof sql === 'object') {\n      if (sql.values !== undefined) {\n        if (options.replacements !== undefined) {\n          throw new Error('Both `sql.values` and `options.replacements` cannot be set at the same time');\n        }\n        options.replacements = sql.values;\n      }\n\n      if (sql.bind !== undefined) {\n        if (options.bind !== undefined) {\n          throw new Error('Both `sql.bind` and `options.bind` cannot be set at the same time');\n        }\n        options.bind = sql.bind;\n      }\n\n      if (sql.query !== undefined) {\n        sql = sql.query;\n      }\n    }\n\n    sql = sql.trim();\n\n    if (options.replacements && options.bind) {\n      throw new Error('Both `replacements` and `bind` cannot be set at the same time');\n    }\n\n    if (options.replacements) {\n      sql = injectReplacements(sql, this.dialect, options.replacements);\n    }\n\n    let bindParameters;\n\n    if (options.bind) {\n      [sql, bindParameters] = this.dialect.Query.formatBindParameters(sql, options.bind, this.options.dialect);\n    }\n\n    const checkTransaction = () => {\n      if (options.transaction && options.transaction.finished && !options.completesTransaction) {\n        const error = new Error(`${options.transaction.finished} has been called on this transaction(${options.transaction.id}), you can no longer use it. (The rejected query is attached as the 'sql' property of this error)`);\n        error.sql = sql;\n        throw error;\n      }\n    };\n\n    const retryOptions = { ...this.options.retry, ...options.retry };\n\n    return retry(async () => {\n      if (options.transaction === undefined && Sequelize._cls) {\n        options.transaction = Sequelize._cls.get('transaction');\n      }\n\n      checkTransaction();\n\n      const connection = await (options.transaction ? options.transaction.connection : this.connectionManager.getConnection(options));\n\n      if (this.options.dialect === 'db2' && options.alter) {\n        if (options.alter.drop === false) {\n          connection.dropTable = false;\n        }\n      }\n      const query = new this.dialect.Query(connection, this, options);\n\n      try {\n        await this.runHooks('beforeQuery', options, query);\n        checkTransaction();\n        return await query.run(sql, bindParameters);\n      } finally {\n        await this.runHooks('afterQuery', options, query);\n        if (!options.transaction) {\n          this.connectionManager.releaseConnection(connection);\n        }\n      }\n    }, retryOptions);\n  }\n\n  /**\n   * Execute a query which would set an environment or user variable. The variables are set per connection, so this function needs a transaction.\n   * Only works for MySQL or MariaDB.\n   *\n   * @param {object}        variables Object with multiple variables.\n   * @param {object}        [options] query options.\n   * @param {Transaction}   [options.transaction] The transaction that the query should be executed under\n   *\n   * @memberof Sequelize\n   *\n   * @returns {Promise}\n   */\n  async set(variables, options) {\n\n    // Prepare options\n    options = { ...this.options.set, ...typeof options === 'object' && options };\n\n    if (!['mysql', 'mariadb'].includes(this.options.dialect)) {\n      throw new Error('sequelize.set is only supported for mysql or mariadb');\n    }\n    if (!options.transaction || !(options.transaction instanceof Transaction) ) {\n      throw new TypeError('options.transaction is required');\n    }\n\n    // Override some options, since this isn't a SELECT\n    options.raw = true;\n    options.plain = true;\n    options.type = 'SET';\n\n    // Generate SQL Query\n    const query =\n      `SET ${\n        _.map(variables, (v, k) => `@${k} := ${typeof v === 'string' ? `\"${v}\"` : v}`).join(', ')}`;\n\n    return await this.query(query, options);\n  }\n\n  /**\n   * Escape value.\n   *\n   * @param {string} value string value to escape\n   *\n   * @returns {string}\n   */\n  escape(value) {\n    return this.dialect.queryGenerator.escape(value);\n  }\n\n  /**\n   * Create a new database schema.\n   *\n   * **Note:** this is a schema in the [postgres sense of the word](http://www.postgresql.org/docs/9.1/static/ddl-schemas.html),\n   * not a database table. In mysql and sqlite, this command will do nothing.\n   *\n   * @see\n   * {@link Model.schema}\n   *\n   * @param {string} schema Name of the schema\n   * @param {object} [options={}] query options\n   * @param {boolean|Function} [options.logging] A function that logs sql queries, or false for no logging\n   *\n   * @returns {Promise}\n   */\n  async createSchema(schema, options) {\n    return await this.getQueryInterface().createSchema(schema, options);\n  }\n\n  /**\n   * Show all defined schemas\n   *\n   * **Note:** this is a schema in the [postgres sense of the word](http://www.postgresql.org/docs/9.1/static/ddl-schemas.html),\n   * not a database table. In mysql and sqlite, this will show all tables.\n   *\n   * @param {object} [options={}] query options\n   * @param {boolean|Function} [options.logging] A function that logs sql queries, or false for no logging\n   *\n   * @returns {Promise}\n   */\n  async showAllSchemas(options) {\n    return await this.getQueryInterface().showAllSchemas(options);\n  }\n\n  /**\n   * Drop a single schema\n   *\n   * **Note:** this is a schema in the [postgres sense of the word](http://www.postgresql.org/docs/9.1/static/ddl-schemas.html),\n   * not a database table. In mysql and sqlite, this drop a table matching the schema name\n   *\n   * @param {string} schema Name of the schema\n   * @param {object} [options={}] query options\n   * @param {boolean|Function} [options.logging] A function that logs sql queries, or false for no logging\n   *\n   * @returns {Promise}\n   */\n  async dropSchema(schema, options) {\n    return await this.getQueryInterface().dropSchema(schema, options);\n  }\n\n  /**\n   * Drop all schemas.\n   *\n   * **Note:** this is a schema in the [postgres sense of the word](http://www.postgresql.org/docs/9.1/static/ddl-schemas.html),\n   * not a database table. In mysql and sqlite, this is the equivalent of drop all tables.\n   *\n   * @param {object} [options={}] query options\n   * @param {boolean|Function} [options.logging] A function that logs sql queries, or false for no logging\n   *\n   * @returns {Promise}\n   */\n  async dropAllSchemas(options) {\n    return await this.getQueryInterface().dropAllSchemas(options);\n  }\n\n  /**\n   * Sync all defined models to the DB.\n   *\n   * @param {object} [options={}] sync options\n   * @param {boolean} [options.force=false] If force is true, each Model will run `DROP TABLE IF EXISTS`, before it tries to create its own table\n   * @param {RegExp} [options.match] Match a regex against the database name before syncing, a safety check for cases where force: true is used in tests but not live code\n   * @param {boolean|Function} [options.logging=console.log] A function that logs sql queries, or false for no logging\n   * @param {string} [options.schema='public'] The schema that the tables should be created in. This can be overridden for each table in sequelize.define\n   * @param {string} [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   * @param {boolean} [options.hooks=true] If hooks is true then beforeSync, afterSync, beforeBulkSync, afterBulkSync hooks will be called\n   * @param {boolean|object} [options.alter=false] Alters tables to fit models. Provide an object for additional configuration. Not recommended for production use. If not further configured deletes data in columns that were removed or had their type changed in the model.\n   * @param {boolean} [options.alter.drop=true] Prevents any drop statements while altering a table when set to `false`\n   *\n   * @returns {Promise}\n   */\n  async sync(options) {\n    options = {\n      ...this.options,\n      ...this.options.sync,\n      ...options,\n      hooks: options ? options.hooks !== false : true\n    };\n\n    if (options.match) {\n      if (!options.match.test(this.config.database)) {\n        throw new Error(`Database \"${this.config.database}\" does not match sync match parameter \"${options.match}\"`);\n      }\n    }\n\n    if (options.hooks) {\n      await this.runHooks('beforeBulkSync', options);\n    }\n\n    if (options.force) {\n      await this.drop(options);\n    }\n\n    // no models defined, just authenticate\n    if (this.modelManager.models.length === 0) {\n      await this.authenticate(options);\n    } else {\n      const models = this.modelManager.getModelsTopoSortedByForeignKey();\n      if (models == null) {\n        return this._syncModelsWithCyclicReferences(options);\n      }\n\n      // reverse to start with the one model that does not depend on anything\n      models.reverse();\n\n      // Topologically sort by foreign key constraints to give us an appropriate\n      // creation order\n      for (const model of models) {\n        await model.sync(options);\n      }\n    }\n\n    if (options.hooks) {\n      await this.runHooks('afterBulkSync', options);\n    }\n\n    return this;\n  }\n\n  /**\n   * Used instead of sync() when two models reference each-other, so their foreign keys cannot be created immediately.\n   *\n   * @param {object} options - sync options\n   * @private\n   */\n  async _syncModelsWithCyclicReferences(options) {\n    if (this.dialect.name === 'sqlite') {\n      // Optimisation: no need to do this in two passes in SQLite because we can temporarily disable foreign keys\n      await withSqliteForeignKeysOff(this, options, async () => {\n        for (const model of this.modelManager.models) {\n          await model.sync(options);\n        }\n      });\n\n      return;\n    }\n\n    // create all tables, but don't create foreign key constraints\n    for (const model of this.modelManager.models) {\n      await model.sync({ ...options, withoutForeignKeyConstraints: true });\n    }\n\n    // add foreign key constraints\n    for (const model of this.modelManager.models) {\n      await model.sync({ ...options, force: false, alter: true });\n    }\n  }\n\n  /**\n   * Truncate all tables defined through the sequelize models.\n   * This is done by calling `Model.truncate()` on each model.\n   *\n   * @param {object} [options] The options passed to Model.destroy in addition to truncate\n   * @param {boolean|Function} [options.logging] A function that logs sql queries, or false for no logging\n   * @returns {Promise}\n   *\n   * @see\n   * {@link Model.truncate} for more information\n   */\n  async truncate(options) {\n    const sortedModels = this.modelManager.getModelsTopoSortedByForeignKey();\n    const models = sortedModels || this.modelManager.models;\n    const hasCyclicDependencies = sortedModels == null;\n\n    // we have cyclic dependencies, cascade must be enabled.\n    if (hasCyclicDependencies && (!options || !options.cascade)) {\n      throw new Error('Sequelize#truncate: Some of your models have cyclic references (foreign keys). You need to use the \"cascade\" option to be able to delete rows from models that have cyclic references.');\n    }\n\n    // TODO [>=7]: throw if options.cascade is specified but unsupported in the given dialect.\n    if (hasCyclicDependencies && this.dialect.name === 'sqlite') {\n      // Workaround: SQLite does not support options.cascade, but we can disable its foreign key constraints while we\n      // truncate all tables.\n      return withSqliteForeignKeysOff(this, options, async () => {\n        await Promise.all(models.map(model => model.truncate(options)));\n      });\n    }\n\n    if (options && options.cascade) {\n      for (const model of models) await model.truncate(options);\n    } else {\n      await Promise.all(models.map(model => model.truncate(options)));\n    }\n  }\n\n  /**\n   * Drop all tables defined through this sequelize instance.\n   * This is done by calling Model.drop on each model.\n   *\n   * @see\n   * {@link Model.drop} for options\n   *\n   * @param {object} [options] The options passed to each call to Model.drop\n   * @param {boolean|Function} [options.logging] A function that logs sql queries, or false for no logging\n   *\n   * @returns {Promise}\n   */\n  async drop(options) {\n    // if 'cascade' is specified, we don't have to worry about cyclic dependencies.\n    if (options && options.cascade) {\n      for (const model of this.modelManager.models) {\n        await model.drop(options);\n      }\n    }\n\n    const sortedModels = this.modelManager.getModelsTopoSortedByForeignKey();\n\n    // no cyclic dependency between models, we can delete them in an order that will not cause an error.\n    if (sortedModels) {\n      for (const model of sortedModels) {\n        await model.drop(options);\n      }\n    }\n\n    if (this.dialect.name === 'sqlite') {\n      // Optimisation: no need to do this in two passes in SQLite because we can temporarily disable foreign keys\n      await withSqliteForeignKeysOff(this, options, async () => {\n        for (const model of this.modelManager.models) {\n          await model.drop(options);\n        }\n      });\n\n      return;\n    }\n\n    // has cyclic dependency: we first remove each foreign key, then delete each model.\n    for (const model of this.modelManager.models) {\n      const tableName = model.getTableName();\n      const foreignKeys = await this.queryInterface.getForeignKeyReferencesForTable(tableName, options);\n\n      await Promise.all(foreignKeys.map(foreignKey => {\n        return this.queryInterface.removeConstraint(tableName, foreignKey.constraintName, options);\n      }));\n    }\n\n    for (const model of this.modelManager.models) {\n      await model.drop(options);\n    }\n  }\n\n  /**\n   * Test the connection by trying to authenticate. It runs `SELECT 1+1 AS result` query.\n   *\n   * @param {object} [options={}] query options\n   *\n   * @returns {Promise}\n   */\n  async authenticate(options) {\n    options = {\n      raw: true,\n      plain: true,\n      type: QueryTypes.SELECT,\n      ...options\n    };\n\n    await this.query(this.dialect.queryGenerator.authTestQuery(), options);\n\n    return;\n  }\n\n  async databaseVersion(options) {\n    return await this.getQueryInterface().databaseVersion(options);\n  }\n\n  /**\n   * Get the fn for random based on the dialect\n   *\n   * @returns {Sequelize.fn}\n   */\n  random() {\n    if (['postgres', 'sqlite', 'snowflake'].includes(this.getDialect())) {\n      return this.fn('RANDOM');\n    }\n    return this.fn('RAND');\n  }\n\n  /**\n   * Creates an object representing a database function. This can be used in search queries, both in where and order parts, and as default values in column definitions.\n   * If you want to refer to columns in your function, you should use `sequelize.col`, so that the columns are properly interpreted as columns and not a strings.\n   *\n   * @see\n   * {@link Model.findAll}\n   * @see\n   * {@link Sequelize.define}\n   * @see\n   * {@link Sequelize.col}\n   *\n   * @param {string} fn The function you want to call\n   * @param {any} args All further arguments will be passed as arguments to the function\n   *\n   * @since v2.0.0-dev3\n   * @memberof Sequelize\n   * @returns {Sequelize.fn}\n   *\n   * @example <caption>Convert a user's username to upper case</caption>\n   * instance.update({\n   *   username: sequelize.fn('upper', sequelize.col('username'))\n   * });\n   */\n  static fn(fn, ...args) {\n    return new Utils.Fn(fn, args);\n  }\n\n  /**\n   * Creates an object which represents a column in the DB, this allows referencing another column in your query. This is often useful in conjunction with `sequelize.fn`, since raw string arguments to fn will be escaped.\n   *\n   * @see\n   * {@link Sequelize#fn}\n   *\n   * @param {string} col The name of the column\n   * @since v2.0.0-dev3\n   * @memberof Sequelize\n   *\n   * @returns {Sequelize.col}\n   */\n  static col(col) {\n    return new Utils.Col(col);\n  }\n\n  /**\n   * Creates an object representing a call to the cast function.\n   *\n   * @param {any} val The value to cast\n   * @param {string} type The type to cast it to\n   * @since v2.0.0-dev3\n   * @memberof Sequelize\n   *\n   * @returns {Sequelize.cast}\n   */\n  static cast(val, type) {\n    return new Utils.Cast(val, type);\n  }\n\n  /**\n   * Creates an object representing a literal, i.e. something that will not be escaped.\n   *\n   * @param {any} val literal value\n   * @since v2.0.0-dev3\n   * @memberof Sequelize\n   *\n   * @returns {Sequelize.literal}\n   */\n  static literal(val) {\n    return new Utils.Literal(val);\n  }\n\n  /**\n   * An AND query\n   *\n   * @see\n   * {@link Model.findAll}\n   *\n   * @param {...string|object} args Each argument will be joined by AND\n   * @since v2.0.0-dev3\n   * @memberof Sequelize\n   *\n   * @returns {Sequelize.and}\n   */\n  static and(...args) {\n    return { [Op.and]: args };\n  }\n\n  /**\n   * An OR query\n   *\n   * @see\n   * {@link Model.findAll}\n   *\n   * @param {...string|object} args Each argument will be joined by OR\n   * @since v2.0.0-dev3\n   * @memberof Sequelize\n   *\n   * @returns {Sequelize.or}\n   */\n  static or(...args) {\n    return { [Op.or]: args };\n  }\n\n  /**\n   * Creates an object representing nested where conditions for postgres/sqlite/mysql json data-type.\n   *\n   * @see\n   * {@link Model.findAll}\n   *\n   * @param {string|object} conditionsOrPath A hash containing strings/numbers or other nested hash, a string using dot notation or a string using postgres/sqlite/mysql json syntax.\n   * @param {string|number|boolean} [value] An optional value to compare against. Produces a string of the form \"<json path> = '<value>'\".\n   * @memberof Sequelize\n   *\n   * @returns {Sequelize.json}\n   */\n  static json(conditionsOrPath, value) {\n    return new Utils.Json(conditionsOrPath, value);\n  }\n\n  /**\n   * A way of specifying attr = condition.\n   *\n   * The attr can either be an object taken from `Model.rawAttributes` (for example `Model.rawAttributes.id` or `Model.rawAttributes.name`). The\n   * attribute should be defined in your model definition. The attribute can also be an object from one of the sequelize utility functions (`sequelize.fn`, `sequelize.col` etc.)\n   *\n   * For string attributes, use the regular `{ where: { attr: something }}` syntax. If you don't want your string to be escaped, use `sequelize.literal`.\n   *\n   * @see\n   * {@link Model.findAll}\n   *\n   * @param {object} attr The attribute, which can be either an attribute object from `Model.rawAttributes` or a sequelize object, for example an instance of `sequelize.fn`. For simple string attributes, use the POJO syntax\n   * @param {symbol} [comparator='Op.eq'] operator\n   * @param {string|object} logic The condition. Can be both a simply type, or a further condition (`or`, `and`, `.literal` etc.)\n   * @since v2.0.0-dev3\n   */\n  static where(attr, comparator, logic) {\n    return new Utils.Where(attr, comparator, logic);\n  }\n\n  /**\n   * Start a transaction. When using transactions, you should pass the transaction in the options argument in order for the query to happen under that transaction @see {@link Transaction}\n   *\n   * If you have [CLS](https://github.com/Jeff-Lewis/cls-hooked) enabled, the transaction will automatically be passed to any query that runs within the callback\n   *\n   * @example\n   *\n   * try {\n   *   const transaction = await sequelize.transaction();\n   *   const user = await User.findOne(..., { transaction });\n   *   await user.update(..., { transaction });\n   *   await transaction.commit();\n   * } catch {\n   *   await transaction.rollback()\n   * }\n   *\n   * @example <caption>A syntax for automatically committing or rolling back based on the promise chain resolution is also supported</caption>\n   *\n   * try {\n   *   await sequelize.transaction(transaction => { // Note that we pass a callback rather than awaiting the call with no arguments\n   *     const user = await User.findOne(..., {transaction});\n   *     await user.update(..., {transaction});\n   *   });\n   *   // Committed\n   * } catch(err) {\n   *   // Rolled back\n   *   console.error(err);\n   * }\n   * @example <caption>To enable CLS, add it do your project, create a namespace and set it on the sequelize constructor:</caption>\n   *\n   * const cls = require('cls-hooked');\n   * const namespace = cls.createNamespace('....');\n   * const Sequelize = require('sequelize');\n   * Sequelize.useCLS(namespace);\n   *\n   * // Note, that CLS is enabled for all sequelize instances, and all instances will share the same namespace\n   *\n   * @param {object}   [options] Transaction options\n   * @param {string}   [options.type='DEFERRED'] See `Sequelize.Transaction.TYPES` for possible options. Sqlite only.\n   * @param {string}   [options.isolationLevel] See `Sequelize.Transaction.ISOLATION_LEVELS` for possible options\n   * @param {string}   [options.deferrable] Sets the constraints to be deferred or immediately checked. See `Sequelize.Deferrable`. PostgreSQL Only\n   * @param {boolean}  [options.readOnly] Whether this transaction will only be used to read data. Used to determine whether sequelize is allowed to use a read replication server.\n   * @param {Function} [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {Function} [autoCallback] The callback is called with the transaction object, and should return a promise. If the promise is resolved, the transaction commits; if the promise rejects, the transaction rolls back\n   *\n   * @returns {Promise}\n   */\n  async transaction(options, autoCallback) {\n    if (typeof options === 'function') {\n      autoCallback = options;\n      options = undefined;\n    }\n\n    const transaction = new Transaction(this, options);\n\n    if (!autoCallback) {\n      await transaction.prepareEnvironment(/* cls */ false);\n      return transaction;\n    }\n\n    // autoCallback provided\n    return Sequelize._clsRun(async () => {\n      await transaction.prepareEnvironment(/* cls */ true);\n\n      let result;\n      try {\n        result = await autoCallback(transaction);\n      } catch (err) {\n        try {\n          await transaction.rollback();\n        } catch (ignore) {\n          // ignore, because 'rollback' will already print the error before killing the connection\n        }\n\n        throw err;\n      }\n\n      await transaction.commit();\n      return result;\n    });\n  }\n\n  /**\n   * Use CLS (Continuation Local Storage) with Sequelize. With Continuation\n   * Local Storage, all queries within the transaction callback will\n   * automatically receive the transaction object.\n   *\n   * CLS namespace provided is stored as `Sequelize._cls`\n   *\n   * @param {object} ns CLS namespace\n   * @returns {object} Sequelize constructor\n   */\n  static useCLS(ns) {\n    // check `ns` is valid CLS namespace\n    if (!ns || typeof ns !== 'object' || typeof ns.bind !== 'function' || typeof ns.run !== 'function') throw new Error('Must provide CLS namespace');\n\n    // save namespace as `Sequelize._cls`\n    Sequelize._cls = ns;\n\n    // return Sequelize for chaining\n    return this;\n  }\n\n  /**\n   * Run function in CLS context.\n   * If no CLS context in use, just runs the function normally\n   *\n   * @private\n   * @param {Function} fn Function to run\n   * @returns {*} Return value of function\n   */\n  static _clsRun(fn) {\n    const ns = Sequelize._cls;\n    if (!ns) return fn();\n\n    let res;\n    ns.run(context => res = fn(context));\n    return res;\n  }\n\n  log(...args) {\n    let options;\n\n    const last = _.last(args);\n\n    if (last && _.isPlainObject(last) && Object.prototype.hasOwnProperty.call(last, 'logging')) {\n      options = last;\n\n      // remove options from set of logged arguments if options.logging is equal to console.log\n      // eslint-disable-next-line no-console\n      if (options.logging === console.log) {\n        args.splice(args.length - 1, 1);\n      }\n    } else {\n      options = this.options;\n    }\n\n    if (options.logging) {\n      if (options.logging === true) {\n        deprecations.noTrueLogging();\n        // eslint-disable-next-line no-console\n        options.logging = console.log;\n      }\n\n      // second argument is sql-timings, when benchmarking option enabled\n      // eslint-disable-next-line no-console\n      if ((this.options.benchmark || options.benchmark) && options.logging === console.log) {\n        args = [`${args[0]} Elapsed time: ${args[1]}ms`];\n      }\n\n      options.logging(...args);\n    }\n  }\n\n  /**\n   * Close all connections used by this sequelize instance, and free all references so the instance can be garbage collected.\n   *\n   * Normally this is done on process exit, so you only need to call this method if you are creating multiple instances, and want\n   * to garbage collect some of them.\n   *\n   * @returns {Promise}\n   */\n  close() {\n    return this.connectionManager.close();\n  }\n\n  normalizeDataType(Type) {\n    let type = typeof Type === 'function' ? new Type() : Type;\n    const dialectTypes = this.dialect.DataTypes || {};\n\n    if (dialectTypes[type.key]) {\n      type = dialectTypes[type.key].extend(type);\n    }\n\n    if (type instanceof DataTypes.ARRAY) {\n      if (!type.type) {\n        throw new Error('ARRAY is missing type definition for its values.');\n      }\n      if (dialectTypes[type.type.key]) {\n        type.type = dialectTypes[type.type.key].extend(type.type);\n      }\n    }\n\n    return type;\n  }\n\n  normalizeAttribute(attribute) {\n    if (!_.isPlainObject(attribute)) {\n      attribute = { type: attribute };\n    }\n\n    if (!attribute.type) return attribute;\n\n    attribute.type = this.normalizeDataType(attribute.type);\n\n    if (Object.prototype.hasOwnProperty.call(attribute, 'defaultValue')) {\n      if (typeof attribute.defaultValue === 'function' &&\n        [DataTypes.NOW, DataTypes.UUIDV1, DataTypes.UUIDV4].includes(attribute.defaultValue)\n      ) {\n        attribute.defaultValue = new attribute.defaultValue();\n      }\n    }\n\n    if (attribute.type instanceof DataTypes.ENUM) {\n      // The ENUM is a special case where the type is an object containing the values\n      if (attribute.values) {\n        attribute.type.values = attribute.type.options.values = attribute.values;\n      } else {\n        attribute.values = attribute.type.values;\n      }\n\n      if (!attribute.values.length) {\n        throw new Error('Values for ENUM have not been defined.');\n      }\n    }\n\n    return attribute;\n  }\n}\n\n// Aliases\nSequelize.prototype.fn = Sequelize.fn;\nSequelize.prototype.col = Sequelize.col;\nSequelize.prototype.cast = Sequelize.cast;\nSequelize.prototype.literal = Sequelize.literal;\nSequelize.prototype.and = Sequelize.and;\nSequelize.prototype.or = Sequelize.or;\nSequelize.prototype.json = Sequelize.json;\nSequelize.prototype.where = Sequelize.where;\nSequelize.prototype.validate = Sequelize.prototype.authenticate;\n\n/**\n * Sequelize version number.\n */\n// To avoid any errors on startup when this field is unused, only resolve it as needed.\n// this is to prevent any potential issues on startup with unusual environments (eg, bundled code)\n// where relative paths may fail that are unnecessary.\nObject.defineProperty(Sequelize, 'version', {\n  enumerable: true,\n  get() {\n    return require('../package.json').version;\n  }\n});\n\nSequelize.options = { hooks: {} };\n\n/**\n * @private\n */\nSequelize.Utils = Utils;\n\n/**\n * Operators symbols to be used for querying data\n *\n * @see  {@link Operators}\n */\nSequelize.Op = Op;\n\n/**\n * Available table hints to be used for querying data in mssql for table hints\n *\n * @see {@link TableHints}\n */\nSequelize.TableHints = TableHints;\n\n/**\n * Available index hints to be used for querying data in mysql for index hints\n *\n * @see {@link IndexHints}\n */\nSequelize.IndexHints = IndexHints;\n\n/**\n * A reference to the sequelize transaction class. Use this to access isolationLevels and types when creating a transaction\n *\n * @see {@link Transaction}\n * @see {@link Sequelize.transaction}\n */\nSequelize.Transaction = Transaction;\n\n/**\n * A reference to Sequelize constructor from sequelize. Useful for accessing DataTypes, Errors etc.\n *\n * @see {@link Sequelize}\n */\nSequelize.prototype.Sequelize = Sequelize;\n\n/**\n * Available query types for use with `sequelize.query`\n *\n * @see {@link QueryTypes}\n */\nSequelize.prototype.QueryTypes = Sequelize.QueryTypes = QueryTypes;\n\n/**\n * Exposes the validator.js object, so you can extend it with custom validation functions. The validator is exposed both on the instance, and on the constructor.\n *\n * @see https://github.com/chriso/validator.js\n */\nSequelize.prototype.Validator = Sequelize.Validator = Validator;\n\nSequelize.Model = Model;\n\nSequelize.QueryInterface = QueryInterface;\nSequelize.BelongsTo = BelongsTo;\nSequelize.HasOne = HasOne;\nSequelize.HasMany = HasMany;\nSequelize.BelongsToMany = BelongsToMany;\n\nSequelize.DataTypes = DataTypes;\nfor (const dataType in DataTypes) {\n  Sequelize[dataType] = DataTypes[dataType];\n}\n\n/**\n * A reference to the deferrable collection. Use this to access the different deferrable options.\n *\n * @see {@link Transaction.Deferrable}\n * @see {@link Sequelize#transaction}\n */\nSequelize.Deferrable = Deferrable;\n\n/**\n * A reference to the sequelize association class.\n *\n * @see {@link Association}\n */\nSequelize.prototype.Association = Sequelize.Association = Association;\n\n/**\n * Provide alternative version of `inflection` module to be used by `Utils.pluralize` etc.\n *\n * @param {object} _inflection - `inflection` module\n */\nSequelize.useInflection = Utils.useInflection;\n\n/**\n * Allow hooks to be defined on Sequelize + on sequelize instance as universal hooks to run on all models\n * and on Sequelize/sequelize methods e.g. Sequelize(), Sequelize#define()\n */\nHooks.applyTo(Sequelize);\nHooks.applyTo(Sequelize.prototype);\n\n/**\n * Expose various errors available\n */\n\n// expose alias to BaseError\nSequelize.Error = sequelizeErrors.BaseError;\n\nfor (const error of Object.keys(sequelizeErrors)) {\n  Sequelize[error] = sequelizeErrors[error];\n}\n\nmodule.exports = Sequelize;\nmodule.exports.Sequelize = Sequelize;\nmodule.exports.default = Sequelize;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/utils.js":{"lineLengths":[13,38,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,42,42,28,53,34,34,41,55,39,82,82,37,27,1,38,37,19,18,27,3,16,1,32,40,19,18,29,3,16,1,38,27,26,56,1,34,30,58,66,67,42,7,25,5,5,1,38,18,20,32,35,29,27,30,76,50,72,50,16,30,9,7,7,3,16,1,22,44,62,1,30,24,75,1,28,26,36,1,32,27,37,1,34,25,35,1,30,31,24,67,1,24,58,24,77,1,54,36,18,41,55,20,5,48,18,5,51,26,5,5,1,30,43,64,85,92,3,38,17,1,44,46,42,59,35,20,82,55,7,18,7,3,56,61,3,17,1,50,48,19,39,55,58,74,63,37,7,168,53,38,24,7,49,57,39,76,11,11,7,7,3,20,1,48,56,20,30,77,117,67,14,40,7,5,3,16,1,48,29,90,1,34,34,73,1,48,52,113,1,46,41,36,24,44,25,5,15,3,42,20,3,42,20,3,39,24,3,29,25,3,31,37,3,15,1,40,39,25,17,3,39,17,3,79,17,3,37,1,54,60,20,26,46,17,21,33,100,25,7,7,19,3,16,1,60,111,23,23,31,25,3,11,1,18,22,30,32,35,56,1,28,35,35,50,1,34,35,30,17,26,40,39,65,62,48,14,55,7,7,24,3,38,1,46,23,1,42,34,25,12,17,21,3,11,38,3,1,16,35,29,12,26,17,5,19,3,1,18,36,32,12,19,36,30,3,1,20,39,20,12,19,3,1,26,36,40,12,39,41,12,35,18,27,7,5,3,1,20,37,45,12,27,25,23,5,31,33,23,3,1,22,28,78,1,36,30,52,1,40,30,70,1,40,28,67,1,36,50,43,1,44,34,30,37,37,5,16,1,48,39,26,31,17,30,47,34,123,36,9,9,5,5,16,1,28,38,26,36,61,114,64,3,15,1,30,33,44,1,32,35,49,37,28,5,18,5,1,46,33,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/utils.js"],"sourcesContent":["'use strict';\n\nconst DataTypes = require('./data-types');\nconst SqlString = require('./sql-string');\nconst _ = require('lodash');\nconst baseIsNative = require('lodash/_baseIsNative');\nconst uuidv1 = require('uuid').v1;\nconst uuidv4 = require('uuid').v4;\nconst operators = require('./operators');\nconst operatorsSet = new Set(Object.values(operators));\n\nlet inflection = require('inflection');\n\nexports.classToInvokable = require('./utils/class-to-invokable').classToInvokable;\nexports.joinSQLFragments = require('./utils/join-sql-fragments').joinSQLFragments;\n\nfunction useInflection(_inflection) {\n  inflection = _inflection;\n}\nexports.useInflection = useInflection;\n\nfunction camelizeIf(str, condition) {\n  let result = str;\n\n  if (condition) {\n    result = camelize(str);\n  }\n\n  return result;\n}\nexports.camelizeIf = camelizeIf;\n\nfunction underscoredIf(str, condition) {\n  let result = str;\n\n  if (condition) {\n    result = underscore(str);\n  }\n\n  return result;\n}\nexports.underscoredIf = underscoredIf;\n\nfunction isPrimitive(val) {\n  const type = typeof val;\n  return ['string', 'number', 'boolean'].includes(type);\n}\nexports.isPrimitive = isPrimitive;\n\n// Same concept as _.merge, but don't overwrite properties that have already been assigned\nfunction mergeDefaults(a, b) {\n  return _.mergeWith(a, b, (objectValue, sourceValue) => {\n    // If it's an object, let _ handle it this time, we will be called again for each property\n    if (!_.isPlainObject(objectValue) && objectValue !== undefined) {\n      // _.isNative includes a check for core-js and throws an error if present.\n      // Depending on _baseIsNative bypasses the core-js check.\n      if (_.isFunction(objectValue) && baseIsNative(objectValue)) {\n        return sourceValue || objectValue;\n      }\n      return objectValue;\n    }\n  });\n}\nexports.mergeDefaults = mergeDefaults;\n\n// An alternative to _.merge, which doesn't clone its arguments\n// Cloning is a bad idea because options arguments may contain references to sequelize\n// models - which again reference database libs which don't like to be cloned (in particular pg-native)\nfunction merge() {\n  const result = {};\n\n  for (const obj of arguments) {\n    _.forOwn(obj, (value, key) => {\n      if (value !== undefined) {\n        if (!result[key]) {\n          result[key] = value;\n        } else if (_.isPlainObject(value) && _.isPlainObject(result[key])) {\n          result[key] = merge(result[key], value);\n        } else if (Array.isArray(value) && Array.isArray(result[key])) {\n          result[key] = value.concat(result[key]);\n        } else {\n          result[key] = value;\n        }\n      }\n    });\n  }\n\n  return result;\n}\nexports.merge = merge;\n\nfunction spliceStr(str, index, count, add) {\n  return str.slice(0, index) + add + str.slice(index + count);\n}\nexports.spliceStr = spliceStr;\n\nfunction camelize(str) {\n  return str.trim().replace(/[-_\\s]+(.)?/g, (match, c) => c.toUpperCase());\n}\nexports.camelize = camelize;\n\nfunction underscore(str) {\n  return inflection.underscore(str);\n}\nexports.underscore = underscore;\n\nfunction singularize(str) {\n  return inflection.singularize(str);\n}\nexports.singularize = singularize;\n\nfunction pluralize(str) {\n  return inflection.pluralize(str);\n}\nexports.pluralize = pluralize;\n\n/**\n * @deprecated use {@link injectReplacements} instead. This method has been removed in v7.\n *\n * @param {unknown[]} arr - first item is the SQL, following items are the positional replacements.\n * @param {AbstractDialect} dialect\n */\nfunction format(arr, dialect) {\n  const timeZone = null;\n  // Make a clone of the array beacuse format modifies the passed args\n  return SqlString.format(arr[0], arr.slice(1), timeZone, dialect);\n}\nexports.format = format;\n\n/**\n * @deprecated use {@link injectReplacements} instead. This method has been removed in v7.\n *\n * @param {string} sql\n * @param {object} parameters\n * @param {AbstractDialect} dialect\n */\nfunction formatNamedParameters(sql, parameters, dialect) {\n  const timeZone = null;\n  return SqlString.formatNamedParameters(sql, parameters, timeZone, dialect);\n}\nexports.formatNamedParameters = formatNamedParameters;\n\nfunction cloneDeep(obj, onlyPlain) {\n  obj = obj || {};\n  return _.cloneDeepWith(obj, elem => {\n    // Do not try to customize cloning of arrays or POJOs\n    if (Array.isArray(elem) || _.isPlainObject(elem)) {\n      return undefined;\n    }\n\n    // If we specified to clone only plain objects & arrays, we ignore everyhing else\n    // In any case, don't clone stuff that's an object, but not a plain one - fx example sequelize models and instances\n    if (onlyPlain || typeof elem === 'object') {\n      return elem;\n    }\n\n    // Preserve special data-types like `fn` across clones. _.get() is used for checking up the prototype chain\n    if (elem && typeof elem.clone === 'function') {\n      return elem.clone();\n    }\n  });\n}\nexports.cloneDeep = cloneDeep;\n\n/* Expand and normalize finder options */\nfunction mapFinderOptions(options, Model) {\n  if (options.attributes && Array.isArray(options.attributes)) {\n    options.attributes = Model._injectDependentVirtualAttributes(options.attributes);\n    options.attributes = options.attributes.filter(v => !Model._virtualAttributes.has(v));\n  }\n\n  mapOptionFieldNames(options, Model);\n\n  return options;\n}\nexports.mapFinderOptions = mapFinderOptions;\n\n/* Used to map field names in attributes and where conditions */\nfunction mapOptionFieldNames(options, Model) {\n  if (Array.isArray(options.attributes)) {\n    options.attributes = options.attributes.map(attr => {\n      // Object lookups will force any variable to strings, we don't want that for special objects etc\n      if (typeof attr !== 'string') return attr;\n      // Map attributes to aliased syntax attributes\n      if (Model.rawAttributes[attr] && attr !== Model.rawAttributes[attr].field) {\n        return [Model.rawAttributes[attr].field, attr];\n      }\n      return attr;\n    });\n  }\n\n  if (options.where && _.isPlainObject(options.where)) {\n    options.where = mapWhereFieldNames(options.where, Model);\n  }\n\n  return options;\n}\nexports.mapOptionFieldNames = mapOptionFieldNames;\n\nfunction mapWhereFieldNames(attributes, Model) {\n  if (attributes) {\n    attributes = cloneDeep(attributes);\n    getComplexKeys(attributes).forEach(attribute => {\n      const rawAttribute = Model.rawAttributes[attribute];\n\n      if (rawAttribute && rawAttribute.field !== rawAttribute.fieldName) {\n        attributes[rawAttribute.field] = attributes[attribute];\n        delete attributes[attribute];\n      }\n\n      if (_.isPlainObject(attributes[attribute])\n        && !(rawAttribute && (\n          rawAttribute.type instanceof DataTypes.HSTORE\n          || rawAttribute.type instanceof DataTypes.JSON))) { // Prevent renaming of HSTORE & JSON fields\n        attributes[attribute] = mapOptionFieldNames({\n          where: attributes[attribute]\n        }, Model).where;\n      }\n\n      if (Array.isArray(attributes[attribute])) {\n        attributes[attribute].forEach((where, index) => {\n          if (_.isPlainObject(where)) {\n            attributes[attribute][index] = mapWhereFieldNames(where, Model);\n          }\n        });\n      }\n\n    });\n  }\n\n  return attributes;\n}\nexports.mapWhereFieldNames = mapWhereFieldNames;\n\n/* Used to map field names in values */\nfunction mapValueFieldNames(dataValues, fields, Model) {\n  const values = {};\n\n  for (const attr of fields) {\n    if (dataValues[attr] !== undefined && !Model._virtualAttributes.has(attr)) {\n      // Field name mapping\n      if (Model.rawAttributes[attr] && Model.rawAttributes[attr].field && Model.rawAttributes[attr].field !== attr) {\n        values[Model.rawAttributes[attr].field] = dataValues[attr];\n      } else {\n        values[attr] = dataValues[attr];\n      }\n    }\n  }\n\n  return values;\n}\nexports.mapValueFieldNames = mapValueFieldNames;\n\nfunction isColString(value) {\n  return typeof value === 'string' && value[0] === '$' && value[value.length - 1] === '$';\n}\nexports.isColString = isColString;\n\nfunction canTreatArrayAsAnd(arr) {\n  return arr.some(arg => _.isPlainObject(arg) || arg instanceof Where);\n}\nexports.canTreatArrayAsAnd = canTreatArrayAsAnd;\n\nfunction combineTableNames(tableName1, tableName2) {\n  return tableName1.toLowerCase() < tableName2.toLowerCase() ? tableName1 + tableName2 : tableName2 + tableName1;\n}\nexports.combineTableNames = combineTableNames;\n\nfunction toDefaultValue(value, dialect) {\n  if (typeof value === 'function') {\n    const tmp = value();\n    if (tmp instanceof DataTypes.ABSTRACT) {\n      return tmp.toSql();\n    }\n    return tmp;\n  }\n  if (value instanceof DataTypes.UUIDV1) {\n    return uuidv1();\n  }\n  if (value instanceof DataTypes.UUIDV4) {\n    return uuidv4();\n  }\n  if (value instanceof DataTypes.NOW) {\n    return now(dialect);\n  }\n  if (Array.isArray(value)) {\n    return value.slice();\n  }\n  if (_.isPlainObject(value)) {\n    return { ...value };\n  }\n  return value;\n}\nexports.toDefaultValue = toDefaultValue;\n\n/**\n * Determine if the default value provided exists and can be described\n * in a db schema using the DEFAULT directive.\n *\n * @param  {*} value Any default value.\n * @returns {boolean} yes / no.\n * @private\n */\nfunction defaultValueSchemable(value) {\n  if (value === undefined) { return false; }\n\n  // TODO this will be schemable when all supported db\n  // have been normalized for this case\n  if (value instanceof DataTypes.NOW) { return false; }\n\n  if (value instanceof DataTypes.UUIDV1 || value instanceof DataTypes.UUIDV4) { return false; }\n\n  return typeof value !== 'function';\n}\nexports.defaultValueSchemable = defaultValueSchemable;\n\nfunction removeNullValuesFromHash(hash, omitNull, options) {\n  let result = hash;\n\n  options = options || {};\n  options.allowNull = options.allowNull || [];\n\n  if (omitNull) {\n    const _hash = {};\n\n    _.forIn(hash, (val, key) => {\n      if (options.allowNull.includes(key) || key.endsWith('Id') || val !== null && val !== undefined) {\n        _hash[key] = val;\n      }\n    });\n\n    result = _hash;\n  }\n\n  return result;\n}\nexports.removeNullValuesFromHash = removeNullValuesFromHash;\n\nconst dialects = new Set(['mariadb', 'mysql', 'postgres', 'sqlite', 'mssql', 'db2', 'oracle']);\n\nfunction now(dialect) {\n  const d = new Date();\n  if (!dialects.has(dialect)) {\n    d.setMilliseconds(0);\n  }\n  return d;\n}\nexports.now = now;\n\n// Note: Use the `quoteIdentifier()` and `escape()` methods on the\n// `QueryInterface` instead for more portable code.\n\nconst TICK_CHAR = '`';\nexports.TICK_CHAR = TICK_CHAR;\n\nfunction addTicks(s, tickChar) {\n  tickChar = tickChar || TICK_CHAR;\n  return tickChar + removeTicks(s, tickChar) + tickChar;\n}\nexports.addTicks = addTicks;\n\nfunction removeTicks(s, tickChar) {\n  tickChar = tickChar || TICK_CHAR;\n  return s.replace(new RegExp(tickChar, 'g'), '');\n}\nexports.removeTicks = removeTicks;\n\n/**\n * Receives a tree-like object and returns a plain object which depth is 1.\n *\n * - Input:\n *\n *  {\n *    name: 'John',\n *    address: {\n *      street: 'Fake St. 123',\n *      coordinates: {\n *        longitude: 55.6779627,\n *        latitude: 12.5964313\n *      }\n *    }\n *  }\n *\n * - Output:\n *\n *  {\n *    name: 'John',\n *    address.street: 'Fake St. 123',\n *    address.coordinates.latitude: 55.6779627,\n *    address.coordinates.longitude: 12.5964313\n *  }\n *\n * @param {object} value an Object\n * @returns {object} a flattened object\n * @private\n */\nfunction flattenObjectDeep(value) {\n  if (!_.isPlainObject(value)) return value;\n  const flattenedObj = {};\n\n  function flattenObject(obj, subPath) {\n    Object.keys(obj).forEach(key => {\n      const pathToProperty = subPath ? `${subPath}.${key}` : key;\n      if (typeof obj[key] === 'object' && obj[key] !== null) {\n        flattenObject(obj[key], pathToProperty);\n      } else {\n        flattenedObj[pathToProperty] = _.get(obj, key);\n      }\n    });\n    return flattenedObj;\n  }\n\n  return flattenObject(value, undefined);\n}\nexports.flattenObjectDeep = flattenObjectDeep;\n\n/**\n * Utility functions for representing SQL functions, and columns that should be escaped.\n * Please do not use these functions directly, use Sequelize.fn and Sequelize.col instead.\n *\n * @private\n */\nclass SequelizeMethod {}\nexports.SequelizeMethod = SequelizeMethod;\n\nclass Fn extends SequelizeMethod {\n  constructor(fn, args) {\n    super();\n    this.fn = fn;\n    this.args = args;\n  }\n  clone() {\n    return new Fn(this.fn, this.args);\n  }\n}\nexports.Fn = Fn;\n\nclass Col extends SequelizeMethod {\n  constructor(col, ...args) {\n    super();\n    if (args.length > 0) {\n      col = args;\n    }\n    this.col = col;\n  }\n}\nexports.Col = Col;\n\nclass Cast extends SequelizeMethod {\n  constructor(val, type, json) {\n    super();\n    this.val = val;\n    this.type = (type || '').trim();\n    this.json = json || false;\n  }\n}\nexports.Cast = Cast;\n\nclass Literal extends SequelizeMethod {\n  constructor(val) {\n    super();\n    this.val = val;\n  }\n}\nexports.Literal = Literal;\n\nclass Json extends SequelizeMethod {\n  constructor(conditionsOrPath, value) {\n    super();\n    if (_.isObject(conditionsOrPath)) {\n      this.conditions = conditionsOrPath;\n    } else {\n      this.path = conditionsOrPath;\n      if (value) {\n        this.value = value;\n      }\n    }\n  }\n}\nexports.Json = Json;\n\nclass Where extends SequelizeMethod {\n  constructor(attribute, comparator, logic) {\n    super();\n    if (logic === undefined) {\n      logic = comparator;\n      comparator = '=';\n    }\n\n    this.attribute = attribute;\n    this.comparator = comparator;\n    this.logic = logic;\n  }\n}\nexports.Where = Where;\n\n//Collection of helper methods to make it easier to work with symbol operators\n\n/**\n * getOperators\n *\n * @param  {object} obj\n * @returns {Array<symbol>} All operators properties of obj\n * @private\n */\nfunction getOperators(obj) {\n  return Object.getOwnPropertySymbols(obj).filter(s => operatorsSet.has(s));\n}\nexports.getOperators = getOperators;\n\n/**\n * getComplexKeys\n *\n * @param  {object} obj\n * @returns {Array<string|symbol>} All keys including operators\n * @private\n */\nfunction getComplexKeys(obj) {\n  return getOperators(obj).concat(Object.keys(obj));\n}\nexports.getComplexKeys = getComplexKeys;\n\n/**\n * getComplexSize\n *\n * @param  {object|Array} obj\n * @returns {number}      Length of object properties including operators if obj is array returns its length\n * @private\n */\nfunction getComplexSize(obj) {\n  return Array.isArray(obj) ? obj.length : getComplexKeys(obj).length;\n}\nexports.getComplexSize = getComplexSize;\n\n/**\n * Returns true if a where clause is empty, even with Symbols\n *\n * @param  {object} obj\n * @returns {boolean}\n * @private\n */\nfunction isWhereEmpty(obj) {\n  return !!obj && _.isEmpty(obj) && getOperators(obj).length === 0;\n}\nexports.isWhereEmpty = isWhereEmpty;\n\n/**\n * Returns ENUM name by joining table and column name\n *\n * @param {string} tableName\n * @param {string} columnName\n * @returns {string}\n * @private\n */\nfunction generateEnumName(tableName, columnName) {\n  return `enum_${tableName}_${columnName}`;\n}\nexports.generateEnumName = generateEnumName;\n\n/**\n * Returns an new Object which keys are camelized\n *\n * @param {object} obj\n * @returns {string}\n * @private\n */\nfunction camelizeObjectKeys(obj) {\n  const newObj = new Object();\n  Object.keys(obj).forEach(key => {\n    newObj[camelize(key)] = obj[key];\n  });\n  return newObj;\n}\nexports.camelizeObjectKeys = camelizeObjectKeys;\n\n/**\n * Assigns own and inherited enumerable string and symbol keyed properties of source\n * objects to the destination object.\n *\n * https://lodash.com/docs/4.17.4#defaults\n *\n * **Note:** This method mutates `object`.\n *\n * @param {object} object The destination object.\n * @param {...object} [sources] The source objects.\n * @returns {object} Returns `object`.\n * @private\n */\nfunction defaults(object, ...sources) {\n  object = Object(object);\n\n  sources.forEach(source => {\n    if (source) {\n      source = Object(source);\n\n      getComplexKeys(source).forEach(key => {\n        const value = object[key];\n        if (\n          value === undefined ||\n            _.eq(value, Object.prototype[key]) &&\n            !Object.prototype.hasOwnProperty.call(object, key)\n\n        ) {\n          object[key] = source[key];\n        }\n      });\n    }\n  });\n\n  return object;\n}\nexports.defaults = defaults;\n\n/**\n *\n * @param {object} index\n * @param {Array}  index.fields\n * @param {string} [index.name]\n * @param {string|object} tableName\n *\n * @returns {object}\n * @private\n */\nfunction nameIndex(index, tableName) {\n  if (tableName.tableName) tableName = tableName.tableName;\n\n  if (!Object.prototype.hasOwnProperty.call(index, 'name')) {\n    const fields = index.fields.map(\n      field => typeof field === 'string' ? field : field.name || field.attribute\n    );\n    index.name = underscore(`${tableName}_${fields.join('_')}`);\n  }\n\n  return index;\n}\nexports.nameIndex = nameIndex;\n\n/**\n * Checks if 2 arrays intersect.\n *\n * @param {Array} arr1\n * @param {Array} arr2\n * @private\n */\nfunction intersects(arr1, arr2) {\n  return arr1.some(v => arr2.includes(v));\n}\nexports.intersects = intersects;\n\n/**\n * Stringify a value as JSON with some differences:\n * - bigints are stringified as a json string. (`safeStringifyJson({ val: 1n })` outputs `'{ \"val\": \"1\" }'`).\n *   This is because of a decision by TC39 to not support bigint in JSON.stringify https://github.com/tc39/proposal-bigint/issues/24\n *\n * @param {any} value the value to stringify.\n * @returns {string} the resulting json.\n */\nfunction safeStringifyJson(value /* : any */) /* : string */ {\n  return JSON.stringify(value, (key, value) => {\n    if (typeof value === 'bigint') {\n      return String(value);\n    }\n\n    return value;\n  });\n}\n\nexports.safeStringifyJson = safeStringifyJson;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/data-types.js":{"lineLengths":[13,29,28,27,44,64,44,33,45,20,67,67,16,21,31,3,11,20,3,29,26,45,5,17,3,29,26,45,5,61,3,21,21,3,27,26,28,27,20,5,3,26,37,3,1,37,31,31,12,79,27,34,41,3,11,29,33,30,7,3,19,70,87,20,7,96,5,16,3,16,24,31,16,3,23,29,3,1,27,31,70,3,11,29,30,30,7,3,1,29,23,12,71,27,40,3,11,41,18,26,20,28,18,26,14,24,5,3,19,36,96,5,16,3,1,31,11,20,3,19,36,96,5,16,3,1,31,29,12,38,17,23,8,5,27,34,38,38,40,32,38,3,11,26,23,35,47,39,7,20,5,25,28,5,25,28,5,18,3,19,44,115,5,16,3,22,138,20,5,48,31,5,18,3,18,26,33,16,3,18,26,33,16,3,25,31,3,25,31,3,1,30,19,42,115,5,16,3,1,31,1,32,1,33,1,30,1,28,33,72,3,19,44,95,5,16,3,1,27,33,72,3,1,29,33,72,3,1,30,33,78,3,11,41,87,5,21,3,19,46,97,5,16,3,1,25,16,17,23,19,5,27,40,31,5,17,4,21,37,4,30,49,3,2,47,53,1,32,11,24,3,19,46,97,5,16,3,20,45,57,25,7,32,30,75,7,30,64,7,5,17,3,1,44,29,11,18,3,1,29,23,12,71,27,40,3,11,22,3,19,43,94,5,16,3,29,87,29,5,17,3,36,169,19,5,62,19,5,16,3,33,27,47,51,7,61,5,26,3,29,33,48,5,52,3,1,33,11,18,3,20,45,3,29,59,48,5,17,3,36,62,19,5,62,19,5,16,3,1,31,19,34,96,5,16,3,1,33,14,16,3,21,33,3,1,30,1,28,1,29,23,12,71,27,40,3,11,41,18,26,20,28,18,26,14,24,5,3,19,63,94,5,16,3,21,34,33,35,14,46,7,5,38,29,3,16,23,3,30,34,33,35,14,46,7,5,36,3,1,30,30,24,12,69,25,38,48,46,5,40,27,3,19,32,95,5,29,94,5,16,3,1,29,28,104,94,5,16,3,1,31,28,104,94,5,16,3,1,31,28,107,96,5,16,3,1,32,35,12,41,36,33,25,3,1,29,24,12,26,84,48,75,12,6,33,27,3,19,39,115,5,16,3,1,30,21,12,60,27,87,3,11,36,3,19,32,95,5,16,3,24,60,3,1,33,27,12,66,27,29,29,3,30,90,3,30,93,3,1,34,34,27,12,66,27,29,29,3,30,90,3,30,93,3,1,35,29,19,67,94,5,16,3,1,29,19,62,94,5,16,3,1,32,19,70,97,5,16,3,1,33,19,36,96,5,16,3,1,36,11,9,7,7,9,10,11,12,10,9,8,7,7,11,10,6,7,10,19,7,9,9,9,17,8,10,8,7,8,7,29,9,11,12,7,7,10,9,10,2,39,63,24,49,3,3,22,75,69,73,71,69,65,77,71,46,38,40,24,50,5,5,1,54,40,48,5,1,37,38,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/data-types.js"],"sourcesContent":["'use strict';\n\nconst util = require('util');\nconst _ = require('lodash');\nconst wkx = require('wkx');\nconst sequelizeErrors = require('./errors');\nconst Validator = require('./utils/validator-extras').validator;\nconst momentTz = require('moment-timezone');\nconst moment = require('moment');\nconst { logger } = require('./utils/logger');\nconst warnings = {};\nconst { classToInvokable } = require('./utils/class-to-invokable');\nconst { joinSQLFragments } = require('./utils/join-sql-fragments');\n\nclass ABSTRACT {\n  toString(options) {\n    return this.toSql(options);\n  }\n  toSql() {\n    return this.key;\n  }\n  stringify(value, options) {\n    if (this._stringify) {\n      return this._stringify(value, options);\n    }\n    return value;\n  }\n  bindParam(value, options) {\n    if (this._bindParam) {\n      return this._bindParam(value, options);\n    }\n    return options.bindParam(this.stringify(value, options));\n  }\n  static toString() {\n    return this.name;\n  }\n  static warn(link, text) {\n    if (!warnings[text]) {\n      warnings[text] = true;\n      logger.warn(`${text} \\n>> Check: ${link}`);\n    }\n  }\n  static extend(oldType) {\n    return new this(oldType.options);\n  }\n}\n\nABSTRACT.prototype.dialectTypes = '';\n\n/**\n * STRING A variable length string\n */\nclass STRING extends ABSTRACT {\n  /**\n   * @param {number} [length=255] length of string\n   * @param {boolean} [binary=false] Is this binary?\n   */\n  constructor(length, binary) {\n    super();\n    const options = typeof length === 'object' && length || { length, binary };\n    this.options = options;\n    this._binary = options.binary;\n    this._length = options.length || 255;\n  }\n  toSql() {\n    return joinSQLFragments([\n      `VARCHAR(${this._length})`,\n      this._binary && 'BINARY'\n    ]);\n  }\n  validate(value) {\n    if (Object.prototype.toString.call(value) !== '[object String]') {\n      if (this.options.binary && Buffer.isBuffer(value) || typeof value === 'number') {\n        return true;\n      }\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid string', value));\n    }\n    return true;\n  }\n\n  get BINARY() {\n    this._binary = true;\n    this.options.binary = true;\n    return this;\n  }\n\n  static get BINARY() {\n    return new this().BINARY;\n  }\n}\n\n/**\n * CHAR A fixed length string\n */\nclass CHAR extends STRING {\n  /**\n   * @param {number} [length=255] length of string\n   * @param {boolean} [binary=false] Is this binary?\n   */\n  constructor(length, binary) {\n    super(typeof length === 'object' && length || { length, binary });\n  }\n  toSql() {\n    return joinSQLFragments([\n      `CHAR(${this._length})`,\n      this._binary && 'BINARY'\n    ]);\n  }\n}\n\n/**\n * Unlimited length TEXT column\n */\nclass TEXT extends ABSTRACT {\n  /**\n   * @param {string} [length=''] could be tiny, medium, long.\n   */\n  constructor(length) {\n    super();\n    const options = typeof length === 'object' && length || { length };\n    this.options = options;\n    this._length = options.length || '';\n  }\n  toSql() {\n    switch (this._length.toLowerCase()) {\n      case 'tiny':\n        return 'TINYTEXT';\n      case 'medium':\n        return 'MEDIUMTEXT';\n      case 'long':\n        return 'LONGTEXT';\n      default:\n        return this.key;\n    }\n  }\n  validate(value) {\n    if (typeof value !== 'string') {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid string', value));\n    }\n    return true;\n  }\n}\n\n/**\n * An unlimited length case-insensitive text column.\n * Original case is preserved but acts case-insensitive when comparing values (such as when finding or unique constraints).\n * Only available in Postgres and SQLite.\n *\n */\nclass CITEXT extends ABSTRACT {\n  toSql() {\n    return 'CITEXT';\n  }\n  validate(value) {\n    if (typeof value !== 'string') {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid string', value));\n    }\n    return true;\n  }\n}\n\n/**\n * Base number type which is used to build other types\n */\nclass NUMBER extends ABSTRACT {\n  /**\n   * @param {object} options type options\n   * @param {string|number} [options.length] length of type, like `INT(4)`\n   * @param {boolean} [options.zerofill] Is zero filled?\n   * @param {boolean} [options.unsigned] Is unsigned?\n   * @param {string|number} [options.decimals] number of decimal points, used with length `FLOAT(5, 4)`\n   * @param {string|number} [options.precision] defines precision for decimal type\n   * @param {string|number} [options.scale] defines scale for decimal type\n   */\n  constructor(options = {}) {\n    super();\n    if (typeof options === 'number') {\n      options = {\n        length: options\n      };\n    }\n    this.options = options;\n    this._length = options.length;\n    this._zerofill = options.zerofill;\n    this._decimals = options.decimals;\n    this._precision = options.precision;\n    this._scale = options.scale;\n    this._unsigned = options.unsigned;\n  }\n  toSql() {\n    let result = this.key;\n    if (this._length) {\n      result += `(${this._length}`;\n      if (typeof this._decimals === 'number') {\n        result += `,${this._decimals}`;\n      }\n      result += ')';\n    }\n    if (this._unsigned) {\n      result += ' UNSIGNED';\n    }\n    if (this._zerofill) {\n      result += ' ZEROFILL';\n    }\n    return result;\n  }\n  validate(value) {\n    if (!Validator.isFloat(String(value))) {\n      throw new sequelizeErrors.ValidationError(util.format(`%j is not a valid ${this.key.toLowerCase()}`, value));\n    }\n    return true;\n  }\n  _stringify(number) {\n    if (typeof number === 'number' || typeof number === 'bigint' || typeof number === 'boolean' || number === null || number === undefined) {\n      return number;\n    }\n    if (typeof number.toString === 'function') {\n      return number.toString();\n    }\n    return number;\n  }\n\n  get UNSIGNED() {\n    this._unsigned = true;\n    this.options.unsigned = true;\n    return this;\n  }\n\n  get ZEROFILL() {\n    this._zerofill = true;\n    this.options.zerofill = true;\n    return this;\n  }\n\n  static get UNSIGNED() {\n    return new this().UNSIGNED;\n  }\n\n  static get ZEROFILL() {\n    return new this().ZEROFILL;\n  }\n}\n\n/**\n * A 32 bit integer\n */\nclass INTEGER extends NUMBER {\n  validate(value) {\n    if (!Validator.isInt(String(value))) {\n      throw new sequelizeErrors.ValidationError(util.format(`%j is not a valid ${this.key.toLowerCase()}`, value));\n    }\n    return true;\n  }\n}\n\n/**\n * A 8 bit integer\n */\nclass TINYINT extends INTEGER {\n}\n\n/**\n * A 16 bit integer\n */\nclass SMALLINT extends INTEGER {\n}\n\n/**\n * A 24 bit integer\n */\nclass MEDIUMINT extends INTEGER {\n}\n\n/**\n * A 64 bit integer\n */\nclass BIGINT extends INTEGER {\n}\n\n/**\n * Floating point number (4-byte precision).\n */\nclass FLOAT extends NUMBER {\n  /**\n   * @param {string|number} [length] length of type, like `FLOAT(4)`\n   * @param {string|number} [decimals] number of decimal points, used with length `FLOAT(5, 4)`\n   */\n  constructor(length, decimals) {\n    super(typeof length === 'object' && length || { length, decimals });\n  }\n  validate(value) {\n    if (!Validator.isFloat(String(value))) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid float', value));\n    }\n    return true;\n  }\n}\n\n/**\n * Floating point number (4-byte precision).\n */\nclass REAL extends NUMBER {\n  /**\n   * @param {string|number} [length] length of type, like `REAL(4)`\n   * @param {string|number} [decimals] number of decimal points, used with length `REAL(5, 4)`\n   */\n  constructor(length, decimals) {\n    super(typeof length === 'object' && length || { length, decimals });\n  }\n}\n\n/**\n * Floating point number (8-byte precision).\n */\nclass DOUBLE extends NUMBER {\n  /**\n   * @param {string|number} [length] length of type, like `DOUBLE PRECISION(25)`\n   * @param {string|number} [decimals] number of decimal points, used with length `DOUBLE PRECISION(25, 10)`\n   */\n  constructor(length, decimals) {\n    super(typeof length === 'object' && length || { length, decimals });\n  }\n}\n\n/**\n * Decimal type, variable precision, take length as specified by user\n */\nclass DECIMAL extends NUMBER {\n  /**\n   * @param {string|number} [precision] defines precision\n   * @param {string|number} [scale] defines scale\n   */\n  constructor(precision, scale) {\n    super(typeof precision === 'object' && precision || { precision, scale });\n  }\n  toSql() {\n    if (this._precision || this._scale) {\n      return `DECIMAL(${[this._precision, this._scale].filter(_.identity).join(',')})`;\n    }\n    return 'DECIMAL';\n  }\n  validate(value) {\n    if (!Validator.isDecimal(String(value))) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid decimal', value));\n    }\n    return true;\n  }\n}\n\n// TODO: Create intermediate class\nconst protoExtensions = {\n  escape: false,\n  _value(value) {\n    if (isNaN(value)) {\n      return 'NaN';\n    }\n    if (!isFinite(value)) {\n      const sign = value < 0 ? '-' : '';\n      return `${sign}Infinity`;\n    }\n\n    return value;\n  },\n  _stringify(value) {\n    return `'${this._value(value)}'`;\n  },\n  _bindParam(value, options) {\n    return options.bindParam(this._value(value));\n  }\n};\n\nfor (const floating of [FLOAT, DOUBLE, REAL]) {\n  Object.assign(floating.prototype, protoExtensions);\n}\n\n/**\n * A boolean / tinyint column, depending on dialect\n */\nclass BOOLEAN extends ABSTRACT {\n  toSql() {\n    return 'TINYINT(1)';\n  }\n  validate(value) {\n    if (!Validator.isBoolean(String(value))) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid boolean', value));\n    }\n    return true;\n  }\n  _sanitize(value) {\n    if (value !== null && value !== undefined) {\n      if (Buffer.isBuffer(value) && value.length === 1) {\n        // Bit fields are returned as buffers\n        value = value[0];\n      }\n      const type = typeof value;\n      if (type === 'string') {\n        // Only take action on valid boolean strings.\n        return value === 'true' ? true : value === 'false' ? false : value;\n      }\n      if (type === 'number') {\n        // Only take action on valid boolean integers.\n        return value === 1 ? true : value === 0 ? false : value;\n      }\n    }\n    return value;\n  }\n}\n\n\nBOOLEAN.parse = BOOLEAN.prototype._sanitize;\n\n/**\n * A time column\n *\n */\nclass TIME extends ABSTRACT {\n  toSql() {\n    return 'TIME';\n  }\n}\n\n/**\n * Date column with timezone, default is UTC\n */\nclass DATE extends ABSTRACT {\n  /**\n   * @param {string|number} [length] precision to allow storing milliseconds\n   */\n  constructor(length) {\n    super();\n    const options = typeof length === 'object' && length || { length };\n    this.options = options;\n    this._length = options.length || '';\n  }\n  toSql() {\n    return 'DATETIME';\n  }\n  validate(value) {\n    if (!Validator.isDate(String(value))) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid date', value));\n    }\n    return true;\n  }\n  _sanitize(value, options) {\n    if ((!options || options && !options.raw) && !(value instanceof Date) && !!value) {\n      return new Date(value);\n    }\n    return value;\n  }\n  _isChanged(value, originalValue) {\n    if (originalValue && !!value &&\n      (value === originalValue ||\n        value instanceof Date && originalValue instanceof Date && value.getTime() === originalValue.getTime())) {\n      return false;\n    }\n    // not changed when set to same empty value\n    if (!originalValue && !value && originalValue === value) {\n      return false;\n    }\n    return true;\n  }\n  _applyTimezone(date, options) {\n    if (options.timezone) {\n      if (momentTz.tz.zone(options.timezone)) {\n        return momentTz(date).tz(options.timezone);\n      }\n      return date = moment(date).utcOffset(options.timezone);\n    }\n    return momentTz(date);\n  }\n  _stringify(date, options) {\n    if (!moment.isMoment(date)) {\n      date = this._applyTimezone(date, options);\n    }\n    // Z here means current timezone, _not_ UTC\n    return date.format('YYYY-MM-DD HH:mm:ss.SSS Z');\n  }\n}\n\n/**\n * A date only column (no timestamp)\n */\nclass DATEONLY extends ABSTRACT {\n  toSql() {\n    return 'DATE';\n  }\n  _stringify(date) {\n    return moment(date).format('YYYY-MM-DD');\n  }\n  _sanitize(value, options) {\n    if ((!options || options && !options.raw) && !!value) {\n      return moment(value).format('YYYY-MM-DD');\n    }\n    return value;\n  }\n  _isChanged(value, originalValue) {\n    if (originalValue && !!value && originalValue === value) {\n      return false;\n    }\n    // not changed when set to same empty value\n    if (!originalValue && !value && originalValue === value) {\n      return false;\n    }\n    return true;\n  }\n}\n\n/**\n * A key / value store column. Only available in Postgres.\n */\nclass HSTORE extends ABSTRACT {\n  validate(value) {\n    if (!_.isPlainObject(value)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid hstore', value));\n    }\n    return true;\n  }\n}\n\n/**\n * A JSON string column. Available in MySQL, Postgres and SQLite\n */\nclass JSONTYPE extends ABSTRACT {\n  validate() {\n    return true;\n  }\n  _stringify(value) {\n    return JSON.stringify(value);\n  }\n}\n\n/**\n * A binary storage JSON column. Only available in Postgres.\n */\nclass JSONB extends JSONTYPE {\n}\n\n/**\n * A default value of the current timestamp\n */\nclass NOW extends ABSTRACT {\n}\n\n/**\n * Binary storage\n */\nclass BLOB extends ABSTRACT {\n  /**\n   * @param {string} [length=''] could be tiny, medium, long.\n   */\n  constructor(length) {\n    super();\n    const options = typeof length === 'object' && length || { length };\n    this.options = options;\n    this._length = options.length || '';\n  }\n  toSql() {\n    switch (this._length.toLowerCase()) {\n      case 'tiny':\n        return 'TINYBLOB';\n      case 'medium':\n        return 'MEDIUMBLOB';\n      case 'long':\n        return 'LONGBLOB';\n      default:\n        return this.key;\n    }\n  }\n  validate(value) {\n    if (typeof value !== 'string' && !Buffer.isBuffer(value)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid blob', value));\n    }\n    return true;\n  }\n  _stringify(value) {\n    if (!Buffer.isBuffer(value)) {\n      if (Array.isArray(value)) {\n        value = Buffer.from(value);\n      }\n      else {\n        value = Buffer.from(value.toString());\n      }\n    }\n    const hex = value.toString('hex');\n    return this._hexify(hex);\n  }\n  _hexify(hex) {\n    return `X'${hex}'`;\n  }\n  _bindParam(value, options) {\n    if (!Buffer.isBuffer(value)) {\n      if (Array.isArray(value)) {\n        value = Buffer.from(value);\n      }\n      else {\n        value = Buffer.from(value.toString());\n      }\n    }\n    return options.bindParam(value);\n  }\n}\n\n\nBLOB.prototype.escape = false;\n\n/**\n * Range types are data types representing a range of values of some element type (called the range's subtype).\n * Only available in Postgres. See [the Postgres documentation](http://www.postgresql.org/docs/9.4/static/rangetypes.html) for more details\n */\nclass RANGE extends ABSTRACT {\n  /**\n   * @param {ABSTRACT} subtype A subtype for range, like RANGE(DATE)\n   */\n  constructor(subtype) {\n    super();\n    const options = _.isPlainObject(subtype) ? subtype : { subtype };\n    if (!options.subtype)\n      options.subtype = new INTEGER();\n    if (typeof options.subtype === 'function') {\n      options.subtype = new options.subtype();\n    }\n    this._subtype = options.subtype.key;\n    this.options = options;\n  }\n  validate(value) {\n    if (!Array.isArray(value)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid range', value));\n    }\n    if (value.length !== 2) {\n      throw new sequelizeErrors.ValidationError('A range must be an array with two elements');\n    }\n    return true;\n  }\n}\n\n/**\n * A column storing a unique universal identifier.\n * Use with `UUIDV1` or `UUIDV4` for default values.\n */\nclass UUID extends ABSTRACT {\n  validate(value, options) {\n    if (typeof value !== 'string' || !Validator.isUUID(value) && (!options || !options.acceptStrings)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid uuid', value));\n    }\n    return true;\n  }\n}\n\n/**\n * A default unique universal identifier generated following the UUID v1 standard\n */\nclass UUIDV1 extends ABSTRACT {\n  validate(value, options) {\n    if (typeof value !== 'string' || !Validator.isUUID(value) && (!options || !options.acceptStrings)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid uuid', value));\n    }\n    return true;\n  }\n}\n\n/**\n * A default unique universal identifier generated following the UUID v4 standard\n */\nclass UUIDV4 extends ABSTRACT {\n  validate(value, options) {\n    if (typeof value !== 'string' || !Validator.isUUID(value, 4) && (!options || !options.acceptStrings)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid uuidv4', value));\n    }\n    return true;\n  }\n}\n\n/**\n * A virtual value that is not stored in the DB. This could for example be useful if you want to provide a default value in your model that is returned to the user but not stored in the DB.\n *\n * You could also use it to validate a value before permuting and storing it. VIRTUAL also takes a return type and dependency fields as arguments\n * If a virtual attribute is present in `attributes` it will automatically pull in the extra fields as well.\n * Return type is mostly useful for setups that rely on types like GraphQL.\n *\n * @example <caption>Checking password length before hashing it</caption>\n * sequelize.define('user', {\n *   password_hash: DataTypes.STRING,\n *   password: {\n *     type: DataTypes.VIRTUAL,\n *     set: function (val) {\n *        // Remember to set the data value, otherwise it won't be validated\n *        this.setDataValue('password', val);\n *        this.setDataValue('password_hash', this.salt + val);\n *      },\n *      validate: {\n *         isLongEnough: function (val) {\n *           if (val.length < 7) {\n *             throw new Error(\"Please choose a longer password\")\n *          }\n *       }\n *     }\n *   }\n * })\n *\n * # In the above code the password is stored plainly in the password field so it can be validated, but is never stored in the DB.\n *\n * @example <caption>Virtual with dependency fields</caption>\n * {\n *   active: {\n *     type: new DataTypes.VIRTUAL(DataTypes.BOOLEAN, ['createdAt']),\n *     get: function() {\n *       return this.get('createdAt') > Date.now() - (7 * 24 * 60 * 60 * 1000)\n *     }\n *   }\n * }\n *\n */\nclass VIRTUAL extends ABSTRACT {\n  /**\n   * @param {ABSTRACT} [ReturnType] return type for virtual type\n   * @param {Array} [fields] array of fields this virtual type is dependent on\n   */\n  constructor(ReturnType, fields) {\n    super();\n    if (typeof ReturnType === 'function')\n      ReturnType = new ReturnType();\n    this.returnType = ReturnType;\n    this.fields = fields;\n  }\n}\n\n/**\n * An enumeration, Postgres Only\n *\n * @example\n * DataTypes.ENUM('value', 'another value')\n * DataTypes.ENUM(['value', 'another value'])\n * DataTypes.ENUM({\n *   values: ['value', 'another value']\n * })\n */\nclass ENUM extends ABSTRACT {\n  /**\n   * @param {...any|{ values: any[] }|any[]} args either array of values or options object with values array. It also supports variadic values\n   */\n  constructor(...args) {\n    super();\n    const value = args[0];\n    const options = typeof value === 'object' && !Array.isArray(value) && value || {\n      values: args.reduce((result, element) => {\n        return result.concat(Array.isArray(element) ? element : [element]);\n      }, [])\n    };\n    this.values = options.values;\n    this.options = options;\n  }\n  validate(value) {\n    if (!this.values.includes(value)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid choice in %j', value, this.values));\n    }\n    return true;\n  }\n}\n\n/**\n * An array of `type`. Only available in Postgres.\n *\n * @example\n * DataTypes.ARRAY(DataTypes.DECIMAL)\n */\nclass ARRAY extends ABSTRACT {\n  /**\n   * @param {ABSTRACT} type type of array values\n   */\n  constructor(type) {\n    super();\n    const options = _.isPlainObject(type) ? type : { type };\n    this.options = options;\n    this.type = typeof options.type === 'function' ? new options.type() : options.type;\n  }\n  toSql() {\n    return `${this.type.toSql()}[]`;\n  }\n  validate(value) {\n    if (!Array.isArray(value)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid array', value));\n    }\n    return true;\n  }\n  static is(obj, type) {\n    return obj instanceof ARRAY && obj.type instanceof type;\n  }\n}\n\n/**\n * A column storing Geometry information.\n * It is only available in PostgreSQL (with PostGIS), MariaDB or MySQL.\n *\n * GeoJSON is accepted as input and returned as output.\n *\n * In PostGIS, the GeoJSON is parsed using the PostGIS function `ST_GeomFromGeoJSON`.\n * In MySQL it is parsed using the function `ST_GeomFromText`.\n *\n * Therefore, one can just follow the [GeoJSON spec](https://tools.ietf.org/html/rfc7946) for handling geometry objects.  See the following examples:\n *\n * @example <caption>Defining a Geometry type attribute</caption>\n * DataTypes.GEOMETRY\n * DataTypes.GEOMETRY('POINT')\n * DataTypes.GEOMETRY('POINT', 4326)\n *\n * @example <caption>Create a new point</caption>\n * const point = { type: 'Point', coordinates: [-76.984722, 39.807222]}; // GeoJson format: [lng, lat]\n *\n * User.create({username: 'username', geometry: point });\n *\n * @example <caption>Create a new linestring</caption>\n * const line = { type: 'LineString', 'coordinates': [ [100.0, 0.0], [101.0, 1.0] ] };\n *\n * User.create({username: 'username', geometry: line });\n *\n * @example <caption>Create a new polygon</caption>\n * const polygon = { type: 'Polygon', coordinates: [\n *                 [ [100.0, 0.0], [101.0, 0.0], [101.0, 1.0],\n *                   [100.0, 1.0], [100.0, 0.0] ]\n *                 ]};\n *\n * User.create({username: 'username', geometry: polygon });\n *\n * @example <caption>Create a new point with a custom SRID</caption>\n * const point = {\n *   type: 'Point',\n *   coordinates: [-76.984722, 39.807222], // GeoJson format: [lng, lat]\n *   crs: { type: 'name', properties: { name: 'EPSG:4326'} }\n * };\n *\n * User.create({username: 'username', geometry: point })\n *\n *\n * @see {@link DataTypes.GEOGRAPHY}\n */\nclass GEOMETRY extends ABSTRACT {\n  /**\n   * @param {string} [type] Type of geometry data\n   * @param {string} [srid] SRID of type\n   */\n  constructor(type, srid) {\n    super();\n    const options = _.isPlainObject(type) ? type : { type, srid };\n    this.options = options;\n    this.type = options.type;\n    this.srid = options.srid;\n  }\n  _stringify(value, options) {\n    return `ST_GeomFromText(${options.escape(wkx.Geometry.parseGeoJSON(value).toWkt())})`;\n  }\n  _bindParam(value, options) {\n    return `ST_GeomFromText(${options.bindParam(wkx.Geometry.parseGeoJSON(value).toWkt())})`;\n  }\n}\n\nGEOMETRY.prototype.escape = false;\n\n/**\n * A geography datatype represents two dimensional spacial objects in an elliptic coord system.\n *\n * __The difference from geometry and geography type:__\n *\n * PostGIS 1.5 introduced a new spatial type called geography, which uses geodetic measurement instead of Cartesian measurement.\n * Coordinate points in the geography type are always represented in WGS 84 lon lat degrees (SRID 4326),\n * but measurement functions and relationships ST_Distance, ST_DWithin, ST_Length, and ST_Area always return answers in meters or assume inputs in meters.\n *\n * __What is best to use? It depends:__\n *\n * When choosing between the geometry and geography type for data storage, you should consider what you’ll be using it for.\n * If all you do are simple measurements and relationship checks on your data, and your data covers a fairly large area, then most likely you’ll be better off storing your data using the new geography type.\n * Although the new geography data type can cover the globe, the geometry type is far from obsolete.\n * The geometry type has a much richer set of functions than geography, relationship checks are generally faster, and it has wider support currently across desktop and web-mapping tools\n *\n * @example <caption>Defining a Geography type attribute</caption>\n * DataTypes.GEOGRAPHY\n * DataTypes.GEOGRAPHY('POINT')\n * DataTypes.GEOGRAPHY('POINT', 4326)\n */\nclass GEOGRAPHY extends ABSTRACT {\n  /**\n   * @param {string} [type] Type of geography data\n   * @param {string} [srid] SRID of type\n   */\n  constructor(type, srid) {\n    super();\n    const options = _.isPlainObject(type) ? type : { type, srid };\n    this.options = options;\n    this.type = options.type;\n    this.srid = options.srid;\n  }\n  _stringify(value, options) {\n    return `ST_GeomFromText(${options.escape(wkx.Geometry.parseGeoJSON(value).toWkt())})`;\n  }\n  _bindParam(value, options) {\n    return `ST_GeomFromText(${options.bindParam(wkx.Geometry.parseGeoJSON(value).toWkt())})`;\n  }\n}\n\n\nGEOGRAPHY.prototype.escape = false;\n\n/**\n * The cidr type holds an IPv4 or IPv6 network specification. Takes 7 or 19 bytes.\n *\n * Only available for Postgres\n */\nclass CIDR extends ABSTRACT {\n  validate(value) {\n    if (typeof value !== 'string' || !Validator.isIPRange(value)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid CIDR', value));\n    }\n    return true;\n  }\n}\n\n/**\n * The INET type holds an IPv4 or IPv6 host address, and optionally its subnet. Takes 7 or 19 bytes\n *\n * Only available for Postgres\n */\nclass INET extends ABSTRACT {\n  validate(value) {\n    if (typeof value !== 'string' || !Validator.isIP(value)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid INET', value));\n    }\n    return true;\n  }\n}\n\n/**\n * The MACADDR type stores MAC addresses. Takes 6 bytes\n *\n * Only available for Postgres\n *\n */\nclass MACADDR extends ABSTRACT {\n  validate(value) {\n    if (typeof value !== 'string' || !Validator.isMACAddress(value)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid MACADDR', value));\n    }\n    return true;\n  }\n}\n\n/**\n * The TSVECTOR type stores text search vectors.\n *\n * Only available for Postgres\n *\n */\nclass TSVECTOR extends ABSTRACT {\n  validate(value) {\n    if (typeof value !== 'string') {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid string', value));\n    }\n    return true;\n  }\n}\n\n/**\n * A convenience class holding commonly used data types. The data types are used when defining a new model using `Sequelize.define`, like this:\n * ```js\n * sequelize.define('model', {\n *   column: DataTypes.INTEGER\n * })\n * ```\n * When defining a model you can just as easily pass a string as type, but often using the types defined here is beneficial. For example, using `DataTypes.BLOB`, mean\n * that that column will be returned as an instance of `Buffer` when being fetched by sequelize.\n *\n * To provide a length for the data type, you can invoke it like a function: `INTEGER(2)`\n *\n * Some data types have special properties that can be accessed in order to change the data type.\n * For example, to get an unsigned integer with zerofill you can do `DataTypes.INTEGER.UNSIGNED.ZEROFILL`.\n * The order you access the properties in do not matter, so `DataTypes.INTEGER.ZEROFILL.UNSIGNED` is fine as well.\n *\n * * All number types (`INTEGER`, `BIGINT`, `FLOAT`, `DOUBLE`, `REAL`, `DECIMAL`) expose the properties `UNSIGNED` and `ZEROFILL`\n * * The `CHAR` and `STRING` types expose the `BINARY` property\n *\n * Three of the values provided here (`NOW`, `UUIDV1` and `UUIDV4`) are special default values, that should not be used to define types. Instead they are used as shorthands for\n * defining default values. For example, to get a uuid field with a default value generated following v1 of the UUID standard:\n * ```js\n * sequelize.define('model', {\n *   uuid: {\n *     type: DataTypes.UUID,\n *     defaultValue: DataTypes.UUIDV1,\n *     primaryKey: true\n *   }\n * })\n * ```\n * There may be times when you want to generate your own UUID conforming to some other algorithm. This is accomplished\n * using the defaultValue property as well, but instead of specifying one of the supplied UUID types, you return a value\n * from a function.\n * ```js\n * sequelize.define('model', {\n *   uuid: {\n *     type: DataTypes.UUID,\n *     defaultValue: function() {\n *       return generateMyId()\n *     },\n *     primaryKey: true\n *   }\n * })\n * ```\n */\nconst DataTypes = module.exports = {\n  ABSTRACT,\n  STRING,\n  CHAR,\n  TEXT,\n  NUMBER,\n  TINYINT,\n  SMALLINT,\n  MEDIUMINT,\n  INTEGER,\n  BIGINT,\n  FLOAT,\n  TIME,\n  DATE,\n  DATEONLY,\n  BOOLEAN,\n  NOW,\n  BLOB,\n  DECIMAL,\n  NUMERIC: DECIMAL,\n  UUID,\n  UUIDV1,\n  UUIDV4,\n  HSTORE,\n  JSON: JSONTYPE,\n  JSONB,\n  VIRTUAL,\n  ARRAY,\n  ENUM,\n  RANGE,\n  REAL,\n  'DOUBLE PRECISION': DOUBLE,\n  DOUBLE,\n  GEOMETRY,\n  GEOGRAPHY,\n  CIDR,\n  INET,\n  MACADDR,\n  CITEXT,\n  TSVECTOR\n};\n\n_.each(DataTypes, (dataType, name) => {\n  // guard for aliases\n  if (!Object.prototype.hasOwnProperty.call(dataType, 'key')) {\n    dataType.types = {};\n    dataType.key = dataType.prototype.key = name;\n  }\n});\n\nconst dialectMap = {};\ndialectMap.postgres = require('./dialects/postgres/data-types')(DataTypes);\ndialectMap.mysql = require('./dialects/mysql/data-types')(DataTypes);\ndialectMap.mariadb = require('./dialects/mariadb/data-types')(DataTypes);\ndialectMap.sqlite = require('./dialects/sqlite/data-types')(DataTypes);\ndialectMap.mssql = require('./dialects/mssql/data-types')(DataTypes);\ndialectMap.db2 = require('./dialects/db2/data-types')(DataTypes);\ndialectMap.snowflake = require('./dialects/snowflake/data-types')(DataTypes);\ndialectMap.oracle = require('./dialects/oracle/data-types')(DataTypes);\n\nconst dialectList = Object.values(dialectMap);\n\nfor (const dataTypes of dialectList) {\n  _.each(dataTypes, (DataType, key) => {\n    if (!DataType.key) {\n      DataType.key = DataType.prototype.key = key;\n    }\n  });\n}\n\n// Wrap all data types to not require `new`\nfor (const dataTypes of [DataTypes, ...dialectList]) {\n  _.each(dataTypes, (DataType, key) => {\n    dataTypes[key] = classToInvokable(DataType);\n  });\n}\n\nObject.assign(DataTypes, dialectMap);\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/index.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,62,55,59,60,45,58,87,57,72,75,53,62,60,76,79,63,71,53,72,66,47,66,51,70,72,57,73,85,80,3,60,68,70,74,74,72,78,76,68,82,62,82,72,89,115,99,103,91,99,99,101,105,75,97,97,78,33,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/errors/index.ts"],"sourcesContent":["export { default as BaseError } from './base-error';\n\nexport { default as DatabaseError } from './database-error';\nexport { default as AggregateError } from './aggregate-error';\nexport { default as AssociationError } from './association-error';\nexport { default as BulkRecordError } from './bulk-record-error';\nexport { default as ConnectionError } from './connection-error';\nexport { default as EagerLoadingError } from './eager-loading-error';\nexport { default as EmptyResultError } from './empty-result-error';\nexport { default as InstanceError } from './instance-error';\nexport { default as OptimisticLockError } from './optimistic-lock-error';\nexport { default as QueryError } from './query-error';\nexport { default as SequelizeScopeError } from './sequelize-scope-error';\nexport {\n  default as ValidationError,\n  ValidationErrorItem,\n  ValidationErrorItemOrigin,\n  ValidationErrorItemType\n} from './validation-error';\n\nexport { default as AccessDeniedError } from './connection/access-denied-error';\nexport { default as ConnectionAcquireTimeoutError } from './connection/connection-acquire-timeout-error';\nexport { default as ConnectionRefusedError } from './connection/connection-refused-error';\nexport { default as ConnectionTimedOutError } from './connection/connection-timed-out-error';\nexport { default as HostNotFoundError } from './connection/host-not-found-error';\nexport { default as HostNotReachableError } from './connection/host-not-reachable-error';\nexport { default as InvalidConnectionError } from './connection/invalid-connection-error';\n\nexport { default as ExclusionConstraintError } from './database/exclusion-constraint-error';\nexport { default as ForeignKeyConstraintError } from './database/foreign-key-constraint-error';\nexport { default as TimeoutError } from './database/timeout-error';\nexport { default as UnknownConstraintError } from './database/unknown-constraint-error';\n\nexport { default as UniqueConstraintError } from './validation/unique-constraint-error';\n\nexport { AsyncQueueError } from '../dialects/mssql/async-queue';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAqC;AAErC,4BAAyC;AACzC,6BAA0C;AAC1C,+BAA4C;AAC5C,+BAA2C;AAC3C,8BAA2C;AAC3C,iCAA6C;AAC7C,gCAA4C;AAC5C,4BAAyC;AACzC,mCAA+C;AAC/C,yBAAsC;AACtC,mCAA+C;AAC/C,8BAKO;AAEP,iCAA6C;AAC7C,8CAAyD;AACzD,sCAAkD;AAClD,wCAAmD;AACnD,kCAA6C;AAC7C,sCAAiD;AACjD,sCAAkD;AAElD,wCAAoD;AACpD,0CAAqD;AACrD,2BAAwC;AACxC,sCAAkD;AAElD,qCAAiD;AAEjD,yBAAgC;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/base-error.js":{"lineLengths":[38,82,33,25,23,66,2,19,35,3,31,24,19,37,3,1,35,38,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/errors/base-error.ts"],"sourcesContent":["export interface ErrorOptions {\n  stack?: string;\n}\n\nexport interface CommonErrorProperties {\n  /** The database specific error which triggered this one */\n  readonly parent: Error;\n\n  /** The database specific error which triggered this one */\n  readonly original: Error;\n\n  /** The SQL that triggered the error */\n  readonly sql: string;\n}\n\n/**\n * The Base Error all Sequelize Errors inherit from.\n *\n * Sequelize provides a host of custom error classes, to allow you to do easier debugging. All of these errors are exposed on the sequelize object and the sequelize constructor.\n * All sequelize errors inherit from the base JS error object.\n *\n * This means that errors can be accessed using `Sequelize.ValidationError`\n */\nabstract class BaseError extends Error {\n  constructor(message?: string) {\n    super(message);\n    this.name = 'SequelizeBaseError';\n  }\n}\n\nexport default BaseError;\n"],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAuBA,wBAAiC,MAAM;AAAA,EACrC,YAAY,SAAkB;AAC5B,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,qBAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/database-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,39,3,60,55,37,26,34,36,31,38,11,41,25,27,26,65,24,33,5,3,1,43,42,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/errors/database-error.ts"],"sourcesContent":["import BaseError, { CommonErrorProperties, ErrorOptions } from './base-error';\n\nexport interface DatabaseErrorParent\n  extends Error,\n    Pick<CommonErrorProperties, 'sql'> {\n  /** The parameters for the sql that triggered the error */\n  readonly parameters?: object;\n}\n\nexport interface DatabaseErrorSubclassOptions extends ErrorOptions {\n  parent?: DatabaseErrorParent;\n  message?: string;\n}\n\n/**\n * A base class for all database related errors.\n */\nclass DatabaseError\n  extends BaseError\n  implements DatabaseErrorParent, CommonErrorProperties\n{\n  parent: Error;\n  original: Error;\n  sql: string;\n  parameters: object;\n\n  /**\n   * @param parent The database specific error which triggered this one\n   * @param options\n   */\n  constructor(parent: DatabaseErrorParent, options: ErrorOptions = {}) {\n    super(parent.message);\n    this.name = 'SequelizeDatabaseError';\n\n    this.parent = parent;\n    this.original = parent;\n\n    this.sql = parent.sql;\n    this.parameters = parent.parameters ?? {};\n\n    if (options.stack) {\n      this.stack = options.stack;\n    }\n  }\n}\n\nexport default DatabaseError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAA+D;AAiB/D,4BACU,0BAEV;AAAA,EAUE,YAAY,QAA6B,UAAwB,IAAI;AACnE,UAAM,OAAO;AAVf;AACA;AACA;AACA;AAxBF;AAgCI,SAAK,OAAO;AAEZ,SAAK,SAAS;AACd,SAAK,WAAW;AAEhB,SAAK,MAAM,OAAO;AAClB,SAAK,aAAa,aAAO,eAAP,YAAqB;AAEvC,QAAI,QAAQ,OAAO;AACjB,WAAK,QAAQ,QAAQ;AAAA;AAAA;AAAA;AAK3B,IAAO,yBAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/aggregate-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,40,3,60,56,23,12,34,25,33,3,14,39,228,2,19,3,1,45,43,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/errors/aggregate-error.ts"],"sourcesContent":["import BaseError from './base-error';\n\n/**\n * A wrapper for multiple Errors\n *\n * @param errors The aggregated errors that occurred\n */\nclass AggregateError extends BaseError {\n  /** the aggregated errors that occurred */\n  readonly errors: Array<AggregateError | Error>;\n\n  constructor(errors: Array<AggregateError | Error>) {\n    super();\n    this.errors = errors;\n    this.name = 'AggregateError';\n  }\n\n  toString(): string {\n    const message = `AggregateError of:\\n${this.errors\n      .map((error: Error | AggregateError) =>\n        error === this\n          ? '[Circular AggregateError]'\n          : error instanceof AggregateError\n            ? String(error).replace(/\\n$/, '').replace(/^/gm, '  ')\n            : String(error).replace(/^/gm, '    ').substring(2)\n      )\n      .join('\\n')}\\n`;\n    return message;\n  }\n}\n\nexport default AggregateError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAAsB;AAOtB,6BAA6B,0BAAU;AAAA,EAIrC,YAAY,QAAuC;AACjD;AAHO;AAIP,SAAK,SAAS;AACd,SAAK,OAAO;AAAA;AAAA,EAGd,WAAmB;AACjB,UAAM,UAAU;AAAA,EAAuB,KAAK,OACzC,IAAI,CAAC,UACJ,UAAU,OACN,8BACA,iBAAiB,iBACf,OAAO,OAAO,QAAQ,OAAO,IAAI,QAAQ,OAAO,QAChD,OAAO,OAAO,QAAQ,OAAO,QAAQ,UAAU,IAEtD,KAAK;AAAA;AACR,WAAO;AAAA;AAAA;AAIX,IAAO,0BAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/association-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,42,3,60,58,24,19,44,3,1,49,45,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/errors/association-error.ts"],"sourcesContent":["import BaseError from './base-error';\n\n/**\n * Thrown when an association is improperly constructed (see message for details)\n */\nclass AssociationError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'SequelizeAssociationError';\n  }\n}\n\nexport default AssociationError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAAsB;AAKtB,+BAA+B,0BAAU;AAAA,EACvC,YAAY,SAAiB;AAC3B,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,4BAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/bulk-record-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,42,3,60,57,30,25,34,34,43,24,25,3,1,48,45,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/errors/bulk-record-error.ts"],"sourcesContent":["import type { Model } from '..';\nimport BaseError from './base-error';\n\n/**\n * Thrown when bulk operation fails, it represent per record level error.\n * Used with AggregateError\n *\n * @param error Error for a given record/instance\n * @param record DAO instance that error belongs to\n */\nclass BulkRecordError extends BaseError {\n  errors: Error;\n  record: Model;\n\n  constructor(error: Error, record: Model) {\n    super(error.message);\n    this.name = 'SequelizeBulkRecordError';\n    this.errors = error;\n    this.record = record;\n  }\n}\n\nexport default BulkRecordError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA,wBAAsB;AAStB,8BAA8B,0BAAU;AAAA,EAItC,YAAY,OAAc,QAAe;AACvC,UAAM,MAAM;AAJd;AACA;AAIE,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,SAAS;AAAA;AAAA;AAIlB,IAAO,4BAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/connection-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,41,3,60,57,23,40,34,36,43,25,27,3,1,47,44,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/errors/connection-error.ts"],"sourcesContent":["import BaseError from './base-error';\n\n/**\n * A base class for all connection related errors.\n */\nclass ConnectionError extends BaseError {\n  /** The connection specific error which triggered this one */\n  parent: Error;\n  original: Error;\n\n  constructor(parent: Error) {\n    super(parent ? parent.message : '');\n    this.name = 'SequelizeConnectionError';\n    this.parent = parent;\n    this.original = parent;\n  }\n}\n\nexport default ConnectionError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAAsB;AAKtB,8BAA8B,0BAAU;AAAA,EAKtC,YAAY,QAAe;AACzB,UAAM,SAAS,OAAO,UAAU;AAJlC;AACA;AAIE,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,WAAW;AAAA;AAAA;AAIpB,IAAO,2BAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/eager-loading-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,44,3,60,59,24,19,45,3,1,52,47,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/errors/eager-loading-error.ts"],"sourcesContent":["import BaseError from './base-error';\n\n/**\n * Thrown when an include statement is improperly constructed (see message for details)\n */\nclass EagerLoadingError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'SequelizeEagerLoadingError';\n  }\n}\n\nexport default EagerLoadingError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAAsB;AAKtB,gCAAgC,0BAAU;AAAA,EACxC,YAAY,SAAiB;AAC3B,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,8BAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/empty-result-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,43,3,60,58,24,19,44,3,1,50,46,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/errors/empty-result-error.ts"],"sourcesContent":["import BaseError from './base-error';\n\n/**\n * Thrown when a record was not found, Usually used with rejectOnEmpty mode (see message for details)\n */\nclass EmptyResultError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'SequelizeEmptyResultError';\n  }\n}\n\nexport default EmptyResultError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAAsB;AAKtB,+BAA+B,0BAAU;AAAA,EACvC,YAAY,SAAiB;AAC3B,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,6BAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/instance-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,39,3,60,55,24,19,41,3,1,43,42,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/errors/instance-error.ts"],"sourcesContent":["import BaseError from './base-error';\n\n/**\n * Thrown when a some problem occurred with Instance methods (see message for details)\n */\nclass InstanceError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'SequelizeInstanceError';\n  }\n}\n\nexport default InstanceError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAAsB;AAKtB,4BAA4B,0BAAU;AAAA,EACpC,YAAY,SAAiB;AAC3B,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,yBAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/optimistic-lock-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,46,3,60,61,24,28,109,27,37,34,33,47,39,33,31,3,1,56,49,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/errors/optimistic-lock-error.ts"],"sourcesContent":["import BaseError from './base-error';\n\ninterface OptimisticLockErrorOptions {\n  message?: string;\n\n  /** The name of the model on which the update was attempted */\n  modelName?: string;\n\n  /** The values of the attempted update */\n  values?: Record<string, unknown>;\n  where?: Record<string, unknown>;\n}\n\n/**\n * Thrown when attempting to update a stale model instance\n */\nclass OptimisticLockError extends BaseError {\n  modelName: string | undefined;\n  values: Record<string, unknown> | undefined;\n  where: Record<string, unknown> | undefined;\n\n  constructor(options: OptimisticLockErrorOptions) {\n    options = options || {};\n    options.message =\n      options.message ||\n      `Attempting to update a stale model instance: ${options.modelName}`;\n\n    super(options.message);\n    this.name = 'SequelizeOptimisticLockError';\n    this.modelName = options.modelName;\n    this.values = options.values;\n    this.where = options.where;\n  }\n}\n\nexport default OptimisticLockError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAAsB;AAgBtB,kCAAkC,0BAAU;AAAA,EAK1C,YAAY,SAAqC;AAC/C,cAAU,WAAW;AACrB,YAAQ,UACN,QAAQ,WACR,gDAAgD,QAAQ;AAE1D,UAAM,QAAQ;AAVhB;AACA;AACA;AASE,SAAK,OAAO;AACZ,SAAK,YAAY,QAAQ;AACzB,SAAK,SAAS,QAAQ;AACtB,SAAK,QAAQ,QAAQ;AAAA;AAAA;AAIzB,IAAO,gCAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/query-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,36,3,60,52,24,19,38,3,1,37,39,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/errors/query-error.ts"],"sourcesContent":["import BaseError from './base-error';\n\n/**\n * Thrown when a query is passed invalid options (see message for details)\n */\nclass QueryError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'SequelizeQueryError';\n  }\n}\n\nexport default QueryError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAAsB;AAKtB,yBAAyB,0BAAU;AAAA,EACjC,YAAY,SAAiB;AAC3B,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,sBAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/sequelize-scope-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,46,3,60,61,24,19,38,3,1,56,49,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/errors/sequelize-scope-error.ts"],"sourcesContent":["import BaseError from './base-error';\n\n/**\n * Scope Error. Thrown when the sequelize cannot query the specified scope.\n */\nclass SequelizeScopeError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'SequelizeScopeError';\n  }\n}\n\nexport default SequelizeScopeError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAAsB;AAKtB,kCAAkC,0BAAU;AAAA,EAC1C,YAAY,SAAiB;AAC3B,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,gCAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/validation-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,49,61,57,41,3,60,78,57,56,54,60,34,34,82,46,42,54,36,36,27,83,35,32,32,33,34,36,40,41,41,33,21,29,49,23,37,45,40,38,15,51,27,14,57,64,62,33,27,9,7,5,3,39,56,3,24,36,3,45,60,61,29,56,69,64,87,5,51,16,5,79,3,1,77,73,57,46,19,34,43,38,31,18,29,66,103,5,24,33,5,3,13,51,32,28,7,21,11,3,1,47,44,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/errors/validation-error.ts"],"sourcesContent":["import type { Model } from '..';\nimport type { ErrorOptions } from './base-error';\nimport BaseError from './base-error';\n\n/**\n * An enum that is used internally by the `ValidationErrorItem` class\n * that maps current `type` strings (as given to ValidationErrorItem.constructor()) to\n * our new `origin` values.\n */\nexport enum ValidationErrorItemType {\n  'notnull violation' = 'CORE',\n  'string violation' = 'CORE',\n  'unique violation' = 'DB',\n  'validation error' = 'FUNCTION',\n}\n\n/**\n * An enum that defines valid ValidationErrorItem `origin` values\n */\nexport enum ValidationErrorItemOrigin {\n  /**\n   * specifies errors that originate from the sequelize \"core\"\n   */\n  CORE = 'CORE',\n\n  /**\n   * specifies validation errors that originate from the storage engine\n   */\n  DB = 'DB',\n\n  /**\n   * specifies validation errors that originate from validator functions (both built-in and custom) defined for a given attribute\n   */\n  FUNCTION = 'FUNCTION',\n}\n\n/**\n * Validation Error Item\n * Instances of this class are included in the `ValidationError.errors` property.\n */\nexport class ValidationErrorItem {\n  /**\n   * @deprecated Will be removed in v7\n   */\n  static TypeStringMap = ValidationErrorItemType;\n\n  /**\n   * @deprecated Will be removed in v7\n   */\n  static Origins = ValidationErrorItemOrigin;\n\n  /**\n   * An error message\n   */\n  readonly message: string;\n\n  /**\n   * The type/origin of the validation error\n   */\n  readonly type: keyof typeof ValidationErrorItemType | null;\n\n  /**\n   * The field that triggered the validation error\n   */\n  readonly path: string | null;\n\n  /**\n   * The value that generated the error\n   */\n  readonly value: string | null;\n\n  readonly origin: keyof typeof ValidationErrorItemOrigin | null;\n\n  /**\n   * The DAO instance that caused the validation error\n   */\n  readonly instance: Model | null;\n\n  /**\n   * A validation \"key\", used for identification\n   */\n  readonly validatorKey: string | null;\n\n  /**\n   * Property name of the BUILT-IN validator function that caused the validation error (e.g. \"in\" or \"len\"), if applicable\n   */\n  readonly validatorName: string | null;\n\n  /**\n   * Parameters used with the BUILT-IN validator function, if applicable\n   */\n  readonly validatorArgs: unknown[];\n\n  /**\n   * Creates a new ValidationError item. Instances of this class are included in the `ValidationError.errors` property.\n   *\n   * @param message An error message\n   * @param type The type/origin of the validation error\n   * @param path The field that triggered the validation error\n   * @param value The value that generated the error\n   * @param instance the DAO instance that caused the validation error\n   * @param validatorKey a validation \"key\", used for identification\n   * @param fnName property name of the BUILT-IN validator function that caused the validation error (e.g. \"in\" or \"len\"), if applicable\n   * @param fnArgs parameters used with the BUILT-IN validator function, if applicable\n   */\n  constructor(\n    message: string,\n    type:\n      | keyof typeof ValidationErrorItemType\n      | keyof typeof ValidationErrorItemOrigin,\n    path: string,\n    value: string,\n    instance: Model,\n    validatorKey: string,\n    fnName: string,\n    fnArgs: unknown[]\n  ) {\n    this.message = message || '';\n    this.type = null;\n    this.path = path || null;\n\n    this.value = value !== undefined ? value : null;\n\n    this.origin = null;\n\n    this.instance = instance || null;\n\n    this.validatorKey = validatorKey || null;\n\n    this.validatorName = fnName || null;\n\n    this.validatorArgs = fnArgs || [];\n\n    if (type) {\n      if (this.isValidationErrorItemOrigin(type)) {\n        this.origin = type;\n      } else {\n        const lowercaseType = this.normalizeString(type);\n        const realType = ValidationErrorItemType[lowercaseType];\n\n        if (realType && ValidationErrorItemOrigin[realType]) {\n          this.origin = realType;\n          this.type = type;\n        }\n      }\n    }\n\n    // This doesn't need captureStackTrace because it's not a subclass of Error\n  }\n\n  private isValidationErrorItemOrigin(\n    origin:\n      | keyof typeof ValidationErrorItemOrigin\n      | keyof typeof ValidationErrorItemType\n  ): origin is keyof typeof ValidationErrorItemOrigin {\n    return (\n      ValidationErrorItemOrigin[\n        origin as keyof typeof ValidationErrorItemOrigin\n      ] !== undefined\n    );\n  }\n\n  private normalizeString<T extends string>(str: T): T {\n    return str.toLowerCase().trim() as T;\n  }\n\n  /**\n   * return a lowercase, trimmed string \"key\" that identifies the validator.\n   *\n   * Note: the string will be empty if the instance has neither a valid `validatorKey` property nor a valid `validatorName` property\n   *\n   * @param useTypeAsNS controls whether the returned value is \"namespace\",\n   *                    this parameter is ignored if the validator's `type` is not one of ValidationErrorItem.Origins\n   * @param NSSeparator a separator string for concatenating the namespace, must be not be empty,\n   *                    defaults to \".\" (fullstop). only used and validated if useTypeAsNS is TRUE.\n   * @throws {Error}    thrown if NSSeparator is found to be invalid.\n   */\n  getValidatorKey(useTypeAsNS: boolean, NSSeparator: string): string {\n    const useTANS = useTypeAsNS === undefined || !!useTypeAsNS;\n    const NSSep = NSSeparator === undefined ? '.' : NSSeparator;\n\n    const type = this.origin;\n    const key = this.validatorKey || this.validatorName;\n    const useNS = useTANS && type && ValidationErrorItemOrigin[type];\n\n    if (useNS && (typeof NSSep !== 'string' || !NSSep.length)) {\n      throw new Error('Invalid namespace separator given, must be a non-empty string');\n    }\n\n    if (!(typeof key === 'string' && key.length)) {\n      return '';\n    }\n\n    return (useNS ? [this.origin, key].join(NSSep) : key).toLowerCase().trim();\n  }\n}\n\n/**\n * Validation Error. Thrown when the sequelize validation has failed. The error contains an `errors` property,\n * which is an array with 1 or more ValidationErrorItems, one for each validation that failed.\n *\n * @param message Error message\n * @param errors Array of ValidationErrorItem objects describing the validation errors\n */\nclass ValidationError extends BaseError {\n  /** Array of ValidationErrorItem objects describing the validation errors */\n  readonly errors: ValidationErrorItem[];\n\n  constructor(\n    message: string,\n    errors: ValidationErrorItem[],\n    options: ErrorOptions = {}\n  ) {\n    super(message);\n    this.name = 'SequelizeValidationError';\n    this.message = 'Validation Error';\n    this.errors = errors || [];\n\n    // Use provided error message if available...\n    if (message) {\n      this.message = message;\n\n      // ... otherwise create a concatenated message out of existing errors.\n    } else if (this.errors.length > 0 && this.errors[0].message) {\n      this.message = this.errors\n        .map(\n          (err: ValidationErrorItem) =>\n            `${err.type || err.origin}: ${err.message}`\n        )\n        .join(',\\n');\n    }\n\n    // Allow overriding the stack if the original stacktrace is uninformative\n    if (options.stack) {\n      this.stack = options.stack;\n    }\n  }\n\n  /**\n   * Gets all validation error items for the path / field specified.\n   *\n   * @param {string} path The path to be checked for error items\n   *\n   * @returns {Array<ValidationErrorItem>} Validation error items for the specified path\n   */\n  get(path: string): ValidationErrorItem[] {\n    return this.errors.reduce<ValidationErrorItem[]>((reduced, error) => {\n      if (error.path === path) {\n        reduced.push(error);\n      }\n      return reduced;\n    }, []);\n  }\n}\n\nexport default ValidationError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,wBAAsB;AAOf,IAAK,0BAAL,kBAAK,6BAAL;AACL,kDAAsB;AACtB,iDAAqB;AACrB,iDAAqB;AACrB,iDAAqB;AAJX;AAAA;AAUL,IAAK,4BAAL,kBAAK,+BAAL;AAIL,uCAAO;AAKP,qCAAK;AAKL,2CAAW;AAdD;AAAA;AAqBL,0BAA0B;AAAA,EAiE/B,YACE,SACA,MAGA,MACA,OACA,UACA,cACA,QACA,QACA;AA9DO;AAKA;AAKA;AAKA;AAEA;AAKA;AAKA;AAKA;AAKA;AA0BP,SAAK,UAAU,WAAW;AAC1B,SAAK,OAAO;AACZ,SAAK,OAAO,QAAQ;AAEpB,SAAK,QAAQ,UAAU,SAAY,QAAQ;AAE3C,SAAK,SAAS;AAEd,SAAK,WAAW,YAAY;AAE5B,SAAK,eAAe,gBAAgB;AAEpC,SAAK,gBAAgB,UAAU;AAE/B,SAAK,gBAAgB,UAAU;AAE/B,QAAI,MAAM;AACR,UAAI,KAAK,4BAA4B,OAAO;AAC1C,aAAK,SAAS;AAAA,aACT;AACL,cAAM,gBAAgB,KAAK,gBAAgB;AAC3C,cAAM,WAAW,wBAAwB;AAEzC,YAAI,YAAY,0BAA0B,WAAW;AACnD,eAAK,SAAS;AACd,eAAK,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAQZ,4BACN,QAGkD;AAClD,WACE,0BACE,YACI;AAAA;AAAA,EAIF,gBAAkC,KAAW;AACnD,WAAO,IAAI,cAAc;AAAA;AAAA,EAc3B,gBAAgB,aAAsB,aAA6B;AACjE,UAAM,UAAU,gBAAgB,UAAa,CAAC,CAAC;AAC/C,UAAM,QAAQ,gBAAgB,SAAY,MAAM;AAEhD,UAAM,OAAO,KAAK;AAClB,UAAM,MAAM,KAAK,gBAAgB,KAAK;AACtC,UAAM,QAAQ,WAAW,QAAQ,0BAA0B;AAE3D,QAAI,SAAU,QAAO,UAAU,YAAY,CAAC,MAAM,SAAS;AACzD,YAAM,IAAI,MAAM;AAAA;AAGlB,QAAI,CAAE,QAAO,QAAQ,YAAY,IAAI,SAAS;AAC5C,aAAO;AAAA;AAGT,WAAQ,SAAQ,CAAC,KAAK,QAAQ,KAAK,KAAK,SAAS,KAAK,cAAc;AAAA;AAAA;AArJ/D,cAJF,qBAIE,iBAAgB;AAKhB,cATF,qBASE,WAAU;AA2JnB,8BAA8B,0BAAU;AAAA,EAItC,YACE,SACA,QACA,UAAwB,IACxB;AACA,UAAM;AAPC;AAQP,SAAK,OAAO;AACZ,SAAK,UAAU;AACf,SAAK,SAAS,UAAU;AAGxB,QAAI,SAAS;AACX,WAAK,UAAU;AAAA,eAGN,KAAK,OAAO,SAAS,KAAK,KAAK,OAAO,GAAG,SAAS;AAC3D,WAAK,UAAU,KAAK,OACjB,IACC,CAAC,QACC,GAAG,IAAI,QAAQ,IAAI,WAAW,IAAI,WAErC,KAAK;AAAA;AAIV,QAAI,QAAQ,OAAO;AACjB,WAAK,QAAQ,QAAQ;AAAA;AAAA;AAAA,EAWzB,IAAI,MAAqC;AACvC,WAAO,KAAK,OAAO,OAA8B,CAAC,SAAS,UAAU;AACnE,UAAI,MAAM,SAAS,MAAM;AACvB,gBAAQ,KAAK;AAAA;AAEf,aAAO;AAAA,OACN;AAAA;AAAA;AAIP,IAAO,2BAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/connection/access-denied-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,44,3,73,65,23,18,45,3,1,52,47,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/errors/connection/access-denied-error.ts"],"sourcesContent":["import ConnectionError from '../connection-error';\n\n/**\n * Thrown when a connection to a database is refused due to insufficient privileges\n */\nclass AccessDeniedError extends ConnectionError {\n  constructor(parent: Error) {\n    super(parent);\n    this.name = 'SequelizeAccessDeniedError';\n  }\n}\n\nexport default AccessDeniedError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,8BAA4B;AAK5B,gCAAgC,gCAAgB;AAAA,EAC9C,YAAY,QAAe;AACzB,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,8BAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/connection/connection-acquire-timeout-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,57,3,73,77,23,18,57,3,1,77,60,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/errors/connection/connection-acquire-timeout-error.ts"],"sourcesContent":["import ConnectionError from '../connection-error';\n\n/**\n * Thrown when connection is not acquired due to timeout\n */\nclass ConnectionAcquireTimeoutError extends ConnectionError {\n  constructor(parent: Error) {\n    super(parent);\n    this.name = 'SequelizeConnectionAcquireTimeoutError';\n  }\n}\n\nexport default ConnectionAcquireTimeoutError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,8BAA4B;AAK5B,4CAA4C,gCAAgB;AAAA,EAC1D,YAAY,QAAe;AACzB,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,2CAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/connection/connection-refused-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,49,3,73,70,23,18,50,3,1,62,52,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/errors/connection/connection-refused-error.ts"],"sourcesContent":["import ConnectionError from '../connection-error';\n\n/**\n * Thrown when a connection to a database is refused\n */\nclass ConnectionRefusedError extends ConnectionError {\n  constructor(parent: Error) {\n    super(parent);\n    this.name = 'SequelizeConnectionRefusedError';\n  }\n}\n\nexport default ConnectionRefusedError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,8BAA4B;AAK5B,qCAAqC,gCAAgB;AAAA,EACnD,YAAY,QAAe;AACzB,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,mCAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/connection/connection-timed-out-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,51,3,73,71,23,18,51,3,1,65,54,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/errors/connection/connection-timed-out-error.ts"],"sourcesContent":["import ConnectionError from '../connection-error';\n\n/**\n * Thrown when a connection to a database times out\n */\nclass ConnectionTimedOutError extends ConnectionError {\n  constructor(parent: Error) {\n    super(parent);\n    this.name = 'SequelizeConnectionTimedOutError';\n  }\n}\n\nexport default ConnectionTimedOutError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,8BAA4B;AAK5B,sCAAsC,gCAAgB;AAAA,EACpD,YAAY,QAAe;AACzB,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,qCAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/connection/host-not-found-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,45,3,73,65,23,18,45,3,1,53,48,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/errors/connection/host-not-found-error.ts"],"sourcesContent":["import ConnectionError from '../connection-error';\n\n/**\n * Thrown when a connection to a database has a hostname that was not found\n */\nclass HostNotFoundError extends ConnectionError {\n  constructor(parent: Error) {\n    super(parent);\n    this.name = 'SequelizeHostNotFoundError';\n  }\n}\n\nexport default HostNotFoundError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,8BAA4B;AAK5B,gCAAgC,gCAAgB;AAAA,EAC9C,YAAY,QAAe;AACzB,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,+BAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/connection/host-not-reachable-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,49,3,73,69,23,18,49,3,1,61,52,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/errors/connection/host-not-reachable-error.ts"],"sourcesContent":["import ConnectionError from '../connection-error';\n\n/**\n * Thrown when a connection to a database has a hostname that was not reachable\n */\nclass HostNotReachableError extends ConnectionError {\n  constructor(parent: Error) {\n    super(parent);\n    this.name = 'SequelizeHostNotReachableError';\n  }\n}\n\nexport default HostNotReachableError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,8BAA4B;AAK5B,oCAAoC,gCAAgB;AAAA,EAClD,YAAY,QAAe;AACzB,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,mCAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/connection/invalid-connection-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,49,3,73,70,23,18,50,3,1,62,52,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/errors/connection/invalid-connection-error.ts"],"sourcesContent":["import ConnectionError from '../connection-error';\n\n/**\n * Thrown when a connection to a database has invalid values for any of the connection parameters\n */\nclass InvalidConnectionError extends ConnectionError {\n  constructor(parent: Error) {\n    super(parent);\n    this.name = 'SequelizeInvalidConnectionError';\n  }\n}\n\nexport default InvalidConnectionError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,8BAA4B;AAK5B,qCAAqC,gCAAgB;AAAA,EACnD,YAAY,QAAe;AACzB,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,mCAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/database/exclusion-constraint-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,51,3,69,70,24,28,74,52,38,34,33,52,67,41,33,31,3,1,66,54,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/errors/database/exclusion-constraint-error.ts"],"sourcesContent":["import DatabaseError, { DatabaseErrorSubclassOptions } from '../database-error';\n\ninterface ExclusionConstraintErrorOptions {\n  constraint?: string;\n  fields?: Record<string, string | number>;\n  table?: string;\n}\n\n/**\n * Thrown when an exclusion constraint is violated in the database\n */\nclass ExclusionConstraintError extends DatabaseError implements ExclusionConstraintErrorOptions {\n  constraint: string | undefined;\n  fields: Record<string, string | number> | undefined;\n  table: string | undefined;\n\n  constructor(\n    options: DatabaseErrorSubclassOptions & ExclusionConstraintErrorOptions\n  ) {\n    options = options || {};\n    options.parent = options.parent || { sql: '', name: '', message: '' };\n\n    super(options.parent, { stack: options.stack });\n    this.name = 'SequelizeExclusionConstraintError';\n\n    this.message = options.message || options.parent.message || '';\n    this.constraint = options.constraint;\n    this.fields = options.fields;\n    this.table = options.table;\n  }\n}\n\nexport default ExclusionConstraintError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,4BAA4D;AAW5D,uCAAuC,8BAAyD;AAAA,EAK9F,YACE,SACA;AACA,cAAU,WAAW;AACrB,YAAQ,SAAS,QAAQ,UAAU,EAAE,KAAK,IAAI,MAAM,IAAI,SAAS;AAEjE,UAAM,QAAQ,QAAQ,EAAE,OAAO,QAAQ;AAVzC;AACA;AACA;AASE,SAAK,OAAO;AAEZ,SAAK,UAAU,QAAQ,WAAW,QAAQ,OAAO,WAAW;AAC5D,SAAK,aAAa,QAAQ;AAC1B,SAAK,SAAS,QAAQ;AACtB,SAAK,QAAQ,QAAQ;AAAA;AAAA;AAIzB,IAAO,qCAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/database/foreign-key-constraint-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,43,53,3,69,64,41,39,27,27,71,24,28,74,52,33,34,33,33,35,53,81,33,31,31,31,35,3,1,69,56,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/errors/database/foreign-key-constraint-error.ts"],"sourcesContent":["import DatabaseError, { DatabaseErrorSubclassOptions } from '../database-error';\n\nexport enum RelationshipType {\n  parent = 'parent',\n  child = 'child',\n}\n\ninterface ForeignKeyConstraintErrorOptions {\n  table?: string;\n  fields?: { [field: string]: string };\n  value?: unknown;\n  index?: string;\n  reltype?: RelationshipType;\n}\n\n/**\n * Thrown when a foreign key constraint is violated in the database\n */\nclass ForeignKeyConstraintError extends DatabaseError {\n  table: string | undefined;\n  fields: { [field: string]: string } | undefined;\n  value: unknown;\n  index: string | undefined;\n  reltype: RelationshipType | undefined;\n\n  constructor(\n    options: ForeignKeyConstraintErrorOptions & DatabaseErrorSubclassOptions\n  ) {\n    options = options || {};\n    options.parent = options.parent || { sql: '', name: '', message: '' };\n\n    super(options.parent, { stack: options.stack });\n    this.name = 'SequelizeForeignKeyConstraintError';\n\n    this.message =\n      options.message || options.parent.message || 'Database Error';\n    this.fields = options.fields;\n    this.table = options.table;\n    this.value = options.value;\n    this.index = options.index;\n    this.reltype = options.reltype;\n  }\n}\n\nexport default ForeignKeyConstraintError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA4D;AAErD,IAAK,mBAAL,kBAAK,sBAAL;AACL,gCAAS;AACT,+BAAQ;AAFE;AAAA;AAgBZ,wCAAwC,8BAAc;AAAA,EAOpD,YACE,SACA;AACA,cAAU,WAAW;AACrB,YAAQ,SAAS,QAAQ,UAAU,EAAE,KAAK,IAAI,MAAM,IAAI,SAAS;AAEjE,UAAM,QAAQ,QAAQ,EAAE,OAAO,QAAQ;AAZzC;AACA;AACA;AACA;AACA;AASE,SAAK,OAAO;AAEZ,SAAK,UACH,QAAQ,WAAW,QAAQ,OAAO,WAAW;AAC/C,SAAK,SAAS,QAAQ;AACtB,SAAK,QAAQ,QAAQ;AACrB,SAAK,QAAQ,QAAQ;AACrB,SAAK,QAAQ,QAAQ;AACrB,SAAK,UAAU,QAAQ;AAAA;AAAA;AAI3B,IAAO,uCAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/database/timeout-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,38,3,69,58,37,27,40,3,1,41,41,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/errors/database/timeout-error.ts"],"sourcesContent":["import { ErrorOptions } from '../base-error';\nimport DatabaseError, { DatabaseErrorParent } from '../database-error';\n\n/**\n * Thrown when a database query times out because of a deadlock\n */\nclass TimeoutError extends DatabaseError {\n  constructor(parent: DatabaseErrorParent, options: ErrorOptions = {}) {\n    super(parent, options);\n    this.name = 'SequelizeTimeoutError';\n  }\n}\n\nexport default TimeoutError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA,4BAAmD;AAKnD,2BAA2B,8BAAc;AAAA,EACvC,YAAY,QAA6B,UAAwB,IAAI;AACnE,UAAM,QAAQ;AACd,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,wBAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/database/unknown-constraint-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,49,3,69,68,24,28,74,52,38,34,33,50,80,41,33,31,3,1,62,52,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/errors/database/unknown-constraint-error.ts"],"sourcesContent":["import DatabaseError, { DatabaseErrorSubclassOptions } from '../database-error';\n\ninterface UnknownConstraintErrorOptions {\n  constraint?: string;\n  fields?: Record<string, string | number>;\n  table?: string;\n}\n\n/**\n * Thrown when constraint name is not found in the database\n */\nclass UnknownConstraintError extends DatabaseError implements UnknownConstraintErrorOptions {\n  constraint: string | undefined;\n  fields: Record<string, string | number> | undefined;\n  table: string | undefined;\n\n  constructor(\n    options: UnknownConstraintErrorOptions & DatabaseErrorSubclassOptions\n  ) {\n    options = options || {};\n    options.parent = options.parent || { sql: '', name: '', message: '' };\n\n    super(options.parent, { stack: options.stack });\n    this.name = 'SequelizeUnknownConstraintError';\n\n    this.message = options.message || 'The specified constraint does not exist';\n    this.constraint = options.constraint;\n    this.fields = options.fields;\n    this.table = options.table;\n  }\n}\n\nexport default UnknownConstraintError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,4BAA4D;AAW5D,qCAAqC,8BAAuD;AAAA,EAK1F,YACE,SACA;AACA,cAAU,WAAW;AACrB,YAAQ,SAAS,QAAQ,UAAU,EAAE,KAAK,IAAI,MAAM,IAAI,SAAS;AAEjE,UAAM,QAAQ,QAAQ,EAAE,OAAO,QAAQ;AAVzC;AACA;AACA;AASE,SAAK,OAAO;AAEZ,SAAK,UAAU,QAAQ,WAAW;AAClC,SAAK,aAAa,QAAQ;AAC1B,SAAK,SAAS,QAAQ;AACtB,SAAK,QAAQ,QAAQ;AAAA;AAAA;AAIzB,IAAO,mCAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/errors/validation/unique-constraint-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,48,3,73,69,24,19,45,93,86,61,69,34,36,34,31,49,58,33,35,34,3,1,60,51,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/errors/validation/unique-constraint-error.ts"],"sourcesContent":["import { CommonErrorProperties, ErrorOptions } from '../base-error';\nimport ValidationError, { ValidationErrorItem } from '../validation-error';\n\ninterface UniqueConstraintErrorParent\n  extends Error,\n    Pick<CommonErrorProperties, 'sql'> {}\n\nexport interface UniqueConstraintErrorOptions extends ErrorOptions {\n  parent?: UniqueConstraintErrorParent;\n  original?: UniqueConstraintErrorParent;\n  errors?: ValidationErrorItem[];\n  fields?: Record<string, unknown>;\n  message?: string;\n}\n\n/**\n * Thrown when a unique constraint is violated in the database\n */\nclass UniqueConstraintError extends ValidationError implements CommonErrorProperties {\n  readonly parent: UniqueConstraintErrorParent;\n  readonly original: UniqueConstraintErrorParent;\n  readonly fields: Record<string, unknown>;\n  readonly sql: string;\n\n  constructor(options: UniqueConstraintErrorOptions) {\n    options = options ?? {};\n    options.parent = options.parent ?? { sql: '', name: '', message: '' };\n    options.message =\n      options.message || options.parent.message || 'Validation Error';\n    options.errors = options.errors ?? [];\n    super(options.message, options.errors, { stack: options.stack });\n\n    this.name = 'SequelizeUniqueConstraintError';\n    this.fields = options.fields ?? {};\n    this.parent = options.parent;\n    this.original = options.parent;\n    this.sql = options.parent.sql;\n  }\n}\n\nexport default UniqueConstraintError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA,8BAAqD;AAiBrD,oCAAoC,gCAAiD;AAAA,EAMnF,YAAY,SAAuC;AAxBrD;AAyBI,cAAU,4BAAW;AACrB,YAAQ,SAAS,cAAQ,WAAR,YAAkB,EAAE,KAAK,IAAI,MAAM,IAAI,SAAS;AACjE,YAAQ,UACN,QAAQ,WAAW,QAAQ,OAAO,WAAW;AAC/C,YAAQ,SAAS,cAAQ,WAAR,YAAkB;AACnC,UAAM,QAAQ,SAAS,QAAQ,QAAQ,EAAE,OAAO,QAAQ;AAXjD;AACA;AACA;AACA;AAUP,SAAK,OAAO;AACZ,SAAK,SAAS,cAAQ,WAAR,YAAkB;AAChC,SAAK,SAAS,QAAQ;AACtB,SAAK,WAAW,QAAQ;AACxB,SAAK,MAAM,QAAQ,OAAO;AAAA;AAAA;AAI9B,IAAO,kCAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/mssql/async-queue.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,41,36,3,71,83,57,24,19,43,3,1,18,17,36,34,41,38,24,32,6,3,11,23,151,3,26,45,48,36,26,147,9,53,9,7,3,1,37,39,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/dialects/mssql/async-queue.ts"],"sourcesContent":["import BaseError from '../../errors/base-error';\nimport ConnectionError from '../../errors/connection-error';\n\n/**\n * Thrown when a connection to a database is closed while an operation is in progress\n */\nexport class AsyncQueueError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'SequelizeAsyncQueueError';\n  }\n}\n\nclass AsyncQueue {\n  previous: Promise<unknown>;\n  closed: boolean;\n  rejectCurrent: (reason?: any) => void;\n\n  constructor() {\n    this.previous = Promise.resolve();\n    this.closed = false;\n    this.rejectCurrent = () => {\n      /** do nothing */\n    };\n  }\n\n  close() {\n    this.closed = true;\n    this.rejectCurrent(\n      new ConnectionError(\n        new AsyncQueueError(\n          'the connection was closed before this query could finish executing'\n        )\n      )\n    );\n  }\n\n  enqueue(asyncFunction: (...args: any[]) => Promise<unknown>) {\n    // This outer promise might seems superflous since down below we return asyncFunction().then(resolve, reject).\n    // However, this ensures that this.previous will never be a rejected promise so the queue will\n    // always keep going, while still communicating rejection from asyncFunction to the user.\n    return new Promise((resolve, reject) => {\n      this.previous = this.previous.then(() => {\n        this.rejectCurrent = reject;\n        if (this.closed) {\n          return reject(\n            new ConnectionError(\n              new AsyncQueueError(\n                'the connection was closed before this query could be executed'\n              )\n            )\n          );\n        }\n        return asyncFunction().then(resolve, reject);\n      });\n    });\n  }\n}\n\nexport default AsyncQueue;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAsB;AACtB,8BAA4B;AAKrB,8BAA8B,0BAAU;AAAA,EAC7C,YAAY,SAAiB;AAC3B,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,iBAAiB;AAAA,EAKf,cAAc;AAJd;AACA;AACA;AAGE,SAAK,WAAW,QAAQ;AACxB,SAAK,SAAS;AACd,SAAK,gBAAgB,MAAM;AAAA;AAAA;AAAA,EAK7B,QAAQ;AACN,SAAK,SAAS;AACd,SAAK,cACH,IAAI,gCACF,IAAI,gBACF;AAAA;AAAA,EAMR,QAAQ,eAAqD;AAI3D,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,WAAK,WAAW,KAAK,SAAS,KAAK,MAAM;AACvC,aAAK,gBAAgB;AACrB,YAAI,KAAK,QAAQ;AACf,iBAAO,OACL,IAAI,gCACF,IAAI,gBACF;AAAA;AAKR,eAAO,gBAAgB,KAAK,SAAS;AAAA;AAAA;AAAA;AAAA;AAM7C,IAAO,sBAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/utils/validator-extras.js":{"lineLengths":[13,28,52,33,20,20,20,16,4,17,39,4,22,40,4,14,27,4,15,29,4,15,29,4,22,35,4,34,14,76,47,5,30,4,37,48,4,18,97,4,17,35,42,4,17,35,42,4,32,50,4,23,40,4,26,37,4,31,47,3,2,32,78,115,2,35,40,2,40,26,3,37,41,40,22,17,3,32,46,2,30,44,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/utils/validator-extras.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst validator = _.cloneDeep(require('validator'));\nconst moment = require('moment');\n\nconst extensions = {\n  extend(name, fn) {\n    this[name] = fn;\n\n    return this;\n  },\n  notEmpty(str) {\n    return !str.match(/^[\\s\\t\\r\\n]*$/);\n  },\n  len(str, min, max) {\n    return this.isLength(str, min, max);\n  },\n  isUrl(str) {\n    return this.isURL(str);\n  },\n  isIPv6(str) {\n    return this.isIP(str, 6);\n  },\n  isIPv4(str) {\n    return this.isIP(str, 4);\n  },\n  notIn(str, values) {\n    return !this.isIn(str, values);\n  },\n  regex(str, pattern, modifiers) {\n    str += '';\n    if (Object.prototype.toString.call(pattern).slice(8, -1) !== 'RegExp') {\n      pattern = new RegExp(pattern, modifiers);\n    }\n    return str.match(pattern);\n  },\n  notRegex(str, pattern, modifiers) {\n    return !this.regex(str, pattern, modifiers);\n  },\n  isDecimal(str) {\n    return str !== '' && !!str.match(/^(?:-?(?:[0-9]+))?(?:\\.[0-9]*)?(?:[eE][+-]?(?:[0-9]+))?$/);\n  },\n  min(str, val) {\n    const number = parseFloat(str);\n    return isNaN(number) || number >= val;\n  },\n  max(str, val) {\n    const number = parseFloat(str);\n    return isNaN(number) || number <= val;\n  },\n  not(str, pattern, modifiers) {\n    return this.notRegex(str, pattern, modifiers);\n  },\n  contains(str, elem) {\n    return !!elem && str.includes(elem);\n  },\n  notContains(str, elem) {\n    return !this.contains(str, elem);\n  },\n  is(str, pattern, modifiers) {\n    return this.regex(str, pattern, modifiers);\n  }\n};\nexports.extensions = extensions;\n\n// instance based validators\nvalidator.isImmutable = function(value, validatorArgs, field, modelInstance) {\n  return modelInstance.isNewRecord || modelInstance.dataValues[field] === modelInstance._previousDataValues[field];\n};\n\n// extra validators\nvalidator.notNull = function(val) {\n  return val !== null && val !== undefined;\n};\n\n// https://github.com/chriso/validator.js/blob/6.2.0/validator.js\n_.forEach(extensions, (extend, key) => {\n  validator[key] = extend;\n});\n\n// map isNull to isEmpty\n// https://github.com/chriso/validator.js/commit/e33d38a26ee2f9666b319adb67c7fc0d3dea7125\nvalidator.isNull = validator.isEmpty;\n\n// isDate removed in 7.0.0\n// https://github.com/chriso/validator.js/commit/095509fc707a4dc0e99f85131df1176ad6389fc9\nvalidator.isDate = function(dateString) {\n  // avoid http://momentjs.com/guides/#/warnings/js-date/\n  // by doing a preliminary check on `dateString`\n  const parsed = Date.parse(dateString);\n  if (isNaN(parsed)) {\n    // fail if we can't parse it\n    return false;\n  }\n  // otherwise convert to ISO 8601 as moment prefers\n  // http://momentjs.com/docs/#/parsing/string/\n  const date = new Date(parsed);\n  return moment(date.toISOString()).isValid();\n};\n\nexports.validator = validator;\n"],"mappings":";AAEA,MAAM,IAAI,QAAQ;AAClB,MAAM,YAAY,EAAE,UAAU,QAAQ;AACtC,MAAM,SAAS,QAAQ;AAEvB,MAAM,aAAa;AAAA,EACjB,OAAO,MAAM,IAAI;AACf,SAAK,QAAQ;AAEb,WAAO;AAAA;AAAA,EAET,SAAS,KAAK;AACZ,WAAO,CAAC,IAAI,MAAM;AAAA;AAAA,EAEpB,IAAI,KAAK,KAAK,KAAK;AACjB,WAAO,KAAK,SAAS,KAAK,KAAK;AAAA;AAAA,EAEjC,MAAM,KAAK;AACT,WAAO,KAAK,MAAM;AAAA;AAAA,EAEpB,OAAO,KAAK;AACV,WAAO,KAAK,KAAK,KAAK;AAAA;AAAA,EAExB,OAAO,KAAK;AACV,WAAO,KAAK,KAAK,KAAK;AAAA;AAAA,EAExB,MAAM,KAAK,QAAQ;AACjB,WAAO,CAAC,KAAK,KAAK,KAAK;AAAA;AAAA,EAEzB,MAAM,KAAK,SAAS,WAAW;AAC7B,WAAO;AACP,QAAI,OAAO,UAAU,SAAS,KAAK,SAAS,MAAM,GAAG,QAAQ,UAAU;AACrE,gBAAU,IAAI,OAAO,SAAS;AAAA;AAEhC,WAAO,IAAI,MAAM;AAAA;AAAA,EAEnB,SAAS,KAAK,SAAS,WAAW;AAChC,WAAO,CAAC,KAAK,MAAM,KAAK,SAAS;AAAA;AAAA,EAEnC,UAAU,KAAK;AACb,WAAO,QAAQ,MAAM,CAAC,CAAC,IAAI,MAAM;AAAA;AAAA,EAEnC,IAAI,KAAK,KAAK;AACZ,UAAM,SAAS,WAAW;AAC1B,WAAO,MAAM,WAAW,UAAU;AAAA;AAAA,EAEpC,IAAI,KAAK,KAAK;AACZ,UAAM,SAAS,WAAW;AAC1B,WAAO,MAAM,WAAW,UAAU;AAAA;AAAA,EAEpC,IAAI,KAAK,SAAS,WAAW;AAC3B,WAAO,KAAK,SAAS,KAAK,SAAS;AAAA;AAAA,EAErC,SAAS,KAAK,MAAM;AAClB,WAAO,CAAC,CAAC,QAAQ,IAAI,SAAS;AAAA;AAAA,EAEhC,YAAY,KAAK,MAAM;AACrB,WAAO,CAAC,KAAK,SAAS,KAAK;AAAA;AAAA,EAE7B,GAAG,KAAK,SAAS,WAAW;AAC1B,WAAO,KAAK,MAAM,KAAK,SAAS;AAAA;AAAA;AAGpC,QAAQ,aAAa;AAGrB,UAAU,cAAc,SAAS,OAAO,eAAe,OAAO,eAAe;AAC3E,SAAO,cAAc,eAAe,cAAc,WAAW,WAAW,cAAc,oBAAoB;AAAA;AAI5G,UAAU,UAAU,SAAS,KAAK;AAChC,SAAO,QAAQ,QAAQ,QAAQ;AAAA;AAIjC,EAAE,QAAQ,YAAY,CAAC,QAAQ,QAAQ;AACrC,YAAU,OAAO;AAAA;AAKnB,UAAU,SAAS,UAAU;AAI7B,UAAU,SAAS,SAAS,YAAY;AAGtC,QAAM,SAAS,KAAK,MAAM;AAC1B,MAAI,MAAM,SAAS;AAEjB,WAAO;AAAA;AAIT,QAAM,OAAO,IAAI,KAAK;AACtB,SAAO,OAAO,KAAK,eAAe;AAAA;AAGpC,QAAQ,YAAY;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/utils/logger.js":{"lineLengths":[29,38,55,51,55,41,51,57,160,32,33,35,40,26,46,37,42,5,11,2,82,38,18,26,69,34,44,51,71,36,5,16,2,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,23,22,3,48,46,14,24,34,83,34,13,13,3,17,65,3,18,47,24,14,7,3,22,71,3,1,28,34,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/utils/logger.ts"],"sourcesContent":["/**\n * @file Sequelize module for debug and deprecation messages.\n * It require a `context` for which messages will be printed.\n *\n * @module logging\n * @access package\n */\nimport nodeDebug from 'debug';\nimport util from 'util';\n\n/**\n * The configuration for sequelize's logging interface.\n *\n * @access package\n */\nexport interface LoggerConfig {\n  /**\n   * The context which the logger should log in.\n   *\n   * @default 'sequelize'\n   */\n  context?: string;\n}\n\nexport class Logger {\n  protected config: LoggerConfig;\n\n  constructor({ context = 'sequelize', ...rest }: Partial<LoggerConfig> = {}) {\n    this.config = {\n      context,\n      ...rest\n    };\n  }\n\n  /**\n   * Logs a warning in the logger's context.\n   *\n   * @param message The message of the warning.\n   */\n  warn(message: string): void {\n    console.warn(`(${this.config.context}) Warning: ${message}`);\n  }\n\n  /**\n   * Uses node's util.inspect to stringify a value.\n   *\n   * @param value The value which should be inspected.\n   * @returns The string of the inspected value.\n   */\n  inspect(value: unknown): string {\n    return util.inspect(value, {\n      showHidden: false,\n      depth: 1\n    });\n  }\n\n  /**\n   * Gets a debugger for a context.\n   *\n   * @param name The name of the context.\n   * @returns A debugger interace which can be used to debug.\n   */\n  debugContext(name: string): nodeDebug.Debugger {\n    return nodeDebug(`${this.config.context}:${name}`);\n  }\n}\n\nexport const logger = new Logger();\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAOA,mBAAsB;AACtB,kBAAiB;AAgBV,aAAa;AAAA,EAGlB,YAAY,KAA4D,IAAI;AAFlE;AAEE,iBAAE,YAAU,gBAAZ,IAA4B,iBAA5B,IAA4B,CAA1B;AACZ,SAAK,SAAS;AAAA,MACZ;AAAA,OACG;AAAA;AAAA,EASP,KAAK,SAAuB;AAC1B,YAAQ,KAAK,IAAI,KAAK,OAAO,qBAAqB;AAAA;AAAA,EASpD,QAAQ,OAAwB;AAC9B,WAAO,oBAAK,QAAQ,OAAO;AAAA,MACzB,YAAY;AAAA,MACZ,OAAO;AAAA;AAAA;AAAA,EAUX,aAAa,MAAkC;AAC7C,WAAO,0BAAU,GAAG,KAAK,OAAO,WAAW;AAAA;AAAA;AAIxC,MAAM,SAAS,IAAI;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/utils/class-to-invokable.js":{"lineLengths":[38,82,33,25,23,66,2,19,42,3,34,27,36,32,6,30,32,5,5,1,46,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/utils/class-to-invokable.ts"],"sourcesContent":["/**\n * Utility type for a class which can be called in addion to being used as a constructor.\n */\ninterface Invokeable<Args extends Array<any>, Instance> {\n  (...args: Args): Instance;\n  new (...args: Args): Instance;\n}\n\n/**\n * Wraps a constructor to not need the `new` keyword using a proxy.\n * Only used for data types.\n *\n * @param {ProxyConstructor} Class The class instance to wrap as invocable.\n * @returns {Proxy} Wrapped class instance.\n * @private\n */\nexport function classToInvokable<Args extends Array<any>, Instance extends object>(\n  Class: new (...args: Args) => Instance\n): Invokeable<Args, Instance> {\n  return new Proxy<Invokeable<Args, Instance>>(Class as any, {\n    apply(_target, _thisArg, args: Args) {\n      return new Class(...args);\n    },\n    construct(_target, args: Args) {\n      return new Class(...args);\n    }\n  });\n}\n"],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAgBO,0BACL,OAC4B;AAC5B,SAAO,IAAI,MAAkC,OAAc;AAAA,IACzD,MAAM,SAAS,UAAU,MAAY;AACnC,aAAO,IAAI,MAAM,GAAG;AAAA;AAAA,IAEtB,UAAU,SAAS,MAAY;AAC7B,aAAO,IAAI,MAAM,GAAG;AAAA;AAAA;AAAA;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/utils/join-sql-fragments.js":{"lineLengths":[38,160,82,33,25,23,66,2,42,72,15,2,19,53,42,3,39,28,1,40,25,1,39,67,64,28,12,34,5,12,59,12,6,6,31,14,12,1,34,25,14,47,56,34,40,5,20,5,42,51,152,5,3,59,67,52,1,47,40,19,32,36,21,29,40,3,1,46,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/utils/join-sql-fragments.ts"],"sourcesContent":["import { SQLFragment, TruthySQLFragment } from '../generic/sql-fragment';\n\nfunction doesNotWantLeadingSpace(str: string): boolean {\n  return /^[;,)]/.test(str);\n}\nfunction doesNotWantTrailingSpace(str: string): boolean {\n  return /\\($/.test(str);\n}\n\n/**\n * Joins an array of strings with a single space between them,\n * except for:\n *\n * - Strings starting with ';', ',' and ')', which do not get a leading space.\n * - Strings ending with '(', which do not get a trailing space.\n *\n * @param {string[]} parts\n * @returns {string}\n * @private\n */\nfunction singleSpaceJoinHelper(parts: string[]): string {\n  return parts.reduce(\n    ({ skipNextLeadingSpace, result }, part) => {\n      if (skipNextLeadingSpace || doesNotWantLeadingSpace(part)) {\n        result += part.trim();\n      } else {\n        result += ` ${part.trim()}`;\n      }\n      return {\n        skipNextLeadingSpace: doesNotWantTrailingSpace(part),\n        result\n      };\n    },\n    {\n      skipNextLeadingSpace: true,\n      result: ''\n    }\n  ).result;\n}\n\n/**\n * Joins an array with a single space, auto trimming when needed.\n *\n * Certain elements do not get leading/trailing spaces.\n *\n * @param {SQLFragment[]} array The array to be joined. Falsy values are skipped. If an\n * element is another array, this function will be called recursively on that array.\n * Otherwise, if a non-string, non-falsy value is present, a TypeError will be thrown.\n *\n * @returns {string} The joined string.\n *\n * @private\n */\nexport function joinSQLFragments(array: SQLFragment[]): string {\n  if (array.length === 0) return '';\n\n  const truthyArray: TruthySQLFragment[] = array.filter(\n    (x): x is string | SQLFragment[] => !!x\n  );\n  const flattenedArray: string[] = truthyArray.map(\n    (fragment: TruthySQLFragment) => {\n      if (Array.isArray(fragment)) {\n        return joinSQLFragments(fragment);\n      }\n\n      return fragment;\n    }\n  );\n\n  // Ensure strings\n  for (const fragment of flattenedArray) {\n    if (fragment && typeof fragment !== 'string') {\n      throw new JoinSQLFragmentsError(\n        flattenedArray,\n        fragment,\n        `Tried to construct a SQL string with a non-string, non-falsy fragment (${fragment}).`\n      );\n    }\n  }\n\n  // Trim fragments\n  const trimmedArray = flattenedArray.map(x => x.trim());\n\n  // Skip full-whitespace fragments (empty after the above trim)\n  const nonEmptyStringArray = trimmedArray.filter(x => x !== '');\n\n  return singleSpaceJoinHelper(nonEmptyStringArray);\n}\n\nexport class JoinSQLFragmentsError extends TypeError {\n  args: SQLFragment[];\n  fragment: any; // iirc this error is only used when we get an invalid fragment.\n\n  constructor(args: SQLFragment[], fragment: any, message: string) {\n    super(message);\n    \n    this.args = args;\n    this.fragment = fragment;\n    this.name = 'JoinSQLFragmentsError';\n  }\n}\n"],"mappings":";;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAEA,iCAAiC,KAAsB;AACrD,SAAO,SAAS,KAAK;AAAA;AAEvB,kCAAkC,KAAsB;AACtD,SAAO,MAAM,KAAK;AAAA;AAcpB,+BAA+B,OAAyB;AACtD,SAAO,MAAM,OACX,CAAC,EAAE,sBAAsB,UAAU,SAAS;AAC1C,QAAI,wBAAwB,wBAAwB,OAAO;AACzD,gBAAU,KAAK;AAAA,WACV;AACL,gBAAU,IAAI,KAAK;AAAA;AAErB,WAAO;AAAA,MACL,sBAAsB,yBAAyB;AAAA,MAC/C;AAAA;AAAA,KAGJ;AAAA,IACE,sBAAsB;AAAA,IACtB,QAAQ;AAAA,KAEV;AAAA;AAgBG,0BAA0B,OAA8B;AAC7D,MAAI,MAAM,WAAW;AAAG,WAAO;AAE/B,QAAM,cAAmC,MAAM,OAC7C,CAAC,MAAmC,CAAC,CAAC;AAExC,QAAM,iBAA2B,YAAY,IAC3C,CAAC,aAAgC;AAC/B,QAAI,MAAM,QAAQ,WAAW;AAC3B,aAAO,iBAAiB;AAAA;AAG1B,WAAO;AAAA;AAKX,aAAW,YAAY,gBAAgB;AACrC,QAAI,YAAY,OAAO,aAAa,UAAU;AAC5C,YAAM,IAAI,sBACR,gBACA,UACA,0EAA0E;AAAA;AAAA;AAMhF,QAAM,eAAe,eAAe,IAAI,OAAK,EAAE;AAG/C,QAAM,sBAAsB,aAAa,OAAO,OAAK,MAAM;AAE3D,SAAO,sBAAsB;AAAA;AAGxB,oCAAoC,UAAU;AAAA,EAInD,YAAY,MAAqB,UAAe,SAAiB;AAC/D,UAAM;AAJR;AACA;AAKE,SAAK,OAAO;AACZ,SAAK,WAAW;AAChB,SAAK,OAAO;AAAA;AAAA;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/postgres/data-types.js":{"lineLengths":[13,28,27,33,111,54,98,142,32,39,34,34,5,3,43,43,43,49,51,43,45,43,45,32,31,26,7,32,27,7,46,5,31,95,40,44,37,28,11,38,29,11,9,38,7,19,5,25,33,24,7,34,25,7,19,5,3,47,43,25,19,5,3,49,41,13,25,23,7,27,5,3,48,37,13,25,98,30,7,20,5,3,43,41,25,19,5,3,47,37,13,25,23,7,27,5,3,53,43,13,23,5,22,47,59,27,9,40,103,9,40,66,9,7,19,5,3,46,46,37,13,40,5,21,54,37,7,18,5,32,31,26,7,32,27,7,46,5,31,134,40,44,37,28,11,38,29,11,9,31,7,19,5,3,50,43,25,20,44,5,3,46,45,25,20,44,5,3,47,43,25,20,44,5,3,41,31,4,46,41,25,20,44,5,3,45,37,25,20,44,5,3,45,41,25,20,44,5,3,47,39,35,30,27,101,30,37,32,7,27,84,32,7,27,84,32,7,5,3,21,37,13,25,107,30,7,21,5,18,30,5,3,44,45,13,28,22,34,24,36,9,22,7,20,5,25,42,65,5,32,76,5,32,63,5,3,51,47,13,31,22,34,24,36,9,22,7,20,5,25,42,65,5,32,76,5,31,63,5,3,53,13,41,19,14,20,37,7,5,19,20,37,7,37,5,23,39,5,32,51,5,25,20,37,7,33,5,3,34,47,39,29,35,63,7,45,62,88,73,54,11,30,9,74,23,9,45,64,9,37,9,53,48,5,33,49,35,50,7,26,5,33,49,35,67,7,38,5,13,82,5,18,83,5,61,48,5,3,35,33,36,15,27,26,24,28,25,6,16,22,25,26,23,20,5,4,43,71,34,74,48,7,45,52,41,23,9,7,35,13,4,79,65,20,43,33,48,57,50,110,127,52,14,30,7,5,15,4,79,59,4,37,25,19,5,3,41,10,12,9,11,9,9,11,12,13,12,11,12,9,13,9,31,10,13,14,11,10,8,4,2,38,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/dialects/postgres/data-types.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst wkx = require('wkx');\n\nmodule.exports = BaseTypes => {\n  const warn = BaseTypes.ABSTRACT.warn.bind(undefined, 'http://www.postgresql.org/docs/9.4/static/datatype.html');\n\n  /**\n   * Removes unsupported Postgres options, i.e., LENGTH, UNSIGNED and ZEROFILL, for the integer data types.\n   *\n   * @param {object} dataType The base integer data type.\n   * @private\n   */\n  function removeUnsupportedIntegerOptions(dataType) {\n    if (dataType._length || dataType.options.length || dataType._unsigned || dataType._zerofill) {\n      warn(`PostgresSQL does not support '${dataType.key}' with LENGTH, UNSIGNED or ZEROFILL. Plain '${dataType.key}' will be used instead.`);\n      dataType._length = undefined;\n      dataType.options.length = undefined;\n      dataType._unsigned = undefined;\n      dataType._zerofill = undefined;\n    }\n  }\n\n  /**\n   * types:\n   * {\n   *   oids: [oid],\n   *   array_oids: [oid]\n   * }\n   *\n   * @see oid here https://github.com/lib/pq/blob/master/oid/types.go\n   */\n\n  BaseTypes.UUID.types.postgres = ['uuid'];\n  BaseTypes.CIDR.types.postgres = ['cidr'];\n  BaseTypes.INET.types.postgres = ['inet'];\n  BaseTypes.MACADDR.types.postgres = ['macaddr'];\n  BaseTypes.TSVECTOR.types.postgres = ['tsvector'];\n  BaseTypes.JSON.types.postgres = ['json'];\n  BaseTypes.JSONB.types.postgres = ['jsonb'];\n  BaseTypes.TIME.types.postgres = ['time'];\n\n  class DATEONLY extends BaseTypes.DATEONLY {\n    _stringify(value, options) {\n      if (value === Infinity) {\n        return 'Infinity';\n      }\n      if (value === -Infinity) {\n        return '-Infinity';\n      }\n      return super._stringify(value, options);\n    }\n    _sanitize(value, options) {\n      if ((!options || options && !options.raw) && value !== Infinity && value !== -Infinity) {\n        if (typeof value === 'string') {\n          const lower = value.toLowerCase();\n          if (lower === 'infinity') {\n            return Infinity;\n          }\n          if (lower === '-infinity') {\n            return -Infinity;\n          }\n        }\n        return super._sanitize(value);\n      }\n      return value;\n    }\n    static parse(value) {\n      if (value === 'infinity') {\n        return Infinity;\n      }\n      if (value === '-infinity') {\n        return -Infinity;\n      }\n      return value;\n    }\n  }\n\n  BaseTypes.DATEONLY.types.postgres = ['date'];\n\n  class DECIMAL extends BaseTypes.DECIMAL {\n    static parse(value) {\n      return value;\n    }\n  }\n\n  // numeric\n  BaseTypes.DECIMAL.types.postgres = ['numeric'];\n\n  class STRING extends BaseTypes.STRING {\n    toSql() {\n      if (this._binary) {\n        return 'BYTEA';\n      }\n      return super.toSql();\n    }\n  }\n\n  BaseTypes.STRING.types.postgres = ['varchar'];\n\n  class TEXT extends BaseTypes.TEXT {\n    toSql() {\n      if (this._length) {\n        warn('PostgreSQL does not support TEXT with options. Plain `TEXT` will be used instead.');\n        this._length = undefined;\n      }\n      return 'TEXT';\n    }\n  }\n\n  BaseTypes.TEXT.types.postgres = ['text'];\n\n  class CITEXT extends BaseTypes.CITEXT {\n    static parse(value) {\n      return value;\n    }\n  }\n\n  BaseTypes.CITEXT.types.postgres = ['citext'];\n\n  class CHAR extends BaseTypes.CHAR {\n    toSql() {\n      if (this._binary) {\n        return 'BYTEA';\n      }\n      return super.toSql();\n    }\n  }\n\n  BaseTypes.CHAR.types.postgres = ['char', 'bpchar'];\n\n  class BOOLEAN extends BaseTypes.BOOLEAN {\n    toSql() {\n      return 'BOOLEAN';\n    }\n    _sanitize(value) {\n      if (value !== null && value !== undefined) {\n        if (Buffer.isBuffer(value) && value.length === 1) {\n          // Bit fields are returned as buffers\n          value = value[0];\n        }\n        if (typeof value === 'string') {\n          // Only take action on valid boolean strings.\n          return ['true', 't'].includes(value) ? true : ['false', 'f'].includes(value) ? false : value;\n        }\n        if (typeof value === 'number') {\n          // Only take action on valid boolean integers.\n          return value === 1 ? true : value === 0 ? false : value;\n        }\n      }\n      return value;\n    }\n  }\n\n  BOOLEAN.parse = BOOLEAN.prototype._sanitize;\n\n  BaseTypes.BOOLEAN.types.postgres = ['bool'];\n\n  class DATE extends BaseTypes.DATE {\n    toSql() {\n      return 'TIMESTAMP WITH TIME ZONE';\n    }\n    validate(value) {\n      if (value !== Infinity && value !== -Infinity) {\n        return super.validate(value);\n      }\n      return true;\n    }\n    _stringify(value, options) {\n      if (value === Infinity) {\n        return 'Infinity';\n      }\n      if (value === -Infinity) {\n        return '-Infinity';\n      }\n      return super._stringify(value, options);\n    }\n    _sanitize(value, options) {\n      if ((!options || options && !options.raw) && !(value instanceof Date) && !!value && value !== Infinity && value !== -Infinity) {\n        if (typeof value === 'string') {\n          const lower = value.toLowerCase();\n          if (lower === 'infinity') {\n            return Infinity;\n          }\n          if (lower === '-infinity') {\n            return -Infinity;\n          }\n        }\n        return new Date(value);\n      }\n      return value;\n    }\n  }\n\n  BaseTypes.DATE.types.postgres = ['timestamptz'];\n\n  class TINYINT extends BaseTypes.TINYINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  // int2\n  BaseTypes.TINYINT.types.postgres = ['int2'];\n\n  class SMALLINT extends BaseTypes.SMALLINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  // int2\n  BaseTypes.SMALLINT.types.postgres = ['int2'];\n\n  class INTEGER extends BaseTypes.INTEGER {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  INTEGER.parse = function parse(value) {\n    return parseInt(value, 10);\n  };\n\n  // int4\n  BaseTypes.INTEGER.types.postgres = ['int4'];\n\n  class BIGINT extends BaseTypes.BIGINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  // int8\n  BaseTypes.BIGINT.types.postgres = ['int8'];\n\n  class REAL extends BaseTypes.REAL {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  // float4\n  BaseTypes.REAL.types.postgres = ['float4'];\n\n  class DOUBLE extends BaseTypes.DOUBLE {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  // float8\n  BaseTypes.DOUBLE.types.postgres = ['float8'];\n\n  class FLOAT extends BaseTypes.FLOAT {\n    constructor(length, decimals) {\n      super(length, decimals);\n      // POSTGRES does only support lengths as parameter.\n      // Values between 1-24 result in REAL\n      // Values between 25-53 result in DOUBLE PRECISION\n      // If decimals are provided remove these and print a warning\n      if (this._decimals) {\n        warn('PostgreSQL does not support FLOAT with decimals. Plain `FLOAT` will be used instead.');\n        this._length = undefined;\n        this.options.length = undefined;\n        this._decimals = undefined;\n      }\n      if (this._unsigned) {\n        warn('PostgreSQL does not support FLOAT unsigned. `UNSIGNED` was removed.');\n        this._unsigned = undefined;\n      }\n      if (this._zerofill) {\n        warn('PostgreSQL does not support FLOAT zerofill. `ZEROFILL` was removed.');\n        this._zerofill = undefined;\n      }\n    }\n  }\n  delete FLOAT.parse; // Float has no separate type in PG\n\n  class BLOB extends BaseTypes.BLOB {\n    toSql() {\n      if (this._length) {\n        warn('PostgreSQL does not support BLOB (BYTEA) with options. Plain `BYTEA` will be used instead.');\n        this._length = undefined;\n      }\n      return 'BYTEA';\n    }\n    _hexify(hex) {\n      // bytea hex format http://www.postgresql.org/docs/current/static/datatype-binary.html\n      return `E'\\\\\\\\x${hex}'`;\n    }\n  }\n\n  BaseTypes.BLOB.types.postgres = ['bytea'];\n\n  class GEOMETRY extends BaseTypes.GEOMETRY {\n    toSql() {\n      let result = this.key;\n      if (this.type) {\n        result += `(${this.type}`;\n        if (this.srid) {\n          result += `,${this.srid}`;\n        }\n        result += ')';\n      }\n      return result;\n    }\n    static parse(value) {\n      const b = Buffer.from(value, 'hex');\n      return wkx.Geometry.parse(b).toGeoJSON({ shortCrs: true });\n    }\n    _stringify(value, options) {\n      return `ST_GeomFromGeoJSON(${options.escape(JSON.stringify(value))})`;\n    }\n    _bindParam(value, options) {\n      return `ST_GeomFromGeoJSON(${options.bindParam(value)})`;\n    }\n  }\n\n  BaseTypes.GEOMETRY.types.postgres = ['geometry'];\n\n\n  class GEOGRAPHY extends BaseTypes.GEOGRAPHY {\n    toSql() {\n      let result = 'GEOGRAPHY';\n      if (this.type) {\n        result += `(${this.type}`;\n        if (this.srid) {\n          result += `,${this.srid}`;\n        }\n        result += ')';\n      }\n      return result;\n    }\n    static parse(value) {\n      const b = Buffer.from(value, 'hex');\n      return wkx.Geometry.parse(b).toGeoJSON({ shortCrs: true });\n    }\n    _stringify(value, options) {\n      return `ST_GeomFromGeoJSON(${options.escape(JSON.stringify(value))})`;\n    }\n    bindParam(value, options) {\n      return `ST_GeomFromGeoJSON(${options.bindParam(value)})`;\n    }\n  }\n\n  BaseTypes.GEOGRAPHY.types.postgres = ['geography'];\n\n  let hstore;\n\n  class HSTORE extends BaseTypes.HSTORE {\n    constructor() {\n      super();\n      if (!hstore) {\n        // All datatype files are loaded at import - make sure we don't load the hstore parser before a hstore is instantiated\n        hstore = require('./hstore');\n      }\n    }\n    _value(value) {\n      if (!hstore) {\n        // All datatype files are loaded at import - make sure we don't load the hstore parser before a hstore is instantiated\n        hstore = require('./hstore');\n      }\n      return hstore.stringify(value);\n    }\n    _stringify(value) {\n      return `'${this._value(value)}'`;\n    }\n    _bindParam(value, options) {\n      return options.bindParam(this._value(value));\n    }\n    static parse(value) {\n      if (!hstore) {\n        // All datatype files are loaded at import - make sure we don't load the hstore parser before a hstore is instantiated\n        hstore = require('./hstore');\n      }\n      return hstore.parse(value);\n    }\n  }\n\n  HSTORE.prototype.escape = false;\n\n  BaseTypes.HSTORE.types.postgres = ['hstore'];\n\n  class RANGE extends BaseTypes.RANGE {\n    _value(values, options) {\n      if (!Array.isArray(values)) {\n        return this.options.subtype.stringify(values, options);\n      }\n      const valueInclusivity = [true, false];\n      const valuesStringified = values.map((value, index) => {\n        if (_.isObject(value) && Object.prototype.hasOwnProperty.call(value, 'value')) {\n          if (Object.prototype.hasOwnProperty.call(value, 'inclusive')) {\n            valueInclusivity[index] = value.inclusive;\n          }\n          value = value.value;\n        }\n        if (value === null || value === -Infinity || value === Infinity) {\n          // Pass through \"unbounded\" bounds unchanged\n          return value;\n        }\n        if (this.options.subtype.stringify) {\n          return this.options.subtype.stringify(value, options);\n        }\n        return options.escape(value);\n      });\n      // Array.map does not preserve extra array properties\n      valuesStringified.inclusive = valueInclusivity;\n      return range.stringify(valuesStringified);\n    }\n    _stringify(values, options) {\n      const value = this._value(values, options);\n      if (!Array.isArray(values)) {\n        return `'${value}'::${this.toCastType()}`;\n      }\n      return `'${value}'`;\n    }\n    _bindParam(values, options) {\n      const value = this._value(values, options);\n      if (!Array.isArray(values)) {\n        return `${options.bindParam(value)}::${this.toCastType()}`;\n      }\n      return options.bindParam(value);\n    }\n    toSql() {\n      return BaseTypes.RANGE.types.postgres.subtypes[this._subtype.toLowerCase()];\n    }\n    toCastType() {\n      return BaseTypes.RANGE.types.postgres.castTypes[this._subtype.toLowerCase()];\n    }\n    static parse(value, options = { parser: val => val }) {\n      return range.parse(value, options.parser);\n    }\n  }\n  const range = require('./range');\n\n  RANGE.prototype.escape = false;\n\n  BaseTypes.RANGE.types.postgres = {\n    subtypes: {\n      integer: 'int4range',\n      decimal: 'numrange',\n      date: 'tstzrange',\n      dateonly: 'daterange',\n      bigint: 'int8range'\n    },\n    castTypes: {\n      integer: 'int4',\n      decimal: 'numeric',\n      date: 'timestamptz',\n      dateonly: 'date',\n      bigint: 'int8'\n    }\n  };\n\n  // TODO: Why are base types being manipulated??\n  BaseTypes.ARRAY.prototype.escape = false;\n  BaseTypes.ARRAY.prototype._value = function _value(values, options) {\n    return values.map(value => {\n      if (options && options.bindParam && this.type && this.type._value) {\n        return this.type._value(value, options);\n      }\n      if (this.type && this.type.stringify) {\n        value = this.type.stringify(value, options);\n\n        if (this.type.escape === false) {\n          return value;\n        }\n      }\n      return options.escape(value);\n    }, this);\n  };\n  BaseTypes.ARRAY.prototype._stringify = function _stringify(values, options) {\n    let str = `ARRAY[${this._value(values, options).join(',')}]`;\n\n    if (this.type) {\n      const Utils = require('../../utils');\n      let castKey = this.toSql();\n\n      if (this.type instanceof BaseTypes.ENUM) {\n        const table = options.field.Model.getTableName();\n        const useSchema = table.schema !== undefined;\n        const schemaWithDelimiter = useSchema ? `${Utils.addTicks(table.schema, '\"')}${table.delimiter}` : '';\n\n        castKey = `${Utils.addTicks(\n          Utils.generateEnumName(useSchema ? table.tableName : table, options.field.field),\n          '\"'\n        ) }[]`;\n\n        str += `::${schemaWithDelimiter}${castKey}`;\n      } else {\n        str += `::${castKey}`;\n      }\n    }\n\n    return str;\n  };\n  BaseTypes.ARRAY.prototype._bindParam = function _bindParam(values, options) {\n    return options.bindParam(this._value(values, options));\n  };\n\n  class ENUM extends BaseTypes.ENUM {\n    static parse(value) {\n      return value;\n    }\n  }\n\n  BaseTypes.ENUM.types.postgres = [null];\n\n  return {\n    DECIMAL,\n    BLOB,\n    STRING,\n    CHAR,\n    TEXT,\n    CITEXT,\n    TINYINT,\n    SMALLINT,\n    INTEGER,\n    BIGINT,\n    BOOLEAN,\n    DATE,\n    DATEONLY,\n    REAL,\n    'DOUBLE PRECISION': DOUBLE,\n    FLOAT,\n    GEOMETRY,\n    GEOGRAPHY,\n    HSTORE,\n    RANGE,\n    ENUM\n  };\n};\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/postgres/range.js":{"lineLengths":[13,28,37,23,14,3,50,42,3,31,1,44,15,16,3,29,20,3,30,21,3,26,1,26,20,16,27,46,19,19,24,90,64,33,38,29,37,37,36,10,35,3,34,28,67,50,63,34,5,5,50,50,105,1,30,31,21,16,26,14,3,66,26,17,40,12,43,81,6,5,16,1,22,33,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/dialects/postgres/range.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\n\nfunction stringifyRangeBound(bound) {\n  if (bound === null) {\n    return '' ;\n  }\n  if (bound === Infinity || bound === -Infinity) {\n    return bound.toString().toLowerCase();\n  }\n  return JSON.stringify(bound);\n}\n\nfunction parseRangeBound(bound, parseType) {\n  if (!bound) {\n    return null;\n  }\n  if (bound === 'infinity') {\n    return Infinity;\n  }\n  if (bound === '-infinity') {\n    return -Infinity;\n  }\n  return parseType(bound);\n\n}\n\nfunction stringify(data) {\n  if (data === null) return null;\n\n  if (!Array.isArray(data)) throw new Error('range must be an array');\n  if (!data.length) return 'empty';\n  if (data.length !== 2) throw new Error('range array length must be 0 (empty) or 2 (lower and upper bounds)');\n\n  if (Object.prototype.hasOwnProperty.call(data, 'inclusive')) {\n    if (data.inclusive === false) data.inclusive = [false, false];\n    else if (!data.inclusive) data.inclusive = [true, false];\n    else if (data.inclusive === true) data.inclusive = [true, true];\n  } else {\n    data.inclusive = [true, false];\n  }\n\n  _.each(data, (value, index) => {\n    if (_.isObject(value)) {\n      if (Object.prototype.hasOwnProperty.call(value, 'inclusive')) data.inclusive[index] = !!value.inclusive;\n      if (Object.prototype.hasOwnProperty.call(value, 'value')) data[index] = value.value;\n    }\n  });\n\n  const lowerBound = stringifyRangeBound(data[0]);\n  const upperBound = stringifyRangeBound(data[1]);\n\n  return `${(data.inclusive[0] ? '[' : '(') + lowerBound},${upperBound}${data.inclusive[1] ? ']' : ')'}`;\n}\nexports.stringify = stringify;\n\nfunction parse(value, parser) {\n  if (value === null) return null;\n  if (value === 'empty') {\n    return [];\n  }\n\n  let result = value\n    .substring(1, value.length - 1)\n    .split(',', 2);\n\n  if (result.length !== 2) return value;\n\n  result = result.map((item, index) => {\n    return {\n      value: parseRangeBound(item, parser),\n      inclusive: index === 0 ? value[0] === '[' : value[value.length - 1] === ']'\n    };\n  });\n\n  return result;\n}\nexports.parse = parse;\n"],"mappings":";AAEA,MAAM,IAAI,QAAQ;AAElB,6BAA6B,OAAO;AAClC,MAAI,UAAU,MAAM;AAClB,WAAO;AAAA;AAET,MAAI,UAAU,YAAY,UAAU,WAAW;AAC7C,WAAO,MAAM,WAAW;AAAA;AAE1B,SAAO,KAAK,UAAU;AAAA;AAGxB,yBAAyB,OAAO,WAAW;AACzC,MAAI,CAAC,OAAO;AACV,WAAO;AAAA;AAET,MAAI,UAAU,YAAY;AACxB,WAAO;AAAA;AAET,MAAI,UAAU,aAAa;AACzB,WAAO;AAAA;AAET,SAAO,UAAU;AAAA;AAInB,mBAAmB,MAAM;AACvB,MAAI,SAAS;AAAM,WAAO;AAE1B,MAAI,CAAC,MAAM,QAAQ;AAAO,UAAM,IAAI,MAAM;AAC1C,MAAI,CAAC,KAAK;AAAQ,WAAO;AACzB,MAAI,KAAK,WAAW;AAAG,UAAM,IAAI,MAAM;AAEvC,MAAI,OAAO,UAAU,eAAe,KAAK,MAAM,cAAc;AAC3D,QAAI,KAAK,cAAc;AAAO,WAAK,YAAY,CAAC,OAAO;AAAA,aAC9C,CAAC,KAAK;AAAW,WAAK,YAAY,CAAC,MAAM;AAAA,aACzC,KAAK,cAAc;AAAM,WAAK,YAAY,CAAC,MAAM;AAAA,SACrD;AACL,SAAK,YAAY,CAAC,MAAM;AAAA;AAG1B,IAAE,KAAK,MAAM,CAAC,OAAO,UAAU;AAC7B,QAAI,EAAE,SAAS,QAAQ;AACrB,UAAI,OAAO,UAAU,eAAe,KAAK,OAAO;AAAc,aAAK,UAAU,SAAS,CAAC,CAAC,MAAM;AAC9F,UAAI,OAAO,UAAU,eAAe,KAAK,OAAO;AAAU,aAAK,SAAS,MAAM;AAAA;AAAA;AAIlF,QAAM,aAAa,oBAAoB,KAAK;AAC5C,QAAM,aAAa,oBAAoB,KAAK;AAE5C,SAAO,GAAI,MAAK,UAAU,KAAK,MAAM,OAAO,cAAc,aAAa,KAAK,UAAU,KAAK,MAAM;AAAA;AAEnG,QAAQ,YAAY;AAEpB,eAAe,OAAO,QAAQ;AAC5B,MAAI,UAAU;AAAM,WAAO;AAC3B,MAAI,UAAU,SAAS;AACrB,WAAO;AAAA;AAGT,MAAI,SAAS,MACV,UAAU,GAAG,MAAM,SAAS,GAC5B,MAAM,KAAK;AAEd,MAAI,OAAO,WAAW;AAAG,WAAO;AAEhC,WAAS,OAAO,IAAI,CAAC,MAAM,UAAU;AACnC,WAAO;AAAA,MACL,OAAO,gBAAgB,MAAM;AAAA,MAC7B,WAAW,UAAU,IAAI,MAAM,OAAO,MAAM,MAAM,MAAM,SAAS,OAAO;AAAA;AAAA;AAI5E,SAAO;AAAA;AAET,QAAQ,QAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/mysql/data-types.js":{"lineLengths":[13,27,28,44,33,33,104,44,48,42,40,43,45,46,43,46,42,40,44,43,64,49,37,37,42,44,48,40,43,13,37,27,34,7,27,34,7,24,5,3,37,13,69,5,31,35,50,7,25,54,7,48,5,34,29,27,21,7,47,62,14,57,7,19,5,3,45,25,28,5,3,37,13,31,5,3,70,45,29,24,33,32,15,7,57,33,15,7,94,5,25,29,41,20,7,29,69,5,13,26,5,3,37,20,85,5,3,41,32,104,5,3,10,9,9,13,9,13,12,18,4,2,38,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/dialects/mysql/data-types.js"],"sourcesContent":["'use strict';\n\nconst wkx = require('wkx');\nconst _ = require('lodash');\nconst momentTz = require('moment-timezone');\nconst moment = require('moment');\n\nmodule.exports = BaseTypes => {\n  BaseTypes.ABSTRACT.prototype.dialectTypes = 'https://dev.mysql.com/doc/refman/5.7/en/data-types.html';\n\n  /**\n   * types: [buffer_type, ...]\n   *\n   * @see buffer_type here https://dev.mysql.com/doc/refman/5.7/en/c-api-prepared-statement-type-codes.html\n   * @see hex here https://github.com/sidorares/node-mysql2/blob/master/lib/constants/types.js\n   */\n\n  BaseTypes.DATE.types.mysql = ['DATETIME'];\n  BaseTypes.STRING.types.mysql = ['VAR_STRING'];\n  BaseTypes.CHAR.types.mysql = ['STRING'];\n  BaseTypes.TEXT.types.mysql = ['BLOB'];\n  BaseTypes.TINYINT.types.mysql = ['TINY'];\n  BaseTypes.SMALLINT.types.mysql = ['SHORT'];\n  BaseTypes.MEDIUMINT.types.mysql = ['INT24'];\n  BaseTypes.INTEGER.types.mysql = ['LONG'];\n  BaseTypes.BIGINT.types.mysql = ['LONGLONG'];\n  BaseTypes.FLOAT.types.mysql = ['FLOAT'];\n  BaseTypes.TIME.types.mysql = ['TIME'];\n  BaseTypes.DATEONLY.types.mysql = ['DATE'];\n  BaseTypes.BOOLEAN.types.mysql = ['TINY'];\n  BaseTypes.BLOB.types.mysql = ['TINYBLOB', 'BLOB', 'LONGBLOB'];\n  BaseTypes.DECIMAL.types.mysql = ['NEWDECIMAL'];\n  BaseTypes.UUID.types.mysql = false;\n  BaseTypes.ENUM.types.mysql = false;\n  BaseTypes.REAL.types.mysql = ['DOUBLE'];\n  BaseTypes.DOUBLE.types.mysql = ['DOUBLE'];\n  BaseTypes.GEOMETRY.types.mysql = ['GEOMETRY'];\n  BaseTypes.JSON.types.mysql = ['JSON'];\n\n  class DECIMAL extends BaseTypes.DECIMAL {\n    toSql() {\n      let definition = super.toSql();\n      if (this._unsigned) {\n        definition += ' UNSIGNED';\n      }\n      if (this._zerofill) {\n        definition += ' ZEROFILL';\n      }\n      return definition;\n    }\n  }\n\n  class DATE extends BaseTypes.DATE {\n    toSql() {\n      return this._length ? `DATETIME(${this._length})` : 'DATETIME';\n    }\n    _stringify(date, options) {\n      if (!moment.isMoment(date)) {\n        date = this._applyTimezone(date, options);\n      }\n      // Fractional DATETIMEs only supported on MySQL 5.6.4+\n      if (this._length) {\n        return date.format('YYYY-MM-DD HH:mm:ss.SSS');\n      }\n      return date.format('YYYY-MM-DD HH:mm:ss');\n    }\n    static parse(value, options) {\n      value = value.string();\n      if (value === null) {\n        return value;\n      }\n      if (momentTz.tz.zone(options.timezone)) {\n        value = momentTz.tz(value, options.timezone).toDate();\n      }\n      else {\n        value = new Date(`${value} ${options.timezone}`);\n      }\n      return value;\n    }\n  }\n\n  class DATEONLY extends BaseTypes.DATEONLY {\n    static parse(value) {\n      return value.string();\n    }\n  }\n  class UUID extends BaseTypes.UUID {\n    toSql() {\n      return 'CHAR(36) BINARY';\n    }\n  }\n\n  const SUPPORTED_GEOMETRY_TYPES = ['POINT', 'LINESTRING', 'POLYGON'];\n\n  class GEOMETRY extends BaseTypes.GEOMETRY {\n    constructor(type, srid) {\n      super(type, srid);\n      if (_.isEmpty(this.type)) {\n        this.sqlType = this.key;\n        return;\n      }\n      if (SUPPORTED_GEOMETRY_TYPES.includes(this.type)) {\n        this.sqlType = this.type;\n        return;\n      }\n      throw new Error(`Supported geometry types are: ${SUPPORTED_GEOMETRY_TYPES.join(', ')}`);\n    }\n    static parse(value) {\n      value = value.buffer();\n      // Empty buffer, MySQL doesn't support POINT EMPTY\n      // check, https://dev.mysql.com/worklog/task/?id=2381\n      if (!value || value.length === 0) {\n        return null;\n      }\n      // For some reason, discard the first 4 bytes\n      value = value.slice(4);\n      return wkx.Geometry.parse(value).toGeoJSON({ shortCrs: true });\n    }\n    toSql() {\n      return this.sqlType;\n    }\n  }\n\n  class ENUM extends BaseTypes.ENUM {\n    toSql(options) {\n      return `ENUM(${this.values.map(value => options.escape(value)).join(', ')})`;\n    }\n  }\n\n  class JSONTYPE extends BaseTypes.JSON {\n    _stringify(value, options) {\n      return options.operation === 'where' && typeof value === 'string' ? value : JSON.stringify(value);\n    }\n  }\n\n  return {\n    ENUM,\n    DATE,\n    DATEONLY,\n    UUID,\n    GEOMETRY,\n    DECIMAL,\n    JSON: JSONTYPE\n  };\n};\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/mariadb/data-types.js":{"lineLengths":[13,27,28,44,33,33,105,46,50,44,42,45,47,48,45,48,44,42,46,45,66,51,39,39,44,46,50,42,43,13,37,27,34,7,27,34,7,24,5,3,37,13,69,5,31,35,50,7,52,5,34,29,27,21,7,47,62,14,57,7,19,5,3,45,25,28,5,3,37,13,31,5,3,45,29,24,33,32,14,33,7,5,25,29,41,20,7,29,69,5,13,26,5,3,37,20,85,5,3,41,32,104,5,3,10,9,9,13,9,13,12,18,4,2,38,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/dialects/mariadb/data-types.js"],"sourcesContent":["'use strict';\n\nconst wkx = require('wkx');\nconst _ = require('lodash');\nconst momentTz = require('moment-timezone');\nconst moment = require('moment');\n\nmodule.exports = BaseTypes => {\n  BaseTypes.ABSTRACT.prototype.dialectTypes = 'https://mariadb.com/kb/en/library/resultset/#field-types';\n\n  /**\n   * types: [buffer_type, ...]\n   *\n   * @see documentation : https://mariadb.com/kb/en/library/resultset/#field-types\n   * @see connector implementation : https://github.com/MariaDB/mariadb-connector-nodejs/blob/master/lib/const/field-type.js\n   */\n\n  BaseTypes.DATE.types.mariadb = ['DATETIME'];\n  BaseTypes.STRING.types.mariadb = ['VAR_STRING'];\n  BaseTypes.CHAR.types.mariadb = ['STRING'];\n  BaseTypes.TEXT.types.mariadb = ['BLOB'];\n  BaseTypes.TINYINT.types.mariadb = ['TINY'];\n  BaseTypes.SMALLINT.types.mariadb = ['SHORT'];\n  BaseTypes.MEDIUMINT.types.mariadb = ['INT24'];\n  BaseTypes.INTEGER.types.mariadb = ['LONG'];\n  BaseTypes.BIGINT.types.mariadb = ['LONGLONG'];\n  BaseTypes.FLOAT.types.mariadb = ['FLOAT'];\n  BaseTypes.TIME.types.mariadb = ['TIME'];\n  BaseTypes.DATEONLY.types.mariadb = ['DATE'];\n  BaseTypes.BOOLEAN.types.mariadb = ['TINY'];\n  BaseTypes.BLOB.types.mariadb = ['TINYBLOB', 'BLOB', 'LONGBLOB'];\n  BaseTypes.DECIMAL.types.mariadb = ['NEWDECIMAL'];\n  BaseTypes.UUID.types.mariadb = false;\n  BaseTypes.ENUM.types.mariadb = false;\n  BaseTypes.REAL.types.mariadb = ['DOUBLE'];\n  BaseTypes.DOUBLE.types.mariadb = ['DOUBLE'];\n  BaseTypes.GEOMETRY.types.mariadb = ['GEOMETRY'];\n  BaseTypes.JSON.types.mariadb = ['JSON'];\n\n  class DECIMAL extends BaseTypes.DECIMAL {\n    toSql() {\n      let definition = super.toSql();\n      if (this._unsigned) {\n        definition += ' UNSIGNED';\n      }\n      if (this._zerofill) {\n        definition += ' ZEROFILL';\n      }\n      return definition;\n    }\n  }\n\n  class DATE extends BaseTypes.DATE {\n    toSql() {\n      return this._length ? `DATETIME(${this._length})` : 'DATETIME';\n    }\n    _stringify(date, options) {\n      if (!moment.isMoment(date)) {\n        date = this._applyTimezone(date, options);\n      }\n\n      return date.format('YYYY-MM-DD HH:mm:ss.SSS');\n    }\n    static parse(value, options) {\n      value = value.string();\n      if (value === null) {\n        return value;\n      }\n      if (momentTz.tz.zone(options.timezone)) {\n        value = momentTz.tz(value, options.timezone).toDate();\n      }\n      else {\n        value = new Date(`${value} ${options.timezone}`);\n      }\n      return value;\n    }\n  }\n\n  class DATEONLY extends BaseTypes.DATEONLY {\n    static parse(value) {\n      return value.string();\n    }\n  }\n\n  class UUID extends BaseTypes.UUID {\n    toSql() {\n      return 'CHAR(36) BINARY';\n    }\n  }\n\n  class GEOMETRY extends BaseTypes.GEOMETRY {\n    constructor(type, srid) {\n      super(type, srid);\n      if (_.isEmpty(this.type)) {\n        this.sqlType = this.key;\n      }\n      else {\n        this.sqlType = this.type;\n      }\n    }\n    static parse(value) {\n      value = value.buffer();\n      // Empty buffer, MySQL doesn't support POINT EMPTY\n      // check, https://dev.mysql.com/worklog/task/?id=2381\n      if (!value || value.length === 0) {\n        return null;\n      }\n      // For some reason, discard the first 4 bytes\n      value = value.slice(4);\n      return wkx.Geometry.parse(value).toGeoJSON({ shortCrs: true });\n    }\n    toSql() {\n      return this.sqlType;\n    }\n  }\n\n  class ENUM extends BaseTypes.ENUM {\n    toSql(options) {\n      return `ENUM(${this.values.map(value => options.escape(value)).join(', ')})`;\n    }\n  }\n\n  class JSONTYPE extends BaseTypes.JSON {\n    _stringify(value, options) {\n      return options.operation === 'where' && typeof value === 'string' ? value\n        : JSON.stringify(value);\n    }\n  }\n\n  return {\n    ENUM,\n    DATE,\n    DATEONLY,\n    UUID,\n    GEOMETRY,\n    DECIMAL,\n    JSON: JSONTYPE\n  };\n};\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/sqlite/data-types.js":{"lineLengths":[13,33,93,54,51,129,34,34,5,3,45,64,56,41,47,49,51,47,45,43,41,45,47,65,47,41,38,41,55,42,50,41,24,30,5,3,37,33,32,49,7,28,5,3,45,24,18,5,3,41,13,25,49,7,31,5,3,37,13,25,94,30,7,20,5,3,41,13,35,5,3,37,13,25,46,7,27,5,3,41,13,28,27,30,7,27,30,7,25,37,49,41,9,22,7,20,5,3,43,25,20,44,5,3,45,25,20,44,5,3,47,25,20,44,5,3,43,25,20,44,5,3,41,25,20,44,5,3,39,3,41,3,37,3,33,36,19,5,26,17,5,31,22,5,32,23,5,3,49,35,3,91,49,3,37,13,20,5,3,10,9,13,11,9,11,10,9,31,12,13,14,12,11,9,9,19,10,4,2,38,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/dialects/sqlite/data-types.js"],"sourcesContent":["'use strict';\n\nmodule.exports = BaseTypes => {\n  const warn = BaseTypes.ABSTRACT.warn.bind(undefined, 'https://www.sqlite.org/datatype3.html');\n\n  /**\n   * Removes unsupported SQLite options, i.e., UNSIGNED and ZEROFILL, for the integer data types.\n   *\n   * @param {object} dataType The base integer data type.\n   * @private\n   */\n  function removeUnsupportedIntegerOptions(dataType) {\n    if (dataType._zerofill || dataType._unsigned) {\n      warn(`SQLite does not support '${dataType.key}' with UNSIGNED or ZEROFILL. Plain '${dataType.key}' will be used instead.`);\n      dataType._unsigned = undefined;\n      dataType._zerofill = undefined;\n    }\n  }\n\n  /**\n   * @see https://sqlite.org/datatype3.html\n   */\n\n  BaseTypes.DATE.types.sqlite = ['DATETIME'];\n  BaseTypes.STRING.types.sqlite = ['VARCHAR', 'VARCHAR BINARY'];\n  BaseTypes.CHAR.types.sqlite = ['CHAR', 'CHAR BINARY'];\n  BaseTypes.TEXT.types.sqlite = ['TEXT'];\n  BaseTypes.TINYINT.types.sqlite = ['TINYINT'];\n  BaseTypes.SMALLINT.types.sqlite = ['SMALLINT'];\n  BaseTypes.MEDIUMINT.types.sqlite = ['MEDIUMINT'];\n  BaseTypes.INTEGER.types.sqlite = ['INTEGER'];\n  BaseTypes.BIGINT.types.sqlite = ['BIGINT'];\n  BaseTypes.FLOAT.types.sqlite = ['FLOAT'];\n  BaseTypes.TIME.types.sqlite = ['TIME'];\n  BaseTypes.DATEONLY.types.sqlite = ['DATE'];\n  BaseTypes.BOOLEAN.types.sqlite = ['TINYINT'];\n  BaseTypes.BLOB.types.sqlite = ['TINYBLOB', 'BLOB', 'LONGBLOB'];\n  BaseTypes.DECIMAL.types.sqlite = ['DECIMAL'];\n  BaseTypes.UUID.types.sqlite = ['UUID'];\n  BaseTypes.ENUM.types.sqlite = false;\n  BaseTypes.REAL.types.sqlite = ['REAL'];\n  BaseTypes.DOUBLE.types.sqlite = ['DOUBLE PRECISION'];\n  BaseTypes.GEOMETRY.types.sqlite = false;\n  BaseTypes.JSON.types.sqlite = ['JSON', 'JSONB'];\n\n  class JSONTYPE extends BaseTypes.JSON {\n    static parse(data) {\n      return JSON.parse(data);\n    }\n  }\n\n  class DATE extends BaseTypes.DATE {\n    static parse(date, options) {\n      if (!date.includes('+')) {\n        // For backwards compat. Dates inserted by sequelize < 2.0dev12 will not have a timestamp set\n        return new Date(date + options.timezone);\n      }\n      return new Date(date); // We already have a timezone stored in the string\n    }\n  }\n\n  class DATEONLY extends BaseTypes.DATEONLY {\n    static parse(date) {\n      return date;\n    }\n  }\n\n  class STRING extends BaseTypes.STRING {\n    toSql() {\n      if (this._binary) {\n        return `VARCHAR BINARY(${this._length})`;\n      }\n      return super.toSql(this);\n    }\n  }\n\n  class TEXT extends BaseTypes.TEXT {\n    toSql() {\n      if (this._length) {\n        warn('SQLite does not support TEXT with options. Plain `TEXT` will be used instead.');\n        this._length = undefined;\n      }\n      return 'TEXT';\n    }\n  }\n\n  class CITEXT extends BaseTypes.CITEXT {\n    toSql() {\n      return 'TEXT COLLATE NOCASE';\n    }\n  }\n\n  class CHAR extends BaseTypes.CHAR {\n    toSql() {\n      if (this._binary) {\n        return `CHAR BINARY(${this._length})`;\n      }\n      return super.toSql();\n    }\n  }\n\n  class NUMBER extends BaseTypes.NUMBER {\n    toSql() {\n      let result = this.key;\n      if (this._unsigned) {\n        result += ' UNSIGNED';\n      }\n      if (this._zerofill) {\n        result += ' ZEROFILL';\n      }\n      if (this._length) {\n        result += `(${this._length}`;\n        if (typeof this._decimals === 'number') {\n          result += `,${this._decimals}`;\n        }\n        result += ')';\n      }\n      return result;\n    }\n  }\n\n  class TINYINT extends BaseTypes.TINYINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n\n  class SMALLINT extends BaseTypes.SMALLINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n\n  class MEDIUMINT extends BaseTypes.MEDIUMINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n\n  class INTEGER extends BaseTypes.INTEGER {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n\n  class BIGINT extends BaseTypes.BIGINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n\n  class FLOAT extends BaseTypes.FLOAT {\n  }\n\n  class DOUBLE extends BaseTypes.DOUBLE {\n  }\n\n  class REAL extends BaseTypes.REAL { }\n\n  function parseFloating(value) {\n    if (typeof value !== 'string') {\n      return value;\n    }\n    if (value === 'NaN') {\n      return NaN;\n    }\n    if (value === 'Infinity') {\n      return Infinity;\n    }\n    if (value === '-Infinity') {\n      return -Infinity;\n    }\n  }\n  for (const floating of [FLOAT, DOUBLE, REAL]) {\n    floating.parse = parseFloating;\n  }\n\n\n  for (const num of [FLOAT, DOUBLE, REAL, TINYINT, SMALLINT, MEDIUMINT, INTEGER, BIGINT]) {\n    num.prototype.toSql = NUMBER.prototype.toSql;\n  }\n\n  class ENUM extends BaseTypes.ENUM {\n    toSql() {\n      return 'TEXT';\n    }\n  }\n\n  return {\n    DATE,\n    DATEONLY,\n    STRING,\n    CHAR,\n    NUMBER,\n    FLOAT,\n    REAL,\n    'DOUBLE PRECISION': DOUBLE,\n    TINYINT,\n    SMALLINT,\n    MEDIUMINT,\n    INTEGER,\n    BIGINT,\n    TEXT,\n    ENUM,\n    JSON: JSONTYPE,\n    CITEXT\n  };\n};\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/mssql/data-types.js":{"lineLengths":[13,33,33,125,54,98,115,32,39,34,34,5,3,36,44,37,37,39,40,42,39,39,38,36,40,40,37,40,37,37,37,39,41,37,13,25,52,120,34,9,109,7,30,5,18,24,5,3,41,13,26,43,7,39,5,32,25,48,7,35,5,32,74,5,3,34,37,13,25,52,119,33,9,108,7,29,5,3,43,13,19,5,3,37,13,24,5,3,35,13,25,5,3,37,13,30,5,3,45,25,48,5,3,43,25,20,44,5,3,43,25,20,44,5,3,45,25,20,44,5,3,41,25,20,44,5,3,37,35,30,84,93,30,37,32,32,7,5,3,39,35,30,27,96,30,37,7,27,79,32,7,27,79,32,7,5,3,37,13,28,5,3,10,9,12,9,11,9,9,13,8,12,13,12,11,9,10,8,4,2,38,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/dialects/mssql/data-types.js"],"sourcesContent":["'use strict';\n\nconst moment = require('moment');\n\nmodule.exports = BaseTypes => {\n  const warn = BaseTypes.ABSTRACT.warn.bind(undefined, 'https://msdn.microsoft.com/en-us/library/ms187752%28v=sql.110%29.aspx');\n\n  /**\n   * Removes unsupported MSSQL options, i.e., LENGTH, UNSIGNED and ZEROFILL, for the integer data types.\n   *\n   * @param {object} dataType The base integer data type.\n   * @private\n   */\n  function removeUnsupportedIntegerOptions(dataType) {\n    if (dataType._length || dataType.options.length || dataType._unsigned || dataType._zerofill) {\n      warn(`MSSQL does not support '${dataType.key}' with options. Plain '${dataType.key}' will be used instead.`);\n      dataType._length = undefined;\n      dataType.options.length = undefined;\n      dataType._unsigned = undefined;\n      dataType._zerofill = undefined;\n    }\n  }\n\n  /**\n   * types: [hex, ...]\n   *\n   * @see hex here https://github.com/tediousjs/tedious/blob/master/src/data-type.ts\n   */\n\n  BaseTypes.DATE.types.mssql = [43];\n  BaseTypes.STRING.types.mssql = [231, 173];\n  BaseTypes.CHAR.types.mssql = [175];\n  BaseTypes.TEXT.types.mssql = false;\n  // https://msdn.microsoft.com/en-us/library/ms187745(v=sql.110).aspx\n  BaseTypes.TINYINT.types.mssql = [30];\n  BaseTypes.SMALLINT.types.mssql = [34];\n  BaseTypes.MEDIUMINT.types.mssql = false;\n  BaseTypes.INTEGER.types.mssql = [38];\n  BaseTypes.BIGINT.types.mssql = false;\n  BaseTypes.FLOAT.types.mssql = [109];\n  BaseTypes.TIME.types.mssql = [41];\n  BaseTypes.DATEONLY.types.mssql = [40];\n  BaseTypes.BOOLEAN.types.mssql = [104];\n  BaseTypes.BLOB.types.mssql = [165];\n  BaseTypes.DECIMAL.types.mssql = [106];\n  BaseTypes.UUID.types.mssql = false;\n  BaseTypes.ENUM.types.mssql = false;\n  BaseTypes.REAL.types.mssql = [109];\n  BaseTypes.DOUBLE.types.mssql = [109];\n  // BaseTypes.GEOMETRY.types.mssql = [240]; // not yet supported\n  BaseTypes.GEOMETRY.types.mssql = false;\n\n  class BLOB extends BaseTypes.BLOB {\n    toSql() {\n      if (this._length) {\n        if (this._length.toLowerCase() === 'tiny') { // tiny = 2^8\n          warn('MSSQL does not support BLOB with the `length` = `tiny` option. `VARBINARY(256)` will be used instead.');\n          return 'VARBINARY(256)';\n        }\n        warn('MSSQL does not support BLOB with the `length` option. `VARBINARY(MAX)` will be used instead.');\n      }\n      return 'VARBINARY(MAX)';\n    }\n    _hexify(hex) {\n      return `0x${hex}`;\n    }\n  }\n\n\n  class STRING extends BaseTypes.STRING {\n    toSql() {\n      if (!this._binary) {\n        return `NVARCHAR(${this._length})`;\n      }\n      return `BINARY(${this._length})`;\n    }\n    _stringify(value, options) {\n      if (this._binary) {\n        return BLOB.prototype._stringify(value);\n      }\n      return options.escape(value);\n    }\n    _bindParam(value, options) {\n      return options.bindParam(this._binary ? Buffer.from(value) : value);\n    }\n  }\n\n  STRING.prototype.escape = false;\n\n  class TEXT extends BaseTypes.TEXT {\n    toSql() {\n      // TEXT is deprecated in mssql and it would normally be saved as a non-unicode string.\n      // Using unicode is just future proof\n      if (this._length) {\n        if (this._length.toLowerCase() === 'tiny') { // tiny = 2^8\n          warn('MSSQL does not support TEXT with the `length` = `tiny` option. `NVARCHAR(256)` will be used instead.');\n          return 'NVARCHAR(256)';\n        }\n        warn('MSSQL does not support TEXT with the `length` option. `NVARCHAR(MAX)` will be used instead.');\n      }\n      return 'NVARCHAR(MAX)';\n    }\n  }\n\n  class BOOLEAN extends BaseTypes.BOOLEAN {\n    toSql() {\n      return 'BIT';\n    }\n  }\n\n  class UUID extends BaseTypes.UUID {\n    toSql() {\n      return 'CHAR(36)';\n    }\n  }\n\n  class NOW extends BaseTypes.NOW {\n    toSql() {\n      return 'GETDATE()';\n    }\n  }\n\n  class DATE extends BaseTypes.DATE {\n    toSql() {\n      return 'DATETIMEOFFSET';\n    }\n  }\n\n  class DATEONLY extends BaseTypes.DATEONLY {\n    static parse(value) {\n      return moment(value).format('YYYY-MM-DD');\n    }\n  }\n\n  class INTEGER extends BaseTypes.INTEGER {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  class TINYINT extends BaseTypes.TINYINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  class SMALLINT extends BaseTypes.SMALLINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  class BIGINT extends BaseTypes.BIGINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  class REAL extends BaseTypes.REAL {\n    constructor(length, decimals) {\n      super(length, decimals);\n      // MSSQL does not support any options for real\n      if (this._length || this.options.length || this._unsigned || this._zerofill) {\n        warn('MSSQL does not support REAL with options. Plain `REAL` will be used instead.');\n        this._length = undefined;\n        this.options.length = undefined;\n        this._unsigned = undefined;\n        this._zerofill = undefined;\n      }\n    }\n  }\n  class FLOAT extends BaseTypes.FLOAT {\n    constructor(length, decimals) {\n      super(length, decimals);\n      // MSSQL does only support lengths as option.\n      // Values between 1-24 result in 7 digits precision (4 bytes storage size)\n      // Values between 25-53 result in 15 digits precision (8 bytes storage size)\n      // If decimals are provided remove these and print a warning\n      if (this._decimals) {\n        warn('MSSQL does not support Float with decimals. Plain `FLOAT` will be used instead.');\n        this._length = undefined;\n        this.options.length = undefined;\n      }\n      if (this._unsigned) {\n        warn('MSSQL does not support Float unsigned. `UNSIGNED` was removed.');\n        this._unsigned = undefined;\n      }\n      if (this._zerofill) {\n        warn('MSSQL does not support Float zerofill. `ZEROFILL` was removed.');\n        this._zerofill = undefined;\n      }\n    }\n  }\n  class ENUM extends BaseTypes.ENUM {\n    toSql() {\n      return 'VARCHAR(255)';\n    }\n  }\n\n  return {\n    BLOB,\n    BOOLEAN,\n    ENUM,\n    STRING,\n    UUID,\n    DATE,\n    DATEONLY,\n    NOW,\n    TINYINT,\n    SMALLINT,\n    INTEGER,\n    BIGINT,\n    REAL,\n    FLOAT,\n    TEXT\n  };\n};\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/db2/data-types.js":{"lineLengths":[13,44,33,33,159,54,98,113,32,39,34,34,5,3,43,43,38,49,45,46,46,44,42,58,38,42,71,38,44,54,41,38,42,39,37,13,25,52,29,9,54,29,9,52,28,9,39,7,20,5,18,62,5,23,35,65,7,33,35,14,46,7,40,31,5,18,25,5,3,41,13,26,34,44,9,39,7,31,52,7,32,55,7,37,5,32,25,61,7,35,5,32,74,5,3,34,37,13,18,25,45,22,22,18,24,23,18,22,24,18,9,34,31,9,22,29,9,14,29,7,33,38,14,41,7,79,17,5,3,43,13,23,5,22,47,59,27,9,40,78,72,47,67,9,7,19,5,3,46,37,13,37,5,3,35,13,28,5,3,37,13,29,25,7,29,25,7,67,5,31,35,50,7,29,23,57,22,9,57,7,48,5,25,38,31,7,27,21,7,44,19,5,3,45,25,50,5,3,43,25,20,44,5,3,43,25,20,44,5,3,45,25,20,44,5,3,41,25,20,44,5,3,37,35,30,84,91,30,37,32,32,7,5,3,39,35,30,27,94,30,37,7,27,77,32,7,27,77,32,7,5,3,37,13,28,5,3,41,35,30,84,93,30,37,32,32,7,5,13,22,5,3,47,10,9,12,9,11,9,9,13,8,12,13,12,11,31,11,9,10,8,4,2,38,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/dialects/db2/data-types.js"],"sourcesContent":["'use strict';\n\nconst momentTz = require('moment-timezone');\nconst moment = require('moment');\n\nmodule.exports = BaseTypes => {\n  const warn = BaseTypes.ABSTRACT.warn.bind(undefined,\n    'https://www.ibm.com/support/knowledgecenter/SSEPGG_11.1.0/' +\n    'com.ibm.db2.luw.sql.ref.doc/doc/r0008478.html');\n\n  /**\n   * Removes unsupported Db2 options, i.e., LENGTH, UNSIGNED and ZEROFILL,\n   * for the integer data types.\n   *\n   * @param {object} dataType The base integer data type.\n   * @private\n   */\n  function removeUnsupportedIntegerOptions(dataType) {\n    if (dataType._length || dataType.options.length || dataType._unsigned || dataType._zerofill) {\n      warn(`Db2 does not support '${dataType.key}' with options. Plain '${dataType.key}' will be used instead.`);\n      dataType._length = undefined;\n      dataType.options.length = undefined;\n      dataType._unsigned = undefined;\n      dataType._zerofill = undefined;\n    }\n  }\n\n  /**\n   * types: [hex, ...]\n   *\n   * @see Data types and table columns: https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.1.0/com.ibm.db2.luw.admin.dbobj.doc/doc/c0055357.html \n   */\n\n  BaseTypes.DATE.types.db2 = ['TIMESTAMP'];\n  BaseTypes.STRING.types.db2 = ['VARCHAR'];\n  BaseTypes.CHAR.types.db2 = ['CHAR'];\n  BaseTypes.TEXT.types.db2 = ['VARCHAR', 'CLOB'];\n  BaseTypes.TINYINT.types.db2 = ['SMALLINT'];\n  BaseTypes.SMALLINT.types.db2 = ['SMALLINT'];\n  BaseTypes.MEDIUMINT.types.db2 = ['INTEGER'];\n  BaseTypes.INTEGER.types.db2 = ['INTEGER'];\n  BaseTypes.BIGINT.types.db2 = ['BIGINT'];\n  BaseTypes.FLOAT.types.db2 = ['DOUBLE', 'REAL', 'FLOAT'];\n  BaseTypes.TIME.types.db2 = ['TIME'];\n  BaseTypes.DATEONLY.types.db2 = ['DATE'];\n  BaseTypes.BOOLEAN.types.db2 = ['BOOLEAN', 'BOOL', 'SMALLINT', 'BIT'];\n  BaseTypes.BLOB.types.db2 = ['BLOB'];\n  BaseTypes.DECIMAL.types.db2 = ['DECIMAL'];\n  BaseTypes.UUID.types.db2 = ['CHAR () FOR BIT DATA'];\n  BaseTypes.ENUM.types.db2 = ['VARCHAR'];\n  BaseTypes.REAL.types.db2 = ['REAL'];\n  BaseTypes.DOUBLE.types.db2 = ['DOUBLE'];\n  BaseTypes.GEOMETRY.types.db2 = false;\n\n  class BLOB extends BaseTypes.BLOB {\n    toSql() {\n      if (this._length) {\n        if (this._length.toLowerCase() === 'tiny') { // tiny = 255 bytes\n          return 'BLOB(255)';\n        }\n        if (this._length.toLowerCase() === 'medium') { // medium = 16M\n          return 'BLOB(16M)';\n        }\n        if (this._length.toLowerCase() === 'long') { // long = 2GB\n          return 'BLOB(2G)';\n        }\n        return `BLOB(${ this._length })`;\n      }\n      return 'BLOB'; // 1MB\n    }\n    escape(blob) {\n      return `BLOB('${ blob.toString().replace(/'/g, \"''\") }')`;\n    }\n    _stringify(value) {\n      if (Buffer.isBuffer(value)) {\n        return `BLOB('${ value.toString().replace(/'/g, \"''\") }')`;\n      }\n      if (Array.isArray(value)) {\n        value = Buffer.from(value);\n      } else {\n        value = Buffer.from(value.toString());\n      }\n      const hex = value.toString('hex');\n      return this._hexify(hex);\n    }\n    _hexify(hex) {\n      return `x'${ hex }'`;\n    }\n  }\n\n  class STRING extends BaseTypes.STRING {\n    toSql() {\n      if (!this._binary) {\n        if (this._length <= 4000) {\n          return `VARCHAR(${ this._length })`;\n        }\n        return `CLOB(${ this._length })`;\n      }\n      if (this._length < 255) {\n        return `CHAR(${ this._length }) FOR BIT DATA`;\n      }\n      if (this._length <= 4000) {\n        return `VARCHAR(${ this._length }) FOR BIT DATA`;\n      }\n      return `BLOB(${ this._length })`;\n    }\n    _stringify(value, options) {\n      if (this._binary) {\n        return BLOB.prototype._hexify(value.toString('hex'));\n      }\n      return options.escape(value);\n    }\n    _bindParam(value, options) {\n      return options.bindParam(this._binary ? Buffer.from(value) : value);\n    }\n  }\n  STRING.prototype.escape = false;\n\n  class TEXT extends BaseTypes.TEXT {\n    toSql() {\n      let len = 0;\n      if (this._length) {\n        switch (this._length.toLowerCase()) {\n          case 'tiny':\n            len = 256; // tiny = 2^8\n            break;\n          case 'medium':\n            len = 8192; // medium = 2^13 = 8k\n            break;\n          case 'long':\n            len = 65536; // long = 64k\n            break;\n        }\n        if ( isNaN(this._length) ) {\n          this._length = 32672;\n        }\n        if (len > 0 ) { this._length = len; }\n      } else { this._length = 32672; }\n      if ( this._length > 32672 )\n      {\n        len = `CLOB(${ this._length })`;\n      }\n      else\n      {\n        len = `VARCHAR(${ this._length })`;\n      }\n      warn(`Db2 does not support TEXT datatype. ${len} will be used instead.`);\n      return len;\n    }\n  }\n\n  class BOOLEAN extends BaseTypes.BOOLEAN {\n    toSql() {\n      return 'BOOLEAN';\n    }\n    _sanitize(value) {\n      if (value !== null && value !== undefined) {\n        if (Buffer.isBuffer(value) && value.length === 1) {\n          // Bit fields are returned as buffers\n          value = value[0];\n        }\n\n        if (typeof value === 'string') {\n          // Only take action on valid boolean strings.\n          value = value === 'true' ? true : value === 'false' ? false : value;\n          value = value === '\\u0001' ? true : value === '\\u0000' ? false : value;\n\n        } else if (typeof value === 'number') {\n          // Only take action on valid boolean integers.\n          value = value === 1 ? true : value === 0 ? false : value;\n        }\n      }\n\n      return value;\n    }\n  }\n  BOOLEAN.parse = BOOLEAN.prototype._sanitize;\n\n  class UUID extends BaseTypes.UUID {\n    toSql() {\n      return 'CHAR(36) FOR BIT DATA';\n    }\n  }\n\n  class NOW extends BaseTypes.NOW {\n    toSql() {\n      return 'CURRENT TIME';\n    }\n  }\n\n  class DATE extends BaseTypes.DATE {\n    toSql() {\n      if (this._length < 0) { this._length = 0; }\n      if (this._length > 6) { this._length = 6; }\n      return `TIMESTAMP${ this._length ? `(${ this._length })` : ''}`;\n    }\n    _stringify(date, options) {\n      if (!moment.isMoment(date)) {\n        date = this._applyTimezone(date, options);\n      }\n\n      if (this._length > 0) {\n        let msec = '.';\n        for ( let i = 0; i < this._length && i < 6; i++ ) {\n          msec += 'S';\n        }\n        return date.format(`YYYY-MM-DD HH:mm:ss${msec}`);\n      }\n      return date.format('YYYY-MM-DD HH:mm:ss');\n    }\n    static parse(value) {\n      if (typeof value !== 'string') {\n        value = value.string();\n      }\n      if (value === null) {\n        return value;\n      }\n      value = new Date(momentTz.utc(value));\n      return value;\n    }\n  }\n\n  class DATEONLY extends BaseTypes.DATEONLY {\n    static parse(value) {\n      return momentTz(value).format('YYYY-MM-DD');\n    }\n  }\n\n  class INTEGER extends BaseTypes.INTEGER {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n\n  class TINYINT extends BaseTypes.TINYINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n\n  class SMALLINT extends BaseTypes.SMALLINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n\n  class BIGINT extends BaseTypes.BIGINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n\n  class REAL extends BaseTypes.REAL {\n    constructor(length, decimals) {\n      super(length, decimals);\n      // Db2 does not support any options for real\n      if (this._length || this.options.length || this._unsigned || this._zerofill) {\n        warn('Db2 does not support REAL with options. Plain `REAL` will be used instead.');\n        this._length = undefined;\n        this.options.length = undefined;\n        this._unsigned = undefined;\n        this._zerofill = undefined;\n      }\n    }\n  }\n\n  class FLOAT extends BaseTypes.FLOAT {\n    constructor(length, decimals) {\n      super(length, decimals);\n      // Db2 does only support lengths as option.\n      // Values between 1-24 result in 7 digits precision (4 bytes storage size)\n      // Values between 25-53 result in 15 digits precision (8 bytes size)\n      // If decimals are provided remove these and print a warning\n      if (this._decimals) {\n        warn('Db2 does not support Float with decimals. Plain `FLOAT` will be used instead.');\n        this._length = undefined;\n        this.options.length = undefined;\n      }\n      if (this._unsigned) {\n        warn('Db2 does not support Float unsigned. `UNSIGNED` was removed.');\n        this._unsigned = undefined;\n      }\n      if (this._zerofill) {\n        warn('Db2 does not support Float zerofill. `ZEROFILL` was removed.');\n        this._zerofill = undefined;\n      }\n    }\n  }\n\n  class ENUM extends BaseTypes.ENUM {\n    toSql() {\n      return 'VARCHAR(255)';\n    }\n  }\n\n  class DOUBLE extends BaseTypes.DOUBLE {\n    constructor(length, decimals) {\n      super(length, decimals);\n      // db2 does not support any parameters for double\n      if (this._length || this.options.length ||\n          this._unsigned || this._zerofill)\n      {\n        warn('db2 does not support DOUBLE with options. ' +\n             'Plain DOUBLE will be used instead.');\n        this._length = undefined;\n        this.options.length = undefined;\n        this._unsigned = undefined;\n        this._zerofill = undefined;\n      }\n    }\n    toSql() {\n      return 'DOUBLE';\n    }\n  }\n  DOUBLE.prototype.key = DOUBLE.key = 'DOUBLE';\n\n  return {\n    BLOB,\n    BOOLEAN,\n    ENUM,\n    STRING,\n    UUID,\n    DATE,\n    DATEONLY,\n    NOW,\n    TINYINT,\n    SMALLINT,\n    INTEGER,\n    DOUBLE,\n    'DOUBLE PRECISION': DOUBLE,\n    BIGINT,\n    REAL,\n    FLOAT,\n    TEXT\n  };\n};\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/snowflake/data-types.js":{"lineLengths":[13,44,33,33,108,48,52,46,44,47,49,50,47,50,46,44,48,47,68,53,41,41,46,48,52,44,37,13,25,5,31,35,50,7,25,54,7,48,5,34,29,27,21,7,47,62,14,57,7,19,5,3,45,25,28,5,3,37,13,27,5,3,37,13,20,5,3,43,13,23,5,3,41,32,104,5,3,10,9,9,12,13,9,18,4,2,38,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/dialects/snowflake/data-types.js"],"sourcesContent":["'use strict';\n\nconst momentTz = require('moment-timezone');\nconst moment = require('moment');\n\nmodule.exports = BaseTypes => {\n  BaseTypes.ABSTRACT.prototype.dialectTypes = 'https://dev.snowflake.com/doc/refman/5.7/en/data-types.html';\n\n  /**\n   * types: [buffer_type, ...]\n   *\n   * @see buffer_type here https://dev.snowflake.com/doc/refman/5.7/en/c-api-prepared-statement-type-codes.html\n   * @see hex here https://github.com/sidorares/node-mysql2/blob/master/lib/constants/types.js\n   */\n\n  BaseTypes.DATE.types.snowflake = ['DATETIME'];\n  BaseTypes.STRING.types.snowflake = ['VAR_STRING'];\n  BaseTypes.CHAR.types.snowflake = ['STRING'];\n  BaseTypes.TEXT.types.snowflake = ['BLOB'];\n  BaseTypes.TINYINT.types.snowflake = ['TINY'];\n  BaseTypes.SMALLINT.types.snowflake = ['SHORT'];\n  BaseTypes.MEDIUMINT.types.snowflake = ['INT24'];\n  BaseTypes.INTEGER.types.snowflake = ['LONG'];\n  BaseTypes.BIGINT.types.snowflake = ['LONGLONG'];\n  BaseTypes.FLOAT.types.snowflake = ['FLOAT'];\n  BaseTypes.TIME.types.snowflake = ['TIME'];\n  BaseTypes.DATEONLY.types.snowflake = ['DATE'];\n  BaseTypes.BOOLEAN.types.snowflake = ['TINY'];\n  BaseTypes.BLOB.types.snowflake = ['TINYBLOB', 'BLOB', 'LONGBLOB'];\n  BaseTypes.DECIMAL.types.snowflake = ['NEWDECIMAL'];\n  BaseTypes.UUID.types.snowflake = false;\n  // Enum is not supported\n  // https://docs.snowflake.com/en/sql-reference/data-types-unsupported.html\n  BaseTypes.ENUM.types.snowflake = false;\n  BaseTypes.REAL.types.snowflake = ['DOUBLE'];\n  BaseTypes.DOUBLE.types.snowflake = ['DOUBLE'];\n  BaseTypes.GEOMETRY.types.snowflake = ['GEOMETRY'];\n  BaseTypes.JSON.types.snowflake = ['JSON'];\n\n  class DATE extends BaseTypes.DATE {\n    toSql() {\n      return 'TIMESTAMP';\n    }\n    _stringify(date, options) {\n      if (!moment.isMoment(date)) {\n        date = this._applyTimezone(date, options);\n      }\n      if (this._length) {\n        return date.format('YYYY-MM-DD HH:mm:ss.SSS');\n      }\n      return date.format('YYYY-MM-DD HH:mm:ss');\n    }\n    static parse(value, options) {\n      value = value.string();\n      if (value === null) {\n        return value;\n      }\n      if (momentTz.tz.zone(options.timezone)) {\n        value = momentTz.tz(value, options.timezone).toDate();\n      }\n      else {\n        value = new Date(`${value} ${options.timezone}`);\n      }\n      return value;\n    }\n  }\n\n  class DATEONLY extends BaseTypes.DATEONLY {\n    static parse(value) {\n      return value.string();\n    }\n  }\n  class UUID extends BaseTypes.UUID {\n    toSql() {\n      // https://community.snowflake.com/s/question/0D50Z00009LH2fl/what-is-the-best-way-to-store-uuids\n      return 'VARCHAR(36)';\n    }\n  }\n\n  class TEXT extends BaseTypes.TEXT {\n    toSql() {\n      return 'TEXT';\n    }\n  }\n\n  class BOOLEAN extends BaseTypes.BOOLEAN {\n    toSql() {\n      return 'BOOLEAN';\n    }\n  }\n\n  class JSONTYPE extends BaseTypes.JSON {\n    _stringify(value, options) {\n      return options.operation === 'where' && typeof value === 'string' ? value : JSON.stringify(value);\n    }\n  }\n\n  return {\n    TEXT,\n    DATE,\n    BOOLEAN,\n    DATEONLY,\n    UUID,\n    JSON: JSONTYPE\n  };\n};\n"],"mappings":";AAEA,MAAM,WAAW,QAAQ;AACzB,MAAM,SAAS,QAAQ;AAEvB,OAAO,UAAU,eAAa;AAC5B,YAAU,SAAS,UAAU,eAAe;AAS5C,YAAU,KAAK,MAAM,YAAY,CAAC;AAClC,YAAU,OAAO,MAAM,YAAY,CAAC;AACpC,YAAU,KAAK,MAAM,YAAY,CAAC;AAClC,YAAU,KAAK,MAAM,YAAY,CAAC;AAClC,YAAU,QAAQ,MAAM,YAAY,CAAC;AACrC,YAAU,SAAS,MAAM,YAAY,CAAC;AACtC,YAAU,UAAU,MAAM,YAAY,CAAC;AACvC,YAAU,QAAQ,MAAM,YAAY,CAAC;AACrC,YAAU,OAAO,MAAM,YAAY,CAAC;AACpC,YAAU,MAAM,MAAM,YAAY,CAAC;AACnC,YAAU,KAAK,MAAM,YAAY,CAAC;AAClC,YAAU,SAAS,MAAM,YAAY,CAAC;AACtC,YAAU,QAAQ,MAAM,YAAY,CAAC;AACrC,YAAU,KAAK,MAAM,YAAY,CAAC,YAAY,QAAQ;AACtD,YAAU,QAAQ,MAAM,YAAY,CAAC;AACrC,YAAU,KAAK,MAAM,YAAY;AAGjC,YAAU,KAAK,MAAM,YAAY;AACjC,YAAU,KAAK,MAAM,YAAY,CAAC;AAClC,YAAU,OAAO,MAAM,YAAY,CAAC;AACpC,YAAU,SAAS,MAAM,YAAY,CAAC;AACtC,YAAU,KAAK,MAAM,YAAY,CAAC;AAElC,qBAAmB,UAAU,KAAK;AAAA,IAChC,QAAQ;AACN,aAAO;AAAA;AAAA,IAET,WAAW,MAAM,SAAS;AACxB,UAAI,CAAC,OAAO,SAAS,OAAO;AAC1B,eAAO,KAAK,eAAe,MAAM;AAAA;AAEnC,UAAI,KAAK,SAAS;AAChB,eAAO,KAAK,OAAO;AAAA;AAErB,aAAO,KAAK,OAAO;AAAA;AAAA,WAEd,MAAM,OAAO,SAAS;AAC3B,cAAQ,MAAM;AACd,UAAI,UAAU,MAAM;AAClB,eAAO;AAAA;AAET,UAAI,SAAS,GAAG,KAAK,QAAQ,WAAW;AACtC,gBAAQ,SAAS,GAAG,OAAO,QAAQ,UAAU;AAAA,aAE1C;AACH,gBAAQ,IAAI,KAAK,GAAG,SAAS,QAAQ;AAAA;AAEvC,aAAO;AAAA;AAAA;AAIX,yBAAuB,UAAU,SAAS;AAAA,WACjC,MAAM,OAAO;AAClB,aAAO,MAAM;AAAA;AAAA;AAGjB,qBAAmB,UAAU,KAAK;AAAA,IAChC,QAAQ;AAEN,aAAO;AAAA;AAAA;AAIX,qBAAmB,UAAU,KAAK;AAAA,IAChC,QAAQ;AACN,aAAO;AAAA;AAAA;AAIX,wBAAsB,UAAU,QAAQ;AAAA,IACtC,QAAQ;AACN,aAAO;AAAA;AAAA;AAIX,yBAAuB,UAAU,KAAK;AAAA,IACpC,WAAW,OAAO,SAAS;AACzB,aAAO,QAAQ,cAAc,WAAW,OAAO,UAAU,WAAW,QAAQ,KAAK,UAAU;AAAA;AAAA;AAI/F,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,MAAM;AAAA;AAAA;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/oracle/data-types.js":{"lineLengths":[13,33,44,33,153,80,60,48,41,46,47,48,47,45,50,45,47,41,46,45,45,50,52,41,42,41,13,68,253,7,26,44,7,36,5,32,25,53,7,35,5,27,25,69,7,71,5,32,38,5,3,34,43,13,23,5,27,57,5,23,66,5,22,38,109,7,36,5,3,37,13,28,5,27,61,5,3,35,13,23,5,18,23,5,3,37,13,29,5,27,62,5,3,37,13,20,5,27,45,5,3,37,13,25,68,38,7,27,5,27,25,69,7,68,5,32,38,5,3,37,13,46,5,27,54,5,31,55,48,68,62,5,35,29,49,53,16,58,9,14,30,7,18,5,34,27,21,7,56,71,7,19,5,32,38,5,3,32,43,13,22,25,37,49,41,9,22,7,45,40,46,38,9,22,7,31,5,27,47,5,3,43,13,25,5,27,47,5,3,45,13,25,43,7,24,5,27,47,5,3,47,13,25,5,27,47,5,3,41,25,20,36,34,46,84,60,30,37,32,32,7,5,13,26,5,27,47,5,22,67,32,7,19,5,3,41,27,47,5,3,43,13,25,43,7,23,5,27,47,5,3,39,13,28,5,27,53,5,3,37,13,29,5,23,47,21,7,47,22,7,19,5,27,54,5,3,37,18,24,5,13,20,5,27,45,5,3,41,13,20,5,27,45,5,32,104,5,32,67,5,3,41,35,30,36,54,46,61,61,30,37,32,32,7,36,5,27,54,5,13,29,5,3,45,18,48,5,22,18,50,7,19,5,31,17,36,64,7,34,5,27,45,5,32,38,50,7,38,5,3,36,10,12,31,11,11,12,13,14,11,11,12,10,9,13,9,8,9,9,9,9,19,9,11,4,2,38,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/dialects/oracle/data-types.js"],"sourcesContent":["// Copyright (c) 2022, Oracle and/or its affiliates. All rights reserved\n\n'use strict';\n\nconst moment = require('moment');\nconst momentTz = require('moment-timezone');\n\nmodule.exports = BaseTypes => {\n  const warn = BaseTypes.ABSTRACT.warn.bind(\n    undefined,\n    'https://www.oracle.com/pls/topic/lookup?ctx=dblatest&id=GUID-D424D23B-0933-425F-BC69-9C0E6724693C'\n  );\n\n  BaseTypes.DATE.types.oracle = ['TIMESTAMP', 'TIMESTAMP WITH LOCAL TIME ZONE'];\n  BaseTypes.STRING.types.oracle = ['VARCHAR2', 'NVARCHAR2'];\n  BaseTypes.CHAR.types.oracle = ['CHAR', 'RAW'];\n  BaseTypes.TEXT.types.oracle = ['CLOB'];\n  BaseTypes.TINYINT.types.oracle = ['NUMBER'];\n  BaseTypes.SMALLINT.types.oracle = ['NUMBER'];\n  BaseTypes.MEDIUMINT.types.oracle = ['NUMBER'];\n  BaseTypes.INTEGER.types.oracle = ['INTEGER'];\n  BaseTypes.BIGINT.types.oracle = ['NUMBER'];\n  BaseTypes.FLOAT.types.oracle = ['BINARY_FLOAT'];\n  BaseTypes.DATEONLY.types.oracle = ['DATE'];\n  BaseTypes.BOOLEAN.types.oracle = ['CHAR(1)'];\n  BaseTypes.BLOB.types.oracle = ['BLOB'];\n  BaseTypes.DECIMAL.types.oracle = ['NUMBER'];\n  BaseTypes.UUID.types.oracle = ['VARCHAR2'];\n  BaseTypes.ENUM.types.oracle = ['VARCHAR2'];\n  BaseTypes.REAL.types.oracle = ['BINARY_DOUBLE'];\n  BaseTypes.DOUBLE.types.oracle = ['BINARY_DOUBLE'];\n  BaseTypes.JSON.types.oracle = ['BLOB'];\n  BaseTypes.GEOMETRY.types.oracle = false;\n\n  class STRING extends BaseTypes.STRING {\n    toSql() {\n      if (this.length > 4000 || this._binary && this._length > 2000) {\n        warn(\n          'Oracle supports length up to 32764 bytes or characters; Be sure that your administrator has extended the MAX_STRING_SIZE parameter. Check https://docs.oracle.com/pls/topic/lookup?ctx=dblatest&id=GUID-7B72E154-677A-4342-A1EA-C74C1EA928E6'\n        );\n      }\n      if (!this._binary) {\n        return `NVARCHAR2(${this._length})`;\n      }\n      return `RAW(${this._length})`;\n    }\n\n    _stringify(value, options) {\n      if (this._binary) {\n        // For Binary numbers we're converting a buffer to hex then\n        // sending it over the wire as a string,\n        // We pass it through escape function to remove un-necessary quotes\n        // this.format in insert/bulkinsert query calls stringify hence we need to convert binary buffer\n        // to hex string. Since this block is used by both bind (insert/bulkinsert) and\n        // non-bind (select query where clause) hence we need to\n        // have an operation that supports both\n        return options.escape(value.toString('hex'));\n      }\n      return options.escape(value);\n    }\n\n    _getBindDef(oracledb) {\n      if (this._binary) {\n        return { type: oracledb.DB_TYPE_RAW, maxSize: this._length };\n      }\n      return { type: oracledb.DB_TYPE_VARCHAR, maxSize: this._length };\n    }\n\n    _bindParam(value, options) {\n      return options.bindParam(value);\n    }\n  }\n\n  STRING.prototype.escape = false;\n\n  class BOOLEAN extends BaseTypes.BOOLEAN {\n    toSql() {\n      return 'CHAR(1)';\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_CHAR, maxSize: 1 };\n    }\n\n    _stringify(value) {\n      // If value is true we return '1'\n      // If value is false we return '0'\n      // Else we return it as is\n      // Converting number to char since in bindDef\n      // the type would be oracledb.DB_TYPE_CHAR\n      return value === true ? '1' : value === false ? '0' : value;\n    }\n\n    _sanitize(value) {\n      if (typeof value === 'string') {\n        // If value is a string we return true if among '1' and 'true'\n        // We return false if among '0' and 'false'\n        // Else return the value as is and let the DB raise error for invalid values\n        return value === '1' || value === 'true' ? true : value === '0' || value === 'false' ? false : value;\n      }\n      return super._sanitize(value);\n    }\n  }\n\n  class UUID extends BaseTypes.UUID {\n    toSql() {\n      return 'VARCHAR2(36)';\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_VARCHAR, maxSize: 36 };\n    }\n  }\n\n  class NOW extends BaseTypes.NOW {\n    toSql() {\n      return 'SYSDATE';\n    }\n\n    _stringify() {\n      return 'SYSDATE';\n    }\n  }\n\n  class ENUM extends BaseTypes.ENUM {\n    toSql() {\n      return 'VARCHAR2(512)';\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_VARCHAR, maxSize: 512 };\n    }\n  }\n\n  class TEXT extends BaseTypes.TEXT {\n    toSql() {\n      return 'CLOB';\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_CLOB };\n    }\n  }\n\n  class CHAR extends BaseTypes.CHAR {\n    toSql() {\n      if (this._binary) {\n        warn('Oracle CHAR.BINARY datatype is not of Fixed Length.');\n        return `RAW(${this._length})`;\n      }\n      return super.toSql();\n    }\n\n    _getBindDef(oracledb) {\n      if (this._binary) {\n        return { type: oracledb.DB_TYPE_RAW, maxSize: this._length };\n      }\n      return { type: oracledb.DB_TYPE_CHAR, maxSize: this._length };\n    }\n\n    _bindParam(value, options) {\n      return options.bindParam(value);\n    }\n  }\n\n  class DATE extends BaseTypes.DATE {\n    toSql() {\n      return 'TIMESTAMP WITH LOCAL TIME ZONE';\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_TIMESTAMP_LTZ };\n    }\n\n    _stringify(date, options) {\n      const format = 'YYYY-MM-DD HH24:MI:SS.FFTZH:TZM';\n\n      date = this._applyTimezone(date, options);\n\n      const formatedDate = date.format('YYYY-MM-DD HH:mm:ss.SSS Z');\n\n      return `TO_TIMESTAMP_TZ('${formatedDate}','${format}')`;\n    }\n\n    _applyTimezone(date, options) {\n      if (options.timezone) {\n        if (momentTz.tz.zone(options.timezone)) {\n          date = momentTz(date).tz(options.timezone);\n        } else {\n          date = moment(date).utcOffset(options.timezone);\n        }\n      } else {\n        date = momentTz(date);\n      }\n      return date;\n    }\n\n    static parse(value, options) {\n      if (value === null) {\n        return value;\n      }\n      if (options && moment.tz.zone(options.timezone)) {\n        value = moment.tz(value.toString(), options.timezone).toDate();\n      }\n      return value;\n    }\n\n    /**\n     * avoids appending TO_TIMESTAMP_TZ in _stringify\n     *\n     * @override\n     */\n    _bindParam(value, options) {\n      return options.bindParam(value);\n    }\n  }\n\n  DATE.prototype.escape = false;\n\n  class DECIMAL extends BaseTypes.DECIMAL {\n    toSql() {\n      let result = '';\n      if (this._length) {\n        result += `(${this._length}`;\n        if (typeof this._decimals === 'number') {\n          result += `,${this._decimals}`;\n        }\n        result += ')';\n      }\n\n      if (!this._length && this._precision) {\n        result += `(${this._precision}`;\n        if (typeof this._scale === 'number') {\n          result += `,${this._scale}`;\n        }\n        result += ')';\n      }\n\n      return `NUMBER${result}`;\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_NUMBER };\n    }\n  }\n\n  class TINYINT extends BaseTypes.TINYINT {\n    toSql() {\n      return 'NUMBER(3)';\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_NUMBER };\n    }\n  }\n\n  class SMALLINT extends BaseTypes.SMALLINT {\n    toSql() {\n      if (this._length) {\n        return `NUMBER(${this._length},0)`;\n      }\n      return 'SMALLINT';\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_NUMBER };\n    }\n  }\n\n  class MEDIUMINT extends BaseTypes.MEDIUMINT {\n    toSql() {\n      return 'NUMBER(8)';\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_NUMBER };\n    }\n  }\n\n  class BIGINT extends BaseTypes.BIGINT {\n    constructor(length) {\n      super(length);\n      if (!(this instanceof BIGINT)) return new BIGINT(length);\n      BaseTypes.BIGINT.apply(this, arguments);\n\n      // ORACLE does not support any options for bigint\n      if (this._length || this.options.length || this._unsigned || this._zerofill) {\n        warn('Oracle does not support BIGINT with options');\n        this._length = undefined;\n        this.options.length = undefined;\n        this._unsigned = undefined;\n        this._zerofill = undefined;\n      }\n    }\n\n    toSql() {\n      return 'NUMBER(19)';\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_NUMBER };\n    }\n\n    _sanitize(value) {\n      if (typeof value === 'bigint' || typeof value === 'number') {\n        return value.toString();\n      }\n      return value;\n    }\n\n  }\n\n  class NUMBER extends BaseTypes.NUMBER {\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_NUMBER };\n    }\n  }\n\n  class INTEGER extends BaseTypes.INTEGER {\n    toSql() {\n      if (this._length) {\n        return `NUMBER(${this._length},0)`;\n      }\n      return 'INTEGER';\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_NUMBER };\n    }\n  }\n\n  class FLOAT extends BaseTypes.FLOAT {\n    toSql() {\n      return 'BINARY_FLOAT';\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_BINARY_FLOAT };\n    }\n  }\n\n  class REAL extends BaseTypes.REAL {\n    toSql() {\n      return 'BINARY_DOUBLE';\n    }\n\n    // https://www.oracle.com/pls/topic/lookup?ctx=dblatest&id=GUID-0BA2E065-8006-426C-A3CB-1F6B0C8F283C\n    _stringify(value) {\n      if (value === Number.POSITIVE_INFINITY) {\n        return 'inf';\n      }\n      if (value === Number.NEGATIVE_INFINITY) {\n        return '-inf';\n      }\n      return value;\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_BINARY_DOUBLE };\n    }\n  }\n\n  class BLOB extends BaseTypes.BLOB {\n    // Generic hexify returns X'${hex}' but Oracle expects '${hex}' for BLOB datatype\n    _hexify(hex) {\n      return `'${hex}'`;\n    }\n\n    toSql() {\n      return 'BLOB';\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_BLOB };\n    }\n  }\n\n  class JSONTYPE extends BaseTypes.JSON {\n    toSql() {\n      return 'BLOB';\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_BLOB };\n    }\n\n    _stringify(value, options) {\n      return options.operation === 'where' && typeof value === 'string' ? value : JSON.stringify(value);\n    }\n\n    _bindParam(value, options) {\n      return options.bindParam(Buffer.from(JSON.stringify(value)));\n    }\n  }\n\n  class DOUBLE extends BaseTypes.DOUBLE {\n    constructor(length, decimals) {\n      super(length, decimals);\n      if (!(this instanceof DOUBLE)) return new BaseTypes.DOUBLE(length, decimals);\n      BaseTypes.DOUBLE.apply(this, arguments);\n\n      if (this._length || this._unsigned || this._zerofill) {\n        warn('Oracle does not support DOUBLE with options.');\n        this._length = undefined;\n        this.options.length = undefined;\n        this._unsigned = undefined;\n        this._zerofill = undefined;\n      }\n\n      this.key = 'DOUBLE PRECISION';\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_BINARY_DOUBLE };\n    }\n\n    toSql() {\n      return 'BINARY_DOUBLE';\n    }\n  }\n  class DATEONLY extends BaseTypes.DATEONLY {\n    parse(value) {\n      return moment(value).format('YYYY-MM-DD');\n    }\n\n    _sanitize(value) {\n      if (value) {\n        return moment(value).format('YYYY-MM-DD');\n      }\n      return value;\n    }\n\n    _stringify(date, options) {\n      // If date is not null only then we format the date\n      if (date) {\n        const format = 'YYYY/MM/DD';\n        return options.escape(`TO_DATE('${date}','${format}')`);\n      }\n      return options.escape(date);\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_DATE };\n    }\n\n    /**\n     * avoids appending TO_DATE in _stringify\n     *\n     * @override\n     */\n    _bindParam(value, options) {\n      if (typeof value === 'string') {\n        return options.bindParam(new Date(value));\n      }\n      return options.bindParam(value);\n\n    }\n  }\n\n  DATEONLY.prototype.escape = false;\n\n  return {\n    BOOLEAN,\n    'DOUBLE PRECISION': DOUBLE,\n    DOUBLE,\n    STRING,\n    TINYINT,\n    SMALLINT,\n    MEDIUMINT,\n    BIGINT,\n    NUMBER,\n    INTEGER,\n    FLOAT,\n    UUID,\n    DATEONLY,\n    DATE,\n    NOW,\n    BLOB,\n    ENUM,\n    TEXT,\n    CHAR,\n    JSON: JSONTYPE,\n    REAL,\n    DECIMAL\n  };\n};\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/sql-string.js":{"lineLengths":[13,42,45,57,40,18,18,5,29,65,12,53,5,15,9,1,34,50,23,39,18,3,23,19,60,22,7,32,18,18,28,18,37,12,3,28,83,3,29,34,62,5,51,3,27,81,45,81,5,56,3,21,60,3,78,34,33,38,5,63,70,17,5,34,10,55,18,18,23,18,23,18,23,18,23,17,23,17,23,16,26,7,7,3,45,1,24,49,29,32,59,3,40,25,19,5,59,5,1,24,64,56,63,19,5,33,58,5,84,5,1,54,38,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/sql-string.js"],"sourcesContent":["'use strict';\n\nconst dataTypes = require('./data-types');\nconst { logger } = require('./utils/logger');\n\nfunction arrayToList(array, timeZone, dialect, format) {\n  return array.reduce((sql, val, i) => {\n    if (i !== 0) {\n      sql += ', ';\n    }\n    if (Array.isArray(val)) {\n      sql += `(${arrayToList(val, timeZone, dialect, format)})`;\n    } else {\n      sql += escape(val, timeZone, dialect, format);\n    }\n    return sql;\n  }, '');\n}\nexports.arrayToList = arrayToList;\n\nfunction escape(val, timeZone, dialect, format) {\n  let prependN = false;\n  if (val === undefined || val === null) {\n    return 'NULL';\n  }\n  switch (typeof val) {\n    case 'boolean':\n    // SQLite doesn't have true/false support. MySQL aliases true/false to 1/0\n    // for us. Postgres actually has a boolean type with true/false literals,\n    // but sequelize doesn't use it yet.\n      if (['sqlite', 'mssql', 'oracle'].includes(dialect)) {\n        return +!!val;\n      }\n      return (!!val).toString();\n    case 'number':\n    case 'bigint':\n      return val.toString();\n    case 'string':\n    // In mssql, prepend N to all quoted vals which are originally a string (for\n    // unicode compatibility)\n      prependN = dialect === 'mssql';\n      break;\n  }\n\n  if (val instanceof Date) {\n    val = dataTypes[dialect].DATE.prototype.stringify(val, { timezone: timeZone });\n  }\n\n  if (Buffer.isBuffer(val)) {\n    if (dataTypes[dialect].BLOB) {\n      return dataTypes[dialect].BLOB.prototype.stringify(val);\n    }\n\n    return dataTypes.BLOB.prototype.stringify(val);\n  }\n\n  if (Array.isArray(val)) {\n    const partialEscape = escVal => escape(escVal, timeZone, dialect, format);\n    if (dialect === 'postgres' && !format) {\n      return dataTypes.ARRAY.prototype.stringify(val, { escape: partialEscape });\n    }\n    return arrayToList(val, timeZone, dialect, format);\n  }\n\n  if (!val.replace) {\n    throw new Error(`Invalid value ${logger.inspect(val)}`);\n  }\n\n  if (['postgres', 'sqlite', 'mssql', 'snowflake', 'db2'].includes(dialect)) {\n    // http://www.postgresql.org/docs/8.2/static/sql-syntax-lexical.html#SQL-SYNTAX-STRINGS\n    // http://stackoverflow.com/q/603572/130598\n    val = val.replace(/'/g, \"''\");\n\n    if (dialect === 'postgres') {\n      // null character is not allowed in Postgres\n      val = val.replace(/\\0/g, '\\\\0');\n    }\n  } else if (dialect === 'oracle' && typeof val === 'string') {\n    if (val.startsWith('TO_TIMESTAMP') || val.startsWith('TO_DATE')) {\n      return val;\n    }\n    val = val.replace(/'/g, \"''\");\n  } else {\n\n    // eslint-disable-next-line no-control-regex\n    val = val.replace(/[\\0\\n\\r\\b\\t\\\\'\"\\x1a]/g, s => {\n      switch (s) {\n        case '\\0': return '\\\\0';\n        case '\\n': return '\\\\n';\n        case '\\r': return '\\\\r';\n        case '\\b': return '\\\\b';\n        case '\\t': return '\\\\t';\n        case '\\x1a': return '\\\\Z';\n        default: return `\\\\${s}`;\n      }\n    });\n  }\n  return `${(prependN ? \"N'\" : \"'\") + val}'`;\n}\nexports.escape = escape;\n\nfunction format(sql, values, timeZone, dialect) {\n  values = [].concat(values);\n\n  if (typeof sql !== 'string') {\n    throw new Error(`Invalid SQL string provided: ${sql}`);\n  }\n\n  return sql.replace(/\\?/g, match => {\n    if (!values.length) {\n      return match;\n    }\n\n    return escape(values.shift(), timeZone, dialect, true);\n  });\n}\nexports.format = format;\n\nfunction formatNamedParameters(sql, values, timeZone, dialect) {\n  return sql.replace(/:+(?!\\d)(\\w+)/g, (value, key) => {\n    if ('postgres' === dialect && '::' === value.slice(0, 2)) {\n      return value;\n    }\n\n    if (values[key] !== undefined) {\n      return escape(values[key], timeZone, dialect, true);\n    }\n    throw new Error(`Named parameter \"${value}\" has no value in the given object.`);\n  });\n}\nexports.formatNamedParameters = formatNamedParameters;\n"],"mappings":";AAEA,MAAM,YAAY,QAAQ;AAC1B,MAAM,EAAE,WAAW,QAAQ;AAE3B,qBAAqB,OAAO,UAAU,SAAS,SAAQ;AACrD,SAAO,MAAM,OAAO,CAAC,KAAK,KAAK,MAAM;AACnC,QAAI,MAAM,GAAG;AACX,aAAO;AAAA;AAET,QAAI,MAAM,QAAQ,MAAM;AACtB,aAAO,IAAI,YAAY,KAAK,UAAU,SAAS;AAAA,WAC1C;AACL,aAAO,OAAO,KAAK,UAAU,SAAS;AAAA;AAExC,WAAO;AAAA,KACN;AAAA;AAEL,QAAQ,cAAc;AAEtB,gBAAgB,KAAK,UAAU,SAAS,SAAQ;AAC9C,MAAI,WAAW;AACf,MAAI,QAAQ,UAAa,QAAQ,MAAM;AACrC,WAAO;AAAA;AAET,UAAQ,OAAO;AAAA,SACR;AAIH,UAAI,CAAC,UAAU,SAAS,UAAU,SAAS,UAAU;AACnD,eAAO,CAAC,CAAC,CAAC;AAAA;AAEZ,aAAQ,EAAC,CAAC,KAAK;AAAA,SACZ;AAAA,SACA;AACH,aAAO,IAAI;AAAA,SACR;AAGH,iBAAW,YAAY;AACvB;AAAA;AAGJ,MAAI,eAAe,MAAM;AACvB,UAAM,UAAU,SAAS,KAAK,UAAU,UAAU,KAAK,EAAE,UAAU;AAAA;AAGrE,MAAI,OAAO,SAAS,MAAM;AACxB,QAAI,UAAU,SAAS,MAAM;AAC3B,aAAO,UAAU,SAAS,KAAK,UAAU,UAAU;AAAA;AAGrD,WAAO,UAAU,KAAK,UAAU,UAAU;AAAA;AAG5C,MAAI,MAAM,QAAQ,MAAM;AACtB,UAAM,gBAAgB,YAAU,OAAO,QAAQ,UAAU,SAAS;AAClE,QAAI,YAAY,cAAc,CAAC,SAAQ;AACrC,aAAO,UAAU,MAAM,UAAU,UAAU,KAAK,EAAE,QAAQ;AAAA;AAE5D,WAAO,YAAY,KAAK,UAAU,SAAS;AAAA;AAG7C,MAAI,CAAC,IAAI,SAAS;AAChB,UAAM,IAAI,MAAM,iBAAiB,OAAO,QAAQ;AAAA;AAGlD,MAAI,CAAC,YAAY,UAAU,SAAS,aAAa,OAAO,SAAS,UAAU;AAGzE,UAAM,IAAI,QAAQ,MAAM;AAExB,QAAI,YAAY,YAAY;AAE1B,YAAM,IAAI,QAAQ,OAAO;AAAA;AAAA,aAElB,YAAY,YAAY,OAAO,QAAQ,UAAU;AAC1D,QAAI,IAAI,WAAW,mBAAmB,IAAI,WAAW,YAAY;AAC/D,aAAO;AAAA;AAET,UAAM,IAAI,QAAQ,MAAM;AAAA,SACnB;AAGL,UAAM,IAAI,QAAQ,yBAAyB,OAAK;AAC9C,cAAQ;AAAA,aACD;AAAM,iBAAO;AAAA,aACb;AAAM,iBAAO;AAAA,aACb;AAAM,iBAAO;AAAA,aACb;AAAM,iBAAO;AAAA,aACb;AAAM,iBAAO;AAAA,aACb;AAAQ,iBAAO;AAAA;AACX,iBAAO,KAAK;AAAA;AAAA;AAAA;AAI3B,SAAO,GAAI,YAAW,OAAO,OAAO;AAAA;AAEtC,QAAQ,SAAS;AAEjB,gBAAgB,KAAK,QAAQ,UAAU,SAAS;AAC9C,WAAS,GAAG,OAAO;AAEnB,MAAI,OAAO,QAAQ,UAAU;AAC3B,UAAM,IAAI,MAAM,gCAAgC;AAAA;AAGlD,SAAO,IAAI,QAAQ,OAAO,WAAS;AACjC,QAAI,CAAC,OAAO,QAAQ;AAClB,aAAO;AAAA;AAGT,WAAO,OAAO,OAAO,SAAS,UAAU,SAAS;AAAA;AAAA;AAGrD,QAAQ,SAAS;AAEjB,+BAA+B,KAAK,QAAQ,UAAU,SAAS;AAC7D,SAAO,IAAI,QAAQ,kBAAkB,CAAC,OAAO,QAAQ;AACnD,QAAI,AAAe,YAAf,cAA0B,AAAS,MAAM,MAAM,GAAG,OAAxB,MAA4B;AACxD,aAAO;AAAA;AAGT,QAAI,OAAO,SAAS,QAAW;AAC7B,aAAO,OAAO,OAAO,MAAM,UAAU,SAAS;AAAA;AAEhD,UAAM,IAAI,MAAM,oBAAoB;AAAA;AAAA;AAGxC,QAAQ,wBAAwB;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/operators.js":{"lineLengths":[38,82,33,25,23,66,2,19,15,34,3,12,23,23,25,23,25,23,25,23,23,29,27,33,29,35,39,35,37,31,37,33,39,33,39,33,35,37,35,39,41,45,43,25,23,25,25,31,25,41,27,28,2,27,20,37,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/operators.ts"],"sourcesContent":["interface OpTypes {\n  /**\n   * Operator -|- (PG range is adjacent to operator)\n   *\n   * ```js\n   * [Op.adjacent]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * -|- [1, 2)\n   * ```\n   */\n  readonly adjacent: unique symbol;\n  /**\n   * Operator ALL\n   *\n   * ```js\n   * [Op.gt]: {\n   *  [Op.all]: literal('SELECT 1')\n   * }\n   * ```\n   * In SQL\n   * ```sql\n   * > ALL (SELECT 1)\n   * ```\n   */\n  readonly all: unique symbol;\n  /**\n   * Operator AND\n   *\n   * ```js\n   * [Op.and]: {a: 5}\n   * ```\n   * In SQL\n   * ```sql\n   * AND (a = 5)\n   * ```\n   */\n  readonly and: unique symbol;\n  /**\n   * Operator ANY ARRAY (PG only)\n   *\n   * ```js\n   * [Op.any]: [2,3]\n   * ```\n   * In SQL\n   * ```sql\n   * ANY ARRAY[2, 3]::INTEGER\n   * ```\n   *\n   * Operator LIKE ANY ARRAY (also works for iLike and notLike)\n   *\n   * ```js\n   * [Op.like]: { [Op.any]: ['cat', 'hat']}\n   * ```\n   * In SQL\n   * ```sql\n   * LIKE ANY ARRAY['cat', 'hat']\n   * ```\n   */\n  readonly any: unique symbol;\n  /**\n   * Operator BETWEEN\n   *\n   * ```js\n   * [Op.between]: [6, 10]\n   * ```\n   * In SQL\n   * ```sql\n   * BETWEEN 6 AND 10\n   * ```\n   */\n  readonly between: unique symbol;\n  /**\n   * With dialect specific column identifiers (PG in this example)\n   *\n   * ```js\n   * [Op.col]: 'user.organization_id'\n   * ```\n   * In SQL\n   * ```sql\n   * = \"user\".\"organization_id\"\n   * ```\n   */\n  readonly col: unique symbol;\n  /**\n   * Operator <@ (PG array contained by operator)\n   *\n   * ```js\n   * [Op.contained]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * <@ [1, 2)\n   * ```\n   */\n  readonly contained: unique symbol;\n  /**\n   * Operator @> (PG array contains operator)\n   *\n   * ```js\n   * [Op.contains]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * @> [1, 2)\n   * ```\n   */\n  readonly contains: unique symbol;\n  /**\n   * Operator LIKE\n   *\n   * ```js\n   * [Op.endsWith]: 'hat'\n   * ```\n   * In SQL\n   * ```sql\n   * LIKE '%hat'\n   * ```\n   */\n  readonly endsWith: unique symbol;\n  /**\n   * Operator =\n   *\n   * ```js\n   * [Op.eq]: 3\n   * ```\n   * In SQL\n   * ```sql\n   * = 3\n   * ```\n   */\n  readonly eq: unique symbol;\n  /**\n   * Operator >\n   *\n   * ```js\n   * [Op.gt]: 6\n   * ```\n   * In SQL\n   * ```sql\n   * > 6\n   * ```\n   */\n  readonly gt: unique symbol;\n  /**\n   * Operator >=\n   *\n   * ```js\n   * [Op.gte]: 6\n   * ```\n   * In SQL\n   * ```sql\n   * >= 6\n   * ```\n   */\n  readonly gte: unique symbol;\n\n  /**\n   * Operator ILIKE (case insensitive) (PG only)\n   *\n   * ```js\n   * [Op.iLike]: '%hat'\n   * ```\n   * In SQL\n   * ```sql\n   * ILIKE '%hat'\n   * ```\n   */\n  readonly iLike: unique symbol;\n  /**\n   * Operator IN\n   *\n   * ```js\n   * [Op.in]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * IN [1, 2]\n   * ```\n   */\n  readonly in: unique symbol;\n  /**\n   * Operator ~* (PG only)\n   *\n   * ```js\n   * [Op.iRegexp]: '^[h|a|t]'\n   * ```\n   * In SQL\n   * ```sql\n   * ~* '^[h|a|t]'\n   * ```\n   */\n  readonly iRegexp: unique symbol;\n  /**\n   * Operator IS\n   *\n   * ```js\n   * [Op.is]: null\n   * ```\n   * In SQL\n   * ```sql\n   * IS null\n   * ```\n   */\n  readonly is: unique symbol;\n  /**\n   * Operator LIKE\n   *\n   * ```js\n   * [Op.like]: '%hat'\n   * ```\n   * In SQL\n   * ```sql\n   * LIKE '%hat'\n   * ```\n   */\n  readonly like: unique symbol;\n  /**\n   * Operator <\n   *\n   * ```js\n   * [Op.lt]: 10\n   * ```\n   * In SQL\n   * ```sql\n   * < 10\n   * ```\n   */\n  readonly lt: unique symbol;\n  /**\n   * Operator <=\n   *\n   * ```js\n   * [Op.lte]: 10\n   * ```\n   * In SQL\n   * ```sql\n   * <= 10\n   * ```\n   */\n  readonly lte: unique symbol;\n  /**\n   * Operator @@\n   *\n   * ```js\n   * [Op.match]: Sequelize.fn('to_tsquery', 'fat & rat')`\n   * ```\n   * In SQL\n   * ```sql\n   * @@ to_tsquery('fat & rat')\n   * ```\n   */\n  readonly match: unique symbol;\n  /**\n   * Operator !=\n   *\n   * ```js\n   * [Op.ne]: 20\n   * ```\n   * In SQL\n   * ```sql\n   * != 20\n   * ```\n   */\n  readonly ne: unique symbol;\n  /**\n   * Operator &> (PG range does not extend to the left of operator)\n   *\n   * ```js\n   * [Op.noExtendLeft]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * &> [1, 2)\n   * ```\n   */\n  readonly noExtendLeft: unique symbol;\n  /**\n   * Operator &< (PG range does not extend to the right of operator)\n   *\n   * ```js\n   * [Op.noExtendRight]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * &< [1, 2)\n   * ```\n   */\n  readonly noExtendRight: unique symbol;\n  /**\n   * Operator NOT\n   *\n   * ```js\n   * [Op.not]: true\n   * ```\n   * In SQL\n   * ```sql\n   * IS NOT TRUE\n   * ```\n   */\n  readonly not: unique symbol;\n  /**\n   * Operator NOT BETWEEN\n   *\n   * ```js\n   * [Op.notBetween]: [11, 15]\n   * ```\n   * In SQL\n   * ```sql\n   * NOT BETWEEN 11 AND 15\n   * ```\n   */\n  readonly notBetween: unique symbol;\n  /**\n   * Operator NOT ILIKE (case insensitive) (PG only)\n   *\n   * ```js\n   * [Op.notILike]: '%hat'\n   * ```\n   * In SQL\n   * ```sql\n   * NOT ILIKE '%hat'\n   * ```\n   */\n  readonly notILike: unique symbol;\n  /**\n   * Operator NOT IN\n   *\n   * ```js\n   * [Op.notIn]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * NOT IN [1, 2]\n   * ```\n   */\n  readonly notIn: unique symbol;\n  /**\n   * Operator !~* (PG only)\n   *\n   * ```js\n   * [Op.notIRegexp]: '^[h|a|t]'\n   * ```\n   * In SQL\n   * ```sql\n   * !~* '^[h|a|t]'\n   * ```\n   */\n  readonly notIRegexp: unique symbol;\n  /**\n   * Operator NOT LIKE\n   *\n   * ```js\n   * [Op.notLike]: '%hat'\n   * ```\n   * In SQL\n   * ```sql\n   * NOT LIKE '%hat'\n   * ```\n   */\n  readonly notLike: unique symbol;\n  /**\n   * Operator NOT REGEXP (MySQL/PG only)\n   *\n   * ```js\n   * [Op.notRegexp]: '^[h|a|t]'\n   * ```\n   * In SQL\n   * ```sql\n   * NOT REGEXP/!~ '^[h|a|t]'\n   * ```\n   */\n  readonly notRegexp: unique symbol;\n  /**\n   * Operator OR\n   *\n   * ```js\n   * [Op.or]: [{a: 5}, {a: 6}]\n   * ```\n   * In SQL\n   * ```sql\n   * (a = 5 OR a = 6)\n   * ```\n   */\n  readonly or: unique symbol;\n  /**\n   * Operator && (PG array overlap operator)\n   *\n   * ```js\n   * [Op.overlap]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * && [1, 2)\n   * ```\n   */\n  readonly overlap: unique symbol;\n  /**\n   * Internal placeholder\n   *\n   * ```js\n   * [Op.placeholder]: true\n   * ```\n   */\n  readonly placeholder: unique symbol;\n  /**\n   * Operator REGEXP (MySQL/PG only)\n   *\n   * ```js\n   * [Op.regexp]: '^[h|a|t]'\n   * ```\n   * In SQL\n   * ```sql\n   * REGEXP/~ '^[h|a|t]'\n   * ```\n   */\n  readonly regexp: unique symbol;\n  /**\n   * Operator LIKE\n   *\n   * ```js\n   * [Op.startsWith]: 'hat'\n   * ```\n   * In SQL\n   * ```sql\n   * LIKE 'hat%'\n   * ```\n   */\n  readonly startsWith: unique symbol;\n  /**\n   * Operator << (PG range strictly left of operator)\n   *\n   * ```js\n   * [Op.strictLeft]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * << [1, 2)\n   * ```\n   */\n  readonly strictLeft: unique symbol;\n  /**\n   * Operator >> (PG range strictly right of operator)\n   *\n   * ```js\n   * [Op.strictRight]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * >> [1, 2)\n   * ```\n   */\n  readonly strictRight: unique symbol;\n  /**\n   * Operator LIKE\n   *\n   * ```js\n   * [Op.substring]: 'hat'\n   * ```\n   * In SQL\n   * ```sql\n   * LIKE '%hat%'\n   * ```\n   */\n  readonly substring: unique symbol;\n  /**\n   * Operator VALUES\n   *\n   * ```js\n   * [Op.values]: [4, 5, 6]\n   * ```\n   * In SQL\n   * ```sql\n   * VALUES (4), (5), (6)\n   * ```\n   */\n  readonly values: unique symbol;\n}\n\n// Note: These symbols are registered in the Global Symbol Registry\n//  to counter bugs when two different versions of this library are loaded\n//  Source issue: https://github.com/sequelize/sequelize/issues/8663\n// This is not an endorsement of having two different versions of the library loaded at the same time,\n//  a lot more is going to silently break if you do this.\nexport const Op: OpTypes = {\n  eq: Symbol.for('eq'),\n  ne: Symbol.for('ne'),\n  gte: Symbol.for('gte'),\n  gt: Symbol.for('gt'),\n  lte: Symbol.for('lte'),\n  lt: Symbol.for('lt'),\n  not: Symbol.for('not'),\n  is: Symbol.for('is'),\n  in: Symbol.for('in'),\n  notIn: Symbol.for('notIn'),\n  like: Symbol.for('like'),\n  notLike: Symbol.for('notLike'),\n  iLike: Symbol.for('iLike'),\n  notILike: Symbol.for('notILike'),\n  startsWith: Symbol.for('startsWith'),\n  endsWith: Symbol.for('endsWith'),\n  substring: Symbol.for('substring'),\n  regexp: Symbol.for('regexp'),\n  notRegexp: Symbol.for('notRegexp'),\n  iRegexp: Symbol.for('iRegexp'),\n  notIRegexp: Symbol.for('notIRegexp'),\n  between: Symbol.for('between'),\n  notBetween: Symbol.for('notBetween'),\n  overlap: Symbol.for('overlap'),\n  contains: Symbol.for('contains'),\n  contained: Symbol.for('contained'),\n  adjacent: Symbol.for('adjacent'),\n  strictLeft: Symbol.for('strictLeft'),\n  strictRight: Symbol.for('strictRight'),\n  noExtendRight: Symbol.for('noExtendRight'),\n  noExtendLeft: Symbol.for('noExtendLeft'),\n  and: Symbol.for('and'),\n  or: Symbol.for('or'),\n  any: Symbol.for('any'),\n  all: Symbol.for('all'),\n  values: Symbol.for('values'),\n  col: Symbol.for('col'),\n  placeholder: Symbol.for('placeholder'),\n  join: Symbol.for('join'),\n  match: Symbol.for('match')\n} as OpTypes;\n\nexport default Op;\n\n// https://github.com/sequelize/sequelize/issues/13791\n// remove me in v7: kept for backward compatibility as `export default Op` is\n// transpiled to `module.exports.default` instead of `module.exports`\nmodule.exports = Op;\n"],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAAA;AAqeO,MAAM,KAAc;AAAA,EACzB,IAAI,OAAO,IAAI;AAAA,EACf,IAAI,OAAO,IAAI;AAAA,EACf,KAAK,OAAO,IAAI;AAAA,EAChB,IAAI,OAAO,IAAI;AAAA,EACf,KAAK,OAAO,IAAI;AAAA,EAChB,IAAI,OAAO,IAAI;AAAA,EACf,KAAK,OAAO,IAAI;AAAA,EAChB,IAAI,OAAO,IAAI;AAAA,EACf,IAAI,OAAO,IAAI;AAAA,EACf,OAAO,OAAO,IAAI;AAAA,EAClB,MAAM,OAAO,IAAI;AAAA,EACjB,SAAS,OAAO,IAAI;AAAA,EACpB,OAAO,OAAO,IAAI;AAAA,EAClB,UAAU,OAAO,IAAI;AAAA,EACrB,YAAY,OAAO,IAAI;AAAA,EACvB,UAAU,OAAO,IAAI;AAAA,EACrB,WAAW,OAAO,IAAI;AAAA,EACtB,QAAQ,OAAO,IAAI;AAAA,EACnB,WAAW,OAAO,IAAI;AAAA,EACtB,SAAS,OAAO,IAAI;AAAA,EACpB,YAAY,OAAO,IAAI;AAAA,EACvB,SAAS,OAAO,IAAI;AAAA,EACpB,YAAY,OAAO,IAAI;AAAA,EACvB,SAAS,OAAO,IAAI;AAAA,EACpB,UAAU,OAAO,IAAI;AAAA,EACrB,WAAW,OAAO,IAAI;AAAA,EACtB,UAAU,OAAO,IAAI;AAAA,EACrB,YAAY,OAAO,IAAI;AAAA,EACvB,aAAa,OAAO,IAAI;AAAA,EACxB,eAAe,OAAO,IAAI;AAAA,EAC1B,cAAc,OAAO,IAAI;AAAA,EACzB,KAAK,OAAO,IAAI;AAAA,EAChB,IAAI,OAAO,IAAI;AAAA,EACf,KAAK,OAAO,IAAI;AAAA,EAChB,KAAK,OAAO,IAAI;AAAA,EAChB,QAAQ,OAAO,IAAI;AAAA,EACnB,KAAK,OAAO,IAAI;AAAA,EAChB,aAAa,OAAO,IAAI;AAAA,EACxB,MAAM,OAAO,IAAI;AAAA,EACjB,OAAO,OAAO,IAAI;AAAA;AAGpB,IAAO,oBAAQ;AAKf,OAAO,UAAU;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/model.js":{"lineLengths":[13,38,41,57,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,66,33,28,33,33,45,55,64,58,44,44,51,51,42,33,58,34,64,52,10,15,13,12,10,10,11,16,9,8,12,14,11,15,18,10,10,10,12,13,13,12,14,9,10,10,8,3,141,13,31,46,3,31,46,3,19,38,3,42,58,60,24,41,81,64,44,11,9,47,193,73,90,9,12,5,30,24,40,57,16,29,118,5,36,67,28,52,60,7,5,25,34,20,46,28,43,38,3,32,17,12,40,30,20,47,78,34,94,11,7,57,80,85,49,11,11,7,121,187,73,7,121,187,73,7,121,187,73,7,29,37,108,29,9,7,5,30,3,47,26,46,53,7,5,61,75,25,104,7,5,93,21,5,62,65,31,146,54,19,6,86,44,38,12,69,5,19,3,34,20,18,52,39,138,7,14,13,40,27,27,30,30,9,8,5,46,51,29,25,28,8,5,46,51,29,25,28,8,5,46,51,29,28,8,5,33,38,32,25,24,28,8,5,90,35,46,39,7,7,42,48,50,5,3,26,30,3,40,39,44,75,52,53,44,98,11,45,9,7,5,3,42,25,13,42,42,41,29,13,5,92,3,53,46,78,94,7,40,5,19,3,41,18,16,26,23,64,43,56,33,16,33,9,63,7,68,34,7,37,34,92,70,47,18,47,11,29,34,26,48,48,25,9,28,56,25,9,26,41,25,9,7,5,106,3,54,26,23,23,32,20,7,26,24,21,22,37,35,25,8,44,28,29,21,16,9,39,21,152,9,29,27,14,50,42,36,18,13,11,9,7,5,34,17,28,29,29,51,44,7,5,20,49,55,73,17,9,41,42,36,17,28,9,43,17,9,45,17,9,26,53,34,17,30,9,36,21,53,47,39,9,9,17,23,3,57,23,27,34,30,28,41,40,26,39,39,5,56,46,31,42,86,43,69,7,77,68,80,68,81,21,7,44,73,82,85,34,55,55,16,49,41,9,14,53,34,52,16,41,119,9,7,47,44,98,31,46,44,34,9,7,102,114,82,43,7,84,44,7,5,76,31,5,19,3,65,52,45,47,103,63,38,58,57,37,107,13,39,15,44,11,11,7,12,63,5,26,32,72,7,60,5,103,38,32,121,27,29,50,59,29,31,22,35,10,22,23,9,26,125,7,44,43,5,14,40,28,12,127,5,32,30,70,5,61,38,41,5,36,123,5,55,30,5,36,54,78,7,34,134,55,7,135,56,7,5,67,78,5,19,3,60,59,27,36,108,5,36,74,24,27,7,24,105,261,7,201,5,72,23,247,5,23,3,37,37,20,13,5,59,38,24,34,16,57,7,5,35,58,7,3,31,24,72,5,31,15,18,7,62,26,24,5,17,3,33,25,13,178,3,30,26,41,32,19,3,50,61,41,5,44,70,56,7,54,42,7,67,49,7,96,73,67,47,9,9,5,19,45,5,53,3,34,68,3,41,71,58,7,3,41,29,54,5,39,49,70,29,36,5,27,13,51,54,8,18,39,34,16,65,42,72,5,29,35,23,19,29,25,22,27,28,19,26,23,17,18,37,16,46,95,5,27,36,48,34,132,12,46,5,39,57,60,76,155,7,44,142,7,7,93,156,5,71,63,38,86,7,82,133,7,76,79,7,23,7,42,111,26,57,35,34,66,85,118,9,39,81,9,7,45,128,74,7,45,128,74,7,70,128,74,7,5,31,107,59,5,68,33,29,39,44,40,47,49,16,3,30,37,39,39,38,38,58,101,44,36,29,41,39,12,9,29,46,46,12,9,9,58,66,45,9,29,41,39,12,9,29,46,46,12,9,9,36,43,41,30,12,9,48,9,7,31,34,39,36,53,56,29,35,36,26,25,54,74,30,34,40,40,71,7,43,44,7,64,38,67,7,39,65,7,57,42,110,39,61,39,64,42,7,77,120,7,92,20,119,43,59,38,16,55,9,63,42,59,36,26,53,39,7,73,62,7,84,63,45,22,34,32,7,7,88,36,35,7,17,11,58,64,61,103,89,89,59,71,90,17,7,77,5,54,115,62,60,35,108,5,64,74,56,3,37,41,29,3,30,72,70,44,53,24,49,5,49,20,24,31,26,12,78,5,23,82,12,82,5,39,44,62,79,9,36,49,36,44,74,19,77,134,9,7,104,43,73,21,61,34,83,21,11,42,21,57,44,60,56,69,72,390,95,58,15,13,11,99,9,7,5,84,146,58,41,19,41,20,7,15,7,41,104,5,24,48,5,16,3,30,84,3,35,56,3,34,38,6,63,27,18,40,41,43,57,7,5,17,3,25,47,3,21,24,3,41,59,150,116,5,34,54,12,40,5,3,24,37,6,14,18,62,21,26,23,18,18,5,41,36,19,23,37,29,90,42,88,59,39,63,11,16,26,9,92,42,14,28,47,42,26,9,7,18,43,65,70,14,92,7,5,16,3,33,58,164,5,51,87,116,7,5,72,26,50,39,76,67,14,32,7,5,41,144,31,24,49,5,41,36,36,24,70,5,92,26,29,58,217,83,7,5,30,59,94,5,57,42,50,24,61,5,110,108,24,57,5,54,56,42,7,54,36,7,51,5,55,3,58,36,13,5,95,92,65,213,5,3,56,36,24,50,24,41,96,82,7,5,36,22,3,48,52,21,29,22,26,24,22,62,30,75,64,28,24,43,42,70,39,11,22,148,40,12,7,203,37,106,7,8,20,3,41,41,18,5,45,120,23,41,8,12,74,5,39,3,33,58,143,5,39,76,67,14,32,7,5,35,127,198,26,7,5,51,17,8,3,65,39,46,31,40,41,26,38,46,5,54,64,52,27,71,5,28,58,28,31,5,176,28,24,44,14,49,7,12,76,5,45,50,116,17,3,31,39,51,76,67,14,32,7,5,23,24,50,5,33,26,66,5,42,33,5,35,47,44,25,26,25,63,32,75,33,10,5,18,3,41,58,151,5,50,34,39,5,45,31,27,7,12,12,35,6,3,36,55,3,36,55,3,36,55,3,33,32,45,5,37,3,40,61,36,43,28,40,48,7,5,29,118,5,66,3,40,45,37,24,33,31,23,28,21,3,37,61,215,5,15,47,28,52,43,55,7,45,30,5,29,3,38,61,216,5,42,27,53,83,35,105,7,5,76,67,14,32,7,5,53,15,20,9,58,22,30,81,27,30,7,52,43,55,7,31,31,11,59,76,60,9,31,21,68,20,70,102,111,177,53,85,106,20,9,39,46,67,70,176,13,13,9,64,63,21,34,20,37,7,15,47,35,7,5,3,40,37,100,5,54,41,53,5,46,14,28,9,56,81,46,7,63,29,19,119,18,7,53,33,5,3,40,30,18,22,20,33,76,67,14,32,7,5,62,62,92,40,25,32,50,26,31,5,27,39,5,67,114,91,58,56,77,76,5,56,77,98,5,51,121,5,112,48,48,5,24,59,5,135,28,31,24,58,20,5,18,3,50,26,16,5,51,58,39,76,67,14,32,7,5,25,36,43,28,40,48,7,5,115,65,33,24,20,31,31,19,42,35,37,16,36,9,7,163,84,7,139,85,7,35,76,65,65,50,93,144,16,85,9,7,27,71,7,30,26,61,57,62,15,53,25,76,11,12,29,28,59,9,7,37,62,81,28,23,13,42,51,52,49,12,14,58,131,44,61,48,67,40,63,69,15,13,47,21,13,95,48,39,23,112,60,75,74,119,13,14,9,48,45,56,40,59,50,13,11,56,40,59,50,13,11,79,55,28,11,21,11,41,51,101,9,41,121,44,129,18,34,45,41,45,15,13,100,58,56,13,124,11,9,70,113,9,134,37,42,43,39,162,25,15,70,43,128,76,15,13,13,9,7,56,205,42,59,46,54,43,40,59,40,70,193,80,17,63,69,15,13,11,45,19,11,93,46,37,21,110,61,33,60,75,74,45,120,139,52,80,98,269,29,19,99,17,15,37,13,109,48,39,23,68,107,72,11,12,7,40,49,159,93,72,11,73,40,9,37,9,27,70,7,24,6,57,3,34,45,28,39,3,33,39,76,67,14,32,7,5,31,59,104,5,149,123,5,35,18,29,19,21,28,7,41,45,25,24,56,5,18,34,153,104,5,15,64,43,31,89,82,21,130,8,71,161,12,110,5,34,103,5,24,55,5,18,3,33,45,47,30,18,28,16,76,67,14,32,7,5,34,25,45,24,56,5,18,34,170,104,5,29,61,64,148,84,29,143,34,103,5,24,55,5,18,3,40,39,76,67,14,32,7,5,31,43,62,21,18,29,23,19,23,8,41,59,60,46,44,29,9,7,12,64,94,69,43,7,5,65,160,5,25,18,27,39,113,32,68,70,7,88,55,28,48,68,7,5,24,34,55,34,32,5,23,18,35,34,38,29,41,33,37,34,9,29,26,30,73,53,50,66,52,13,13,65,27,41,62,68,51,15,15,33,48,20,71,13,11,26,12,25,50,28,38,59,11,16,75,82,27,29,15,53,52,14,36,9,7,5,15,29,45,127,19,12,76,57,74,149,30,53,33,14,32,7,5,34,102,28,5,24,34,54,32,5,18,3,42,138,3,37,80,105,5,18,3,37,47,13,5,53,37,91,5,37,65,5,36,3,32,47,42,3,55,21,3,26,74,3,43,28,35,24,32,34,104,45,9,17,9,54,61,104,61,16,35,9,25,13,5,31,43,43,12,16,21,7,45,45,52,37,32,35,35,52,7,12,39,5,33,79,5,42,62,86,80,131,5,49,21,24,143,12,143,5,28,49,5,26,3,43,64,11,18,22,8,3,44,89,208,3,23,87,61,20,11,30,54,5,59,38,64,5,61,3,14,65,3,21,32,3,28,56,43,30,5,33,3,21,56,20,19,5,28,14,91,65,7,95,50,79,9,52,51,9,36,7,34,5,92,24,15,35,43,85,21,11,80,51,11,9,7,37,129,49,9,7,20,5,27,3,28,15,22,50,19,28,26,29,36,36,9,7,188,50,49,16,35,9,71,14,33,37,35,41,25,15,46,13,12,38,55,57,11,43,48,11,16,38,50,11,9,26,73,9,7,18,5,17,19,23,43,5,51,54,44,48,54,32,7,12,95,46,20,7,25,38,93,73,57,54,52,13,11,22,9,103,22,9,124,22,9,7,137,85,7,319,54,32,7,35,5,16,3,26,29,3,23,25,35,41,7,19,5,25,29,18,5,26,32,18,5,34,3,17,14,43,5,83,3,36,30,22,36,59,5,50,44,25,66,26,36,31,41,37,29,23,44,6,16,85,44,35,27,9,81,111,14,69,113,7,5,3,23,31,89,5,39,76,67,14,32,7,5,35,18,20,7,26,29,69,14,101,7,45,5,39,32,34,36,33,7,5,64,97,74,59,56,42,58,72,96,41,5,92,39,5,99,63,28,5,36,69,43,7,112,47,7,5,37,81,143,7,5,85,99,5,79,99,5,71,136,5,27,35,5,24,71,71,22,26,68,64,7,70,55,95,25,57,63,34,11,9,68,7,24,31,96,39,30,9,7,5,109,132,46,22,17,91,43,35,28,19,44,107,10,5,105,27,18,45,18,104,95,21,18,14,27,23,77,12,31,24,78,7,23,84,5,88,22,28,55,43,17,15,11,14,66,7,5,69,175,74,66,7,5,45,45,80,208,45,23,17,38,34,91,43,35,28,19,61,61,48,44,110,115,50,67,96,256,27,17,87,15,13,83,18,168,63,48,11,12,10,5,24,71,5,41,67,33,5,29,18,3,25,30,25,17,46,7,61,20,140,5,38,35,16,32,7,16,3,27,59,3,33,59,47,28,31,36,39,76,67,14,32,7,5,48,43,33,68,61,26,62,45,5,36,3,26,30,18,18,16,76,67,14,32,7,5,24,70,5,35,15,85,76,70,123,60,75,69,53,7,93,12,180,5,24,69,5,18,3,19,59,47,5,111,139,88,45,17,3,26,57,47,30,18,18,16,76,67,14,32,7,5,24,70,5,73,76,148,59,114,24,69,20,5,18,3,36,36,39,82,28,54,16,3,36,64,11,18,22,8,3,17,39,19,5,47,19,5,146,3,23,54,3,40,44,3,12,33,17,8,3,35,3,41,3,34,3,37,3,1,27,27,17,3,43,26,11,3,48,17,3,33,18,1,47,38,29,18,3,38,29,18,3,10,47,4,1,40,27,23,33,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/model.js"],"sourcesContent":["'use strict';\n\nconst assert = require('assert');\nconst _ = require('lodash');\nconst Dottie = require('dottie');\n\nconst Utils = require('./utils');\nconst { logger } = require('./utils/logger');\nconst BelongsTo = require('./associations/belongs-to');\nconst BelongsToMany = require('./associations/belongs-to-many');\nconst InstanceValidator = require('./instance-validator');\nconst QueryTypes = require('./query-types');\nconst sequelizeErrors = require('./errors');\nconst Association = require('./associations/base');\nconst HasMany = require('./associations/has-many');\nconst DataTypes = require('./data-types');\nconst Hooks = require('./hooks');\nconst associationsMixin = require('./associations/mixin');\nconst Op = require('./operators');\nconst { noDoubleNestedGroup } = require('./utils/deprecations');\n\n\n// This list will quickly become dated, but failing to maintain this list just means\n// we won't throw a warning when we should. At least most common cases will forever be covered\n// so we stop throwing erroneous warnings when we shouldn't.\nconst validQueryKeywords = new Set(['where', 'attributes', 'paranoid', 'include', 'order', 'limit', 'offset',\n  'transaction', 'lock', 'raw', 'logging', 'benchmark', 'having', 'searchPath', 'rejectOnEmpty', 'plain',\n  'scope', 'group', 'through', 'defaults', 'distinct', 'primary', 'exception', 'type', 'hooks', 'force',\n  'name']);\n\n// List of attributes that should not be implicitly passed into subqueries/includes.\nconst nonCascadingOptions = ['include', 'attributes', 'originalAttributes', 'order', 'where', 'limit', 'offset', 'plain', 'group', 'having'];\n\n/**\n * A Model represents a table in the database. Instances of this class represent a database row.\n *\n * Model instances operate with the concept of a `dataValues` property, which stores the actual values represented by the instance.\n * By default, the values from dataValues can also be accessed directly from the Instance, that is:\n * ```js\n * instance.field\n * // is the same as\n * instance.get('field')\n * // is the same as\n * instance.getDataValue('field')\n * ```\n * However, if getters and/or setters are defined for `field` they will be invoked, instead of returning the value from `dataValues`.\n * Accessing properties directly or using `get` is preferred for regular use, `getDataValue` should only be used for custom getters.\n *\n * @see\n   * {@link Sequelize#define} for more information about getters and setters\n * @mixes Hooks\n */\nclass Model {\n  static get queryInterface() {\n    return this.sequelize.getQueryInterface();\n  }\n\n  static get queryGenerator() {\n    return this.queryInterface.queryGenerator;\n  }\n\n  /**\n   * A reference to the sequelize instance\n   *\n   * @see\n   * {@link Sequelize}\n   *\n   * @property sequelize\n   *\n   * @returns {Sequelize}\n   */\n  get sequelize() {\n    return this.constructor.sequelize;\n  }\n\n  /**\n   * Builds a new model instance.\n   *\n   * @param {object}  [values={}] an object of key value pairs\n   * @param {object}  [options] instance construction options\n   * @param {boolean} [options.raw=false] If set to true, values will ignore field and virtual setters.\n   * @param {boolean} [options.isNewRecord=true] Is this a new record\n   * @param {Array}   [options.include] an array of include options - Used to build prefetched/included model instances. See `set`\n   */\n  constructor(values = {}, options = {}) {\n    if (!this.constructor._overwrittenAttributesChecked) {\n      this.constructor._overwrittenAttributesChecked = true;\n\n      // setTimeout is hacky but necessary.\n      // Public Class Fields declared by descendants of this class\n      // will not be available until after their call to super, so after\n      // this constructor is done running.\n      setTimeout(() => {\n        const overwrittenAttributes = [];\n        for (const key of Object.keys(this.constructor._attributeManipulation)) {\n          if (Object.prototype.hasOwnProperty.call(this, key)) {\n            overwrittenAttributes.push(key);\n          }\n        }\n\n        if (overwrittenAttributes.length > 0) {\n          logger.warn(`Model ${JSON.stringify(this.constructor.name)} is declaring public class fields for attribute(s): ${overwrittenAttributes.map(attr => JSON.stringify(attr)).join(', ')}.` +\n            '\\nThese class fields are shadowing Sequelize\\'s attribute getters & setters.' +\n            '\\nSee https://sequelize.org/main/manual/model-basics.html#caveat-with-public-class-fields');\n        }\n      }, 0);\n    }\n\n    options = {\n      isNewRecord: true,\n      _schema: this.constructor._schema,\n      _schemaDelimiter: this.constructor._schemaDelimiter,\n      ...options\n    };\n\n    if (options.attributes) {\n      options.attributes = options.attributes.map(attribute => Array.isArray(attribute) ? attribute[1] : attribute);\n    }\n\n    if (!options.includeValidated) {\n      this.constructor._conformIncludes(options, this.constructor);\n      if (options.include) {\n        this.constructor._expandIncludeAll(options);\n        this.constructor._validateIncludedElements(options);\n      }\n    }\n\n    this.dataValues = {};\n    this._previousDataValues = {};\n    this.uniqno = 1;\n    this._changed = new Set();\n    this._options = options;\n\n    /**\n     * Returns true if this instance has not yet been persisted to the database\n     *\n     * @property isNewRecord\n     * @returns {boolean}\n     */\n    this.isNewRecord = options.isNewRecord;\n\n    this._initValues(values, options);\n  }\n\n  _initValues(values, options) {\n    let defaults;\n    let key;\n\n    values = { ...values };\n\n    if (options.isNewRecord) {\n      defaults = {};\n\n      if (this.constructor._hasDefaultValues) {\n        defaults = _.mapValues(this.constructor._defaultValues, valueFn => {\n          const value = valueFn();\n          return value && value instanceof Utils.SequelizeMethod ? value : _.cloneDeep(value);\n        });\n      }\n\n      // set id to null if not passed as value, a newly created dao has no id\n      // removing this breaks bulkCreate\n      // do after default values since it might have UUID as a default value\n      if (this.constructor.primaryKeyAttributes.length) {\n        this.constructor.primaryKeyAttributes.forEach(primaryKeyAttribute => {\n          if (!Object.prototype.hasOwnProperty.call(defaults, primaryKeyAttribute)) {\n            defaults[primaryKeyAttribute] = null;\n          }\n        });\n      }\n\n      if (this.constructor._timestampAttributes.createdAt && defaults[this.constructor._timestampAttributes.createdAt]) {\n        this.dataValues[this.constructor._timestampAttributes.createdAt] = Utils.toDefaultValue(defaults[this.constructor._timestampAttributes.createdAt], this.sequelize.options.dialect);\n        delete defaults[this.constructor._timestampAttributes.createdAt];\n      }\n\n      if (this.constructor._timestampAttributes.updatedAt && defaults[this.constructor._timestampAttributes.updatedAt]) {\n        this.dataValues[this.constructor._timestampAttributes.updatedAt] = Utils.toDefaultValue(defaults[this.constructor._timestampAttributes.updatedAt], this.sequelize.options.dialect);\n        delete defaults[this.constructor._timestampAttributes.updatedAt];\n      }\n\n      if (this.constructor._timestampAttributes.deletedAt && defaults[this.constructor._timestampAttributes.deletedAt]) {\n        this.dataValues[this.constructor._timestampAttributes.deletedAt] = Utils.toDefaultValue(defaults[this.constructor._timestampAttributes.deletedAt], this.sequelize.options.dialect);\n        delete defaults[this.constructor._timestampAttributes.deletedAt];\n      }\n\n      for (key in defaults) {\n        if (values[key] === undefined) {\n          this.set(key, Utils.toDefaultValue(defaults[key], this.sequelize.options.dialect), { raw: true });\n          delete values[key];\n        }\n      }\n    }\n\n    this.set(values, options);\n  }\n\n  // validateIncludedElements should have been called before this method\n  static _paranoidClause(model, options = {}) {\n    // Apply on each include\n    // This should be handled before handling where conditions because of logic with returns\n    // otherwise this code will never run on includes of a already conditionable where\n    if (options.include) {\n      for (const include of options.include) {\n        this._paranoidClause(include.model, include);\n      }\n    }\n\n    // apply paranoid when groupedLimit is used\n    if (_.get(options, 'groupedLimit.on.options.paranoid')) {\n      const throughModel = _.get(options, 'groupedLimit.on.through.model');\n      if (throughModel) {\n        options.groupedLimit.through = this._paranoidClause(throughModel, options.groupedLimit.through);\n      }\n    }\n\n    if (!model.options.timestamps || !model.options.paranoid || options.paranoid === false) {\n      // This model is not paranoid, nothing to do here;\n      return options;\n    }\n\n    const deletedAtCol = model._timestampAttributes.deletedAt;\n    const deletedAtAttribute = model.rawAttributes[deletedAtCol];\n    const deletedAtObject = {};\n\n    let deletedAtDefaultValue = Object.prototype.hasOwnProperty.call(deletedAtAttribute, 'defaultValue') ? deletedAtAttribute.defaultValue : null;\n\n    deletedAtDefaultValue = deletedAtDefaultValue || {\n      [Op.eq]: null\n    };\n\n    deletedAtObject[deletedAtAttribute.field || deletedAtCol] = deletedAtDefaultValue;\n\n    if (Utils.isWhereEmpty(options.where)) {\n      options.where = deletedAtObject;\n    } else {\n      options.where = { [Op.and]: [deletedAtObject, options.where] };\n    }\n\n    return options;\n  }\n\n  static _addDefaultAttributes() {\n    const tail = {};\n    let head = {};\n\n    // Add id if no primary key was manually added to definition\n    // Can't use this.primaryKeys here, since this function is called before PKs are identified\n    if (!_.some(this.rawAttributes, 'primaryKey')) {\n      if ('id' in this.rawAttributes) {\n        // Something is fishy here!\n        throw new Error(`A column called 'id' was added to the attributes of '${this.tableName}' but not marked with 'primaryKey: true'`);\n      }\n\n      head = {\n        id: {\n          type: new DataTypes.INTEGER(),\n          allowNull: false,\n          primaryKey: true,\n          autoIncrement: true,\n          _autoGenerated: true\n        }\n      };\n    }\n\n    if (this._timestampAttributes.createdAt) {\n      tail[this._timestampAttributes.createdAt] = {\n        type: DataTypes.DATE,\n        allowNull: false,\n        _autoGenerated: true\n      };\n    }\n\n    if (this._timestampAttributes.updatedAt) {\n      tail[this._timestampAttributes.updatedAt] = {\n        type: DataTypes.DATE,\n        allowNull: false,\n        _autoGenerated: true\n      };\n    }\n\n    if (this._timestampAttributes.deletedAt) {\n      tail[this._timestampAttributes.deletedAt] = {\n        type: DataTypes.DATE,\n        _autoGenerated: true\n      };\n    }\n\n    if (this._versionAttribute) {\n      tail[this._versionAttribute] = {\n        type: DataTypes.INTEGER,\n        allowNull: false,\n        defaultValue: 0,\n        _autoGenerated: true\n      };\n    }\n\n    const newRawAttributes = {\n      ...head,\n      ...this.rawAttributes\n    };\n    _.each(tail, (value, attr) => {\n      if (newRawAttributes[attr] === undefined) {\n        newRawAttributes[attr] = value;\n      }\n    });\n\n    this.rawAttributes = newRawAttributes;\n\n    if (!Object.keys(this.primaryKeys).length) {\n      this.primaryKeys.id = this.rawAttributes.id;\n    }\n  }\n\n  /**\n   * Returns the attributes of the model.\n   *\n   * @returns {object|any}\n  */\n  static getAttributes() {\n    return this.rawAttributes;\n  }\n\n  static _findAutoIncrementAttribute() {\n    this.autoIncrementAttribute = null;\n\n    for (const name in this.rawAttributes) {\n      if (Object.prototype.hasOwnProperty.call(this.rawAttributes, name)) {\n        const definition = this.rawAttributes[name];\n        if (definition && definition.autoIncrement) {\n          if (this.autoIncrementAttribute) {\n            throw new Error('Invalid Instance definition. Only one autoincrement field allowed.');\n          }\n          this.autoIncrementAttribute = name;\n        }\n      }\n    }\n  }\n\n  static _conformIncludes(options, self) {\n    if (!options.include) return;\n\n    // if include is not an array, wrap in an array\n    if (!Array.isArray(options.include)) {\n      options.include = [options.include];\n    } else if (!options.include.length) {\n      delete options.include;\n      return;\n    }\n\n    // convert all included elements to { model: Model } form\n    options.include = options.include.map(include => this._conformInclude(include, self));\n  }\n\n  static _transformStringAssociation(include, self) {\n    if (self && typeof include === 'string') {\n      if (!Object.prototype.hasOwnProperty.call(self.associations, include)) {\n        throw new Error(`Association with alias \"${include}\" does not exist on ${self.name}`);\n      }\n      return self.associations[include];\n    }\n    return include;\n  }\n\n  static _conformInclude(include, self) {\n    if (include) {\n      let model;\n\n      if (include._pseudo) return include;\n\n      include = this._transformStringAssociation(include, self);\n\n      if (include instanceof Association) {\n        if (self && include.target.name === self.name) {\n          model = include.source;\n        } else {\n          model = include.target;\n        }\n\n        return { model, association: include, as: include.as };\n      }\n\n      if (include.prototype && include.prototype instanceof Model) {\n        return { model: include };\n      }\n\n      if (_.isPlainObject(include)) {\n        if (include.association) {\n          include.association = this._transformStringAssociation(include.association, self);\n\n          if (self && include.association.target.name === self.name) {\n            model = include.association.source;\n          } else {\n            model = include.association.target;\n          }\n\n          if (!include.model) include.model = model;\n          if (!include.as) include.as = include.association.as;\n\n          this._conformIncludes(include, model);\n          return include;\n        }\n\n        if (include.model) {\n          this._conformIncludes(include, include.model);\n          return include;\n        }\n\n        if (include.all) {\n          this._conformIncludes(include);\n          return include;\n        }\n      }\n    }\n\n    throw new Error('Include unexpected. Element has to be either a Model, an Association or an object.');\n  }\n\n  static _expandIncludeAllElement(includes, include) {\n    // check 'all' attribute provided is valid\n    let all = include.all;\n    delete include.all;\n\n    if (all !== true) {\n      if (!Array.isArray(all)) {\n        all = [all];\n      }\n\n      const validTypes = {\n        BelongsTo: true,\n        HasOne: true,\n        HasMany: true,\n        One: ['BelongsTo', 'HasOne'],\n        Has: ['HasOne', 'HasMany'],\n        Many: ['HasMany']\n      };\n\n      for (let i = 0; i < all.length; i++) {\n        const type = all[i];\n        if (type === 'All') {\n          all = true;\n          break;\n        }\n\n        const types = validTypes[type];\n        if (!types) {\n          throw new sequelizeErrors.EagerLoadingError(`include all '${type}' is not valid - must be BelongsTo, HasOne, HasMany, One, Has, Many or All`);\n        }\n\n        if (types !== true) {\n          // replace type placeholder e.g. 'One' with its constituent types e.g. 'HasOne', 'BelongsTo'\n          all.splice(i, 1);\n          i--;\n          for (let j = 0; j < types.length; j++) {\n            if (!all.includes(types[j])) {\n              all.unshift(types[j]);\n              i++;\n            }\n          }\n        }\n      }\n    }\n\n    // add all associations of types specified to includes\n    const nested = include.nested;\n    if (nested) {\n      delete include.nested;\n\n      if (!include.include) {\n        include.include = [];\n      } else if (!Array.isArray(include.include)) {\n        include.include = [include.include];\n      }\n    }\n\n    const used = [];\n    (function addAllIncludes(parent, includes) {\n      _.forEach(parent.associations, association => {\n        if (all !== true && !all.includes(association.associationType)) {\n          return;\n        }\n\n        // check if model already included, and skip if so\n        const model = association.target;\n        const as = association.options.as;\n\n        const predicate = { model };\n        if (as) {\n          // We only add 'as' to the predicate if it actually exists\n          predicate.as = as;\n        }\n\n        if (_.some(includes, predicate)) {\n          return;\n        }\n\n        // skip if recursing over a model already nested\n        if (nested && used.includes(model)) {\n          return;\n        }\n        used.push(parent);\n\n        // include this model\n        const thisInclude = Utils.cloneDeep(include);\n        thisInclude.model = model;\n        if (as) {\n          thisInclude.as = as;\n        }\n        includes.push(thisInclude);\n\n        // run recursively if nested\n        if (nested) {\n          addAllIncludes(model, thisInclude.include);\n          if (thisInclude.include.length === 0) delete thisInclude.include;\n        }\n      });\n      used.pop();\n    })(this, includes);\n  }\n\n  static _validateIncludedElements(options, tableNames) {\n    if (!options.model) options.model = this;\n\n    tableNames = tableNames || {};\n    options.includeNames = [];\n    options.includeMap = {};\n\n    /* Legacy */\n    options.hasSingleAssociation = false;\n    options.hasMultiAssociation = false;\n\n    if (!options.parent) {\n      options.topModel = options.model;\n      options.topLimit = options.limit;\n    }\n\n    options.include = options.include.map(include => {\n      include = this._conformInclude(include);\n      include.parent = options;\n      include.topLimit = options.topLimit;\n\n      this._validateIncludedElement.call(options.model, include, tableNames, options);\n\n      if (include.duplicating === undefined) {\n        include.duplicating = include.association.isMultiAssociation;\n      }\n\n      include.hasDuplicating = include.hasDuplicating || include.duplicating;\n      include.hasRequired = include.hasRequired || include.required;\n\n      options.hasDuplicating = options.hasDuplicating || include.hasDuplicating;\n      options.hasRequired = options.hasRequired || include.required;\n\n      options.hasWhere = options.hasWhere || include.hasWhere || !!include.where;\n      return include;\n    });\n\n    for (const include of options.include) {\n      include.hasParentWhere = options.hasParentWhere || !!options.where;\n      include.hasParentRequired = options.hasParentRequired || !!options.required;\n\n      if (include.subQuery !== false && options.hasDuplicating && options.topLimit) {\n        if (include.duplicating) {\n          include.subQuery = include.subQuery || false;\n          include.subQueryFilter = include.hasRequired;\n        } else {\n          include.subQuery = include.hasRequired;\n          include.subQueryFilter = false;\n        }\n      } else {\n        include.subQuery = include.subQuery || false;\n        if (include.duplicating) {\n          include.subQueryFilter = include.subQuery;\n        } else {\n          include.subQueryFilter = false;\n          include.subQuery = include.subQuery || include.hasParentRequired && include.hasRequired && !include.separate;\n        }\n      }\n\n      options.includeMap[include.as] = include;\n      options.includeNames.push(include.as);\n\n      // Set top level options\n      if (options.topModel === options.model && options.subQuery === undefined && options.topLimit) {\n        if (include.subQuery) {\n          options.subQuery = include.subQuery;\n        } else if (include.hasDuplicating) {\n          options.subQuery = true;\n        }\n      }\n\n      /* Legacy */\n      options.hasIncludeWhere = options.hasIncludeWhere || include.hasIncludeWhere || !!include.where;\n      options.hasIncludeRequired = options.hasIncludeRequired || include.hasIncludeRequired || !!include.required;\n\n      if (include.association.isMultiAssociation || include.hasMultiAssociation) {\n        options.hasMultiAssociation = true;\n      }\n      if (include.association.isSingleAssociation || include.hasSingleAssociation) {\n        options.hasSingleAssociation = true;\n      }\n    }\n\n    if (options.topModel === options.model && options.subQuery === undefined) {\n      options.subQuery = false;\n    }\n    return options;\n  }\n\n  static _validateIncludedElement(include, tableNames, options) {\n    tableNames[include.model.getTableName()] = true;\n\n    if (include.attributes && !options.raw) {\n      include.model._expandAttributes(include);\n\n      include.originalAttributes = include.model._injectDependentVirtualAttributes(include.attributes);\n\n      include = Utils.mapFinderOptions(include, include.model);\n\n      if (include.attributes.length) {\n        _.each(include.model.primaryKeys, (attr, key) => {\n          // Include the primary key if it's not already included - take into account that the pk might be aliased (due to a .field prop)\n          if (!include.attributes.some(includeAttr => {\n            if (attr.field !== key) {\n              return Array.isArray(includeAttr) && includeAttr[0] === attr.field && includeAttr[1] === key;\n            }\n            return includeAttr === key;\n          })) {\n            include.attributes.unshift(key);\n          }\n        });\n      }\n    } else {\n      include = Utils.mapFinderOptions(include, include.model);\n    }\n\n    // pseudo include just needed the attribute logic, return\n    if (include._pseudo) {\n      if (!include.attributes) {\n        include.attributes = Object.keys(include.model.tableAttributes);\n      }\n      return Utils.mapFinderOptions(include, include.model);\n    }\n\n    // check if the current Model is actually associated with the passed Model - or it's a pseudo include\n    const association = include.association || this._getIncludedAssociation(include.model, include.as);\n\n    include.association = association;\n    include.as = association.as;\n\n    // If through, we create a pseudo child include, to ease our parsing later on\n    if (include.association.through && Object(include.association.through.model) === include.association.through.model) {\n      if (!include.include) include.include = [];\n      const through = include.association.through;\n\n      include.through = _.defaults(include.through || {}, {\n        model: through.model,\n        as: through.model.name,\n        association: {\n          isSingleAssociation: true\n        },\n        _pseudo: true,\n        parent: include\n      });\n\n\n      if (through.scope) {\n        include.through.where = include.through.where ? { [Op.and]: [include.through.where, through.scope] } : through.scope;\n      }\n\n      include.include.push(include.through);\n      tableNames[through.tableName] = true;\n    }\n\n    // include.model may be the main model, while the association target may be scoped - thus we need to look at association.target/source\n    let model;\n    if (include.model.scoped === true) {\n      // If the passed model is already scoped, keep that\n      model = include.model;\n    } else {\n      // Otherwise use the model that was originally passed to the association\n      model = include.association.target.name === include.model.name ? include.association.target : include.association.source;\n    }\n\n    model._injectScope(include);\n\n    // This check should happen after injecting the scope, since the scope may contain a .attributes\n    if (!include.attributes) {\n      include.attributes = Object.keys(include.model.tableAttributes);\n    }\n\n    include = Utils.mapFinderOptions(include, include.model);\n\n    if (include.required === undefined) {\n      include.required = !!include.where;\n    }\n\n    if (include.association.scope) {\n      include.where = include.where ? { [Op.and]: [include.where, include.association.scope] } : include.association.scope;\n    }\n\n    if (include.limit && include.separate === undefined) {\n      include.separate = true;\n    }\n\n    if (include.separate === true) {\n      if (!(include.association instanceof HasMany)) {\n        throw new Error('Only HasMany associations support include.separate');\n      }\n\n      include.duplicating = false;\n\n      if (\n        options.attributes\n        && options.attributes.length\n        && !_.flattenDepth(options.attributes, 2).includes(association.sourceKey)\n      ) {\n        options.attributes.push(association.sourceKey);\n      }\n\n      if (\n        include.attributes\n        && include.attributes.length\n        && !_.flattenDepth(include.attributes, 2).includes(association.foreignKey)\n      ) {\n        include.attributes.push(association.foreignKey);\n      }\n    }\n\n    // Validate child includes\n    if (Object.prototype.hasOwnProperty.call(include, 'include')) {\n      this._validateIncludedElements.call(include.model, include, tableNames);\n    }\n\n    return include;\n  }\n\n  static _getIncludedAssociation(targetModel, targetAlias) {\n    const associations = this.getAssociations(targetModel);\n    let association = null;\n    if (associations.length === 0) {\n      throw new sequelizeErrors.EagerLoadingError(`${targetModel.name} is not associated to ${this.name}!`);\n    }\n    if (associations.length === 1) {\n      association = this.getAssociationForAlias(targetModel, targetAlias);\n      if (association) {\n        return association;\n      }\n      if (targetAlias) {\n        const existingAliases = this.getAssociations(targetModel).map(association => association.as);\n        throw new sequelizeErrors.EagerLoadingError(`${targetModel.name} is associated to ${this.name} using an alias. ` +\n          `You've included an alias (${targetAlias}), but it does not match the alias(es) defined in your association (${existingAliases.join(', ')}).`);\n      }\n      throw new sequelizeErrors.EagerLoadingError(`${targetModel.name} is associated to ${this.name} using an alias. ` +\n        'You must use the \\'as\\' keyword to specify the alias within your include statement.');\n    }\n    association = this.getAssociationForAlias(targetModel, targetAlias);\n    if (!association) {\n      throw new sequelizeErrors.EagerLoadingError(`${targetModel.name} is associated to ${this.name} multiple times. ` +\n        'To identify the correct association, you must use the \\'as\\' keyword to specify the alias of the association you want to include.');\n    }\n    return association;\n  }\n\n\n  static _expandIncludeAll(options) {\n    const includes = options.include;\n    if (!includes) {\n      return;\n    }\n\n    for (let index = 0; index < includes.length; index++) {\n      const include = includes[index];\n\n      if (include.all) {\n        includes.splice(index, 1);\n        index--;\n\n        this._expandIncludeAllElement(includes, include);\n      }\n    }\n\n    includes.forEach(include => {\n      this._expandIncludeAll.call(include.model, include);\n    });\n  }\n\n  static _conformIndex(index) {\n    if (!index.fields) {\n      throw new Error('Missing \"fields\" property for index definition');\n    }\n\n    index = _.defaults(index, {\n      type: '',\n      parser: null\n    });\n\n    if (index.type && index.type.toLowerCase() === 'unique') {\n      index.unique = true;\n      delete index.type;\n    }\n\n    return index;\n  }\n\n\n  static _uniqIncludes(options) {\n    if (!options.include) return;\n\n    options.include = _(options.include)\n      .groupBy(include => `${include.model && include.model.name}-${include.as}`)\n      .map(includes => this._assignOptions(...includes))\n      .value();\n  }\n\n  static _baseMerge(...args) {\n    _.assignWith(...args);\n    this._conformIncludes(args[0], this);\n    this._uniqIncludes(args[0]);\n    return args[0];\n  }\n\n  static _mergeFunction(objValue, srcValue, key) {\n    if (Array.isArray(objValue) && Array.isArray(srcValue)) {\n      return _.union(objValue, srcValue);\n    }\n\n    if (['where', 'having'].includes(key)) {\n      if (this.options && this.options.whereMergeStrategy === 'and') {\n        return combineWheresWithAnd(objValue, srcValue);\n      }\n\n      if (srcValue instanceof Utils.SequelizeMethod) {\n        srcValue = { [Op.and]: srcValue };\n      }\n\n      if (_.isPlainObject(objValue) && _.isPlainObject(srcValue)) {\n        return Object.assign(objValue, srcValue);\n      }\n    } else if (key === 'attributes' && _.isPlainObject(objValue) && _.isPlainObject(srcValue)) {\n      return _.assignWith(objValue, srcValue, (objValue, srcValue) => {\n        if (Array.isArray(objValue) && Array.isArray(srcValue)) {\n          return _.union(objValue, srcValue);\n        }\n      });\n    }\n    // If we have a possible object/array to clone, we try it.\n    // Otherwise, we return the original value when it's not undefined,\n    // or the resulting object in that case.\n    if (srcValue) {\n      return Utils.cloneDeep(srcValue, true);\n    }\n    return srcValue === undefined ? objValue : srcValue;\n  }\n\n  static _assignOptions(...args) {\n    return this._baseMerge(...args, this._mergeFunction.bind(this));\n  }\n\n  static _defaultsOptions(target, opts) {\n    return this._baseMerge(target, opts, (srcValue, objValue, key) => {\n      return this._mergeFunction(objValue, srcValue, key);\n    });\n  }\n\n  /**\n   * Initialize a model, representing a table in the DB, with attributes and options.\n   *\n   * The table columns are defined by the hash that is given as the first argument.\n   * Each attribute of the hash represents a column.\n   *\n   * @example\n   * Project.init({\n   *   columnA: {\n   *     type: Sequelize.BOOLEAN,\n   *     validate: {\n   *       is: ['[a-z]','i'],        // will only allow letters\n   *       max: 23,                  // only allow values <= 23\n   *       isIn: {\n   *         args: [['en', 'zh']],\n   *         msg: \"Must be English or Chinese\"\n   *       }\n   *     },\n   *     field: 'column_a'\n   *     // Other attributes here\n   *   },\n   *   columnB: Sequelize.STRING,\n   *   columnC: 'MY VERY OWN COLUMN TYPE'\n   * }, {sequelize})\n   *\n   * sequelize.models.modelName // The model will now be available in models under the class name\n   *\n   * @see\n   * <a href=\"/master/manual/model-basics.html\">Model Basics</a> guide\n   *\n   * @see\n   * <a href=\"/master/manual/model-basics.html\">Hooks</a> guide\n   *\n   * @see\n   * <a href=\"/master/manual/validations-and-constraints.html\"/>Validations & Constraints</a> guide\n   *\n   * @param {object}                  attributes An object, where each attribute is a column of the table. Each column can be either a DataType, a string or a type-description object, with the properties described below:\n   * @param {string|DataTypes|object} attributes.column The description of a database column\n   * @param {string|DataTypes}        attributes.column.type A string or a data type\n   * @param {boolean}                 [attributes.column.allowNull=true] If false, the column will have a NOT NULL constraint, and a not null validation will be run before an instance is saved.\n   * @param {any}                     [attributes.column.defaultValue=null] A literal default value, a JavaScript function, or an SQL function (see `sequelize.fn`)\n   * @param {string|boolean}          [attributes.column.unique=false] If true, the column will get a unique constraint. If a string is provided, the column will be part of a composite unique index. If multiple columns have the same string, they will be part of the same unique index\n   * @param {boolean}                 [attributes.column.primaryKey=false] If true, this attribute will be marked as primary key\n   * @param {string}                  [attributes.column.field=null] If set, sequelize will map the attribute name to a different name in the database\n   * @param {boolean}                 [attributes.column.autoIncrement=false] If true, this column will be set to auto increment\n   * @param {boolean}                 [attributes.column.autoIncrementIdentity=false] If true, combined with autoIncrement=true, will use Postgres `GENERATED BY DEFAULT AS IDENTITY` instead of `SERIAL`. Postgres 10+ only.\n   * @param {string}                  [attributes.column.comment=null] Comment for this column\n   * @param {string|Model}            [attributes.column.references=null] An object with reference configurations\n   * @param {string|Model}            [attributes.column.references.model] If this column references another table, provide it here as a Model, or a string\n   * @param {string}                  [attributes.column.references.key='id'] The column of the foreign table that this column references\n   * @param {string}                  [attributes.column.onUpdate] What should happen when the referenced key is updated. One of CASCADE, RESTRICT, SET DEFAULT, SET NULL or NO ACTION\n   * @param {string}                  [attributes.column.onDelete] What should happen when the referenced key is deleted. One of CASCADE, RESTRICT, SET DEFAULT, SET NULL or NO ACTION\n   * @param {Function}                [attributes.column.get] Provide a custom getter for this column. Use `this.getDataValue(String)` to manipulate the underlying values.\n   * @param {Function}                [attributes.column.set] Provide a custom setter for this column. Use `this.setDataValue(String, Value)` to manipulate the underlying values.\n   * @param {object}                  [attributes.column.validate] An object of validations to execute for this column every time the model is saved. Can be either the name of a validation provided by validator.js, a validation function provided by extending validator.js (see the `DAOValidator` property for more details), or a custom validation function. Custom validation functions are called with the value of the field and the instance itself as the `this` binding, and can possibly take a second callback argument, to signal that they are asynchronous. If the validator is sync, it should throw in the case of a failed validation; if it is async, the callback should be called with the error text.\n   * @param {object}                  options These options are merged with the default define options provided to the Sequelize constructor\n   * @param {object}                  options.sequelize Define the sequelize instance to attach to the new Model. Throw error if none is provided.\n   * @param {string}                  [options.modelName] Set name of the model. By default its same as Class name.\n   * @param {object}                  [options.defaultScope={}] Define the default search scope to use for this model. Scopes have the same form as the options passed to find / findAll\n   * @param {object}                  [options.scopes] More scopes, defined in the same way as defaultScope above. See `Model.scope` for more information about how scopes are defined, and what you can do with them\n   * @param {boolean}                 [options.omitNull] Don't persist null values. This means that all columns with null values will not be saved\n   * @param {boolean}                 [options.timestamps=true] Adds createdAt and updatedAt timestamps to the model.\n   * @param {boolean}                 [options.paranoid=false] Calling `destroy` will not delete the model, but instead set a `deletedAt` timestamp if this is true. Needs `timestamps=true` to work\n   * @param {boolean}                 [options.underscored=false] Add underscored field to all attributes, this covers user defined attributes, timestamps and foreign keys. Will not affect attributes with explicitly set `field` option\n   * @param {boolean}                 [options.freezeTableName=false] If freezeTableName is true, sequelize will not try to alter the model name to get the table name. Otherwise, the model name will be pluralized\n   * @param {object}                  [options.name] An object with two attributes, `singular` and `plural`, which are used when this model is associated to others.\n   * @param {string}                  [options.name.singular=Utils.singularize(modelName)] Singular name for model\n   * @param {string}                  [options.name.plural=Utils.pluralize(modelName)] Plural name for model\n   * @param {Array<object>}           [options.indexes] indexes definitions\n   * @param {string}                  [options.indexes[].name] The name of the index. Defaults to model name + _ + fields concatenated\n   * @param {string}                  [options.indexes[].type] Index type. Only used by mysql. One of `UNIQUE`, `FULLTEXT` and `SPATIAL`\n   * @param {string}                  [options.indexes[].using] The method to create the index by (`USING` statement in SQL). BTREE and HASH are supported by mysql and postgres, and postgres additionally supports GIST and GIN.\n   * @param {string}                  [options.indexes[].operator] Specify index operator.\n   * @param {boolean}                 [options.indexes[].unique=false] Should the index by unique? Can also be triggered by setting type to `UNIQUE`\n   * @param {boolean}                 [options.indexes[].concurrently=false] PostgresSQL will build the index without taking any write locks. Postgres only\n   * @param {Array<string|object>}    [options.indexes[].fields] An array of the fields to index. Each field can either be a string containing the name of the field, a sequelize object (e.g `sequelize.fn`), or an object with the following attributes: `attribute` (field name), `length` (create a prefix index of length chars), `order` (the direction the column should be sorted in), `collate` (the collation (sort order) for the column)\n   * @param {string|boolean}          [options.createdAt] Override the name of the createdAt attribute if a string is provided, or disable it if false. Timestamps must be true. Underscored field will be set with underscored setting.\n   * @param {string|boolean}          [options.updatedAt] Override the name of the updatedAt attribute if a string is provided, or disable it if false. Timestamps must be true. Underscored field will be set with underscored setting.\n   * @param {string|boolean}          [options.deletedAt] Override the name of the deletedAt attribute if a string is provided, or disable it if false. Timestamps must be true. Underscored field will be set with underscored setting.\n   * @param {string}                  [options.tableName] Defaults to pluralized model name, unless freezeTableName is true, in which case it uses model name verbatim\n   * @param {string}                  [options.schema='public'] schema\n   * @param {string}                  [options.engine] Specify engine for model's table\n   * @param {string}                  [options.charset] Specify charset for model's table\n   * @param {string}                  [options.comment] Specify comment for model's table\n   * @param {string}                  [options.collate] Specify collation for model's table\n   * @param {string}                  [options.initialAutoIncrement] Set the initial AUTO_INCREMENT value for the table in MySQL.\n   * @param {object}                  [options.hooks] An object of hook function that are called before and after certain lifecycle events. The possible hooks are: beforeValidate, afterValidate, validationFailed, beforeBulkCreate, beforeBulkDestroy, beforeBulkUpdate, beforeCreate, beforeDestroy, beforeUpdate, afterCreate, beforeSave, afterDestroy, afterUpdate, afterBulkCreate, afterSave, afterBulkDestroy and afterBulkUpdate. See Hooks for more information about hook functions and their signatures. Each property can either be a function, or an array of functions.\n   * @param {object}                  [options.validate] An object of model wide validations. Validations have access to all model values via `this`. If the validator function takes an argument, it is assumed to be async, and is called with a callback that accepts an optional error.\n   * @param {'and'|'overwrite'}       [options.whereMergeStrategy] Specify the scopes merging strategy (default 'overwrite'). 'and' strategy will merge `where` properties of scopes together by adding `Op.and` at the top-most level. 'overwrite' strategy will overwrite similar attributes using the lastly defined one.\n   *\n   * @returns {Model}\n   */\n  static init(attributes, options = {}) {\n    if (!options.sequelize) {\n      throw new Error('No Sequelize instance passed');\n    }\n\n    this.sequelize = options.sequelize;\n\n    const globalOptions = this.sequelize.options;\n\n    options = Utils.merge(_.cloneDeep(globalOptions.define), options);\n\n    if (!options.modelName) {\n      options.modelName = this.name;\n    }\n\n    options = Utils.merge({\n      name: {\n        plural: Utils.pluralize(options.modelName),\n        singular: Utils.singularize(options.modelName)\n      },\n      indexes: [],\n      omitNull: globalOptions.omitNull,\n      schema: globalOptions.schema\n    }, options);\n\n    this.sequelize.runHooks('beforeDefine', attributes, options);\n\n    if (options.modelName !== this.name) {\n      Object.defineProperty(this, 'name', { value: options.modelName });\n    }\n    delete options.modelName;\n\n    this.options = {\n      timestamps: true,\n      validate: {},\n      freezeTableName: false,\n      underscored: false,\n      paranoid: false,\n      rejectOnEmpty: false,\n      whereCollection: null,\n      schema: null,\n      schemaDelimiter: '',\n      defaultScope: {},\n      scopes: {},\n      indexes: [],\n      whereMergeStrategy: 'overwrite',\n      ...options\n    };\n\n    // if you call \"define\" multiple times for the same modelName, do not clutter the factory\n    if (this.sequelize.isDefined(this.name)) {\n      this.sequelize.modelManager.removeModel(this.sequelize.modelManager.getModel(this.name));\n    }\n\n    this.associations = {};\n    this._setupHooks(options.hooks);\n\n    this.underscored = this.options.underscored;\n\n    if (!this.options.tableName) {\n      this.tableName = this.options.freezeTableName ? this.name : Utils.underscoredIf(Utils.pluralize(this.name), this.underscored);\n    } else {\n      this.tableName = this.options.tableName;\n    }\n\n    this._schema = this.options.schema;\n    this._schemaDelimiter = this.options.schemaDelimiter;\n\n    // error check options\n    _.each(options.validate, (validator, validatorType) => {\n      if (Object.prototype.hasOwnProperty.call(attributes, validatorType)) {\n        throw new Error(`A model validator function must not have the same name as a field. Model: ${this.name}, field/validation name: ${validatorType}`);\n      }\n\n      if (typeof validator !== 'function') {\n        throw new Error(`Members of the validate option must be functions. Model: ${this.name}, error with validate member ${validatorType}`);\n      }\n    });\n\n    if (!_.includes(['and', 'overwrite'], this.options && this.options.whereMergeStrategy)) {\n      throw new Error(`Invalid value ${this.options && this.options.whereMergeStrategy} for whereMergeStrategy. Allowed values are 'and' and 'overwrite'.`);\n    }\n\n\n    this.rawAttributes = _.mapValues(attributes, (attribute, name) => {\n      attribute = this.sequelize.normalizeAttribute(attribute);\n\n      if (attribute.type === undefined) {\n        throw new Error(`Unrecognized datatype for attribute \"${this.name}.${name}\"`);\n      }\n\n      if (attribute.allowNull !== false && _.get(attribute, 'validate.notNull')) {\n        throw new Error(`Invalid definition for \"${this.name}.${name}\", \"notNull\" validator is only allowed with \"allowNull:false\"`);\n      }\n\n      if (_.get(attribute, 'references.model.prototype') instanceof Model) {\n        attribute.references.model = attribute.references.model.getTableName();\n      }\n\n      return attribute;\n    });\n\n    const tableName = this.getTableName();\n    this._indexes = this.options.indexes\n      .map(index => Utils.nameIndex(this._conformIndex(index), tableName));\n\n    this.primaryKeys = {};\n    this._readOnlyAttributes = new Set();\n    this._timestampAttributes = {};\n\n    // setup names of timestamp attributes\n    if (this.options.timestamps) {\n      for (const key of ['createdAt', 'updatedAt', 'deletedAt']) {\n        if (!['undefined', 'string', 'boolean'].includes(typeof this.options[key])) {\n          throw new Error(`Value for \"${key}\" option must be a string or a boolean, got ${typeof this.options[key]}`);\n        }\n        if (this.options[key] === '') {\n          throw new Error(`Value for \"${key}\" option cannot be an empty string`);\n        }\n      }\n\n      if (this.options.createdAt !== false) {\n        this._timestampAttributes.createdAt =\n          typeof this.options.createdAt === 'string' ? this.options.createdAt : 'createdAt';\n        this._readOnlyAttributes.add(this._timestampAttributes.createdAt);\n      }\n      if (this.options.updatedAt !== false) {\n        this._timestampAttributes.updatedAt =\n          typeof this.options.updatedAt === 'string' ? this.options.updatedAt : 'updatedAt';\n        this._readOnlyAttributes.add(this._timestampAttributes.updatedAt);\n      }\n      if (this.options.paranoid && this.options.deletedAt !== false) {\n        this._timestampAttributes.deletedAt =\n          typeof this.options.deletedAt === 'string' ? this.options.deletedAt : 'deletedAt';\n        this._readOnlyAttributes.add(this._timestampAttributes.deletedAt);\n      }\n    }\n\n    // setup name for version attribute\n    if (this.options.version) {\n      this._versionAttribute = typeof this.options.version === 'string' ? this.options.version : 'version';\n      this._readOnlyAttributes.add(this._versionAttribute);\n    }\n\n    this._hasReadOnlyAttributes = this._readOnlyAttributes.size > 0;\n\n    // Add head and tail default attributes (id, timestamps)\n    this._addDefaultAttributes();\n    this.refreshAttributes();\n    this._findAutoIncrementAttribute();\n\n    this._scope = this.options.defaultScope;\n    this._scopeNames = ['defaultScope'];\n\n    this.sequelize.modelManager.addModel(this);\n    this.sequelize.runHooks('afterDefine', this);\n\n    return this;\n  }\n\n  static refreshAttributes() {\n    const attributeManipulation = {};\n\n    this.prototype._customGetters = {};\n    this.prototype._customSetters = {};\n\n    ['get', 'set'].forEach(type => {\n      const opt = `${type}terMethods`;\n      const funcs = { ...this.options[opt] };\n      const _custom = type === 'get' ? this.prototype._customGetters : this.prototype._customSetters;\n\n      _.each(funcs, (method, attribute) => {\n        _custom[attribute] = method;\n\n        if (type === 'get') {\n          funcs[attribute] = function() {\n            return this.get(attribute);\n          };\n        }\n        if (type === 'set') {\n          funcs[attribute] = function(value) {\n            return this.set(attribute, value);\n          };\n        }\n      });\n\n      _.each(this.rawAttributes, (options, attribute) => {\n        if (Object.prototype.hasOwnProperty.call(options, type)) {\n          _custom[attribute] = options[type];\n        }\n\n        if (type === 'get') {\n          funcs[attribute] = function() {\n            return this.get(attribute);\n          };\n        }\n        if (type === 'set') {\n          funcs[attribute] = function(value) {\n            return this.set(attribute, value);\n          };\n        }\n      });\n\n      _.each(funcs, (fct, name) => {\n        if (!attributeManipulation[name]) {\n          attributeManipulation[name] = {\n            configurable: true\n          };\n        }\n        attributeManipulation[name][type] = fct;\n      });\n    });\n\n    this._dataTypeChanges = {};\n    this._dataTypeSanitizers = {};\n\n    this._hasBooleanAttributes = false;\n    this._hasDateAttributes = false;\n    this._jsonAttributes = new Set();\n    this._virtualAttributes = new Set();\n    this._defaultValues = {};\n    this.prototype.validators = {};\n\n    this.fieldRawAttributesMap = {};\n\n    this.primaryKeys = {};\n    this.uniqueKeys = {};\n\n    _.each(this.rawAttributes, (definition, name) => {\n      definition.type = this.sequelize.normalizeDataType(definition.type);\n\n      definition.Model = this;\n      definition.fieldName = name;\n      definition._modelAttribute = true;\n\n      if (definition.field === undefined) {\n        definition.field = Utils.underscoredIf(name, this.underscored);\n      }\n\n      if (definition.primaryKey === true) {\n        this.primaryKeys[name] = definition;\n      }\n\n      this.fieldRawAttributesMap[definition.field] = definition;\n\n      if (definition.type._sanitize) {\n        this._dataTypeSanitizers[name] = definition.type._sanitize;\n      }\n\n      if (definition.type._isChanged) {\n        this._dataTypeChanges[name] = definition.type._isChanged;\n      }\n\n      if (definition.type instanceof DataTypes.BOOLEAN) {\n        this._hasBooleanAttributes = true;\n      } else if (definition.type instanceof DataTypes.DATE || definition.type instanceof DataTypes.DATEONLY) {\n        this._hasDateAttributes = true;\n      } else if (definition.type instanceof DataTypes.JSON) {\n        this._jsonAttributes.add(name);\n      } else if (definition.type instanceof DataTypes.VIRTUAL) {\n        this._virtualAttributes.add(name);\n      }\n\n      if (Object.prototype.hasOwnProperty.call(definition, 'defaultValue')) {\n        this._defaultValues[name] = () => Utils.toDefaultValue(definition.defaultValue, this.sequelize.options.dialect);\n      }\n\n      if (Object.prototype.hasOwnProperty.call(definition, 'unique') && definition.unique) {\n        let idxName;\n        if (\n          typeof definition.unique === 'object' &&\n          Object.prototype.hasOwnProperty.call(definition.unique, 'name')\n        ) {\n          idxName = definition.unique.name;\n        } else if (typeof definition.unique === 'string') {\n          idxName = definition.unique;\n        } else {\n          idxName = `${this.tableName}_${name}_unique`;\n        }\n\n        const idx = this.uniqueKeys[idxName] || { fields: [] };\n\n        idx.fields.push(definition.field);\n        idx.msg = idx.msg || definition.unique.msg || null;\n        idx.name = idxName || false;\n        idx.column = name;\n        idx.customIndex = definition.unique !== true;\n\n        this.uniqueKeys[idxName] = idx;\n      }\n\n      if (Object.prototype.hasOwnProperty.call(definition, 'validate')) {\n        this.prototype.validators[name] = definition.validate;\n      }\n\n      if (definition.index === true && definition.type instanceof DataTypes.JSONB) {\n        this._indexes.push(\n          Utils.nameIndex(\n            this._conformIndex({\n              fields: [definition.field || name],\n              using: 'gin'\n            }),\n            this.getTableName()\n          )\n        );\n\n        delete definition.index;\n      }\n    });\n\n    // Create a map of field to attribute names\n    this.fieldAttributeMap = _.reduce(this.fieldRawAttributesMap, (map, value, key) => {\n      if (key !== value.fieldName) {\n        map[key] = value.fieldName;\n      }\n      return map;\n    }, {});\n\n    this._hasJsonAttributes = !!this._jsonAttributes.size;\n\n    this._hasVirtualAttributes = !!this._virtualAttributes.size;\n\n    this._hasDefaultValues = !_.isEmpty(this._defaultValues);\n\n    this.tableAttributes = _.omitBy(this.rawAttributes, (_a, key) => this._virtualAttributes.has(key));\n\n    this.prototype._hasCustomGetters = Object.keys(this.prototype._customGetters).length;\n    this.prototype._hasCustomSetters = Object.keys(this.prototype._customSetters).length;\n\n    for (const key of Object.keys(attributeManipulation)) {\n      if (Object.prototype.hasOwnProperty.call(Model.prototype, key)) {\n        this.sequelize.log(`Not overriding built-in method from model attribute: ${key}`);\n        continue;\n      }\n      Object.defineProperty(this.prototype, key, attributeManipulation[key]);\n    }\n\n    this.prototype.rawAttributes = this.rawAttributes;\n    this.prototype._isAttribute = key => Object.prototype.hasOwnProperty.call(this.prototype.rawAttributes, key);\n\n    // Primary key convenience constiables\n    this.primaryKeyAttributes = Object.keys(this.primaryKeys);\n    this.primaryKeyAttribute = this.primaryKeyAttributes[0];\n    if (this.primaryKeyAttribute) {\n      this.primaryKeyField = this.rawAttributes[this.primaryKeyAttribute].field || this.primaryKeyAttribute;\n    }\n\n    this._hasPrimaryKeys = this.primaryKeyAttributes.length > 0;\n    this._isPrimaryKey = key => this.primaryKeyAttributes.includes(key);\n\n    this._attributeManipulation = attributeManipulation;\n  }\n\n  /**\n   * Remove attribute from model definition\n   *\n   * @param {string} attribute name of attribute to remove\n   */\n  static removeAttribute(attribute) {\n    delete this.rawAttributes[attribute];\n    this.refreshAttributes();\n  }\n\n  /**\n   * Sync this Model to the DB, that is create the table.\n   *\n   * @param {object} [options] sync options\n   *\n   * @see\n   * {@link Sequelize#sync} for options\n   *\n   * @returns {Promise<Model>}\n   */\n  static async sync(options) {\n    options = { ...this.options, ...options };\n    options.hooks = options.hooks === undefined ? true : !!options.hooks;\n\n    const attributes = this.tableAttributes;\n    const rawAttributes = this.fieldRawAttributesMap;\n\n    if (options.hooks) {\n      await this.runHooks('beforeSync', options);\n    }\n\n    const tableName = this.getTableName(options);\n\n    let tableExists;\n    if (options.force) {\n      await this.drop(options);\n      tableExists = false;\n    } else {\n      tableExists = await this.queryInterface.tableExists(tableName, options);\n    }\n\n    if (!tableExists) {\n      await this.queryInterface.createTable(tableName, attributes, options, this);\n    } else {\n      // enums are always updated, even if alter is not set. createTable calls it too.\n      await this.queryInterface.ensureEnums(tableName, attributes, options, this);\n    }\n\n    if (tableExists && options.alter) {\n      const tableInfos = await Promise.all([\n        this.queryInterface.describeTable(tableName, options),\n        this.queryInterface.getForeignKeyReferencesForTable(tableName, options)\n      ]);\n\n      const columns = tableInfos[0];\n      // Use for alter foreign keys\n      const foreignKeyReferences = tableInfos[1];\n      const removedConstraints = {};\n\n      for (const columnName in attributes) {\n        if (!Object.prototype.hasOwnProperty.call(attributes, columnName)) continue;\n        if (!columns[columnName] && !columns[attributes[columnName].field]) {\n          await this.queryInterface.addColumn(tableName, attributes[columnName].field || columnName, attributes[columnName], options);\n        }\n      }\n\n      if (options.alter === true || typeof options.alter === 'object' && options.alter.drop !== false) {\n        for (const columnName in columns) {\n          if (!Object.prototype.hasOwnProperty.call(columns, columnName)) continue;\n          const currentAttribute = rawAttributes[columnName];\n          if (!currentAttribute) {\n            await this.queryInterface.removeColumn(tableName, columnName, options);\n            continue;\n          }\n          if (currentAttribute.primaryKey) continue;\n          // Check foreign keys. If it's a foreign key, it should remove constraint first.\n          const references = currentAttribute.references;\n          if (currentAttribute.references) {\n            const database = this.sequelize.config.database;\n            const schema = this.sequelize.config.schema;\n            // Find existed foreign keys\n            for (const foreignKeyReference of foreignKeyReferences) {\n              const constraintName = foreignKeyReference.constraintName;\n              if (!!constraintName\n                && foreignKeyReference.tableCatalog === database\n                && (schema ? foreignKeyReference.tableSchema === schema : true)\n                && foreignKeyReference.referencedTableName === references.model\n                && foreignKeyReference.referencedColumnName === references.key\n                && (schema ? foreignKeyReference.referencedTableSchema === schema : true)\n                && !removedConstraints[constraintName]) {\n                // Remove constraint on foreign keys.\n                await this.queryInterface.removeConstraint(tableName, constraintName, options);\n                removedConstraints[constraintName] = true;\n              }\n            }\n          }\n\n          await this.queryInterface.changeColumn(tableName, columnName, currentAttribute, options);\n        }\n      }\n    }\n\n    const existingIndexes = await this.queryInterface.showIndex(tableName, options);\n    const missingIndexes = this._indexes.filter(item1 =>\n      !existingIndexes.some(item2 => item1.name === item2.name)\n    ).sort((index1, index2) => {\n      if (this.sequelize.options.dialect === 'postgres') {\n      // move concurrent indexes to the bottom to avoid weird deadlocks\n        if (index1.concurrently === true) return 1;\n        if (index2.concurrently === true) return -1;\n      }\n\n      return 0;\n    });\n\n    for (const index of missingIndexes) {\n      await this.queryInterface.addIndex(tableName, { ...options, ...index });\n    }\n\n    if (options.hooks) {\n      await this.runHooks('afterSync', options);\n    }\n\n    return this;\n  }\n\n  /**\n   * Drop the table represented by this Model\n   *\n   * @param {object}   [options] drop options\n   * @param {boolean}  [options.cascade=false]   Also drop all objects depending on this table, such as views. Only works in postgres\n   * @param {Function} [options.logging=false]   A function that gets executed while running the query to log the sql.\n   * @param {boolean}  [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   *\n   * @returns {Promise}\n   */\n  static async drop(options) {\n    return await this.queryInterface.dropTable(this.getTableName(options), options);\n  }\n\n  static async dropSchema(schema) {\n    return await this.queryInterface.dropSchema(schema);\n  }\n\n  /**\n   * Apply a schema to this model. For postgres, this will actually place the schema in front of the table name - `\"schema\".\"tableName\"`,\n   * while the schema will be prepended to the table name for mysql and sqlite - `'schema.tablename'`.\n   *\n   * This method is intended for use cases where the same model is needed in multiple schemas. In such a use case it is important\n   * to call `model.schema(schema, [options]).sync()` for each model to ensure the models are created in the correct schema.\n   *\n   * If a single default schema per model is needed, set the `options.schema='schema'` parameter during the `define()` call\n   * for the model.\n   *\n   * @param {string}   schema The name of the schema\n   * @param {object}   [options] schema options\n   * @param {string}   [options.schemaDelimiter='.'] The character(s) that separates the schema name from the table name\n   * @param {Function} [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {boolean}  [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   *\n   * @see\n   * {@link Sequelize#define} for more information about setting a default schema.\n   *\n   * @returns {Model}\n   */\n  static schema(schema, options) {\n\n    const clone = class extends this {};\n    Object.defineProperty(clone, 'name', { value: this.name });\n\n    clone._schema = schema;\n\n    if (options) {\n      if (typeof options === 'string') {\n        clone._schemaDelimiter = options;\n      } else if (options.schemaDelimiter) {\n        clone._schemaDelimiter = options.schemaDelimiter;\n      }\n    }\n\n    return clone;\n  }\n\n  /**\n   * Get the table name of the model, taking schema into account. The method will return The name as a string if the model has no schema,\n   * or an object with `tableName`, `schema` and `delimiter` properties.\n   *\n   * @returns {string|object}\n   */\n  static getTableName() {\n    return this.queryGenerator.addSchema(this);\n  }\n\n  /**\n   * Get un-scoped model\n   *\n   * @returns {Model}\n   */\n  static unscoped() {\n    return this.scope();\n  }\n\n  /**\n   * Add a new scope to the model. This is especially useful for adding scopes with includes, when the model you want to include is not available at the time this model is defined.\n   *\n   * By default this will throw an error if a scope with that name already exists. Pass `override: true` in the options object to silence this error.\n   *\n   * @param {string}          name The name of the scope. Use `defaultScope` to override the default scope\n   * @param {object|Function} scope scope or options\n   * @param {object}          [options] scope options\n   * @param {boolean}         [options.override=false] override old scope if already defined\n   */\n  static addScope(name, scope, options) {\n    options = { override: false, ...options };\n\n    if ((name === 'defaultScope' && Object.keys(this.options.defaultScope).length > 0 || name in this.options.scopes) && options.override === false) {\n      throw new Error(`The scope ${name} already exists. Pass { override: true } as options to silence this error`);\n    }\n\n    if (name === 'defaultScope') {\n      this.options.defaultScope = this._scope = scope;\n    } else {\n      this.options.scopes[name] = scope;\n    }\n  }\n\n  /**\n   * Apply a scope created in `define` to the model.\n   *\n   * @example <caption>how to create scopes</caption>\n   * const Model = sequelize.define('model', attributes, {\n   *   defaultScope: {\n   *     where: {\n   *       username: 'dan'\n   *     },\n   *     limit: 12\n   *   },\n   *   scopes: {\n   *     isALie: {\n   *       where: {\n   *         stuff: 'cake'\n   *       }\n   *     },\n   *     complexFunction: function(email, accessLevel) {\n   *       return {\n   *         where: {\n   *           email: {\n   *             [Op.like]: email\n   *           },\n   *           access_level {\n   *             [Op.gte]: accessLevel\n   *           }\n   *         }\n   *       }\n   *     }\n   *   }\n   * })\n   *\n   * # As you have defined a default scope, every time you do Model.find, the default scope is appended to your query. Here's a couple of examples:\n   *\n   * Model.findAll() // WHERE username = 'dan'\n   * Model.findAll({ where: { age: { [Op.gt]: 12 } } }) // WHERE age > 12 AND username = 'dan'\n   *\n   * @example <caption>To invoke scope functions you can do</caption>\n   * Model.scope({ method: ['complexFunction', 'dan@sequelize.com', 42]}).findAll()\n   * // WHERE email like 'dan@sequelize.com%' AND access_level >= 42\n   *\n   * @param {?Array|object|string} [option] The scope(s) to apply. Scopes can either be passed as consecutive arguments, or as an array of arguments. To apply simple scopes and scope functions with no arguments, pass them as strings. For scope function, pass an object, with a `method` property. The value can either be a string, if the method does not take any arguments, or an array, where the first element is the name of the method, and consecutive elements are arguments to that method. Pass null to remove all scopes, including the default.\n   *\n   * @returns {Model} A reference to the model, with the scope(s) applied. Calling scope again on the returned model will clear the previous scope.\n   */\n  static scope(option) {\n    const self = class extends this {};\n    let scope;\n    let scopeName;\n\n    Object.defineProperty(self, 'name', { value: this.name });\n\n    self._scope = {};\n    self._scopeNames = [];\n    self.scoped = true;\n\n    if (!option) {\n      return self;\n    }\n\n    const options = _.flatten(arguments);\n\n    for (const option of options) {\n      scope = null;\n      scopeName = null;\n\n      if (_.isPlainObject(option)) {\n        if (option.method) {\n          if (Array.isArray(option.method) && !!self.options.scopes[option.method[0]]) {\n            scopeName = option.method[0];\n            scope = self.options.scopes[scopeName].apply(self, option.method.slice(1));\n          }\n          else if (self.options.scopes[option.method]) {\n            scopeName = option.method;\n            scope = self.options.scopes[scopeName].apply(self);\n          }\n        } else {\n          scope = option;\n        }\n      } else if (option === 'defaultScope' && _.isPlainObject(self.options.defaultScope)) {\n        scope = self.options.defaultScope;\n      } else {\n        scopeName = option;\n        scope = self.options.scopes[scopeName];\n        if (typeof scope === 'function') {\n          scope = scope();\n        }\n      }\n\n      if (scope) {\n        this._conformIncludes(scope, this);\n        // clone scope so it doesn't get modified\n        this._assignOptions(self._scope, Utils.cloneDeep(scope));\n        self._scopeNames.push(scopeName ? scopeName : 'defaultScope');\n      } else {\n        throw new sequelizeErrors.SequelizeScopeError(`Invalid scope ${scopeName} called.`);\n      }\n    }\n\n    return self;\n  }\n\n  /**\n   * Search for multiple instances.\n   *\n   * @example <caption>Simple search using AND and =</caption>\n   * Model.findAll({\n   *   where: {\n   *     attr1: 42,\n   *     attr2: 'cake'\n   *   }\n   * })\n   *\n   * # WHERE attr1 = 42 AND attr2 = 'cake'\n   *\n   * @example <caption>Using greater than, less than etc.</caption>\n   * const {gt, lte, ne, in: opIn} = Sequelize.Op;\n   *\n   * Model.findAll({\n   *   where: {\n   *     attr1: {\n   *       [gt]: 50\n   *     },\n   *     attr2: {\n   *       [lte]: 45\n   *     },\n   *     attr3: {\n   *       [opIn]: [1,2,3]\n   *     },\n   *     attr4: {\n   *       [ne]: 5\n   *     }\n   *   }\n   * })\n   *\n   * # WHERE attr1 > 50 AND attr2 <= 45 AND attr3 IN (1,2,3) AND attr4 != 5\n   *\n   * @example <caption>Queries using OR</caption>\n   * const {or, and, gt, lt} = Sequelize.Op;\n   *\n   * Model.findAll({\n   *   where: {\n   *     name: 'a project',\n   *     [or]: [\n   *       {id: [1, 2, 3]},\n   *       {\n   *         [and]: [\n   *           {id: {[gt]: 10}},\n   *           {id: {[lt]: 100}}\n   *         ]\n   *       }\n   *     ]\n   *   }\n   * });\n   *\n   * # WHERE `Model`.`name` = 'a project' AND (`Model`.`id` IN (1, 2, 3) OR (`Model`.`id` > 10 AND `Model`.`id` < 100));\n   *\n   * @see\n   * {@link Operators} for possible operators\n   * __Alias__: _all_\n   *\n   * The promise is resolved with an array of Model instances if the query succeeds._\n   *\n   * @param  {object}                                                    [options] A hash of options to describe the scope of the search\n   * @param  {object}                                                    [options.where] A hash of attributes to describe your search. See above for examples.\n   * @param  {Array<string>|object}                                      [options.attributes] A list of the attributes that you want to select, or an object with `include` and `exclude` keys. To rename an attribute, you can pass an array, with two elements - the first is the name of the attribute in the DB (or some kind of expression such as `Sequelize.literal`, `Sequelize.fn` and so on), and the second is the name you want the attribute to have in the returned instance\n   * @param  {Array<string>}                                             [options.attributes.include] Select all the attributes of the model, plus some additional ones. Useful for aggregations, e.g. `{ attributes: { include: [[sequelize.fn('COUNT', sequelize.col('id')), 'total']] }`\n   * @param  {Array<string>}                                             [options.attributes.exclude] Select all the attributes of the model, except some few. Useful for security purposes e.g. `{ attributes: { exclude: ['password'] } }`\n   * @param  {boolean}                                                   [options.paranoid=true] If true, only non-deleted records will be returned. If false, both deleted and non-deleted records will be returned. Only applies if `options.paranoid` is true for the model.\n   * @param  {Array<object|Model|string>}                                [options.include] A list of associations to eagerly load using a left join. Supported is either `{ include: [ Model1, Model2, ...]}` or `{ include: [{ model: Model1, as: 'Alias' }]}` or `{ include: ['Alias']}`. If your association are set up with an `as` (eg. `X.hasMany(Y, { as: 'Z' }`, you need to specify Z in the as attribute when eager loading Y).\n   * @param  {Model}                                                     [options.include[].model] The model you want to eagerly load\n   * @param  {string}                                                    [options.include[].as] The alias of the relation, in case the model you want to eagerly load is aliased. For `hasOne` / `belongsTo`, this should be the singular name, and for `hasMany`, it should be the plural\n   * @param  {Association}                                               [options.include[].association] The association you want to eagerly load. (This can be used instead of providing a model/as pair)\n   * @param  {object}                                                    [options.include[].where] Where clauses to apply to the child models. Note that this converts the eager load to an inner join, unless you explicitly set `required: false`\n   * @param  {boolean}                                                   [options.include[].or=false] Whether to bind the ON and WHERE clause together by OR instead of AND.\n   * @param  {object}                                                    [options.include[].on] Supply your own ON condition for the join.\n   * @param  {Array<string>}                                             [options.include[].attributes] A list of attributes to select from the child model\n   * @param  {boolean}                                                   [options.include[].required] If true, converts to an inner join, which means that the parent model will only be loaded if it has any matching children. True if `include.where` is set, false otherwise.\n   * @param  {boolean}                                                   [options.include[].right] If true, converts to a right join if dialect support it. Ignored if `include.required` is true.\n   * @param  {boolean}                                                   [options.include[].separate] If true, runs a separate query to fetch the associated instances, only supported for hasMany associations\n   * @param  {number}                                                    [options.include[].limit] Limit the joined rows, only supported with include.separate=true\n   * @param  {string}                                                    [options.include[].through.as] The alias for the join model, in case you want to give it a different name than the default one.\n   * @param  {boolean}                                                   [options.include[].through.paranoid] If true, only non-deleted records will be returned from the join table. If false, both deleted and non-deleted records will be returned. Only applies if through model is paranoid.\n   * @param  {object}                                                    [options.include[].through.where] Filter on the join model for belongsToMany relations\n   * @param  {Array}                                                     [options.include[].through.attributes] A list of attributes to select from the join model for belongsToMany relations\n   * @param  {Array<object|Model|string>}                                [options.include[].include] Load further nested related models\n   * @param  {boolean}                                                   [options.include[].duplicating] Mark the include as duplicating, will prevent a subquery from being used.\n   * @param  {Array|Sequelize.fn|Sequelize.col|Sequelize.literal}        [options.order] Specifies an ordering. Using an array, you can provide several columns / functions to order by. Each element can be further wrapped in a two-element array. The first element is the column / function to order by, the second is the direction. For example: `order: [['name', 'DESC']]`. In this way the column will be escaped, but the direction will not.\n   * @param  {number}                                                    [options.limit] Limit for result\n   * @param  {number}                                                    [options.offset] Offset for result\n   * @param  {Transaction}                                               [options.transaction] Transaction to run query under\n   * @param  {string|object}                                             [options.lock] Lock the selected rows. Possible options are transaction.LOCK.UPDATE and transaction.LOCK.SHARE. Postgres also supports transaction.LOCK.KEY_SHARE, transaction.LOCK.NO_KEY_UPDATE and specific model locks with joins.\n   * @param  {boolean}                                                   [options.skipLocked] Skip locked rows. Only supported in Postgres.\n   * @param  {boolean}                                                   [options.raw] Return raw result. See sequelize.query for more information.\n   * @param  {Function}                                                  [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param  {boolean}                                                   [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param  {object}                                                    [options.having] Having options\n   * @param  {string}                                                    [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   * @param  {boolean|Error}                                             [options.rejectOnEmpty=false] Throws an error when no records found\n   * @param  {boolean}                                                   [options.dotNotation] Allows including tables having the same attribute/column names - which have a dot in them.\n   * @param  {boolean}                                                   [options.nest=false] If true, transforms objects with `.` separated property names into nested objects.\n   *\n   * @see\n   * {@link Sequelize#query}\n   *\n   * @returns {Promise<Array<Model>>}\n   */\n  static async findAll(options) {\n    if (options !== undefined && !_.isPlainObject(options)) {\n      throw new sequelizeErrors.QueryError('The argument passed to findAll must be an options object, use findByPk if you wish to pass a single primary key value');\n    }\n\n    if (options !== undefined && options.attributes) {\n      if (!Array.isArray(options.attributes) && !_.isPlainObject(options.attributes)) {\n        throw new sequelizeErrors.QueryError('The attributes option must be an array of column names or an object');\n      }\n    }\n\n    this.warnOnInvalidOptions(options, Object.keys(this.rawAttributes));\n\n    const tableNames = {};\n\n    tableNames[this.getTableName(options)] = true;\n    options = Utils.cloneDeep(options);\n\n    // Add CLS transaction\n    if (options.transaction === undefined && this.sequelize.constructor._cls) {\n      const t = this.sequelize.constructor._cls.get('transaction');\n      if (t) {\n        options.transaction = t;\n      }\n    }\n\n    _.defaults(options, { hooks: true });\n\n    // set rejectOnEmpty option, defaults to model options\n    options.rejectOnEmpty = Object.prototype.hasOwnProperty.call(options, 'rejectOnEmpty')\n      ? options.rejectOnEmpty\n      : this.options.rejectOnEmpty;\n\n    this._injectScope(options);\n\n    if (options.hooks) {\n      await this.runHooks('beforeFind', options);\n    }\n    this._conformIncludes(options, this);\n    this._expandAttributes(options);\n    this._expandIncludeAll(options);\n\n    if (options.hooks) {\n      await this.runHooks('beforeFindAfterExpandIncludeAll', options);\n    }\n    options.originalAttributes = this._injectDependentVirtualAttributes(options.attributes);\n\n    if (options.include) {\n      options.hasJoin = true;\n\n      this._validateIncludedElements(options, tableNames);\n\n      // If we're not raw, we have to make sure we include the primary key for de-duplication\n      if (\n        options.attributes\n        && !options.raw\n        && this.primaryKeyAttribute\n        && !options.attributes.includes(this.primaryKeyAttribute)\n        && (!options.group || !options.hasSingleAssociation || options.hasMultiAssociation)\n      ) {\n        options.attributes = [this.primaryKeyAttribute].concat(options.attributes);\n      }\n    }\n\n    if (!options.attributes) {\n      options.attributes = Object.keys(this.rawAttributes);\n      options.originalAttributes = this._injectDependentVirtualAttributes(options.attributes);\n    }\n\n    // whereCollection is used for non-primary key updates\n    this.options.whereCollection = options.where || null;\n\n    Utils.mapFinderOptions(options, this);\n\n    options = this._paranoidClause(this, options);\n\n    if (options.hooks) {\n      await this.runHooks('beforeFindAfterOptions', options);\n    }\n    const selectOptions = { ...options, tableNames: Object.keys(tableNames) };\n    const results = await this.queryInterface.select(this, this.getTableName(selectOptions), selectOptions);\n    if (options.hooks) {\n      await this.runHooks('afterFind', results, options);\n    }\n\n    //rejectOnEmpty mode\n    if (_.isEmpty(results) && options.rejectOnEmpty) {\n      if (typeof options.rejectOnEmpty === 'function') {\n        throw new options.rejectOnEmpty();\n      }\n      if (typeof options.rejectOnEmpty === 'object') {\n        throw options.rejectOnEmpty;\n      }\n      throw new sequelizeErrors.EmptyResultError();\n    }\n\n    return await Model._findSeparate(results, options);\n  }\n\n  static warnOnInvalidOptions(options, validColumnNames) {\n    if (!_.isPlainObject(options)) {\n      return;\n    }\n\n    const unrecognizedOptions = Object.keys(options).filter(k => !validQueryKeywords.has(k));\n    const unexpectedModelAttributes = _.intersection(unrecognizedOptions, validColumnNames);\n    if (!options.where && unexpectedModelAttributes.length > 0) {\n      logger.warn(`Model attributes (${unexpectedModelAttributes.join(', ')}) passed into finder method options of model ${this.name}, but the options.where object is empty. Did you forget to use options.where?`);\n    }\n  }\n\n  static _injectDependentVirtualAttributes(attributes) {\n    if (!this._hasVirtualAttributes) return attributes;\n    if (!attributes || !Array.isArray(attributes)) return attributes;\n\n    for (const attribute of attributes) {\n      if (\n        this._virtualAttributes.has(attribute)\n        && this.rawAttributes[attribute].type.fields\n      ) {\n        attributes = attributes.concat(this.rawAttributes[attribute].type.fields);\n      }\n    }\n\n    attributes = _.uniq(attributes);\n\n    return attributes;\n  }\n\n  static async _findSeparate(results, options) {\n    if (!options.include || options.raw || !results) return results;\n\n    const original = results;\n    if (options.plain) results = [results];\n\n    if (!results.length) return original;\n\n    await Promise.all(options.include.map(async include => {\n      if (!include.separate) {\n        return await Model._findSeparate(\n          results.reduce((memo, result) => {\n            let associations = result.get(include.association.as);\n\n            // Might be an empty belongsTo relation\n            if (!associations) return memo;\n\n            // Force array so we can concat no matter if it's 1:1 or :M\n            if (!Array.isArray(associations)) associations = [associations];\n\n            for (let i = 0, len = associations.length; i !== len; ++i) {\n              memo.push(associations[i]);\n            }\n            return memo;\n          }, []),\n          {\n\n            ..._.omit(options, 'include', 'attributes', 'order', 'where', 'limit', 'offset', 'plain', 'scope'),\n            include: include.include || []\n          }\n        );\n      }\n\n      const map = await include.association.get(results, {\n\n        ..._.omit(options, nonCascadingOptions),\n        ..._.omit(include, ['parent', 'association', 'as', 'originalAttributes'])\n      });\n\n      for (const result of results) {\n        result.set(\n          include.association.as,\n          map[result.get(include.association.sourceKey)],\n          { raw: true }\n        );\n      }\n    }));\n\n    return original;\n  }\n\n  /**\n   * Search for a single instance by its primary key._\n   *\n   * @param  {number|bigint|string|Buffer}      param The value of the desired instance's primary key.\n   * @param  {object}                           [options] find options\n   * @param  {Transaction}                      [options.transaction] Transaction to run query under\n   * @param  {string}                           [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   *\n   * @see\n   * {@link Model.findAll}           for a full explanation of options, Note that options.where is not supported.\n   *\n   * @returns {Promise<Model>}\n   */\n  static async findByPk(param, options) {\n    // return Promise resolved with null if no arguments are passed\n    if ([null, undefined].includes(param)) {\n      return null;\n    }\n\n    options = Utils.cloneDeep(options) || {};\n\n    if (typeof param === 'number' || typeof param === 'bigint' || typeof param === 'string' || Buffer.isBuffer(param)) {\n      options.where = {\n        [this.primaryKeyAttribute]: param\n      };\n    } else {\n      throw new Error(`Argument passed to findByPk is invalid: ${param}`);\n    }\n\n    // Bypass a possible overloaded findOne\n    // note: in v6, we don't bypass overload https://github.com/sequelize/sequelize/issues/14003\n    return await this.findOne(options);\n  }\n\n  /**\n   * Search for a single instance. Returns the first instance found, or null if none can be found.\n   *\n   * @param  {object}       [options] A hash of options to describe the scope of the search\n   * @param  {Transaction}  [options.transaction] Transaction to run query under\n   * @param  {string}       [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   *\n   * @see\n   * {@link Model.findAll} for an explanation of options\n   *\n   * @returns {Promise<Model|null>}\n   */\n  static async findOne(options) {\n    if (options !== undefined && !_.isPlainObject(options)) {\n      throw new Error('The argument passed to findOne must be an options object, use findByPk if you wish to pass a single primary key value');\n    }\n    options = Utils.cloneDeep(options);\n\n    // Add CLS transaction\n    if (options.transaction === undefined && this.sequelize.constructor._cls) {\n      const t = this.sequelize.constructor._cls.get('transaction');\n      if (t) {\n        options.transaction = t;\n      }\n    }\n\n    if (options.limit === undefined) {\n      const uniqueSingleColumns = _.chain(this.uniqueKeys).values().filter(c => c.fields.length === 1).map('column').value();\n\n      // Don't add limit if querying directly on the pk or a unique column\n      if (!options.where || !_.some(options.where, (value, key) =>\n        (key === this.primaryKeyAttribute || uniqueSingleColumns.includes(key)) &&\n          (Utils.isPrimitive(value) || Buffer.isBuffer(value))\n      )) {\n        options.limit = 1;\n      }\n    }\n\n    // Bypass a possible overloaded findAll.\n    // note: in v6, we don't bypass overload https://github.com/sequelize/sequelize/issues/14003\n    return await this.findAll(_.defaults(options, {\n      plain: true\n    }));\n  }\n\n  /**\n   * Run an aggregation method on the specified field\n   *\n   * @param {string}          attribute The attribute to aggregate over. Can be a field name or *\n   * @param {string}          aggregateFunction The function to use for aggregation, e.g. sum, max etc.\n   * @param {object}          [options] Query options. See sequelize.query for full options\n   * @param {object}          [options.where] A hash of search attributes.\n   * @param {Function}        [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {boolean}         [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param {DataTypes|string} [options.dataType] The type of the result. If `field` is a field in this Model, the default will be the type of that field, otherwise defaults to float.\n   * @param {boolean}         [options.distinct] Applies DISTINCT to the field being aggregated over\n   * @param {Transaction}     [options.transaction] Transaction to run query under\n   * @param {boolean}         [options.plain] When `true`, the first returned value of `aggregateFunction` is cast to `dataType` and returned. If additional attributes are specified, along with `group` clauses, set `plain` to `false` to return all values of all returned rows.  Defaults to `true`\n   *\n   * @returns {Promise<DataTypes|object>} Returns the aggregate result cast to `options.dataType`, unless `options.plain` is false, in which case the complete data result is returned.\n   */\n  static async aggregate(attribute, aggregateFunction, options) {\n    options = Utils.cloneDeep(options);\n\n    // We need to preserve attributes here as the `injectScope` call would inject non aggregate columns.\n    const prevAttributes = options.attributes;\n    this._injectScope(options);\n    options.attributes = prevAttributes;\n    this._conformIncludes(options, this);\n\n    if (options.include) {\n      this._expandIncludeAll(options);\n      this._validateIncludedElements(options);\n    }\n\n    const attrOptions = this.rawAttributes[attribute];\n    const field = attrOptions && attrOptions.field || attribute;\n    let aggregateColumn = this.sequelize.col(field);\n\n    if (options.distinct) {\n      aggregateColumn = this.sequelize.fn('DISTINCT', aggregateColumn);\n    }\n\n    let { group } = options;\n    if (Array.isArray(group) && Array.isArray(group[0])) {\n      noDoubleNestedGroup();\n      group = _.flatten(group);\n    }\n    options.attributes = _.unionBy(\n      options.attributes,\n      group,\n      [[this.sequelize.fn(aggregateFunction, aggregateColumn), aggregateFunction]],\n      a => Array.isArray(a) ? a[1] : a\n    );\n\n    if (!options.dataType) {\n      if (attrOptions) {\n        options.dataType = attrOptions.type;\n      } else {\n        // Use FLOAT as fallback\n        options.dataType = new DataTypes.FLOAT();\n      }\n    } else {\n      options.dataType = this.sequelize.normalizeDataType(options.dataType);\n    }\n\n    Utils.mapOptionFieldNames(options, this);\n    options = this._paranoidClause(this, options);\n\n    const value = await this.queryInterface.rawSelect(this.getTableName(options), options, aggregateFunction, this);\n    return value;\n  }\n\n  /**\n   * Count the number of records matching the provided where clause.\n   *\n   * If you provide an `include` option, the number of matching associations will be counted instead.\n   *\n   * @param {object}        [options] options\n   * @param {object}        [options.where] A hash of search attributes.\n   * @param {object}        [options.include] Include options. See `find` for details\n   * @param {boolean}       [options.paranoid=true] Set `true` to count only non-deleted records. Can be used on models with `paranoid` enabled\n   * @param {boolean}       [options.distinct] Apply COUNT(DISTINCT(col)) on primary key or on options.col.\n   * @param {string}        [options.col] Column on which COUNT() should be applied\n   * @param {Array}         [options.attributes] Used in conjunction with `group`\n   * @param {Array}         [options.group] For creating complex counts. Will return multiple rows as needed.\n   * @param {Transaction}   [options.transaction] Transaction to run query under\n   * @param {Function}      [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {boolean}       [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param {string}        [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   *\n   * @returns {Promise<number>}\n   */\n  static async count(options) {\n    options = Utils.cloneDeep(options);\n    options = _.defaults(options, { hooks: true });\n\n    // Add CLS transaction\n    if (options.transaction === undefined && this.sequelize.constructor._cls) {\n      const t = this.sequelize.constructor._cls.get('transaction');\n      if (t) {\n        options.transaction = t;\n      }\n    }\n\n    options.raw = true;\n    if (options.hooks) {\n      await this.runHooks('beforeCount', options);\n    }\n    let col = options.col || '*';\n    if (options.include) {\n      col = `${this.name}.${options.col || this.primaryKeyField}`;\n    }\n    if (options.distinct && col === '*') {\n      col = this.primaryKeyField;\n    }\n    options.plain = !options.group;\n    options.dataType = new DataTypes.INTEGER();\n    options.includeIgnoreAttributes = false;\n\n    // No limit, offset or order for the options max be given to count()\n    // Set them to null to prevent scopes setting those values\n    options.limit = null;\n    options.offset = null;\n    options.order = null;\n\n    const result = await this.aggregate(col, 'count', options);\n\n    // When grouping is used, some dialects such as PG are returning the count as string\n    // --> Manually convert it to number\n    if (Array.isArray(result)) {\n      return result.map(item => ({\n        ...item,\n        count: Number(item.count)\n      }));\n    }\n\n    return result;\n  }\n\n  /**\n   * Find all the rows matching your query, within a specified offset / limit, and get the total number of rows matching your query. This is very useful for paging\n   *\n   * @example\n   * const result = await Model.findAndCountAll({\n   *   where: ...,\n   *   limit: 12,\n   *   offset: 12\n   * });\n   *\n   * # In the above example, `result.rows` will contain rows 13 through 24, while `result.count` will return the total number of rows that matched your query.\n   *\n   * # When you add includes, only those which are required (either because they have a where clause, or because `required` is explicitly set to true on the include) will be added to the count part.\n   *\n   * # Suppose you want to find all users who have a profile attached:\n   *\n   * User.findAndCountAll({\n   *   include: [\n   *      { model: Profile, required: true}\n   *   ],\n   *   limit: 3\n   * });\n   *\n   * # Because the include for `Profile` has `required` set it will result in an inner join, and only the users who have a profile will be counted. If we remove `required` from the include, both users with and without profiles will be counted\n   *\n   * @param {object} [options] See findAll options\n   *\n   * @see\n   * {@link Model.findAll} for a specification of find and query options\n   * @see\n   * {@link Model.count} for a specification of count options\n   *\n   * @returns {Promise<{count: number | number[], rows: Model[]}>}\n   */\n  static async findAndCountAll(options) {\n    if (options !== undefined && !_.isPlainObject(options)) {\n      throw new Error('The argument passed to findAndCountAll must be an options object, use findByPk if you wish to pass a single primary key value');\n    }\n\n    const countOptions = Utils.cloneDeep(options);\n\n    if (countOptions.attributes) {\n      countOptions.attributes = undefined;\n    }\n\n    const [count, rows] = await Promise.all([\n      this.count(countOptions),\n      this.findAll(options)\n    ]);\n\n    return {\n      count,\n      rows: count === 0 ? [] : rows\n    };\n  }\n\n  /**\n   * Find the maximum value of field\n   *\n   * @param {string} field attribute / field name\n   * @param {object} [options] See aggregate\n   *\n   * @see\n   * {@link Model.aggregate} for options\n   *\n   * @returns {Promise<*>}\n   */\n  static async max(field, options) {\n    return await this.aggregate(field, 'max', options);\n  }\n\n  /**\n   * Find the minimum value of field\n   *\n   * @param {string} field attribute / field name\n   * @param {object} [options] See aggregate\n   *\n   * @see\n   * {@link Model.aggregate} for options\n   *\n   * @returns {Promise<*>}\n   */\n  static async min(field, options) {\n    return await this.aggregate(field, 'min', options);\n  }\n\n  /**\n   * Find the sum of field\n   *\n   * @param {string} field attribute / field name\n   * @param {object} [options] See aggregate\n   *\n   * @see\n   * {@link Model.aggregate} for options\n   *\n   * @returns {Promise<number>}\n   */\n  static async sum(field, options) {\n    return await this.aggregate(field, 'sum', options);\n  }\n\n  /**\n   * Builds a new model instance.\n   *\n   * @param {object|Array} values An object of key value pairs or an array of such. If an array, the function will return an array of instances.\n   * @param {object}  [options] Instance build options\n   * @param {boolean} [options.raw=false] If set to true, values will ignore field and virtual setters.\n   * @param {boolean} [options.isNewRecord=true] Is this new record\n   * @param {Array}   [options.include] an array of include options - Used to build prefetched/included model instances. See `set`\n   *\n   * @returns {Model|Array<Model>}\n   */\n  static build(values, options) {\n    if (Array.isArray(values)) {\n      return this.bulkBuild(values, options);\n    }\n\n    return new this(values, options);\n  }\n\n  static bulkBuild(valueSets, options) {\n    options = { isNewRecord: true, ...options };\n\n    if (!options.includeValidated) {\n      this._conformIncludes(options, this);\n      if (options.include) {\n        this._expandIncludeAll(options);\n        this._validateIncludedElements(options);\n      }\n    }\n\n    if (options.attributes) {\n      options.attributes = options.attributes.map(attribute => Array.isArray(attribute) ? attribute[1] : attribute);\n    }\n\n    return valueSets.map(values => this.build(values, options));\n  }\n\n  /**\n   * Builds a new model instance and calls save on it.\n   *\n   * @see\n   * {@link Model.build}\n   * @see\n   * {@link Model.save}\n   *\n   * @param  {object}         values                       Hash of data values to create new record with\n   * @param  {object}         [options]                    Build and query options\n   * @param  {boolean}        [options.raw=false]          If set to true, values will ignore field and virtual setters.\n   * @param  {boolean}        [options.isNewRecord=true]   Is this new record\n   * @param  {Array}          [options.include]            An array of include options - Used to build prefetched/included model instances. See `set`\n   * @param  {string[]}       [options.fields]             An optional array of strings, representing database columns. If fields is provided, only those columns will be validated and saved.\n   * @param  {boolean}        [options.silent=false]       If true, the updatedAt timestamp will not be updated.\n   * @param  {boolean}        [options.validate=true]      If false, validations won't be run.\n   * @param  {boolean}        [options.hooks=true]         Run before and after create / update + validate hooks\n   * @param  {Function}       [options.logging=false]      A function that gets executed while running the query to log the sql.\n   * @param  {boolean}        [options.benchmark=false]    Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param  {Transaction}    [options.transaction]        Transaction to run query under\n   * @param  {string}         [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   * @param  {boolean|Array}  [options.returning=true]     Appends RETURNING <model columns> to get back all defined values; if an array of column names, append RETURNING <columns> to get back specific columns (Postgres only)\n   *\n   * @returns {Promise<Model>}\n   *\n   */\n  static async create(values, options) {\n    options = Utils.cloneDeep(options || {});\n\n    return await this.build(values, {\n      isNewRecord: true,\n      attributes: options.fields,\n      include: options.include,\n      raw: options.raw,\n      silent: options.silent\n    }).save(options);\n  }\n\n  /**\n   * Find a row that matches the query, or build (but don't save) the row if none is found.\n   * The successful result of the promise will be (instance, built)\n   *\n   * @param {object}   options find options\n   * @param {object}   options.where A hash of search attributes. If `where` is a plain object it will be appended with defaults to build a new instance.\n   * @param {object}   [options.defaults] Default values to use if building a new instance\n   * @param {object}   [options.transaction] Transaction to run query under\n   *\n   * @returns {Promise<Model,boolean>}\n   */\n  static async findOrBuild(options) {\n    if (!options || !options.where || arguments.length > 1) {\n      throw new Error(\n        'Missing where attribute in the options parameter passed to findOrBuild. ' +\n        'Please note that the API has changed, and is now options only (an object with where, defaults keys, transaction etc.)'\n      );\n    }\n\n    let values;\n\n    let instance = await this.findOne(options);\n    if (instance === null) {\n      values = { ...options.defaults };\n      if (_.isPlainObject(options.where)) {\n        values = Utils.defaults(values, options.where);\n      }\n\n      instance = this.build(values, options);\n\n      return [instance, true];\n    }\n\n    return [instance, false];\n  }\n\n  /**\n   * Find a row that matches the query, or build and save the row if none is found\n   * The successful result of the promise will be (instance, created)\n   *\n   * If no transaction is passed in the `options` object, a new transaction will be created internally, to prevent the race condition where a matching row is created by another connection after the find but before the insert call.\n   * However, it is not always possible to handle this case in SQLite, specifically if one transaction inserts and another tries to select before the first one has committed. In this case, an instance of sequelize. TimeoutError will be thrown instead.\n   * If a transaction is created, a savepoint will be created instead, and any unique constraint violation will be handled internally.\n   *\n   * @see\n   * {@link Model.findAll} for a full specification of find and options\n   *\n   * @param {object}      options find and create options\n   * @param {object}      options.where where A hash of search attributes. If `where` is a plain object it will be appended with defaults to build a new instance.\n   * @param {object}      [options.defaults] Default values to use if creating a new instance\n   * @param {Transaction} [options.transaction] Transaction to run query under\n   *\n   * @returns {Promise<Model,boolean>}\n   */\n  static async findOrCreate(options) {\n    if (!options || !options.where || arguments.length > 1) {\n      throw new Error(\n        'Missing where attribute in the options parameter passed to findOrCreate. ' +\n        'Please note that the API has changed, and is now options only (an object with where, defaults keys, transaction etc.)'\n      );\n    }\n\n    options = { ...options };\n\n    if (options.defaults) {\n      const defaults = Object.keys(options.defaults);\n      const unknownDefaults = defaults.filter(name => !this.rawAttributes[name]);\n\n      if (unknownDefaults.length) {\n        logger.warn(`Unknown attributes (${unknownDefaults}) passed to defaults option of findOrCreate`);\n      }\n    }\n\n    if (options.transaction === undefined && this.sequelize.constructor._cls) {\n      const t = this.sequelize.constructor._cls.get('transaction');\n      if (t) {\n        options.transaction = t;\n      }\n    }\n\n    const internalTransaction = !options.transaction;\n    let values;\n    let transaction;\n\n    try {\n      const t = await this.sequelize.transaction(options);\n      transaction = t;\n      options.transaction = t;\n\n      const found = await this.findOne(Utils.defaults({ transaction }, options));\n      if (found !== null) {\n        return [found, false];\n      }\n\n      values = { ...options.defaults };\n      if (_.isPlainObject(options.where)) {\n        values = Utils.defaults(values, options.where);\n      }\n\n      options.exception = true;\n      options.returning = true;\n\n      try {\n        const created = await this.create(values, options);\n        if (created.get(this.primaryKeyAttribute, { raw: true }) === null) {\n          // If the query returned an empty result for the primary key, we know that this was actually a unique constraint violation\n          throw new sequelizeErrors.UniqueConstraintError();\n        }\n\n        return [created, true];\n      } catch (err) {\n        if (!(err instanceof sequelizeErrors.UniqueConstraintError)) throw err;\n        const flattenedWhere = Utils.flattenObjectDeep(options.where);\n        const flattenedWhereKeys = Object.keys(flattenedWhere).map(name => _.last(name.split('.')));\n        const whereFields = flattenedWhereKeys.map(name => _.get(this.rawAttributes, `${name}.field`, name));\n        const defaultFields = options.defaults && Object.keys(options.defaults)\n          .filter(name => this.rawAttributes[name])\n          .map(name => this.rawAttributes[name].field || name);\n\n        const errFieldKeys = Object.keys(err.fields);\n        const errFieldsWhereIntersects = Utils.intersects(errFieldKeys, whereFields);\n        if (defaultFields && !errFieldsWhereIntersects && Utils.intersects(errFieldKeys, defaultFields)) {\n          throw err;\n        }\n\n        if (errFieldsWhereIntersects) {\n          _.each(err.fields, (value, key) => {\n            const name = this.fieldRawAttributesMap[key].fieldName;\n            if (value.toString() !== options.where[name].toString()) {\n              throw new Error(`${this.name}#findOrCreate: value used for ${name} was not equal for both the find and the create calls, '${options.where[name]}' vs '${value}'`);\n            }\n          });\n        }\n\n        // Someone must have created a matching instance inside the same transaction since we last did a find. Let's find it!\n        const otherCreated = await this.findOne(Utils.defaults({\n          transaction: internalTransaction ? null : transaction\n        }, options));\n\n        // Sanity check, ideally we caught this at the defaultFeilds/err.fields check\n        // But if we didn't and instance is null, we will throw\n        if (otherCreated === null) throw err;\n\n        return [otherCreated, false];\n      }\n    } finally {\n      if (internalTransaction && transaction) {\n        await transaction.commit();\n      }\n    }\n  }\n\n  /**\n   * A more performant findOrCreate that may not work under a transaction (working in postgres)\n   * Will execute a find call, if empty then attempt to create, if unique constraint then attempt to find again\n   *\n   * @see\n   * {@link Model.findAll} for a full specification of find and options\n   *\n   * @param {object} options find options\n   * @param {object} options.where A hash of search attributes. If `where` is a plain object it will be appended with defaults to build a new instance.\n   * @param {object} [options.defaults] Default values to use if creating a new instance\n   *\n   * @returns {Promise<Model,boolean>}\n   */\n  static async findCreateFind(options) {\n    if (!options || !options.where) {\n      throw new Error(\n        'Missing where attribute in the options parameter passed to findCreateFind.'\n      );\n    }\n\n    let values = { ...options.defaults };\n    if (_.isPlainObject(options.where)) {\n      values = Utils.defaults(values, options.where);\n    }\n\n\n    const found = await this.findOne(options);\n    if (found) return [found, false];\n\n    try {\n      const createOptions = { ...options };\n\n      // To avoid breaking a postgres transaction, run the create with `ignoreDuplicates`.\n      if (this.sequelize.options.dialect === 'postgres' && options.transaction) {\n        createOptions.ignoreDuplicates = true;\n      }\n\n      const created = await this.create(values, createOptions);\n      return [created, true];\n    } catch (err) {\n      if (!(err instanceof sequelizeErrors.UniqueConstraintError || err instanceof sequelizeErrors.EmptyResultError)) {\n        throw err;\n      }\n\n      const foundAgain = await this.findOne(options);\n      return [foundAgain, false];\n    }\n  }\n\n  /**\n   * Insert or update a single row. An update will be executed if a row which matches the supplied values on either the primary key or a unique key is found. Note that the unique index must be defined in your sequelize model and not just in the table. Otherwise you may experience a unique constraint violation, because sequelize fails to identify the row that should be updated.\n   *\n   * **Implementation details:**\n   *\n   * * MySQL - Implemented with ON DUPLICATE KEY UPDATE`\n   * * PostgreSQL - Implemented with ON CONFLICT DO UPDATE. If update data contains PK field, then PK is selected as the default conflict key. Otherwise first unique constraint/index will be selected, which can satisfy conflict key requirements.\n   * * SQLite - Implemented with ON CONFLICT DO UPDATE\n   * * MSSQL - Implemented as a single query using `MERGE` and `WHEN (NOT) MATCHED THEN`\n   *\n   * **Note** that Postgres/SQLite returns null for created, no matter if the row was created or updated\n   *\n   * @param  {object}        values                                        hash of values to upsert\n   * @param  {object}        [options]                                     upsert options\n   * @param  {boolean}       [options.validate=true]                       Run validations before the row is inserted\n   * @param  {Array}         [options.fields=Object.keys(this.attributes)] The fields to update if the record already exists. Defaults to all changed fields.  If none of the specified fields are present on the provided `values` object, an insert will still be attempted, but duplicate key conflicts will be ignored.\n   * @param  {boolean}       [options.hooks=true]                          Run before / after upsert hooks?\n   * @param  {boolean}       [options.returning=true]                      If true, fetches back auto generated values\n   * @param  {Transaction}   [options.transaction]                         Transaction to run query under\n   * @param  {Function}      [options.logging=false]                       A function that gets executed while running the query to log the sql.\n   * @param  {boolean}       [options.benchmark=false]                     Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param  {string}        [options.searchPath=DEFAULT]                  An optional parameter to specify the schema search_path (Postgres only)\n   * @param  {Array<string>} [options.conflictFields]                      Optional override for the conflict fields in the ON CONFLICT part of the query. Only supported in Postgres >= 9.5 and SQLite >= 3.24.0\n   *\n   * @returns {Promise<Array<Model, boolean | null>>} returns an array with two elements, the first being the new record and the second being `true` if it was just created or `false` if it already existed (except on Postgres and SQLite, which can't detect this and will always return `null` instead of a boolean).\n   */\n  static async upsert(values, options) {\n    options = {\n      hooks: true,\n      returning: true,\n      validate: true,\n      ...Utils.cloneDeep(options)\n    };\n\n    // Add CLS transaction\n    if (options.transaction === undefined && this.sequelize.constructor._cls) {\n      const t = this.sequelize.constructor._cls.get('transaction');\n      if (t) {\n        options.transaction = t;\n      }\n    }\n\n    const createdAtAttr = this._timestampAttributes.createdAt;\n    const updatedAtAttr = this._timestampAttributes.updatedAt;\n    const hasPrimary = this.primaryKeyField in values || this.primaryKeyAttribute in values;\n    const instance = this.build(values);\n\n    options.model = this;\n    options.instance = instance;\n\n    const changed = Array.from(instance._changed);\n    if (!options.fields) {\n      options.fields = changed;\n    }\n\n    if (options.validate) {\n      await instance.validate(options);\n    }\n    // Map field names\n    const updatedDataValues = _.pick(instance.dataValues, changed);\n    const insertValues = Utils.mapValueFieldNames(instance.dataValues, Object.keys(instance.rawAttributes), this);\n    const updateValues = Utils.mapValueFieldNames(updatedDataValues, options.fields, this);\n    const now = Utils.now(this.sequelize.options.dialect);\n\n    // Attach createdAt\n    if (createdAtAttr && !insertValues[createdAtAttr]) {\n      const field = this.rawAttributes[createdAtAttr].field || createdAtAttr;\n      insertValues[field] = this._getDefaultTimestamp(createdAtAttr) || now;\n    }\n    if (updatedAtAttr && !insertValues[updatedAtAttr]) {\n      const field = this.rawAttributes[updatedAtAttr].field || updatedAtAttr;\n      insertValues[field] = updateValues[field] = this._getDefaultTimestamp(updatedAtAttr) || now;\n    }\n\n    // Db2 does not allow NULL values for unique columns.\n    // Add dummy values if not provided by test case or user.\n    if (this.sequelize.options.dialect === 'db2') {\n      this.uniqno = this.sequelize.dialect.queryGenerator.addUniqueFields(\n        insertValues, this.rawAttributes, this.uniqno);\n    }\n\n    // Build adds a null value for the primary key, if none was given by the user.\n    // We need to remove that because of some Postgres technicalities.\n    if (!hasPrimary && this.primaryKeyAttribute && !this.rawAttributes[this.primaryKeyAttribute].defaultValue) {\n      delete insertValues[this.primaryKeyField];\n      delete updateValues[this.primaryKeyField];\n    }\n\n    if (options.hooks) {\n      await this.runHooks('beforeUpsert', values, options);\n    }\n    const result = await this.queryInterface.upsert(this.getTableName(options), insertValues, updateValues, instance.where(), options);\n\n    const [record] = result;\n    record.isNewRecord = false;\n\n    if (options.hooks) {\n      await this.runHooks('afterUpsert', result, options);\n      return result;\n    }\n    return result;\n  }\n\n  /**\n   * Create and insert multiple instances in bulk.\n   *\n   * The success handler is passed an array of instances, but please notice that these may not completely represent the state of the rows in the DB. This is because MySQL\n   * and SQLite do not make it easy to obtain back automatically generated IDs and other default values in a way that can be mapped to multiple records.\n   * To obtain Instances for the newly created values, you will need to query for them again.\n   *\n   * If validation fails, the promise is rejected with an array-like AggregateError\n   *\n   * @param  {Array}          records                          List of objects (key/value pairs) to create instances from\n   * @param  {object}         [options]                        Bulk create options\n   * @param  {Array}          [options.fields]                 Fields to insert (defaults to all fields)\n   * @param  {boolean}        [options.validate=false]         Should each row be subject to validation before it is inserted. The whole insert will fail if one row fails validation\n   * @param  {boolean}        [options.hooks=true]             Run before / after bulk create hooks?\n   * @param  {boolean}        [options.individualHooks=false]  Run before / after create hooks for each individual Instance? BulkCreate hooks will still be run if options.hooks is true.\n   * @param  {boolean}        [options.ignoreDuplicates=false] Ignore duplicate values for primary keys? (not supported by MSSQL or Postgres < 9.5)\n   * @param  {Array}          [options.updateOnDuplicate]      Fields to update if row key already exists (on duplicate key update)? (only supported by MySQL, MariaDB, SQLite >= 3.24.0 & Postgres >= 9.5).\n   * @param  {Array}          [options.conflictAttributes]     Optional override for the conflict fields in the ON CONFLICT part of the query. Only supported in Postgres >= 9.5 and SQLite >= 3.24.0\n   * @param  {Transaction}    [options.transaction]            Transaction to run query under\n   * @param  {Function}       [options.logging=false]          A function that gets executed while running the query to log the sql.\n   * @param  {boolean}        [options.benchmark=false]        Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param  {boolean|Array}  [options.returning=false]        If true, append RETURNING <model columns> to get back all defined values; if an array of column names, append RETURNING <columns> to get back specific columns (Postgres only)\n   * @param  {string}         [options.searchPath=DEFAULT]     An optional parameter to specify the schema search_path (Postgres only)\n   *\n   * @returns {Promise<Array<Model>>}\n   */\n  static async bulkCreate(records, options = {}) {\n    if (!records.length) {\n      return [];\n    }\n\n    const dialect = this.sequelize.options.dialect;\n    const now = Utils.now(this.sequelize.options.dialect);\n    options = Utils.cloneDeep(options);\n\n    // Add CLS transaction\n    if (options.transaction === undefined && this.sequelize.constructor._cls) {\n      const t = this.sequelize.constructor._cls.get('transaction');\n      if (t) {\n        options.transaction = t;\n      }\n    }\n\n    options.model = this;\n\n    if (!options.includeValidated) {\n      this._conformIncludes(options, this);\n      if (options.include) {\n        this._expandIncludeAll(options);\n        this._validateIncludedElements(options);\n      }\n    }\n\n    const instances = records.map(values => this.build(values, { isNewRecord: true, include: options.include }));\n\n    const recursiveBulkCreate = async (instances, options) => {\n      options = {\n        validate: false,\n        hooks: true,\n        individualHooks: false,\n        ignoreDuplicates: false,\n        ...options\n      };\n\n      if (options.returning === undefined) {\n        if (options.association) {\n          options.returning = false;\n        } else {\n          options.returning = true;\n        }\n      }\n      if (options.ignoreDuplicates && !this.sequelize.dialect.supports.inserts.ignoreDuplicates &&\n          !this.sequelize.dialect.supports.inserts.onConflictDoNothing) {\n        throw new Error(`${dialect} does not support the ignoreDuplicates option.`);\n      }\n      if (options.updateOnDuplicate && (dialect !== 'mysql' && dialect !== 'mariadb' && dialect !== 'sqlite' && dialect !== 'postgres')) {\n        throw new Error(`${dialect} does not support the updateOnDuplicate option.`);\n      }\n\n      const model = options.model;\n\n      options.fields = options.fields || Object.keys(model.rawAttributes);\n      const createdAtAttr = model._timestampAttributes.createdAt;\n      const updatedAtAttr = model._timestampAttributes.updatedAt;\n\n      if (options.updateOnDuplicate !== undefined) {\n        if (Array.isArray(options.updateOnDuplicate) && options.updateOnDuplicate.length) {\n          options.updateOnDuplicate = _.intersection(\n            _.without(Object.keys(model.tableAttributes), createdAtAttr),\n            options.updateOnDuplicate\n          );\n        } else {\n          throw new Error('updateOnDuplicate option only supports non-empty array.');\n        }\n      }\n\n      // Run before hook\n      if (options.hooks) {\n        await model.runHooks('beforeBulkCreate', instances, options);\n      }\n      // Validate\n      if (options.validate) {\n        const errors = [];\n        const validateOptions = { ...options };\n        validateOptions.hooks = options.individualHooks;\n\n        await Promise.all(instances.map(async instance => {\n          try {\n            await instance.validate(validateOptions);\n          } catch (err) {\n            errors.push(new sequelizeErrors.BulkRecordError(err, instance));\n          }\n        }));\n\n        delete options.skip;\n        if (errors.length) {\n          throw new sequelizeErrors.AggregateError(errors);\n        }\n      }\n      if (options.individualHooks) {\n        await Promise.all(instances.map(async instance => {\n          const individualOptions = {\n            ...options,\n            validate: false,\n            hooks: true\n          };\n          delete individualOptions.fields;\n          delete individualOptions.individualHooks;\n          delete individualOptions.ignoreDuplicates;\n\n          await instance.save(individualOptions);\n        }));\n      } else {\n        if (options.include && options.include.length) {\n          await Promise.all(options.include.filter(include => include.association instanceof BelongsTo).map(async include => {\n            const associationInstances = [];\n            const associationInstanceIndexToInstanceMap = [];\n\n            for (const instance of instances) {\n              const associationInstance = instance.get(include.as);\n              if (associationInstance) {\n                associationInstances.push(associationInstance);\n                associationInstanceIndexToInstanceMap.push(instance);\n              }\n            }\n\n            if (!associationInstances.length) {\n              return;\n            }\n\n            const includeOptions = _(Utils.cloneDeep(include))\n              .omit(['association'])\n              .defaults({\n                transaction: options.transaction,\n                logging: options.logging\n              }).value();\n\n            const createdAssociationInstances = await recursiveBulkCreate(associationInstances, includeOptions);\n            for (const idx in createdAssociationInstances) {\n              const associationInstance = createdAssociationInstances[idx];\n              const instance = associationInstanceIndexToInstanceMap[idx];\n\n              await include.association.set(instance, associationInstance, { save: false, logging: options.logging });\n            }\n          }));\n        }\n\n        // Create all in one query\n        // Recreate records from instances to represent any changes made in hooks or validation\n        records = instances.map(instance => {\n          const values = instance.dataValues;\n\n          // set createdAt/updatedAt attributes\n          if (createdAtAttr && !values[createdAtAttr]) {\n            values[createdAtAttr] = now;\n            if (!options.fields.includes(createdAtAttr)) {\n              options.fields.push(createdAtAttr);\n            }\n          }\n          if (updatedAtAttr && !values[updatedAtAttr]) {\n            values[updatedAtAttr] = now;\n            if (!options.fields.includes(updatedAtAttr)) {\n              options.fields.push(updatedAtAttr);\n            }\n          }\n\n          const out = Utils.mapValueFieldNames(values, options.fields, model);\n          for (const key of model._virtualAttributes) {\n            delete out[key];\n          }\n          return out;\n        });\n\n        // Map attributes to fields for serial identification\n        const fieldMappedAttributes = {};\n        for (const attr in model.tableAttributes) {\n          fieldMappedAttributes[model.rawAttributes[attr].field || attr] = model.rawAttributes[attr];\n        }\n\n        // Map updateOnDuplicate attributes to fields\n        if (options.updateOnDuplicate) {\n          options.updateOnDuplicate = options.updateOnDuplicate.map(attr => model.rawAttributes[attr].field || attr);\n\n          if (options.conflictAttributes) {\n            options.upsertKeys = options.conflictAttributes.map(\n              attrName => model.rawAttributes[attrName].field || attrName\n            );\n          } else {\n            const upsertKeys = [];\n\n            for (const i of model._indexes) {\n              if (i.unique && !i.where) { // Don't infer partial indexes\n                upsertKeys.push(...i.fields);\n              }\n            }\n\n            const firstUniqueKey = Object.values(model.uniqueKeys).find(c => c.fields.length > 0);\n\n            if (firstUniqueKey && firstUniqueKey.fields) {\n              upsertKeys.push(...firstUniqueKey.fields);\n            }\n\n            options.upsertKeys = upsertKeys.length > 0\n              ? upsertKeys\n              : Object.values(model.primaryKeys).map(x => x.field);\n          }\n        }\n\n        // Map returning attributes to fields\n        if (options.returning && Array.isArray(options.returning)) {\n          options.returning = options.returning.map(attr => _.get(model.rawAttributes[attr], 'field', attr));\n        }\n\n        const results = await model.queryInterface.bulkInsert(model.getTableName(options), records, options, fieldMappedAttributes);\n        if (Array.isArray(results)) {\n          results.forEach((result, i) => {\n            const instance = instances[i];\n\n            for (const key in result) {\n              if (!instance || key === model.primaryKeyAttribute &&\n                instance.get(model.primaryKeyAttribute) &&\n                ['mysql', 'mariadb', 'sqlite'].includes(dialect)) {\n                // The query.js for these DBs is blind, it autoincrements the\n                // primarykey value, even if it was set manually. Also, it can\n                // return more results than instances, bug?.\n                continue;\n              }\n              if (Object.prototype.hasOwnProperty.call(result, key)) {\n                const record = result[key];\n\n                const attr = _.find(model.rawAttributes, attribute => attribute.fieldName === key || attribute.field === key);\n\n                instance.dataValues[attr && attr.fieldName || key] = record;\n              }\n            }\n          });\n        }\n      }\n\n      if (options.include && options.include.length) {\n        await Promise.all(options.include.filter(include => !(include.association instanceof BelongsTo ||\n          include.parent && include.parent.association instanceof BelongsToMany)).map(async include => {\n          const associationInstances = [];\n          const associationInstanceIndexToInstanceMap = [];\n\n          for (const instance of instances) {\n            let associated = instance.get(include.as);\n            if (!Array.isArray(associated)) associated = [associated];\n\n            for (const associationInstance of associated) {\n              if (associationInstance) {\n                if (!(include.association instanceof BelongsToMany)) {\n                  associationInstance.set(include.association.foreignKey, instance.get(include.association.sourceKey || instance.constructor.primaryKeyAttribute, { raw: true }), { raw: true });\n                  Object.assign(associationInstance, include.association.scope);\n                }\n                associationInstances.push(associationInstance);\n                associationInstanceIndexToInstanceMap.push(instance);\n              }\n            }\n          }\n\n          if (!associationInstances.length) {\n            return;\n          }\n\n          const includeOptions = _(Utils.cloneDeep(include))\n            .omit(['association'])\n            .defaults({\n              transaction: options.transaction,\n              logging: options.logging\n            }).value();\n\n          const createdAssociationInstances = await recursiveBulkCreate(associationInstances, includeOptions);\n          if (include.association instanceof BelongsToMany) {\n            const valueSets = [];\n\n            for (const idx in createdAssociationInstances) {\n              const associationInstance = createdAssociationInstances[idx];\n              const instance = associationInstanceIndexToInstanceMap[idx];\n\n              const values = {\n                [include.association.foreignKey]: instance.get(instance.constructor.primaryKeyAttribute, { raw: true }),\n                [include.association.otherKey]: associationInstance.get(associationInstance.constructor.primaryKeyAttribute, { raw: true }),\n                // Include values defined in the association\n                ...include.association.through.scope\n              };\n              if (associationInstance[include.association.through.model.name]) {\n                for (const attr of Object.keys(include.association.through.model.rawAttributes)) {\n                  if (include.association.through.model.rawAttributes[attr]._autoGenerated ||\n                    attr === include.association.foreignKey ||\n                    attr === include.association.otherKey ||\n                    typeof associationInstance[include.association.through.model.name][attr] === 'undefined') {\n                    continue;\n                  }\n                  values[attr] = associationInstance[include.association.through.model.name][attr];\n                }\n              }\n\n              valueSets.push(values);\n            }\n\n            const throughOptions = _(Utils.cloneDeep(include))\n              .omit(['association', 'attributes'])\n              .defaults({\n                transaction: options.transaction,\n                logging: options.logging\n              }).value();\n            throughOptions.model = include.association.throughModel;\n            const throughInstances = include.association.throughModel.bulkBuild(valueSets, throughOptions);\n\n            await recursiveBulkCreate(throughInstances, throughOptions);\n          }\n        }));\n      }\n\n      // map fields back to attributes\n      instances.forEach(instance => {\n        for (const attr in model.rawAttributes) {\n          if (model.rawAttributes[attr].field &&\n              instance.dataValues[model.rawAttributes[attr].field] !== undefined &&\n              model.rawAttributes[attr].field !== attr\n          ) {\n            instance.dataValues[attr] = instance.dataValues[model.rawAttributes[attr].field];\n            delete instance.dataValues[model.rawAttributes[attr].field];\n          }\n          instance._previousDataValues[attr] = instance.dataValues[attr];\n          instance.changed(attr, false);\n        }\n        instance.isNewRecord = false;\n      });\n\n      // Run after hook\n      if (options.hooks) {\n        await model.runHooks('afterBulkCreate', instances, options);\n      }\n\n      return instances;\n    };\n\n    return await recursiveBulkCreate(instances, options);\n  }\n\n  /**\n   * Truncate all instances of the model. This is a convenient method for Model.destroy({ truncate: true }).\n   *\n   * @param {object}           [options] The options passed to Model.destroy in addition to truncate\n   * @param {boolean|Function} [options.cascade = false] Truncates all tables that have foreign-key references to the named table, or to any tables added to the group due to CASCADE.\n   * @param {boolean}          [options.restartIdentity=false] Automatically restart sequences owned by columns of the truncated table.\n   * @param {Transaction}      [options.transaction] Transaction to run query under\n   * @param {boolean|Function} [options.logging] A function that logs sql queries, or false for no logging\n   * @param {boolean}          [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param {string}           [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   *\n   * @returns {Promise}\n   *\n   * @see\n   * {@link Model.destroy} for more information\n   */\n  static async truncate(options) {\n    options = Utils.cloneDeep(options) || {};\n    options.truncate = true;\n    return await this.destroy(options);\n  }\n\n  /**\n   * Delete multiple instances, or set their deletedAt timestamp to the current time if `paranoid` is enabled.\n   *\n   * @param  {object}       options                         destroy options\n   * @param  {object}       [options.where]                 Filter the destroy\n   * @param  {boolean}      [options.hooks=true]            Run before / after bulk destroy hooks?\n   * @param  {boolean}      [options.individualHooks=false] If set to true, destroy will SELECT all records matching the where parameter and will execute before / after destroy hooks on each row\n   * @param  {number}       [options.limit]                 How many rows to delete\n   * @param  {boolean}      [options.force=false]           Delete instead of setting deletedAt to current timestamp (only applicable if `paranoid` is enabled)\n   * @param  {boolean}      [options.truncate=false]        If set to true, dialects that support it will use TRUNCATE instead of DELETE FROM. If a table is truncated the where and limit options are ignored\n   * @param  {boolean}      [options.cascade=false]         Only used in conjunction with TRUNCATE. Truncates  all tables that have foreign-key references to the named table, or to any tables added to the group due to CASCADE.\n   * @param  {boolean}      [options.restartIdentity=false] Only used in conjunction with TRUNCATE. Automatically restart sequences owned by columns of the truncated table.\n   * @param  {Transaction}  [options.transaction] Transaction to run query under\n   * @param  {Function}     [options.logging=false]         A function that gets executed while running the query to log the sql.\n   * @param  {boolean}      [options.benchmark=false]       Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   *\n   * @returns {Promise<number>} The number of destroyed rows\n   */\n  static async destroy(options) {\n    options = Utils.cloneDeep(options);\n\n    // Add CLS transaction\n    if (options.transaction === undefined && this.sequelize.constructor._cls) {\n      const t = this.sequelize.constructor._cls.get('transaction');\n      if (t) {\n        options.transaction = t;\n      }\n    }\n\n    this._injectScope(options);\n\n    if (!options || !(options.where || options.truncate)) {\n      throw new Error('Missing where or truncate attribute in the options parameter of model.destroy.');\n    }\n\n    if (!options.truncate && !_.isPlainObject(options.where) && !Array.isArray(options.where) && !(options.where instanceof Utils.SequelizeMethod)) {\n      throw new Error('Expected plain object, array or sequelize method in the options.where parameter of model.destroy.');\n    }\n\n    options = _.defaults(options, {\n      hooks: true,\n      individualHooks: false,\n      force: false,\n      cascade: false,\n      restartIdentity: false\n    });\n\n    options.type = QueryTypes.BULKDELETE;\n\n    Utils.mapOptionFieldNames(options, this);\n    options.model = this;\n\n\n    // Run before hook\n    if (options.hooks) {\n      await this.runHooks('beforeBulkDestroy', options);\n    }\n    let instances;\n    // Get daos and run beforeDestroy hook on each record individually\n    if (options.individualHooks) {\n      instances = await this.findAll({ where: options.where, transaction: options.transaction, logging: options.logging, benchmark: options.benchmark });\n\n      await Promise.all(instances.map(instance => this.runHooks('beforeDestroy', instance, options)));\n    }\n    let result;\n    // Run delete query (or update if paranoid)\n    if (this._timestampAttributes.deletedAt && !options.force) {\n      // Set query type appropriately when running soft delete\n      options.type = QueryTypes.BULKUPDATE;\n\n      const attrValueHash = {};\n      const deletedAtAttribute = this.rawAttributes[this._timestampAttributes.deletedAt];\n      const field = this.rawAttributes[this._timestampAttributes.deletedAt].field;\n      const where = {\n        [field]: Object.prototype.hasOwnProperty.call(deletedAtAttribute, 'defaultValue') ? deletedAtAttribute.defaultValue : null\n      };\n\n\n      attrValueHash[field] = Utils.now(this.sequelize.options.dialect);\n      result = await this.queryInterface.bulkUpdate(this.getTableName(options), attrValueHash, Object.assign(where, options.where), options, this.rawAttributes);\n    } else {\n      result = await this.queryInterface.bulkDelete(this.getTableName(options), options.where, options, this);\n    }\n    // Run afterDestroy hook on each record individually\n    if (options.individualHooks) {\n      await Promise.all(\n        instances.map(instance => this.runHooks('afterDestroy', instance, options))\n      );\n    }\n    // Run after hook\n    if (options.hooks) {\n      await this.runHooks('afterBulkDestroy', options);\n    }\n    return result;\n  }\n\n  /**\n   * Restore multiple instances if `paranoid` is enabled.\n   *\n   * @param  {object}       options                         restore options\n   * @param  {object}       [options.where]                 Filter the restore\n   * @param  {boolean}      [options.hooks=true]            Run before / after bulk restore hooks?\n   * @param  {boolean}      [options.individualHooks=false] If set to true, restore will find all records within the where parameter and will execute before / after bulkRestore hooks on each row\n   * @param  {number}       [options.limit]                 How many rows to undelete (only for mysql)\n   * @param  {Function}     [options.logging=false]         A function that gets executed while running the query to log the sql.\n   * @param  {boolean}      [options.benchmark=false]       Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param  {Transaction}  [options.transaction]           Transaction to run query under\n   *\n   * @returns {Promise}\n   */\n  static async restore(options) {\n    if (!this._timestampAttributes.deletedAt) throw new Error('Model is not paranoid');\n\n    options = {\n      hooks: true,\n      individualHooks: false,\n      ...options\n    };\n\n    // Add CLS transaction\n    if (options.transaction === undefined && this.sequelize.constructor._cls) {\n      const t = this.sequelize.constructor._cls.get('transaction');\n      if (t) {\n        options.transaction = t;\n      }\n    }\n\n    options.type = QueryTypes.RAW;\n    options.model = this;\n\n    Utils.mapOptionFieldNames(options, this);\n\n    // Run before hook\n    if (options.hooks) {\n      await this.runHooks('beforeBulkRestore', options);\n    }\n\n    let instances;\n    // Get daos and run beforeRestore hook on each record individually\n    if (options.individualHooks) {\n      instances = await this.findAll({ where: options.where, transaction: options.transaction, logging: options.logging, benchmark: options.benchmark, paranoid: false });\n\n      await Promise.all(instances.map(instance => this.runHooks('beforeRestore', instance, options)));\n    }\n    // Run undelete query\n    const attrValueHash = {};\n    const deletedAtCol = this._timestampAttributes.deletedAt;\n    const deletedAtAttribute = this.rawAttributes[deletedAtCol];\n    const deletedAtDefaultValue = Object.prototype.hasOwnProperty.call(deletedAtAttribute, 'defaultValue') ? deletedAtAttribute.defaultValue : null;\n\n    attrValueHash[deletedAtAttribute.field || deletedAtCol] = deletedAtDefaultValue;\n    options.omitNull = false;\n    const result = await this.queryInterface.bulkUpdate(this.getTableName(options), attrValueHash, options.where, options, this.rawAttributes);\n    // Run afterDestroy hook on each record individually\n    if (options.individualHooks) {\n      await Promise.all(\n        instances.map(instance => this.runHooks('afterRestore', instance, options))\n      );\n    }\n    // Run after hook\n    if (options.hooks) {\n      await this.runHooks('afterBulkRestore', options);\n    }\n    return result;\n  }\n\n  /**\n   * Update multiple instances that match the where options.\n   *\n   * @param  {object}         values                          hash of values to update\n   * @param  {object}         options                         update options\n   * @param  {object}         options.where                   Options to describe the scope of the search.\n   * @param  {boolean}        [options.paranoid=true]         If true, only non-deleted records will be updated. If false, both deleted and non-deleted records will be updated. Only applies if `options.paranoid` is true for the model.\n   * @param  {Array}          [options.fields]                Fields to update (defaults to all fields)\n   * @param  {boolean}        [options.validate=true]         Should each row be subject to validation before it is inserted. The whole insert will fail if one row fails validation\n   * @param  {boolean}        [options.hooks=true]            Run before / after bulk update hooks?\n   * @param  {boolean}        [options.sideEffects=true]      Whether or not to update the side effects of any virtual setters.\n   * @param  {boolean}        [options.individualHooks=false] Run before / after update hooks?. If true, this will execute a SELECT followed by individual UPDATEs. A select is needed, because the row data needs to be passed to the hooks\n   * @param  {boolean|Array}  [options.returning=false]       If true, append RETURNING <model columns> to get back all defined values; if an array of column names, append RETURNING <columns> to get back specific columns (Postgres only)\n   * @param  {number}         [options.limit]                 How many rows to update (only for mysql and mariadb, implemented as TOP(n) for MSSQL; for sqlite it is supported only when rowid is present)\n   * @param  {Function}       [options.logging=false]         A function that gets executed while running the query to log the sql.\n   * @param  {boolean}        [options.benchmark=false]       Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param  {Transaction}    [options.transaction]           Transaction to run query under\n   * @param  {boolean}        [options.silent=false]          If true, the updatedAt timestamp will not be updated.\n   *\n   * @returns {Promise<Array<number,number>>}  The promise returns an array with one or two elements. The first element is always the number\n   * of affected rows, while the second element is the actual affected rows (only supported in postgres with `options.returning` true).\n   *\n   */\n  static async update(values, options) {\n    options = Utils.cloneDeep(options);\n\n    // Add CLS transaction\n    if (options.transaction === undefined && this.sequelize.constructor._cls) {\n      const t = this.sequelize.constructor._cls.get('transaction');\n      if (t) {\n        options.transaction = t;\n      }\n    }\n\n    this._injectScope(options);\n    this._optionsMustContainWhere(options);\n\n    options = this._paranoidClause(this, _.defaults(options, {\n      validate: true,\n      hooks: true,\n      individualHooks: false,\n      returning: false,\n      force: false,\n      sideEffects: true\n    }));\n\n    options.type = QueryTypes.BULKUPDATE;\n\n    // Clone values so it doesn't get modified for caller scope and ignore undefined values\n    values = _.omitBy(values, value => value === undefined);\n\n    // Remove values that are not in the options.fields\n    if (options.fields && options.fields instanceof Array) {\n      for (const key of Object.keys(values)) {\n        if (!options.fields.includes(key)) {\n          delete values[key];\n        }\n      }\n    } else {\n      const updatedAtAttr = this._timestampAttributes.updatedAt;\n      options.fields = _.intersection(Object.keys(values), Object.keys(this.tableAttributes));\n      if (updatedAtAttr && !options.fields.includes(updatedAtAttr)) {\n        options.fields.push(updatedAtAttr);\n      }\n    }\n\n    if (this._timestampAttributes.updatedAt && !options.silent) {\n      values[this._timestampAttributes.updatedAt] = this._getDefaultTimestamp(this._timestampAttributes.updatedAt) || Utils.now(this.sequelize.options.dialect);\n    }\n\n    options.model = this;\n\n    let valuesUse;\n    // Validate\n    if (options.validate) {\n      const build = this.build(values);\n      build.set(this._timestampAttributes.updatedAt, values[this._timestampAttributes.updatedAt], { raw: true });\n\n      if (options.sideEffects) {\n        Object.assign(values, _.pick(build.get(), build.changed()));\n        options.fields = _.union(options.fields, Object.keys(values));\n      }\n\n      // We want to skip validations for all other fields\n      options.skip = _.difference(Object.keys(this.rawAttributes), Object.keys(values));\n      const attributes = await build.validate(options);\n      options.skip = undefined;\n      if (attributes && attributes.dataValues) {\n        values = _.pick(attributes.dataValues, Object.keys(values));\n      }\n    }\n    // Run before hook\n    if (options.hooks) {\n      options.attributes = values;\n      await this.runHooks('beforeBulkUpdate', options);\n      values = options.attributes;\n      delete options.attributes;\n    }\n\n    valuesUse = values;\n\n    // Get instances and run beforeUpdate hook on each record individually\n    let instances;\n    let updateDoneRowByRow = false;\n    if (options.individualHooks) {\n      instances = await this.findAll({\n        where: options.where,\n        transaction: options.transaction,\n        logging: options.logging,\n        benchmark: options.benchmark,\n        paranoid: options.paranoid\n      });\n\n      if (instances.length) {\n        // Run beforeUpdate hooks on each record and check whether beforeUpdate hook changes values uniformly\n        // i.e. whether they change values for each record in the same way\n        let changedValues;\n        let different = false;\n\n        instances = await Promise.all(instances.map(async instance => {\n          // Record updates in instances dataValues\n          Object.assign(instance.dataValues, values);\n          // Set the changed fields on the instance\n          _.forIn(valuesUse, (newValue, attr) => {\n            if (newValue !== instance._previousDataValues[attr]) {\n              instance.setDataValue(attr, newValue);\n            }\n          });\n\n          // Run beforeUpdate hook\n          await this.runHooks('beforeUpdate', instance, options);\n          if (!different) {\n            const thisChangedValues = {};\n            _.forIn(instance.dataValues, (newValue, attr) => {\n              if (newValue !== instance._previousDataValues[attr]) {\n                thisChangedValues[attr] = newValue;\n              }\n            });\n\n            if (!changedValues) {\n              changedValues = thisChangedValues;\n            } else {\n              different = !_.isEqual(changedValues, thisChangedValues);\n            }\n          }\n\n          return instance;\n        }));\n\n        if (!different) {\n          const keys = Object.keys(changedValues);\n          // Hooks do not change values or change them uniformly\n          if (keys.length) {\n            // Hooks change values - record changes in valuesUse so they are executed\n            valuesUse = changedValues;\n            options.fields = _.union(options.fields, keys);\n          }\n        } else {\n          instances = await Promise.all(instances.map(async instance => {\n            const individualOptions = {\n              ...options,\n              hooks: false,\n              validate: false\n            };\n            delete individualOptions.individualHooks;\n\n            return instance.save(individualOptions);\n          }));\n          updateDoneRowByRow = true;\n        }\n      }\n    }\n    let result;\n    if (updateDoneRowByRow) {\n      result = [instances.length, instances];\n    } else if (_.isEmpty(valuesUse)\n       || Object.keys(valuesUse).length === 1 && valuesUse[this._timestampAttributes.updatedAt]) {\n      // only updatedAt is being passed, then skip update\n      result = [0];\n    } else {\n      valuesUse = Utils.mapValueFieldNames(valuesUse, options.fields, this);\n      options = Utils.mapOptionFieldNames(options, this);\n      options.hasTrigger = this.options ? this.options.hasTrigger : false;\n\n      const affectedRows = await this.queryInterface.bulkUpdate(this.getTableName(options), valuesUse, options.where, options, this.tableAttributes);\n      if (options.returning) {\n        result = [affectedRows.length, affectedRows];\n        instances = affectedRows;\n      } else {\n        result = [affectedRows];\n      }\n    }\n\n    if (options.individualHooks) {\n      await Promise.all(instances.map(instance => this.runHooks('afterUpdate', instance, options)));\n      result[1] = instances;\n    }\n    // Run after hook\n    if (options.hooks) {\n      options.attributes = values;\n      await this.runHooks('afterBulkUpdate', options);\n      delete options.attributes;\n    }\n    return result;\n  }\n\n  /**\n   * Run a describe query on the table.\n   *\n   * @param {string} [schema] schema name to search table in\n   * @param {object} [options] query options\n   *\n   * @returns {Promise} hash of attributes and their types\n   */\n  static async describe(schema, options) {\n    return await this.queryInterface.describeTable(this.tableName, { schema: schema || this._schema || undefined, ...options });\n  }\n\n  static _getDefaultTimestamp(attr) {\n    if (!!this.rawAttributes[attr] && !!this.rawAttributes[attr].defaultValue) {\n      return Utils.toDefaultValue(this.rawAttributes[attr].defaultValue, this.sequelize.options.dialect);\n    }\n    return undefined;\n  }\n\n  static _expandAttributes(options) {\n    if (!_.isPlainObject(options.attributes)) {\n      return;\n    }\n    let attributes = Object.keys(this.rawAttributes);\n\n    if (options.attributes.exclude) {\n      attributes = attributes.filter(elem => !options.attributes.exclude.includes(elem));\n    }\n\n    if (options.attributes.include) {\n      attributes = attributes.concat(options.attributes.include);\n    }\n\n    options.attributes = attributes;\n  }\n\n  // Inject _scope into options.\n  static _injectScope(options) {\n    const scope = Utils.cloneDeep(this._scope);\n    this._defaultsOptions(options, scope);\n  }\n\n  static [Symbol.for('nodejs.util.inspect.custom')]() {\n    return this.name;\n  }\n\n  static hasAlias(alias) {\n    return Object.prototype.hasOwnProperty.call(this.associations, alias);\n  }\n\n  /**\n   * Increment the value of one or more columns. This is done in the database, which means it does not use the values currently stored on the Instance. The increment is done using a\n   * ``` SET column = column + X WHERE foo = 'bar' ``` query. To get the correct value after an increment into the Instance you should do a reload.\n   *\n   * @example <caption>increment number by 1</caption>\n   * Model.increment('number', { where: { foo: 'bar' });\n   *\n   * @example <caption>increment number and count by 2</caption>\n   * Model.increment(['number', 'count'], { by: 2, where: { foo: 'bar' } });\n   *\n   * @example <caption>increment answer by 42, and decrement tries by 1</caption>\n   * // `by` is ignored, as each column has its own value\n   * Model.increment({ answer: 42, tries: -1}, { by: 2, where: { foo: 'bar' } });\n   *\n   * @see\n   * {@link Model#reload}\n   *\n   * @param  {string|Array|object}  fields                       If a string is provided, that column is incremented by the value of `by` given in options. If an array is provided, the same is true for each column. If and object is provided, each column is incremented by the value given.\n   * @param  {object}               options                      increment options\n   * @param  {object}               options.where                conditions hash\n   * @param  {number}               [options.by=1]               The number to increment by\n   * @param  {boolean}              [options.silent=false]       If true, the updatedAt timestamp will not be updated.\n   * @param  {Function}             [options.logging=false]      A function that gets executed while running the query to log the sql.\n   * @param  {Transaction}          [options.transaction]        Transaction to run query under\n   * @param  {string}               [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   *\n   * @returns {Promise<Model[],?number>} returns an array of affected rows and affected count with `options.returning` true, whenever supported by dialect\n   */\n  static async increment(fields, options) {\n    options = options || {};\n    if (typeof fields === 'string') fields = [fields];\n    if (Array.isArray(fields)) {\n      fields = fields.map(f => {\n        if (this.rawAttributes[f] && this.rawAttributes[f].field && this.rawAttributes[f].field !== f) {\n          return this.rawAttributes[f].field;\n        }\n        return f;\n      });\n    } else if (fields && typeof fields === 'object') {\n      fields = Object.keys(fields).reduce((rawFields, f) => {\n        if (this.rawAttributes[f] && this.rawAttributes[f].field && this.rawAttributes[f].field !== f) {\n          rawFields[this.rawAttributes[f].field] = fields[f];\n        } else {\n          rawFields[f] = fields[f];\n        }\n        return rawFields;\n      }, {});\n    }\n\n    this._injectScope(options);\n    this._optionsMustContainWhere(options);\n\n    options = Utils.defaults({}, options, {\n      by: 1,\n      where: {},\n      increment: true\n    });\n    const isSubtraction = !options.increment;\n\n    Utils.mapOptionFieldNames(options, this);\n\n    const where = { ...options.where };\n\n    // A plain object whose keys are the fields to be incremented and whose values are\n    // the amounts to be incremented by.\n    let incrementAmountsByField = {};\n    if (Array.isArray(fields)) {\n      incrementAmountsByField = {};\n      for (const field of fields) {\n        incrementAmountsByField[field] = options.by;\n      }\n    } else {\n      // If the `fields` argument is not an array, then we assume it already has the\n      // form necessary to be placed directly in the `incrementAmountsByField` variable.\n      incrementAmountsByField = fields;\n    }\n\n    // If optimistic locking is enabled, we can take advantage that this is an\n    // increment/decrement operation and send it here as well. We put `-1` for\n    // decrementing because it will be subtracted, getting `-(-1)` which is `+1`\n    if (this._versionAttribute) {\n      incrementAmountsByField[this._versionAttribute] = isSubtraction ? -1 : 1;\n    }\n\n    const extraAttributesToBeUpdated = {};\n\n    const updatedAtAttr = this._timestampAttributes.updatedAt;\n    if (!options.silent && updatedAtAttr && !incrementAmountsByField[updatedAtAttr]) {\n      const attrName = this.rawAttributes[updatedAtAttr].field || updatedAtAttr;\n      extraAttributesToBeUpdated[attrName] = this._getDefaultTimestamp(updatedAtAttr) || Utils.now(this.sequelize.options.dialect);\n    }\n\n    const tableName = this.getTableName(options);\n    let affectedRows;\n    if (isSubtraction) {\n      affectedRows = await this.queryInterface.decrement(\n        this, tableName, where, incrementAmountsByField, extraAttributesToBeUpdated, options\n      );\n    } else {\n      affectedRows = await this.queryInterface.increment(\n        this, tableName, where, incrementAmountsByField, extraAttributesToBeUpdated, options\n      );\n    }\n\n    if (options.returning) {\n      return [affectedRows, affectedRows.length];\n    }\n\n    return [affectedRows];\n  }\n\n  /**\n   * Decrement the value of one or more columns. This is done in the database, which means it does not use the values currently stored on the Instance. The decrement is done using a\n   * ```sql SET column = column - X WHERE foo = 'bar'``` query. To get the correct value after a decrement into the Instance you should do a reload.\n   *\n   * @example <caption>decrement number by 1</caption>\n   * Model.decrement('number', { where: { foo: 'bar' });\n   *\n   * @example <caption>decrement number and count by 2</caption>\n   * Model.decrement(['number', 'count'], { by: 2, where: { foo: 'bar' } });\n   *\n   * @example <caption>decrement answer by 42, and decrement tries by -1</caption>\n   * // `by` is ignored, since each column has its own value\n   * Model.decrement({ answer: 42, tries: -1}, { by: 2, where: { foo: 'bar' } });\n   *\n   * @param {string|Array|object} fields If a string is provided, that column is incremented by the value of `by` given in options. If an array is provided, the same is true for each column. If and object is provided, each column is incremented by the value given.\n   * @param {object} options decrement options, similar to increment\n   *\n   * @see\n   * {@link Model.increment}\n   * @see\n   * {@link Model#reload}\n   * @since 4.36.0\n   *\n   * @returns {Promise<Model[],?number>} returns an array of affected rows and affected count with `options.returning` true, whenever supported by dialect\n   */\n  static async decrement(fields, options) {\n    return this.increment(fields, {\n      by: 1,\n      ...options,\n      increment: false\n    });\n  }\n\n  static _optionsMustContainWhere(options) {\n    assert(options && options.where, 'Missing where attribute in the options parameter');\n    assert(_.isPlainObject(options.where) || Array.isArray(options.where) || options.where instanceof Utils.SequelizeMethod,\n      'Expected plain object, array or sequelize method in the options.where parameter');\n  }\n\n  /**\n   * Get an object representing the query for this instance, use with `options.where`\n   *\n   * @param {boolean} [checkVersion=false] include version attribute in where hash\n   *\n   * @returns {object}\n   */\n  where(checkVersion) {\n    const where = this.constructor.primaryKeyAttributes.reduce((result, attribute) => {\n      result[attribute] = this.get(attribute, { raw: true });\n      return result;\n    }, {});\n\n    if (_.size(where) === 0) {\n      return this.constructor.options.whereCollection;\n    }\n    const versionAttr = this.constructor._versionAttribute;\n    if (checkVersion && versionAttr) {\n      where[versionAttr] = this.get(versionAttr, { raw: true });\n    }\n    return Utils.mapWhereFieldNames(where, this.constructor);\n  }\n\n  toString() {\n    return `[object SequelizeInstance:${this.constructor.name}]`;\n  }\n\n  /**\n   * Get the value of the underlying data value\n   *\n   * @param {string} key key to look in instance data store\n   *\n   * @returns {any}\n   */\n  getDataValue(key) {\n    return this.dataValues[key];\n  }\n\n  /**\n   * Update the underlying data value\n   *\n   * @param {string} key key to set in instance data store\n   * @param {any} value new value for given key\n   *\n   */\n  setDataValue(key, value) {\n    const originalValue = this._previousDataValues[key];\n\n    if (!_.isEqual(value, originalValue)) {\n      this.changed(key, true);\n    }\n\n    this.dataValues[key] = value;\n  }\n\n  /**\n   * If no key is given, returns all values of the instance, also invoking virtual getters.\n   *\n   * If key is given and a field or virtual getter is present for the key it will call that getter - else it will return the value for key.\n   *\n   * @param {string}  [key] key to get value of\n   * @param {object}  [options] get options\n   * @param {boolean} [options.plain=false] If set to true, included instances will be returned as plain objects\n   * @param {boolean} [options.raw=false] If set to true, field and virtual setters will be ignored\n   *\n   * @returns {object|any}\n   */\n  get(key, options) {\n    if (options === undefined && typeof key === 'object') {\n      options = key;\n      key = undefined;\n    }\n\n    options = options || {};\n\n    if (key) {\n      if (Object.prototype.hasOwnProperty.call(this._customGetters, key) && !options.raw) {\n        return this._customGetters[key].call(this, key, options);\n      }\n\n      if (options.plain && this._options.include && this._options.includeNames.includes(key)) {\n        if (Array.isArray(this.dataValues[key])) {\n          return this.dataValues[key].map(instance => instance.get(options));\n        }\n        if (this.dataValues[key] instanceof Model) {\n          return this.dataValues[key].get(options);\n        }\n        return this.dataValues[key];\n      }\n\n      return this.dataValues[key];\n    }\n\n    if (\n      this._hasCustomGetters\n      || options.plain && this._options.include\n      || options.clone\n    ) {\n      const values = {};\n      let _key;\n\n      if (this._hasCustomGetters) {\n        for (_key in this._customGetters) {\n          if (\n            this._options.attributes\n            && !this._options.attributes.includes(_key)\n          ) {\n            continue;\n          }\n\n          if (Object.prototype.hasOwnProperty.call(this._customGetters, _key)) {\n            values[_key] = this.get(_key, options);\n          }\n        }\n      }\n\n      for (_key in this.dataValues) {\n        if (\n          !Object.prototype.hasOwnProperty.call(values, _key)\n          && Object.prototype.hasOwnProperty.call(this.dataValues, _key)\n        ) {\n          values[_key] = this.get(_key, options);\n        }\n      }\n\n      return values;\n    }\n\n    return this.dataValues;\n  }\n\n  /**\n   * Set is used to update values on the instance (the sequelize representation of the instance that is, remember that nothing will be persisted before you actually call `save`).\n   * In its most basic form `set` will update a value stored in the underlying `dataValues` object. However, if a custom setter function is defined for the key, that function\n   * will be called instead. To bypass the setter, you can pass `raw: true` in the options object.\n   *\n   * If set is called with an object, it will loop over the object, and call set recursively for each key, value pair. If you set raw to true, the underlying dataValues will either be\n   * set directly to the object passed, or used to extend dataValues, if dataValues already contain values.\n   *\n   * When set is called, the previous value of the field is stored and sets a changed flag(see `changed`).\n   *\n   * Set can also be used to build instances for associations, if you have values for those.\n   * When using set with associations you need to make sure the property key matches the alias of the association\n   * while also making sure that the proper include options have been set (from .build() or .findOne())\n   *\n   * If called with a dot.separated key on a JSON/JSONB attribute it will set the value nested and flag the entire object as changed.\n   *\n   * @see\n   * {@link Model.findAll} for more information about includes\n   *\n   * @param {string|object} key key to set, it can be string or object. When string it will set that key, for object it will loop over all object properties nd set them.\n   * @param {any} value value to set\n   * @param {object} [options] set options\n   * @param {boolean} [options.raw=false] If set to true, field and virtual setters will be ignored\n   * @param {boolean} [options.reset=false] Clear all previously set data values\n   *\n   * @returns {Model}\n   */\n  set(key, value, options) {\n    let values;\n    let originalValue;\n\n    if (typeof key === 'object' && key !== null) {\n      values = key;\n      options = value || {};\n\n      if (options.reset) {\n        this.dataValues = {};\n        for (const key in values) {\n          this.changed(key, false);\n        }\n      }\n\n      // If raw, and we're not dealing with includes or special attributes, just set it straight on the dataValues object\n      if (options.raw && !(this._options && this._options.include) && !(options && options.attributes) && !this.constructor._hasDateAttributes && !this.constructor._hasBooleanAttributes) {\n        if (Object.keys(this.dataValues).length) {\n          Object.assign(this.dataValues, values);\n        } else {\n          this.dataValues = values;\n        }\n        // If raw, .changed() shouldn't be true\n        this._previousDataValues = { ...this.dataValues };\n      } else {\n        // Loop and call set\n        if (options.attributes) {\n          const setKeys = data => {\n            for (const k of data) {\n              if (values[k] === undefined) {\n                continue;\n              }\n              this.set(k, values[k], options);\n            }\n          };\n          setKeys(options.attributes);\n          if (this.constructor._hasVirtualAttributes) {\n            setKeys(this.constructor._virtualAttributes);\n          }\n          if (this._options.includeNames) {\n            setKeys(this._options.includeNames);\n          }\n        } else {\n          for (const key in values) {\n            this.set(key, values[key], options);\n          }\n        }\n\n        if (options.raw) {\n          // If raw, .changed() shouldn't be true\n          this._previousDataValues = { ...this.dataValues };\n        }\n      }\n      return this;\n    }\n    if (!options)\n      options = {};\n    if (!options.raw) {\n      originalValue = this.dataValues[key];\n    }\n\n    // If not raw, and there's a custom setter\n    if (!options.raw && this._customSetters[key]) {\n      this._customSetters[key].call(this, value, key);\n      // custom setter should have changed value, get that changed value\n      // TODO: v5 make setters return new value instead of changing internal store\n      const newValue = this.dataValues[key];\n      if (!_.isEqual(newValue, originalValue)) {\n        this._previousDataValues[key] = originalValue;\n        this.changed(key, true);\n      }\n    } else {\n      // Check if we have included models, and if this key matches the include model names/aliases\n      if (this._options && this._options.include && this._options.includeNames.includes(key)) {\n        // Pass it on to the include handler\n        this._setInclude(key, value, options);\n        return this;\n      }\n      // Bunch of stuff we won't do when it's raw\n      if (!options.raw) {\n        // If attribute is not in model definition, return\n        if (!this._isAttribute(key)) {\n          if (key.includes('.') && this.constructor._jsonAttributes.has(key.split('.')[0])) {\n            const previousNestedValue = Dottie.get(this.dataValues, key);\n            if (!_.isEqual(previousNestedValue, value)) {\n              Dottie.set(this.dataValues, key, value);\n              this.changed(key.split('.')[0], true);\n            }\n          }\n          return this;\n        }\n\n        // If attempting to set primary key and primary key is already defined, return\n        if (this.constructor._hasPrimaryKeys && originalValue && this.constructor._isPrimaryKey(key)) {\n          return this;\n        }\n\n        // If attempting to set read only attributes, return\n        if (!this.isNewRecord && this.constructor._hasReadOnlyAttributes && this.constructor._readOnlyAttributes.has(key)) {\n          return this;\n        }\n      }\n\n      // If there's a data type sanitizer\n      if (\n        !(value instanceof Utils.SequelizeMethod)\n        && Object.prototype.hasOwnProperty.call(this.constructor._dataTypeSanitizers, key)\n      ) {\n        value = this.constructor._dataTypeSanitizers[key].call(this, value, options);\n      }\n\n      // Set when the value has changed and not raw\n      if (\n        !options.raw &&\n        (\n          // True when sequelize method\n          value instanceof Utils.SequelizeMethod ||\n          // Check for data type type comparators\n          !(value instanceof Utils.SequelizeMethod) && this.constructor._dataTypeChanges[key] && this.constructor._dataTypeChanges[key].call(this, value, originalValue, options) || // Check default\n          !this.constructor._dataTypeChanges[key] && !_.isEqual(value, originalValue)\n        )\n      ) {\n        this._previousDataValues[key] = originalValue;\n        this.changed(key, true);\n      }\n\n      // set data value\n      this.dataValues[key] = value;\n    }\n    return this;\n  }\n\n  setAttributes(updates) {\n    return this.set(updates);\n  }\n\n  /**\n   * If changed is called with a string it will return a boolean indicating whether the value of that key in `dataValues` is different from the value in `_previousDataValues`.\n   *\n   * If changed is called without an argument, it will return an array of keys that have changed.\n   *\n   * If changed is called without an argument and no keys have changed, it will return `false`.\n   *\n   * Please note that this function will return `false` when a property from a nested (for example JSON) property\n   * was edited manually, you must call `changed('key', true)` manually in these cases.\n   * Writing an entirely new object (eg. deep cloned) will be detected.\n   *\n   * @example\n   * ```\n   * const mdl = await MyModel.findOne();\n   * mdl.myJsonField.a = 1;\n   * console.log(mdl.changed()) => false\n   * mdl.save(); // this will not save anything\n   * mdl.changed('myJsonField', true);\n   * console.log(mdl.changed()) => ['myJsonField']\n   * mdl.save(); // will save\n   * ```\n   *\n   * @param {string} [key] key to check or change status of\n   * @param {any} [value] value to set\n   *\n   * @returns {boolean|Array}\n   */\n  changed(key, value) {\n    if (key === undefined) {\n      if (this._changed.size > 0) {\n        return Array.from(this._changed);\n      }\n      return false;\n    }\n    if (value === true) {\n      this._changed.add(key);\n      return this;\n    }\n    if (value === false) {\n      this._changed.delete(key);\n      return this;\n    }\n    return this._changed.has(key);\n  }\n\n  /**\n   * Returns the previous value for key from `_previousDataValues`.\n   *\n   * If called without a key, returns the previous values for all values which have changed\n   *\n   * @param {string} [key] key to get previous value of\n   *\n   * @returns {any|Array<any>}\n   */\n  previous(key) {\n    if (key) {\n      return this._previousDataValues[key];\n    }\n\n    return _.pickBy(this._previousDataValues, (value, key) => this.changed(key));\n  }\n\n  _setInclude(key, value, options) {\n    if (!Array.isArray(value)) value = [value];\n    if (value[0] instanceof Model) {\n      value = value.map(instance => instance.dataValues);\n    }\n\n    const include = this._options.includeMap[key];\n    const association = include.association;\n    const accessor = key;\n    const primaryKeyAttribute = include.model.primaryKeyAttribute;\n    const childOptions = {\n      isNewRecord: this.isNewRecord,\n      include: include.include,\n      includeNames: include.includeNames,\n      includeMap: include.includeMap,\n      includeValidated: true,\n      raw: options.raw,\n      attributes: include.originalAttributes\n    };\n    let isEmpty;\n\n    if (include.originalAttributes === undefined || include.originalAttributes.length) {\n      if (association.isSingleAssociation) {\n        if (Array.isArray(value)) {\n          value = value[0];\n        }\n        isEmpty = value && value[primaryKeyAttribute] === null || value === null;\n        this[accessor] = this.dataValues[accessor] = isEmpty ? null : include.model.build(value, childOptions);\n      } else {\n        isEmpty = value[0] && value[0][primaryKeyAttribute] === null;\n        this[accessor] = this.dataValues[accessor] = isEmpty ? [] : include.model.bulkBuild(value, childOptions);\n      }\n    }\n  }\n\n  /**\n   * Validates this instance, and if the validation passes, persists it to the database.\n   *\n   * Returns a Promise that resolves to the saved instance (or rejects with a `Sequelize.ValidationError`, which will have a property for each of the fields for which the validation failed, with the error message for that field).\n   *\n   * This method is optimized to perform an UPDATE only into the fields that changed. If nothing has changed, no SQL query will be performed.\n   *\n   * This method is not aware of eager loaded associations. In other words, if some other model instance (child) was eager loaded with this instance (parent), and you change something in the child, calling `save()` will simply ignore the change that happened on the child.\n   *\n   * @param {object}      [options] save options\n   * @param {string[]}    [options.fields] An optional array of strings, representing database columns. If fields is provided, only those columns will be validated and saved.\n   * @param {boolean}     [options.silent=false] If true, the updatedAt timestamp will not be updated.\n   * @param {boolean}     [options.validate=true] If false, validations won't be run.\n   * @param {boolean}     [options.hooks=true] Run before and after create / update + validate hooks\n   * @param {Function}    [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {Transaction} [options.transaction] Transaction to run query under\n   * @param {string}      [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   * @param {boolean}     [options.returning] Append RETURNING * to get back auto generated values (Postgres only)\n   *\n   * @returns {Promise<Model>}\n   */\n  async save(options) {\n    if (arguments.length > 1) {\n      throw new Error('The second argument was removed in favor of the options object.');\n    }\n\n    options = Utils.cloneDeep(options);\n\n    // Add CLS transaction\n    if (options.transaction === undefined && this.sequelize.constructor._cls) {\n      const t = this.sequelize.constructor._cls.get('transaction');\n      if (t) {\n        options.transaction = t;\n      }\n    }\n\n    options = _.defaults(options, {\n      hooks: true,\n      validate: true\n    });\n\n    if (!options.fields) {\n      if (this.isNewRecord) {\n        options.fields = Object.keys(this.constructor.rawAttributes);\n      } else {\n        options.fields = _.intersection(this.changed(), Object.keys(this.constructor.rawAttributes));\n      }\n\n      options.defaultFields = options.fields;\n    }\n\n    if (options.returning === undefined) {\n      if (options.association) {\n        options.returning = false;\n      } else if (this.isNewRecord) {\n        options.returning = true;\n      }\n    }\n\n    const primaryKeyName = this.constructor.primaryKeyAttribute;\n    const primaryKeyAttribute = primaryKeyName && this.constructor.rawAttributes[primaryKeyName];\n    const createdAtAttr = this.constructor._timestampAttributes.createdAt;\n    const versionAttr = this.constructor._versionAttribute;\n    const hook = this.isNewRecord ? 'Create' : 'Update';\n    const wasNewRecord = this.isNewRecord;\n    const now = Utils.now(this.sequelize.options.dialect);\n    let updatedAtAttr = this.constructor._timestampAttributes.updatedAt;\n\n    if (updatedAtAttr && options.fields.length > 0 && !options.fields.includes(updatedAtAttr)) {\n      options.fields.push(updatedAtAttr);\n    }\n    if (versionAttr && options.fields.length > 0 && !options.fields.includes(versionAttr)) {\n      options.fields.push(versionAttr);\n    }\n\n    if (options.silent === true && !(this.isNewRecord && this.get(updatedAtAttr, { raw: true }))) {\n      // UpdateAtAttr might have been added as a result of Object.keys(Model.rawAttributes). In that case we have to remove it again\n      _.remove(options.fields, val => val === updatedAtAttr);\n      updatedAtAttr = false;\n    }\n\n    if (this.isNewRecord === true) {\n      if (createdAtAttr && !options.fields.includes(createdAtAttr)) {\n        options.fields.push(createdAtAttr);\n      }\n\n      if (primaryKeyAttribute && primaryKeyAttribute.defaultValue && !options.fields.includes(primaryKeyName)) {\n        options.fields.unshift(primaryKeyName);\n      }\n    }\n\n    if (this.isNewRecord === false) {\n      if (primaryKeyName && this.get(primaryKeyName, { raw: true }) === undefined) {\n        throw new Error('You attempted to save an instance with no primary key, this is not allowed since it would result in a global update');\n      }\n    }\n\n    if (updatedAtAttr && !options.silent && options.fields.includes(updatedAtAttr)) {\n      this.dataValues[updatedAtAttr] = this.constructor._getDefaultTimestamp(updatedAtAttr) || now;\n    }\n\n    if (this.isNewRecord && createdAtAttr && !this.dataValues[createdAtAttr]) {\n      this.dataValues[createdAtAttr] = this.constructor._getDefaultTimestamp(createdAtAttr) || now;\n    }\n    // Db2 does not allow NULL values for unique columns.\n    // Add dummy values if not provided by test case or user.\n    if (this.sequelize.options.dialect === 'db2' && this.isNewRecord) {\n      this.uniqno = this.sequelize.dialect.queryGenerator.addUniqueFields(\n        this.dataValues, this.constructor.rawAttributes, this.uniqno);\n    }\n    // Validate\n    if (options.validate) {\n      await this.validate(options);\n    }\n    // Run before hook\n    if (options.hooks) {\n      const beforeHookValues = _.pick(this.dataValues, options.fields);\n      let ignoreChanged = _.difference(this.changed(), options.fields); // In case of update where it's only supposed to update the passed values and the hook values\n      let hookChanged;\n      let afterHookValues;\n\n      if (updatedAtAttr && options.fields.includes(updatedAtAttr)) {\n        ignoreChanged = _.without(ignoreChanged, updatedAtAttr);\n      }\n\n      await this.constructor.runHooks(`before${hook}`, this, options);\n      if (options.defaultFields && !this.isNewRecord) {\n        afterHookValues = _.pick(this.dataValues, _.difference(this.changed(), ignoreChanged));\n\n        hookChanged = [];\n        for (const key of Object.keys(afterHookValues)) {\n          if (afterHookValues[key] !== beforeHookValues[key]) {\n            hookChanged.push(key);\n          }\n        }\n\n        options.fields = _.uniq(options.fields.concat(hookChanged));\n      }\n\n      if (hookChanged) {\n        if (options.validate) {\n          // Validate again\n\n          options.skip = _.difference(Object.keys(this.constructor.rawAttributes), hookChanged);\n          await this.validate(options);\n          delete options.skip;\n        }\n      }\n    }\n    if (options.fields.length && this.isNewRecord && this._options.include && this._options.include.length) {\n      await Promise.all(this._options.include.filter(include => include.association instanceof BelongsTo).map(async include => {\n        const instance = this.get(include.as);\n        if (!instance) return;\n\n        const includeOptions = _(Utils.cloneDeep(include))\n          .omit(['association'])\n          .defaults({\n            transaction: options.transaction,\n            logging: options.logging,\n            parentRecord: this\n          }).value();\n\n        await instance.save(includeOptions);\n\n        await this[include.association.accessors.set](instance, { save: false, logging: options.logging });\n      }));\n    }\n    const realFields = options.fields.filter(field => !this.constructor._virtualAttributes.has(field));\n    if (!realFields.length) return this;\n    if (!this.changed() && !this.isNewRecord) return this;\n\n    const versionFieldName = _.get(this.constructor.rawAttributes[versionAttr], 'field') || versionAttr;\n    const values = Utils.mapValueFieldNames(this.dataValues, options.fields, this.constructor);\n    let query = null;\n    let args = [];\n    let where;\n\n    if (this.isNewRecord) {\n      query = 'insert';\n      args = [this, this.constructor.getTableName(options), values, options];\n    } else {\n      where = this.where(true);\n      if (versionAttr) {\n        values[versionFieldName] = parseInt(values[versionFieldName], 10) + 1;\n      }\n      query = 'update';\n      args = [this, this.constructor.getTableName(options), values, where, options];\n    }\n\n    const [result, rowsUpdated] = await this.constructor.queryInterface[query](...args);\n    if (versionAttr) {\n      // Check to see that a row was updated, otherwise it's an optimistic locking error.\n      if (rowsUpdated < 1) {\n        throw new sequelizeErrors.OptimisticLockError({\n          modelName: this.constructor.name,\n          values,\n          where\n        });\n      } else {\n        result.dataValues[versionAttr] = values[versionFieldName];\n      }\n    }\n\n    // Transfer database generated values (defaults, autoincrement, etc)\n    for (const attr of Object.keys(this.constructor.rawAttributes)) {\n      if (this.constructor.rawAttributes[attr].field &&\n          values[this.constructor.rawAttributes[attr].field] !== undefined &&\n          this.constructor.rawAttributes[attr].field !== attr\n      ) {\n        values[attr] = values[this.constructor.rawAttributes[attr].field];\n        delete values[this.constructor.rawAttributes[attr].field];\n      }\n    }\n    Object.assign(values, result.dataValues);\n\n    Object.assign(result.dataValues, values);\n    if (wasNewRecord && this._options.include && this._options.include.length) {\n      await Promise.all(\n        this._options.include.filter(include => !(include.association instanceof BelongsTo ||\n          include.parent && include.parent.association instanceof BelongsToMany)).map(async include => {\n          let instances = this.get(include.as);\n\n          if (!instances) return;\n          if (!Array.isArray(instances)) instances = [instances];\n\n          const includeOptions = _(Utils.cloneDeep(include))\n            .omit(['association'])\n            .defaults({\n              transaction: options.transaction,\n              logging: options.logging,\n              parentRecord: this\n            }).value();\n\n          // Instances will be updated in place so we can safely treat HasOne like a HasMany\n          await Promise.all(instances.map(async instance => {\n            if (include.association instanceof BelongsToMany) {\n              await instance.save(includeOptions);\n              const values0 = {\n                [include.association.foreignKey]: this.get(this.constructor.primaryKeyAttribute, { raw: true }),\n                [include.association.otherKey]: instance.get(instance.constructor.primaryKeyAttribute, { raw: true }),\n                // Include values defined in the association\n                ...include.association.through.scope\n              };\n\n              if (instance[include.association.through.model.name]) {\n                for (const attr of Object.keys(include.association.through.model.rawAttributes)) {\n                  if (include.association.through.model.rawAttributes[attr]._autoGenerated ||\n                    attr === include.association.foreignKey ||\n                    attr === include.association.otherKey ||\n                    typeof instance[include.association.through.model.name][attr] === 'undefined') {\n                    continue;\n                  }\n                  values0[attr] = instance[include.association.through.model.name][attr];\n                }\n              }\n\n              await include.association.throughModel.create(values0, includeOptions);\n            } else {\n              instance.set(include.association.foreignKey, this.get(include.association.sourceKey || this.constructor.primaryKeyAttribute, { raw: true }), { raw: true });\n              Object.assign(instance, include.association.scope);\n              await instance.save(includeOptions);\n            }\n          }));\n        })\n      );\n    }\n    // Run after hook\n    if (options.hooks) {\n      await this.constructor.runHooks(`after${hook}`, result, options);\n    }\n    for (const field of options.fields) {\n      result._previousDataValues[field] = result.dataValues[field];\n      this.changed(field, false);\n    }\n    this.isNewRecord = false;\n\n    return result;\n  }\n\n  /**\n   * Refresh the current instance in-place, i.e. update the object with current data from the DB and return the same object.\n   * This is different from doing a `find(Instance.id)`, because that would create and return a new instance. With this method,\n   * all references to the Instance are updated with the new data and no new objects are created.\n   *\n   * @see\n   * {@link Model.findAll}\n   *\n   * @param {object} [options] Options that are passed on to `Model.find`\n   * @param {Function} [options.logging=false] A function that gets executed while running the query to log the sql.\n   *\n   * @returns {Promise<Model>}\n   */\n  async reload(options) {\n    options = Utils.defaults({\n      where: this.where()\n    }, options, {\n      include: this._options.include || undefined\n    });\n\n    const reloaded = await this.constructor.findOne(options);\n    if (!reloaded) {\n      throw new sequelizeErrors.InstanceError(\n        'Instance could not be reloaded because it does not exist anymore (find call returned null)'\n      );\n    }\n    // update the internal options of the instance\n    this._options = reloaded._options;\n    // re-set instance values\n    this.set(reloaded.dataValues, {\n      raw: true,\n      reset: true && !options.attributes\n    });\n\n    return this;\n  }\n\n  /**\n  * Validate the attributes of this instance according to validation rules set in the model definition.\n  *\n  * The promise fulfills if and only if validation successful; otherwise it rejects an Error instance containing { field name : [error msgs] } entries.\n  *\n  * @param {object} [options] Options that are passed to the validator\n  * @param {Array} [options.skip] An array of strings. All properties that are in this array will not be validated\n  * @param {Array} [options.fields] An array of strings. Only the properties that are in this array will be validated\n  * @param {boolean} [options.hooks=true] Run before and after validate hooks\n  *\n  * @returns {Promise}\n  */\n  async validate(options) {\n    return new InstanceValidator(this, options).validate();\n  }\n\n  /**\n   * This is the same as calling `set` and then calling `save` but it only saves the\n   * exact values passed to it, making it more atomic and safer.\n   *\n   * @see\n   * {@link Model#set}\n   * @see\n   * {@link Model#save}\n   *\n   * @param {object} values See `set`\n   * @param {object} options See `save`\n   *\n   * @returns {Promise<Model>}\n   */\n  async update(values, options) {\n    // Clone values so it doesn't get modified for caller scope and ignore undefined values\n    values = _.omitBy(values, value => value === undefined);\n\n    const changedBefore = this.changed() || [];\n\n    options = options || {};\n    if (Array.isArray(options)) options = { fields: options };\n\n    options = Utils.cloneDeep(options);\n\n    // Add CLS transaction\n    if (options.transaction === undefined && this.sequelize.constructor._cls) {\n      const t = this.sequelize.constructor._cls.get('transaction');\n      if (t) {\n        options.transaction = t;\n      }\n    }\n\n    const setOptions = Utils.cloneDeep(options);\n    setOptions.attributes = options.fields;\n    this.set(values, setOptions);\n\n    // Now we need to figure out which fields were actually affected by the setter.\n    const sideEffects = _.without(this.changed(), ...changedBefore);\n    const fields = _.union(Object.keys(values), sideEffects);\n\n    if (!options.fields) {\n      options.fields = _.intersection(fields, this.changed());\n      options.defaultFields = options.fields;\n    }\n\n    return await this.save(options);\n  }\n\n  /**\n   * Destroy the row corresponding to this instance. Depending on your setting for paranoid, the row will either be completely deleted, or have its deletedAt timestamp set to the current time.\n   *\n   * @param {object}      [options={}] destroy options\n   * @param {boolean}     [options.force=false] If set to true, paranoid models will actually be deleted\n   * @param {Function}    [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {Transaction} [options.transaction] Transaction to run query under\n   * @param {string}      [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   *\n   * @returns {Promise}\n   */\n  async destroy(options) {\n    options = {\n      hooks: true,\n      force: false,\n      ...options\n    };\n\n    // Add CLS transaction\n    if (options.transaction === undefined && this.sequelize.constructor._cls) {\n      const t = this.sequelize.constructor._cls.get('transaction');\n      if (t) {\n        options.transaction = t;\n      }\n    }\n\n    // Run before hook\n    if (options.hooks) {\n      await this.constructor.runHooks('beforeDestroy', this, options);\n    }\n    const where = this.where(true);\n\n    let result;\n    if (this.constructor._timestampAttributes.deletedAt && options.force === false) {\n      const attributeName = this.constructor._timestampAttributes.deletedAt;\n      const attribute = this.constructor.rawAttributes[attributeName];\n      const defaultValue = Object.prototype.hasOwnProperty.call(attribute, 'defaultValue')\n        ? attribute.defaultValue\n        : null;\n      const currentValue = this.getDataValue(attributeName);\n      const undefinedOrNull = currentValue == null && defaultValue == null;\n      if (undefinedOrNull || _.isEqual(currentValue, defaultValue)) {\n        // only update timestamp if it wasn't already set\n        this.setDataValue(attributeName, new Date());\n      }\n\n      result = await this.save({ ...options, hooks: false });\n    } else {\n      result = await this.constructor.queryInterface.delete(this, this.constructor.getTableName(options), where, { type: QueryTypes.DELETE, limit: null, ...options });\n    }\n    // Run after hook\n    if (options.hooks) {\n      await this.constructor.runHooks('afterDestroy', this, options);\n    }\n    return result;\n  }\n\n  /**\n   * Helper method to determine if a instance is \"soft deleted\".  This is\n   * particularly useful if the implementer renamed the `deletedAt` attribute\n   * to something different.  This method requires `paranoid` to be enabled.\n   *\n   * @returns {boolean}\n   */\n  isSoftDeleted() {\n    if (!this.constructor._timestampAttributes.deletedAt) {\n      throw new Error('Model is not paranoid');\n    }\n\n    const deletedAtAttribute = this.constructor.rawAttributes[this.constructor._timestampAttributes.deletedAt];\n    const defaultValue = Object.prototype.hasOwnProperty.call(deletedAtAttribute, 'defaultValue') ? deletedAtAttribute.defaultValue : null;\n    const deletedAt = this.get(this.constructor._timestampAttributes.deletedAt) || null;\n    const isSet = deletedAt !== defaultValue;\n\n    return isSet;\n  }\n\n  /**\n   * Restore the row corresponding to this instance. Only available for paranoid models.\n   *\n   * @param {object}      [options={}] restore options\n   * @param {Function}    [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {Transaction} [options.transaction] Transaction to run query under\n   *\n   * @returns {Promise}\n   */\n  async restore(options) {\n    if (!this.constructor._timestampAttributes.deletedAt) throw new Error('Model is not paranoid');\n\n    options = {\n      hooks: true,\n      force: false,\n      ...options\n    };\n\n    // Add CLS transaction\n    if (options.transaction === undefined && this.sequelize.constructor._cls) {\n      const t = this.sequelize.constructor._cls.get('transaction');\n      if (t) {\n        options.transaction = t;\n      }\n    }\n\n    // Run before hook\n    if (options.hooks) {\n      await this.constructor.runHooks('beforeRestore', this, options);\n    }\n    const deletedAtCol = this.constructor._timestampAttributes.deletedAt;\n    const deletedAtAttribute = this.constructor.rawAttributes[deletedAtCol];\n    const deletedAtDefaultValue = Object.prototype.hasOwnProperty.call(deletedAtAttribute, 'defaultValue') ? deletedAtAttribute.defaultValue : null;\n\n    this.setDataValue(deletedAtCol, deletedAtDefaultValue);\n    const result = await this.save({ ...options, hooks: false, omitNull: false });\n    // Run after hook\n    if (options.hooks) {\n      await this.constructor.runHooks('afterRestore', this, options);\n      return result;\n    }\n    return result;\n  }\n\n  /**\n   * Increment the value of one or more columns. This is done in the database, which means it does not use the values currently stored on the Instance. The increment is done using a\n   * ```sql\n   * SET column = column + X\n   * ```\n   * query. The updated instance will be returned by default in Postgres. However, in other dialects, you will need to do a reload to get the new values.\n   *\n   * @example\n   * instance.increment('number') // increment number by 1\n   *\n   * instance.increment(['number', 'count'], { by: 2 }) // increment number and count by 2\n   *\n   * // increment answer by 42, and tries by 1.\n   * // `by` is ignored, since each column has its own value\n   * instance.increment({ answer: 42, tries: 1}, { by: 2 })\n   *\n   * @see\n   * {@link Model#reload}\n   *\n   * @param {string|Array|object} fields If a string is provided, that column is incremented by the value of `by` given in options. If an array is provided, the same is true for each column. If and object is provided, each column is incremented by the value given.\n   * @param {object} [options] options\n   * @param {number} [options.by=1] The number to increment by\n   * @param {boolean} [options.silent=false] If true, the updatedAt timestamp will not be updated.\n   * @param {Function} [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {Transaction} [options.transaction] Transaction to run query under\n   * @param {string} [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   * @param {boolean} [options.returning=true] Append RETURNING * to get back auto generated values (Postgres only)\n   *\n   * @returns {Promise<Model>}\n   * @since 4.0.0\n   */\n  async increment(fields, options) {\n    const identifier = this.where();\n\n    options = Utils.cloneDeep(options);\n    options.where = { ...options.where, ...identifier };\n    options.instance = this;\n\n    await this.constructor.increment(fields, options);\n\n    return this;\n  }\n\n  /**\n   * Decrement the value of one or more columns. This is done in the database, which means it does not use the values currently stored on the Instance. The decrement is done using a\n   * ```sql\n   * SET column = column - X\n   * ```\n   * query. The updated instance will be returned by default in Postgres. However, in other dialects, you will need to do a reload to get the new values.\n   *\n   * @example\n   * instance.decrement('number') // decrement number by 1\n   *\n   * instance.decrement(['number', 'count'], { by: 2 }) // decrement number and count by 2\n   *\n   * // decrement answer by 42, and tries by 1.\n   * // `by` is ignored, since each column has its own value\n   * instance.decrement({ answer: 42, tries: 1}, { by: 2 })\n   *\n   * @see\n   * {@link Model#reload}\n   * @param {string|Array|object} fields If a string is provided, that column is decremented by the value of `by` given in options. If an array is provided, the same is true for each column. If and object is provided, each column is decremented by the value given\n   * @param {object}      [options] decrement options\n   * @param {number}      [options.by=1] The number to decrement by\n   * @param {boolean}     [options.silent=false] If true, the updatedAt timestamp will not be updated.\n   * @param {Function}    [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {Transaction} [options.transaction] Transaction to run query under\n   * @param {string}      [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   * @param {boolean}     [options.returning=true] Append RETURNING * to get back auto generated values (Postgres only)\n   *\n   * @returns {Promise}\n   */\n  async decrement(fields, options) {\n    return this.increment(fields, {\n      by: 1,\n      ...options,\n      increment: false\n    });\n  }\n\n  /**\n   * Check whether this and `other` Instance refer to the same row\n   *\n   * @param {Model} other Other instance to compare against\n   *\n   * @returns {boolean}\n   */\n  equals(other) {\n    if (!other || !other.constructor) {\n      return false;\n    }\n\n    if (!(other instanceof this.constructor)) {\n      return false;\n    }\n\n    return this.constructor.primaryKeyAttributes.every(attribute => this.get(attribute, { raw: true }) === other.get(attribute, { raw: true }));\n  }\n\n  /**\n   * Check if this is equal to one of `others` by calling equals\n   *\n   * @param {Array<Model>} others An array of instances to check against\n   *\n   * @returns {boolean}\n   */\n  equalsOneOf(others) {\n    return others.some(other => this.equals(other));\n  }\n\n  setValidators(attribute, validators) {\n    this.validators[attribute] = validators;\n  }\n\n  /**\n   * Convert the instance to a JSON representation.\n   * Proxies to calling `get` with no keys.\n   * This means get all values gotten from the DB, and apply all custom getters.\n   *\n   * @see\n   * {@link Model#get}\n   *\n   * @returns {object}\n   */\n  toJSON() {\n    return _.cloneDeep(\n      this.get({\n        plain: true\n      })\n    );\n  }\n\n  /**\n   * Creates a 1:m association between this (the source) and the provided target.\n   * The foreign key is added on the target.\n   *\n   * @param {Model}               target Target model\n   * @param {object}              [options] hasMany association options\n   * @param {boolean}             [options.hooks=false] Set to true to run before-/afterDestroy hooks when an associated model is deleted because of a cascade. For example if `User.hasOne(Profile, {onDelete: 'cascade', hooks:true})`, the before-/afterDestroy hooks for profile will be called when a user is deleted. Otherwise the profile will be deleted without invoking any hooks\n   * @param {string|object}       [options.as] The alias of this model. If you provide a string, it should be plural, and will be singularized using node.inflection. If you want to control the singular version yourself, provide an object with `plural` and `singular` keys. See also the `name` option passed to `sequelize.define`. If you create multiple associations between the same tables, you should provide an alias to be able to distinguish between them. If you provide an alias when creating the association, you should provide the same alias when eager loading and when getting associated models. Defaults to the pluralized name of target\n   * @param {string|object}       [options.foreignKey] The name of the foreign key in the target table or an object representing the type definition for the foreign column (see `Sequelize.define` for syntax). When using an object, you can add a `name` property to set the name of the column. Defaults to the name of source + primary key of source\n   * @param {string}              [options.sourceKey] The name of the field to use as the key for the association in the source table. Defaults to the primary key of the source table\n   * @param {object}              [options.scope] A key/value set that will be used for association create and find defaults on the target. (sqlite not supported for N:M)\n   * @param {string}              [options.onDelete='SET&nbsp;NULL|CASCADE'] SET NULL if foreignKey allows nulls, CASCADE if otherwise\n   * @param {string}              [options.onUpdate='CASCADE'] Set `ON UPDATE`\n   * @param {boolean}             [options.constraints=true] Should on update and on delete constraints be enabled on the foreign key.\n   *\n   * @returns {HasMany}\n   *\n   * @example\n   * User.hasMany(Profile) // This will add userId to the profile table\n   */\n  static hasMany(target, options) {} // eslint-disable-line\n\n  /**\n   * Create an N:M association with a join table. Defining `through` is required.\n   *\n   * @param {Model}               target Target model\n   * @param {object}              options belongsToMany association options\n   * @param {boolean}             [options.hooks=false] Set to true to run before-/afterDestroy hooks when an associated model is deleted because of a cascade. For example if `User.hasOne(Profile, {onDelete: 'cascade', hooks:true})`, the before-/afterDestroy hooks for profile will be called when a user is deleted. Otherwise the profile will be deleted without invoking any hooks\n   * @param {Model|string|object} options.through The name of the table that is used to join source and target in n:m associations. Can also be a sequelize model if you want to define the junction table yourself and add extra attributes to it.\n   * @param {Model}               [options.through.model] The model used to join both sides of the N:M association.\n   * @param {object}              [options.through.scope] A key/value set that will be used for association create and find defaults on the through model. (Remember to add the attributes to the through model)\n   * @param {boolean}             [options.through.unique=true] If true a unique key will be generated from the foreign keys used (might want to turn this off and create specific unique keys when using scopes)\n   * @param {boolean}             [options.through.paranoid=false] If true the generated join table will be paranoid\n   * @param {string|object}       [options.as] The alias of this association. If you provide a string, it should be plural, and will be singularized using node.inflection. If you want to control the singular version yourself, provide an object with `plural` and `singular` keys. See also the `name` option passed to `sequelize.define`. If you create multiple associations between the same tables, you should provide an alias to be able to distinguish between them. If you provide an alias when creating the association, you should provide the same alias when eager loading and when getting associated models. Defaults to the pluralized name of target\n   * @param {string|object}       [options.foreignKey] The name of the foreign key in the join table (representing the source model) or an object representing the type definition for the foreign column (see `Sequelize.define` for syntax). When using an object, you can add a `name` property to set the name of the column. Defaults to the name of source + primary key of source\n   * @param {string|object}       [options.otherKey] The name of the foreign key in the join table (representing the target model) or an object representing the type definition for the other column (see `Sequelize.define` for syntax). When using an object, you can add a `name` property to set the name of the column. Defaults to the name of target + primary key of target\n   * @param {object}              [options.scope] A key/value set that will be used for association create and find defaults on the target. (sqlite not supported for N:M)\n   * @param {boolean}             [options.timestamps=sequelize.options.timestamps] Should the join model have timestamps\n   * @param {string}              [options.onDelete='SET&nbsp;NULL|CASCADE'] Cascade if this is a n:m, and set null if it is a 1:m\n   * @param {string}              [options.onUpdate='CASCADE'] Sets `ON UPDATE`\n   * @param {boolean}             [options.constraints=true] Should on update and on delete constraints be enabled on the foreign key.\n   *\n   * @returns {BelongsToMany}\n   *\n   * @example\n   * // Automagically generated join model\n   * User.belongsToMany(Project, { through: 'UserProjects' })\n   * Project.belongsToMany(User, { through: 'UserProjects' })\n   *\n   * // Join model with additional attributes\n   * const UserProjects = sequelize.define('UserProjects', {\n   *   started: Sequelize.BOOLEAN\n   * })\n   * User.belongsToMany(Project, { through: UserProjects })\n   * Project.belongsToMany(User, { through: UserProjects })\n   */\n  static belongsToMany(target, options) {} // eslint-disable-line\n\n  /**\n   * Creates an association between this (the source) and the provided target. The foreign key is added on the target.\n   *\n   * @param {Model}           target Target model\n   * @param {object}          [options] hasOne association options\n   * @param {boolean}         [options.hooks=false] Set to true to run before-/afterDestroy hooks when an associated model is deleted because of a cascade. For example if `User.hasOne(Profile, {onDelete: 'cascade', hooks:true})`, the before-/afterDestroy hooks for profile will be called when a user is deleted. Otherwise the profile will be deleted without invoking any hooks\n   * @param {string}          [options.as] The alias of this model, in singular form. See also the `name` option passed to `sequelize.define`. If you create multiple associations between the same tables, you should provide an alias to be able to distinguish between them. If you provide an alias when creating the association, you should provide the same alias when eager loading and when getting associated models. Defaults to the singularized name of target\n   * @param {string|object}   [options.foreignKey] The name of the foreign key attribute in the target model or an object representing the type definition for the foreign column (see `Sequelize.define` for syntax). When using an object, you can add a `name` property to set the name of the column. Defaults to the name of source + primary key of source\n   * @param {string}          [options.sourceKey] The name of the attribute to use as the key for the association in the source table. Defaults to the primary key of the source table\n   * @param {string}          [options.onDelete='SET&nbsp;NULL|CASCADE'] SET NULL if foreignKey allows nulls, CASCADE if otherwise\n   * @param {string}          [options.onUpdate='CASCADE'] Sets 'ON UPDATE'\n   * @param {boolean}         [options.constraints=true] Should on update and on delete constraints be enabled on the foreign key.\n   * @param {string}          [options.uniqueKey] The custom name for unique constraint.\n   *\n   * @returns {HasOne}\n   *\n   * @example\n   * User.hasOne(Profile) // This will add userId to the profile table\n   */\n  static hasOne(target, options) {} // eslint-disable-line\n\n  /**\n   * Creates an association between this (the source) and the provided target. The foreign key is added on the source.\n   *\n   * @param {Model}           target The target model\n   * @param {object}          [options] belongsTo association options\n   * @param {boolean}         [options.hooks=false] Set to true to run before-/afterDestroy hooks when an associated model is deleted because of a cascade. For example if `User.hasOne(Profile, {onDelete: 'cascade', hooks:true})`, the before-/afterDestroy hooks for profile will be called when a user is deleted. Otherwise the profile will be deleted without invoking any hooks\n   * @param {string}          [options.as] The alias of this model, in singular form. See also the `name` option passed to `sequelize.define`. If you create multiple associations between the same tables, you should provide an alias to be able to distinguish between them. If you provide an alias when creating the association, you should provide the same alias when eager loading and when getting associated models. Defaults to the singularized name of target\n   * @param {string|object}   [options.foreignKey] The name of the foreign key attribute in the source table or an object representing the type definition for the foreign column (see `Sequelize.define` for syntax). When using an object, you can add a `name` property to set the name of the column. Defaults to the name of target + primary key of target\n   * @param {string}          [options.targetKey] The name of the attribute to use as the key for the association in the target table. Defaults to the primary key of the target table\n   * @param {string}          [options.onDelete='SET&nbsp;NULL|NO&nbsp;ACTION'] SET NULL if foreignKey allows nulls, NO ACTION if otherwise\n   * @param {string}          [options.onUpdate='CASCADE'] Sets 'ON UPDATE'\n   * @param {boolean}         [options.constraints=true] Should on update and on delete constraints be enabled on the foreign key.\n   *\n   * @returns {BelongsTo}\n   *\n   * @example\n   * Profile.belongsTo(User) // This will add userId to the profile table\n   */\n  static belongsTo(target, options) {} // eslint-disable-line\n}\n\n/**\n * Unpacks an object that only contains a single Op.and key to the value of Op.and\n *\n * Internal method used by {@link combineWheresWithAnd}\n *\n * @param {WhereOptions} where The object to unpack\n * @example `{ [Op.and]: [a, b] }` becomes `[a, b]`\n * @example `{ [Op.and]: { key: val } }` becomes `{ key: val }`\n * @example `{ [Op.or]: [a, b] }` remains as `{ [Op.or]: [a, b] }`\n * @example `{ [Op.and]: [a, b], key: c }` remains as `{ [Op.and]: [a, b], key: c }`\n * @private\n */\nfunction unpackAnd(where) {\n  if (!_.isObject(where)) {\n    return where;\n  }\n\n  const keys = Utils.getComplexKeys(where);\n\n  // object is empty, remove it.\n  if (keys.length === 0) {\n    return;\n  }\n\n  // we have more than just Op.and, keep as-is\n  if (keys.length !== 1 || keys[0] !== Op.and) {\n    return where;\n  }\n\n  const andParts = where[Op.and];\n\n  return andParts;\n}\n\nfunction combineWheresWithAnd(whereA, whereB) {\n  const unpackedA = unpackAnd(whereA);\n\n  if (unpackedA === undefined) {\n    return whereB;\n  }\n\n  const unpackedB = unpackAnd(whereB);\n\n  if (unpackedB === undefined) {\n    return whereA;\n  }\n\n  return {\n    [Op.and]: _.flatten([unpackedA, unpackedB])\n  };\n}\n\nObject.assign(Model, associationsMixin);\nHooks.applyTo(Model, true);\n\nmodule.exports = Model;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/associations/belongs-to.js":{"lineLengths":[13,38,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,36,37,28,38,35,37,40,35,39,36,34,18,28,27,25,8,12,50,51,5,46,57,92,41,48,5,27,40,16,39,19,5,38,53,97,5,87,151,5,79,92,81,43,39,45,62,22,28,28,33,6,3,23,27,41,85,23,34,6,45,98,101,65,5,130,66,36,95,39,16,3,14,45,45,3,33,21,29,17,39,65,27,35,14,45,7,5,66,70,5,36,27,25,5,20,31,77,8,12,54,71,7,60,27,5,81,20,52,24,42,69,7,40,73,7,20,5,35,3,63,35,52,49,5,47,31,13,30,32,35,23,16,46,3,49,26,28,74,75,31,3,33,36,31,5,34,40,5,27,3,1,27,37,35,38,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/associations/belongs-to.js"],"sourcesContent":["'use strict';\n\nconst Utils = require('./../utils');\nconst Helpers = require('./helpers');\nconst _ = require('lodash');\nconst Association = require('./base');\nconst Op = require('../operators');\n\n/**\n * One-to-one association\n *\n * In the API reference below, add the name of the association to the method, e.g. for `User.belongsTo(Project)` the getter will be `user.getProject()`.\n *\n * @see {@link Model.belongsTo}\n */\nclass BelongsTo extends Association {\n  constructor(source, target, options) {\n    super(source, target, options);\n\n    this.associationType = 'BelongsTo';\n    this.isSingleAssociation = true;\n    this.foreignKeyAttribute = {};\n\n    if (this.as) {\n      this.isAliased = true;\n      this.options.name = {\n        singular: this.as\n      };\n    } else {\n      this.as = this.target.options.name.singular;\n      this.options.name = this.target.options.name;\n    }\n\n    if (_.isObject(this.options.foreignKey)) {\n      this.foreignKeyAttribute = this.options.foreignKey;\n      this.foreignKey = this.foreignKeyAttribute.name || this.foreignKeyAttribute.fieldName;\n    } else if (this.options.foreignKey) {\n      this.foreignKey = this.options.foreignKey;\n    }\n\n    if (!this.foreignKey) {\n      this.foreignKey = Utils.camelize(\n        [\n          this.as,\n          this.target.primaryKeyAttribute\n        ].join('_')\n      );\n    }\n\n    this.identifier = this.foreignKey;\n    if (this.source.rawAttributes[this.identifier]) {\n      this.identifierField = this.source.rawAttributes[this.identifier].field || this.identifier;\n    }\n\n    if (\n      this.options.targetKey\n      && !this.target.rawAttributes[this.options.targetKey]\n    ) {\n      throw new Error(`Unknown attribute \"${this.options.targetKey}\" passed as targetKey, define this attribute on model \"${this.target.name}\" first`);\n    }\n\n    this.targetKey = this.options.targetKey || this.target.primaryKeyAttribute;\n    this.targetKeyField = this.target.rawAttributes[this.targetKey].field || this.targetKey;\n    this.targetKeyIsPrimary = this.targetKey === this.target.primaryKeyAttribute;\n    this.targetIdentifier = this.targetKey;\n\n    this.associationAccessor = this.as;\n    this.options.useHooks = options.useHooks;\n\n    // Get singular name, trying to uppercase the first letter, unless the model forbids it\n    const singular = _.upperFirst(this.options.name.singular);\n\n    this.accessors = {\n      get: `get${singular}`,\n      set: `set${singular}`,\n      create: `create${singular}`\n    };\n  }\n\n  // the id is in the source table\n  _injectAttributes() {\n    const newAttributes = {\n      [this.foreignKey]: {\n        type: this.options.keyType || this.target.rawAttributes[this.targetKey].type,\n        allowNull: true,\n        ...this.foreignKeyAttribute\n      }\n    };\n\n    if (this.options.constraints !== false) {\n      const source = this.source.rawAttributes[this.foreignKey] || newAttributes[this.foreignKey];\n      this.options.onDelete = this.options.onDelete || (source.allowNull ? 'SET NULL' : 'NO ACTION');\n      this.options.onUpdate = this.options.onUpdate || 'CASCADE';\n    }\n\n    Helpers.addForeignKeyConstraints(newAttributes[this.foreignKey], this.target, this.source, this.options, this.targetKeyField);\n    Utils.mergeDefaults(this.source.rawAttributes, newAttributes);\n\n    this.source.refreshAttributes();\n\n    this.identifierField = this.source.rawAttributes[this.foreignKey].field || this.foreignKey;\n\n    Helpers.checkNamingCollision(this);\n\n    return this;\n  }\n\n  mixin(obj) {\n    const methods = ['get', 'set', 'create'];\n\n    Helpers.mixinMethods(this, obj, methods);\n  }\n\n  /**\n   * Get the associated instance.\n   *\n   * @param {Model|Array<Model>} instances source instances\n   * @param {object}         [options] find options\n   * @param {string|boolean} [options.scope]  Apply a scope on the related model, or remove its default scope by passing false.\n   * @param {string}         [options.schema] Apply a schema on the related model\n   *\n   * @see\n   * {@link Model.findOne} for a full explanation of options\n   *\n   * @returns {Promise<Model>}\n   */\n  async get(instances, options) {\n    const where = {};\n    let Target = this.target;\n    let instance;\n\n    options = Utils.cloneDeep(options);\n\n    if (Object.prototype.hasOwnProperty.call(options, 'scope')) {\n      if (!options.scope) {\n        Target = Target.unscoped();\n      } else {\n        Target = Target.scope(options.scope);\n      }\n    }\n\n    if (Object.prototype.hasOwnProperty.call(options, 'schema')) {\n      Target = Target.schema(options.schema, options.schemaDelimiter);\n    }\n\n    if (!Array.isArray(instances)) {\n      instance = instances;\n      instances = undefined;\n    }\n\n    if (instances) {\n      where[this.targetKey] = {\n        [Op.in]: instances.map(_instance => _instance.get(this.foreignKey))\n      };\n    } else {\n      if (this.targetKeyIsPrimary && !options.where) {\n        return Target.findByPk(instance.get(this.foreignKey), options);\n      }\n      where[this.targetKey] = instance.get(this.foreignKey);\n      options.limit = null;\n    }\n\n    options.where = options.where ?\n      { [Op.and]: [where, options.where] } :\n      where;\n\n    if (instances) {\n      const results = await Target.findAll(options);\n      const result = {};\n      for (const _instance of instances) {\n        result[_instance.get(this.foreignKey, { raw: true })] = null;\n      }\n\n      for (const _instance of results) {\n        result[_instance.get(this.targetKey, { raw: true })] = _instance;\n      }\n\n      return result;\n    }\n\n    return Target.findOne(options);\n  }\n\n  /**\n   * Set the associated model.\n   *\n   * @param {Model} sourceInstance the source instance\n   * @param {?Model|string|number} [associatedInstance] An persisted instance or the primary key of an instance to associate with this. Pass `null` or `undefined` to remove the association.\n   * @param {object} [options={}] options passed to `this.save`\n   * @param {boolean} [options.save=true] Skip saving this after setting the foreign key if false.\n   *\n   *  @returns {Promise}\n   */\n  async set(sourceInstance, associatedInstance, options = {}) {\n    let value = associatedInstance;\n\n    if (associatedInstance instanceof this.target) {\n      value = associatedInstance[this.targetKey];\n    }\n\n    sourceInstance.set(this.foreignKey, value);\n\n    if (options.save === false) return;\n\n    options = {\n      fields: [this.foreignKey],\n      allowNull: [this.foreignKey],\n      association: true,\n      ...options\n    };\n\n    // passes the changed field to save, so only that field get updated.\n    return await sourceInstance.save(options);\n  }\n\n  /**\n   * Create a new instance of the associated model and associate it with this.\n   *\n   * @param {Model} sourceInstance the source instance\n   * @param {object} [values={}] values to create associated model instance with\n   * @param {object} [options={}] Options passed to `target.create` and setAssociation.\n   *\n   * @see\n   * {@link Model#create}  for a full explanation of options\n   *\n   * @returns {Promise<Model>} The created target model\n   */\n  async create(sourceInstance, values, options) {\n    values = values || {};\n    options = options || {};\n\n    const newAssociatedObject = await this.target.create(values, options);\n    await sourceInstance[this.accessors.set](newAssociatedObject, options);\n\n    return newAssociatedObject;\n  }\n\n  verifyAssociationAlias(alias) {\n    if (typeof alias === 'string') {\n      return this.as === alias;\n    }\n\n    if (alias && alias.singular) {\n      return this.as === alias.singular;\n    }\n\n    return !this.isAliased;\n  }\n}\n\nmodule.exports = BelongsTo;\nmodule.exports.BelongsTo = BelongsTo;\nmodule.exports.default = BelongsTo;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/associations/helpers.js":{"lineLengths":[13,44,95,229,3,1,52,79,77,157,65,33,37,34,8,47,47,5,3,1,60,59,26,33,84,51,55,71,8,5,3,1,36,35,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/associations/helpers.js"],"sourcesContent":["'use strict';\n\nfunction checkNamingCollision(association) {\n  if (Object.prototype.hasOwnProperty.call(association.source.rawAttributes, association.as)) {\n    throw new Error(\n      `Naming collision between attribute '${association.as}'` +\n      ` and association '${association.as}' on model ${association.source.name}` +\n      '. To remedy this, change either foreignKey or as in your association definition'\n    );\n  }\n}\nexports.checkNamingCollision = checkNamingCollision;\n\nfunction addForeignKeyConstraints(newAttribute, source, target, options, key) {\n  // FK constraints are opt-in: users must either set `foreignKeyConstraints`\n  // on the association, or request an `onDelete` or `onUpdate` behavior\n\n  if (options.foreignKeyConstraint || options.onDelete || options.onUpdate) {\n    // Find primary keys: composite keys not supported with this approach\n    const primaryKeys = Object.keys(source.primaryKeys)\n      .map(primaryKeyAttribute => source.rawAttributes[primaryKeyAttribute].field || primaryKeyAttribute);\n\n    if (primaryKeys.length === 1 || !primaryKeys.includes(key)) {\n      newAttribute.references = {\n        model: source.getTableName(),\n        key: key || primaryKeys[0]\n      };\n\n      newAttribute.onDelete = options.onDelete;\n      newAttribute.onUpdate = options.onUpdate;\n    }\n  }\n}\nexports.addForeignKeyConstraints = addForeignKeyConstraints;\n\n/**\n * Mixin (inject) association methods to model prototype\n *\n * @private\n *\n * @param {object} association instance\n * @param {object} obj Model prototype\n * @param {Array} methods Method names to inject\n * @param {object} aliases Mapping between model and association method names\n *\n */\nfunction mixinMethods(association, obj, methods, aliases) {\n  aliases = aliases || {};\n\n  for (const method of methods) {\n    // don't override custom methods\n    if (!Object.prototype.hasOwnProperty.call(obj, association.accessors[method])) {\n      const realMethod = aliases[method] || method;\n\n      obj[association.accessors[method]] = function() {\n        return association[realMethod](this, ...Array.from(arguments));\n      };\n    }\n  }\n}\nexports.mixinMethods = mixinMethods;\n"],"mappings":";AAEA,8BAA8B,aAAa;AACzC,MAAI,OAAO,UAAU,eAAe,KAAK,YAAY,OAAO,eAAe,YAAY,KAAK;AAC1F,UAAM,IAAI,MACR,uCAAuC,YAAY,wBAC9B,YAAY,gBAAgB,YAAY,OAAO;AAAA;AAAA;AAK1E,QAAQ,uBAAuB;AAE/B,kCAAkC,cAAc,QAAQ,QAAQ,SAAS,KAAK;AAI5E,MAAI,QAAQ,wBAAwB,QAAQ,YAAY,QAAQ,UAAU;AAExE,UAAM,cAAc,OAAO,KAAK,OAAO,aACpC,IAAI,yBAAuB,OAAO,cAAc,qBAAqB,SAAS;AAEjF,QAAI,YAAY,WAAW,KAAK,CAAC,YAAY,SAAS,MAAM;AAC1D,mBAAa,aAAa;AAAA,QACxB,OAAO,OAAO;AAAA,QACd,KAAK,OAAO,YAAY;AAAA;AAG1B,mBAAa,WAAW,QAAQ;AAChC,mBAAa,WAAW,QAAQ;AAAA;AAAA;AAAA;AAItC,QAAQ,2BAA2B;AAanC,sBAAsB,aAAa,KAAK,SAAS,SAAS;AACxD,YAAU,WAAW;AAErB,aAAW,UAAU,SAAS;AAE5B,QAAI,CAAC,OAAO,UAAU,eAAe,KAAK,KAAK,YAAY,UAAU,UAAU;AAC7E,YAAM,aAAa,QAAQ,WAAW;AAEtC,UAAI,YAAY,UAAU,WAAW,WAAW;AAC9C,eAAO,YAAY,YAAY,MAAM,GAAG,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAK3D,QAAQ,eAAe;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/associations/base.js":{"lineLengths":[13,52,19,45,25,25,27,31,57,25,30,38,151,5,3,26,32,22,5,35,41,23,29,61,68,7,3,48,19,3,1,29,32,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/associations/base.js"],"sourcesContent":["'use strict';\n\nconst { AssociationError } = require('./../errors');\n\n/**\n * Creating associations in sequelize is done by calling one of the belongsTo / hasOne / hasMany / belongsToMany functions on a model (the source), and providing another model as the first argument to the function (the target).\n *\n * * hasOne - adds a foreign key to the target and singular association mixins to the source.\n * * belongsTo - add a foreign key and singular association mixins to the source.\n * * hasMany - adds a foreign key to target and plural association mixins to the source.\n * * belongsToMany - creates an N:M association with a join table and adds plural association mixins to the source. The junction table is created with sourceId and targetId.\n *\n * Creating an association will add a foreign key constraint to the attributes. All associations use `CASCADE` on update and `SET NULL` on delete, except for n:m, which also uses `CASCADE` on delete.\n *\n * When creating associations, you can provide an alias, via the `as` option. This is useful if the same model is associated twice, or you want your association to be called something other than the name of the target model.\n *\n * As an example, consider the case where users have many pictures, one of which is their profile picture. All pictures have a `userId`, but in addition the user model also has a `profilePictureId`, to be able to easily load the user's profile picture.\n *\n * ```js\n * User.hasMany(Picture)\n * User.belongsTo(Picture, { as: 'ProfilePicture', constraints: false })\n *\n * user.getPictures() // gets you all pictures\n * user.getProfilePicture() // gets you only the profile picture\n *\n * User.findAll({\n *   where: ...,\n *   include: [\n *     { model: Picture }, // load all pictures\n *     { model: Picture, as: 'ProfilePicture' }, // load the profile picture.\n *     // Notice that the spelling must be the exact same as the one in the association\n *   ]\n * })\n * ```\n * To get full control over the foreign key column added by sequelize, you can use the `foreignKey` option. It can either be a string, that specifies the name, or and object type definition,\n * equivalent to those passed to `sequelize.define`.\n *\n * ```js\n * User.hasMany(Picture, { foreignKey: 'uid' })\n * ```\n *\n * The foreign key column in Picture will now be called `uid` instead of the default `userId`.\n *\n * ```js\n * User.hasMany(Picture, {\n *   foreignKey: {\n *     name: 'uid',\n *     allowNull: false\n *   }\n * })\n * ```\n *\n * This specifies that the `uid` column cannot be null. In most cases this will already be covered by the foreign key constraints, which sequelize creates automatically, but can be useful in case where the foreign keys are disabled, e.g. due to circular references (see `constraints: false` below).\n *\n * When fetching associated models, you can limit your query to only load some models. These queries are written in the same way as queries to `find`/`findAll`. To only get pictures in JPG, you can do:\n *\n * ```js\n * user.getPictures({\n *   where: {\n *     format: 'jpg'\n *   }\n * })\n * ```\n *\n * There are several ways to update and add new associations. Continuing with our example of users and pictures:\n * ```js\n * user.addPicture(p) // Add a single picture\n * user.setPictures([p1, p2]) // Associate user with ONLY these two picture, all other associations will be deleted\n * user.addPictures([p1, p2]) // Associate user with these two pictures, but don't touch any current associations\n * ```\n *\n * You don't have to pass in a complete object to the association functions, if your associated model has a single primary key:\n *\n * ```js\n * user.addPicture(req.query.pid) // Here pid is just an integer, representing the primary key of the picture\n * ```\n *\n * In the example above we have specified that a user belongs to his profile picture. Conceptually, this might not make sense, but since we want to add the foreign key to the user model this is the way to do it.\n *\n * Note how we also specified `constraints: false` for profile picture. This is because we add a foreign key from user to picture (profilePictureId), and from picture to user (userId). If we were to add foreign keys to both, it would create a cyclic dependency, and sequelize would not know which table to create first, since user depends on picture, and picture depends on user. These kinds of problems are detected by sequelize before the models are synced to the database, and you will get an error along the lines of `Error: Cyclic dependency found. 'users' is dependent of itself`. If you encounter this, you should either disable some constraints, or rethink your associations completely.\n */\nclass Association {\n  constructor(source, target, options = {}) {\n    /**\n     * @type {Model}\n     */\n    this.source = source;\n\n    /**\n     * @type {Model}\n     */\n    this.target = target;\n\n    this.options = options;\n    this.scope = options.scope;\n    this.isSelfAssociation = this.source === this.target;\n    this.as = options.as;\n\n    /**\n     * The type of the association. One of `HasMany`, `BelongsTo`, `HasOne`, `BelongsToMany`\n     *\n     * @type {string}\n     */\n    this.associationType = '';\n\n    if (source.hasAlias(options.as)) {\n      throw new AssociationError(`You have used the alias ${options.as} in two separate associations. ` +\n      'Aliased associations must have unique aliases.'\n      );\n    }\n  }\n\n  /**\n   * Normalize input\n   *\n   * @param {Array|string} input it may be array or single obj, instance or primary key\n   *\n   * @private\n   * @returns {Array} built objects\n   */\n  toInstanceArray(input) {\n    if (!Array.isArray(input)) {\n      input = [input];\n    }\n\n    return input.map(element => {\n      if (element instanceof this.target) return element;\n\n      const tmpInstance = {};\n      tmpInstance[this.target.primaryKeyAttribute] = element;\n\n      return this.target.build(tmpInstance, { isNewRecord: false });\n    });\n  }\n\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return this.as;\n  }\n}\n\nmodule.exports = Association;\n"],"mappings":";AAEA,MAAM,EAAE,qBAAqB,QAAQ;AA+ErC,kBAAkB;AAAA,EAChB,YAAY,QAAQ,QAAQ,UAAU,IAAI;AAIxC,SAAK,SAAS;AAKd,SAAK,SAAS;AAEd,SAAK,UAAU;AACf,SAAK,QAAQ,QAAQ;AACrB,SAAK,oBAAoB,KAAK,WAAW,KAAK;AAC9C,SAAK,KAAK,QAAQ;AAOlB,SAAK,kBAAkB;AAEvB,QAAI,OAAO,SAAS,QAAQ,KAAK;AAC/B,YAAM,IAAI,iBAAiB,2BAA2B,QAAQ;AAAA;AAAA;AAAA,EAclE,gBAAgB,OAAO;AACrB,QAAI,CAAC,MAAM,QAAQ,QAAQ;AACzB,cAAQ,CAAC;AAAA;AAGX,WAAO,MAAM,IAAI,aAAW;AAC1B,UAAI,mBAAmB,KAAK;AAAQ,eAAO;AAE3C,YAAM,cAAc;AACpB,kBAAY,KAAK,OAAO,uBAAuB;AAE/C,aAAO,KAAK,OAAO,MAAM,aAAa,EAAE,aAAa;AAAA;AAAA;AAAA,GAIxD,OAAO,IAAI,iCAAiC;AAC3C,WAAO,KAAK;AAAA;AAAA;AAIhB,OAAO,UAAU;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/associations/belongs-to-many.js":{"lineLengths":[13,38,41,57,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,66,36,37,28,38,42,38,36,63,63,35,41,40,35,108,138,5,38,30,30,8,5,43,34,38,60,35,30,45,92,5,18,28,37,36,33,14,29,26,46,10,7,12,48,51,5,159,33,36,5,55,58,15,45,15,77,34,34,7,7,79,92,33,46,94,12,35,55,94,5,38,49,58,104,40,22,74,22,12,14,70,7,5,68,19,18,18,18,16,8,22,35,34,47,57,42,7,41,55,72,49,59,51,34,9,7,33,47,7,40,55,72,49,34,9,7,29,40,7,5,23,45,5,151,39,58,62,22,26,26,34,28,34,34,40,34,29,29,6,3,32,46,57,92,12,36,67,42,22,19,5,44,53,86,12,35,36,7,34,63,96,22,19,5,3,23,38,43,76,79,71,39,16,65,9,38,7,7,64,41,47,64,41,47,94,92,42,69,47,20,88,43,14,103,7,66,5,61,59,28,8,5,59,57,28,8,5,45,36,42,27,8,117,117,36,45,36,45,36,42,27,8,115,115,36,45,36,45,5,86,84,43,102,105,124,62,5,61,128,5,68,33,7,72,33,7,70,34,32,33,7,68,31,7,72,31,7,70,32,32,33,7,53,91,40,9,93,41,41,42,9,5,39,16,3,14,127,21,23,20,25,30,6,54,3,32,45,33,19,21,21,50,5,21,17,19,21,7,6,50,24,67,26,51,7,53,24,57,10,7,46,28,40,48,23,59,27,9,5,28,65,27,33,14,43,7,5,66,68,5,34,3,34,44,39,26,104,6,37,23,25,53,38,3,49,36,30,5,44,15,18,19,35,29,7,61,44,32,7,14,34,8,7,21,17,41,21,7,6,70,140,3,60,28,37,37,39,53,40,32,12,72,5,34,49,27,49,38,26,54,160,45,112,22,48,16,66,64,35,11,102,47,88,22,60,58,15,17,11,9,7,44,93,33,56,122,32,13,7,43,70,147,56,66,34,11,104,7,35,6,9,125,51,21,44,38,18,5,3,52,22,31,42,29,44,44,46,60,52,61,34,50,88,34,49,26,37,37,39,132,35,40,16,72,102,118,42,11,9,7,43,70,87,102,65,76,63,28,11,111,7,48,70,100,69,33,9,100,54,51,15,7,35,6,9,132,67,26,21,44,36,18,5,3,57,29,28,77,19,74,120,6,100,3,49,29,28,26,33,17,23,8,5,28,47,27,79,7,5,81,102,31,3,33,36,31,5,32,38,5,27,3,1,31,45,39,43,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/associations/belongs-to-many.js"],"sourcesContent":["'use strict';\n\nconst Utils = require('./../utils');\nconst Helpers = require('./helpers');\nconst _ = require('lodash');\nconst Association = require('./base');\nconst BelongsTo = require('./belongs-to');\nconst HasMany = require('./has-many');\nconst HasOne = require('./has-one');\nconst AssociationError = require('../errors').AssociationError;\nconst EmptyResultError = require('../errors').EmptyResultError;\nconst Op = require('../operators');\n\n/**\n * Many-to-many association with a join table.\n *\n * When the join table has additional attributes, these can be passed in the options object:\n *\n * ```js\n * UserProject = sequelize.define('user_project', {\n *   role: Sequelize.STRING\n * });\n * User.belongsToMany(Project, { through: UserProject });\n * Project.belongsToMany(User, { through: UserProject });\n * // through is required!\n *\n * user.addProject(project, { through: { role: 'manager' }});\n * ```\n *\n * All methods allow you to pass either a persisted instance, its primary key, or a mixture:\n *\n * ```js\n * const project = await Project.create({ id: 11 });\n * await user.addProjects([project, 12]);\n * ```\n *\n * If you want to set several target instances, but with different attributes you have to set the attributes on the instance, using a property with the name of the through model:\n *\n * ```js\n * p1.UserProjects = {\n *   started: true\n * }\n * user.setProjects([p1, p2], { through: { started: false }}) // The default value is false, but p1 overrides that.\n * ```\n *\n * Similarly, when fetching through a join table with custom attributes, these attributes will be available as an object with the name of the through model.\n * ```js\n * const projects = await user.getProjects();\n * const p1 = projects[0];\n * p1.UserProjects.started // Is this project started yet?\n * ```\n *\n * In the API reference below, add the name of the association to the method, e.g. for `User.belongsToMany(Project)` the getter will be `user.getProjects()`.\n *\n * @see {@link Model.belongsToMany}\n */\nclass BelongsToMany extends Association {\n  constructor(source, target, options) {\n    super(source, target, options);\n\n    if (this.options.through === undefined || this.options.through === true || this.options.through === null) {\n      throw new AssociationError(`${source.name}.belongsToMany(${target.name}) requires through option, pass either a string or a model`);\n    }\n\n    if (!this.options.through.model) {\n      this.options.through = {\n        model: options.through\n      };\n    }\n\n    this.associationType = 'BelongsToMany';\n    this.targetAssociation = null;\n    this.sequelize = source.sequelize;\n    this.through = { ...this.options.through };\n    this.isMultiAssociation = true;\n    this.doubleLinked = false;\n\n    if (!this.as && this.isSelfAssociation) {\n      throw new AssociationError('\\'as\\' must be defined for many-to-many self-associations');\n    }\n\n    if (this.as) {\n      this.isAliased = true;\n\n      if (_.isPlainObject(this.as)) {\n        this.options.name = this.as;\n        this.as = this.as.plural;\n      } else {\n        this.options.name = {\n          plural: this.as,\n          singular: Utils.singularize(this.as)\n        };\n      }\n    } else {\n      this.as = this.target.options.name.plural;\n      this.options.name = this.target.options.name;\n    }\n\n    this.combinedTableName = Utils.combineTableNames(\n      this.source.tableName,\n      this.isSelfAssociation ? this.as || this.target.tableName : this.target.tableName\n    );\n\n    /*\n    * If self association, this is the target association - Unless we find a pairing association\n    */\n    if (this.isSelfAssociation) {\n      this.targetAssociation = this;\n    }\n\n    /*\n    * Find paired association (if exists)\n    */\n    _.each(this.target.associations, association => {\n      if (association.associationType !== 'BelongsToMany') return;\n      if (association.target !== this.source) return;\n\n      if (this.options.through.model === association.options.through.model) {\n        this.paired = association;\n        association.paired = this;\n      }\n    });\n\n    /*\n    * Default/generated source/target keys\n    */\n    this.sourceKey = this.options.sourceKey || this.source.primaryKeyAttribute;\n    this.sourceKeyField = this.source.rawAttributes[this.sourceKey].field || this.sourceKey;\n\n    if (this.options.targetKey) {\n      this.targetKey = this.options.targetKey;\n      this.targetKeyField = this.target.rawAttributes[this.targetKey].field || this.targetKey;\n    } else {\n      this.targetKeyDefault = true;\n      this.targetKey = this.target.primaryKeyAttribute;\n      this.targetKeyField = this.target.rawAttributes[this.targetKey].field || this.targetKey;\n    }\n\n    this._createForeignAndOtherKeys();\n\n    if (typeof this.through.model === 'string') {\n      if (!this.sequelize.isDefined(this.through.model)) {\n        this.through.model = this.sequelize.define(this.through.model, {}, Object.assign(this.options, {\n          tableName: this.through.model,\n          indexes: [], //we don't want indexes here (as referenced in #2416)\n          paranoid: this.through.paranoid ? this.through.paranoid : false, // Default to non-paranoid join (referenced in #11991)\n          validate: {} // Don't propagate model-level validations\n        }));\n      } else {\n        this.through.model = this.sequelize.model(this.through.model);\n      }\n    }\n\n    Object.assign(this.options, _.pick(this.through.model.options, [\n      'timestamps', 'createdAt', 'updatedAt', 'deletedAt', 'paranoid'\n    ]));\n\n    if (this.paired) {\n      let needInjectPaired = false;\n\n      if (this.targetKeyDefault) {\n        this.targetKey = this.paired.sourceKey;\n        this.targetKeyField = this.paired.sourceKeyField;\n        this._createForeignAndOtherKeys();\n      }\n      if (this.paired.targetKeyDefault) {\n        // in this case paired.otherKey depends on paired.targetKey,\n        // so cleanup previously wrong generated otherKey\n        if (this.paired.targetKey !== this.sourceKey) {\n          delete this.through.model.rawAttributes[this.paired.otherKey];\n          this.paired.targetKey = this.sourceKey;\n          this.paired.targetKeyField = this.sourceKeyField;\n          this.paired._createForeignAndOtherKeys();\n          needInjectPaired = true;\n        }\n      }\n\n      if (this.otherKeyDefault) {\n        this.otherKey = this.paired.foreignKey;\n      }\n      if (this.paired.otherKeyDefault) {\n        // If paired otherKey was inferred we should make sure to clean it up\n        // before adding a new one that matches the foreignKey\n        if (this.paired.otherKey !== this.foreignKey) {\n          delete this.through.model.rawAttributes[this.paired.otherKey];\n          this.paired.otherKey = this.foreignKey;\n          needInjectPaired = true;\n        }\n      }\n\n      if (needInjectPaired) {\n        this.paired._injectAttributes();\n      }\n    }\n\n    if (this.through) {\n      this.throughModel = this.through.model;\n    }\n\n    this.options.tableName = this.combinedName = this.through.model === Object(this.through.model) ? this.through.model.tableName : this.through.model;\n\n    this.associationAccessor = this.as;\n\n    // Get singular and plural names, trying to uppercase the first letter, unless the model forbids it\n    const plural = _.upperFirst(this.options.name.plural);\n    const singular = _.upperFirst(this.options.name.singular);\n\n    this.accessors = {\n      get: `get${plural}`,\n      set: `set${plural}`,\n      addMultiple: `add${plural}`,\n      add: `add${singular}`,\n      create: `create${singular}`,\n      remove: `remove${singular}`,\n      removeMultiple: `remove${plural}`,\n      hasSingle: `has${singular}`,\n      hasAll: `has${plural}`,\n      count: `count${plural}`\n    };\n  }\n\n  _createForeignAndOtherKeys() {\n    /*\n    * Default/generated foreign/other keys\n    */\n    if (_.isObject(this.options.foreignKey)) {\n      this.foreignKeyAttribute = this.options.foreignKey;\n      this.foreignKey = this.foreignKeyAttribute.name || this.foreignKeyAttribute.fieldName;\n    } else {\n      this.foreignKeyAttribute = {};\n      this.foreignKey = this.options.foreignKey || Utils.camelize(\n        [\n          this.source.options.name.singular,\n          this.sourceKey\n        ].join('_')\n      );\n    }\n\n    if (_.isObject(this.options.otherKey)) {\n      this.otherKeyAttribute = this.options.otherKey;\n      this.otherKey = this.otherKeyAttribute.name || this.otherKeyAttribute.fieldName;\n    } else {\n      if (!this.options.otherKey) {\n        this.otherKeyDefault = true;\n      }\n\n      this.otherKeyAttribute = {};\n      this.otherKey = this.options.otherKey || Utils.camelize(\n        [\n          this.isSelfAssociation ? Utils.singularize(this.as) : this.target.options.name.singular,\n          this.targetKey\n        ].join('_')\n      );\n    }\n  }\n\n  // the id is in the target table\n  // or in an extra table which connects two tables\n  _injectAttributes() {\n    this.identifier = this.foreignKey;\n    this.foreignIdentifier = this.otherKey;\n\n    // remove any PKs previously defined by sequelize\n    // but ignore any keys that are part of this association (#5865)\n    _.each(this.through.model.rawAttributes, (attribute, attributeName) => {\n      if (attribute.primaryKey === true && attribute._autoGenerated === true) {\n        if ([this.foreignKey, this.otherKey].includes(attributeName)) {\n          // this key is still needed as it's part of the association\n          // so just set primaryKey to false\n          attribute.primaryKey = false;\n        }\n        else {\n          delete this.through.model.rawAttributes[attributeName];\n        }\n        this.primaryKeyDeleted = true;\n      }\n    });\n\n    const sourceKey = this.source.rawAttributes[this.sourceKey];\n    const sourceKeyType = sourceKey.type;\n    const sourceKeyField = this.sourceKeyField;\n    const targetKey = this.target.rawAttributes[this.targetKey];\n    const targetKeyType = targetKey.type;\n    const targetKeyField = this.targetKeyField;\n    const sourceAttribute = { type: sourceKeyType, ...this.foreignKeyAttribute };\n    const targetAttribute = { type: targetKeyType, ...this.otherKeyAttribute };\n\n    if (this.primaryKeyDeleted === true) {\n      targetAttribute.primaryKey = sourceAttribute.primaryKey = true;\n    } else if (this.through.unique !== false) {\n      let uniqueKey;\n      if (typeof this.options.uniqueKey === 'string' && this.options.uniqueKey !== '') {\n        uniqueKey = this.options.uniqueKey;\n      } else {\n        uniqueKey = [this.through.model.tableName, this.foreignKey, this.otherKey, 'unique'].join('_');\n      }\n      targetAttribute.unique = sourceAttribute.unique = uniqueKey;\n    }\n\n    if (!this.through.model.rawAttributes[this.foreignKey]) {\n      this.through.model.rawAttributes[this.foreignKey] = {\n        _autoGenerated: true\n      };\n    }\n\n    if (!this.through.model.rawAttributes[this.otherKey]) {\n      this.through.model.rawAttributes[this.otherKey] = {\n        _autoGenerated: true\n      };\n    }\n\n    if (this.options.constraints !== false) {\n      sourceAttribute.references = {\n        model: this.source.getTableName(),\n        key: sourceKeyField\n      };\n      // For the source attribute the passed option is the priority\n      sourceAttribute.onDelete = this.options.onDelete || this.through.model.rawAttributes[this.foreignKey].onDelete;\n      sourceAttribute.onUpdate = this.options.onUpdate || this.through.model.rawAttributes[this.foreignKey].onUpdate;\n\n      if (!sourceAttribute.onDelete) sourceAttribute.onDelete = 'CASCADE';\n      if (!sourceAttribute.onUpdate) sourceAttribute.onUpdate = 'CASCADE';\n\n      targetAttribute.references = {\n        model: this.target.getTableName(),\n        key: targetKeyField\n      };\n      // But the for target attribute the previously defined option is the priority (since it could've been set by another belongsToMany call)\n      targetAttribute.onDelete = this.through.model.rawAttributes[this.otherKey].onDelete || this.options.onDelete;\n      targetAttribute.onUpdate = this.through.model.rawAttributes[this.otherKey].onUpdate || this.options.onUpdate;\n\n      if (!targetAttribute.onDelete) targetAttribute.onDelete = 'CASCADE';\n      if (!targetAttribute.onUpdate) targetAttribute.onUpdate = 'CASCADE';\n    }\n\n    Object.assign(this.through.model.rawAttributes[this.foreignKey], sourceAttribute);\n    Object.assign(this.through.model.rawAttributes[this.otherKey], targetAttribute);\n\n    this.through.model.refreshAttributes();\n\n    this.identifierField = this.through.model.rawAttributes[this.foreignKey].field || this.foreignKey;\n    this.foreignIdentifierField = this.through.model.rawAttributes[this.otherKey].field || this.otherKey;\n\n    // For Db2 server, a reference column of a FOREIGN KEY must be unique\n    // else, server throws SQL0573N error. Hence, setting it here explicitly\n    // for non primary columns.\n    if (this.options.sequelize.options.dialect === 'db2' &&\n        this.source.rawAttributes[this.sourceKey].primaryKey !== true) {\n      this.source.rawAttributes[this.sourceKey].unique = true;\n    }\n\n    if (this.paired && !this.paired.foreignIdentifierField) {\n      this.paired.foreignIdentifierField = this.through.model.rawAttributes[this.paired.otherKey].field || this.paired.otherKey;\n    }\n\n    this.toSource = new BelongsTo(this.through.model, this.source, {\n      foreignKey: this.foreignKey\n    });\n    this.manyFromSource = new HasMany(this.source, this.through.model, {\n      foreignKey: this.foreignKey\n    });\n    this.oneFromSource = new HasOne(this.source, this.through.model, {\n      foreignKey: this.foreignKey,\n      sourceKey: this.sourceKey,\n      as: this.through.model.name\n    });\n\n    this.toTarget = new BelongsTo(this.through.model, this.target, {\n      foreignKey: this.otherKey\n    });\n    this.manyFromTarget = new HasMany(this.target, this.through.model, {\n      foreignKey: this.otherKey\n    });\n    this.oneFromTarget = new HasOne(this.target, this.through.model, {\n      foreignKey: this.otherKey,\n      sourceKey: this.targetKey,\n      as: this.through.model.name\n    });\n\n    if (this.paired && this.paired.otherKeyDefault) {\n      this.paired.toTarget = new BelongsTo(this.paired.through.model, this.paired.target, {\n        foreignKey: this.paired.otherKey\n      });\n\n      this.paired.oneFromTarget = new HasOne(this.paired.target, this.paired.through.model, {\n        foreignKey: this.paired.otherKey,\n        sourceKey: this.paired.targetKey,\n        as: this.paired.through.model.name\n      });\n    }\n\n    Helpers.checkNamingCollision(this);\n\n    return this;\n  }\n\n  mixin(obj) {\n    const methods = ['get', 'count', 'hasSingle', 'hasAll', 'set', 'add', 'addMultiple', 'remove', 'removeMultiple', 'create'];\n    const aliases = {\n      hasSingle: 'has',\n      hasAll: 'has',\n      addMultiple: 'add',\n      removeMultiple: 'remove'\n    };\n\n    Helpers.mixinMethods(this, obj, methods, aliases);\n  }\n\n  /**\n   * Get everything currently associated with this, using an optional where clause.\n   *\n   * @see\n   * {@link Model} for a full explanation of options\n   *\n   * @param {Model} instance instance\n   * @param {object} [options] find options\n   * @param {object} [options.where] An optional where clause to limit the associated models\n   * @param {string|boolean} [options.scope] Apply a scope on the related model, or remove its default scope by passing false\n   * @param {string} [options.schema] Apply a schema on the related model\n   * @param {object} [options.through.where] An optional where clause applied to through model (join table)\n   * @param {boolean} [options.through.paranoid=true] If true, only non-deleted records will be returned from the join table. If false, both deleted and non-deleted records will be returned. Only applies if through model is paranoid\n   *\n   * @returns {Promise<Array<Model>>}\n   */\n  async get(instance, options) {\n    options = Utils.cloneDeep(options) || {};\n\n    const through = this.through;\n    let scopeWhere;\n    let throughWhere;\n\n    if (this.scope) {\n      scopeWhere = { ...this.scope };\n    }\n\n    options.where = {\n      [Op.and]: [\n        scopeWhere,\n        options.where\n      ]\n    };\n\n    if (Object(through.model) === through.model) {\n      throughWhere = {};\n      throughWhere[this.foreignKey] = instance.get(this.sourceKey);\n\n      if (through.scope) {\n        Object.assign(throughWhere, through.scope);\n      }\n\n      //If a user pass a where on the options through options, make an \"and\" with the current throughWhere\n      if (options.through && options.through.where) {\n        throughWhere = {\n          [Op.and]: [throughWhere, options.through.where]\n        };\n      }\n\n      options.include = options.include || [];\n      options.include.push({\n        association: this.oneFromTarget,\n        attributes: options.joinTableAttributes,\n        required: true,\n        paranoid: _.get(options.through, 'paranoid', true),\n        where: throughWhere\n      });\n    }\n\n    let model = this.target;\n    if (Object.prototype.hasOwnProperty.call(options, 'scope')) {\n      if (!options.scope) {\n        model = model.unscoped();\n      } else {\n        model = model.scope(options.scope);\n      }\n    }\n\n    if (Object.prototype.hasOwnProperty.call(options, 'schema')) {\n      model = model.schema(options.schema, options.schemaDelimiter);\n    }\n\n    return model.findAll(options);\n  }\n\n  /**\n   * Count everything currently associated with this, using an optional where clause.\n   *\n   * @param {Model} instance instance\n   * @param {object} [options] find options\n   * @param {object} [options.where] An optional where clause to limit the associated models\n   * @param {string|boolean} [options.scope] Apply a scope on the related model, or remove its default scope by passing false\n   *\n   * @returns {Promise<number>}\n   */\n  async count(instance, options) {\n    const sequelize = this.target.sequelize;\n\n    options = Utils.cloneDeep(options);\n    options.attributes = [\n      [sequelize.fn('COUNT', sequelize.col([this.target.name, this.targetKeyField].join('.'))), 'count']\n    ];\n    options.joinTableAttributes = [];\n    options.raw = true;\n    options.plain = true;\n\n    const result = await this.get(instance, options);\n\n    return parseInt(result.count, 10);\n  }\n\n  /**\n   * Check if one or more instance(s) are associated with this. If a list of instances is passed, the function returns true if _all_ instances are associated\n   *\n   * @param {Model} sourceInstance source instance to check for an association with\n   * @param {Model|Model[]|string[]|string|number[]|number} [instances] Can be an array of instances or their primary keys\n   * @param {object} [options] Options passed to getAssociations\n   *\n   * @returns {Promise<boolean>}\n   */\n  async has(sourceInstance, instances, options) {\n    if (!Array.isArray(instances)) {\n      instances = [instances];\n    }\n\n    options = {\n      raw: true,\n      ...options,\n      scope: false,\n      attributes: [this.targetKey],\n      joinTableAttributes: []\n    };\n\n    const instancePrimaryKeys = instances.map(instance => {\n      if (instance instanceof this.target) {\n        return instance.where();\n      }\n      return {\n        [this.targetKey]: instance\n      };\n    });\n\n    options.where = {\n      [Op.and]: [\n        { [Op.or]: instancePrimaryKeys },\n        options.where\n      ]\n    };\n\n    const associatedObjects = await this.get(sourceInstance, options);\n\n    return _.differenceWith(instancePrimaryKeys, associatedObjects,\n      (a, b) => _.isEqual(a[this.targetKey], b[this.targetKey])).length === 0;\n  }\n\n  /**\n   * Set the associated models by passing an array of instances or their primary keys.\n   * Everything that it not in the passed array will be un-associated.\n   *\n   * @param {Model} sourceInstance source instance to associate new instances with\n   * @param {Model|Model[]|string[]|string|number[]|number} [newAssociatedObjects] A single instance or primary key, or a mixed array of persisted instances or primary keys\n   * @param {object} [options] Options passed to `through.findAll`, `bulkCreate`, `update` and `destroy`\n   * @param {object} [options.validate] Run validation for the join model\n   * @param {object} [options.through] Additional attributes for the join table.\n   *\n   * @returns {Promise}\n   */\n  async set(sourceInstance, newAssociatedObjects, options) {\n    options = options || {};\n\n    const sourceKey = this.sourceKey;\n    const targetKey = this.targetKey;\n    const identifier = this.identifier;\n    const foreignIdentifier = this.foreignIdentifier;\n\n    if (newAssociatedObjects === null) {\n      newAssociatedObjects = [];\n    } else {\n      newAssociatedObjects = this.toInstanceArray(newAssociatedObjects);\n    }\n    const where = {\n      [identifier]: sourceInstance.get(sourceKey),\n      ...this.through.scope\n    };\n\n    const updateAssociations = currentRows => {\n      const obsoleteAssociations = [];\n      const promises = [];\n      const defaultAttributes = options.through || {};\n\n      const unassociatedObjects = newAssociatedObjects.filter(obj =>\n        !currentRows.some(currentRow => currentRow[foreignIdentifier] === obj.get(targetKey))\n      );\n\n      for (const currentRow of currentRows) {\n        const newObj = newAssociatedObjects.find(obj => currentRow[foreignIdentifier] === obj.get(targetKey));\n\n        if (!newObj) {\n          obsoleteAssociations.push(currentRow);\n        } else {\n          let throughAttributes = newObj[this.through.model.name];\n          // Quick-fix for subtle bug when using existing objects that might have the through model attached (not as an attribute object)\n          if (throughAttributes instanceof this.through.model) {\n            throughAttributes = {};\n          }\n\n          const attributes = { ...defaultAttributes, ...throughAttributes };\n\n          if (Object.keys(attributes).length) {\n            promises.push(\n              this.through.model.update(attributes, Object.assign(options, {\n                where: {\n                  [identifier]: sourceInstance.get(sourceKey),\n                  [foreignIdentifier]: newObj.get(targetKey)\n                }\n              }\n              ))\n            );\n          }\n        }\n      }\n\n      if (obsoleteAssociations.length > 0) {\n        promises.push(\n          this.through.model.destroy({\n            ...options,\n            where: {\n              [identifier]: sourceInstance.get(sourceKey),\n              [foreignIdentifier]: obsoleteAssociations.map(obsoleteAssociation => obsoleteAssociation[foreignIdentifier]),\n              ...this.through.scope\n            }\n          })\n        );\n      }\n\n      if (unassociatedObjects.length > 0) {\n        const bulk = unassociatedObjects.map(unassociatedObject => {\n          return {\n            ...defaultAttributes,\n            ...unassociatedObject[this.through.model.name],\n            [identifier]: sourceInstance.get(sourceKey),\n            [foreignIdentifier]: unassociatedObject.get(targetKey),\n            ...this.through.scope\n          };\n        });\n\n        promises.push(this.through.model.bulkCreate(bulk, { validate: true, ...options }));\n      }\n\n      return Promise.all(promises);\n    };\n\n    try {\n      const currentRows = await this.through.model.findAll({ ...options, where, raw: true });\n      return await updateAssociations(currentRows);\n    } catch (error) {\n      if (error instanceof EmptyResultError) return updateAssociations([]);\n      throw error;\n    }\n  }\n\n  /**\n   * Associate one or several rows with source instance. It will not un-associate any already associated instance\n   * that may be missing from `newInstances`.\n   *\n   * @param {Model} sourceInstance source instance to associate new instances with\n   * @param {Model|Model[]|string[]|string|number[]|number} [newInstances] A single instance or primary key, or a mixed array of persisted instances or primary keys\n   * @param {object} [options] Options passed to `through.findAll`, `bulkCreate` and `update`\n   * @param {object} [options.validate] Run validation for the join model.\n   * @param {object} [options.through] Additional attributes for the join table.\n   *\n   * @returns {Promise}\n   */\n  async add(sourceInstance, newInstances, options) {\n    // If newInstances is null or undefined, no-op\n    if (!newInstances) return Promise.resolve();\n\n    options = { ...options };\n\n    const association = this;\n    const sourceKey = association.sourceKey;\n    const targetKey = association.targetKey;\n    const identifier = association.identifier;\n    const foreignIdentifier = association.foreignIdentifier;\n    const defaultAttributes = options.through || {};\n\n    newInstances = association.toInstanceArray(newInstances);\n\n    const where = {\n      [identifier]: sourceInstance.get(sourceKey),\n      [foreignIdentifier]: newInstances.map(newInstance => newInstance.get(targetKey)),\n      ...association.through.scope\n    };\n\n    const updateAssociations = currentRows => {\n      const promises = [];\n      const unassociatedObjects = [];\n      const changedAssociations = [];\n      for (const obj of newInstances) {\n        const existingAssociation = currentRows && currentRows.find(current => current[foreignIdentifier] === obj.get(targetKey));\n\n        if (!existingAssociation) {\n          unassociatedObjects.push(obj);\n        } else {\n          const throughAttributes = obj[association.through.model.name];\n          const attributes = { ...defaultAttributes, ...throughAttributes };\n\n          if (Object.keys(attributes).some(attribute => attributes[attribute] !== existingAssociation[attribute])) {\n            changedAssociations.push(obj);\n          }\n        }\n      }\n\n      if (unassociatedObjects.length > 0) {\n        const bulk = unassociatedObjects.map(unassociatedObject => {\n          const throughAttributes = unassociatedObject[association.through.model.name];\n          const attributes = { ...defaultAttributes, ...throughAttributes };\n\n          attributes[identifier] = sourceInstance.get(sourceKey);\n          attributes[foreignIdentifier] = unassociatedObject.get(targetKey);\n\n          Object.assign(attributes, association.through.scope);\n\n          return attributes;\n        });\n\n        promises.push(association.through.model.bulkCreate(bulk, { validate: true, ...options }));\n      }\n\n      for (const assoc of changedAssociations) {\n        let throughAttributes = assoc[association.through.model.name];\n        const attributes = { ...defaultAttributes, ...throughAttributes };\n        // Quick-fix for subtle bug when using existing objects that might have the through model attached (not as an attribute object)\n        if (throughAttributes instanceof association.through.model) {\n          throughAttributes = {};\n        }\n\n        promises.push(association.through.model.update(attributes, Object.assign(options, { where: {\n          [identifier]: sourceInstance.get(sourceKey),\n          [foreignIdentifier]: assoc.get(targetKey)\n        } })));\n      }\n\n      return Promise.all(promises);\n    };\n\n    try {\n      const currentRows = await association.through.model.findAll({ ...options, where, raw: true });\n      const [associations] = await updateAssociations(currentRows);\n      return associations;\n    } catch (error) {\n      if (error instanceof EmptyResultError) return updateAssociations();\n      throw error;\n    }\n  }\n\n  /**\n   * Un-associate one or more instance(s).\n   *\n   * @param {Model} sourceInstance instance to un associate instances with\n   * @param {Model|Model[]|string|string[]|number|number[]} [oldAssociatedObjects] Can be an Instance or its primary key, or a mixed array of instances and primary keys\n   * @param {object} [options] Options passed to `through.destroy`\n   *\n   * @returns {Promise}\n   */\n  remove(sourceInstance, oldAssociatedObjects, options) {\n    const association = this;\n\n    options = options || {};\n\n    oldAssociatedObjects = association.toInstanceArray(oldAssociatedObjects);\n\n    const where = {\n      [association.identifier]: sourceInstance.get(association.sourceKey),\n      [association.foreignIdentifier]: oldAssociatedObjects.map(newInstance => newInstance.get(association.targetKey))\n    };\n\n    return association.through.model.destroy({ ...options, where });\n  }\n\n  /**\n   * Create a new instance of the associated model and associate it with this.\n   *\n   * @param {Model} sourceInstance source instance\n   * @param {object} [values] values for target model\n   * @param {object} [options] Options passed to create and add\n   * @param {object} [options.through] Additional attributes for the join table\n   *\n   * @returns {Promise}\n   */\n  async create(sourceInstance, values, options) {\n    const association = this;\n\n    options = options || {};\n    values = values || {};\n\n    if (Array.isArray(options)) {\n      options = {\n        fields: options\n      };\n    }\n\n    if (association.scope) {\n      Object.assign(values, association.scope);\n      if (options.fields) {\n        options.fields = options.fields.concat(Object.keys(association.scope));\n      }\n    }\n\n    // Create the related model instance\n    const newAssociatedObject = await association.target.create(values, options);\n\n    await sourceInstance[association.accessors.add](newAssociatedObject, _.omit(options, ['fields']));\n    return newAssociatedObject;\n  }\n\n  verifyAssociationAlias(alias) {\n    if (typeof alias === 'string') {\n      return this.as === alias;\n    }\n\n    if (alias && alias.plural) {\n      return this.as === alias.plural;\n    }\n\n    return !this.isAliased;\n  }\n}\n\nmodule.exports = BelongsToMany;\nmodule.exports.BelongsToMany = BelongsToMany;\nmodule.exports.default = BelongsToMany;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/associations/has-many.js":{"lineLengths":[13,38,41,57,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,66,36,37,28,38,35,35,40,35,37,34,38,35,34,31,100,5,33,36,5,18,28,37,36,33,14,29,26,46,10,7,12,48,51,5,46,57,92,41,48,5,27,40,42,39,19,5,53,97,97,5,79,52,47,94,12,64,56,5,58,62,39,22,26,26,34,28,34,34,40,34,29,29,6,3,23,27,41,94,23,34,6,63,45,98,109,75,5,135,66,36,36,95,95,92,39,16,3,14,127,21,23,20,25,30,6,54,3,38,21,28,17,15,36,27,25,5,42,21,39,5,20,90,50,32,31,19,16,10,29,14,34,25,10,36,7,12,75,5,81,65,27,33,14,43,7,5,66,68,5,49,17,21,22,40,64,5,38,76,5,18,3,34,39,26,7,109,15,7,6,23,25,53,38,3,55,21,42,42,5,58,19,52,15,7,54,44,32,7,14,51,8,7,21,17,14,21,7,6,70,63,3,55,35,27,12,62,5,132,24,176,175,20,15,42,18,37,21,140,8,102,26,11,5,41,23,18,67,40,154,102,26,11,5,32,26,3,60,25,31,60,35,59,19,19,141,6,103,26,3,63,20,29,6,60,19,60,133,6,103,16,3,54,33,17,23,8,5,28,18,5,21,56,50,27,41,7,5,65,23,43,53,3,33,36,31,5,32,38,5,27,3,1,25,33,33,36,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/associations/has-many.js"],"sourcesContent":["'use strict';\n\nconst Utils = require('./../utils');\nconst Helpers = require('./helpers');\nconst _ = require('lodash');\nconst Association = require('./base');\nconst Op = require('../operators');\n\n/**\n * One-to-many association\n *\n * In the API reference below, add the name of the association to the method, e.g. for `User.hasMany(Project)` the getter will be `user.getProjects()`.\n * If the association is aliased, use the alias instead, e.g. `User.hasMany(Project, { as: 'jobs' })` will be `user.getJobs()`.\n *\n * @see {@link Model.hasMany}\n */\nclass HasMany extends Association {\n  constructor(source, target, options) {\n    super(source, target, options);\n\n    this.associationType = 'HasMany';\n    this.targetAssociation = null;\n    this.sequelize = source.sequelize;\n    this.isMultiAssociation = true;\n    this.foreignKeyAttribute = {};\n\n    if (this.options.through) {\n      throw new Error('N:M associations are not supported with hasMany. Use belongsToMany instead');\n    }\n\n    /*\n    * If self association, this is the target association\n    */\n    if (this.isSelfAssociation) {\n      this.targetAssociation = this;\n    }\n\n    if (this.as) {\n      this.isAliased = true;\n\n      if (_.isPlainObject(this.as)) {\n        this.options.name = this.as;\n        this.as = this.as.plural;\n      } else {\n        this.options.name = {\n          plural: this.as,\n          singular: Utils.singularize(this.as)\n        };\n      }\n    } else {\n      this.as = this.target.options.name.plural;\n      this.options.name = this.target.options.name;\n    }\n\n    /*\n     * Foreign key setup\n     */\n    if (_.isObject(this.options.foreignKey)) {\n      this.foreignKeyAttribute = this.options.foreignKey;\n      this.foreignKey = this.foreignKeyAttribute.name || this.foreignKeyAttribute.fieldName;\n    } else if (this.options.foreignKey) {\n      this.foreignKey = this.options.foreignKey;\n    }\n\n    if (!this.foreignKey) {\n      this.foreignKey = Utils.camelize(\n        [\n          this.source.options.name.singular,\n          this.source.primaryKeyAttribute\n        ].join('_')\n      );\n    }\n\n    if (this.target.rawAttributes[this.foreignKey]) {\n      this.identifierField = this.target.rawAttributes[this.foreignKey].field || this.foreignKey;\n      this.foreignKeyField = this.target.rawAttributes[this.foreignKey].field || this.foreignKey;\n    }\n\n    /*\n     * Source key setup\n     */\n    this.sourceKey = this.options.sourceKey || this.source.primaryKeyAttribute;\n\n    if (this.source.rawAttributes[this.sourceKey]) {\n      this.sourceKeyAttribute = this.sourceKey;\n      this.sourceKeyField = this.source.rawAttributes[this.sourceKey].field || this.sourceKey;\n    } else {\n      this.sourceKeyAttribute = this.source.primaryKeyAttribute;\n      this.sourceKeyField = this.source.primaryKeyField;\n    }\n\n    // Get singular and plural names\n    // try to uppercase the first letter, unless the model forbids it\n    const plural = _.upperFirst(this.options.name.plural);\n    const singular = _.upperFirst(this.options.name.singular);\n\n    this.associationAccessor = this.as;\n    this.accessors = {\n      get: `get${plural}`,\n      set: `set${plural}`,\n      addMultiple: `add${plural}`,\n      add: `add${singular}`,\n      create: `create${singular}`,\n      remove: `remove${singular}`,\n      removeMultiple: `remove${plural}`,\n      hasSingle: `has${singular}`,\n      hasAll: `has${plural}`,\n      count: `count${plural}`\n    };\n  }\n\n  // the id is in the target table\n  // or in an extra table which connects two tables\n  _injectAttributes() {\n    const newAttributes = {\n      [this.foreignKey]: {\n        type: this.options.keyType || this.source.rawAttributes[this.sourceKeyAttribute].type,\n        allowNull: true,\n        ...this.foreignKeyAttribute\n      }\n    };\n\n    // Create a new options object for use with addForeignKeyConstraints, to avoid polluting this.options in case it is later used for a n:m\n    const constraintOptions = { ...this.options };\n\n    if (this.options.constraints !== false) {\n      const target = this.target.rawAttributes[this.foreignKey] || newAttributes[this.foreignKey];\n      constraintOptions.onDelete = constraintOptions.onDelete || (target.allowNull ? 'SET NULL' : 'CASCADE');\n      constraintOptions.onUpdate = constraintOptions.onUpdate || 'CASCADE';\n    }\n\n    Helpers.addForeignKeyConstraints(newAttributes[this.foreignKey], this.source, this.target, constraintOptions, this.sourceKeyField);\n    Utils.mergeDefaults(this.target.rawAttributes, newAttributes);\n\n    this.target.refreshAttributes();\n    this.source.refreshAttributes();\n\n    this.identifierField = this.target.rawAttributes[this.foreignKey].field || this.foreignKey;\n    this.foreignKeyField = this.target.rawAttributes[this.foreignKey].field || this.foreignKey;\n    this.sourceKeyField = this.source.rawAttributes[this.sourceKey].field || this.sourceKey;\n\n    Helpers.checkNamingCollision(this);\n\n    return this;\n  }\n\n  mixin(obj) {\n    const methods = ['get', 'count', 'hasSingle', 'hasAll', 'set', 'add', 'addMultiple', 'remove', 'removeMultiple', 'create'];\n    const aliases = {\n      hasSingle: 'has',\n      hasAll: 'has',\n      addMultiple: 'add',\n      removeMultiple: 'remove'\n    };\n\n    Helpers.mixinMethods(this, obj, methods, aliases);\n  }\n\n  /**\n   * Get everything currently associated with this, using an optional where clause.\n   *\n   * @param {Model|Array<Model>} instances source instances\n   * @param {object} [options] find options\n   * @param {object} [options.where] An optional where clause to limit the associated models\n   * @param {string|boolean} [options.scope] Apply a scope on the related model, or remove its default scope by passing false\n   * @param {string} [options.schema] Apply a schema on the related model\n   *\n   * @see\n   * {@link Model.findAll}  for a full explanation of options\n   *\n   * @returns {Promise<Array<Model>>}\n   */\n  async get(instances, options = {}) {\n    const where = {};\n\n    let Model = this.target;\n    let instance;\n    let values;\n\n    if (!Array.isArray(instances)) {\n      instance = instances;\n      instances = undefined;\n    }\n\n    options = { ...options };\n\n    if (this.scope) {\n      Object.assign(where, this.scope);\n    }\n\n    if (instances) {\n      values = instances.map(_instance => _instance.get(this.sourceKey, { raw: true }));\n\n      if (options.limit && instances.length > 1) {\n        options.groupedLimit = {\n          limit: options.limit,\n          on: this, // association\n          values\n        };\n\n        delete options.limit;\n      } else {\n        where[this.foreignKey] = {\n          [Op.in]: values\n        };\n        delete options.groupedLimit;\n      }\n    } else {\n      where[this.foreignKey] = instance.get(this.sourceKey, { raw: true });\n    }\n\n    options.where = options.where ?\n      { [Op.and]: [where, options.where] } :\n      where;\n\n    if (Object.prototype.hasOwnProperty.call(options, 'scope')) {\n      if (!options.scope) {\n        Model = Model.unscoped();\n      } else {\n        Model = Model.scope(options.scope);\n      }\n    }\n\n    if (Object.prototype.hasOwnProperty.call(options, 'schema')) {\n      Model = Model.schema(options.schema, options.schemaDelimiter);\n    }\n\n    const results = await Model.findAll(options);\n    if (instance) return results;\n\n    const result = {};\n    for (const _instance of instances) {\n      result[_instance.get(this.sourceKey, { raw: true })] = [];\n    }\n\n    for (const _instance of results) {\n      result[_instance.get(this.foreignKey, { raw: true })].push(_instance);\n    }\n\n    return result;\n  }\n\n  /**\n   * Count everything currently associated with this, using an optional where clause.\n   *\n   * @param {Model}        instance the source instance\n   * @param {object}         [options] find & count options\n   * @param {object}         [options.where] An optional where clause to limit the associated models\n   * @param {string|boolean} [options.scope] Apply a scope on the related model, or remove its default scope by passing false\n   *\n   * @returns {Promise<number>}\n   */\n  async count(instance, options) {\n    options = Utils.cloneDeep(options);\n\n    options.attributes = [\n      [\n        this.sequelize.fn(\n          'COUNT',\n          this.sequelize.col(`${this.target.name}.${this.target.primaryKeyField}`)\n        ),\n        'count'\n      ]\n    ];\n    options.raw = true;\n    options.plain = true;\n\n    const result = await this.get(instance, options);\n\n    return parseInt(result.count, 10);\n  }\n\n  /**\n   * Check if one or more rows are associated with `this`.\n   *\n   * @param {Model} sourceInstance the source instance\n   * @param {Model|Model[]|string[]|string|number[]|number} [targetInstances] Can be an array of instances or their primary keys\n   * @param {object} [options] Options passed to getAssociations\n   *\n   * @returns {Promise}\n   */\n  async has(sourceInstance, targetInstances, options) {\n    const where = {};\n\n    if (!Array.isArray(targetInstances)) {\n      targetInstances = [targetInstances];\n    }\n\n    options = {\n      ...options,\n      scope: false,\n      attributes: [this.target.primaryKeyAttribute],\n      raw: true\n    };\n\n    where[Op.or] = targetInstances.map(instance => {\n      if (instance instanceof this.target) {\n        return instance.where();\n      }\n      return {\n        [this.target.primaryKeyAttribute]: instance\n      };\n    });\n\n    options.where = {\n      [Op.and]: [\n        where,\n        options.where\n      ]\n    };\n\n    const associatedObjects = await this.get(sourceInstance, options);\n\n    return associatedObjects.length === targetInstances.length;\n  }\n\n  /**\n   * Set the associated models by passing an array of persisted instances or their primary keys. Everything that is not in the passed array will be un-associated\n   *\n   * @param {Model} sourceInstance source instance to associate new instances with\n   * @param {Model|Model[]|string[]|string|number[]|number} [targetInstances] An array of persisted instances or primary key of instances to associate with this. Pass `null` or `undefined` to remove all associations.\n   * @param {object} [options] Options passed to `target.findAll` and `update`.\n   * @param {object} [options.validate] Run validation for the join model\n   *\n   * @returns {Promise}\n   */\n  async set(sourceInstance, targetInstances, options) {\n    if (targetInstances === null) {\n      targetInstances = [];\n    } else {\n      targetInstances = this.toInstanceArray(targetInstances);\n    }\n\n    const oldAssociations = await this.get(sourceInstance, { ...options, scope: false, raw: true });\n    const promises = [];\n    const obsoleteAssociations = oldAssociations.filter(old =>\n      !targetInstances.find(obj =>\n        obj[this.target.primaryKeyAttribute] === old[this.target.primaryKeyAttribute]\n      )\n    );\n    const unassociatedObjects = targetInstances.filter(obj =>\n      !oldAssociations.find(old =>\n        obj[this.target.primaryKeyAttribute] === old[this.target.primaryKeyAttribute]\n      )\n    );\n    let updateWhere;\n    let update;\n\n    if (obsoleteAssociations.length > 0) {\n      update = {};\n      update[this.foreignKey] = null;\n\n      updateWhere = {\n        [this.target.primaryKeyAttribute]: obsoleteAssociations.map(associatedObject =>\n          associatedObject[this.target.primaryKeyAttribute]\n        )\n      };\n\n\n      promises.push(this.target.unscoped().update(\n        update,\n        {\n          ...options,\n          where: updateWhere\n        }\n      ));\n    }\n\n    if (unassociatedObjects.length > 0) {\n      updateWhere = {};\n\n      update = {};\n      update[this.foreignKey] = sourceInstance.get(this.sourceKey);\n\n      Object.assign(update, this.scope);\n      updateWhere[this.target.primaryKeyAttribute] = unassociatedObjects.map(unassociatedObject =>\n        unassociatedObject[this.target.primaryKeyAttribute]\n      );\n\n      promises.push(this.target.unscoped().update(\n        update,\n        {\n          ...options,\n          where: updateWhere\n        }\n      ));\n    }\n\n    await Promise.all(promises);\n\n    return sourceInstance;\n  }\n\n  /**\n   * Associate one or more target rows with `this`. This method accepts a Model / string / number to associate a single row,\n   * or a mixed array of Model / string / numbers to associate multiple rows.\n   *\n   * @param {Model} sourceInstance the source instance\n   * @param {Model|Model[]|string[]|string|number[]|number} [targetInstances] A single instance or primary key, or a mixed array of persisted instances or primary keys\n   * @param {object} [options] Options passed to `target.update`.\n   *\n   * @returns {Promise}\n   */\n  async add(sourceInstance, targetInstances, options = {}) {\n    if (!targetInstances) return Promise.resolve();\n\n\n    targetInstances = this.toInstanceArray(targetInstances);\n\n    const update = {\n      [this.foreignKey]: sourceInstance.get(this.sourceKey),\n      ...this.scope\n    };\n\n    const where = {\n      [this.target.primaryKeyAttribute]: targetInstances.map(unassociatedObject =>\n        unassociatedObject.get(this.target.primaryKeyAttribute)\n      )\n    };\n\n    await this.target.unscoped().update(update, { ...options, where });\n\n    return sourceInstance;\n  }\n\n  /**\n   * Un-associate one or several target rows.\n   *\n   * @param {Model} sourceInstance instance to un associate instances with\n   * @param {Model|Model[]|string|string[]|number|number[]} [targetInstances] Can be an Instance or its primary key, or a mixed array of instances and primary keys\n   * @param {object} [options] Options passed to `target.update`\n   *\n   * @returns {Promise}\n   */\n  async remove(sourceInstance, targetInstances, options = {}) {\n    const update = {\n      [this.foreignKey]: null\n    };\n\n    targetInstances = this.toInstanceArray(targetInstances);\n\n    const where = {\n      [this.foreignKey]: sourceInstance.get(this.sourceKey),\n      [this.target.primaryKeyAttribute]: targetInstances.map(targetInstance =>\n        targetInstance.get(this.target.primaryKeyAttribute)\n      )\n    };\n\n    await this.target.unscoped().update(update, { ...options, where });\n\n    return this;\n  }\n\n  /**\n   * Create a new instance of the associated model and associate it with this.\n   *\n   * @param {Model} sourceInstance source instance\n   * @param {object} [values] values for target model instance\n   * @param {object} [options] Options passed to `target.create`\n   *\n   * @returns {Promise}\n   */\n  async create(sourceInstance, values, options = {}) {\n    if (Array.isArray(options)) {\n      options = {\n        fields: options\n      };\n    }\n\n    if (values === undefined) {\n      values = {};\n    }\n\n    if (this.scope) {\n      for (const attribute of Object.keys(this.scope)) {\n        values[attribute] = this.scope[attribute];\n        if (options.fields) options.fields.push(attribute);\n      }\n    }\n\n    values[this.foreignKey] = sourceInstance.get(this.sourceKey);\n    if (options.fields) options.fields.push(this.foreignKey);\n    return await this.target.create(values, options);\n  }\n\n  verifyAssociationAlias(alias) {\n    if (typeof alias === 'string') {\n      return this.as === alias;\n    }\n\n    if (alias && alias.plural) {\n      return this.as === alias.plural;\n    }\n\n    return !this.isAliased;\n  }\n}\n\nmodule.exports = HasMany;\nmodule.exports.HasMany = HasMany;\nmodule.exports.default = HasMany;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/associations/has-one.js":{"lineLengths":[13,38,41,57,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,66,36,37,28,38,35,34,40,35,36,36,34,18,28,27,25,8,12,50,51,5,46,57,92,41,48,5,27,40,63,39,19,5,87,151,5,105,92,81,39,45,53,97,5,62,22,28,28,33,6,3,23,27,41,85,23,34,6,45,98,99,65,5,130,66,36,95,39,16,3,14,45,45,3,33,21,29,17,39,65,27,35,14,45,7,5,66,70,5,36,27,25,5,20,32,76,8,12,60,5,21,39,5,81,20,52,24,42,68,7,40,74,7,20,5,35,3,58,75,74,265,44,42,73,34,37,25,10,5,51,57,31,74,61,28,11,7,52,91,46,5,16,3,49,26,28,21,56,50,29,41,9,7,5,74,25,43,5,53,3,33,36,31,5,34,40,5,27,3,1,24,35,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/associations/has-one.js"],"sourcesContent":["'use strict';\n\nconst Utils = require('./../utils');\nconst Helpers = require('./helpers');\nconst _ = require('lodash');\nconst Association = require('./base');\nconst Op = require('../operators');\n\n/**\n * One-to-one association\n *\n * In the API reference below, add the name of the association to the method, e.g. for `User.hasOne(Project)` the getter will be `user.getProject()`.\n * This is almost the same as `belongsTo` with one exception - The foreign key will be defined on the target model.\n *\n * @see {@link Model.hasOne}\n */\nclass HasOne extends Association {\n  constructor(source, target, options) {\n    super(source, target, options);\n\n    this.associationType = 'HasOne';\n    this.isSingleAssociation = true;\n    this.foreignKeyAttribute = {};\n\n    if (this.as) {\n      this.isAliased = true;\n      this.options.name = {\n        singular: this.as\n      };\n    } else {\n      this.as = this.target.options.name.singular;\n      this.options.name = this.target.options.name;\n    }\n\n    if (_.isObject(this.options.foreignKey)) {\n      this.foreignKeyAttribute = this.options.foreignKey;\n      this.foreignKey = this.foreignKeyAttribute.name || this.foreignKeyAttribute.fieldName;\n    } else if (this.options.foreignKey) {\n      this.foreignKey = this.options.foreignKey;\n    }\n\n    if (!this.foreignKey) {\n      this.foreignKey = Utils.camelize(\n        [\n          Utils.singularize(this.options.as || this.source.name),\n          this.source.primaryKeyAttribute\n        ].join('_')\n      );\n    }\n\n    if (\n      this.options.sourceKey\n      && !this.source.rawAttributes[this.options.sourceKey]\n    ) {\n      throw new Error(`Unknown attribute \"${this.options.sourceKey}\" passed as sourceKey, define this attribute on model \"${this.source.name}\" first`);\n    }\n\n    this.sourceKey = this.sourceKeyAttribute = this.options.sourceKey || this.source.primaryKeyAttribute;\n    this.sourceKeyField = this.source.rawAttributes[this.sourceKey].field || this.sourceKey;\n    this.sourceKeyIsPrimary = this.sourceKey === this.source.primaryKeyAttribute;\n\n    this.associationAccessor = this.as;\n    this.options.useHooks = options.useHooks;\n\n    if (this.target.rawAttributes[this.foreignKey]) {\n      this.identifierField = this.target.rawAttributes[this.foreignKey].field || this.foreignKey;\n    }\n\n    // Get singular name, trying to uppercase the first letter, unless the model forbids it\n    const singular = _.upperFirst(this.options.name.singular);\n\n    this.accessors = {\n      get: `get${singular}`,\n      set: `set${singular}`,\n      create: `create${singular}`\n    };\n  }\n\n  // the id is in the target table\n  _injectAttributes() {\n    const newAttributes = {\n      [this.foreignKey]: {\n        type: this.options.keyType || this.source.rawAttributes[this.sourceKey].type,\n        allowNull: true,\n        ...this.foreignKeyAttribute\n      }\n    };\n\n    if (this.options.constraints !== false) {\n      const target = this.target.rawAttributes[this.foreignKey] || newAttributes[this.foreignKey];\n      this.options.onDelete = this.options.onDelete || (target.allowNull ? 'SET NULL' : 'CASCADE');\n      this.options.onUpdate = this.options.onUpdate || 'CASCADE';\n    }\n\n    Helpers.addForeignKeyConstraints(newAttributes[this.foreignKey], this.source, this.target, this.options, this.sourceKeyField);\n    Utils.mergeDefaults(this.target.rawAttributes, newAttributes);\n\n    this.target.refreshAttributes();\n\n    this.identifierField = this.target.rawAttributes[this.foreignKey].field || this.foreignKey;\n\n    Helpers.checkNamingCollision(this);\n\n    return this;\n  }\n\n  mixin(obj) {\n    const methods = ['get', 'set', 'create'];\n\n    Helpers.mixinMethods(this, obj, methods);\n  }\n\n  /**\n   * Get the associated instance.\n   *\n   * @param {Model|Array<Model>} instances source instances\n   * @param {object}         [options] find options\n   * @param {string|boolean} [options.scope] Apply a scope on the related model, or remove its default scope by passing false\n   * @param {string} [options.schema] Apply a schema on the related model\n   *\n   * @see\n   * {@link Model.findOne} for a full explanation of options\n   *\n   * @returns {Promise<Model>}\n   */\n  async get(instances, options) {\n    const where = {};\n\n    let Target = this.target;\n    let instance;\n\n    options = Utils.cloneDeep(options);\n\n    if (Object.prototype.hasOwnProperty.call(options, 'scope')) {\n      if (!options.scope) {\n        Target = Target.unscoped();\n      } else {\n        Target = Target.scope(options.scope);\n      }\n    }\n\n    if (Object.prototype.hasOwnProperty.call(options, 'schema')) {\n      Target = Target.schema(options.schema, options.schemaDelimiter);\n    }\n\n    if (!Array.isArray(instances)) {\n      instance = instances;\n      instances = undefined;\n    }\n\n    if (instances) {\n      where[this.foreignKey] = {\n        [Op.in]: instances.map(_instance => _instance.get(this.sourceKey))\n      };\n    } else {\n      where[this.foreignKey] = instance.get(this.sourceKey);\n    }\n\n    if (this.scope) {\n      Object.assign(where, this.scope);\n    }\n\n    options.where = options.where ?\n      { [Op.and]: [where, options.where] } :\n      where;\n\n    if (instances) {\n      const results = await Target.findAll(options);\n      const result = {};\n      for (const _instance of instances) {\n        result[_instance.get(this.sourceKey, { raw: true })] = null;\n      }\n\n      for (const _instance of results) {\n        result[_instance.get(this.foreignKey, { raw: true })] = _instance;\n      }\n\n      return result;\n    }\n\n    return Target.findOne(options);\n  }\n\n  /**\n   * Set the associated model.\n   *\n   * @param {Model} sourceInstance the source instance\n   * @param {?Model|string|number} [associatedInstance] An persisted instance or the primary key of an instance to associate with this. Pass `null` or `undefined` to remove the association.\n   * @param {object} [options] Options passed to getAssociation and `target.save`\n   *\n   * @returns {Promise}\n   */\n  async set(sourceInstance, associatedInstance, options) {\n    options = { ...options, scope: false };\n\n    const oldInstance = await sourceInstance[this.accessors.get](options);\n    // TODO Use equals method once #5605 is resolved\n    const alreadyAssociated = oldInstance && associatedInstance && this.target.primaryKeyAttributes.every(attribute =>\n      oldInstance.get(attribute, { raw: true }) === (associatedInstance.get ? associatedInstance.get(attribute, { raw: true }) : associatedInstance)\n    );\n\n    if (oldInstance && !alreadyAssociated) {\n      oldInstance[this.foreignKey] = null;\n\n      await oldInstance.save({\n        ...options,\n        fields: [this.foreignKey],\n        allowNull: [this.foreignKey],\n        association: true\n      });\n    }\n    if (associatedInstance && !alreadyAssociated) {\n      if (!(associatedInstance instanceof this.target)) {\n        const tmpInstance = {};\n        tmpInstance[this.target.primaryKeyAttribute] = associatedInstance;\n        associatedInstance = this.target.build(tmpInstance, {\n          isNewRecord: false\n        });\n      }\n\n      Object.assign(associatedInstance, this.scope);\n      associatedInstance.set(this.foreignKey, sourceInstance.get(this.sourceKeyAttribute));\n\n      return associatedInstance.save(options);\n    }\n\n    return null;\n  }\n\n  /**\n   * Create a new instance of the associated model and associate it with this.\n   *\n   * @param {Model} sourceInstance the source instance\n   * @param {object} [values={}] values to create associated model instance with\n   * @param {object} [options] Options passed to `target.create` and setAssociation.\n   *\n   * @see\n   * {@link Model#create} for a full explanation of options\n   *\n   * @returns {Promise<Model>} The created target model\n   */\n  async create(sourceInstance, values, options) {\n    values = values || {};\n    options = options || {};\n\n    if (this.scope) {\n      for (const attribute of Object.keys(this.scope)) {\n        values[attribute] = this.scope[attribute];\n        if (options.fields) {\n          options.fields.push(attribute);\n        }\n      }\n    }\n\n    values[this.foreignKey] = sourceInstance.get(this.sourceKeyAttribute);\n    if (options.fields) {\n      options.fields.push(this.foreignKey);\n    }\n\n    return await this.target.create(values, options);\n  }\n\n  verifyAssociationAlias(alias) {\n    if (typeof alias === 'string') {\n      return this.as === alias;\n    }\n\n    if (alias && alias.singular) {\n      return this.as === alias.singular;\n    }\n\n    return !this.isAliased;\n  }\n}\n\nmodule.exports = HasOne;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/instance-validator.js":{"lineLengths":[13,38,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,28,33,43,42,55,64,38,25,39,30,17,16,42,104,12,40,5,27,39,31,21,28,3,21,24,58,27,23,37,30,7,29,66,5,3,20,87,3,32,98,71,9,29,21,99,30,5,70,30,3,35,26,72,46,15,7,57,51,15,7,72,57,7,87,88,7,7,41,3,29,26,92,54,15,7,90,9,31,7,41,3,54,61,13,5,26,76,66,68,18,25,12,35,20,9,7,39,94,15,7,47,15,7,95,36,9,40,7,87,50,108,9,3,95,24,45,23,33,19,25,21,28,26,5,40,21,5,18,11,29,84,9,70,19,76,7,5,9,67,17,74,5,3,68,38,57,70,5,81,67,148,5,3,53,42,141,40,44,67,68,27,14,40,7,12,45,5,25,3,47,83,197,85,64,122,139,7,5,152,126,179,7,5,3,68,71,189,53,28,3,1,44,35,53,43,46,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/instance-validator.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst Utils = require('./utils');\nconst sequelizeError = require('./errors');\nconst DataTypes = require('./data-types');\nconst BelongsTo = require('./associations/belongs-to');\nconst validator = require('./utils/validator-extras').validator;\nconst { promisify } = require('util');\n\n/**\n * Instance Validator.\n *\n * @param {Instance} modelInstance The model instance.\n * @param {object} options A dictionary with options.\n *\n * @private\n */\nclass InstanceValidator {\n  constructor(modelInstance, options) {\n    options = {\n      // assign defined and default options\n      hooks: true,\n      ...options\n    };\n\n    if (options.fields && !options.skip) {\n      options.skip = _.difference(Object.keys(modelInstance.constructor.rawAttributes), options.fields);\n    } else {\n      options.skip = options.skip || [];\n    }\n\n    this.options = options;\n\n    this.modelInstance = modelInstance;\n\n    /**\n     * Exposes a reference to validator.js. This allows you to add custom validations using `validator.extend`\n     *\n     * @name validator\n     * @private\n     */\n    this.validator = validator;\n\n    /**\n     *  All errors will be stored here from the validations.\n     *\n     * @type {Array} Will contain keys that correspond to attributes which will\n     *   be Arrays of Errors.\n     * @private\n     */\n    this.errors = [];\n\n    /**\n     * @type {boolean} Indicates if validations are in progress\n     * @private\n     */\n    this.inProgress = false;\n  }\n\n  /**\n   * The main entry point for the Validation module, invoke to start the dance.\n   *\n   * @returns {Promise}\n   * @private\n   */\n  async _validate() {\n    if (this.inProgress) throw new Error('Validations already in progress.');\n\n    this.inProgress = true;\n\n    await Promise.all([\n      this._perAttributeValidators(),\n      this._customValidators()\n    ]);\n\n    if (this.errors.length) {\n      throw new sequelizeError.ValidationError(null, this.errors);\n    }\n  }\n\n  /**\n   * Invoke the Validation sequence and run validation hooks if defined\n   *   - Before Validation Model Hooks\n   *   - Validation\n   *   - On validation success: After Validation Model Hooks\n   *   - On validation failure: Validation Failed Model Hooks\n   *\n   * @returns {Promise}\n   * @private\n   */\n  async validate() {\n    return await (this.options.hooks ? this._validateAndRunHooks() : this._validate());\n  }\n\n  /**\n   * Invoke the Validation sequence and run hooks\n   *   - Before Validation Model Hooks\n   *   - Validation\n   *   - On validation success: After Validation Model Hooks\n   *   - On validation failure: Validation Failed Model Hooks\n   *\n   * @returns {Promise}\n   * @private\n   */\n  async _validateAndRunHooks() {\n    const runHooks = this.modelInstance.constructor.runHooks.bind(this.modelInstance.constructor);\n    await runHooks('beforeValidate', this.modelInstance, this.options);\n\n    try {\n      await this._validate();\n    } catch (error) {\n      const newError = await runHooks('validationFailed', this.modelInstance, this.options, error);\n      throw newError || error;\n    }\n\n    await runHooks('afterValidate', this.modelInstance, this.options);\n    return this.modelInstance;\n  }\n\n  /**\n   * Will run all the validators defined per attribute (built-in validators and custom validators)\n   *\n   * @returns {Promise<Array>}\n   * @private\n   */\n  async _perAttributeValidators() {\n    // promisify all attribute invocations\n    const validators = [];\n\n    _.forIn(this.modelInstance.rawAttributes, (rawAttribute, field) => {\n      if (this.options.skip.includes(field)) {\n        return;\n      }\n\n      const value = this.modelInstance.dataValues[field];\n\n      if (value instanceof Utils.SequelizeMethod) {\n        return;\n      }\n\n      if (!rawAttribute._autoGenerated && !rawAttribute.autoIncrement) {\n        // perform validations based on schema\n        this._validateSchema(rawAttribute, field, value);\n      }\n\n      if (Object.prototype.hasOwnProperty.call(this.modelInstance.validators, field)) {\n        validators.push(this._singleAttrValidate(value, field, rawAttribute.allowNull));\n      }\n    });\n\n    return await Promise.all(validators);\n  }\n\n  /**\n   * Will run all the custom validators defined in the model's options.\n   *\n   * @returns {Promise<Array>}\n   * @private\n   */\n  async _customValidators() {\n    const validators = [];\n    _.each(this.modelInstance.constructor.options.validate, (validator, validatorType) => {\n      if (this.options.skip.includes(validatorType)) {\n        return;\n      }\n\n      const valprom = this._invokeCustomValidator(validator, validatorType)\n        // errors are handled in settling, stub this\n        .catch(() => {});\n\n      validators.push(valprom);\n    });\n\n    return await Promise.all(validators);\n  }\n\n  /**\n   * Validate a single attribute with all the defined built-in validators and custom validators.\n   *\n   * @private\n   *\n   * @param {*} value Anything.\n   * @param {string} field The field name.\n   * @param {boolean} allowNull Whether or not the schema allows null values\n   *\n   * @returns {Promise} A promise, will always resolve, auto populates error on this.error local object.\n   */\n  async _singleAttrValidate(value, field, allowNull) {\n    // If value is null and allowNull is false, no validators should run (see #9143)\n    if ((value === null || value === undefined) && !allowNull) {\n      // The schema validator (_validateSchema) has already generated the validation error. Nothing to do here.\n      return;\n    }\n\n    // Promisify each validator\n    const validators = [];\n    _.forIn(this.modelInstance.validators[field], (test, validatorType) => {\n\n      if (['isUrl', 'isURL', 'isEmail'].includes(validatorType)) {\n        // Preserve backwards compat. Validator.js now expects the second param to isURL and isEmail to be an object\n        if (typeof test === 'object' && test !== null && test.msg) {\n          test = {\n            msg: test.msg\n          };\n        } else if (test === true) {\n          test = {};\n        }\n      }\n\n      // Custom validators should always run, except if value is null and allowNull is false (see #9143)\n      if (typeof test === 'function') {\n        validators.push(this._invokeCustomValidator(test, validatorType, true, value, field));\n        return;\n      }\n\n      // If value is null, built-in validators should not run (only custom validators have to run) (see #9134).\n      if (value === null || value === undefined) {\n        return;\n      }\n\n      const validatorPromise = this._invokeBuiltinValidator(value, test, validatorType, field);\n      // errors are handled in settling, stub this\n      validatorPromise.catch(() => {});\n      validators.push(validatorPromise);\n    });\n\n    return Promise\n      .all(validators.map(validator => validator.catch(rejection => {\n        const isBuiltIn = !!rejection.validatorName;\n        this._pushError(isBuiltIn, field, rejection, value, rejection.validatorName, rejection.validatorArgs);\n      })));\n  }\n\n  /**\n   * Prepare and invoke a custom validator.\n   *\n   * @private\n   *\n   * @param {Function} validator The custom validator.\n   * @param {string} validatorType the custom validator type (name).\n   * @param {boolean} optAttrDefined Set to true if custom validator was defined from the attribute\n   * @param {*} optValue value for attribute\n   * @param {string} optField field for attribute\n   *\n   * @returns {Promise} A promise.\n   */\n  async _invokeCustomValidator(validator, validatorType, optAttrDefined, optValue, optField) {\n    let isAsync = false;\n\n    const validatorArity = validator.length;\n    // check if validator is async and requires a callback\n    let asyncArity = 1;\n    let errorKey = validatorType;\n    let invokeArgs;\n    if (optAttrDefined) {\n      asyncArity = 2;\n      invokeArgs = optValue;\n      errorKey = optField;\n    }\n    if (validatorArity === asyncArity) {\n      isAsync = true;\n    }\n\n    if (isAsync) {\n      try {\n        if (optAttrDefined) {\n          return await promisify(validator.bind(this.modelInstance, invokeArgs))();\n        }\n        return await promisify(validator.bind(this.modelInstance))();\n      } catch (e) {\n        return this._pushError(false, errorKey, e, optValue, validatorType);\n      }\n    }\n\n    try {\n      return await validator.call(this.modelInstance, invokeArgs);\n    } catch (e) {\n      return this._pushError(false, errorKey, e, optValue, validatorType);\n    }\n  }\n\n  /**\n   * Prepare and invoke a build-in validator.\n   *\n   * @private\n   *\n   * @param {*} value Anything.\n   * @param {*} test The test case.\n   * @param {string} validatorType One of known to Sequelize validators.\n   * @param {string} field The field that is being validated\n   *\n   * @returns {object} An object with specific keys to invoke the validator.\n   */\n  async _invokeBuiltinValidator(value, test, validatorType, field) {\n    // Cast value as string to pass new Validator.js string requirement\n    const valueString = String(value);\n    // check if Validator knows that kind of validation test\n    if (typeof validator[validatorType] !== 'function') {\n      throw new Error(`Invalid validator function: ${validatorType}`);\n    }\n\n    const validatorArgs = this._extractValidatorArgs(test, validatorType, field);\n\n    if (!validator[validatorType](valueString, ...validatorArgs)) {\n      throw Object.assign(new Error(test.msg || `Validation ${validatorType} on ${field} failed`), { validatorName: validatorType, validatorArgs });\n    }\n  }\n\n  /**\n   * Will extract arguments for the validator.\n   *\n   * @param {*} test The test case.\n   * @param {string} validatorType One of known to Sequelize validators.\n   * @param {string} field The field that is being validated.\n   *\n   * @private\n   */\n  _extractValidatorArgs(test, validatorType, field) {\n    let validatorArgs = test.args || test;\n    const isLocalizedValidator = typeof validatorArgs !== 'string' && ['isAlpha', 'isAlphanumeric', 'isMobilePhone'].includes(validatorType);\n\n    if (!Array.isArray(validatorArgs)) {\n      if (validatorType === 'isImmutable') {\n        validatorArgs = [validatorArgs, field, this.modelInstance];\n      } else if (isLocalizedValidator || validatorType === 'isIP') {\n        validatorArgs = [];\n      } else {\n        validatorArgs = [validatorArgs];\n      }\n    } else {\n      validatorArgs = validatorArgs.slice(0);\n    }\n    return validatorArgs;\n  }\n\n  /**\n   * Will validate a single field against its schema definition (isnull).\n   *\n   * @param {object} rawAttribute As defined in the Schema.\n   * @param {string} field The field name.\n   * @param {*} value anything.\n   *\n   * @private\n   */\n  _validateSchema(rawAttribute, field, value) {\n    if (rawAttribute.allowNull === false && (value === null || value === undefined)) {\n      const association = Object.values(this.modelInstance.constructor.associations).find(association => association instanceof BelongsTo && association.foreignKey === rawAttribute.fieldName);\n      if (!association || !this.modelInstance.get(association.associationAccessor)) {\n        const validators = this.modelInstance.validators[field];\n        const errMsg = _.get(validators, 'notNull.msg', `${this.modelInstance.constructor.name}.${field} cannot be null`);\n\n        this.errors.push(new sequelizeError.ValidationErrorItem(\n          errMsg,\n          'notNull Violation', // sequelizeError.ValidationErrorItem.Origins.CORE,\n          field,\n          value,\n          this.modelInstance,\n          'is_null'\n        ));\n      }\n    }\n\n    if (rawAttribute.type instanceof DataTypes.STRING || rawAttribute.type instanceof DataTypes.TEXT || rawAttribute.type instanceof DataTypes.CITEXT) {\n      if (Array.isArray(value) || _.isObject(value) && !(value instanceof Utils.SequelizeMethod) && !Buffer.isBuffer(value)) {\n        this.errors.push(new sequelizeError.ValidationErrorItem(\n          `${field} cannot be an array or an object`,\n          'string violation', // sequelizeError.ValidationErrorItem.Origins.CORE,\n          field,\n          value,\n          this.modelInstance,\n          'not_a_string'\n        ));\n      }\n    }\n  }\n\n  /**\n   * Signs all errors retaining the original.\n   *\n   * @param {boolean}       isBuiltin   - Determines if error is from builtin validator.\n   * @param {string}        errorKey    - name of invalid attribute.\n   * @param {Error|string}  rawError    - The original error.\n   * @param {string|number} value       - The data that triggered the error.\n   * @param {string}        fnName      - Name of the validator, if any\n   * @param {Array}         fnArgs      - Arguments for the validator [function], if any\n   *\n   * @private\n   */\n  _pushError(isBuiltin, errorKey, rawError, value, fnName, fnArgs) {\n    const message = rawError.message || rawError || 'Validation error';\n    const error = new sequelizeError.ValidationErrorItem(\n      message,\n      'Validation error', // sequelizeError.ValidationErrorItem.Origins.FUNCTION,\n      errorKey,\n      value,\n      this.modelInstance,\n      fnName,\n      isBuiltin ? fnName : undefined,\n      isBuiltin ? fnArgs : undefined\n    );\n\n    error[InstanceValidator.RAW_KEY_NAME] = rawError;\n\n    this.errors.push(error);\n  }\n}\n/**\n * The error key for arguments as passed by custom validators\n *\n * @type {string}\n * @private\n */\nInstanceValidator.RAW_KEY_NAME = 'original';\n\nmodule.exports = InstanceValidator;\nmodule.exports.InstanceValidator = InstanceValidator;\nmodule.exports.default = InstanceValidator;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/query-types.js":{"lineLengths":[13,37,19,19,19,27,27,19,19,21,27,29,23,13,29,36,2,39,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/query-types.js"],"sourcesContent":["'use strict';\n\n/**\n * An enum of query types used by `sequelize.query`\n *\n * @see {@link Sequelize#query}\n *\n * @property SELECT\n * @property INSERT\n * @property UPDATE\n * @property BULKUPDATE\n * @property BULKDELETE\n * @property DELETE\n * @property UPSERT\n * @property VERSION\n * @property SHOWTABLES\n * @property SHOWINDEXES\n * @property DESCRIBE\n * @property RAW\n * @property FOREIGNKEYS\n * @property SHOWCONSTRAINTS\n */\nconst QueryTypes = module.exports = { // eslint-disable-line\n  SELECT: 'SELECT',\n  INSERT: 'INSERT',\n  UPDATE: 'UPDATE',\n  BULKUPDATE: 'BULKUPDATE',\n  BULKDELETE: 'BULKDELETE',\n  DELETE: 'DELETE',\n  UPSERT: 'UPSERT',\n  VERSION: 'VERSION',\n  SHOWTABLES: 'SHOWTABLES',\n  SHOWINDEXES: 'SHOWINDEXES',\n  DESCRIBE: 'DESCRIBE',\n  RAW: 'RAW',\n  FOREIGNKEYS: 'FOREIGNKEYS',\n  SHOWCONSTRAINTS: 'SHOWCONSTRAINTS'\n};\n"],"mappings":";AAsBA,MAAM,aAAa,OAAO,UAAU;AAAA,EAClC,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,aAAa;AAAA,EACb,UAAU;AAAA,EACV,KAAK;AAAA,EACL,aAAa;AAAA,EACb,iBAAiB;AAAA;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/hooks.js":{"lineLengths":[13,28,45,43,19,32,31,34,30,29,31,30,31,30,30,29,71,68,30,29,34,33,35,34,35,34,34,33,28,49,40,27,29,57,56,55,54,45,44,46,45,49,48,50,49,28,27,32,31,29,27,2,26,126,37,54,1,15,22,28,50,37,34,69,7,4,38,15,63,17,36,23,39,27,65,7,5,32,22,5,58,31,39,25,9,48,35,7,13,5,29,37,23,7,40,39,5,4,31,37,16,18,5,37,41,32,41,43,39,7,16,4,30,66,34,18,5,39,41,34,76,56,31,9,55,36,9,20,9,5,16,4,21,81,3,2,31,43,25,46,45,15,5,45,48,6,3,1,26,33,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/hooks.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst { logger } = require('./utils/logger');\nconst debug = logger.debugContext('hooks');\n\nconst hookTypes = {\n  beforeValidate: { params: 2 },\n  afterValidate: { params: 2 },\n  validationFailed: { params: 3 },\n  beforeCreate: { params: 2 },\n  afterCreate: { params: 2 },\n  beforeDestroy: { params: 2 },\n  afterDestroy: { params: 2 },\n  beforeRestore: { params: 2 },\n  afterRestore: { params: 2 },\n  beforeUpdate: { params: 2 },\n  afterUpdate: { params: 2 },\n  beforeSave: { params: 2, proxies: ['beforeUpdate', 'beforeCreate'] },\n  afterSave: { params: 2, proxies: ['afterUpdate', 'afterCreate'] },\n  beforeUpsert: { params: 2 },\n  afterUpsert: { params: 2 },\n  beforeBulkCreate: { params: 2 },\n  afterBulkCreate: { params: 2 },\n  beforeBulkDestroy: { params: 1 },\n  afterBulkDestroy: { params: 1 },\n  beforeBulkRestore: { params: 1 },\n  afterBulkRestore: { params: 1 },\n  beforeBulkUpdate: { params: 1 },\n  afterBulkUpdate: { params: 1 },\n  beforeFind: { params: 1 },\n  beforeFindAfterExpandIncludeAll: { params: 1 },\n  beforeFindAfterOptions: { params: 1 },\n  afterFind: { params: 2 },\n  beforeCount: { params: 1 },\n  beforeDefine: { params: 2, sync: true, noModel: true },\n  afterDefine: { params: 1, sync: true, noModel: true },\n  beforeInit: { params: 2, sync: true, noModel: true },\n  afterInit: { params: 1, sync: true, noModel: true },\n  beforeAssociate: { params: 2, sync: true },\n  afterAssociate: { params: 2, sync: true },\n  beforeConnect: { params: 1, noModel: true },\n  afterConnect: { params: 2, noModel: true },\n  beforeDisconnect: { params: 1, noModel: true },\n  afterDisconnect: { params: 1, noModel: true },\n  beforePoolAcquire: { params: 1, noModel: true },\n  afterPoolAcquire: { params: 2, noModel: true },\n  beforeSync: { params: 1 },\n  afterSync: { params: 1 },\n  beforeBulkSync: { params: 1 },\n  afterBulkSync: { params: 1 },\n  beforeQuery: { params: 2 },\n  afterQuery: { params: 2 }\n};\nexports.hooks = hookTypes;\n\n\n/**\n * get array of current hook and its proxies combined\n *\n * @param {string} hookType any hook type @see {@link hookTypes}\n *\n * @private\n */\nconst getProxiedHooks = hookType =>\n  hookTypes[hookType].proxies\n    ? hookTypes[hookType].proxies.concat(hookType)\n    : [hookType]\n;\n\nfunction getHooks(hooked, hookType) {\n  return (hooked.options.hooks || {})[hookType] || [];\n}\n\nconst Hooks = {\n  /**\n   * Process user supplied hooks definition\n   *\n   * @param {object} hooks hooks definition\n   *\n   * @private\n   * @memberof Sequelize\n   * @memberof Sequelize.Model\n   */\n  _setupHooks(hooks) {\n    this.options.hooks = {};\n    _.map(hooks || {}, (hooksArray, hookName) => {\n      if (!Array.isArray(hooksArray)) hooksArray = [hooksArray];\n      hooksArray.forEach(hookFn => this.addHook(hookName, hookFn));\n    });\n  },\n\n  async runHooks(hooks, ...hookArgs) {\n    if (!hooks) throw new Error('runHooks requires at least 1 argument');\n\n    let hookType;\n\n    if (typeof hooks === 'string') {\n      hookType = hooks;\n      hooks = getHooks(this, hookType);\n\n      if (this.sequelize) {\n        hooks = hooks.concat(getHooks(this.sequelize, hookType));\n      }\n    }\n\n    if (!Array.isArray(hooks)) {\n      hooks = [hooks];\n    }\n\n    // synchronous hooks\n    if (hookTypes[hookType] && hookTypes[hookType].sync) {\n      for (let hook of hooks) {\n        if (typeof hook === 'object') {\n          hook = hook.fn;\n        }\n\n        debug(`running hook(sync) ${hookType}`);\n        hook.apply(this, hookArgs);\n      }\n      return;\n    }\n\n    // asynchronous hooks (default)\n    for (let hook of hooks) {\n      if (typeof hook === 'object') {\n        hook = hook.fn;\n      }\n\n      debug(`running hook ${hookType}`);\n      await hook.apply(this, hookArgs);\n    }\n  },\n\n  /**\n   * Add a hook to the model\n   *\n   * @param {string}          hookType hook name @see {@link hookTypes}\n   * @param {string|Function} [name] Provide a name for the hook function. It can be used to remove the hook later or to order hooks based on some sort of priority system in the future.\n   * @param {Function}        fn The hook function\n   *\n   * @memberof Sequelize\n   * @memberof Sequelize.Model\n   */\n  addHook(hookType, name, fn) {\n    if (typeof name === 'function') {\n      fn = name;\n      name = null;\n    }\n\n    debug(`adding hook ${hookType}`);\n    // check for proxies, add them too\n    hookType = getProxiedHooks(hookType);\n\n    hookType.forEach(type => {\n      const hooks = getHooks(this, type);\n      hooks.push(name ? { name, fn } : fn);\n      this.options.hooks[type] = hooks;\n    });\n\n    return this;\n  },\n\n  /**\n   * Remove hook from the model\n   *\n   * @param {string} hookType @see {@link hookTypes}\n   * @param {string|Function} name name of hook or function reference which was attached\n   *\n   * @memberof Sequelize\n   * @memberof Sequelize.Model\n   */\n  removeHook(hookType, name) {\n    const isReference = typeof name === 'function' ? true : false;\n\n    if (!this.hasHook(hookType)) {\n      return this;\n    }\n\n    debug(`removing hook ${hookType}`);\n\n    // check for proxies, add them too\n    hookType = getProxiedHooks(hookType);\n\n    for (const type of hookType) {\n      this.options.hooks[type] = this.options.hooks[type].filter(hook => {\n        if (isReference && typeof hook === 'function') {\n          return hook !== name; // check if same method\n        }\n        if (!isReference && typeof hook === 'object') {\n          return hook.name !== name;\n        }\n        return true;\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * Check whether the mode has any hooks of this type\n   *\n   * @param {string} hookType @see {@link hookTypes}\n   *\n   * @alias hasHooks\n   *\n   * @memberof Sequelize\n   * @memberof Sequelize.Model\n   */\n  hasHook(hookType) {\n    return this.options.hooks[hookType] && !!this.options.hooks[hookType].length;\n  }\n};\nHooks.hasHooks = Hooks.hasHook;\n\n\nfunction applyTo(target, isModel = false) {\n  _.mixin(target, Hooks);\n\n  for (const hook of Object.keys(hookTypes)) {\n    if (isModel && hookTypes[hook].noModel) {\n      continue;\n    }\n    target[hook] = function(name, callback) {\n      return this.addHook(hook, name, callback);\n    };\n  }\n}\nexports.applyTo = applyTo;\n\n/**\n * A hook that is run before validation\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance, options\n * @name beforeValidate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after validation\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance, options\n * @name afterValidate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run when validation fails\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance, options, error. Error is the\n * SequelizeValidationError. If the callback throws an error, it will replace the original validation error.\n * @name validationFailed\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before creating a single instance\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with attributes, options\n * @name beforeCreate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after creating a single instance\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with attributes, options\n * @name afterCreate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before creating or updating a single instance, It proxies `beforeCreate` and `beforeUpdate`\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with attributes, options\n * @name beforeSave\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before upserting\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with attributes, options\n * @name beforeUpsert\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after upserting\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with the result of upsert(), options\n * @name afterUpsert\n * @memberof Sequelize.Model\n */\n\n/**\n  * A hook that is run after creating or updating a single instance, It proxies `afterCreate` and `afterUpdate`\n *\n  * @param {string}   name\n  * @param {Function} fn   A callback function that is called with attributes, options\n  * @name afterSave\n  * @memberof Sequelize.Model\n  */\n\n/**\n * A hook that is run before destroying a single instance\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance, options\n *\n * @name beforeDestroy\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after destroying a single instance\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance, options\n *\n * @name afterDestroy\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before restoring a single instance\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance, options\n *\n * @name beforeRestore\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after restoring a single instance\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance, options\n *\n * @name afterRestore\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before updating a single instance\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance, options\n * @name beforeUpdate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after updating a single instance\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance, options\n * @name afterUpdate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before creating instances in bulk\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instances, options\n * @name beforeBulkCreate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after creating instances in bulk\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instances, options\n * @name afterBulkCreate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before destroying instances in bulk\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n *\n * @name beforeBulkDestroy\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after destroying instances in bulk\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n *\n * @name afterBulkDestroy\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before restoring instances in bulk\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n *\n * @name beforeBulkRestore\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after restoring instances in bulk\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n *\n * @name afterBulkRestore\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before updating instances in bulk\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n * @name beforeBulkUpdate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after updating instances in bulk\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n * @name afterBulkUpdate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before a find (select) query\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n * @name beforeFind\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before a find (select) query, after any { include: {all: ...} } options are expanded\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n * @name beforeFindAfterExpandIncludeAll\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before a find (select) query, after all option parsing is complete\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n * @name beforeFindAfterOptions\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after a find (select) query\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance(s), options\n * @name afterFind\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before a count query\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n * @name beforeCount\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before a define call\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with attributes, options\n * @name beforeDefine\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run after a define call\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with factory\n * @name afterDefine\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run before Sequelize() call\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with config, options\n * @name beforeInit\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run after Sequelize() call\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with sequelize\n * @name afterInit\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run before a connection is created\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with config passed to connection\n * @name beforeConnect\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run after a connection is created\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with the connection object and the config passed to connection\n * @name afterConnect\n * @memberof Sequelize\n */\n\n/**\n *  A hook that is run before a connection to the pool\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with config passed to connection\n * @name beforePoolAcquire\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run after a connection to the pool\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with the connection object and the config passed to connection\n * @name afterPoolAcquire\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run before a connection is disconnected\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with the connection object\n * @name beforeDisconnect\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run after a connection is disconnected\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with the connection object\n * @name afterDisconnect\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run before Model.sync call\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options passed to Model.sync\n * @name beforeSync\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run after Model.sync call\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options passed to Model.sync\n * @name afterSync\n * @memberof Sequelize\n */\n\n/**\n  * A hook that is run before sequelize.sync call\n *\n  * @param {string}   name\n  * @param {Function} fn   A callback function that is called with options passed to sequelize.sync\n  * @name beforeBulkSync\n  * @memberof Sequelize\n  */\n\n/**\n  * A hook that is run after sequelize.sync call\n *\n  * @param {string}   name\n  * @param {Function} fn   A callback function that is called with options passed to sequelize.sync\n  * @name afterBulkSync\n  * @memberof Sequelize\n  */\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/associations/mixin.js":{"lineLengths":[13,28,36,38,51,42,36,90,1,15,33,43,109,5,24,78,37,62,27,83,5,61,71,36,40,27,95,5,23,4,39,43,115,5,24,78,37,112,102,27,89,5,67,71,36,40,27,101,5,23,4,27,109,4,41,113,3,2,29,41,24,45,130,5,78,37,27,82,5,89,71,36,40,27,94,5,23,4,1,36,42,23,29,31,33,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/associations/mixin.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst HasOne = require('./has-one');\nconst HasMany = require('./has-many');\nconst BelongsToMany = require('./belongs-to-many');\nconst BelongsTo = require('./belongs-to');\n\nfunction isModel(model, sequelize) {\n  return model\n    && model.prototype\n    && model.prototype instanceof sequelize.Sequelize.Model;\n}\n\nconst Mixin = {\n  hasMany(target, options = {}) {\n    if (!isModel(target, this.sequelize)) {\n      throw new Error(`${this.name}.hasMany called with something that's not a subclass of Sequelize.Model`);\n    }\n\n    const source = this;\n\n    // Since this is a mixin, we'll need a unique letiable name for hooks (since Model will override our hooks option)\n    options.hooks = options.hooks === undefined ? false : Boolean(options.hooks);\n    options.useHooks = options.hooks;\n\n    Object.assign(options, _.omit(source.options, ['hooks']));\n\n    if (options.useHooks) {\n      this.runHooks('beforeAssociate', { source, target, type: HasMany }, options);\n    }\n\n    // the id is in the foreign table or in a connecting table\n    const association = new HasMany(source, target, options);\n    source.associations[association.associationAccessor] = association;\n\n    association._injectAttributes();\n    association.mixin(source.prototype);\n\n    if (options.useHooks) {\n      this.runHooks('afterAssociate', { source, target, type: HasMany, association }, options);\n    }\n\n    return association;\n  },\n\n  belongsToMany(target, options = {}) {\n    if (!isModel(target, this.sequelize)) {\n      throw new Error(`${this.name}.belongsToMany called with something that's not a subclass of Sequelize.Model`);\n    }\n\n    const source = this;\n\n    // Since this is a mixin, we'll need a unique letiable name for hooks (since Model will override our hooks option)\n    options.hooks = options.hooks === undefined ? false : Boolean(options.hooks);\n    options.useHooks = options.hooks;\n    options.timestamps = options.timestamps === undefined ? this.sequelize.options.timestamps : options.timestamps;\n    Object.assign(options, _.omit(source.options, ['hooks', 'timestamps', 'scopes', 'defaultScope']));\n\n    if (options.useHooks) {\n      this.runHooks('beforeAssociate', { source, target, type: BelongsToMany }, options);\n    }\n    // the id is in the foreign table or in a connecting table\n    const association = new BelongsToMany(source, target, options);\n    source.associations[association.associationAccessor] = association;\n\n    association._injectAttributes();\n    association.mixin(source.prototype);\n\n    if (options.useHooks) {\n      this.runHooks('afterAssociate', { source, target, type: BelongsToMany, association }, options);\n    }\n\n    return association;\n  },\n\n  getAssociations(target) {\n    return Object.values(this.associations).filter(association => association.target.name === target.name);\n  },\n\n  getAssociationForAlias(target, alias) {\n    // Two associations cannot have the same alias, so we can use find instead of filter\n    return this.getAssociations(target).find(association => association.verifyAssociationAlias(alias)) || null;\n  }\n};\n\n// The logic for hasOne and belongsTo is exactly the same\nfunction singleLinked(Type) {\n  return function(target, options = {}) {\n    // eslint-disable-next-line no-invalid-this\n    const source = this;\n    if (!isModel(target, source.sequelize)) {\n      throw new Error(`${source.name}.${_.lowerFirst(Type.name)} called with something that's not a subclass of Sequelize.Model`);\n    }\n\n\n    // Since this is a mixin, we'll need a unique letiable name for hooks (since Model will override our hooks option)\n    options.hooks = options.hooks === undefined ? false : Boolean(options.hooks);\n    options.useHooks = options.hooks;\n\n    if (options.useHooks) {\n      source.runHooks('beforeAssociate', { source, target, type: Type }, options);\n    }\n    // the id is in the foreign table\n    const association = new Type(source, target, Object.assign(options, source.options));\n    source.associations[association.associationAccessor] = association;\n\n    association._injectAttributes();\n    association.mixin(source.prototype);\n\n    if (options.useHooks) {\n      source.runHooks('afterAssociate', { source, target, type: Type, association }, options);\n    }\n\n    return association;\n  };\n}\n\nMixin.hasOne = singleLinked(HasOne);\nMixin.belongsTo = singleLinked(BelongsTo);\n\nmodule.exports = Mixin;\nmodule.exports.Mixin = Mixin;\nmodule.exports.default = Mixin;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/utils/deprecations.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,53,49,45,37,44,3,46,20,2,153,246,186,171,238,40,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/utils/deprecations.ts"],"sourcesContent":["import { deprecate } from 'util';\n\nconst noop = () => { /* noop */ };\n\nexport const noTrueLogging = deprecate(noop, 'The logging-option should be either a function or false. Default: console.log', 'SEQUELIZE0002');\nexport const noStringOperators = deprecate(noop, 'String based operators are deprecated. Please use Symbol based operators for better security, read more at https://sequelize.org/master/manual/querying.html#operators', 'SEQUELIZE0003');\nexport const noBoolOperatorAliases = deprecate(noop, 'A boolean value was passed to options.operatorsAliases. This is a no-op with v5 and should be removed.', 'SEQUELIZE0004');\nexport const noDoubleNestedGroup = deprecate(noop, 'Passing a double nested nested array to `group` is unsupported and will be removed in v6.', 'SEQUELIZE0005');\nexport const unsupportedEngine = deprecate(noop, 'This database engine version is not supported, please update your database server. More information https://github.com/sequelize/sequelize/blob/main/ENGINE.md', 'SEQUELIZE0006');\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA0B;AAE1B,MAAM,OAAO,MAAM;AAAA;AAEZ,MAAM,gBAAgB,2BAAU,MAAM,iFAAiF;AACvH,MAAM,oBAAoB,2BAAU,MAAM,0KAA0K;AACpN,MAAM,wBAAwB,2BAAU,MAAM,0GAA0G;AACxJ,MAAM,sBAAsB,2BAAU,MAAM,6FAA6F;AACzI,MAAM,oBAAoB,2BAAU,MAAM,kKAAkK;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/deferrable.js":{"lineLengths":[13,48,16,28,40,3,21,31,3,11,52,3,1,43,11,43,3,1,44,11,44,3,1,28,11,28,3,1,37,28,12,35,3,25,61,3,1,38,28,12,35,3,25,62,3,1,20,59,61,29,47,48,2,28,38,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/deferrable.js"],"sourcesContent":["'use strict';\n\nconst { classToInvokable } = require('./utils');\n\nclass ABSTRACT {\n  static toString(...args) {\n    return new this().toString(...args);\n  }\n\n  toString(...args) {\n    return this.toSql(...args);\n  }\n\n  toSql() {\n    throw new Error('toSql implementation missing');\n  }\n}\n\nclass INITIALLY_DEFERRED extends ABSTRACT {\n  toSql() {\n    return 'DEFERRABLE INITIALLY DEFERRED';\n  }\n}\n\nclass INITIALLY_IMMEDIATE extends ABSTRACT {\n  toSql() {\n    return 'DEFERRABLE INITIALLY IMMEDIATE';\n  }\n}\n\nclass NOT extends ABSTRACT {\n  toSql() {\n    return 'NOT DEFERRABLE';\n  }\n}\n\nclass SET_DEFERRED extends ABSTRACT {\n  constructor(constraints) {\n    super();\n    this.constraints = constraints;\n  }\n\n  toSql(queryGenerator) {\n    return queryGenerator.setDeferredQuery(this.constraints);\n  }\n}\n\nclass SET_IMMEDIATE extends ABSTRACT {\n  constructor(constraints) {\n    super();\n    this.constraints = constraints;\n  }\n\n  toSql(queryGenerator) {\n    return queryGenerator.setImmediateQuery(this.constraints);\n  }\n}\n\n/**\n * A collection of properties related to deferrable constraints. It can be used to\n * make foreign key constraints deferrable and to set the constraints within a\n * transaction. This is only supported in PostgreSQL.\n *\n * The foreign keys can be configured like this. It will create a foreign key\n * that will check the constraints immediately when the data was inserted.\n *\n * ```js\n * sequelize.define('Model', {\n *   foreign_id: {\n *     type: Sequelize.INTEGER,\n *     references: {\n *       model: OtherModel,\n *       key: 'id',\n *       deferrable: Sequelize.Deferrable.INITIALLY_IMMEDIATE\n *     }\n *   }\n * });\n * ```\n *\n * The constraints can be configured in a transaction like this. It will\n * trigger a query once the transaction has been started and set the constraints\n * to be checked at the very end of the transaction.\n *\n * ```js\n * sequelize.transaction({\n *   deferrable: Sequelize.Deferrable.SET_DEFERRED\n * });\n * ```\n *\n * @property INITIALLY_DEFERRED    Use when declaring a constraint. Allow and enable by default this constraint's checks to be deferred at the end of transactions.\n * @property INITIALLY_IMMEDIATE   Use when declaring a constraint. Allow the constraint's checks to be deferred at the end of transactions.\n * @property NOT                   Use when declaring a constraint. Set the constraint to not deferred. This is the default in PostgreSQL and makes it impossible to dynamically defer the constraints within a transaction.\n * @property SET_DEFERRED          Use when declaring a transaction. Defer the deferrable checks involved in this transaction at commit.\n * @property SET_IMMEDIATE         Use when declaring a transaction. Execute the deferrable checks involved in this transaction immediately.\n */\n\nconst Deferrable = {\n  INITIALLY_DEFERRED: classToInvokable(INITIALLY_DEFERRED),\n  INITIALLY_IMMEDIATE: classToInvokable(INITIALLY_IMMEDIATE),\n  NOT: classToInvokable(NOT),\n  SET_DEFERRED: classToInvokable(SET_DEFERRED),\n  SET_IMMEDIATE: classToInvokable(SET_IMMEDIATE)\n};\n\nmodule.exports = Deferrable;\n"],"mappings":";AAEA,MAAM,EAAE,qBAAqB,QAAQ;AAErC,eAAe;AAAA,SACN,YAAY,MAAM;AACvB,WAAO,IAAI,OAAO,SAAS,GAAG;AAAA;AAAA,EAGhC,YAAY,MAAM;AAChB,WAAO,KAAK,MAAM,GAAG;AAAA;AAAA,EAGvB,QAAQ;AACN,UAAM,IAAI,MAAM;AAAA;AAAA;AAIpB,iCAAiC,SAAS;AAAA,EACxC,QAAQ;AACN,WAAO;AAAA;AAAA;AAIX,kCAAkC,SAAS;AAAA,EACzC,QAAQ;AACN,WAAO;AAAA;AAAA;AAIX,kBAAkB,SAAS;AAAA,EACzB,QAAQ;AACN,WAAO;AAAA;AAAA;AAIX,2BAA2B,SAAS;AAAA,EAClC,YAAY,aAAa;AACvB;AACA,SAAK,cAAc;AAAA;AAAA,EAGrB,MAAM,gBAAgB;AACpB,WAAO,eAAe,iBAAiB,KAAK;AAAA;AAAA;AAIhD,4BAA4B,SAAS;AAAA,EACnC,YAAY,aAAa;AACvB;AACA,SAAK,cAAc;AAAA;AAAA,EAGrB,MAAM,gBAAgB;AACpB,WAAO,eAAe,kBAAkB,KAAK;AAAA;AAAA;AA0CjD,MAAM,aAAa;AAAA,EACjB,oBAAoB,iBAAiB;AAAA,EACrC,qBAAqB,iBAAiB;AAAA,EACtC,KAAK,iBAAiB;AAAA,EACtB,cAAc,iBAAiB;AAAA,EAC/B,eAAe,iBAAiB;AAAA;AAGlC,OAAO,UAAU;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/model-manager.js":{"lineLengths":[13,43,28,20,26,21,31,3,19,28,46,17,3,30,83,53,3,30,41,23,7,77,3,23,38,3,13,23,3,37,45,34,38,20,43,34,65,7,35,51,82,58,37,49,34,53,13,27,11,9,7,53,34,5,15,9,29,17,62,16,7,18,5,38,35,23,3,35,64,31,50,5,41,19,7,26,29,5,39,22,5,3,1,30,43,38,41,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/model-manager.js"],"sourcesContent":["'use strict';\n\nconst Toposort = require('toposort-class');\nconst _ = require('lodash');\n\nclass ModelManager {\n  constructor(sequelize) {\n    this.models = [];\n    this.sequelize = sequelize;\n  }\n\n  addModel(model) {\n    this.models.push(model);\n    this.sequelize.models[model.name] = model;\n\n    return model;\n  }\n\n  removeModel(modelToRemove) {\n    this.models = this.models.filter(model => model.name !== modelToRemove.name);\n\n    delete this.sequelize.models[modelToRemove.name];\n  }\n\n  getModel(against, options) {\n    options = _.defaults(options || {}, {\n      attribute: 'name'\n    });\n\n    return this.models.find(model => model[options.attribute] === against);\n  }\n\n  findModel(callback) {\n    return this.models.find(callback);\n  }\n\n  get all() {\n    return this.models;\n  }\n\n  /**\n   * Returns an array that lists every model, sorted in order\n   * of foreign key references: The first model is a model that is depended upon,\n   * the last model is a model that is not depended upon.\n   *\n   * If there is a cyclic dependency, this returns null.\n   */\n  getModelsTopoSortedByForeignKey() {\n    const models = new Map();\n    const sorter = new Toposort();\n\n    for (const model of this.models) {\n      let deps = [];\n      let tableName = model.getTableName();\n\n      if (_.isObject(tableName)) {\n        tableName = `${tableName.schema}.${tableName.tableName}`;\n      }\n\n      models.set(tableName, model);\n\n      for (const attrName in model.rawAttributes) {\n        if (Object.prototype.hasOwnProperty.call(model.rawAttributes, attrName)) {\n          const attribute = model.rawAttributes[attrName];\n\n          if (attribute.references) {\n            let dep = attribute.references.model;\n\n            if (_.isObject(dep)) {\n              dep = `${dep.schema}.${dep.tableName}`;\n            }\n\n            deps.push(dep);\n          }\n        }\n      }\n\n      deps = deps.filter(dep => tableName !== dep);\n\n      sorter.add(tableName, deps);\n    }\n\n    let sorted;\n    try {\n      sorted = sorter.sort();\n    } catch (e) {\n      if (!e.message.startsWith('Cyclic dependency found.')) {\n        throw e;\n      }\n\n      return null;\n    }\n\n    return sorted\n      .map(modelName => {\n        return models.get(modelName);\n      })\n      .filter(Boolean);\n  }\n\n  /**\n   * Iterate over Models in an order suitable for e.g. creating tables.\n   * Will take foreign key constraints into account so that dependencies are visited before dependents.\n   *\n   * @param {Function} iterator method to execute on each model\n   * @param {object} options\n   * @private\n   *\n   * @deprecated\n   */\n  forEachModel(iterator, options) {\n    const sortedModels = this.getModelsTopoSortedByForeignKey();\n    if (sortedModels == null) {\n      throw new Error('Cyclic dependency found.');\n    }\n\n    options = _.defaults(options || {}, {\n      reverse: true\n    });\n\n    if (options.reverse) {\n      sortedModels.reverse();\n    }\n\n    for (const model of sortedModels) {\n      iterator(model);\n    }\n  }\n}\n\nmodule.exports = ModelManager;\nmodule.exports.ModelManager = ModelManager;\nmodule.exports.default = ModelManager;\n"],"mappings":";AAEA,MAAM,WAAW,QAAQ;AACzB,MAAM,IAAI,QAAQ;AAElB,mBAAmB;AAAA,EACjB,YAAY,WAAW;AACrB,SAAK,SAAS;AACd,SAAK,YAAY;AAAA;AAAA,EAGnB,SAAS,OAAO;AACd,SAAK,OAAO,KAAK;AACjB,SAAK,UAAU,OAAO,MAAM,QAAQ;AAEpC,WAAO;AAAA;AAAA,EAGT,YAAY,eAAe;AACzB,SAAK,SAAS,KAAK,OAAO,OAAO,WAAS,MAAM,SAAS,cAAc;AAEvE,WAAO,KAAK,UAAU,OAAO,cAAc;AAAA;AAAA,EAG7C,SAAS,SAAS,SAAS;AACzB,cAAU,EAAE,SAAS,WAAW,IAAI;AAAA,MAClC,WAAW;AAAA;AAGb,WAAO,KAAK,OAAO,KAAK,WAAS,MAAM,QAAQ,eAAe;AAAA;AAAA,EAGhE,UAAU,UAAU;AAClB,WAAO,KAAK,OAAO,KAAK;AAAA;AAAA,MAGtB,MAAM;AACR,WAAO,KAAK;AAAA;AAAA,EAUd,kCAAkC;AAChC,UAAM,SAAS,oBAAI;AACnB,UAAM,SAAS,IAAI;AAEnB,eAAW,SAAS,KAAK,QAAQ;AAC/B,UAAI,OAAO;AACX,UAAI,YAAY,MAAM;AAEtB,UAAI,EAAE,SAAS,YAAY;AACzB,oBAAY,GAAG,UAAU,UAAU,UAAU;AAAA;AAG/C,aAAO,IAAI,WAAW;AAEtB,iBAAW,YAAY,MAAM,eAAe;AAC1C,YAAI,OAAO,UAAU,eAAe,KAAK,MAAM,eAAe,WAAW;AACvE,gBAAM,YAAY,MAAM,cAAc;AAEtC,cAAI,UAAU,YAAY;AACxB,gBAAI,MAAM,UAAU,WAAW;AAE/B,gBAAI,EAAE,SAAS,MAAM;AACnB,oBAAM,GAAG,IAAI,UAAU,IAAI;AAAA;AAG7B,iBAAK,KAAK;AAAA;AAAA;AAAA;AAKhB,aAAO,KAAK,OAAO,SAAO,cAAc;AAExC,aAAO,IAAI,WAAW;AAAA;AAGxB,QAAI;AACJ,QAAI;AACF,eAAS,OAAO;AAAA,aACT,GAAP;AACA,UAAI,CAAC,EAAE,QAAQ,WAAW,6BAA6B;AACrD,cAAM;AAAA;AAGR,aAAO;AAAA;AAGT,WAAO,OACJ,IAAI,eAAa;AAChB,aAAO,OAAO,IAAI;AAAA,OAEnB,OAAO;AAAA;AAAA,EAaZ,aAAa,UAAU,SAAS;AAC9B,UAAM,eAAe,KAAK;AAC1B,QAAI,gBAAgB,MAAM;AACxB,YAAM,IAAI,MAAM;AAAA;AAGlB,cAAU,EAAE,SAAS,WAAW,IAAI;AAAA,MAClC,SAAS;AAAA;AAGX,QAAI,QAAQ,SAAS;AACnB,mBAAa;AAAA;AAGf,eAAW,SAAS,cAAc;AAChC,eAAS;AAAA;AAAA;AAAA;AAKf,OAAO,UAAU;AACjB,OAAO,QAAQ,eAAe;AAC9B,OAAO,QAAQ,UAAU;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/transaction.js":{"lineLengths":[13,38,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,19,35,31,25,32,94,35,46,55,21,16,43,22,31,40,67,12,52,5,36,3,18,24,115,5,9,85,21,17,173,32,14,15,31,50,39,7,5,3,20,24,117,5,27,84,5,9,87,21,17,175,32,14,5,3,43,26,22,66,12,47,34,39,7,89,5,15,47,33,35,9,25,42,24,11,39,17,23,7,5,52,63,5,18,3,25,34,91,5,3,17,62,81,64,95,5,92,63,3,13,57,13,5,21,72,34,3,24,57,13,5,21,78,34,3,15,48,14,44,37,7,5,3,19,42,49,5,36,3,22,12,27,29,28,6,3,33,12,43,39,41,34,6,3,21,12,23,21,29,36,6,3,14,28,3,1,29,41,37,39,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/transaction.js"],"sourcesContent":["'use strict';\n\n/**\n * The transaction object is used to identify a running transaction.\n * It is created by calling `Sequelize.transaction()`.\n * To run a query under a transaction, you should pass the transaction in the options object.\n *\n * @class Transaction\n * @see {@link Sequelize.transaction}\n */\nclass Transaction {\n  /**\n   * Creates a new transaction instance\n   *\n   * @param {Sequelize} sequelize A configured sequelize Instance\n   * @param {object} options An object with options\n   * @param {string} [options.type] Sets the type of the transaction. Sqlite only\n   * @param {string} [options.isolationLevel] Sets the isolation level of the transaction.\n   * @param {string} [options.deferrable] Sets the constraints to be deferred or immediately checked. PostgreSQL only\n   * @param {boolean} [options.readOnly] Whether this transaction will only be used to read data. Used to determine whether sequelize is allowed to use a read replication server.\n   */\n  constructor(sequelize, options) {\n    this.sequelize = sequelize;\n    this.savepoints = [];\n    this._afterCommitHooks = [];\n\n    // get dialect specific transaction options\n    const generateTransactionId = this.sequelize.dialect.queryGenerator.generateTransactionId;\n\n    this.options = {\n      type: sequelize.options.transactionType,\n      isolationLevel: sequelize.options.isolationLevel,\n      readOnly: false,\n      ...options\n    };\n\n    this.parent = this.options.transaction;\n\n    if (this.parent) {\n      this.id = this.parent.id;\n      this.parent.savepoints.push(this);\n      this.name = `${this.id}-sp-${this.parent.savepoints.length}`;\n    } else {\n      this.id = this.name = generateTransactionId();\n    }\n\n    delete this.options.transaction;\n  }\n\n  /**\n   * Commit the transaction\n   *\n   * @returns {Promise}\n   */\n  async commit() {\n    if (this.finished) {\n      throw new Error(`Transaction cannot be committed because it has been finished with state: ${this.finished}`);\n    }\n\n    try {\n      await this.sequelize.getQueryInterface().commitTransaction(this, this.options);\n      this.cleanup();\n    } catch (e) {\n      console.warn(`Committing transaction ${this.id} failed with error ${JSON.stringify(e.message)}. We are killing its connection as it is now in an undetermined state.`);\n      await this.forceCleanup();\n\n      throw e;\n    } finally {\n      this.finished = 'commit';\n      for (const hook of this._afterCommitHooks) {\n        await hook.apply(this, [this]);\n      }\n    }\n  }\n\n  /**\n   * Rollback (abort) the transaction\n   *\n   * @returns {Promise}\n   */\n  async rollback() {\n    if (this.finished) {\n      throw new Error(`Transaction cannot be rolled back because it has been finished with state: ${this.finished}`);\n    }\n\n    if (!this.connection) {\n      throw new Error('Transaction cannot be rolled back because it never started');\n    }\n\n    try {\n      await this\n        .sequelize\n        .getQueryInterface()\n        .rollbackTransaction(this, this.options);\n\n      this.cleanup();\n    } catch (e) {\n      console.warn(`Rolling back transaction ${this.id} failed with error ${JSON.stringify(e.message)}. We are killing its connection as it is now in an undetermined state.`);\n      await this.forceCleanup();\n\n      throw e;\n    }\n  }\n\n  /**\n   * Called to acquire a connection to use and set the correct options on the connection.\n   * We should ensure all of the environment that's set up is cleaned up in `cleanup()` below.\n   *\n   * @param {boolean} useCLS Defaults to true: Use CLS (Continuation Local Storage) with Sequelize. With CLS, all queries within the transaction callback will automatically receive the transaction object.\n   * @returns {Promise}\n   */\n  async prepareEnvironment(useCLS = true) {\n    let connectionPromise;\n\n    if (this.parent) {\n      connectionPromise = Promise.resolve(this.parent.connection);\n    } else {\n      const acquireOptions = { uuid: this.id };\n      if (this.options.readOnly) {\n        acquireOptions.type = 'SELECT';\n      }\n      connectionPromise = this.sequelize.connectionManager.getConnection(acquireOptions);\n    }\n\n    let result;\n    const connection = await connectionPromise;\n    this.connection = connection;\n    this.connection.uuid = this.id;\n\n    try {\n      await this.begin();\n      result = await this.setDeferrable();\n    } catch (setupErr) {\n      try {\n        result = await this.rollback();\n      } finally {\n        throw setupErr; // eslint-disable-line no-unsafe-finally\n      }\n    }\n\n    // TODO (@ephys) [>=7.0.0]: move this inside of sequelize.transaction, remove parameter.\n    if (useCLS && this.sequelize.constructor._cls) {\n      this.sequelize.constructor._cls.set('transaction', this);\n    }\n\n    return result;\n  }\n\n  async setDeferrable() {\n    if (this.options.deferrable) {\n      return await this\n        .sequelize\n        .getQueryInterface()\n        .deferConstraints(this, this.options);\n    }\n  }\n\n  async begin() {\n    const queryInterface = this.sequelize.getQueryInterface();\n\n    if ( this.sequelize.dialect.supports.settingIsolationLevelDuringTransaction ) {\n      await queryInterface.startTransaction(this, this.options);\n      return queryInterface.setIsolationLevel(this, this.options.isolationLevel, this.options);\n    }\n\n    await queryInterface.setIsolationLevel(this, this.options.isolationLevel, this.options);\n\n    return queryInterface.startTransaction(this, this.options);\n  }\n\n  cleanup() {\n    // Don't release the connection if there's a parent transaction or\n    // if we've already cleaned up\n    if (this.parent || this.connection.uuid === undefined) {\n      return;\n    }\n\n    this._clearCls();\n    this.sequelize.connectionManager.releaseConnection(this.connection);\n    this.connection.uuid = undefined;\n  }\n\n  /**\n   * Kills the connection this transaction uses.\n   * Used as a last resort, for instance because COMMIT or ROLLBACK resulted in an error\n   * and the transaction is left in a broken state,\n   * and releasing the connection to the pool would be dangerous.\n   */\n  async forceCleanup() {\n    // Don't release the connection if there's a parent transaction or\n    // if we've already cleaned up\n    if (this.parent || this.connection.uuid === undefined) {\n      return;\n    }\n\n    this._clearCls();\n    await this.sequelize.connectionManager.destroyConnection(this.connection);\n    this.connection.uuid = undefined;\n  }\n\n  _clearCls() {\n    const cls = this.sequelize.constructor._cls;\n\n    if (cls) {\n      if (cls.get('transaction') === this) {\n        cls.set('transaction', null);\n      }\n    }\n  }\n\n  /**\n   * A hook that is run after a transaction is committed\n   *\n   * @param {Function} fn   A callback function that is called with the committed transaction\n   * @name afterCommit\n   * @memberof Sequelize.Transaction\n   */\n  afterCommit(fn) {\n    if (!fn || typeof fn !== 'function') {\n      throw new Error('\"fn\" must be a function');\n    }\n    this._afterCommitHooks.push(fn);\n  }\n\n  /**\n   * Types can be set per-transaction by passing `options.type` to `sequelize.transaction`.\n   * Default to `DEFERRED` but you can override the default type by passing `options.transactionType` in `new Sequelize`.\n   * Sqlite only.\n   *\n   * Pass in the desired level as the first argument:\n   *\n   * @example\n   * try {\n   *   await sequelize.transaction({ type: Sequelize.Transaction.TYPES.EXCLUSIVE }, transaction => {\n   *      // your transactions\n   *   });\n   *   // transaction has been committed. Do something after the commit if required.\n   * } catch(err) {\n   *   // do something with the err.\n   * }\n   *\n   * @property DEFERRED\n   * @property IMMEDIATE\n   * @property EXCLUSIVE\n   */\n  static get TYPES() {\n    return {\n      DEFERRED: 'DEFERRED',\n      IMMEDIATE: 'IMMEDIATE',\n      EXCLUSIVE: 'EXCLUSIVE'\n    };\n  }\n\n  /**\n   * Isolation levels can be set per-transaction by passing `options.isolationLevel` to `sequelize.transaction`.\n   * Sequelize uses the default isolation level of the database, you can override this by passing `options.isolationLevel` in Sequelize constructor options.\n   *\n   * Pass in the desired level as the first argument:\n   *\n   * @example\n   * try {\n   *   const result = await sequelize.transaction({isolationLevel: Sequelize.Transaction.ISOLATION_LEVELS.SERIALIZABLE}, transaction => {\n   *     // your transactions\n   *   });\n   *   // transaction has been committed. Do something after the commit if required.\n   * } catch(err) {\n   *   // do something with the err.\n   * }\n   *\n   * @property READ_UNCOMMITTED\n   * @property READ_COMMITTED\n   * @property REPEATABLE_READ\n   * @property SERIALIZABLE\n   */\n  static get ISOLATION_LEVELS() {\n    return {\n      READ_UNCOMMITTED: 'READ UNCOMMITTED',\n      READ_COMMITTED: 'READ COMMITTED',\n      REPEATABLE_READ: 'REPEATABLE READ',\n      SERIALIZABLE: 'SERIALIZABLE'\n    };\n  }\n\n\n  /**\n   * Possible options for row locking. Used in conjunction with `find` calls:\n   *\n   * @example\n   * // t1 is a transaction\n   * Model.findAll({\n   *   where: ...,\n   *   transaction: t1,\n   *   lock: t1.LOCK...\n   * });\n   *\n   * @example <caption>Postgres also supports specific locks while eager loading by using OF:</caption>\n   * UserModel.findAll({\n   *   where: ...,\n   *   include: [TaskModel, ...],\n   *   transaction: t1,\n   *   lock: {\n   *     level: t1.LOCK...,\n   *     of: UserModel\n   *   }\n   * });\n   *\n   * # UserModel will be locked but TaskModel won't!\n   *\n   * @example <caption>You can also skip locked rows:</caption>\n   * // t1 is a transaction\n   * Model.findAll({\n   *   where: ...,\n   *   transaction: t1,\n   *   lock: true,\n   *   skipLocked: true\n   * });\n   * # The query will now return any rows that aren't locked by another transaction\n   *\n   * @returns {object}\n   * @property UPDATE\n   * @property SHARE\n   * @property KEY_SHARE Postgres 9.3+ only\n   * @property NO_KEY_UPDATE Postgres 9.3+ only\n   */\n  static get LOCK() {\n    return {\n      UPDATE: 'UPDATE',\n      SHARE: 'SHARE',\n      KEY_SHARE: 'KEY SHARE',\n      NO_KEY_UPDATE: 'NO KEY UPDATE'\n    };\n  }\n\n  /**\n   * Please see {@link Transaction.LOCK}\n   */\n  get LOCK() {\n    return Transaction.LOCK;\n  }\n}\n\nmodule.exports = Transaction;\nmodule.exports.Transaction = Transaction;\nmodule.exports.default = Transaction;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/table-hints.js":{"lineLengths":[13,37,19,37,21,35,31,33,21,23,21,21,19,23,17,23,22,2,39,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/table-hints.js"],"sourcesContent":["'use strict';\n\n/**\n * An enum of table hints to be used in mssql for querying with table hints\n *\n * @property NOLOCK\n * @property READUNCOMMITTED\n * @property UPDLOCK\n * @property REPEATABLEREAD\n * @property SERIALIZABLE\n * @property READCOMMITTED\n * @property TABLOCK\n * @property TABLOCKX\n * @property PAGLOCK\n * @property ROWLOCK\n * @property NOWAIT\n * @property READPAST\n * @property XLOCK\n * @property SNAPSHOT\n * @property NOEXPAND\n */\nconst TableHints = module.exports = { // eslint-disable-line\n  NOLOCK: 'NOLOCK',\n  READUNCOMMITTED: 'READUNCOMMITTED',\n  UPDLOCK: 'UPDLOCK',\n  REPEATABLEREAD: 'REPEATABLEREAD',\n  SERIALIZABLE: 'SERIALIZABLE',\n  READCOMMITTED: 'READCOMMITTED',\n  TABLOCK: 'TABLOCK',\n  TABLOCKX: 'TABLOCKX',\n  PAGLOCK: 'PAGLOCK',\n  ROWLOCK: 'ROWLOCK',\n  NOWAIT: 'NOWAIT',\n  READPAST: 'READPAST',\n  XLOCK: 'XLOCK',\n  SNAPSHOT: 'SNAPSHOT',\n  NOEXPAND: 'NOEXPAND'\n};\n"],"mappings":";AAqBA,MAAM,aAAa,OAAO,UAAU;AAAA,EAClC,QAAQ;AAAA,EACR,iBAAiB;AAAA,EACjB,SAAS;AAAA,EACT,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,eAAe;AAAA,EACf,SAAS;AAAA,EACT,UAAU;AAAA,EACV,SAAS;AAAA,EACT,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,OAAO;AAAA,EACP,UAAU;AAAA,EACV,UAAU;AAAA;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/index-hints.js":{"lineLengths":[13,37,13,17,18,2,39,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/index-hints.js"],"sourcesContent":["'use strict';\n\n/**\n * An enum of index hints to be used in mysql for querying with index hints\n *\n * @property USE\n * @property FORCE\n * @property IGNORE\n */\nconst IndexHints = module.exports = { // eslint-disable-line\n  USE: 'USE',\n  FORCE: 'FORCE',\n  IGNORE: 'IGNORE'\n};\n"],"mappings":";AASA,MAAM,aAAa,OAAO,UAAU;AAAA,EAClC,KAAK;AAAA,EACL,OAAO;AAAA,EACP,QAAQ;AAAA;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/associations/index.js":{"lineLengths":[13,38,48,42,44,57,29,37,41,33,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/associations/index.js"],"sourcesContent":["'use strict';\n\nconst Association = require('./base');\n\nAssociation.BelongsTo = require('./belongs-to');\nAssociation.HasOne = require('./has-one');\nAssociation.HasMany = require('./has-many');\nAssociation.BelongsToMany = require('./belongs-to-many');\n\nmodule.exports = Association;\nmodule.exports.default = Association;\nmodule.exports.Association = Association;\n"],"mappings":";AAEA,MAAM,cAAc,QAAQ;AAE5B,YAAY,YAAY,QAAQ;AAChC,YAAY,SAAS,QAAQ;AAC7B,YAAY,UAAU,QAAQ;AAC9B,YAAY,gBAAgB,QAAQ;AAEpC,OAAO,UAAU;AACjB,OAAO,QAAQ,UAAU;AACzB,OAAO,QAAQ,cAAc;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/abstract/query-interface.js":{"lineLengths":[13,38,41,57,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,66,28,37,46,49,48,22,42,31,41,3,43,28,75,52,3,41,28,64,52,3,39,28,57,52,3,37,28,55,52,3,33,28,57,42,5,55,90,3,33,58,16,44,7,73,76,96,3,34,148,3,60,17,42,40,51,47,39,9,9,5,16,66,5,102,66,76,49,18,59,9,5,66,23,29,72,7,79,52,3,41,64,92,33,8,28,3,39,42,64,71,45,3,51,41,61,103,7,5,3,32,28,36,57,80,41,42,34,75,7,66,99,7,5,57,3,45,28,68,52,3,32,58,16,33,7,94,74,33,3,43,22,31,38,23,65,38,56,5,62,32,38,5,91,88,9,60,28,144,7,18,17,65,144,7,14,5,3,51,39,108,5,28,61,106,3,57,106,3,41,18,63,63,12,36,5,56,3,39,67,3,33,61,3,76,28,55,65,8,30,22,7,72,46,3,62,69,34,25,5,80,3,73,28,103,24,31,31,22,32,37,6,56,50,5,128,52,3,64,37,29,27,34,5,24,31,5,39,32,84,118,3,39,73,121,3,54,34,16,5,91,184,22,42,34,65,7,140,63,7,18,3,61,69,34,7,101,53,3,64,28,96,52,3,43,26,73,5,24,80,5,39,75,52,3,60,84,125,3,62,111,3,54,39,77,124,37,32,61,17,37,19,3,71,42,32,37,58,54,42,85,113,122,54,78,24,41,16,9,76,23,40,16,9,7,109,41,7,54,5,103,52,3,61,42,37,134,22,3,67,42,77,125,37,32,52,3,73,39,40,49,101,68,125,41,26,52,3,59,24,98,42,72,66,33,22,40,65,167,51,9,7,5,37,55,21,17,36,32,40,41,5,32,52,3,54,39,51,36,103,5,39,37,114,3,46,102,107,3,106,39,137,37,26,52,3,106,39,137,37,26,52,3,65,39,35,16,18,29,7,75,39,60,5,58,25,18,5,57,40,20,5,38,87,28,34,7,5,88,28,36,7,5,45,57,32,7,5,18,3,125,143,28,14,54,5,3,54,72,28,14,54,5,3,75,93,28,14,54,5,3,97,124,28,14,54,5,3,53,71,28,14,54,5,3,75,93,28,14,54,5,3,17,3,56,64,101,5,39,13,5,109,67,32,7,13,13,52,3,48,64,83,5,109,78,71,52,3,48,109,67,14,54,5,3,49,64,84,5,29,13,5,58,53,32,32,7,72,55,36,25,3,51,64,86,5,58,53,32,32,7,78,74,55,38,25,3,1,40,43,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/dialects/abstract/query-interface.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\n\nconst Utils = require('../../utils');\nconst DataTypes = require('../../data-types');\nconst Transaction = require('../../transaction');\nconst QueryTypes = require('../../query-types');\n\n/**\n * The interface that Sequelize uses to talk to all databases\n */\nclass QueryInterface {\n  constructor(sequelize, queryGenerator) {\n    this.sequelize = sequelize;\n    this.queryGenerator = queryGenerator;\n  }\n\n  /**\n   * Create a database\n   *\n   * @param {string} database  Database name to create\n   * @param {object} [options] Query options\n   * @param {string} [options.charset] Database default character set, MYSQL only\n   * @param {string} [options.collate] Database default collation\n   * @param {string} [options.encoding] Database default character set, PostgreSQL only\n   * @param {string} [options.ctype] Database character classification, PostgreSQL only\n   * @param {string} [options.template] The name of the template from which to create the new database, PostgreSQL only\n   *\n   * @returns {Promise}\n   */\n  async createDatabase(database, options) {\n    options = options || {};\n    const sql = this.queryGenerator.createDatabaseQuery(database, options);\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Drop a database\n   *\n   * @param {string} database  Database name to drop\n   * @param {object} [options] Query options\n   *\n   * @returns {Promise}\n   */\n  async dropDatabase(database, options) {\n    options = options || {};\n    const sql = this.queryGenerator.dropDatabaseQuery(database);\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Create a schema\n   *\n   * @param {string} schema    Schema name to create\n   * @param {object} [options] Query options\n   *\n   * @returns {Promise}\n   */\n  async createSchema(schema, options) {\n    options = options || {};\n    const sql = this.queryGenerator.createSchema(schema);\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Drop a schema\n   *\n   * @param {string} schema    Schema name to drop\n   * @param {object} [options] Query options\n   *\n   * @returns {Promise}\n   */\n  async dropSchema(schema, options) {\n    options = options || {};\n    const sql = this.queryGenerator.dropSchema(schema);\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Drop all schemas\n   *\n   * @param {object} [options] Query options\n   *\n   * @returns {Promise}\n   */\n  async dropAllSchemas(options) {\n    options = options || {};\n\n    if (!this.queryGenerator._dialect.supports.schemas) {\n      return this.sequelize.drop(options);\n    }\n    const schemas = await this.showAllSchemas(options);\n    return Promise.all(schemas.map(schemaName => this.dropSchema(schemaName, options)));\n  }\n\n  /**\n   * Show all schemas\n   *\n   * @param {object} [options] Query options\n   *\n   * @returns {Promise<Array>}\n   */\n  async showAllSchemas(options) {\n    options = {\n      ...options,\n      raw: true,\n      type: this.sequelize.QueryTypes.SELECT\n    };\n\n    const showSchemasSql = this.queryGenerator.showSchemasQuery(options);\n\n    const schemaNames = await this.sequelize.query(showSchemasSql, options);\n\n    return _.flatten(schemaNames.map(value => value.schema_name ? value.schema_name : value));\n  }\n\n  /**\n   * Return database version\n   *\n   * @param {object}    [options]      Query options\n   * @param {QueryType} [options.type] Query type\n   *\n   * @returns {Promise}\n   * @private\n   */\n  async databaseVersion(options) {\n    return await this.sequelize.query(\n      this.queryGenerator.versionQuery(),\n      { ...options, type: QueryTypes.VERSION }\n    );\n  }\n\n  /**\n   * Create a table with given set of attributes\n   *\n   * ```js\n   * queryInterface.createTable(\n   *   'nameOfTheNewTable',\n   *   {\n   *     id: {\n   *       type: Sequelize.INTEGER,\n   *       primaryKey: true,\n   *       autoIncrement: true\n   *     },\n   *     createdAt: {\n   *       type: Sequelize.DATE\n   *     },\n   *     updatedAt: {\n   *       type: Sequelize.DATE\n   *     },\n   *     attr1: Sequelize.STRING,\n   *     attr2: Sequelize.INTEGER,\n   *     attr3: {\n   *       type: Sequelize.BOOLEAN,\n   *       defaultValue: false,\n   *       allowNull: false\n   *     },\n   *     //foreign key usage\n   *     attr4: {\n   *       type: Sequelize.INTEGER,\n   *       references: {\n   *         model: 'another_table_name',\n   *         key: 'id'\n   *       },\n   *       onUpdate: 'cascade',\n   *       onDelete: 'cascade'\n   *     }\n   *   },\n   *   {\n   *     engine: 'MYISAM',    // default: 'InnoDB'\n   *     charset: 'latin1',   // default: null\n   *     schema: 'public',    // default: public, PostgreSQL only.\n   *     comment: 'my table', // comment for table\n   *     collate: 'latin1_danish_ci' // collation, MYSQL only\n   *   }\n   * )\n   * ```\n   *\n   * @param {string} tableName  Name of table to create\n   * @param {object} attributes Object representing a list of table attributes to create\n   * @param {object} [options] create table and query options\n   * @param {Model}  [model] model class\n   *\n   * @returns {Promise}\n   */\n  async createTable(tableName, attributes, options, model) {\n    let sql = '';\n\n    options = { ...options };\n\n    if (options && options.uniqueKeys) {\n      _.forOwn(options.uniqueKeys, uniqueKey => {\n        if (uniqueKey.customIndex === undefined) {\n          uniqueKey.customIndex = true;\n        }\n      });\n    }\n\n    if (model) {\n      options.uniqueKeys = options.uniqueKeys || model.uniqueKeys;\n    }\n\n    attributes = _.mapValues(\n      attributes,\n      attribute => this.sequelize.normalizeAttribute(attribute)\n    );\n\n    // Postgres requires special SQL commands for ENUM/ENUM[]\n    await this.ensureEnums(tableName, attributes, options, model);\n\n    if (\n      !tableName.schema &&\n      (options.schema || !!model && model._schema)\n    ) {\n      tableName = this.queryGenerator.addSchema({\n        tableName,\n        _schema: !!model && model._schema || options.schema\n      });\n    }\n\n    attributes = this.queryGenerator.attributesToSQL(attributes, {\n      table: tableName,\n      context: 'createTable',\n      withoutForeignKeyConstraints: options.withoutForeignKeyConstraints\n    });\n    sql = this.queryGenerator.createTableQuery(tableName, attributes, options);\n\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Returns a promise that will resolve to true if the table exists in the database, false otherwise.\n   *\n   * @param {TableName} tableName - The name of the table\n   * @param {QueryOptions} options - Query options\n   * @returns {Promise<boolean>}\n   */\n  async tableExists(tableName, options) {\n    const sql = this.queryGenerator.tableExistsQuery(tableName);\n\n    const out = await this.sequelize.query(sql, {\n      ...options,\n      type: QueryTypes.SHOWTABLES\n    });\n\n    return out.length === 1;\n  }\n\n  /**\n   * Drop a table from database\n   *\n   * @param {string} tableName Table name to drop\n   * @param {object} options   Query options\n   *\n   * @returns {Promise}\n   */\n  async dropTable(tableName, options) {\n    // if we're forcing we should be cascading unless explicitly stated otherwise\n    options = { ...options };\n    options.cascade = options.cascade || options.force || false;\n\n    const sql = this.queryGenerator.dropTableQuery(tableName, options);\n\n    await this.sequelize.query(sql, options);\n  }\n\n  async _dropAllTables(tableNames, skip, options) {\n    for (const tableName of tableNames) {\n      // if tableName is not in the Array of tables names then don't drop it\n      if (!skip.includes(tableName.tableName || tableName)) {\n        await this.dropTable(tableName, { ...options, cascade: true } );\n      }\n    }\n  }\n\n  /**\n   * Drop all tables from database\n   *\n   * @param {object} [options] query options\n   * @param {Array}  [options.skip] List of table to skip\n   *\n   * @returns {Promise}\n   */\n  async dropAllTables(options) {\n    options = options || {};\n    const skip = options.skip || [];\n\n    const tableNames = await this.showAllTables(options);\n    const foreignKeys = await this.getForeignKeysForTables(tableNames, options);\n\n    for (const tableName of tableNames) {\n      let normalizedTableName = tableName;\n      if (_.isObject(tableName)) {\n        normalizedTableName = `${tableName.schema}.${tableName.tableName}`;\n      }\n\n      for (const foreignKey of foreignKeys[normalizedTableName]) {\n        await this.sequelize.query(this.queryGenerator.dropForeignKeyQuery(tableName, foreignKey));\n      }\n    }\n    await this._dropAllTables(tableNames, skip, options);\n  }\n\n  /**\n   * Rename a table\n   *\n   * @param {string} before    Current name of table\n   * @param {string} after     New name from table\n   * @param {object} [options] Query options\n   *\n   * @returns {Promise}\n   */\n  async renameTable(before, after, options) {\n    options = options || {};\n    const sql = this.queryGenerator.renameTableQuery(before, after);\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Get all tables in current database\n   *\n   * @param {object}    [options] Query options\n   * @param {boolean}   [options.raw=true] Run query in raw mode\n   * @param {QueryType} [options.type=QueryType.SHOWTABLE] query type\n   *\n   * @returns {Promise<Array>}\n   * @private\n   */\n  async showAllTables(options) {\n    options = {\n      ...options,\n      raw: true,\n      type: QueryTypes.SHOWTABLES\n    };\n\n    const showTablesSql = this.queryGenerator.showTablesQuery(this.sequelize.config.database);\n    const tableNames = await this.sequelize.query(showTablesSql, options);\n    return _.flatten(tableNames);\n  }\n\n  /**\n   * Describe a table structure\n   *\n   * This method returns an array of hashes containing information about all attributes in the table.\n   *\n   * ```js\n   * {\n   *    name: {\n   *      type:         'VARCHAR(255)', // this will be 'CHARACTER VARYING' for pg!\n   *      allowNull:    true,\n   *      defaultValue: null\n   *    },\n   *    isBetaMember: {\n   *      type:         'TINYINT(1)', // this will be 'BOOLEAN' for pg!\n   *      allowNull:    false,\n   *      defaultValue: false\n   *    }\n   * }\n   * ```\n   *\n   * @param {string} tableName table name\n   * @param {object} [options] Query options\n   *\n   * @returns {Promise<object>}\n   */\n  async describeTable(tableName, options) {\n    let schema = null;\n    let schemaDelimiter = null;\n\n    if (typeof options === 'string') {\n      schema = options;\n    } else if (typeof options === 'object' && options !== null) {\n      schema = options.schema || null;\n      schemaDelimiter = options.schemaDelimiter || null;\n    }\n\n    if (typeof tableName === 'object' && tableName !== null) {\n      schema = tableName.schema;\n      tableName = tableName.tableName;\n    }\n\n    const sql = this.queryGenerator.describeTableQuery(tableName, schema, schemaDelimiter);\n    options = { ...options, type: QueryTypes.DESCRIBE };\n\n    try {\n      const data = await this.sequelize.query(sql, options);\n      /*\n       * If no data is returned from the query, then the table name may be wrong.\n       * Query generators that use information_schema for retrieving table info will just return an empty result set,\n       * it will not throw an error like built-ins do (e.g. DESCRIBE on MySql).\n       */\n      if (_.isEmpty(data)) {\n        throw new Error(`No description found for \"${tableName}\" table. Check the table name and schema; remember, they _are_ case sensitive.`);\n      }\n\n      return data;\n    } catch (e) {\n      if (e.original && e.original.code === 'ER_NO_SUCH_TABLE') {\n        throw new Error(`No description found for \"${tableName}\" table. Check the table name and schema; remember, they _are_ case sensitive.`);\n      }\n\n      throw e;\n    }\n  }\n\n  /**\n   * Add a new column to a table\n   *\n   * ```js\n   * queryInterface.addColumn('tableA', 'columnC', Sequelize.STRING, {\n   *    after: 'columnB' // after option is only supported by MySQL\n   * });\n   * ```\n   *\n   * @param {string} table     Table to add column to\n   * @param {string} key       Column name\n   * @param {object} attribute Attribute definition\n   * @param {object} [options] Query options\n   *\n   * @returns {Promise}\n   */\n  async addColumn(table, key, attribute, options) {\n    if (!table || !key || !attribute) {\n      throw new Error('addColumn takes at least 3 arguments (table, attribute name, attribute definition)');\n    }\n\n    options = options || {};\n    attribute = this.sequelize.normalizeAttribute(attribute);\n    return await this.sequelize.query(this.queryGenerator.addColumnQuery(table, key, attribute), options);\n  }\n\n  /**\n   * Remove a column from a table\n   *\n   * @param {string} tableName      Table to remove column from\n   * @param {string} attributeName  Column name to remove\n   * @param {object} [options]      Query options\n   */\n  async removeColumn(tableName, attributeName, options) {\n    return this.sequelize.query(this.queryGenerator.removeColumnQuery(tableName, attributeName), options);\n  }\n\n  normalizeAttribute(dataTypeOrOptions) {\n    let attribute;\n    if (Object.values(DataTypes).includes(dataTypeOrOptions)) {\n      attribute = { type: dataTypeOrOptions, allowNull: true };\n    } else {\n      attribute = dataTypeOrOptions;\n    }\n\n    return this.sequelize.normalizeAttribute(attribute);\n  }\n\n  /**\n   * Split a list of identifiers by \".\" and quote each part\n   *\n   * @param {string} identifier\n   * @param {boolean} force\n   *\n   * @returns {string}\n   */\n  quoteIdentifier(identifier, force) {\n    return this.queryGenerator.quoteIdentifier(identifier, force);\n  }\n\n  /**\n   * Split a list of identifiers by \".\" and quote each part.\n   *\n   * @param {string} identifiers \n   * \n   * @returns {string}\n   */\n  quoteIdentifiers(identifiers) {\n    return this.queryGenerator.quoteIdentifiers(identifiers);\n  }\n\n  /**\n   * Change a column definition\n   *\n   * @param {string} tableName          Table name to change from\n   * @param {string} attributeName      Column name\n   * @param {object} dataTypeOrOptions  Attribute definition for new column\n   * @param {object} [options]          Query options\n   */\n  async changeColumn(tableName, attributeName, dataTypeOrOptions, options) {\n    options = options || {};\n\n    const query = this.queryGenerator.attributesToSQL({\n      [attributeName]: this.normalizeAttribute(dataTypeOrOptions)\n    }, {\n      context: 'changeColumn',\n      table: tableName\n    });\n    const sql = this.queryGenerator.changeColumnQuery(tableName, query);\n\n    return this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Rejects if the table doesn't have the specified column, otherwise returns the column description.\n   *\n   * @param {string} tableName\n   * @param {string} columnName\n   * @param {object} options\n   * @private\n   */\n  async assertTableHasColumn(tableName, columnName, options) {\n    const description = await this.describeTable(tableName, options);\n    if (description[columnName]) {\n      return description;\n    }\n    throw new Error(`Table ${tableName} doesn't have the column ${columnName}`);\n  }\n\n  /**\n   * Rename a column\n   *\n   * @param {string} tableName        Table name whose column to rename\n   * @param {string} attrNameBefore   Current column name\n   * @param {string} attrNameAfter    New column name\n   * @param {object} [options]        Query option\n   *\n   * @returns {Promise}\n   */\n  async renameColumn(tableName, attrNameBefore, attrNameAfter, options) {\n    options = options || {};\n    const data = (await this.assertTableHasColumn(tableName, attrNameBefore, options))[attrNameBefore];\n\n    const _options = {};\n\n    _options[attrNameAfter] = {\n      attribute: attrNameAfter,\n      type: data.type,\n      allowNull: data.allowNull,\n      defaultValue: data.defaultValue\n    };\n\n    // fix: a not-null column cannot have null as default value\n    if (data.defaultValue === null && !data.allowNull) {\n      delete _options[attrNameAfter].defaultValue;\n    }\n\n    const sql = this.queryGenerator.renameColumnQuery(\n      tableName,\n      attrNameBefore,\n      this.queryGenerator.attributesToSQL(_options)\n    );\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Add an index to a column\n   *\n   * @param {string|object}  tableName Table name to add index on, can be a object with schema\n   * @param {Array}   [attributes]     Use options.fields instead, List of attributes to add index on\n   * @param {object}  options          indexes options\n   * @param {Array}   options.fields   List of attributes to add index on\n   * @param {boolean} [options.concurrently] Pass CONCURRENT so other operations run while the index is created\n   * @param {boolean} [options.unique] Create a unique index\n   * @param {string}  [options.using]  Useful for GIN indexes\n   * @param {string}  [options.operator] Index operator\n   * @param {string}  [options.type]   Type of index, available options are UNIQUE|FULLTEXT|SPATIAL\n   * @param {string}  [options.name]   Name of the index. Default is <table>_<attr1>_<attr2>\n   * @param {object}  [options.where]  Where condition on index, for partial indexes\n   * @param {string}  [rawTablename]   table name, this is just for backward compatibiity\n   *\n   * @returns {Promise}\n   */\n  async addIndex(tableName, attributes, options, rawTablename) {\n    // Support for passing tableName, attributes, options or tableName, options (with a fields param which is the attributes)\n    if (!Array.isArray(attributes)) {\n      rawTablename = options;\n      options = attributes;\n      attributes = options.fields;\n    }\n\n    if (!rawTablename) {\n      // Map for backwards compat\n      rawTablename = tableName;\n    }\n\n    options = Utils.cloneDeep(options);\n    options.fields = attributes;\n    const sql = this.queryGenerator.addIndexQuery(tableName, options, rawTablename);\n    return await this.sequelize.query(sql, { ...options, supportsSearchPath: false });\n  }\n\n  /**\n   * Show indexes on a table\n   *\n   * @param {string} tableName table name\n   * @param {object} [options]   Query options\n   *\n   * @returns {Promise<Array>}\n   * @private\n   */\n  async showIndex(tableName, options) {\n    const sql = this.queryGenerator.showIndexesQuery(tableName, options);\n    return await this.sequelize.query(sql, { ...options, type: QueryTypes.SHOWINDEXES });\n  }\n\n\n  /**\n   * Returns all foreign key constraints of requested tables\n   *\n   * @param {string[]} tableNames table names\n   * @param {object} [options] Query options\n   *\n   * @returns {Promise}\n   */\n  async getForeignKeysForTables(tableNames, options) {\n    if (tableNames.length === 0) {\n      return {};\n    }\n\n    options = { ...options, type: QueryTypes.FOREIGNKEYS };\n\n    const results = await Promise.all(tableNames.map(tableName =>\n      this.sequelize.query(this.queryGenerator.getForeignKeysQuery(tableName, this.sequelize.config.database), options)));\n\n    const result = {};\n\n    tableNames.forEach((tableName, i) => {\n      if (_.isObject(tableName)) {\n        tableName = `${tableName.schema}.${tableName.tableName}`;\n      }\n\n      result[tableName] = Array.isArray(results[i])\n        ? results[i].map(r => r.constraint_name)\n        : [results[i] && results[i].constraint_name];\n\n      result[tableName] = result[tableName].filter(_.identity);\n    });\n\n    return result;\n  }\n\n  /**\n   * Get foreign key references details for the table\n   *\n   * Those details contains constraintSchema, constraintName, constraintCatalog\n   * tableCatalog, tableSchema, tableName, columnName,\n   * referencedTableCatalog, referencedTableCatalog, referencedTableSchema, referencedTableName, referencedColumnName.\n   * Remind: constraint informations won't return if it's sqlite.\n   *\n   * @param {string} tableName table name\n   * @param {object} [options]  Query options\n   */\n  async getForeignKeyReferencesForTable(tableName, options) {\n    const queryOptions = {\n      ...options,\n      type: QueryTypes.FOREIGNKEYS\n    };\n    const query = this.queryGenerator.getForeignKeysQuery(tableName, this.sequelize.config.database);\n    return this.sequelize.query(query, queryOptions);\n  }\n\n  /**\n   * Remove an already existing index from a table\n   *\n   * @param {string} tableName                    Table name to drop index from\n   * @param {string|string[]} indexNameOrAttributes  Index name or list of attributes that in the index\n   * @param {object} [options]                    Query options\n   * @param {boolean} [options.concurrently]      Pass CONCURRENTLY so other operations run while the index is created\n   *\n   * @returns {Promise}\n   */\n  async removeIndex(tableName, indexNameOrAttributes, options) {\n    options = options || {};\n    const sql = this.queryGenerator.removeIndexQuery(tableName, indexNameOrAttributes, options);\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Add a constraint to a table\n   *\n   * Available constraints:\n   * - UNIQUE\n   * - DEFAULT (MSSQL only)\n   * - CHECK (MySQL - Ignored by the database engine )\n   * - FOREIGN KEY\n   * - PRIMARY KEY\n   *\n   * @example <caption>UNIQUE</caption>\n   * queryInterface.addConstraint('Users', {\n   *   fields: ['email'],\n   *   type: 'unique',\n   *   name: 'custom_unique_constraint_name'\n   * });\n   *\n   * @example <caption>CHECK</caption>\n   * queryInterface.addConstraint('Users', {\n   *   fields: ['roles'],\n   *   type: 'check',\n   *   where: {\n   *      roles: ['user', 'admin', 'moderator', 'guest']\n   *   }\n   * });\n   *\n   * @example <caption>Default - MSSQL only</caption>\n   * queryInterface.addConstraint('Users', {\n   *    fields: ['roles'],\n   *    type: 'default',\n   *    defaultValue: 'guest'\n   * });\n   *\n   * @example <caption>Primary Key</caption>\n   * queryInterface.addConstraint('Users', {\n   *    fields: ['username'],\n   *    type: 'primary key',\n   *    name: 'custom_primary_constraint_name'\n   * });\n   *\n   * @example <caption>Foreign Key</caption>\n   * queryInterface.addConstraint('Posts', {\n   *   fields: ['username'],\n   *   type: 'foreign key',\n   *   name: 'custom_fkey_constraint_name',\n   *   references: { //Required field\n   *     table: 'target_table_name',\n   *     field: 'target_column_name'\n   *   },\n   *   onDelete: 'cascade',\n   *   onUpdate: 'cascade'\n   * });\n   *\n   * @example <caption>Composite Foreign Key</caption>\n   * queryInterface.addConstraint('TableName', {\n   *   fields: ['source_column_name', 'other_source_column_name'],\n   *   type: 'foreign key',\n   *   name: 'custom_fkey_constraint_name',\n   *   references: { //Required field\n   *     table: 'target_table_name',\n   *     fields: ['target_column_name', 'other_target_column_name']\n   *   },\n   *   onDelete: 'cascade',\n   *   onUpdate: 'cascade'\n   * });\n   *\n   * @param {string} tableName                   Table name where you want to add a constraint\n   * @param {object} options                     An object to define the constraint name, type etc\n   * @param {string} options.type                Type of constraint. One of the values in available constraints(case insensitive)\n   * @param {Array}  options.fields              Array of column names to apply the constraint over\n   * @param {string} [options.name]              Name of the constraint. If not specified, sequelize automatically creates a named constraint based on constraint type, table & column names\n   * @param {string} [options.defaultValue]      The value for the default constraint\n   * @param {object} [options.where]             Where clause/expression for the CHECK constraint\n   * @param {object} [options.references]        Object specifying target table, column name to create foreign key constraint\n   * @param {string} [options.references.table]  Target table name\n   * @param {string} [options.references.field]  Target column name\n   * @param {string} [options.references.fields] Target column names for a composite primary key. Must match the order of fields in options.fields.\n   * @param {string} [options.deferrable]        Sets the constraint to be deferred or immediately checked. See Sequelize.Deferrable. PostgreSQL Only\n   *\n   * @returns {Promise}\n   */\n  async addConstraint(tableName, options) {\n    if (!options.fields) {\n      throw new Error('Fields must be specified through options.fields');\n    }\n\n    if (!options.type) {\n      throw new Error('Constraint type must be specified through options.type');\n    }\n\n    options = Utils.cloneDeep(options);\n\n    const sql = this.queryGenerator.addConstraintQuery(tableName, options);\n    return await this.sequelize.query(sql, options);\n  }\n\n  async showConstraint(tableName, constraintName, options) {\n    const sql = this.queryGenerator.showConstraintsQuery(tableName, constraintName);\n    return await this.sequelize.query(sql, { ...options, type: QueryTypes.SHOWCONSTRAINTS });\n  }\n\n  /**\n   * Remove a constraint from a table\n   *\n   * @param {string} tableName       Table name to drop constraint from\n   * @param {string} constraintName  Constraint name\n   * @param {object} options         Query options\n   */\n  async removeConstraint(tableName, constraintName, options) {\n    return this.sequelize.query(this.queryGenerator.removeConstraintQuery(tableName, constraintName), options);\n  }\n\n  async insert(instance, tableName, values, options) {\n    options = Utils.cloneDeep(options);\n    options.hasTrigger = instance && instance.constructor.options.hasTrigger;\n    const sql = this.queryGenerator.insertQuery(tableName, values, instance && instance.constructor.rawAttributes, options);\n\n    options.type = QueryTypes.INSERT;\n    options.instance = instance;\n\n    const results = await this.sequelize.query(sql, options);\n    if (instance) results[0].isNewRecord = false;\n\n    return results;\n  }\n\n  /**\n   * Upsert\n   *\n   * @param {string} tableName    table to upsert on\n   * @param {object} insertValues values to be inserted, mapped to field name\n   * @param {object} updateValues values to be updated, mapped to field name\n   * @param {object} where        where conditions, which can be used for UPDATE part when INSERT fails\n   * @param {object} options      query options\n   *\n   * @returns {Promise<boolean,?number>} Resolves an array with <created, primaryKey>\n   */\n  async upsert(tableName, insertValues, updateValues, where, options) {\n    options = { ...options };\n\n    const model = options.model;\n\n    options.type = QueryTypes.UPSERT;\n    options.updateOnDuplicate = Object.keys(updateValues);\n    options.upsertKeys = options.conflictFields || [];\n\n    if (options.upsertKeys.length === 0) {\n      const primaryKeys = Object.values(model.primaryKeys).map(item => item.field);\n      const uniqueKeys = Object.values(model.uniqueKeys).filter(c => c.fields.length > 0).map(c => c.fields);\n      const indexKeys = Object.values(model._indexes).filter(c => c.unique && c.fields.length > 0).map(c => c.fields);\n      // For fields in updateValues, try to find a constraint or unique index\n      // that includes given field. Only first matching upsert key is used.\n      for (const field of options.updateOnDuplicate) {\n        const uniqueKey = uniqueKeys.find(fields => fields.includes(field));\n        if (uniqueKey) {\n          options.upsertKeys = uniqueKey;\n          break;\n        }\n\n        const indexKey = indexKeys.find(fields => fields.includes(field));\n        if (indexKey) {\n          options.upsertKeys = indexKey;\n          break;\n        }\n      }\n\n      // Always use PK, if no constraint available OR update data contains PK\n      if (\n        options.upsertKeys.length === 0\n        || _.intersection(options.updateOnDuplicate, primaryKeys).length\n      ) {\n        options.upsertKeys = primaryKeys;\n      }\n\n      options.upsertKeys = _.uniq(options.upsertKeys);\n    }\n\n    const sql = this.queryGenerator.insertQuery(tableName, insertValues, model.rawAttributes, options);\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Insert multiple records into a table\n   *\n   * @example\n   * queryInterface.bulkInsert('roles', [{\n   *    label: 'user',\n   *    createdAt: new Date(),\n   *    updatedAt: new Date()\n   *  }, {\n   *    label: 'admin',\n   *    createdAt: new Date(),\n   *    updatedAt: new Date()\n   *  }]);\n   *\n   * @param {string} tableName   Table name to insert record to\n   * @param {Array}  records     List of records to insert\n   * @param {object} options     Various options, please see Model.bulkCreate options\n   * @param {object} attributes  Various attributes mapped by field name\n   *\n   * @returns {Promise}\n   */\n  async bulkInsert(tableName, records, options, attributes) {\n    options = { ...options };\n    options.type = QueryTypes.INSERT;\n\n    const results = await this.sequelize.query(\n      this.queryGenerator.bulkInsertQuery(tableName, records, options, attributes),\n      options\n    );\n\n    return results[0];\n  }\n\n  async update(instance, tableName, values, identifier, options) {\n    options = { ...options };\n    options.hasTrigger = instance && instance.constructor.options.hasTrigger;\n\n    const sql = this.queryGenerator.updateQuery(tableName, values, identifier, options, instance.constructor.rawAttributes);\n\n    options.type = QueryTypes.UPDATE;\n\n    options.instance = instance;\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Update multiple records of a table\n   *\n   * @example\n   * queryInterface.bulkUpdate('roles', {\n   *     label: 'admin',\n   *   }, {\n   *     userType: 3,\n   *   },\n   * );\n   *\n   * @param {string} tableName     Table name to update\n   * @param {object} values        Values to be inserted, mapped to field name\n   * @param {object} identifier    A hash with conditions OR an ID as integer OR a string with conditions\n   * @param {object} [options]     Various options, please see Model.bulkCreate options\n   * @param {object} [attributes]  Attributes on return objects if supported by SQL dialect\n   *\n   * @returns {Promise}\n   */\n  async bulkUpdate(tableName, values, identifier, options, attributes) {\n    options = Utils.cloneDeep(options);\n    if (typeof identifier === 'object') identifier = Utils.cloneDeep(identifier);\n\n    const sql = this.queryGenerator.updateQuery(tableName, values, identifier, options, attributes);\n    const table = _.isObject(tableName) ? tableName : { tableName };\n    const model = options.model ? options.model : _.find(this.sequelize.modelManager.models, { tableName: table.tableName });\n\n    options.type = QueryTypes.BULKUPDATE;\n    options.model = model;\n    return await this.sequelize.query(sql, options);\n  }\n\n  async delete(instance, tableName, identifier, options) {\n    const cascades = [];\n    const sql = this.queryGenerator.deleteQuery(tableName, identifier, {}, instance.constructor);\n\n    options = { ...options };\n\n    // Check for a restrict field\n    if (!!instance.constructor && !!instance.constructor.associations) {\n      const keys = Object.keys(instance.constructor.associations);\n      const length = keys.length;\n      let association;\n\n      for (let i = 0; i < length; i++) {\n        association = instance.constructor.associations[keys[i]];\n        if (association.options && association.options.onDelete &&\n          association.options.onDelete.toLowerCase() === 'cascade' &&\n          association.options.useHooks === true) {\n          cascades.push(association.accessors.get);\n        }\n      }\n    }\n\n    for (const cascade of cascades) {\n      let instances = await instance[cascade](options);\n      // Check for hasOne relationship with non-existing associate (\"has zero\")\n      if (!instances) continue;\n      if (!Array.isArray(instances)) instances = [instances];\n      for (const _instance of instances) await _instance.destroy(options);\n    }\n    options.instance = instance;\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Delete multiple records from a table\n   *\n   * @param {string}  tableName            table name from where to delete records\n   * @param {object}  where                where conditions to find records to delete\n   * @param {object}  [options]            options\n   * @param {boolean} [options.truncate]   Use truncate table command\n   * @param {boolean} [options.cascade=false]         Only used in conjunction with TRUNCATE. Truncates  all tables that have foreign-key references to the named table, or to any tables added to the group due to CASCADE.\n   * @param {boolean} [options.restartIdentity=false] Only used in conjunction with TRUNCATE. Automatically restart sequences owned by columns of the truncated table.\n   * @param {Model}   [model]              Model\n   *\n   * @returns {Promise}\n   */\n  async bulkDelete(tableName, where, options, model) {\n    options = Utils.cloneDeep(options);\n    options = _.defaults(options, { limit: null });\n\n    if (options.truncate === true) {\n      return this.sequelize.query(\n        this.queryGenerator.truncateTableQuery(tableName, options),\n        options\n      );\n    }\n\n    if (typeof identifier === 'object') where = Utils.cloneDeep(where);\n\n    return await this.sequelize.query(\n      this.queryGenerator.deleteQuery(tableName, where, options, model),\n      options\n    );\n  }\n\n  async select(model, tableName, optionsArg) {\n    const options = { ...optionsArg, type: QueryTypes.SELECT, model };\n\n    return await this.sequelize.query(\n      this.queryGenerator.selectQuery(tableName, options, model),\n      options\n    );\n  }\n\n  async increment(model, tableName, where, incrementAmountsByField, extraAttributesToBeUpdated, options) {\n    options = Utils.cloneDeep(options);\n\n    const sql = this.queryGenerator.arithmeticQuery('+', tableName, where, incrementAmountsByField, extraAttributesToBeUpdated, options);\n\n    options.type = QueryTypes.UPDATE;\n    options.model = model;\n\n    return await this.sequelize.query(sql, options);\n  }\n\n  async decrement(model, tableName, where, incrementAmountsByField, extraAttributesToBeUpdated, options) {\n    options = Utils.cloneDeep(options);\n\n    const sql = this.queryGenerator.arithmeticQuery('-', tableName, where, incrementAmountsByField, extraAttributesToBeUpdated, options);\n\n    options.type = QueryTypes.UPDATE;\n    options.model = model;\n\n    return await this.sequelize.query(sql, options);\n  }\n\n  async rawSelect(tableName, options, attributeSelector, Model) {\n    options = Utils.cloneDeep(options);\n    options = _.defaults(options, {\n      raw: true,\n      plain: true,\n      type: QueryTypes.SELECT\n    });\n\n    const sql = this.queryGenerator.selectQuery(tableName, options, Model);\n\n    if (attributeSelector === undefined) {\n      throw new Error('Please pass an attribute selector!');\n    }\n\n    const data = await this.sequelize.query(sql, options);\n    if (!options.plain) {\n      return data;\n    }\n\n    const result = data ? data[attributeSelector] : null;\n\n    if (!options || !options.dataType) {\n      return result;\n    }\n\n    const dataType = options.dataType;\n\n    if (dataType instanceof DataTypes.DECIMAL || dataType instanceof DataTypes.FLOAT) {\n      if (result !== null) {\n        return parseFloat(result);\n      }\n    }\n    if (dataType instanceof DataTypes.INTEGER || dataType instanceof DataTypes.BIGINT) {\n      if (result !== null) {\n        return parseInt(result, 10);\n      }\n    }\n    if (dataType instanceof DataTypes.DATE) {\n      if (result !== null && !(result instanceof Date)) {\n        return new Date(result);\n      }\n    }\n    return result;\n  }\n\n  async createTrigger(\n    tableName,\n    triggerName,\n    timingType,\n    fireOnArray,\n    functionName,\n    functionParams,\n    optionsArray,\n    options\n  ) {\n    const sql = this.queryGenerator.createTrigger(tableName, triggerName, timingType, fireOnArray, functionName, functionParams, optionsArray);\n    options = options || {};\n    if (sql) {\n      return await this.sequelize.query(sql, options);\n    }\n  }\n\n  async dropTrigger(tableName, triggerName, options) {\n    const sql = this.queryGenerator.dropTrigger(tableName, triggerName);\n    options = options || {};\n\n    if (sql) {\n      return await this.sequelize.query(sql, options);\n    }\n  }\n\n  async renameTrigger(tableName, oldTriggerName, newTriggerName, options) {\n    const sql = this.queryGenerator.renameTrigger(tableName, oldTriggerName, newTriggerName);\n    options = options || {};\n\n    if (sql) {\n      return await this.sequelize.query(sql, options);\n    }\n  }\n\n  /**\n   * Create an SQL function\n   *\n   * @example\n   * queryInterface.createFunction(\n   *   'someFunction',\n   *   [\n   *     {type: 'integer', name: 'param', direction: 'IN'}\n   *   ],\n   *   'integer',\n   *   'plpgsql',\n   *   'RETURN param + 1;',\n   *   [\n   *     'IMMUTABLE',\n   *     'LEAKPROOF'\n   *   ],\n   *   {\n   *    variables:\n   *      [\n   *        {type: 'integer', name: 'myVar', default: 100}\n   *      ],\n   *      force: true\n   *   };\n   * );\n   *\n   * @param {string}  functionName  Name of SQL function to create\n   * @param {Array}   params        List of parameters declared for SQL function\n   * @param {string}  returnType    SQL type of function returned value\n   * @param {string}  language      The name of the language that the function is implemented in\n   * @param {string}  body          Source code of function\n   * @param {Array}   optionsArray  Extra-options for creation\n   * @param {object}  [options]     query options\n   * @param {boolean} options.force If force is true, any existing functions with the same parameters will be replaced. For postgres, this means using `CREATE OR REPLACE FUNCTION` instead of `CREATE FUNCTION`. Default is false\n   * @param {Array<object>}   options.variables List of declared variables. Each variable should be an object with string fields `type` and `name`, and optionally having a `default` field as well.\n   *\n   * @returns {Promise}\n   */\n  async createFunction(functionName, params, returnType, language, body, optionsArray, options) {\n    const sql = this.queryGenerator.createFunction(functionName, params, returnType, language, body, optionsArray, options);\n    options = options || {};\n\n    if (sql) {\n      return await this.sequelize.query(sql, options);\n    }\n  }\n\n  /**\n   * Drop an SQL function\n   *\n   * @example\n   * queryInterface.dropFunction(\n   *   'someFunction',\n   *   [\n   *     {type: 'varchar', name: 'param1', direction: 'IN'},\n   *     {type: 'integer', name: 'param2', direction: 'INOUT'}\n   *   ]\n   * );\n   *\n   * @param {string} functionName Name of SQL function to drop\n   * @param {Array}  params       List of parameters declared for SQL function\n   * @param {object} [options]    query options\n   *\n   * @returns {Promise}\n   */\n  async dropFunction(functionName, params, options) {\n    const sql = this.queryGenerator.dropFunction(functionName, params);\n    options = options || {};\n\n    if (sql) {\n      return await this.sequelize.query(sql, options);\n    }\n  }\n\n  /**\n   * Rename an SQL function\n   *\n   * @example\n   * queryInterface.renameFunction(\n   *   'fooFunction',\n   *   [\n   *     {type: 'varchar', name: 'param1', direction: 'IN'},\n   *     {type: 'integer', name: 'param2', direction: 'INOUT'}\n   *   ],\n   *   'barFunction'\n   * );\n   *\n   * @param {string} oldFunctionName  Current name of function\n   * @param {Array}  params           List of parameters declared for SQL function\n   * @param {string} newFunctionName  New name of function\n   * @param {object} [options]        query options\n   *\n   * @returns {Promise}\n   */\n  async renameFunction(oldFunctionName, params, newFunctionName, options) {\n    const sql = this.queryGenerator.renameFunction(oldFunctionName, params, newFunctionName);\n    options = options || {};\n\n    if (sql) {\n      return await this.sequelize.query(sql, options);\n    }\n  }\n\n  // Helper methods useful for querying\n\n  /**\n   * @private\n   */\n  ensureEnums() {\n    // noop by default\n  }\n\n  async setIsolationLevel(transaction, value, options) {\n    if (!transaction || !(transaction instanceof Transaction)) {\n      throw new Error('Unable to set isolation level for a transaction without transaction object!');\n    }\n\n    if (transaction.parent || !value) {\n      // Not possible to set a separate isolation level for savepoints\n      return;\n    }\n\n    options = { ...options, transaction: transaction.parent || transaction };\n\n    const sql = this.queryGenerator.setIsolationLevelQuery(value, {\n      parent: transaction.parent\n    });\n\n    if (!sql) return;\n\n    return await this.sequelize.query(sql, options);\n  }\n\n  async startTransaction(transaction, options) {\n    if (!transaction || !(transaction instanceof Transaction)) {\n      throw new Error('Unable to start a transaction without transaction object!');\n    }\n\n    options = { ...options, transaction: transaction.parent || transaction };\n    options.transaction.name = transaction.parent ? transaction.name : undefined;\n    const sql = this.queryGenerator.startTransactionQuery(transaction);\n\n    return await this.sequelize.query(sql, options);\n  }\n\n  async deferConstraints(transaction, options) {\n    options = { ...options, transaction: transaction.parent || transaction };\n\n    const sql = this.queryGenerator.deferConstraintsQuery(options);\n\n    if (sql) {\n      return await this.sequelize.query(sql, options);\n    }\n  }\n\n  async commitTransaction(transaction, options) {\n    if (!transaction || !(transaction instanceof Transaction)) {\n      throw new Error('Unable to commit a transaction without transaction object!');\n    }\n    if (transaction.parent) {\n      // Savepoints cannot be committed\n      return;\n    }\n\n    options = {\n      ...options,\n      transaction: transaction.parent || transaction,\n      supportsSearchPath: false,\n      completesTransaction: true\n    };\n\n    const sql = this.queryGenerator.commitTransactionQuery(transaction);\n    const promise = this.sequelize.query(sql, options);\n\n    transaction.finished = 'commit';\n\n    return await promise;\n  }\n\n  async rollbackTransaction(transaction, options) {\n    if (!transaction || !(transaction instanceof Transaction)) {\n      throw new Error('Unable to rollback a transaction without transaction object!');\n    }\n\n    options = {\n      ...options,\n      transaction: transaction.parent || transaction,\n      supportsSearchPath: false,\n      completesTransaction: true\n    };\n    options.transaction.name = transaction.parent ? transaction.name : undefined;\n    const sql = this.queryGenerator.rollbackTransactionQuery(transaction);\n    const promise = this.sequelize.query(sql, options);\n\n    transaction.finished = 'rollback';\n\n    return await promise;\n  }\n}\n\nexports.QueryInterface = QueryInterface;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAEA,MAAM,IAAI,QAAQ;AAElB,MAAM,QAAQ,QAAQ;AACtB,MAAM,YAAY,QAAQ;AAC1B,MAAM,cAAc,QAAQ;AAC5B,MAAM,aAAa,QAAQ;AAK3B,qBAAqB;AAAA,EACnB,YAAY,WAAW,gBAAgB;AACrC,SAAK,YAAY;AACjB,SAAK,iBAAiB;AAAA;AAAA,QAgBlB,eAAe,UAAU,SAAS;AACtC,cAAU,WAAW;AACrB,UAAM,MAAM,KAAK,eAAe,oBAAoB,UAAU;AAC9D,WAAO,MAAM,KAAK,UAAU,MAAM,KAAK;AAAA;AAAA,QAWnC,aAAa,UAAU,SAAS;AACpC,cAAU,WAAW;AACrB,UAAM,MAAM,KAAK,eAAe,kBAAkB;AAClD,WAAO,MAAM,KAAK,UAAU,MAAM,KAAK;AAAA;AAAA,QAWnC,aAAa,QAAQ,SAAS;AAClC,cAAU,WAAW;AACrB,UAAM,MAAM,KAAK,eAAe,aAAa;AAC7C,WAAO,MAAM,KAAK,UAAU,MAAM,KAAK;AAAA;AAAA,QAWnC,WAAW,QAAQ,SAAS;AAChC,cAAU,WAAW;AACrB,UAAM,MAAM,KAAK,eAAe,WAAW;AAC3C,WAAO,MAAM,KAAK,UAAU,MAAM,KAAK;AAAA;AAAA,QAUnC,eAAe,SAAS;AAC5B,cAAU,WAAW;AAErB,QAAI,CAAC,KAAK,eAAe,SAAS,SAAS,SAAS;AAClD,aAAO,KAAK,UAAU,KAAK;AAAA;AAE7B,UAAM,UAAU,MAAM,KAAK,eAAe;AAC1C,WAAO,QAAQ,IAAI,QAAQ,IAAI,gBAAc,KAAK,WAAW,YAAY;AAAA;AAAA,QAUrE,eAAe,SAAS;AAC5B,cAAU,iCACL,UADK;AAAA,MAER,KAAK;AAAA,MACL,MAAM,KAAK,UAAU,WAAW;AAAA;AAGlC,UAAM,iBAAiB,KAAK,eAAe,iBAAiB;AAE5D,UAAM,cAAc,MAAM,KAAK,UAAU,MAAM,gBAAgB;AAE/D,WAAO,EAAE,QAAQ,YAAY,IAAI,WAAS,MAAM,cAAc,MAAM,cAAc;AAAA;AAAA,QAY9E,gBAAgB,SAAS;AAC7B,WAAO,MAAM,KAAK,UAAU,MAC1B,KAAK,eAAe,gBACpB,iCAAK,UAAL,EAAc,MAAM,WAAW;AAAA;AAAA,QAyD7B,YAAY,WAAW,YAAY,SAAS,OAAO;AACvD,QAAI,MAAM;AAEV,cAAU,mBAAK;AAEf,QAAI,WAAW,QAAQ,YAAY;AACjC,QAAE,OAAO,QAAQ,YAAY,eAAa;AACxC,YAAI,UAAU,gBAAgB,QAAW;AACvC,oBAAU,cAAc;AAAA;AAAA;AAAA;AAK9B,QAAI,OAAO;AACT,cAAQ,aAAa,QAAQ,cAAc,MAAM;AAAA;AAGnD,iBAAa,EAAE,UACb,YACA,eAAa,KAAK,UAAU,mBAAmB;AAIjD,UAAM,KAAK,YAAY,WAAW,YAAY,SAAS;AAEvD,QACE,CAAC,UAAU,UACV,SAAQ,UAAU,CAAC,CAAC,SAAS,MAAM,UACpC;AACA,kBAAY,KAAK,eAAe,UAAU;AAAA,QACxC;AAAA,QACA,SAAS,CAAC,CAAC,SAAS,MAAM,WAAW,QAAQ;AAAA;AAAA;AAIjD,iBAAa,KAAK,eAAe,gBAAgB,YAAY;AAAA,MAC3D,OAAO;AAAA,MACP,SAAS;AAAA,MACT,8BAA8B,QAAQ;AAAA;AAExC,UAAM,KAAK,eAAe,iBAAiB,WAAW,YAAY;AAElE,WAAO,MAAM,KAAK,UAAU,MAAM,KAAK;AAAA;AAAA,QAUnC,YAAY,WAAW,SAAS;AACpC,UAAM,MAAM,KAAK,eAAe,iBAAiB;AAEjD,UAAM,MAAM,MAAM,KAAK,UAAU,MAAM,KAAK,iCACvC,UADuC;AAAA,MAE1C,MAAM,WAAW;AAAA;AAGnB,WAAO,IAAI,WAAW;AAAA;AAAA,QAWlB,UAAU,WAAW,SAAS;AAElC,cAAU,mBAAK;AACf,YAAQ,UAAU,QAAQ,WAAW,QAAQ,SAAS;AAEtD,UAAM,MAAM,KAAK,eAAe,eAAe,WAAW;AAE1D,UAAM,KAAK,UAAU,MAAM,KAAK;AAAA;AAAA,QAG5B,eAAe,YAAY,MAAM,SAAS;AAC9C,eAAW,aAAa,YAAY;AAElC,UAAI,CAAC,KAAK,SAAS,UAAU,aAAa,YAAY;AACpD,cAAM,KAAK,UAAU,WAAW,iCAAK,UAAL,EAAc,SAAS;AAAA;AAAA;AAAA;AAAA,QAavD,cAAc,SAAS;AAC3B,cAAU,WAAW;AACrB,UAAM,OAAO,QAAQ,QAAQ;AAE7B,UAAM,aAAa,MAAM,KAAK,cAAc;AAC5C,UAAM,cAAc,MAAM,KAAK,wBAAwB,YAAY;AAEnE,eAAW,aAAa,YAAY;AAClC,UAAI,sBAAsB;AAC1B,UAAI,EAAE,SAAS,YAAY;AACzB,8BAAsB,GAAG,UAAU,UAAU,UAAU;AAAA;AAGzD,iBAAW,cAAc,YAAY,sBAAsB;AACzD,cAAM,KAAK,UAAU,MAAM,KAAK,eAAe,oBAAoB,WAAW;AAAA;AAAA;AAGlF,UAAM,KAAK,eAAe,YAAY,MAAM;AAAA;AAAA,QAYxC,YAAY,QAAQ,OAAO,SAAS;AACxC,cAAU,WAAW;AACrB,UAAM,MAAM,KAAK,eAAe,iBAAiB,QAAQ;AACzD,WAAO,MAAM,KAAK,UAAU,MAAM,KAAK;AAAA;AAAA,QAanC,cAAc,SAAS;AAC3B,cAAU,iCACL,UADK;AAAA,MAER,KAAK;AAAA,MACL,MAAM,WAAW;AAAA;AAGnB,UAAM,gBAAgB,KAAK,eAAe,gBAAgB,KAAK,UAAU,OAAO;AAChF,UAAM,aAAa,MAAM,KAAK,UAAU,MAAM,eAAe;AAC7D,WAAO,EAAE,QAAQ;AAAA;AAAA,QA4Bb,cAAc,WAAW,SAAS;AACtC,QAAI,SAAS;AACb,QAAI,kBAAkB;AAEtB,QAAI,OAAO,YAAY,UAAU;AAC/B,eAAS;AAAA,eACA,OAAO,YAAY,YAAY,YAAY,MAAM;AAC1D,eAAS,QAAQ,UAAU;AAC3B,wBAAkB,QAAQ,mBAAmB;AAAA;AAG/C,QAAI,OAAO,cAAc,YAAY,cAAc,MAAM;AACvD,eAAS,UAAU;AACnB,kBAAY,UAAU;AAAA;AAGxB,UAAM,MAAM,KAAK,eAAe,mBAAmB,WAAW,QAAQ;AACtE,cAAU,iCAAK,UAAL,EAAc,MAAM,WAAW;AAEzC,QAAI;AACF,YAAM,OAAO,MAAM,KAAK,UAAU,MAAM,KAAK;AAM7C,UAAI,EAAE,QAAQ,OAAO;AACnB,cAAM,IAAI,MAAM,6BAA6B;AAAA;AAG/C,aAAO;AAAA,aACA,GAAP;AACA,UAAI,EAAE,YAAY,EAAE,SAAS,SAAS,oBAAoB;AACxD,cAAM,IAAI,MAAM,6BAA6B;AAAA;AAG/C,YAAM;AAAA;AAAA;AAAA,QAoBJ,UAAU,OAAO,KAAK,WAAW,SAAS;AAC9C,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW;AAChC,YAAM,IAAI,MAAM;AAAA;AAGlB,cAAU,WAAW;AACrB,gBAAY,KAAK,UAAU,mBAAmB;AAC9C,WAAO,MAAM,KAAK,UAAU,MAAM,KAAK,eAAe,eAAe,OAAO,KAAK,YAAY;AAAA;AAAA,QAUzF,aAAa,WAAW,eAAe,SAAS;AACpD,WAAO,KAAK,UAAU,MAAM,KAAK,eAAe,kBAAkB,WAAW,gBAAgB;AAAA;AAAA,EAG/F,mBAAmB,mBAAmB;AACpC,QAAI;AACJ,QAAI,OAAO,OAAO,WAAW,SAAS,oBAAoB;AACxD,kBAAY,EAAE,MAAM,mBAAmB,WAAW;AAAA,WAC7C;AACL,kBAAY;AAAA;AAGd,WAAO,KAAK,UAAU,mBAAmB;AAAA;AAAA,EAW3C,gBAAgB,aAAY,OAAO;AACjC,WAAO,KAAK,eAAe,gBAAgB,aAAY;AAAA;AAAA,EAUzD,iBAAiB,aAAa;AAC5B,WAAO,KAAK,eAAe,iBAAiB;AAAA;AAAA,QAWxC,aAAa,WAAW,eAAe,mBAAmB,SAAS;AACvE,cAAU,WAAW;AAErB,UAAM,QAAQ,KAAK,eAAe,gBAAgB;AAAA,OAC/C,gBAAgB,KAAK,mBAAmB;AAAA,OACxC;AAAA,MACD,SAAS;AAAA,MACT,OAAO;AAAA;AAET,UAAM,MAAM,KAAK,eAAe,kBAAkB,WAAW;AAE7D,WAAO,KAAK,UAAU,MAAM,KAAK;AAAA;AAAA,QAW7B,qBAAqB,WAAW,YAAY,SAAS;AACzD,UAAM,cAAc,MAAM,KAAK,cAAc,WAAW;AACxD,QAAI,YAAY,aAAa;AAC3B,aAAO;AAAA;AAET,UAAM,IAAI,MAAM,SAAS,qCAAqC;AAAA;AAAA,QAa1D,aAAa,WAAW,gBAAgB,eAAe,SAAS;AACpE,cAAU,WAAW;AACrB,UAAM,OAAQ,OAAM,KAAK,qBAAqB,WAAW,gBAAgB,UAAU;AAEnF,UAAM,WAAW;AAEjB,aAAS,iBAAiB;AAAA,MACxB,WAAW;AAAA,MACX,MAAM,KAAK;AAAA,MACX,WAAW,KAAK;AAAA,MAChB,cAAc,KAAK;AAAA;AAIrB,QAAI,KAAK,iBAAiB,QAAQ,CAAC,KAAK,WAAW;AACjD,aAAO,SAAS,eAAe;AAAA;AAGjC,UAAM,MAAM,KAAK,eAAe,kBAC9B,WACA,gBACA,KAAK,eAAe,gBAAgB;AAEtC,WAAO,MAAM,KAAK,UAAU,MAAM,KAAK;AAAA;AAAA,QAqBnC,SAAS,WAAW,YAAY,SAAS,cAAc;AAE3D,QAAI,CAAC,MAAM,QAAQ,aAAa;AAC9B,qBAAe;AACf,gBAAU;AACV,mBAAa,QAAQ;AAAA;AAGvB,QAAI,CAAC,cAAc;AAEjB,qBAAe;AAAA;AAGjB,cAAU,MAAM,UAAU;AAC1B,YAAQ,SAAS;AACjB,UAAM,MAAM,KAAK,eAAe,cAAc,WAAW,SAAS;AAClE,WAAO,MAAM,KAAK,UAAU,MAAM,KAAK,iCAAK,UAAL,EAAc,oBAAoB;AAAA;AAAA,QAYrE,UAAU,WAAW,SAAS;AAClC,UAAM,MAAM,KAAK,eAAe,iBAAiB,WAAW;AAC5D,WAAO,MAAM,KAAK,UAAU,MAAM,KAAK,iCAAK,UAAL,EAAc,MAAM,WAAW;AAAA;AAAA,QAYlE,wBAAwB,YAAY,SAAS;AACjD,QAAI,WAAW,WAAW,GAAG;AAC3B,aAAO;AAAA;AAGT,cAAU,iCAAK,UAAL,EAAc,MAAM,WAAW;AAEzC,UAAM,UAAU,MAAM,QAAQ,IAAI,WAAW,IAAI,eAC/C,KAAK,UAAU,MAAM,KAAK,eAAe,oBAAoB,WAAW,KAAK,UAAU,OAAO,WAAW;AAE3G,UAAM,SAAS;AAEf,eAAW,QAAQ,CAAC,WAAW,MAAM;AACnC,UAAI,EAAE,SAAS,YAAY;AACzB,oBAAY,GAAG,UAAU,UAAU,UAAU;AAAA;AAG/C,aAAO,aAAa,MAAM,QAAQ,QAAQ,MACtC,QAAQ,GAAG,IAAI,OAAK,EAAE,mBACtB,CAAC,QAAQ,MAAM,QAAQ,GAAG;AAE9B,aAAO,aAAa,OAAO,WAAW,OAAO,EAAE;AAAA;AAGjD,WAAO;AAAA;AAAA,QAcH,gCAAgC,WAAW,SAAS;AACxD,UAAM,eAAe,iCAChB,UADgB;AAAA,MAEnB,MAAM,WAAW;AAAA;AAEnB,UAAM,QAAQ,KAAK,eAAe,oBAAoB,WAAW,KAAK,UAAU,OAAO;AACvF,WAAO,KAAK,UAAU,MAAM,OAAO;AAAA;AAAA,QAa/B,YAAY,WAAW,uBAAuB,SAAS;AAC3D,cAAU,WAAW;AACrB,UAAM,MAAM,KAAK,eAAe,iBAAiB,WAAW,uBAAuB;AACnF,WAAO,MAAM,KAAK,UAAU,MAAM,KAAK;AAAA;AAAA,QAoFnC,cAAc,WAAW,SAAS;AACtC,QAAI,CAAC,QAAQ,QAAQ;AACnB,YAAM,IAAI,MAAM;AAAA;AAGlB,QAAI,CAAC,QAAQ,MAAM;AACjB,YAAM,IAAI,MAAM;AAAA;AAGlB,cAAU,MAAM,UAAU;AAE1B,UAAM,MAAM,KAAK,eAAe,mBAAmB,WAAW;AAC9D,WAAO,MAAM,KAAK,UAAU,MAAM,KAAK;AAAA;AAAA,QAGnC,eAAe,WAAW,gBAAgB,SAAS;AACvD,UAAM,MAAM,KAAK,eAAe,qBAAqB,WAAW;AAChE,WAAO,MAAM,KAAK,UAAU,MAAM,KAAK,iCAAK,UAAL,EAAc,MAAM,WAAW;AAAA;AAAA,QAUlE,iBAAiB,WAAW,gBAAgB,SAAS;AACzD,WAAO,KAAK,UAAU,MAAM,KAAK,eAAe,sBAAsB,WAAW,iBAAiB;AAAA;AAAA,QAG9F,OAAO,UAAU,WAAW,QAAQ,SAAS;AACjD,cAAU,MAAM,UAAU;AAC1B,YAAQ,aAAa,YAAY,SAAS,YAAY,QAAQ;AAC9D,UAAM,MAAM,KAAK,eAAe,YAAY,WAAW,QAAQ,YAAY,SAAS,YAAY,eAAe;AAE/G,YAAQ,OAAO,WAAW;AAC1B,YAAQ,WAAW;AAEnB,UAAM,UAAU,MAAM,KAAK,UAAU,MAAM,KAAK;AAChD,QAAI;AAAU,cAAQ,GAAG,cAAc;AAEvC,WAAO;AAAA;AAAA,QAcH,OAAO,WAAW,cAAc,cAAc,OAAO,SAAS;AAClE,cAAU,mBAAK;AAEf,UAAM,QAAQ,QAAQ;AAEtB,YAAQ,OAAO,WAAW;AAC1B,YAAQ,oBAAoB,OAAO,KAAK;AACxC,YAAQ,aAAa,QAAQ,kBAAkB;AAE/C,QAAI,QAAQ,WAAW,WAAW,GAAG;AACnC,YAAM,cAAc,OAAO,OAAO,MAAM,aAAa,IAAI,UAAQ,KAAK;AACtE,YAAM,aAAa,OAAO,OAAO,MAAM,YAAY,OAAO,OAAK,EAAE,OAAO,SAAS,GAAG,IAAI,OAAK,EAAE;AAC/F,YAAM,YAAY,OAAO,OAAO,MAAM,UAAU,OAAO,OAAK,EAAE,UAAU,EAAE,OAAO,SAAS,GAAG,IAAI,OAAK,EAAE;AAGxG,iBAAW,SAAS,QAAQ,mBAAmB;AAC7C,cAAM,YAAY,WAAW,KAAK,YAAU,OAAO,SAAS;AAC5D,YAAI,WAAW;AACb,kBAAQ,aAAa;AACrB;AAAA;AAGF,cAAM,WAAW,UAAU,KAAK,YAAU,OAAO,SAAS;AAC1D,YAAI,UAAU;AACZ,kBAAQ,aAAa;AACrB;AAAA;AAAA;AAKJ,UACE,QAAQ,WAAW,WAAW,KAC3B,EAAE,aAAa,QAAQ,mBAAmB,aAAa,QAC1D;AACA,gBAAQ,aAAa;AAAA;AAGvB,cAAQ,aAAa,EAAE,KAAK,QAAQ;AAAA;AAGtC,UAAM,MAAM,KAAK,eAAe,YAAY,WAAW,cAAc,MAAM,eAAe;AAC1F,WAAO,MAAM,KAAK,UAAU,MAAM,KAAK;AAAA;AAAA,QAwBnC,WAAW,WAAW,SAAS,SAAS,YAAY;AACxD,cAAU,mBAAK;AACf,YAAQ,OAAO,WAAW;AAE1B,UAAM,UAAU,MAAM,KAAK,UAAU,MACnC,KAAK,eAAe,gBAAgB,WAAW,SAAS,SAAS,aACjE;AAGF,WAAO,QAAQ;AAAA;AAAA,QAGX,OAAO,UAAU,WAAW,QAAQ,aAAY,SAAS;AAC7D,cAAU,mBAAK;AACf,YAAQ,aAAa,YAAY,SAAS,YAAY,QAAQ;AAE9D,UAAM,MAAM,KAAK,eAAe,YAAY,WAAW,QAAQ,aAAY,SAAS,SAAS,YAAY;AAEzG,YAAQ,OAAO,WAAW;AAE1B,YAAQ,WAAW;AACnB,WAAO,MAAM,KAAK,UAAU,MAAM,KAAK;AAAA;AAAA,QAsBnC,WAAW,WAAW,QAAQ,aAAY,SAAS,YAAY;AACnE,cAAU,MAAM,UAAU;AAC1B,QAAI,OAAO,gBAAe;AAAU,oBAAa,MAAM,UAAU;AAEjE,UAAM,MAAM,KAAK,eAAe,YAAY,WAAW,QAAQ,aAAY,SAAS;AACpF,UAAM,QAAQ,EAAE,SAAS,aAAa,YAAY,EAAE;AACpD,UAAM,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,EAAE,KAAK,KAAK,UAAU,aAAa,QAAQ,EAAE,WAAW,MAAM;AAE5G,YAAQ,OAAO,WAAW;AAC1B,YAAQ,QAAQ;AAChB,WAAO,MAAM,KAAK,UAAU,MAAM,KAAK;AAAA;AAAA,QAGnC,OAAO,UAAU,WAAW,aAAY,SAAS;AACrD,UAAM,WAAW;AACjB,UAAM,MAAM,KAAK,eAAe,YAAY,WAAW,aAAY,IAAI,SAAS;AAEhF,cAAU,mBAAK;AAGf,QAAI,CAAC,CAAC,SAAS,eAAe,CAAC,CAAC,SAAS,YAAY,cAAc;AACjE,YAAM,OAAO,OAAO,KAAK,SAAS,YAAY;AAC9C,YAAM,SAAS,KAAK;AACpB,UAAI;AAEJ,eAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,sBAAc,SAAS,YAAY,aAAa,KAAK;AACrD,YAAI,YAAY,WAAW,YAAY,QAAQ,YAC7C,YAAY,QAAQ,SAAS,kBAAkB,aAC/C,YAAY,QAAQ,aAAa,MAAM;AACvC,mBAAS,KAAK,YAAY,UAAU;AAAA;AAAA;AAAA;AAK1C,eAAW,WAAW,UAAU;AAC9B,UAAI,YAAY,MAAM,SAAS,SAAS;AAExC,UAAI,CAAC;AAAW;AAChB,UAAI,CAAC,MAAM,QAAQ;AAAY,oBAAY,CAAC;AAC5C,iBAAW,aAAa;AAAW,cAAM,UAAU,QAAQ;AAAA;AAE7D,YAAQ,WAAW;AACnB,WAAO,MAAM,KAAK,UAAU,MAAM,KAAK;AAAA;AAAA,QAgBnC,WAAW,WAAW,OAAO,SAAS,OAAO;AACjD,cAAU,MAAM,UAAU;AAC1B,cAAU,EAAE,SAAS,SAAS,EAAE,OAAO;AAEvC,QAAI,QAAQ,aAAa,MAAM;AAC7B,aAAO,KAAK,UAAU,MACpB,KAAK,eAAe,mBAAmB,WAAW,UAClD;AAAA;AAIJ,QAAI,OAAO,eAAe;AAAU,cAAQ,MAAM,UAAU;AAE5D,WAAO,MAAM,KAAK,UAAU,MAC1B,KAAK,eAAe,YAAY,WAAW,OAAO,SAAS,QAC3D;AAAA;AAAA,QAIE,OAAO,OAAO,WAAW,YAAY;AACzC,UAAM,UAAU,iCAAK,aAAL,EAAiB,MAAM,WAAW,QAAQ;AAE1D,WAAO,MAAM,KAAK,UAAU,MAC1B,KAAK,eAAe,YAAY,WAAW,SAAS,QACpD;AAAA;AAAA,QAIE,UAAU,OAAO,WAAW,OAAO,yBAAyB,4BAA4B,SAAS;AACrG,cAAU,MAAM,UAAU;AAE1B,UAAM,MAAM,KAAK,eAAe,gBAAgB,KAAK,WAAW,OAAO,yBAAyB,4BAA4B;AAE5H,YAAQ,OAAO,WAAW;AAC1B,YAAQ,QAAQ;AAEhB,WAAO,MAAM,KAAK,UAAU,MAAM,KAAK;AAAA;AAAA,QAGnC,UAAU,OAAO,WAAW,OAAO,yBAAyB,4BAA4B,SAAS;AACrG,cAAU,MAAM,UAAU;AAE1B,UAAM,MAAM,KAAK,eAAe,gBAAgB,KAAK,WAAW,OAAO,yBAAyB,4BAA4B;AAE5H,YAAQ,OAAO,WAAW;AAC1B,YAAQ,QAAQ;AAEhB,WAAO,MAAM,KAAK,UAAU,MAAM,KAAK;AAAA;AAAA,QAGnC,UAAU,WAAW,SAAS,mBAAmB,OAAO;AAC5D,cAAU,MAAM,UAAU;AAC1B,cAAU,EAAE,SAAS,SAAS;AAAA,MAC5B,KAAK;AAAA,MACL,OAAO;AAAA,MACP,MAAM,WAAW;AAAA;AAGnB,UAAM,MAAM,KAAK,eAAe,YAAY,WAAW,SAAS;AAEhE,QAAI,sBAAsB,QAAW;AACnC,YAAM,IAAI,MAAM;AAAA;AAGlB,UAAM,OAAO,MAAM,KAAK,UAAU,MAAM,KAAK;AAC7C,QAAI,CAAC,QAAQ,OAAO;AAClB,aAAO;AAAA;AAGT,UAAM,SAAS,OAAO,KAAK,qBAAqB;AAEhD,QAAI,CAAC,WAAW,CAAC,QAAQ,UAAU;AACjC,aAAO;AAAA;AAGT,UAAM,WAAW,QAAQ;AAEzB,QAAI,oBAAoB,UAAU,WAAW,oBAAoB,UAAU,OAAO;AAChF,UAAI,WAAW,MAAM;AACnB,eAAO,WAAW;AAAA;AAAA;AAGtB,QAAI,oBAAoB,UAAU,WAAW,oBAAoB,UAAU,QAAQ;AACjF,UAAI,WAAW,MAAM;AACnB,eAAO,SAAS,QAAQ;AAAA;AAAA;AAG5B,QAAI,oBAAoB,UAAU,MAAM;AACtC,UAAI,WAAW,QAAQ,CAAE,mBAAkB,OAAO;AAChD,eAAO,IAAI,KAAK;AAAA;AAAA;AAGpB,WAAO;AAAA;AAAA,QAGH,cACJ,WACA,aACA,YACA,aACA,cACA,gBACA,cACA,SACA;AACA,UAAM,MAAM,KAAK,eAAe,cAAc,WAAW,aAAa,YAAY,aAAa,cAAc,gBAAgB;AAC7H,cAAU,WAAW;AACrB,QAAI,KAAK;AACP,aAAO,MAAM,KAAK,UAAU,MAAM,KAAK;AAAA;AAAA;AAAA,QAIrC,YAAY,WAAW,aAAa,SAAS;AACjD,UAAM,MAAM,KAAK,eAAe,YAAY,WAAW;AACvD,cAAU,WAAW;AAErB,QAAI,KAAK;AACP,aAAO,MAAM,KAAK,UAAU,MAAM,KAAK;AAAA;AAAA;AAAA,QAIrC,cAAc,WAAW,gBAAgB,gBAAgB,SAAS;AACtE,UAAM,MAAM,KAAK,eAAe,cAAc,WAAW,gBAAgB;AACzE,cAAU,WAAW;AAErB,QAAI,KAAK;AACP,aAAO,MAAM,KAAK,UAAU,MAAM,KAAK;AAAA;AAAA;AAAA,QAyCrC,eAAe,cAAc,QAAQ,YAAY,UAAU,MAAM,cAAc,SAAS;AAC5F,UAAM,MAAM,KAAK,eAAe,eAAe,cAAc,QAAQ,YAAY,UAAU,MAAM,cAAc;AAC/G,cAAU,WAAW;AAErB,QAAI,KAAK;AACP,aAAO,MAAM,KAAK,UAAU,MAAM,KAAK;AAAA;AAAA;AAAA,QAsBrC,aAAa,cAAc,QAAQ,SAAS;AAChD,UAAM,MAAM,KAAK,eAAe,aAAa,cAAc;AAC3D,cAAU,WAAW;AAErB,QAAI,KAAK;AACP,aAAO,MAAM,KAAK,UAAU,MAAM,KAAK;AAAA;AAAA;AAAA,QAwBrC,eAAe,iBAAiB,QAAQ,iBAAiB,SAAS;AACtE,UAAM,MAAM,KAAK,eAAe,eAAe,iBAAiB,QAAQ;AACxE,cAAU,WAAW;AAErB,QAAI,KAAK;AACP,aAAO,MAAM,KAAK,UAAU,MAAM,KAAK;AAAA;AAAA;AAAA,EAS3C,cAAc;AAAA;AAAA,QAIR,kBAAkB,aAAa,OAAO,SAAS;AACnD,QAAI,CAAC,eAAe,CAAE,wBAAuB,cAAc;AACzD,YAAM,IAAI,MAAM;AAAA;AAGlB,QAAI,YAAY,UAAU,CAAC,OAAO;AAEhC;AAAA;AAGF,cAAU,iCAAK,UAAL,EAAc,aAAa,YAAY,UAAU;AAE3D,UAAM,MAAM,KAAK,eAAe,uBAAuB,OAAO;AAAA,MAC5D,QAAQ,YAAY;AAAA;AAGtB,QAAI,CAAC;AAAK;AAEV,WAAO,MAAM,KAAK,UAAU,MAAM,KAAK;AAAA;AAAA,QAGnC,iBAAiB,aAAa,SAAS;AAC3C,QAAI,CAAC,eAAe,CAAE,wBAAuB,cAAc;AACzD,YAAM,IAAI,MAAM;AAAA;AAGlB,cAAU,iCAAK,UAAL,EAAc,aAAa,YAAY,UAAU;AAC3D,YAAQ,YAAY,OAAO,YAAY,SAAS,YAAY,OAAO;AACnE,UAAM,MAAM,KAAK,eAAe,sBAAsB;AAEtD,WAAO,MAAM,KAAK,UAAU,MAAM,KAAK;AAAA;AAAA,QAGnC,iBAAiB,aAAa,SAAS;AAC3C,cAAU,iCAAK,UAAL,EAAc,aAAa,YAAY,UAAU;AAE3D,UAAM,MAAM,KAAK,eAAe,sBAAsB;AAEtD,QAAI,KAAK;AACP,aAAO,MAAM,KAAK,UAAU,MAAM,KAAK;AAAA;AAAA;AAAA,QAIrC,kBAAkB,aAAa,SAAS;AAC5C,QAAI,CAAC,eAAe,CAAE,wBAAuB,cAAc;AACzD,YAAM,IAAI,MAAM;AAAA;AAElB,QAAI,YAAY,QAAQ;AAEtB;AAAA;AAGF,cAAU,iCACL,UADK;AAAA,MAER,aAAa,YAAY,UAAU;AAAA,MACnC,oBAAoB;AAAA,MACpB,sBAAsB;AAAA;AAGxB,UAAM,MAAM,KAAK,eAAe,uBAAuB;AACvD,UAAM,UAAU,KAAK,UAAU,MAAM,KAAK;AAE1C,gBAAY,WAAW;AAEvB,WAAO,MAAM;AAAA;AAAA,QAGT,oBAAoB,aAAa,SAAS;AAC9C,QAAI,CAAC,eAAe,CAAE,wBAAuB,cAAc;AACzD,YAAM,IAAI,MAAM;AAAA;AAGlB,cAAU,iCACL,UADK;AAAA,MAER,aAAa,YAAY,UAAU;AAAA,MACnC,oBAAoB;AAAA,MACpB,sBAAsB;AAAA;AAExB,YAAQ,YAAY,OAAO,YAAY,SAAS,YAAY,OAAO;AACnE,UAAM,MAAM,KAAK,eAAe,yBAAyB;AACzD,UAAM,UAAU,KAAK,UAAU,MAAM,KAAK;AAE1C,gBAAY,WAAW;AAEvB,WAAO,MAAM;AAAA;AAAA;AAIjB,QAAQ,iBAAiB;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/sqlite/sqlite-utils.js":{"lineLengths":[38,82,33,25,23,66,2,19,58,3,65,7,64,22,13,63,3,1,40,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/dialects/sqlite/sqlite-utils.ts"],"sourcesContent":["import type { Sequelize } from '../../sequelize.js';\nimport type { QueryOptions } from '../abstract/query-interface.js';\n\nexport async function withSqliteForeignKeysOff<T>(sequelize: Sequelize, options: QueryOptions, cb: () => Promise<T>): Promise<T> {\n  try {\n    await sequelize.query('PRAGMA foreign_keys = OFF', options);\n\n    return await cb();\n  } finally {\n    await sequelize.query('PRAGMA foreign_keys = ON', options);\n  }\n}\n"],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAGA,wCAAkD,WAAsB,SAAuB,IAAkC;AAC/H,MAAI;AACF,UAAM,UAAU,MAAM,6BAA6B;AAEnD,WAAO,MAAM;AAAA,YACb;AACA,UAAM,UAAU,MAAM,4BAA4B;AAAA;AAAA;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/utils/sql.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,46,3,71,61,63,21,29,21,3,89,132,3,78,63,50,18,40,23,23,27,34,29,41,46,30,19,45,25,7,15,5,19,99,25,43,7,15,5,46,25,17,7,67,97,136,51,42,7,15,5,30,26,36,7,15,5,25,53,31,7,15,5,42,22,15,5,23,22,204,15,5,62,33,15,5,61,28,15,5,23,44,44,17,7,67,97,35,126,50,17,7,15,5,46,44,70,17,7,67,94,102,29,17,7,61,112,104,7,109,53,56,35,15,5,51,44,70,17,7,40,49,17,7,72,84,40,160,7,109,53,31,35,5,3,17,85,15,3,64,16,1,35,50,1,42,22,34,27,24,12,5,23,3,17,1,31,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/utils/sql.ts"],"sourcesContent":["import isPlainObject from 'lodash/isPlainObject';\nimport type { AbstractDialect } from '../dialects/abstract/index.js';\nimport { escape as escapeSqlValue } from '../sql-string';\n\ntype BindOrReplacements = { [key: string]: unknown } | unknown[];\n\n/**\n * Inlines replacements in places where they would be valid SQL values.\n *\n * @param sqlString The SQL that contains the replacements\n * @param dialect The dialect of the SQL\n * @param replacements if provided, this method will replace ':named' replacements & positional replacements (?)\n *\n * @returns The SQL with replacements rewritten in their dialect-specific syntax.\n */\nexport function injectReplacements(\n  sqlString: string,\n  dialect: AbstractDialect,\n  replacements: BindOrReplacements\n): string {\n  if (replacements == null) {\n    return sqlString;\n  }\n\n  if (!Array.isArray(replacements) && !isPlainObject(replacements)) {\n    throw new TypeError(`\"replacements\" must be an array or a plain object, but received ${JSON.stringify(replacements)} instead.`);\n  }\n\n  const isNamedReplacements = isPlainObject(replacements);\n  const isPositionalReplacements = Array.isArray(replacements);\n  let lastConsumedPositionalReplacementIndex = -1;\n\n  let output = '';\n\n  let currentDollarStringTagName = null;\n  let isString = false;\n  let isColumn = false;\n  let previousSliceEnd = 0;\n  let isSingleLineComment = false;\n  let isCommentBlock = false;\n  let stringIsBackslashEscapable = false;\n\n  for (let i = 0; i < sqlString.length; i++) {\n    const char = sqlString[i];\n\n    if (isColumn) {\n      if (char === dialect.TICK_CHAR_RIGHT) {\n        isColumn = false;\n      }\n\n      continue;\n    }\n\n    if (isString) {\n      if (\n        char === '\\'' &&\n        (!stringIsBackslashEscapable || !isBackslashEscaped(sqlString, i - 1))\n      ) {\n        isString = false;\n        stringIsBackslashEscapable = false;\n      }\n\n      continue;\n    }\n\n    if (currentDollarStringTagName !== null) {\n      if (char !== '$') {\n        continue;\n      }\n\n      const remainingString = sqlString.slice(i, sqlString.length);\n\n      const dollarStringStartMatch = remainingString.match(/^\\$(?<name>[a-z_][0-9a-z_]*)?(\\$)/i);\n      const tagName = dollarStringStartMatch?.groups?.name || '';\n      if (currentDollarStringTagName === tagName) {\n        currentDollarStringTagName = null;\n      }\n\n      continue;\n    }\n\n    if (isSingleLineComment) {\n      if (char === '\\n') {\n        isSingleLineComment = false;\n      }\n\n      continue;\n    }\n\n    if (isCommentBlock) {\n      if (char === '*' && sqlString[i + 1] === '/') {\n        isCommentBlock = false;\n      }\n\n      continue;\n    }\n\n    if (char === dialect.TICK_CHAR_LEFT) {\n      isColumn = true;\n      continue;\n    }\n\n    if (char === '\\'') {\n      isString = true;\n\n      // The following query is supported in almost all dialects,\n      //  SELECT E'test';\n      // but postgres interprets it as an E-prefixed string, while other dialects interpret it as\n      //  SELECT E 'test';\n      // which selects the type E and aliases it to 'test'.\n\n      stringIsBackslashEscapable =\n        // all ''-style strings in this dialect can be backslash escaped\n        dialect.canBackslashEscape() ||\n        // checking if this is a postgres-style E-prefixed string, which also supports backslash escaping\n        dialect.supports.escapeStringConstants &&\n          // is this a E-prefixed string, such as `E'abc'`, `e'abc'` ?\n          (sqlString[i - 1] === 'E' || sqlString[i - 1] === 'e') &&\n          // reject things such as `AE'abc'` (the prefix must be exactly E)\n          canPrecedeNewToken(sqlString[i - 2]);\n\n      continue;\n    }\n\n    if (char === '-' && sqlString.slice(i, i + 3) === '-- ') {\n      isSingleLineComment = true;\n      continue;\n    }\n\n    if (char === '/' && sqlString.slice(i, i + 2) === '/*') {\n      isCommentBlock = true;\n      continue;\n    }\n\n    // either the start of a $bind parameter, or the start of a $tag$string$tag$\n    if (char === '$') {\n      const previousChar = sqlString[i - 1];\n\n      // we are part of an identifier\n      if (/[0-9a-z_]/i.test(previousChar)) {\n        continue;\n      }\n\n      const remainingString = sqlString.slice(i, sqlString.length);\n\n      const dollarStringStartMatch = remainingString.match(/^\\$(?<name>[a-z_][0-9a-z_]*)?(\\$)/i);\n      if (dollarStringStartMatch) {\n        currentDollarStringTagName = dollarStringStartMatch.groups?.name ?? '';\n        i += dollarStringStartMatch[0].length - 1;\n\n        continue;\n      }\n\n      continue;\n    }\n\n    if (isNamedReplacements && char === ':') {\n      const previousChar = sqlString[i - 1];\n      // we want to be conservative with what we consider to be a replacement to avoid risk of conflict with potential operators\n      // users need to add a space before the bind parameter (except after '(', ',', and '=', '[' (for arrays))\n      if (!canPrecedeNewToken(previousChar) && previousChar !== '[') {\n        continue;\n      }\n\n      const remainingString = sqlString.slice(i, sqlString.length);\n\n      const match = remainingString.match(/^:(?<name>[a-z_][0-9a-z_]*)(?:\\)|,|$|\\s|::|;|])/i);\n      const replacementName = match?.groups?.name;\n      if (!replacementName) {\n        continue;\n      }\n\n      // @ts-expect-error -- isPlainObject does not tell typescript that replacements is a plain object, not an array\n      const replacementValue = replacements[replacementName];\n      if (!Object.prototype.hasOwnProperty.call(replacements, replacementName) || replacementValue === undefined) {\n        throw new Error(`Named replacement \":${replacementName}\" has no entry in the replacement map.`);\n      }\n\n      const escapedReplacement = escapeSqlValue(replacementValue, undefined, dialect.name, true);\n\n      // add everything before the bind parameter name\n      output += sqlString.slice(previousSliceEnd, i);\n      // continue after the bind parameter name\n      previousSliceEnd = i + replacementName.length + 1;\n\n      output += escapedReplacement;\n\n      continue;\n    }\n\n    if (isPositionalReplacements && char === '?') {\n      const previousChar = sqlString[i - 1];\n\n      // we want to be conservative with what we consider to be a replacement to avoid risk of conflict with potential operators\n      // users need to add a space before the bind parameter (except after '(', ',', and '=', '[' (for arrays))\n      // -> [ is temporarily added to allow 'ARRAY[:name]' to be replaced\n      // https://github.com/sequelize/sequelize/issues/14410 will make this obsolete.\n      if (!canPrecedeNewToken(previousChar) && previousChar !== '[') {\n        continue;\n      }\n\n      // don't parse ?| and ?& operators as replacements\n      const nextChar = sqlString[i + 1];\n      if (nextChar === '|' || nextChar === '&') {\n        continue;\n      }\n\n      const replacementIndex = ++lastConsumedPositionalReplacementIndex;\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore -- ts < 4.4 loses the information that 'replacements' is an array when using 'isPositionalReplacements' instead of 'Array.isArray'\n      //  but performance matters here.\n      const replacementValue = replacements[lastConsumedPositionalReplacementIndex];\n\n      if (replacementValue === undefined) {\n        throw new Error(`Positional replacement (?) ${replacementIndex} has no entry in the replacement map (replacements[${replacementIndex}] is undefined).`);\n      }\n\n      const escapedReplacement = escapeSqlValue(replacementValue as any, undefined, dialect.name, true);\n\n      // add everything before the bind parameter name\n      output += sqlString.slice(previousSliceEnd, i);\n      // continue after the bind parameter name\n      previousSliceEnd = i + 1;\n\n      output += escapedReplacement;\n    }\n  }\n\n  if (isString) {\n    throw new Error(\n      `The following SQL query includes an unterminated string literal:\\n${sqlString}`\n    );\n  }\n\n  output += sqlString.slice(previousSliceEnd, sqlString.length);\n\n  return output;\n}\n\nfunction canPrecedeNewToken(char: string | undefined): boolean {\n  return char === undefined || /[\\s(>,=]/.test(char);\n}\n\nfunction isBackslashEscaped(string: string, pos: number): boolean {\n  let escaped = false;\n  for (let i = pos; i >= 0; i--) {\n    const char = string[i];\n    if (char !== '\\\\') {\n      break;\n    }\n\n    escaped = !escaped;\n  }\n\n  return escaped;\n}\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/postgres/index.js":{"lineLengths":[13,28,47,58,33,52,55,64,47,26,12,31,68,46,21,15,7,85,3,24,61,3,1,95,25,18,28,22,17,19,4,20,16,13,15,16,29,19,24,10,23,13,16,24,18,4,12,51,52,25,25,4,16,14,14,17,15,18,13,14,15,17,30,19,29,3,51,40,48,44,42,79,80,33,41,49,33,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/dialects/postgres/index.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst AbstractDialect = require('../abstract');\nconst ConnectionManager = require('./connection-manager');\nconst Query = require('./query');\nconst QueryGenerator = require('./query-generator');\nconst DataTypes = require('../../data-types').postgres;\nconst { PostgresQueryInterface } = require('./query-interface');\n\nclass PostgresDialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.queryGenerator = new QueryGenerator({\n      _dialect: this,\n      sequelize\n    });\n    this.queryInterface = new PostgresQueryInterface(\n      sequelize,\n      this.queryGenerator\n    );\n  }\n\n  canBackslashEscape() {\n    // postgres can use \\ to escape if one of these is true:\n    // - standard_conforming_strings is off\n    // - the string is prefixed with E (out of scope for this method)\n\n    return !this.sequelize.options.standardConformingStrings;\n  }\n}\n\nPostgresDialect.prototype.supports = _.merge(\n  _.cloneDeep(AbstractDialect.prototype.supports),\n  {\n    'DEFAULT VALUES': true,\n    EXCEPTION: true,\n    'ON DUPLICATE KEY': false,\n    'ORDER NULLS': true,\n    returnValues: {\n      returning: true\n    },\n    bulkDefault: true,\n    schemas: true,\n    lock: true,\n    lockOf: true,\n    lockKey: true,\n    lockOuterJoinFailure: true,\n    skipLocked: true,\n    forShare: 'FOR SHARE',\n    index: {\n      concurrently: true,\n      using: 2,\n      where: true,\n      functionBased: true,\n      operator: true\n    },\n    inserts: {\n      onConflictDoNothing: ' ON CONFLICT DO NOTHING',\n      updateOnDuplicate: ' ON CONFLICT DO UPDATE SET',\n      conflictFields: true,\n      onConflictWhere: true\n    },\n    NUMERIC: true,\n    ARRAY: true,\n    RANGE: true,\n    GEOMETRY: true,\n    REGEXP: true,\n    GEOGRAPHY: true,\n    JSON: true,\n    JSONB: true,\n    HSTORE: true,\n    TSVECTOR: true,\n    deferrableConstraints: true,\n    searchPath: true,\n    escapeStringConstants: true\n  }\n);\n\nPostgresDialect.prototype.defaultVersion = '9.5.0'; // minimum supported version\nPostgresDialect.prototype.Query = Query;\nPostgresDialect.prototype.DataTypes = DataTypes;\nPostgresDialect.prototype.name = 'postgres';\nPostgresDialect.prototype.TICK_CHAR = '\"';\nPostgresDialect.prototype.TICK_CHAR_LEFT = PostgresDialect.prototype.TICK_CHAR;\nPostgresDialect.prototype.TICK_CHAR_RIGHT = PostgresDialect.prototype.TICK_CHAR;\n\nmodule.exports = PostgresDialect;\nmodule.exports.default = PostgresDialect;\nmodule.exports.PostgresDialect = PostgresDialect;\n"],"mappings":";AAEA,MAAM,IAAI,QAAQ;AAClB,MAAM,kBAAkB,QAAQ;AAChC,MAAM,oBAAoB,QAAQ;AAClC,MAAM,QAAQ,QAAQ;AACtB,MAAM,iBAAiB,QAAQ;AAC/B,MAAM,YAAY,QAAQ,oBAAoB;AAC9C,MAAM,EAAE,2BAA2B,QAAQ;AAE3C,8BAA8B,gBAAgB;AAAA,EAC5C,YAAY,WAAW;AACrB;AACA,SAAK,YAAY;AACjB,SAAK,oBAAoB,IAAI,kBAAkB,MAAM;AACrD,SAAK,iBAAiB,IAAI,eAAe;AAAA,MACvC,UAAU;AAAA,MACV;AAAA;AAEF,SAAK,iBAAiB,IAAI,uBACxB,WACA,KAAK;AAAA;AAAA,EAIT,qBAAqB;AAKnB,WAAO,CAAC,KAAK,UAAU,QAAQ;AAAA;AAAA;AAInC,gBAAgB,UAAU,WAAW,EAAE,MACrC,EAAE,UAAU,gBAAgB,UAAU,WACtC;AAAA,EACE,kBAAkB;AAAA,EAClB,WAAW;AAAA,EACX,oBAAoB;AAAA,EACpB,eAAe;AAAA,EACf,cAAc;AAAA,IACZ,WAAW;AAAA;AAAA,EAEb,aAAa;AAAA,EACb,SAAS;AAAA,EACT,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,sBAAsB;AAAA,EACtB,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,OAAO;AAAA,IACL,cAAc;AAAA,IACd,OAAO;AAAA,IACP,OAAO;AAAA,IACP,eAAe;AAAA,IACf,UAAU;AAAA;AAAA,EAEZ,SAAS;AAAA,IACP,qBAAqB;AAAA,IACrB,mBAAmB;AAAA,IACnB,gBAAgB;AAAA,IAChB,iBAAiB;AAAA;AAAA,EAEnB,SAAS;AAAA,EACT,OAAO;AAAA,EACP,OAAO;AAAA,EACP,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,uBAAuB;AAAA,EACvB,YAAY;AAAA,EACZ,uBAAuB;AAAA;AAI3B,gBAAgB,UAAU,iBAAiB;AAC3C,gBAAgB,UAAU,QAAQ;AAClC,gBAAgB,UAAU,YAAY;AACtC,gBAAgB,UAAU,OAAO;AACjC,gBAAgB,UAAU,YAAY;AACtC,gBAAgB,UAAU,iBAAiB,gBAAgB,UAAU;AACrE,gBAAgB,UAAU,kBAAkB,gBAAgB,UAAU;AAEtE,OAAO,UAAU;AACjB,OAAO,QAAQ,UAAU;AACzB,OAAO,QAAQ,kBAAkB;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/abstract/index.js":{"lineLengths":[13,23,24,17,3,1,38,18,26,21,27,27,23,16,20,21,22,18,26,23,16,4,21,17,21,47,23,15,4,19,16,12,25,29,28,27,25,4,16,19,24,25,17,19,16,21,20,4,10,18,18,18,24,16,16,25,19,4,21,23,14,31,30,2,33,49,41,33,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/dialects/abstract/index.js"],"sourcesContent":["'use strict';\n\nclass AbstractDialect {\n  /**\n   * Whether this dialect can use \\ in strings to escape string delimiters.\n   *\n   * @returns {boolean}\n   */\n  canBackslashEscape() {\n    return false;\n  }\n}\n\nAbstractDialect.prototype.supports = {\n  'DEFAULT': true,\n  'DEFAULT VALUES': false,\n  'VALUES ()': false,\n  'LIMIT ON UPDATE': false,\n  'ON DUPLICATE KEY': true,\n  'ORDER NULLS': false,\n  'UNION': true,\n  'UNION ALL': true,\n  'RIGHT JOIN': true,\n\n  /* does the dialect support returning values for inserted/updated fields */\n  returnValues: false,\n\n  /* features specific to autoIncrement values */\n  autoIncrement: {\n    /* does the dialect require modification of insert queries when inserting auto increment fields */\n    identityInsert: false,\n\n    /* does the dialect support inserting default/null values for autoincrement fields */\n    defaultValue: true,\n\n    /* does the dialect support updating autoincrement fields */\n    update: true\n  },\n  /* Do we need to say DEFAULT for bulk insert */\n  bulkDefault: false,\n  schemas: false,\n  transactions: true,\n  settingIsolationLevelDuringTransaction: true,\n  transactionOptions: {\n    type: false\n  },\n  migrations: true,\n  upserts: true,\n  inserts: {\n    ignoreDuplicates: '', /* dialect specific words for INSERT IGNORE or DO NOTHING */\n    updateOnDuplicate: false, /* whether dialect supports ON DUPLICATE KEY UPDATE */\n    onConflictDoNothing: '', /* dialect specific words for ON CONFLICT DO NOTHING */\n    onConflictWhere: false, /* whether dialect supports ON CONFLICT WHERE */\n    conflictFields: false /* whether the dialect supports specifying conflict fields or not */\n  },\n  constraints: {\n    restrict: true,\n    addConstraint: true,\n    dropConstraint: true,\n    unique: true,\n    default: false,\n    check: true,\n    foreignKey: true,\n    primaryKey: true\n  },\n  index: {\n    collate: true,\n    length: false,\n    parser: false,\n    concurrently: false,\n    type: false,\n    using: true,\n    functionBased: false,\n    operator: false\n  },\n  groupedLimit: true,\n  indexViaAlter: false,\n  JSON: false,\n  /**\n   * This dialect supports marking a column's constraints as deferrable.\n   * e.g. 'DEFERRABLE' and 'INITIALLY DEFERRED'\n   */\n  deferrableConstraints: false,\n  escapeStringConstants: false\n};\n\nmodule.exports = AbstractDialect;\nmodule.exports.AbstractDialect = AbstractDialect;\nmodule.exports.default = AbstractDialect;\n"],"mappings":";AAEA,sBAAsB;AAAA,EAMpB,qBAAqB;AACnB,WAAO;AAAA;AAAA;AAIX,gBAAgB,UAAU,WAAW;AAAA,EACnC,WAAW;AAAA,EACX,kBAAkB;AAAA,EAClB,aAAa;AAAA,EACb,mBAAmB;AAAA,EACnB,oBAAoB;AAAA,EACpB,eAAe;AAAA,EACf,SAAS;AAAA,EACT,aAAa;AAAA,EACb,cAAc;AAAA,EAGd,cAAc;AAAA,EAGd,eAAe;AAAA,IAEb,gBAAgB;AAAA,IAGhB,cAAc;AAAA,IAGd,QAAQ;AAAA;AAAA,EAGV,aAAa;AAAA,EACb,SAAS;AAAA,EACT,cAAc;AAAA,EACd,wCAAwC;AAAA,EACxC,oBAAoB;AAAA,IAClB,MAAM;AAAA;AAAA,EAER,YAAY;AAAA,EACZ,SAAS;AAAA,EACT,SAAS;AAAA,IACP,kBAAkB;AAAA,IAClB,mBAAmB;AAAA,IACnB,qBAAqB;AAAA,IACrB,iBAAiB;AAAA,IACjB,gBAAgB;AAAA;AAAA,EAElB,aAAa;AAAA,IACX,UAAU;AAAA,IACV,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,YAAY;AAAA;AAAA,EAEd,OAAO;AAAA,IACL,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,cAAc;AAAA,IACd,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,UAAU;AAAA;AAAA,EAEZ,cAAc;AAAA,EACd,eAAe;AAAA,EACf,MAAM;AAAA,EAKN,uBAAuB;AAAA,EACvB,uBAAuB;AAAA;AAGzB,OAAO,UAAU;AACjB,OAAO,QAAQ,kBAAkB;AACjC,OAAO,QAAQ,UAAU;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/postgres/connection-manager.js":{"lineLengths":[13,28,76,49,51,48,33,46,44,38,59,35,58,30,48,67,29,28,47,3,32,45,82,6,45,67,6,49,43,44,28,19,78,65,59,33,19,69,7,13,5,52,51,48,43,43,9,53,53,9,13,5,47,33,15,63,42,15,73,7,3,22,50,3,31,35,40,54,3,25,34,45,13,17,13,17,12,7,30,73,6,32,63,27,14,26,17,20,28,24,34,46,23,18,16,10,5,63,28,64,45,40,32,63,76,117,13,18,45,80,18,9,8,32,36,25,97,9,8,42,42,71,7,36,25,44,85,9,18,25,31,34,72,22,31,67,22,34,71,22,28,72,22,22,65,22,13,18,61,11,16,39,56,31,9,9,7,39,33,63,36,7,19,123,53,5,62,100,98,5,202,154,66,5,53,73,19,71,14,95,7,5,16,36,5,127,49,5,22,3,32,29,78,13,5,69,3,24,55,3,41,67,37,87,13,5,521,66,32,40,30,7,5,29,52,36,32,39,25,51,17,7,52,23,59,25,59,28,69,7,5,36,32,47,3,23,25,48,3,1,35,53,43,46,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/dialects/postgres/connection-manager.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst AbstractConnectionManager = require('../abstract/connection-manager');\nconst { logger } = require('../../utils/logger');\nconst debug = logger.debugContext('connection:pg');\nconst sequelizeErrors = require('../../errors');\nconst semver = require('semver');\nconst dataTypes = require('../../data-types');\nconst momentTz = require('moment-timezone');\nconst { promisify } = require('util');\n\nclass ConnectionManager extends AbstractConnectionManager {\n  constructor(dialect, sequelize) {\n    sequelize.config.port = sequelize.config.port || 5432;\n    super(dialect, sequelize);\n\n    const pgLib = this._loadDialectModule('pg');\n    this.lib = this.sequelize.config.native ? pgLib.native : pgLib;\n\n    this._clearDynamicOIDs();\n    this._clearTypeParser();\n    this.refreshTypeParser(dataTypes.postgres);\n  }\n\n  // Expose this as a method so that the parsing may be updated when the user has added additional, custom types\n  _refreshTypeParser(dataType) {\n    const arrayParserBuilder = parser => {\n      return value => this.lib.types.arrayParser.create(value, parser).parse();\n    };\n    const rangeParserBuilder = parser => {\n      return value => dataType.parse(value, { parser });\n    };\n\n    // Set range parsers\n    if (dataType.key.toLowerCase() === 'range') {\n      for (const name in this.nameOidMap) {\n        const entry = this.nameOidMap[name];\n        if (! entry.rangeOid) continue;\n\n        const rangeParser = rangeParserBuilder(this.getTypeParser(entry.oid));\n        const arrayRangeParser = arrayParserBuilder(rangeParser);\n\n        this.oidParserMap.set(entry.rangeOid, rangeParser);\n        if (! entry.arrayRangeOid) continue;\n        this.oidParserMap.set(entry.arrayRangeOid, arrayRangeParser);\n      }\n      return;\n    }\n\n    // Create parsers for normal or enum data types\n    const parser = value => dataType.parse(value);\n    const arrayParser = arrayParserBuilder(parser);\n\n    // Set enum parsers\n    if (dataType.key.toLowerCase() === 'enum') {\n      this.enumOids.oids.forEach(oid => {\n        this.oidParserMap.set(oid, parser);\n      });\n      this.enumOids.arrayOids.forEach(arrayOid => {\n        this.oidParserMap.set(arrayOid, arrayParser);\n      });\n      return;\n    }\n\n    // Set parsers for normal data types\n    dataType.types.postgres.forEach(name => {\n      if (! this.nameOidMap[name]) return;\n      this.oidParserMap.set(this.nameOidMap[name].oid, parser);\n\n      if (! this.nameOidMap[name].arrayOid) return;\n      this.oidParserMap.set(this.nameOidMap[name].arrayOid, arrayParser);\n    });\n  }\n\n  _clearTypeParser() {\n    this.oidParserMap = new Map();\n  }\n\n  getTypeParser(oid, ...args) {\n    if (this.oidParserMap.get(oid)) return this.oidParserMap.get(oid);\n\n    return this.lib.types.getTypeParser(oid, ...args);\n  }\n\n  async connect(config) {\n    config.user = config.username;\n    const connectionConfig = _.pick(config, [\n      'user', 'password', 'host', 'database', 'port'\n    ]);\n\n    connectionConfig.types = {\n      getTypeParser: ConnectionManager.prototype.getTypeParser.bind(this)\n    };\n\n    if (config.dialectOptions) {\n      _.merge(connectionConfig,\n        _.pick(config.dialectOptions, [\n        // see [http://www.postgresql.org/docs/9.3/static/runtime-config-logging.html#GUC-APPLICATION-NAME]\n          'application_name',\n          // choose the SSL mode with the PGSSLMODE environment variable\n          // object format: [https://github.com/brianc/node-postgres/blob/ee19e74ffa6309c9c5e8e01746261a8f651661f8/lib/connection.js#L79]\n          // see also [http://www.postgresql.org/docs/9.3/static/libpq-ssl.html]\n          'ssl',\n          // In addition to the values accepted by the corresponding server,\n          // you can use \"auto\" to determine the right encoding from the\n          // current locale in the client (LC_CTYPE environment variable on Unix systems)\n          'client_encoding',\n          // !! DO NOT SET THIS TO TRUE !!\n          // (unless you know what you're doing)\n          // see [http://www.postgresql.org/message-id/flat/bc9549a50706040852u27633f41ib1e6b09f8339d845@mail.gmail.com#bc9549a50706040852u27633f41ib1e6b09f8339d845@mail.gmail.com]\n          'binary',\n          // This should help with backends incorrectly considering idle clients to be dead and prematurely disconnecting them.\n          // this feature has been added in pg module v6.0.0, check pg/CHANGELOG.md\n          'keepAlive',\n          // Times out queries after a set time in milliseconds in the database end. Added in pg v7.3\n          'statement_timeout',\n          // Times out queries after a set time in milliseconds in client end, query would be still running in database end.\n          'query_timeout',\n          // Number of milliseconds to wait for connection, default is no timeout.\n          'connectionTimeoutMillis',\n          // Terminate any session with an open transaction that has been idle for longer than the specified duration in milliseconds. Added in pg v7.17.0 only supported in postgres >= 10\n          'idle_in_transaction_session_timeout',\n          // Maximum wait time for lock requests in milliseconds. Added in pg v8.8.0.\n          'lock_timeout',\n          // Postgres allows additional session variables to be configured in the connection string in the `options` param.\n          // see [https://www.postgresql.org/docs/14/libpq-connect.html#LIBPQ-CONNECT-OPTIONS]\n          'options',\n          // The stream acts as a user-defined socket factory for postgres. In particular, it enables IAM autentication\n          // with Google Cloud SQL. see: https://github.com/sequelize/sequelize/issues/16001#issuecomment-1561136388\n          'stream',\n        ]));\n    }\n\n    const connection = await new Promise((resolve, reject) => {\n      let responded = false;\n\n      const connection = new this.lib.Client(connectionConfig);\n\n      const parameterHandler = message => {\n        switch (message.parameterName) {\n          case 'server_version':\n            if (this.sequelize.options.databaseVersion === 0) {\n              const version = semver.coerce(message.parameterValue).version;\n              this.sequelize.options.databaseVersion = semver.valid(version)\n                ? version\n                : this.dialect.defaultVersion;\n            }\n            break;\n          case 'standard_conforming_strings':\n            connection['standard_conforming_strings'] = message.parameterValue;\n            break;\n        }\n      };\n\n      const endHandler = () => {\n        debug('connection timeout');\n        if (!responded) {\n          reject(new sequelizeErrors.ConnectionTimedOutError(new Error('Connection timed out')));\n        }\n      };\n\n      // If we didn't ever hear from the client.connect() callback the connection timeout\n      // node-postgres does not treat this as an error since no active query was ever emitted\n      connection.once('end', endHandler);\n\n      if (!this.sequelize.config.native) {\n        // Receive various server parameters for further configuration\n        connection.connection.on('parameterStatus', parameterHandler);\n      }\n\n      connection.connect(err => {\n        responded = true;\n\n        if (!this.sequelize.config.native) {\n          // remove parameter handler\n          connection.connection.removeListener('parameterStatus', parameterHandler);\n        }\n\n        if (err) {\n          if (err.code) {\n            switch (err.code) {\n              case 'ECONNREFUSED':\n                reject(new sequelizeErrors.ConnectionRefusedError(err));\n                break;\n              case 'ENOTFOUND':\n                reject(new sequelizeErrors.HostNotFoundError(err));\n                break;\n              case 'EHOSTUNREACH':\n                reject(new sequelizeErrors.HostNotReachableError(err));\n                break;\n              case 'EINVAL':\n                reject(new sequelizeErrors.InvalidConnectionError(err));\n                break;\n              default:\n                reject(new sequelizeErrors.ConnectionError(err));\n                break;\n            }\n          } else {\n            reject(new sequelizeErrors.ConnectionError(err));\n          }\n        } else {\n          debug('connection acquired');\n          connection.removeListener('end', endHandler);\n          resolve(connection);\n        }\n      });\n    });\n\n    // Don't let a Postgres restart (or error) to take down the whole app\n    connection.on('error', error => {\n      connection._invalid = true;\n      debug(`connection error ${error.code || error.message}`);\n      this.pool.destroy(connection);\n    });\n\n    let query = '';\n\n    if (this.sequelize.options.standardConformingStrings !== false && connection['standard_conforming_strings'] !== 'on') {\n      // Disable escape characters in strings\n      // see https://github.com/sequelize/sequelize/issues/3545 (security issue)\n      // see https://www.postgresql.org/docs/current/static/runtime-config-compatible.html#GUC-STANDARD-CONFORMING-STRINGS\n      query += 'SET standard_conforming_strings=on;';\n    }\n\n    if (this.sequelize.options.clientMinMessages !== undefined) {\n      console.warn('Usage of \"options.clientMinMessages\" is deprecated and will be removed in v7.');\n      console.warn('Please use the sequelize option \"dialectOptions.clientMinMessages\" instead.');\n    }\n\n    // Redshift dosen't support client_min_messages, use 'ignore' to skip this settings.\n    // If no option, the default value in sequelize is 'warning'\n    if ( !( config.dialectOptions && config.dialectOptions.clientMinMessages && config.dialectOptions.clientMinMessages.toLowerCase() === 'ignore' ||\n            this.sequelize.options.clientMinMessages === false ) ) {\n      const clientMinMessages = config.dialectOptions && config.dialectOptions.clientMinMessages || this.sequelize.options.clientMinMessages || 'warning';\n      query += `SET client_min_messages TO ${clientMinMessages};`;\n\n    }\n\n    if (!this.sequelize.config.keepDefaultTimezone) {\n      const isZone = !!momentTz.tz.zone(this.sequelize.options.timezone);\n      if (isZone) {\n        query += `SET TIME ZONE '${this.sequelize.options.timezone}';`;\n      } else {\n        query += `SET TIME ZONE INTERVAL '${this.sequelize.options.timezone}' HOUR TO MINUTE;`;\n      }\n    }\n\n    if (query) {\n      await connection.query(query);\n    }\n    if (Object.keys(this.nameOidMap).length === 0 &&\n      this.enumOids.oids.length === 0 &&\n      this.enumOids.arrayOids.length === 0) {\n      await this._refreshDynamicOIDs(connection);\n    }\n\n    return connection;\n  }\n\n  async disconnect(connection) {\n    if (connection._ending) {\n      debug('connection tried to disconnect but was already at ENDING state');\n      return;\n    }\n\n    return await promisify(callback => connection.end(callback))();\n  }\n\n  validate(connection) {\n    return !connection._invalid && !connection._ending;\n  }\n\n  async _refreshDynamicOIDs(connection) {\n    const databaseVersion = this.sequelize.options.databaseVersion;\n    const supportedVersion = '8.3.0';\n\n    // Check for supported version\n    if ( (databaseVersion && semver.gte(databaseVersion, supportedVersion)) === false) {\n      return;\n    }\n\n    const results = await (connection || this.sequelize).query(\n      'WITH ranges AS (' +\n      '  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,' +\n      '         pg_type.typarray AS rngtyparray, pg_range.rngsubtype' +\n      '    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid' +\n      ')' +\n      'SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,' +\n      '       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray' +\n      '  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype' +\n      ' WHERE (pg_type.typtype IN(\\'b\\', \\'e\\'));'\n    );\n\n    let result = Array.isArray(results) ? results.pop() : results;\n\n    // When searchPath is prepended then two statements are executed and the result is\n    // an array of those two statements. First one is the SET search_path and second is\n    // the SELECT query result.\n    if (Array.isArray(result)) {\n      if (result[0].command === 'SET') {\n        result = result.pop();\n      }\n    }\n\n    const newNameOidMap = {};\n    const newEnumOids = { oids: [], arrayOids: [] };\n\n    for (const row of result.rows) {\n      // Mapping enums, handled separatedly\n      if (row.typtype === 'e') {\n        newEnumOids.oids.push(row.oid);\n        if (row.typarray) newEnumOids.arrayOids.push(row.typarray);\n        continue;\n      }\n\n      // Mapping base types and their arrays\n      newNameOidMap[row.typname] = { oid: row.oid };\n      if (row.typarray) newNameOidMap[row.typname].arrayOid = row.typarray;\n\n      // Mapping ranges(of base types) and their arrays\n      if (row.rngtypid) {\n        newNameOidMap[row.typname].rangeOid = row.rngtypid;\n        if (row.rngtyparray) newNameOidMap[row.typname].arrayRangeOid = row.rngtyparray;\n      }\n    }\n\n    // Replace all OID mappings. Avoids temporary empty OID mappings.\n    this.nameOidMap = newNameOidMap;\n    this.enumOids = newEnumOids;\n\n    this.refreshTypeParser(dataTypes.postgres);\n  }\n\n  _clearDynamicOIDs() {\n    this.nameOidMap = {};\n    this.enumOids = { oids: [], arrayOids: [] };\n  }\n}\n\nmodule.exports = ConnectionManager;\nmodule.exports.ConnectionManager = ConnectionManager;\nmodule.exports.default = ConnectionManager;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/abstract/connection-manager.js":{"lineLengths":[13,57,28,33,39,49,57,42,25,35,49,31,25,27,31,54,32,68,5,49,13,13,16,19,17,41,7,21,3,32,37,68,47,44,16,114,9,7,7,3,34,9,52,64,7,48,51,7,33,19,44,54,98,9,73,7,16,5,3,26,21,13,5,28,50,43,3,17,57,109,6,39,3,15,31,30,28,26,44,40,60,38,24,10,39,29,29,50,44,46,36,9,96,13,5,50,58,5,99,134,18,17,28,42,41,16,42,9,8,42,61,51,42,9,41,8,32,60,36,8,34,27,41,41,11,43,8,38,32,30,9,22,31,29,68,84,40,28,10,62,39,29,29,50,44,46,36,9,23,32,29,75,41,28,10,62,39,29,29,50,44,46,36,8,6,96,3,32,28,55,33,44,15,97,32,50,38,14,52,63,77,88,129,13,97,47,101,13,39,54,25,39,22,11,13,7,32,5,15,9,66,72,73,21,40,62,18,5,33,18,3,33,34,33,3,39,40,53,3,26,59,76,70,22,3,33,66,64,66,3,25,51,18,5,63,3,1,35,53,43,46,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/dialects/abstract/connection-manager.js"],"sourcesContent":["'use strict';\n\nconst { Pool, TimeoutError } = require('sequelize-pool');\nconst _ = require('lodash');\nconst semver = require('semver');\nconst errors = require('../../errors');\nconst { logger } = require('../../utils/logger');\nconst deprecations = require('../../utils/deprecations');\nconst debug = logger.debugContext('pool');\n\n/**\n * Abstract Connection Manager\n *\n * Connection manager which handles pooling & replication.\n * Uses sequelize-pool for pooling\n *\n * @private\n */\nclass ConnectionManager {\n  constructor(dialect, sequelize) {\n    const config = _.cloneDeep(sequelize.config);\n\n    this.sequelize = sequelize;\n    this.config = config;\n    this.dialect = dialect;\n    this.versionPromise = null;\n    this.dialectName = this.sequelize.options.dialect;\n\n    if (config.pool === false) {\n      throw new Error('Support for pool:false was removed in v4.0');\n    }\n\n    config.pool = _.defaults(config.pool || {}, {\n      max: 5,\n      min: 0,\n      idle: 10000,\n      acquire: 60000,\n      evict: 1000,\n      validate: this._validate.bind(this)\n    });\n\n    this.initPools();\n  }\n\n  refreshTypeParser(dataTypes) {\n    _.each(dataTypes, dataType => {\n      if (Object.prototype.hasOwnProperty.call(dataType, 'parse')) {\n        if (dataType.types[this.dialectName]) {\n          this._refreshTypeParser(dataType);\n        } else {\n          throw new Error(`Parse function not supported for type ${dataType.key} in dialect ${this.dialectName}`);\n        }\n      }\n    });\n  }\n\n  /**\n   * Try to load dialect module from various configured options.\n   * Priority goes like dialectModulePath > dialectModule > require(default)\n   *\n   * @param {string} moduleName Name of dialect module to lookup\n   *\n   * @private\n   * @returns {object}\n   */\n  _loadDialectModule(moduleName) {\n    try {\n      if (this.sequelize.config.dialectModulePath) {\n        return require(this.sequelize.config.dialectModulePath);\n      }\n      if (this.sequelize.config.dialectModule) {\n        return this.sequelize.config.dialectModule;\n      }\n      return require(moduleName);\n\n    } catch (err) {\n      if (err.code === 'MODULE_NOT_FOUND') {\n        if (this.sequelize.config.dialectModulePath) {\n          throw new Error(`Unable to find dialect at ${this.sequelize.config.dialectModulePath}`);\n        }\n        throw new Error(`Please install ${moduleName} package manually`);\n      }\n\n      throw err;\n    }\n  }\n\n  /**\n   * Handler which executes on process exit or connection manager shutdown\n   *\n   * @private\n   * @returns {Promise}\n   */\n  async _onProcessExit() {\n    if (!this.pool) {\n      return;\n    }\n\n    await this.pool.drain();\n    debug('connection drain due to process exit');\n\n    return await this.pool.destroyAllNow();\n  }\n\n  /**\n   * Drain the pool and close it permanently\n   *\n   * @returns {Promise}\n   */\n  async close() {\n    // Mark close of pool\n    this.getConnection = async function getConnection() {\n      throw new Error('ConnectionManager.getConnection was called after the connection manager was closed!');\n    };\n\n    return await this._onProcessExit();\n  }\n\n  /**\n   * Initialize connection pool. By default pool autostart is set to false, so no connection will be\n   * be created unless `pool.acquire` is called.\n   */\n  initPools() {\n    const config = this.config;\n\n    if (!config.replication) {\n      this.pool = new Pool({\n        name: 'sequelize',\n        create: () => this._connect(config),\n        destroy: async connection => {\n          const result = await this._disconnect(connection);\n          debug('connection destroy');\n          return result;\n        },\n        validate: config.pool.validate,\n        max: config.pool.max,\n        min: config.pool.min,\n        acquireTimeoutMillis: config.pool.acquire,\n        idleTimeoutMillis: config.pool.idle,\n        reapIntervalMillis: config.pool.evict,\n        maxUses: config.pool.maxUses\n      });\n\n      debug(`pool created with max/min: ${config.pool.max}/${config.pool.min}, no replication`);\n\n      return;\n    }\n\n    if (!Array.isArray(config.replication.read)) {\n      config.replication.read = [config.replication.read];\n    }\n\n    // Map main connection config\n    config.replication.write = _.defaults(config.replication.write, _.omit(config, 'replication'));\n\n    // Apply defaults to each read config\n    config.replication.read = config.replication.read.map(readConfig =>\n      _.defaults(readConfig, _.omit(this.config, 'replication'))\n    );\n\n    // custom pooling for replication (original author @janmeier)\n    let reads = 0;\n    this.pool = {\n      release: client => {\n        if (client.queryType === 'read') {\n          this.pool.read.release(client);\n        } else {\n          this.pool.write.release(client);\n        }\n      },\n      acquire: (queryType, useMaster) => {\n        useMaster = useMaster === undefined ? false : useMaster;\n        if (queryType === 'SELECT' && !useMaster) {\n          return this.pool.read.acquire();\n        }\n        return this.pool.write.acquire();\n      },\n      destroy: connection => {\n        this.pool[connection.queryType].destroy(connection);\n        debug('connection destroy');\n      },\n      destroyAllNow: async () => {\n        await Promise.all([\n          this.pool.read.destroyAllNow(),\n          this.pool.write.destroyAllNow()\n        ]);\n\n        debug('all connections destroyed');\n      },\n      drain: async () => Promise.all([\n        this.pool.write.drain(),\n        this.pool.read.drain()\n      ]),\n      read: new Pool({\n        name: 'sequelize:read',\n        create: async () => {\n          // round robin config\n          const nextRead = reads++ % config.replication.read.length;\n          const connection = await this._connect(config.replication.read[nextRead]);\n          connection.queryType = 'read';\n          return connection;\n        },\n        destroy: connection => this._disconnect(connection),\n        validate: config.pool.validate,\n        max: config.pool.max,\n        min: config.pool.min,\n        acquireTimeoutMillis: config.pool.acquire,\n        idleTimeoutMillis: config.pool.idle,\n        reapIntervalMillis: config.pool.evict,\n        maxUses: config.pool.maxUses\n      }),\n      write: new Pool({\n        name: 'sequelize:write',\n        create: async () => {\n          const connection = await this._connect(config.replication.write);\n          connection.queryType = 'write';\n          return connection;\n        },\n        destroy: connection => this._disconnect(connection),\n        validate: config.pool.validate,\n        max: config.pool.max,\n        min: config.pool.min,\n        acquireTimeoutMillis: config.pool.acquire,\n        idleTimeoutMillis: config.pool.idle,\n        reapIntervalMillis: config.pool.evict,\n        maxUses: config.pool.maxUses\n      })\n    };\n\n    debug(`pool created with max/min: ${config.pool.max}/${config.pool.min}, with replication`);\n  }\n\n  /**\n   * Get connection from pool. It sets database version if it's not already set.\n   * Call pool.acquire to get a connection\n   *\n   * @param {object}   [options]                 Pool options\n   * @param {string}   [options.type]            Set which replica to use. Available options are `read` and `write`\n   * @param {boolean}  [options.useMaster=false] Force master or write replica to get connection from\n   *\n   * @returns {Promise<Connection>}\n   */\n  async getConnection(options) {\n    options = options || {};\n\n    if (this.sequelize.options.databaseVersion === 0) {\n      if (!this.versionPromise) {\n        this.versionPromise = (async () => {\n          try {\n            const connection = await this._connect(this.config.replication.write || this.config);\n            const _options = {};\n\n            _options.transaction = { connection }; // Cheat .query to use our private connection\n            _options.logging = () => {};\n            _options.logging.__testLoggingFn = true;\n\n            //connection might have set databaseVersion value at initialization,\n            //avoiding a useless round trip\n            if (this.sequelize.options.databaseVersion === 0) {\n              const version = await this.sequelize.databaseVersion(_options);\n              const parsedVersion = _.get(semver.coerce(version), 'version') || version;\n              this.sequelize.options.databaseVersion = semver.valid(parsedVersion)\n                ? parsedVersion\n                : this.dialect.defaultVersion;\n            }\n\n            if (semver.lt(this.sequelize.options.databaseVersion, this.dialect.defaultVersion)) {\n              deprecations.unsupportedEngine();\n              debug(`Unsupported database engine version ${this.sequelize.options.databaseVersion}`);\n            }\n\n            this.versionPromise = null;\n            return await this._disconnect(connection);\n          } catch (err) {\n            this.versionPromise = null;\n            throw err;\n          }\n        })();\n      }\n      await this.versionPromise;\n    }\n\n    let result;\n\n    try {\n\n      await this.sequelize.runHooks('beforePoolAcquire', options);\n\n      result = await this.pool.acquire(options.type, options.useMaster);\n\n      await this.sequelize.runHooks('afterPoolAcquire', result, options);\n\n    } catch (error) {\n      if (error instanceof TimeoutError) throw new errors.ConnectionAcquireTimeoutError(error);\n      throw error;\n    }\n\n    debug('connection acquired');\n\n    return result;\n  }\n\n  /**\n   * Release a pooled connection so it can be utilized by other connection requests\n   *\n   * @param {Connection} connection\n   */\n  releaseConnection(connection) {\n    this.pool.release(connection);\n    debug('connection released');\n  }\n\n  /**\n   * Destroys a pooled connection and removes it from the pool.\n   *\n   * @param {Connection} connection\n   */\n  async destroyConnection(connection) {\n    await this.pool.destroy(connection);\n    debug(`connection ${connection.uuid} destroyed`);\n  }\n\n  /**\n   * Call dialect library to get connection\n   *\n   * @param {*} config Connection config\n   * @private\n   * @returns {Promise<Connection>}\n   */\n  async _connect(config) {\n    await this.sequelize.runHooks('beforeConnect', config);\n    const connection = await this.dialect.connectionManager.connect(config);\n    await this.sequelize.runHooks('afterConnect', connection, config);\n    return connection;\n  }\n\n  /**\n   * Call dialect library to disconnect a connection\n   *\n   * @param {Connection} connection\n   * @private\n   * @returns {Promise}\n   */\n  async _disconnect(connection) {\n    await this.sequelize.runHooks('beforeDisconnect', connection);\n    await this.dialect.connectionManager.disconnect(connection);\n    return this.sequelize.runHooks('afterDisconnect', connection);\n  }\n\n  /**\n   * Determine if a connection is still valid or not\n   *\n   * @param {Connection} connection\n   *\n   * @returns {boolean}\n   */\n  _validate(connection) {\n    if (!this.dialect.connectionManager.validate) {\n      return true;\n    }\n\n    return this.dialect.connectionManager.validate(connection);\n  }\n}\n\nmodule.exports = ConnectionManager;\nmodule.exports.ConnectionManager = ConnectionManager;\nmodule.exports.default = ConnectionManager;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize-pool/lib/index.js":{"lineLengths":[13,62,70,47,127,51,133,31,103,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize-pool/src/index.ts"],"names":[],"mappings":";;;AAAA,+CAA8C;AAArC,4GAAA,YAAY,OAAA;AACrB,mDAAkD;AAAzC,gHAAA,cAAc,OAAA;AACvB,+BAA8C;AAArC,4FAAA,IAAI,OAAA"},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize-pool/lib/TimeoutError.js":{"lineLengths":[13,62,30,34,1,36,40],"data":{"version":3,"file":"TimeoutError.js","sourceRoot":"","sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize-pool/src/TimeoutError.ts"],"names":[],"mappings":";;;AAGA,MAAa,YAAa,SAAQ,KAAK;CAAG;AAA1C,oCAA0C"},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize-pool/lib/AggregateError.js":{"lineLengths":[13,62,32,36,25,16,29,37,5,16,58,42,41,45,71,68,28,23,5,1,40,42],"data":{"version":3,"file":"AggregateError.js","sourceRoot":"","sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize-pool/src/AggregateError.ts"],"names":[],"mappings":";;;AAGA,MAAa,cAAe,SAAQ,KAAK;IAGvC,YAAY,MAAe;QACzB,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC;IAC/B,CAAC;IAED,QAAQ;QACN,MAAM,OAAO,GAAG,uBAAuB,IAAI,CAAC,MAAM;aAC/C,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CACb,KAAK,KAAK,IAAI;YACZ,CAAC,CAAC,2BAA2B;YAC7B,CAAC,CAAC,KAAK,YAAY,cAAc;gBACjC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC;gBACvD,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CACtD;aACA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QAClB,OAAO,OAAO,CAAC;IACjB,CAAC;CACF;AArBD,wCAqBC"},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize-pool/lib/Pool.js":{"lineLengths":[13,62,22,41,53,12,26,25,30,59,9,31,60,9,32,61,9,46,30,54,59,9,46,31,54,58,9,40,55,9,44,75,63,9,68,74,69,62,40,32,24,31,35,32,36,42,5,16,27,5,16,34,5,21,45,5,17,41,5,19,44,5,19,33,5,19,33,5,26,45,37,9,28,87,9,5,19,28,31,14,54,54,20,42,75,56,33,105,66,13,9,45,50,28,79,39,9,14,69,9,5,27,41,45,54,35,40,9,5,17,35,58,107,31,19,9,51,61,88,68,55,25,13,41,96,59,62,9,39,35,9,5,23,25,125,21,21,33,59,27,61,43,13,18,65,13,10,31,59,29,32,32,27,39,13,36,33,15,11,5,56,33,31,31,57,10,53,25,35,5,52,33,31,31,10,49,5,22,20,58,44,40,39,13,9,5,15,29,88,9,51,67,100,11,45,25,34,5,23,110,99,19,9,111,24,95,19,9,58,38,66,62,42,40,52,51,29,9,14,48,100,9,5,29,56,48,105,97,58,50,34,19,9,25,28,28,13,50,9,17,34,34,40,37,19,13,9,5,13,38,30,37,51,33,34,36,24,23,13,64,34,36,24,23,13,23,10,56,5,27,58,42,44,86,26,43,17,45,13,24,77,32,13,9,32,62,9,5,1,20,32],"data":{"version":3,"file":"Pool.js","sourceRoot":"","sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize-pool/src/Pool.ts"],"names":[],"mappings":"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"},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize-pool/lib/Deferred.js":{"lineLengths":[13,62,26,49,16,19,58,34,36,11,5,48,26,19,42,23,78,28,5,21,27,19,36,5,20,29,29,5,19,29,28,5,15,29,5,1,28,36],"data":{"version":3,"file":"Deferred.js","sourceRoot":"","sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize-pool/src/Deferred.ts"],"names":[],"mappings":";;;AAAA,iDAA8C;AAO9C,MAAa,QAAQ;IAMnB;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC9C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe,CAAC,eAAuB,EAAE,QAAkB;QACzD,IAAI,IAAI,CAAC,QAAQ;YAAE,OAAO;QAE1B,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,GAAG,EAAE;YAC9B,QAAQ,EAAE,CAAC;YACX,IAAI,CAAC,MAAM,CAAC,IAAI,2BAAY,CAAC,mBAAmB,CAAC,CAAC,CAAC;QACrD,CAAC,EAAE,eAAe,CAAC,CAAC;IACtB,CAAC;IAES,aAAa;QACrB,IAAI,CAAC,IAAI,CAAC,QAAQ;YAAE,OAAO;QAC3B,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC9B,CAAC;IAED,OAAO,CAAC,KAAQ;QACd,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC;IAED,MAAM,CAAC,KAAY;QACjB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACtB,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;CACF;AAxCD,4BAwCC"},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/postgres/query.js":{"lineLengths":[13,51,48,48,28,49,44,35,53,105,18,32,48,100,12,21,16,22,56,35,27,9,38,20,58,30,25,9,22,8,89,5,28,3,30,32,46,107,5,78,119,62,38,9,5,19,298,60,20,36,9,32,21,233,35,7,22,36,55,5,15,132,172,78,77,61,36,19,14,5,96,87,25,33,26,44,10,5,27,51,5,67,56,32,14,21,24,52,11,7,31,46,7,5,36,31,100,135,34,32,18,22,67,34,23,24,11,40,18,29,104,100,26,12,37,27,7,18,5,36,24,31,21,199,39,34,33,31,16,39,54,71,13,11,9,25,7,20,5,31,24,92,74,33,19,15,36,49,45,71,32,13,23,13,11,7,44,5,52,24,31,29,39,40,36,31,111,54,10,51,108,58,50,11,9,65,92,62,69,57,56,13,11,9,7,20,5,32,36,5,39,18,5,54,36,38,7,42,5,54,36,5,79,54,78,55,9,36,67,40,129,77,11,9,7,33,16,24,14,10,7,14,83,16,8,5,28,33,5,16,3,30,14,14,14,15,15,16,42,57,54,19,19,76,42,53,42,62,30,23,16,16,22,25,11,19,98,75,22,39,46,173,13,52,61,90,41,29,15,15,11,118,9,58,30,22,25,11,19,59,20,75,9,47,61,18,37,17,27,22,25,11,19,62,47,68,44,56,44,60,20,30,19,18,24,27,13,9,14,75,5,3,24,266,3,22,16,3,1,23,29,31,33,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/dialects/postgres/query.js"],"sourcesContent":["'use strict';\n\nconst AbstractQuery = require('../abstract/query');\nconst QueryTypes = require('../../query-types');\nconst sequelizeErrors = require('../../errors');\nconst _ = require('lodash');\nconst { logger } = require('../../utils/logger');\n\nconst debug = logger.debugContext('sql:pg');\n\n\nclass Query extends AbstractQuery {\n  /**\n   * Rewrite query with parameters.\n   *\n   * @param {string} sql\n   * @param {Array|object} values\n   * @param {string} dialect\n   * @private\n   */\n  static formatBindParameters(sql, values, dialect) {\n    const stringReplaceFunc = value => typeof value === 'string' ? value.replace(/\\0/g, '\\\\0') : value;\n\n    let bindParam;\n    if (Array.isArray(values)) {\n      bindParam = values.map(stringReplaceFunc);\n      sql = AbstractQuery.formatBindParameters(sql, values, dialect, { skipValueReplace: true })[0];\n    } else {\n      bindParam = [];\n      let i = 0;\n      const seen = {};\n      const replacementFunc = (match, key, values) => {\n        if (seen[key] !== undefined) {\n          return seen[key];\n        }\n        if (values[key] !== undefined) {\n          i = i + 1;\n          bindParam.push(stringReplaceFunc(values[key]));\n          seen[key] = `$${i}`;\n          return `$${i}`;\n        }\n        return undefined;\n      };\n      sql = AbstractQuery.formatBindParameters(sql, values, dialect, replacementFunc)[0];\n    }\n    return [sql, bindParam];\n  }\n\n  async run(sql, parameters) {\n    const { connection } = this;\n\n    if (!_.isEmpty(this.options.searchPath)) {\n      sql = this.sequelize.getQueryInterface().queryGenerator.setSearchPath(this.options.searchPath) + sql;\n    }\n\n    if (this.sequelize.options.minifyAliases && this.options.includeAliases) {\n      _.toPairs(this.options.includeAliases)\n        // Sorting to replace the longest aliases first to prevent alias collision\n        .sort((a, b) => b[1].length - a[1].length)\n        .forEach(([alias, original]) => {\n          const reg = new RegExp(_.escapeRegExp(original), 'g');\n\n          sql = sql.replace(reg, alias);\n        });\n    }\n\n    this.sql = sql;\n\n    const query = parameters && parameters.length\n      ? new Promise((resolve, reject) => connection.query(sql, parameters, (error, result) => error ? reject(error) : resolve(result)))\n      : new Promise((resolve, reject) => connection.query(sql, (error, result) => error ? reject(error) : resolve(result)));\n\n    const complete = this._logQuery(sql, debug, parameters);\n\n    let queryResult;\n    const errForStack = new Error();\n\n    try {\n      queryResult = await query;\n    } catch (error) {\n      // set the client so that it will be reaped if the connection resets while executing\n      if (error.code === 'ECONNRESET'\n        // https://github.com/sequelize/sequelize/pull/14090\n        // pg-native throws custom exception or libpq formatted errors\n        || /Unable to set non-blocking to true/i.test(error)\n        || /SSL SYSCALL error: EOF detected/i.test(error)\n        || /Local: Authentication failure/i.test(error)\n        // https://github.com/sequelize/sequelize/pull/15144\n        || error.message === 'Query read timeout'\n      ) {\n        connection._invalid = true;\n      }\n\n      error.sql = sql;\n      error.parameters = parameters;\n      throw this.formatError(error, errForStack.stack);\n    }\n\n    complete();\n\n    let rows = Array.isArray(queryResult)\n      ? queryResult.reduce((allRows, r) => allRows.concat(r.rows || []), [])\n      : queryResult.rows;\n    const rowCount = Array.isArray(queryResult)\n      ? queryResult.reduce(\n        (count, r) => Number.isFinite(r.rowCount) ? count + r.rowCount : count,\n        0\n      )\n      : queryResult.rowCount || 0;\n\n    if (this.sequelize.options.minifyAliases && this.options.aliasesMapping) {\n      rows = rows\n        .map(row => _.toPairs(row)\n          .reduce((acc, [key, value]) => {\n            const mapping = this.options.aliasesMapping.get(key);\n            acc[mapping || key] = value;\n            return acc;\n          }, {})\n        );\n    }\n\n    const isTableNameQuery = sql.startsWith('SELECT table_name FROM information_schema.tables');\n    const isRelNameQuery = sql.startsWith('SELECT relname FROM pg_class WHERE oid IN');\n\n    if (isRelNameQuery) {\n      return rows.map(row => ({\n        name: row.relname,\n        tableName: row.relname.split('_')[0]\n      }));\n    }\n    if (isTableNameQuery) {\n      return rows.map(row => Object.values(row));\n    }\n\n    if (rows[0] && rows[0].sequelize_caught_exception !== undefined) {\n      if (rows[0].sequelize_caught_exception !== null) {\n        throw this.formatError({\n          sql,\n          parameters,\n          code: '23505',\n          detail: rows[0].sequelize_caught_exception\n        });\n      }\n      for (const row of rows) {\n        delete row.sequelize_caught_exception;\n      }\n    }\n\n    if (this.isShowIndexesQuery()) {\n      for (const row of rows) {\n        const attributes = /ON .*? (?:USING .*?\\s)?\\(([^]*)\\)/gi.exec(row.definition)[1].split(',');\n\n        // Map column index in table to column name\n        const columns = _.zipObject(\n          row.column_indexes,\n          this.sequelize.getQueryInterface().queryGenerator.fromArray(row.column_names)\n        );\n        delete row.column_indexes;\n        delete row.column_names;\n\n        let field;\n        let attribute;\n\n        // Indkey is the order of attributes in the index, specified by a string of attribute indexes\n        row.fields = row.indkey.split(' ').map((indKey, index) => {\n          field = columns[indKey];\n          // for functional indices indKey = 0\n          if (!field) {\n            return null;\n          }\n          attribute = attributes[index];\n          return {\n            attribute: field,\n            collate: attribute.match(/COLLATE \"(.*?)\"/) ? /COLLATE \"(.*?)\"/.exec(attribute)[1] : undefined,\n            order: attribute.includes('DESC') ? 'DESC' : attribute.includes('ASC') ? 'ASC' : undefined,\n            length: undefined\n          };\n        }).filter(n => n !== null);\n        delete row.columns;\n      }\n      return rows;\n    }\n    if (this.isForeignKeysQuery()) {\n      const result = [];\n      for (const row of rows) {\n        let defParts;\n        if (row.condef !== undefined && (defParts = row.condef.match(/FOREIGN KEY \\((.+)\\) REFERENCES (.+)\\((.+)\\)( ON (UPDATE|DELETE) (CASCADE|RESTRICT))?( ON (UPDATE|DELETE) (CASCADE|RESTRICT))?/))) {\n          row.id = row.constraint_name;\n          row.table = defParts[2];\n          row.from = defParts[1];\n          row.to = defParts[3];\n          let i;\n          for (i = 5; i <= 8; i += 3) {\n            if (/(UPDATE|DELETE)/.test(defParts[i])) {\n              row[`on_${defParts[i].toLowerCase()}`] = defParts[i + 1];\n            }\n          }\n        }\n        result.push(row);\n      }\n      return result;\n    }\n    if (this.isSelectQuery()) {\n      let result = rows;\n      // Postgres will treat tables as case-insensitive, so fix the case\n      // of the returned values to match attributes\n      if (this.options.raw === false && this.sequelize.options.quoteIdentifiers === false) {\n        const attrsMap = _.reduce(this.model.rawAttributes, (m, v, k) => {\n          m[k.toLowerCase()] = k;\n          return m;\n        }, {});\n        result = rows.map(row => {\n          return _.mapKeys(row, (value, key) => {\n            const targetAttr = attrsMap[key];\n            if (typeof targetAttr === 'string' && targetAttr !== key) {\n              return targetAttr;\n            }\n            return key;\n          });\n        });\n      }\n      return this.handleSelectQuery(result);\n    }\n    if (QueryTypes.DESCRIBE === this.options.type) {\n      const result = {};\n\n      for (const row of rows) {\n        result[row.Field] = {\n          type: row.Type.toUpperCase(),\n          allowNull: row.Null === 'YES',\n          defaultValue: row.Default,\n          comment: row.Comment,\n          special: row.special ? this.sequelize.getQueryInterface().queryGenerator.fromArray(row.special) : [],\n          primaryKey: row.Constraint === 'PRIMARY KEY'\n        };\n\n        if (result[row.Field].type === 'BOOLEAN') {\n          result[row.Field].defaultValue = { 'false': false, 'true': true }[result[row.Field].defaultValue];\n\n          if (result[row.Field].defaultValue === undefined) {\n            result[row.Field].defaultValue = null;\n          }\n        }\n\n        if (typeof result[row.Field].defaultValue === 'string') {\n          result[row.Field].defaultValue = result[row.Field].defaultValue.replace(/'/g, '');\n\n          if (result[row.Field].defaultValue.includes('::')) {\n            const split = result[row.Field].defaultValue.split('::');\n            if (split[1].toLowerCase() !== 'regclass)') {\n              result[row.Field].defaultValue = split[0];\n            }\n          }\n        }\n      }\n\n      return result;\n    }\n    if (this.isVersionQuery()) {\n      return rows[0].server_version;\n    }\n    if (this.isShowOrDescribeQuery()) {\n      return rows;\n    }\n    if (QueryTypes.BULKUPDATE === this.options.type) {\n      if (!this.options.returning) {\n        return parseInt(rowCount, 10);\n      }\n      return this.handleSelectQuery(rows);\n    }\n    if (QueryTypes.BULKDELETE === this.options.type) {\n      return parseInt(rowCount, 10);\n    }\n    if (this.isInsertQuery() || this.isUpdateQuery() || this.isUpsertQuery()) {\n      if (this.instance && this.instance.dataValues) {\n        // If we are creating an instance, and we get no rows, the create failed but did not throw.\n        // This probably means a conflict happened and was ignored, to avoid breaking a transaction.\n        if (this.isInsertQuery() && !this.isUpsertQuery() && rowCount === 0) {\n          throw new sequelizeErrors.EmptyResultError();\n        }\n\n        for (const key in rows[0]) {\n          if (Object.prototype.hasOwnProperty.call(rows[0], key)) {\n            const record = rows[0][key];\n\n            const attr = _.find(this.model.rawAttributes, attribute => attribute.fieldName === key || attribute.field === key);\n\n            this.instance.dataValues[attr && attr.fieldName || key] = record;\n          }\n        }\n      }\n\n      if (this.isUpsertQuery()) {\n        return [\n          this.instance,\n          null\n        ];\n      }\n\n      return [\n        this.instance || rows && (this.options.plain && rows[0] || rows) || undefined,\n        rowCount\n      ];\n    }\n    if (this.isRawQuery()) {\n      return [rows, queryResult];\n    }\n    return rows;\n  }\n\n  formatError(err, errStack) {\n    let match;\n    let table;\n    let index;\n    let fields;\n    let errors;\n    let message;\n\n    const code = err.code || err.sqlState;\n    const errMessage = err.message || err.messagePrimary;\n    const errDetail = err.detail || err.messageDetail;\n\n    switch (code) {\n      case '23503':\n        index = errMessage.match(/violates foreign key constraint \"(.+?)\"/);\n        index = index ? index[1] : undefined;\n        table = errMessage.match(/on table \"(.+?)\"/);\n        table = table ? table[1] : undefined;\n\n        return new sequelizeErrors.ForeignKeyConstraintError({\n          message: errMessage,\n          fields: null,\n          index,\n          table,\n          parent: err,\n          stack: errStack\n        });\n      case '23505':\n        // there are multiple different formats of error messages for this error code\n        // this regex should check at least two\n        if (errDetail && (match = errDetail.replace(/\"/g, '').match(/Key \\((.*?)\\)=\\((.*?)\\)/))) {\n          fields = _.zipObject(match[1].split(', '), match[2].split(', '));\n          errors = [];\n          message = 'Validation error';\n\n          _.forOwn(fields, (value, field) => {\n            errors.push(new sequelizeErrors.ValidationErrorItem(\n              this.getUniqueConstraintErrorMessage(field),\n              'unique violation', // sequelizeErrors.ValidationErrorItem.Origins.DB,\n              field,\n              value,\n              this.instance,\n              'not_unique'\n            ));\n          });\n\n          if (this.model && this.model.uniqueKeys) {\n            _.forOwn(this.model.uniqueKeys, constraint => {\n              if (_.isEqual(constraint.fields, Object.keys(fields)) && !!constraint.msg) {\n                message = constraint.msg;\n                return false;\n              }\n            });\n          }\n\n          return new sequelizeErrors.UniqueConstraintError({ message, errors, parent: err, fields, stack: errStack });\n        }\n\n        return new sequelizeErrors.UniqueConstraintError({\n          message: errMessage,\n          parent: err,\n          stack: errStack\n        });\n\n      case '23P01':\n        match = errDetail.match(/Key \\((.*?)\\)=\\((.*?)\\)/);\n\n        if (match) {\n          fields = _.zipObject(match[1].split(', '), match[2].split(', '));\n        }\n        message = 'Exclusion constraint error';\n\n        return new sequelizeErrors.ExclusionConstraintError({\n          message,\n          constraint: err.constraint,\n          fields,\n          table: err.table,\n          parent: err,\n          stack: errStack\n        });\n\n      case '42704':\n        if (err.sql && /(CONSTRAINT|INDEX)/gi.test(err.sql)) {\n          message = 'Unknown constraint error';\n          index = errMessage.match(/(?:constraint|index) \"(.+?)\"/i);\n          index = index ? index[1] : undefined;\n          table = errMessage.match(/relation \"(.+?)\"/i);\n          table = table ? table[1] : undefined;\n\n          throw new sequelizeErrors.UnknownConstraintError({\n            message,\n            constraint: index,\n            fields,\n            table,\n            parent: err,\n            stack: errStack\n          });\n        }\n      // falls through\n      default:\n        return new sequelizeErrors.DatabaseError(err, { stack: errStack });\n    }\n  }\n\n  isForeignKeysQuery() {\n    return /SELECT conname as constraint_name, pg_catalog\\.pg_get_constraintdef\\(r\\.oid, true\\) as condef FROM pg_catalog\\.pg_constraint r WHERE r\\.conrelid = \\(SELECT oid FROM pg_class WHERE relname = '.*' LIMIT 1\\) AND r\\.contype = 'f' ORDER BY 1;/.test(this.sql);\n  }\n\n  getInsertIdField() {\n    return 'id';\n  }\n}\n\nmodule.exports = Query;\nmodule.exports.Query = Query;\nmodule.exports.default = Query;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/abstract/query.js":{"lineLengths":[13,38,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,28,46,48,30,57,32,56,21,47,23,33,37,31,31,35,19,17,26,16,30,28,61,5,3,79,18,23,5,28,48,38,31,5,27,37,52,40,25,11,24,10,14,73,40,71,11,24,10,7,42,50,81,97,23,9,22,8,5,26,39,56,24,50,7,18,17,38,24,84,9,39,82,7,31,93,7,21,7,21,3,32,27,17,3,9,58,3,24,40,35,41,5,3,22,22,3,42,71,30,61,82,47,53,11,9,7,5,19,3,16,48,3,20,52,3,19,51,3,36,22,50,18,5,72,108,110,18,3,40,24,71,20,61,63,49,5,3,23,55,3,34,75,3,24,56,3,28,60,3,21,53,3,19,51,3,23,55,3,23,55,3,24,56,3,19,51,3,30,22,32,45,87,58,41,32,9,23,19,5,27,41,19,36,67,34,11,9,32,31,9,17,9,47,55,26,44,47,10,55,9,46,27,38,48,44,31,79,17,9,12,46,27,18,78,9,5,29,54,5,18,3,27,23,65,69,18,3,17,53,3,44,41,76,103,33,26,43,53,19,38,74,14,49,7,48,5,75,35,22,21,54,5,18,41,29,22,70,7,6,3,56,23,16,5,10,15,11,16,14,12,35,13,12,13,18,16,15,18,18,48,17,19,16,63,25,26,19,25,29,23,23,17,16,22,40,77,64,28,54,16,32,9,45,7,6,35,45,62,59,7,24,6,35,39,77,44,78,7,39,6,29,33,71,72,81,84,9,58,7,33,6,33,37,75,40,39,71,7,37,6,47,59,183,34,6,81,29,28,15,50,24,24,78,32,7,26,26,67,21,28,81,33,44,85,11,65,77,63,52,11,9,7,30,30,48,25,69,36,84,35,62,18,38,35,48,11,9,73,30,43,27,30,25,44,89,85,54,34,36,85,41,52,88,19,77,89,71,76,19,17,34,39,17,49,33,37,40,17,15,20,33,13,39,41,45,22,33,15,46,46,54,72,30,73,17,22,47,47,17,75,15,13,24,18,33,39,25,44,39,56,17,57,15,13,11,9,48,22,36,48,7,26,39,23,26,21,40,85,81,50,30,32,81,37,48,84,15,73,85,67,72,15,13,30,35,13,45,29,33,36,13,11,16,29,9,35,37,41,18,29,11,42,42,50,68,26,69,13,18,43,43,13,71,11,9,25,34,9,14,35,7,5,19,3,1,31,45,39,33,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/dialects/abstract/query.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst SqlString = require('../../sql-string');\nconst QueryTypes = require('../../query-types');\nconst Dot = require('dottie');\nconst deprecations = require('../../utils/deprecations');\nconst uuid = require('uuid').v4;\nconst { safeStringifyJson } = require('../../utils.js');\n\nclass AbstractQuery {\n\n  constructor(connection, sequelize, options) {\n    this.uuid = uuid();\n    this.connection = connection;\n    this.instance = options.instance;\n    this.model = options.model;\n    this.sequelize = sequelize;\n    this.options = {\n      plain: false,\n      raw: false,\n      // eslint-disable-next-line no-console\n      logging: console.log,\n      ...options\n    };\n    this.checkLoggingOption();\n\n    if (options.rawErrors) {\n      // The default implementation in AbstractQuery just returns the same\n      // error object. By overidding this.formatError, this saves every dialect\n      // having to check for options.rawErrors in their own formatError\n      // implementations.\n      this.formatError = AbstractQuery.prototype.formatError;\n    }\n  }\n\n  /**\n   * rewrite query with parameters\n   *\n   * Examples:\n   *\n   *   query.formatBindParameters('select $1 as foo', ['fooval']);\n   *\n   *   query.formatBindParameters('select $foo as foo', { foo: 'fooval' });\n   *\n   * Options\n   *   skipUnescape: bool, skip unescaping $$\n   *   skipValueReplace: bool, do not replace (but do unescape $$). Check correct syntax and if all values are available\n   *\n   * @param {string} sql\n   * @param {object|Array} values\n   * @param {string} dialect\n   * @param {Function} [replacementFunc]\n   * @param {object} [options]\n   * @private\n   */\n  static formatBindParameters(sql, values, dialect, replacementFunc, options) {\n    if (!values) {\n      return [sql, []];\n    }\n\n    options = options || {};\n    if (typeof replacementFunc !== 'function') {\n      options = replacementFunc || {};\n      replacementFunc = undefined;\n    }\n\n    if (!replacementFunc) {\n      if (options.skipValueReplace) {\n        replacementFunc = (match, key, values) => {\n          if (values[key] !== undefined) {\n            return match;\n          }\n          return undefined;\n        };\n      } else {\n        replacementFunc = (match, key, values, timeZone, dialect) => {\n          if (values[key] !== undefined) {\n            return SqlString.escape(values[key], timeZone, dialect);\n          }\n          return undefined;\n        };\n      }\n    } else if (options.skipValueReplace) {\n      const origReplacementFunc = replacementFunc;\n      replacementFunc = (match, key, values, timeZone, dialect, options) => {\n        if (origReplacementFunc(match, key, values, timeZone, dialect, options) !== undefined) {\n          return match;\n        }\n        return undefined;\n      };\n    }\n\n    const timeZone = null;\n    const list = Array.isArray(values);\n    sql = sql.replace(/\\B\\$(\\$|\\w+)/g, (match, key) => {\n      if ('$' === key) {\n        return options.skipUnescape ? match : key;\n      }\n\n      let replVal;\n      if (list) {\n        if (key.match(/^[1-9]\\d*$/)) {\n          key = key - 1;\n          replVal = replacementFunc(match, key, values, timeZone, dialect, options);\n        }\n      } else if (!key.match(/^\\d*$/)) {\n        replVal = replacementFunc(match, key, values, timeZone, dialect, options);\n      }\n      if (replVal === undefined) {\n        throw new Error(`Named bind parameter \"${match}\" has no value in the given object.`);\n      }\n      return replVal;\n    });\n    return [sql, []];\n  }\n\n  /**\n   * Formats a raw database error from the database library into a common Sequelize exception.\n   *\n   * @param {Error} error The exception object.\n   * @param {object} errStack The stack trace that started the database query.\n   * @returns {BaseError} the new formatted error object.\n   */\n  formatError(error, errStack) {\n    // Default implementation, no formatting.\n    // Each dialect overrides this method to parse errors from their respective the database engines.\n    error.stack = errStack;\n\n    return error;\n  }\n\n  /**\n   * Execute the passed sql query.\n   *\n   * Examples:\n   *\n   *     query.run('SELECT 1')\n   *\n   * @private\n   */\n  run() {\n    throw new Error('The run method wasn\\'t overwritten!');\n  }\n\n  /**\n   * Check the logging option of the instance and print deprecation warnings.\n   *\n   * @private\n   */\n  checkLoggingOption() {\n    if (this.options.logging === true) {\n      deprecations.noTrueLogging();\n      // eslint-disable-next-line no-console\n      this.options.logging = console.log;\n    }\n  }\n\n  /**\n   * Get the attributes of an insert query, which contains the just inserted id.\n   *\n   * @returns {string} The field name.\n   * @private\n   */\n  getInsertIdField() {\n    return 'insertId';\n  }\n\n  getUniqueConstraintErrorMessage(field) {\n    let message = field ? `${field} must be unique` : 'Must be unique';\n\n    if (field && this.model) {\n      for (const key of Object.keys(this.model.uniqueKeys)) {\n        if (this.model.uniqueKeys[key].fields.includes(field.replace(/\"/g, ''))) {\n          if (this.model.uniqueKeys[key].msg) {\n            message = this.model.uniqueKeys[key].msg;\n          }\n        }\n      }\n    }\n    return message;\n  }\n\n  isRawQuery() {\n    return this.options.type === QueryTypes.RAW;\n  }\n\n  isVersionQuery() {\n    return this.options.type === QueryTypes.VERSION;\n  }\n\n  isUpsertQuery() {\n    return this.options.type === QueryTypes.UPSERT;\n  }\n\n  isInsertQuery(results, metaData) {\n    let result = true;\n\n    if (this.options.type === QueryTypes.INSERT) {\n      return true;\n    }\n\n    // is insert query if sql contains insert into\n    result = result && this.sql.toLowerCase().startsWith('insert into');\n\n    // is insert query if no results are passed or if the result has the inserted id\n    result = result && (!results || Object.prototype.hasOwnProperty.call(results, this.getInsertIdField()));\n\n    // is insert query if no metadata are passed or if the metadata has the inserted id\n    result = result && (!metaData || Object.prototype.hasOwnProperty.call(metaData, this.getInsertIdField()));\n\n    return result;\n  }\n\n  handleInsertQuery(results, metaData) {\n    if (this.instance) {\n      // add the inserted row id to the instance\n      const autoIncrementAttribute = this.model.autoIncrementAttribute;\n      let id = null;\n\n      id = id || results && results[this.getInsertIdField()];\n      id = id || metaData && metaData[this.getInsertIdField()];\n\n      this.instance[autoIncrementAttribute] = id;\n    }\n  }\n\n  isShowTablesQuery() {\n    return this.options.type === QueryTypes.SHOWTABLES;\n  }\n\n  handleShowTablesQuery(results) {\n    return _.flatten(results.map(resultSet => Object.values(resultSet)));\n  }\n\n  isShowIndexesQuery() {\n    return this.options.type === QueryTypes.SHOWINDEXES;\n  }\n\n  isShowConstraintsQuery() {\n    return this.options.type === QueryTypes.SHOWCONSTRAINTS;\n  }\n\n  isDescribeQuery() {\n    return this.options.type === QueryTypes.DESCRIBE;\n  }\n\n  isSelectQuery() {\n    return this.options.type === QueryTypes.SELECT;\n  }\n\n  isBulkUpdateQuery() {\n    return this.options.type === QueryTypes.BULKUPDATE;\n  }\n\n  isBulkDeleteQuery() {\n    return this.options.type === QueryTypes.BULKDELETE;\n  }\n\n  isForeignKeysQuery() {\n    return this.options.type === QueryTypes.FOREIGNKEYS;\n  }\n\n  isUpdateQuery() {\n    return this.options.type === QueryTypes.UPDATE;\n  }\n\n  handleSelectQuery(results) {\n    let result = null;\n\n    // Map raw fields to names if a mapping is provided\n    if (this.options.fieldMap) {\n      const fieldMap = this.options.fieldMap;\n      results = results.map(result => _.reduce(fieldMap, (result, name, field) => {\n        if (result[field] !== undefined && name !== field) {\n          result[name] = result[field];\n          delete result[field];\n        }\n        return result;\n      }, result));\n    }\n\n    // Raw queries\n    if (this.options.raw) {\n      result = results.map(result => {\n        let o = {};\n\n        for (const key in result) {\n          if (Object.prototype.hasOwnProperty.call(result, key)) {\n            o[key] = result[key];\n          }\n        }\n\n        if (this.options.nest) {\n          o = Dot.transform(o);\n        }\n\n        return o;\n      });\n    // Queries with include\n    } else if (this.options.hasJoin === true) {\n      results = AbstractQuery._groupJoinData(results, {\n        model: this.model,\n        includeMap: this.options.includeMap,\n        includeNames: this.options.includeNames\n      }, {\n        checkExisting: this.options.hasMultiAssociation\n      });\n\n      result = this.model.bulkBuild(results, {\n        isNewRecord: false,\n        include: this.options.include,\n        includeNames: this.options.includeNames,\n        includeMap: this.options.includeMap,\n        includeValidated: true,\n        attributes: this.options.originalAttributes || this.options.attributes,\n        raw: true\n      });\n    // Regular queries\n    } else {\n      result = this.model.bulkBuild(results, {\n        isNewRecord: false,\n        raw: true,\n        attributes: this.options.originalAttributes || this.options.attributes\n      });\n    }\n\n    // return the first real model instance if options.plain is set (e.g. Model.find)\n    if (this.options.plain) {\n      result = result.length === 0 ? null : result[0];\n    }\n    return result;\n  }\n\n  isShowOrDescribeQuery() {\n    let result = false;\n\n    result = result || this.sql.toLowerCase().startsWith('show');\n    result = result || this.sql.toLowerCase().startsWith('describe');\n\n    return result;\n  }\n\n  isCallQuery() {\n    return this.sql.toLowerCase().startsWith('call');\n  }\n\n  /**\n   * @param {string} sql\n   * @param {Function} debugContext\n   * @param {Array|object} parameters\n   * @protected\n   * @returns {Function} A function to call after the query was completed.\n   */\n  _logQuery(sql, debugContext, parameters) {\n    const { connection, options } = this;\n    const benchmark = this.sequelize.options.benchmark || options.benchmark;\n    const logQueryParameters = this.sequelize.options.logQueryParameters || options.logQueryParameters;\n    const startTime = Date.now();\n    let logParameter = '';\n\n    if (logQueryParameters && parameters) {\n      const delimiter = sql.endsWith(';') ? '' : ';';\n      let paramStr;\n      if (Array.isArray(parameters)) {\n        paramStr = parameters.map(p=>safeStringifyJson(p)).join(', ');\n      } else {\n        paramStr = safeStringifyJson(parameters);\n      }\n      logParameter = `${delimiter} ${paramStr}`;\n    }\n    const fmt = `(${connection.uuid || 'default'}): ${sql}${logParameter}`;\n    const msg = `Executing ${fmt}`;\n    debugContext(msg);\n    if (!benchmark) {\n      this.sequelize.log(`Executing ${fmt}`, options);\n    }\n    return () => {\n      const afterMsg = `Executed ${fmt}`;\n      debugContext(afterMsg);\n      if (benchmark) {\n        this.sequelize.log(afterMsg, Date.now() - startTime, options);\n      }\n    };\n  }\n\n  /**\n   * The function takes the result of the query execution and groups\n   * the associated data by the callee.\n   *\n   * Example:\n   *   groupJoinData([\n   *     {\n   *       some: 'data',\n   *       id: 1,\n   *       association: { foo: 'bar', id: 1 }\n   *     }, {\n   *       some: 'data',\n   *       id: 1,\n   *       association: { foo: 'bar', id: 2 }\n   *     }, {\n   *       some: 'data',\n   *       id: 1,\n   *       association: { foo: 'bar', id: 3 }\n   *     }\n   *   ])\n   *\n   * Result:\n   *   Something like this:\n   *\n   *   [\n   *     {\n   *       some: 'data',\n   *       id: 1,\n   *       association: [\n   *         { foo: 'bar', id: 1 },\n   *         { foo: 'bar', id: 2 },\n   *         { foo: 'bar', id: 3 }\n   *       ]\n   *     }\n   *   ]\n   *\n   * @param {Array} rows\n   * @param {object} includeOptions\n   * @param {object} options\n   * @private\n   */\n  static _groupJoinData(rows, includeOptions, options) {\n\n    /*\n     * Assumptions\n     * ID is not necessarily the first field\n     * All fields for a level is grouped in the same set (i.e. Panel.id, Task.id, Panel.title is not possible)\n     * Parent keys will be seen before any include/child keys\n     * Previous set won't necessarily be parent set (one parent could have two children, one child would then be previous set for the other)\n     */\n\n    /*\n     * Author (MH) comment: This code is an unreadable mess, but it's performant.\n     * groupJoinData is a performance critical function so we prioritize perf over readability.\n     */\n    if (!rows.length) {\n      return [];\n    }\n\n    // Generic looping\n    let i;\n    let length;\n    let $i;\n    let $length;\n    // Row specific looping\n    let rowsI;\n    let row;\n    const rowsLength = rows.length;\n    // Key specific looping\n    let keys;\n    let key;\n    let keyI;\n    let keyLength;\n    let prevKey;\n    let values;\n    let topValues;\n    let topExists;\n    const checkExisting = options.checkExisting;\n    // If we don't have to deduplicate we can pre-allocate the resulting array\n    let itemHash;\n    let parentHash;\n    let topHash;\n    const results = checkExisting ? [] : new Array(rowsLength);\n    const resultMap = {};\n    const includeMap = {};\n    // Result variables for the respective functions\n    let $keyPrefix;\n    let $keyPrefixString;\n    let $prevKeyPrefixString; // eslint-disable-line\n    let $prevKeyPrefix;\n    let $lastKeyPrefix;\n    let $current;\n    let $parent;\n    // Map each key to an include option\n    let previousPiece;\n    const buildIncludeMap = piece => {\n      if (Object.prototype.hasOwnProperty.call($current.includeMap, piece)) {\n        includeMap[key] = $current = $current.includeMap[piece];\n        if (previousPiece) {\n          previousPiece = `${previousPiece}.${piece}`;\n        } else {\n          previousPiece = piece;\n        }\n        includeMap[previousPiece] = $current;\n      }\n    };\n    // Calculate the string prefix of a key ('User.Results' for 'User.Results.id')\n    const keyPrefixStringMemo = {};\n    const keyPrefixString = (key, memo) => {\n      if (!Object.prototype.hasOwnProperty.call(memo, key)) {\n        memo[key] = key.substr(0, key.lastIndexOf('.'));\n      }\n      return memo[key];\n    };\n    // Removes the prefix from a key ('id' for 'User.Results.id')\n    const removeKeyPrefixMemo = {};\n    const removeKeyPrefix = key => {\n      if (!Object.prototype.hasOwnProperty.call(removeKeyPrefixMemo, key)) {\n        const index = key.lastIndexOf('.');\n        removeKeyPrefixMemo[key] = key.substr(index === -1 ? 0 : index + 1);\n      }\n      return removeKeyPrefixMemo[key];\n    };\n    // Calculates the array prefix of a key (['User', 'Results'] for 'User.Results.id')\n    const keyPrefixMemo = {};\n    const keyPrefix = key => {\n      // We use a double memo and keyPrefixString so that different keys with the same prefix will receive the same array instead of differnet arrays with equal values\n      if (!Object.prototype.hasOwnProperty.call(keyPrefixMemo, key)) {\n        const prefixString = keyPrefixString(key, keyPrefixStringMemo);\n        if (!Object.prototype.hasOwnProperty.call(keyPrefixMemo, prefixString)) {\n          keyPrefixMemo[prefixString] = prefixString ? prefixString.split('.') : [];\n        }\n        keyPrefixMemo[key] = keyPrefixMemo[prefixString];\n      }\n      return keyPrefixMemo[key];\n    };\n    // Calcuate the last item in the array prefix ('Results' for 'User.Results.id')\n    const lastKeyPrefixMemo = {};\n    const lastKeyPrefix = key => {\n      if (!Object.prototype.hasOwnProperty.call(lastKeyPrefixMemo, key)) {\n        const prefix = keyPrefix(key);\n        const length = prefix.length;\n\n        lastKeyPrefixMemo[key] = !length ? '' : prefix[length - 1];\n      }\n      return lastKeyPrefixMemo[key];\n    };\n    const getUniqueKeyAttributes = model => {\n      let uniqueKeyAttributes = _.chain(model.uniqueKeys);\n      uniqueKeyAttributes = uniqueKeyAttributes\n        .result(`${uniqueKeyAttributes.findKey()}.fields`)\n        .map(field => _.findKey(model.attributes, chr => chr.field === field))\n        .value();\n\n      return uniqueKeyAttributes;\n    };\n    const stringify = obj => obj instanceof Buffer ? obj.toString('hex') : obj;\n    let primaryKeyAttributes;\n    let uniqueKeyAttributes;\n    let prefix;\n\n    for (rowsI = 0; rowsI < rowsLength; rowsI++) {\n      row = rows[rowsI];\n\n      // Keys are the same for all rows, so only need to compute them on the first row\n      if (rowsI === 0) {\n        keys = _.sortBy(Object.keys(row), item => [item.split('.').length]);\n        keyLength = keys.length;\n      }\n\n      if (checkExisting) {\n        topExists = false;\n\n        // Compute top level hash key (this is usually just the primary key values)\n        $length = includeOptions.model.primaryKeyAttributes.length;\n        topHash = '';\n        if ($length === 1) {\n          topHash = stringify(row[includeOptions.model.primaryKeyAttributes[0]]);\n        }\n        else if ($length > 1) {\n          for ($i = 0; $i < $length; $i++) {\n            topHash += stringify(row[includeOptions.model.primaryKeyAttributes[$i]]);\n          }\n        }\n        else if (!_.isEmpty(includeOptions.model.uniqueKeys)) {\n          uniqueKeyAttributes = getUniqueKeyAttributes(includeOptions.model);\n          for ($i = 0; $i < uniqueKeyAttributes.length; $i++) {\n            topHash += row[uniqueKeyAttributes[$i]];\n          }\n        }\n      }\n\n      topValues = values = {};\n      $prevKeyPrefix = undefined;\n      for (keyI = 0; keyI < keyLength; keyI++) {\n        key = keys[keyI];\n\n        // The string prefix isn't actualy needed\n        // We use it so keyPrefix for different keys will resolve to the same array if they have the same prefix\n        // TODO: Find a better way?\n        $keyPrefixString = keyPrefixString(key, keyPrefixStringMemo);\n        $keyPrefix = keyPrefix(key);\n\n        // On the first row we compute the includeMap\n        if (rowsI === 0 && !Object.prototype.hasOwnProperty.call(includeMap, key)) {\n          if (!$keyPrefix.length) {\n            includeMap[key] = includeMap[''] = includeOptions;\n          } else {\n            $current = includeOptions;\n            previousPiece = undefined;\n            $keyPrefix.forEach(buildIncludeMap);\n          }\n        }\n        // End of key set\n        if ($prevKeyPrefix !== undefined && $prevKeyPrefix !== $keyPrefix) {\n          if (checkExisting) {\n            // Compute hash key for this set instance\n            // TODO: Optimize\n            length = $prevKeyPrefix.length;\n            $parent = null;\n            parentHash = null;\n\n            if (length) {\n              for (i = 0; i < length; i++) {\n                prefix = $parent ? `${$parent}.${$prevKeyPrefix[i]}` : $prevKeyPrefix[i];\n                primaryKeyAttributes = includeMap[prefix].model.primaryKeyAttributes;\n                $length = primaryKeyAttributes.length;\n                itemHash = prefix;\n                if ($length === 1) {\n                  itemHash += stringify(row[`${prefix}.${primaryKeyAttributes[0]}`]);\n                }\n                else if ($length > 1) {\n                  for ($i = 0; $i < $length; $i++) {\n                    itemHash += stringify(row[`${prefix}.${primaryKeyAttributes[$i]}`]);\n                  }\n                }\n                else if (!_.isEmpty(includeMap[prefix].model.uniqueKeys)) {\n                  uniqueKeyAttributes = getUniqueKeyAttributes(includeMap[prefix].model);\n                  for ($i = 0; $i < uniqueKeyAttributes.length; $i++) {\n                    itemHash += row[`${prefix}.${uniqueKeyAttributes[$i]}`];\n                  }\n                }\n                if (!parentHash) {\n                  parentHash = topHash;\n                }\n\n                itemHash = parentHash + itemHash;\n                $parent = prefix;\n                if (i < length - 1) {\n                  parentHash = itemHash;\n                }\n              }\n            } else {\n              itemHash = topHash;\n            }\n\n            if (itemHash === topHash) {\n              if (!resultMap[itemHash]) {\n                resultMap[itemHash] = values;\n              } else {\n                topExists = true;\n              }\n            } else if (!resultMap[itemHash]) {\n              $parent = resultMap[parentHash];\n              $lastKeyPrefix = lastKeyPrefix(prevKey);\n\n              if (includeMap[prevKey].association.isSingleAssociation) {\n                if ($parent) {\n                  $parent[$lastKeyPrefix] = resultMap[itemHash] = values;\n                }\n              } else {\n                if (!$parent[$lastKeyPrefix]) {\n                  $parent[$lastKeyPrefix] = [];\n                }\n                $parent[$lastKeyPrefix].push(resultMap[itemHash] = values);\n              }\n            }\n\n            // Reset values\n            values = {};\n          } else {\n            // If checkExisting is false it's because there's only 1:1 associations in this query\n            // However we still need to map onto the appropriate parent\n            // For 1:1 we map forward, initializing the value object on the parent to be filled in the next iterations of the loop\n            $current = topValues;\n            length = $keyPrefix.length;\n            if (length) {\n              for (i = 0; i < length; i++) {\n                if (i === length - 1) {\n                  values = $current[$keyPrefix[i]] = {};\n                }\n                $current = $current[$keyPrefix[i]] || {};\n              }\n            }\n          }\n        }\n\n        // End of iteration, set value and set prev values (for next iteration)\n        values[removeKeyPrefix(key)] = row[key];\n        prevKey = key;\n        $prevKeyPrefix = $keyPrefix;\n        $prevKeyPrefixString = $keyPrefixString;\n      }\n\n      if (checkExisting) {\n        length = $prevKeyPrefix.length;\n        $parent = null;\n        parentHash = null;\n\n        if (length) {\n          for (i = 0; i < length; i++) {\n            prefix = $parent ? `${$parent}.${$prevKeyPrefix[i]}` : $prevKeyPrefix[i];\n            primaryKeyAttributes = includeMap[prefix].model.primaryKeyAttributes;\n            $length = primaryKeyAttributes.length;\n            itemHash = prefix;\n            if ($length === 1) {\n              itemHash += stringify(row[`${prefix}.${primaryKeyAttributes[0]}`]);\n            }\n            else if ($length > 0) {\n              for ($i = 0; $i < $length; $i++) {\n                itemHash += stringify(row[`${prefix}.${primaryKeyAttributes[$i]}`]);\n              }\n            }\n            else if (!_.isEmpty(includeMap[prefix].model.uniqueKeys)) {\n              uniqueKeyAttributes = getUniqueKeyAttributes(includeMap[prefix].model);\n              for ($i = 0; $i < uniqueKeyAttributes.length; $i++) {\n                itemHash += row[`${prefix}.${uniqueKeyAttributes[$i]}`];\n              }\n            }\n            if (!parentHash) {\n              parentHash = topHash;\n            }\n\n            itemHash = parentHash + itemHash;\n            $parent = prefix;\n            if (i < length - 1) {\n              parentHash = itemHash;\n            }\n          }\n        } else {\n          itemHash = topHash;\n        }\n\n        if (itemHash === topHash) {\n          if (!resultMap[itemHash]) {\n            resultMap[itemHash] = values;\n          } else {\n            topExists = true;\n          }\n        } else if (!resultMap[itemHash]) {\n          $parent = resultMap[parentHash];\n          $lastKeyPrefix = lastKeyPrefix(prevKey);\n\n          if (includeMap[prevKey].association.isSingleAssociation) {\n            if ($parent) {\n              $parent[$lastKeyPrefix] = resultMap[itemHash] = values;\n            }\n          } else {\n            if (!$parent[$lastKeyPrefix]) {\n              $parent[$lastKeyPrefix] = [];\n            }\n            $parent[$lastKeyPrefix].push(resultMap[itemHash] = values);\n          }\n        }\n        if (!topExists) {\n          results.push(topValues);\n        }\n      } else {\n        results[rowsI] = topValues;\n      }\n    }\n\n    return results;\n  }\n}\n\nmodule.exports = AbstractQuery;\nmodule.exports.AbstractQuery = AbstractQuery;\nmodule.exports.default = AbstractQuery;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/postgres/query-generator.js":{"lineLengths":[13,38,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,37,29,46,70,33,28,780,61,29,47,3,46,30,21,19,16,20,46,87,88,78,86,6,119,3,35,71,3,24,80,66,76,5,60,3,22,76,3,22,163,3,18,33,3,52,42,80,23,22,28,51,65,89,5,36,52,53,21,82,102,60,7,79,48,5,46,29,47,34,116,9,9,5,63,46,44,7,17,21,25,51,5,180,3,38,28,101,3,21,51,172,3,31,51,48,145,3,41,55,1237,3,34,35,19,5,87,72,91,25,28,28,32,32,40,47,61,28,56,31,17,7,61,28,50,31,17,7,58,25,46,36,28,43,28,43,33,16,9,47,17,7,12,5,59,45,57,5,27,3,69,37,28,190,40,7,22,16,55,26,16,44,39,60,9,25,63,9,19,7,5,94,3,41,92,49,68,48,73,84,45,56,74,61,5,17,3,47,81,68,80,3,44,102,19,45,97,23,44,80,63,54,81,7,43,121,69,54,80,7,58,84,117,118,7,42,57,108,7,46,65,127,14,86,7,24,5,24,3,56,26,45,103,5,95,3,62,34,37,50,34,177,3,47,12,47,57,39,15,3,54,45,75,78,25,34,22,44,5,24,19,64,7,105,77,33,129,5,48,3,31,24,25,40,38,88,38,5,544,3,35,12,58,49,45,41,39,35,45,41,50,50,40,16,3,63,42,40,86,5,12,19,56,53,32,3,30,22,32,57,5,33,59,5,20,3,38,38,19,23,8,5,13,145,61,36,49,33,7,55,79,56,23,9,14,65,7,5,16,28,5,30,95,25,5,34,44,51,14,25,7,5,62,74,5,36,23,5,31,28,5,31,72,17,27,32,139,38,7,19,58,37,25,12,7,24,50,39,74,16,53,9,67,33,66,9,33,66,9,46,70,9,7,5,69,79,61,66,110,14,47,7,5,15,3,34,45,3,37,31,18,88,5,55,3,29,56,3,30,57,3,40,22,35,40,104,5,18,3,108,68,62,61,68,274,3,39,106,3,60,151,3,91,59,123,60,113,66,98,177,3,38,22,47,60,67,3,60,60,91,3,25,74,3,36,54,127,5,25,34,26,26,33,44,9,28,39,9,37,14,86,7,40,17,31,7,32,3,42,36,90,5,35,37,45,71,7,75,29,56,7,32,51,7,41,3,26,77,3,42,27,23,25,33,33,6,41,76,5,41,3,48,70,3,38,32,72,5,54,25,27,27,27,30,8,34,85,7,43,35,63,53,9,7,23,20,3,40,28,70,93,58,95,5,20,3,45,22,70,45,125,5,273,3,46,63,15,26,88,12,59,5,129,46,51,5,15,3,46,54,50,70,30,5,30,25,54,31,52,5,15,3,41,60,47,3,19,52,78,29,16,5,97,32,3,46,43,53,5,38,40,59,50,49,61,52,14,51,7,50,5,39,83,5,20,3,34,252,3,41,774,3,68,256,3,50,47,32,221,3,46,108,3,38,41,72,61,188,48,5,25,3,1,40,43,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/dialects/postgres/query-generator.js"],"sourcesContent":["'use strict';\n\nconst Utils = require('../../utils');\nconst util = require('util');\nconst DataTypes = require('../../data-types');\nconst AbstractQueryGenerator = require('../abstract/query-generator');\nconst semver = require('semver');\nconst _ = require('lodash');\n\n/**\n * list of reserved words in PostgreSQL 10\n * source: https://www.postgresql.org/docs/10/static/sql-keywords-appendix.html\n *\n * @private\n */\nconst POSTGRES_RESERVED_WORDS = 'all,analyse,analyze,and,any,array,as,asc,asymmetric,authorization,binary,both,case,cast,check,collate,collation,column,concurrently,constraint,create,cross,current_catalog,current_date,current_role,current_schema,current_time,current_timestamp,current_user,default,deferrable,desc,distinct,do,else,end,except,false,fetch,for,foreign,freeze,from,full,grant,group,having,ilike,in,initially,inner,intersect,into,is,isnull,join,lateral,leading,left,like,limit,localtime,localtimestamp,natural,not,notnull,null,offset,on,only,or,order,outer,overlaps,placing,primary,references,returning,right,select,session_user,similar,some,symmetric,table,tablesample,then,to,trailing,true,union,unique,user,using,variadic,verbose,when,where,window,with'.split(',');\n\nclass PostgresQueryGenerator extends AbstractQueryGenerator {\n  setSearchPath(searchPath) {\n    return `SET search_path to ${searchPath};`;\n  }\n\n  createDatabaseQuery(databaseName, options) {\n    options = {\n      encoding: null,\n      collate: null,\n      ...options\n    };\n\n    const values = {\n      database: this.quoteTable(databaseName),\n      encoding: options.encoding ? ` ENCODING = ${this.escape(options.encoding)}` : '',\n      collation: options.collate ? ` LC_COLLATE = ${this.escape(options.collate)}` : '',\n      ctype: options.ctype ? ` LC_CTYPE = ${this.escape(options.ctype)}` : '',\n      template: options.template ? ` TEMPLATE = ${this.escape(options.template)}` : ''\n    };\n\n    return `CREATE DATABASE ${values.database}${values.encoding}${values.collation}${values.ctype}${values.template};`;\n  }\n\n  dropDatabaseQuery(databaseName) {\n    return `DROP DATABASE IF EXISTS ${this.quoteTable(databaseName)};`;\n  }\n\n  createSchema(schema) {\n    const databaseVersion = _.get(this, 'sequelize.options.databaseVersion', 0);\n\n    if (databaseVersion && semver.gte(databaseVersion, '9.2.0')) {\n      return `CREATE SCHEMA IF NOT EXISTS ${this.quoteIdentifier(schema)};`;\n    }\n\n    return `CREATE SCHEMA ${this.quoteIdentifier(schema)};`;\n  }\n\n  dropSchema(schema) {\n    return `DROP SCHEMA IF EXISTS ${this.quoteIdentifier(schema)} CASCADE;`;\n  }\n\n  showSchemasQuery() {\n    return \"SELECT schema_name FROM information_schema.schemata WHERE schema_name <> 'information_schema' AND schema_name != 'public' AND schema_name !~ E'^pg_';\";\n  }\n\n  versionQuery() {\n    return 'SHOW SERVER_VERSION';\n  }\n\n  createTableQuery(tableName, attributes, options) {\n    options = { ...options };\n\n    //Postgres 9.0 does not support CREATE TABLE IF NOT EXISTS, 9.1 and above do\n    const databaseVersion = _.get(this, 'sequelize.options.databaseVersion', 0);\n    const attrStr = [];\n    let comments = '';\n    let columnComments = '';\n\n    const quotedTable = this.quoteTable(tableName);\n\n    if (options.comment && typeof options.comment === 'string') {\n      comments += `; COMMENT ON TABLE ${quotedTable} IS ${this.escape(options.comment)}`;\n    }\n\n    for (const attr in attributes) {\n      const quotedAttr = this.quoteIdentifier(attr);\n      const i = attributes[attr].indexOf('COMMENT ');\n      if (i !== -1) {\n        // Move comment to a separate query\n        const escapedCommentText = this.escape(attributes[attr].substring(i + 8));\n        columnComments += `; COMMENT ON COLUMN ${quotedTable}.${quotedAttr} IS ${escapedCommentText}`;\n        attributes[attr] = attributes[attr].substring(0, i);\n      }\n\n      const dataType = this.dataTypeMapping(tableName, attr, attributes[attr]);\n      attrStr.push(`${quotedAttr} ${dataType}`);\n    }\n\n\n    let attributesClause = attrStr.join(', ');\n\n    if (options.uniqueKeys) {\n      _.each(options.uniqueKeys, columns => {\n        if (columns.customIndex) {\n          attributesClause += `, UNIQUE (${columns.fields.map(field => this.quoteIdentifier(field)).join(', ')})`;\n        }\n      });\n    }\n\n    const pks = _.reduce(attributes, (acc, attribute, key) => {\n      if (attribute.includes('PRIMARY KEY')) {\n        acc.push(this.quoteIdentifier(key));\n      }\n      return acc;\n    }, []).join(',');\n\n    if (pks.length > 0) {\n      attributesClause += `, PRIMARY KEY (${pks})`;\n    }\n\n    return `CREATE TABLE ${databaseVersion === 0 || semver.gte(databaseVersion, '9.1.0') ? 'IF NOT EXISTS ' : ''}${quotedTable} (${attributesClause})${comments}${columnComments};`;\n  }\n\n  dropTableQuery(tableName, options) {\n    options = options || {};\n    return `DROP TABLE IF EXISTS ${this.quoteTable(tableName)}${options.cascade ? ' CASCADE' : ''};`;\n  }\n\n  showTablesQuery() {\n    const schema = this.options.schema || 'public';\n\n    return `SELECT table_name FROM information_schema.tables WHERE table_schema = ${this.escape(schema)} AND table_type LIKE '%TABLE' AND table_name != 'spatial_ref_sys';`;\n  }\n\n  tableExistsQuery(tableName) {\n    const table = tableName.tableName || tableName;\n    const schema = tableName.schema || 'public';\n\n    return `SELECT table_name FROM information_schema.tables WHERE table_schema = ${this.escape(schema)} AND table_name = ${this.escape(table)}`;\n  }\n\n  describeTableQuery(tableName, schema) {\n    schema = schema || this.options.schema || 'public';\n\n    return 'SELECT ' +\n      'pk.constraint_type as \"Constraint\",' +\n      'c.column_name as \"Field\", ' +\n      'c.column_default as \"Default\",' +\n      'c.is_nullable as \"Null\", ' +\n      '(CASE WHEN c.udt_name = \\'hstore\\' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN \\'(\\' || c.character_maximum_length || \\')\\' ELSE \\'\\' END) as \"Type\", ' +\n      '(SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", ' +\n      '(SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" ' +\n      'FROM information_schema.columns c ' +\n      'LEFT JOIN (SELECT tc.table_schema, tc.table_name, ' +\n      'cu.column_name, tc.constraint_type ' +\n      'FROM information_schema.TABLE_CONSTRAINTS tc ' +\n      'JOIN information_schema.KEY_COLUMN_USAGE  cu ' +\n      'ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name ' +\n      'and tc.constraint_name=cu.constraint_name ' +\n      'and tc.constraint_type=\\'PRIMARY KEY\\') pk ' +\n      'ON pk.table_schema=c.table_schema ' +\n      'AND pk.table_name=c.table_name ' +\n      'AND pk.column_name=c.column_name ' +\n      `WHERE c.table_name = ${this.escape(tableName)} AND c.table_schema = ${this.escape(schema)}`;\n  }\n\n  /**\n   * Check whether the statmement is json function or simple path\n   *\n   * @param   {string}  stmt  The statement to validate\n   * @returns {boolean}       true if the given statement is json function\n   * @throws  {Error}         throw if the statement looks like json function but has invalid token\n   */\n  _checkValidJsonStatement(stmt) {\n    if (typeof stmt !== 'string') {\n      return false;\n    }\n\n    // https://www.postgresql.org/docs/current/static/functions-json.html\n    const jsonFunctionRegex = /^\\s*((?:[a-z]+_){0,2}jsonb?(?:_[a-z]+){0,2})\\([^)]*\\)/i;\n    const jsonOperatorRegex = /^\\s*(->>?|#>>?|@>|<@|\\?[|&]?|\\|{2}|#-)/i;\n    const tokenCaptureRegex = /^\\s*((?:([`\"'])(?:(?!\\2).|\\2{2})*\\2)|[\\w\\d\\s]+|[().,;+-])/i;\n\n    let currentIndex = 0;\n    let openingBrackets = 0;\n    let closingBrackets = 0;\n    let hasJsonFunction = false;\n    let hasInvalidToken = false;\n\n    while (currentIndex < stmt.length) {\n      const string = stmt.substr(currentIndex);\n      const functionMatches = jsonFunctionRegex.exec(string);\n      if (functionMatches) {\n        currentIndex += functionMatches[0].indexOf('(');\n        hasJsonFunction = true;\n        continue;\n      }\n\n      const operatorMatches = jsonOperatorRegex.exec(string);\n      if (operatorMatches) {\n        currentIndex += operatorMatches[0].length;\n        hasJsonFunction = true;\n        continue;\n      }\n\n      const tokenMatches = tokenCaptureRegex.exec(string);\n      if (tokenMatches) {\n        const capturedToken = tokenMatches[1];\n        if (capturedToken === '(') {\n          openingBrackets++;\n        } else if (capturedToken === ')') {\n          closingBrackets++;\n        } else if (capturedToken === ';') {\n          hasInvalidToken = true;\n          break;\n        }\n        currentIndex += tokenMatches[0].length;\n        continue;\n      }\n\n      break;\n    }\n\n    // Check invalid json statement\n    hasInvalidToken |= openingBrackets !== closingBrackets;\n    if (hasJsonFunction && hasInvalidToken) {\n      throw new Error(`Invalid json statement: ${stmt}`);\n    }\n\n    // return true if the statement has valid json function\n    return hasJsonFunction;\n  }\n\n  handleSequelizeMethod(smth, tableName, factory, options, prepend) {\n    if (smth instanceof Utils.Json) {\n      // Parse nested object\n      if (smth.conditions) {\n        const conditions = this.parseConditionObject(smth.conditions).map(condition =>\n          `${this.jsonPathExtractionQuery(condition.path[0], _.tail(condition.path))} = '${condition.value}'`\n        );\n\n        return conditions.join(' AND ');\n      }\n      if (smth.path) {\n        let str;\n\n        // Allow specifying conditions using the postgres json syntax\n        if (this._checkValidJsonStatement(smth.path)) {\n          str = smth.path;\n        } else {\n          // Also support json property accessors\n          const paths = _.toPath(smth.path);\n          const column = paths.shift();\n          str = this.jsonPathExtractionQuery(column, paths);\n        }\n\n        if (smth.value) {\n          str += util.format(' = %s', this.escape(smth.value));\n        }\n\n        return str;\n      }\n    }\n    return super.handleSequelizeMethod.call(this, smth, tableName, factory, options, prepend);\n  }\n\n  addColumnQuery(table, key, attribute) {\n    const dbDataType = this.attributeToSQL(attribute, { context: 'addColumn', table, key });\n    const dataType = attribute.type || attribute;\n    const definition = this.dataTypeMapping(table, key, dbDataType);\n    const quotedKey = this.quoteIdentifier(key);\n    const quotedTable = this.quoteTable(this.extractTableDetails(table));\n\n    let query = `ALTER TABLE ${quotedTable} ADD COLUMN ${quotedKey} ${definition};`;\n\n    if (dataType instanceof DataTypes.ENUM) {\n      query = this.pgEnum(table, key, dataType) + query;\n    } else if (dataType.type && dataType.type instanceof DataTypes.ENUM) {\n      query = this.pgEnum(table, key, dataType.type) + query;\n    }\n\n    return query;\n  }\n\n  removeColumnQuery(tableName, attributeName) {\n    const quotedTableName = this.quoteTable(this.extractTableDetails(tableName));\n    const quotedAttributeName = this.quoteIdentifier(attributeName);\n    return `ALTER TABLE ${quotedTableName} DROP COLUMN ${quotedAttributeName};`;\n  }\n\n  changeColumnQuery(tableName, attributes) {\n    const query = subQuery => `ALTER TABLE ${this.quoteTable(tableName)} ALTER COLUMN ${subQuery};`;\n    const sql = [];\n    for (const attributeName in attributes) {\n      let definition = this.dataTypeMapping(tableName, attributeName, attributes[attributeName]);\n      let attrSql = '';\n\n      if (definition.includes('NOT NULL')) {\n        attrSql += query(`${this.quoteIdentifier(attributeName)} SET NOT NULL`);\n\n        definition = definition.replace('NOT NULL', '').trim();\n      } else if (!definition.includes('REFERENCES')) {\n        attrSql += query(`${this.quoteIdentifier(attributeName)} DROP NOT NULL`);\n      }\n\n      if (definition.includes('DEFAULT')) {\n        attrSql += query(`${this.quoteIdentifier(attributeName)} SET DEFAULT ${definition.match(/DEFAULT ([^;]+)/)[1]}`);\n\n        definition = definition.replace(/(DEFAULT[^;]+)/, '').trim();\n      } else if (!definition.includes('REFERENCES')) {\n        attrSql += query(`${this.quoteIdentifier(attributeName)} DROP DEFAULT`);\n      }\n\n      if (attributes[attributeName].startsWith('ENUM(')) {\n        attrSql += this.pgEnum(tableName, attributeName, attributes[attributeName]);\n        definition = definition.replace(/^ENUM\\(.+\\)/, this.pgEnumName(tableName, attributeName, { schema: false }));\n        definition += ` USING (${this.quoteIdentifier(attributeName)}::${this.pgEnumName(tableName, attributeName)})`;\n      }\n\n      if (definition.match(/UNIQUE;*$/)) {\n        definition = definition.replace(/UNIQUE;*$/, '');\n        attrSql += query(`ADD UNIQUE (${this.quoteIdentifier(attributeName)})`).replace('ALTER COLUMN', '');\n      }\n\n      if (definition.includes('REFERENCES')) {\n        definition = definition.replace(/.+?(?=REFERENCES)/, '');\n        attrSql += query(`ADD FOREIGN KEY (${this.quoteIdentifier(attributeName)}) ${definition}`).replace('ALTER COLUMN', '');\n      } else {\n        attrSql += query(`${this.quoteIdentifier(attributeName)} TYPE ${definition}`);\n      }\n\n      sql.push(attrSql);\n    }\n\n    return sql.join('');\n  }\n\n  renameColumnQuery(tableName, attrBefore, attributes) {\n\n    const attrString = [];\n\n    for (const attributeName in attributes) {\n      attrString.push(`${this.quoteIdentifier(attrBefore)} TO ${this.quoteIdentifier(attributeName)}`);\n    }\n\n    return `ALTER TABLE ${this.quoteTable(tableName)} RENAME COLUMN ${attrString.join(', ')};`;\n  }\n\n  fn(fnName, tableName, parameters, body, returns, language) {\n    fnName = fnName || 'testfunc';\n    language = language || 'plpgsql';\n    returns = returns ? `RETURNS ${returns}` : '';\n    parameters = parameters || '';\n\n    return `CREATE OR REPLACE FUNCTION pg_temp.${fnName}(${parameters}) ${returns} AS $func$ BEGIN ${body} END; $func$ LANGUAGE ${language}; SELECT * FROM pg_temp.${fnName}();`;\n  }\n\n  truncateTableQuery(tableName, options = {}) {\n    return [\n      `TRUNCATE ${this.quoteTable(tableName)}`,\n      options.restartIdentity ? ' RESTART IDENTITY' : '',\n      options.cascade ? ' CASCADE' : ''\n    ].join('');\n  }\n\n  deleteQuery(tableName, where, options = {}, model) {\n    const table = this.quoteTable(tableName);\n    let whereClause = this.getWhereConditions(where, null, model, options);\n    const limit = options.limit ? ` LIMIT ${this.escape(options.limit)}` : '';\n    let primaryKeys = '';\n    let primaryKeysSelection = '';\n\n    if (whereClause) {\n      whereClause = ` WHERE ${whereClause}`;\n    }\n\n    if (options.limit) {\n      if (!model) {\n        throw new Error('Cannot LIMIT delete without a model.');\n      }\n\n      const pks = Object.values(model.primaryKeys).map(pk => this.quoteIdentifier(pk.field)).join(',');\n\n      primaryKeys = model.primaryKeyAttributes.length > 1 ? `(${pks})` : pks;\n      primaryKeysSelection = pks;\n\n      return `DELETE FROM ${table} WHERE ${primaryKeys} IN (SELECT ${primaryKeysSelection} FROM ${table}${whereClause}${limit})`;\n    }\n    return `DELETE FROM ${table}${whereClause}`;\n  }\n\n  showIndexesQuery(tableName) {\n    let schemaJoin = '';\n    let schemaWhere = '';\n    if (typeof tableName !== 'string') {\n      schemaJoin = ', pg_namespace s';\n      schemaWhere = ` AND s.oid = t.relnamespace AND s.nspname = '${tableName.schema}'`;\n      tableName = tableName.tableName;\n    }\n\n    // This is ARCANE!\n    return 'SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, ' +\n      'array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) ' +\n      `AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a${schemaJoin} ` +\n      'WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND ' +\n      `t.relkind = 'r' and t.relname = '${tableName}'${schemaWhere} ` +\n      'GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;';\n  }\n\n  showConstraintsQuery(tableName) {\n    //Postgres converts camelCased alias to lowercase unless quoted\n    return [\n      'SELECT constraint_catalog AS \"constraintCatalog\",',\n      'constraint_schema AS \"constraintSchema\",',\n      'constraint_name AS \"constraintName\",',\n      'table_catalog AS \"tableCatalog\",',\n      'table_schema AS \"tableSchema\",',\n      'table_name AS \"tableName\",',\n      'constraint_type AS \"constraintType\",',\n      'is_deferrable AS \"isDeferrable\",',\n      'initially_deferred AS \"initiallyDeferred\"',\n      'from INFORMATION_SCHEMA.table_constraints',\n      `WHERE table_name='${tableName}';`\n    ].join(' ');\n  }\n\n  removeIndexQuery(tableName, indexNameOrAttributes, options) {\n    let indexName = indexNameOrAttributes;\n\n    if (typeof indexName !== 'string') {\n      indexName = Utils.underscore(`${tableName}_${indexNameOrAttributes.join('_')}`);\n    }\n\n    return [\n      'DROP INDEX',\n      options && options.concurrently && 'CONCURRENTLY',\n      `IF EXISTS ${this.quoteIdentifiers(indexName)}`\n    ].filter(Boolean).join(' ');\n  }\n\n  addLimitAndOffset(options) {\n    let fragment = '';\n    /* eslint-disable */\n    if (options.limit != null) {\n      fragment += ' LIMIT ' + this.escape(options.limit);\n    }\n    if (options.offset != null) {\n      fragment += ' OFFSET ' + this.escape(options.offset);\n    }\n    /* eslint-enable */\n\n    return fragment;\n  }\n\n  attributeToSQL(attribute, options) {\n    if (!_.isPlainObject(attribute)) {\n      attribute = {\n        type: attribute\n      };\n    }\n\n    let type;\n    if (\n      attribute.type instanceof DataTypes.ENUM ||\n      attribute.type instanceof DataTypes.ARRAY && attribute.type.type instanceof DataTypes.ENUM\n    ) {\n      const enumType = attribute.type.type || attribute.type;\n      let values = attribute.values;\n\n      if (enumType.values && !attribute.values) {\n        values = enumType.values;\n      }\n\n      if (Array.isArray(values) && values.length > 0) {\n        type = `ENUM(${values.map(value => this.escape(value)).join(', ')})`;\n\n        if (attribute.type instanceof DataTypes.ARRAY) {\n          type += '[]';\n        }\n\n      } else {\n        throw new Error(\"Values for ENUM haven't been defined.\");\n      }\n    }\n\n    if (!type) {\n      type = attribute.type;\n    }\n\n    let sql = type.toString();\n\n    if (Object.prototype.hasOwnProperty.call(attribute, 'allowNull') && !attribute.allowNull) {\n      sql += ' NOT NULL';\n    }\n\n    if (attribute.autoIncrement) {\n      if (attribute.autoIncrementIdentity) {\n        sql += ' GENERATED BY DEFAULT AS IDENTITY';\n      } else {\n        sql += ' SERIAL';\n      }\n    }\n\n    if (Utils.defaultValueSchemable(attribute.defaultValue)) {\n      sql += ` DEFAULT ${this.escape(attribute.defaultValue, attribute)}`;\n    }\n\n    if (attribute.unique === true) {\n      sql += ' UNIQUE';\n    }\n\n    if (attribute.primaryKey) {\n      sql += ' PRIMARY KEY';\n    }\n\n    if (attribute.references) {\n      let referencesTable = this.quoteTable(attribute.references.model);\n      let schema;\n\n      if (options.schema) {\n        schema = options.schema;\n      } else if (\n        (!attribute.references.model || typeof attribute.references.model == 'string')\n        && options.table\n        && options.table.schema\n      ) {\n        schema = options.table.schema;\n      }\n\n      if (schema) {\n        referencesTable = this.quoteTable(this.addSchema({\n          tableName: referencesTable,\n          _schema: schema\n        }));\n      }\n\n      let referencesKey;\n\n      if (!options.withoutForeignKeyConstraints) {\n        if (attribute.references.key) {\n          referencesKey = this.quoteIdentifiers(attribute.references.key);\n        } else {\n          referencesKey = this.quoteIdentifier('id');\n        }\n\n        sql += ` REFERENCES ${referencesTable} (${referencesKey})`;\n\n        if (attribute.onDelete) {\n          sql += ` ON DELETE ${attribute.onDelete.toUpperCase()}`;\n        }\n\n        if (attribute.onUpdate) {\n          sql += ` ON UPDATE ${attribute.onUpdate.toUpperCase()}`;\n        }\n\n        if (attribute.references.deferrable) {\n          sql += ` ${attribute.references.deferrable.toString(this)}`;\n        }\n      }\n    }\n\n    if (attribute.comment && typeof attribute.comment === 'string') {\n      if (options && ['addColumn', 'changeColumn'].includes(options.context)) {\n        const quotedAttr = this.quoteIdentifier(options.key);\n        const escapedCommentText = this.escape(attribute.comment);\n        sql += `; COMMENT ON COLUMN ${this.quoteTable(options.table)}.${quotedAttr} IS ${escapedCommentText}`;\n      } else {\n        // for createTable event which does it's own parsing\n        // TODO: centralize creation of comment statements here\n        sql += ` COMMENT ${attribute.comment}`;\n      }\n    }\n\n    return sql;\n  }\n\n  deferConstraintsQuery(options) {\n    return options.deferrable.toString(this);\n  }\n\n  setConstraintQuery(columns, type) {\n    let columnFragment = 'ALL';\n\n    if (columns) {\n      columnFragment = columns.map(column => this.quoteIdentifier(column)).join(', ');\n    }\n\n    return `SET CONSTRAINTS ${columnFragment} ${type}`;\n  }\n\n  setDeferredQuery(columns) {\n    return this.setConstraintQuery(columns, 'DEFERRED');\n  }\n\n  setImmediateQuery(columns) {\n    return this.setConstraintQuery(columns, 'IMMEDIATE');\n  }\n\n  attributesToSQL(attributes, options) {\n    const result = {};\n\n    for (const key in attributes) {\n      const attribute = attributes[key];\n      result[attribute.field || key] = this.attributeToSQL(attribute, { key, ...options });\n    }\n\n    return result;\n  }\n\n  createTrigger(tableName, triggerName, eventType, fireOnSpec, functionName, functionParams, optionsArray) {\n    const decodedEventType = this.decodeTriggerEventType(eventType);\n    const eventSpec = this.expandTriggerEventSpec(fireOnSpec);\n    const expandedOptions = this.expandOptions(optionsArray);\n    const paramList = this._expandFunctionParamList(functionParams);\n\n    return `CREATE ${this.triggerEventTypeIsConstraint(eventType)}TRIGGER ${this.quoteIdentifier(triggerName)} ${decodedEventType} ${\n      eventSpec} ON ${this.quoteTable(tableName)}${expandedOptions ? ` ${expandedOptions}` : ''} EXECUTE PROCEDURE ${functionName}(${paramList});`;\n  }\n\n  dropTrigger(tableName, triggerName) {\n    return `DROP TRIGGER ${this.quoteIdentifier(triggerName)} ON ${this.quoteTable(tableName)} RESTRICT;`;\n  }\n\n  renameTrigger(tableName, oldTriggerName, newTriggerName) {\n    return `ALTER TRIGGER ${this.quoteIdentifier(oldTriggerName)} ON ${this.quoteTable(tableName)} RENAME TO ${this.quoteIdentifier(newTriggerName)};`;\n  }\n\n  createFunction(functionName, params, returnType, language, body, optionsArray, options) {\n    if (!functionName || !returnType || !language || !body) throw new Error('createFunction missing some parameters. Did you pass functionName, returnType, language and body?');\n\n    const paramList = this._expandFunctionParamList(params);\n    const variableList = options && options.variables ? this._expandFunctionVariableList(options.variables) : '';\n    const expandedOptionsArray = this.expandOptions(optionsArray);\n\n    const statement = options && options.force ? 'CREATE OR REPLACE FUNCTION' : 'CREATE FUNCTION';\n\n    return `${statement} ${functionName}(${paramList}) RETURNS ${returnType} AS $func$ ${variableList} BEGIN ${body} END; $func$ language '${language}'${expandedOptionsArray};`;\n  }\n\n  dropFunction(functionName, params) {\n    if (!functionName) throw new Error('requires functionName');\n    // RESTRICT is (currently, as of 9.2) default but we'll be explicit\n    const paramList = this._expandFunctionParamList(params);\n    return `DROP FUNCTION ${functionName}(${paramList}) RESTRICT;`;\n  }\n\n  renameFunction(oldFunctionName, params, newFunctionName) {\n    const paramList = this._expandFunctionParamList(params);\n    return `ALTER FUNCTION ${oldFunctionName}(${paramList}) RENAME TO ${newFunctionName};`;\n  }\n\n  pgEscapeAndQuote(val) {\n    return this.quoteIdentifier(Utils.removeTicks(this.escape(val), \"'\"));\n  }\n\n  _expandFunctionParamList(params) {\n    if (params === undefined || !Array.isArray(params)) {\n      throw new Error('_expandFunctionParamList: function parameters array required, including an empty one for no arguments');\n    }\n\n    const paramList = [];\n    params.forEach(curParam => {\n      const paramDef = [];\n      if (curParam.type) {\n        if (curParam.direction) { paramDef.push(curParam.direction); }\n        if (curParam.name) { paramDef.push(curParam.name); }\n        paramDef.push(curParam.type);\n      } else {\n        throw new Error('function or trigger used with a parameter without any type');\n      }\n\n      const joined = paramDef.join(' ');\n      if (joined) paramList.push(joined);\n\n    });\n\n    return paramList.join(', ');\n  }\n\n  _expandFunctionVariableList(variables) {\n    if (!Array.isArray(variables)) {\n      throw new Error('_expandFunctionVariableList: function variables must be an array');\n    }\n    const variableDefinitions = [];\n    variables.forEach(variable => {\n      if (!variable.name || !variable.type) {\n        throw new Error('function variable must have a name and type');\n      }\n      let variableDefinition = `DECLARE ${variable.name} ${variable.type}`;\n      if (variable.default) {\n        variableDefinition += ` := ${variable.default}`;\n      }\n      variableDefinition += ';';\n      variableDefinitions.push(variableDefinition);\n    });\n    return variableDefinitions.join(' ');\n  }\n\n  expandOptions(options) {\n    return options === undefined || _.isEmpty(options) ?\n      '' : options.join(' ');\n  }\n\n  decodeTriggerEventType(eventSpecifier) {\n    const EVENT_DECODER = {\n      'after': 'AFTER',\n      'before': 'BEFORE',\n      'instead_of': 'INSTEAD OF',\n      'after_constraint': 'AFTER'\n    };\n\n    if (!EVENT_DECODER[eventSpecifier]) {\n      throw new Error(`Invalid trigger event specified: ${eventSpecifier}`);\n    }\n\n    return EVENT_DECODER[eventSpecifier];\n  }\n\n  triggerEventTypeIsConstraint(eventSpecifier) {\n    return eventSpecifier === 'after_constraint' ? 'CONSTRAINT ' : '';\n  }\n\n  expandTriggerEventSpec(fireOnSpec) {\n    if (_.isEmpty(fireOnSpec)) {\n      throw new Error('no table change events specified to trigger on');\n    }\n\n    return _.map(fireOnSpec, (fireValue, fireKey) => {\n      const EVENT_MAP = {\n        'insert': 'INSERT',\n        'update': 'UPDATE',\n        'delete': 'DELETE',\n        'truncate': 'TRUNCATE'\n      };\n\n      if (!EVENT_MAP[fireValue]) {\n        throw new Error(`parseTriggerEventSpec: undefined trigger event ${fireKey}`);\n      }\n\n      let eventSpec = EVENT_MAP[fireValue];\n      if (eventSpec === 'UPDATE') {\n        if (Array.isArray(fireValue) && fireValue.length > 0) {\n          eventSpec += ` OF ${fireValue.join(', ')}`;\n        }\n      }\n\n      return eventSpec;\n    }).join(' OR ');\n  }\n\n  pgEnumName(tableName, attr, options) {\n    options = options || {};\n\n    const tableDetails = this.extractTableDetails(tableName, options);\n    let enumName = Utils.addTicks(Utils.generateEnumName(tableDetails.tableName, attr), '\"');\n\n    // pgListEnums requires the enum name only, without the schema\n    if (options.schema !== false && tableDetails.schema) {\n      enumName = this.quoteIdentifier(tableDetails.schema) + tableDetails.delimiter + enumName;\n    }\n\n    return enumName;\n  }\n\n  pgListEnums(tableName, attrName, options) {\n    let enumName = '';\n    const tableDetails = this.extractTableDetails(tableName, options);\n\n    if (tableDetails.tableName && attrName) {\n      enumName = ` AND t.typname=${this.pgEnumName(tableDetails.tableName, attrName, { schema: false }).replace(/\"/g, \"'\")}`;\n    }\n\n    return 'SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t ' +\n      'JOIN pg_enum e ON t.oid = e.enumtypid ' +\n      'JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace ' +\n      `WHERE n.nspname = '${tableDetails.schema}'${enumName} GROUP BY 1`;\n  }\n\n  pgEnum(tableName, attr, dataType, options) {\n    const enumName = this.pgEnumName(tableName, attr, options);\n    let values;\n\n    if (dataType.values) {\n      values = `ENUM(${dataType.values.map(value => this.escape(value)).join(', ')})`;\n    } else {\n      values = dataType.toString().match(/^ENUM\\(.+\\)/)[0];\n    }\n\n    let sql = `DO ${this.escape(`BEGIN CREATE TYPE ${enumName} AS ${values}; EXCEPTION WHEN duplicate_object THEN null; END`)};`;\n    if (!!options && options.force === true) {\n      sql = this.pgEnumDrop(tableName, attr) + sql;\n    }\n    return sql;\n  }\n\n  pgEnumAdd(tableName, attr, value, options) {\n    const enumName = this.pgEnumName(tableName, attr);\n    let sql = `ALTER TYPE ${enumName} ADD VALUE `;\n\n    if (semver.gte(this.sequelize.options.databaseVersion, '9.3.0')) {\n      sql += 'IF NOT EXISTS ';\n    }\n    sql += this.escape(value);\n\n    if (options.before) {\n      sql += ` BEFORE ${this.escape(options.before)}`;\n    } else if (options.after) {\n      sql += ` AFTER ${this.escape(options.after)}`;\n    }\n\n    return sql;\n  }\n\n  pgEnumDrop(tableName, attr, enumName) {\n    enumName = enumName || this.pgEnumName(tableName, attr);\n    return `DROP TYPE IF EXISTS ${enumName}; `;\n  }\n\n  fromArray(text) {\n    text = text.replace(/^{/, '').replace(/}$/, '');\n    let matches = text.match(/(\"(?:\\\\.|[^\"\\\\\\\\])*\"|[^,]*)(?:\\s*,\\s*|\\s*$)/ig);\n\n    if (matches.length < 1) {\n      return [];\n    }\n\n    matches = matches.map(m => m.replace(/\",$/, '').replace(/,$/, '').replace(/(^\"|\"$)/g, ''));\n\n    return matches.slice(0, -1);\n  }\n\n  dataTypeMapping(tableName, attr, dataType) {\n    if (dataType.includes('PRIMARY KEY')) {\n      dataType = dataType.replace('PRIMARY KEY', '');\n    }\n\n    if (dataType.includes('SERIAL')) {\n      if (dataType.includes('BIGINT')) {\n        dataType = dataType.replace('SERIAL', 'BIGSERIAL');\n        dataType = dataType.replace('BIGINT', '');\n      } else if (dataType.includes('SMALLINT')) {\n        dataType = dataType.replace('SERIAL', 'SMALLSERIAL');\n        dataType = dataType.replace('SMALLINT', '');\n      } else {\n        dataType = dataType.replace('INTEGER', '');\n      }\n      dataType = dataType.replace('NOT NULL', '');\n    }\n\n    if (dataType.startsWith('ENUM(')) {\n      dataType = dataType.replace(/^ENUM\\(.+\\)/, this.pgEnumName(tableName, attr));\n    }\n\n    return dataType;\n  }\n\n  /**\n   * Generates an SQL query that returns all foreign keys of a table.\n   *\n   * @param  {string} tableName  The name of the table.\n   * @returns {string}            The generated sql query.\n   * @private\n   */\n  getForeignKeysQuery(tableName) {\n    return 'SELECT conname as constraint_name, pg_catalog.pg_get_constraintdef(r.oid, true) as condef FROM pg_catalog.pg_constraint r ' +\n      `WHERE r.conrelid = (SELECT oid FROM pg_class WHERE relname = '${tableName}' LIMIT 1) AND r.contype = 'f' ORDER BY 1;`;\n  }\n\n  /**\n   * Generate common SQL prefix for getForeignKeyReferencesQuery.\n   *\n   * @returns {string}\n   */\n  _getForeignKeyReferencesQueryPrefix() {\n    return 'SELECT ' +\n      'DISTINCT tc.constraint_name as constraint_name, ' +\n      'tc.constraint_schema as constraint_schema, ' +\n      'tc.constraint_catalog as constraint_catalog, ' +\n      'tc.table_name as table_name,' +\n      'tc.table_schema as table_schema,' +\n      'tc.table_catalog as table_catalog,' +\n      'tc.initially_deferred as initially_deferred,' +\n      'tc.is_deferrable as is_deferrable,' +\n      'kcu.column_name as column_name,' +\n      'ccu.table_schema  AS referenced_table_schema,' +\n      'ccu.table_catalog  AS referenced_table_catalog,' +\n      'ccu.table_name  AS referenced_table_name,' +\n      'ccu.column_name AS referenced_column_name ' +\n      'FROM information_schema.table_constraints AS tc ' +\n      'JOIN information_schema.key_column_usage AS kcu ' +\n      'ON tc.constraint_name = kcu.constraint_name ' +\n      'JOIN information_schema.constraint_column_usage AS ccu ' +\n      'ON ccu.constraint_name = tc.constraint_name ';\n  }\n\n  /**\n   * Generates an SQL query that returns all foreign keys details of a table.\n   *\n   * As for getForeignKeysQuery is not compatible with getForeignKeyReferencesQuery, so add a new function.\n   *\n   * @param {string} tableName\n   * @param {string} catalogName\n   * @param {string} schemaName\n   */\n  getForeignKeyReferencesQuery(tableName, catalogName, schemaName) {\n    return `${this._getForeignKeyReferencesQueryPrefix()\n    }WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = '${tableName}'${\n      catalogName ? ` AND tc.table_catalog = '${catalogName}'` : ''\n    }${schemaName ? ` AND tc.table_schema = '${schemaName}'` : ''}`;\n  }\n\n  getForeignKeyReferenceQuery(table, columnName) {\n    const tableName = table.tableName || table;\n    const schema = table.schema;\n    return `${this._getForeignKeyReferencesQueryPrefix()\n    }WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name='${tableName}' AND  kcu.column_name = '${columnName}'${\n      schema ? ` AND tc.table_schema = '${schema}'` : ''}`;\n  }\n\n  /**\n   * Generates an SQL query that removes a foreign key from a table.\n   *\n   * @param  {string} tableName  The name of the table.\n   * @param  {string} foreignKey The name of the foreign key constraint.\n   * @returns {string}            The generated sql query.\n   * @private\n   */\n  dropForeignKeyQuery(tableName, foreignKey) {\n    return `ALTER TABLE ${this.quoteTable(tableName)} DROP CONSTRAINT ${this.quoteIdentifier(foreignKey)};`;\n  }\n\n  /**\n   * Quote identifier in sql clause\n   *\n   * @param {string} identifier\n   * @param {boolean} force\n   *\n   * @returns {string}\n   */\n  quoteIdentifier(identifier, force) {\n    const optForceQuote = force || false;\n    const optQuoteIdentifiers = this.options.quoteIdentifiers !== false;\n    const rawIdentifier = Utils.removeTicks(identifier, '\"');\n\n    if (\n      optForceQuote === true ||\n      optQuoteIdentifiers !== false ||\n      identifier.includes('.') ||\n      identifier.includes('->') ||\n      POSTGRES_RESERVED_WORDS.includes(rawIdentifier.toLowerCase())\n    ) {\n      // In Postgres if tables or attributes are created double-quoted,\n      // they are also case sensitive. If they contain any uppercase\n      // characters, they must always be double-quoted. This makes it\n      // impossible to write queries in portable SQL if tables are created in\n      // this way. Hence, we strip quotes if we don't want case sensitivity.\n      return Utils.addTicks(rawIdentifier, '\"');\n    }\n    return rawIdentifier;\n  }\n}\n\nmodule.exports = PostgresQueryGenerator;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/abstract/query-generator.js":{"lineLengths":[13,38,41,57,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,66,29,28,34,37,57,46,46,37,55,59,68,55,38,47,48,22,24,27,78,26,77,39,45,41,37,32,3,43,28,32,12,84,78,64,6,3,20,23,38,22,12,42,38,32,28,47,18,37,7,6,3,34,51,3,58,50,16,22,39,8,32,3,29,65,3,35,89,3,40,3,59,28,38,33,36,22,40,27,22,47,94,32,14,24,24,28,31,40,22,26,51,43,30,57,9,9,5,51,38,53,33,5,112,79,66,52,54,7,57,45,57,5,109,32,5,64,32,5,81,34,65,37,47,124,67,33,54,35,18,43,11,16,109,43,11,86,122,18,133,11,9,7,5,34,95,74,5,88,93,90,139,27,24,14,33,13,10,48,74,9,36,39,16,64,9,71,14,137,57,125,9,35,144,9,109,7,5,26,104,110,35,29,31,14,6,243,182,64,72,50,43,7,63,176,129,306,12,38,38,5,71,125,5,104,44,104,5,89,104,5,29,38,25,5,18,3,80,28,56,22,23,29,34,52,48,43,34,9,94,30,9,9,5,52,49,74,79,9,99,9,43,5,88,93,90,139,32,36,64,93,11,72,9,32,24,14,33,14,22,26,30,10,14,36,91,9,137,108,7,5,109,89,115,23,67,85,50,5,35,15,23,13,33,24,15,23,27,26,16,9,7,3,69,28,38,93,22,20,33,28,22,20,109,32,5,94,69,63,57,45,91,28,16,30,9,61,7,5,67,74,47,45,57,77,34,7,5,21,46,43,30,57,9,9,5,38,153,17,7,39,82,152,14,163,7,5,83,30,16,5,165,29,38,25,5,18,3,109,28,45,115,28,31,67,68,51,57,5,37,50,61,54,57,94,5,53,57,54,49,67,5,35,15,33,12,38,21,29,23,7,3,63,28,37,27,26,12,34,5,65,63,58,60,5,53,51,49,7,38,17,21,10,7,22,28,37,7,24,89,7,49,66,68,7,50,60,23,35,9,7,64,38,7,24,36,7,20,7,24,57,5,43,45,26,5,24,53,5,40,51,12,45,5,117,12,47,13,22,18,21,13,8,12,23,5,631,36,3,42,40,51,12,45,5,35,20,16,12,58,9,7,3,44,42,53,38,43,7,51,49,7,28,37,7,24,75,7,46,7,55,48,41,20,100,93,14,19,60,100,84,14,21,46,84,9,45,87,9,100,126,14,25,100,98,14,25,46,91,86,9,120,181,95,60,102,31,78,9,31,78,9,14,14,55,5,110,69,5,29,3,52,40,51,12,45,5,35,20,16,24,43,7,3,40,31,12,13,23,24,24,25,20,18,6,33,41,47,5,36,44,47,32,26,45,33,65,41,42,9,72,20,17,80,26,103,32,26,11,22,169,61,30,17,20,70,27,80,15,13,50,109,13,11,9,40,76,47,80,81,93,56,156,63,87,49,93,133,48,71,54,15,13,11,9,34,15,49,28,15,16,50,29,104,16,49,34,9,7,19,18,70,63,55,7,55,61,15,17,5,37,103,5,54,52,5,56,109,5,94,3,26,49,56,29,26,54,6,3,38,88,3,33,36,43,75,55,75,5,45,3,36,52,45,5,44,3,19,16,3,28,19,25,46,5,28,43,27,60,9,55,14,27,59,9,33,44,7,12,42,5,16,73,5,17,3,33,28,45,51,49,7,32,45,35,105,142,44,25,11,9,7,5,72,3,19,23,23,31,6,3,44,28,45,51,96,7,32,45,35,150,9,7,5,28,3,35,62,11,53,37,47,11,16,46,9,23,62,164,9,20,7,5,3,34,75,3,49,31,16,97,27,19,21,20,39,42,79,13,9,122,40,60,9,72,22,43,54,52,14,75,5,3,42,28,32,30,29,107,24,61,20,6,23,22,23,15,11,6,26,23,14,14,6,29,28,14,64,57,34,57,5,26,59,67,64,5,116,87,18,38,66,107,141,9,7,5,84,91,43,44,70,5,26,46,31,19,9,128,69,72,53,88,9,57,100,9,7,5,19,138,50,12,33,28,46,9,56,82,58,45,64,61,9,63,71,71,23,66,33,29,37,38,84,15,17,13,33,45,97,101,48,45,49,41,33,15,48,54,64,52,44,22,41,15,15,46,11,16,44,64,33,11,39,9,73,41,33,44,35,49,49,16,18,15,67,81,57,148,25,25,26,31,14,11,24,26,69,14,11,130,100,14,137,7,52,5,90,104,26,23,56,16,57,50,45,149,13,13,9,7,5,24,208,38,57,33,58,7,5,66,97,27,23,58,16,59,9,7,5,24,67,41,77,7,40,75,7,5,72,46,21,39,14,40,7,5,19,106,179,12,38,5,54,30,45,34,7,92,32,36,55,14,31,7,107,64,7,68,32,7,5,23,3,51,56,85,3,54,51,26,50,48,7,32,32,157,9,28,55,56,27,117,50,72,80,139,69,191,0,42,87,153,127,0,120,78,59,9,28,41,70,9,67,14,133,7,100,40,7,18,7,3,59,25,20,18,6,33,32,33,23,29,28,6,24,15,18,6,18,44,121,76,75,5,65,47,53,66,26,29,55,159,28,11,121,27,25,9,44,26,9,69,227,9,19,32,24,42,99,49,114,47,110,16,97,9,56,41,92,9,39,17,15,43,11,9,54,47,41,9,14,47,37,9,7,5,26,105,12,69,59,5,47,74,5,51,86,5,26,51,60,19,9,93,75,34,9,61,59,9,41,61,9,58,85,9,62,97,9,7,5,52,60,132,14,100,42,63,9,7,61,12,61,134,14,101,43,65,9,7,59,5,12,48,46,16,6,3,48,57,60,5,46,19,5,60,53,67,25,3,48,37,59,62,7,5,16,3,39,44,34,129,16,18,36,140,172,15,32,44,173,29,92,19,44,14,28,7,5,16,46,8,40,81,34,132,24,74,135,36,81,131,9,14,71,118,7,5,88,21,49,70,28,9,5,24,55,70,28,9,22,25,39,16,40,9,7,5,40,12,141,49,24,19,17,36,7,6,3,50,28,27,28,31,22,43,90,33,46,61,67,43,9,9,5,34,29,5,56,65,57,71,60,95,73,96,68,39,51,7,5,86,3,74,36,54,63,70,64,81,39,79,7,37,107,13,35,9,7,44,117,40,52,45,59,50,150,17,22,24,15,18,6,43,21,21,21,20,65,45,35,7,5,33,46,5,140,46,5,96,149,62,12,112,97,5,94,97,94,24,132,5,53,164,23,41,5,20,33,49,26,166,26,49,9,7,5,67,12,21,21,31,16,6,3,29,56,67,57,5,3,61,60,13,5,38,38,5,25,24,67,14,36,46,15,7,34,15,7,111,21,5,41,40,50,36,94,73,63,50,42,21,49,27,36,39,12,19,40,16,21,36,114,126,27,36,11,10,17,38,35,12,73,138,139,20,86,103,20,65,34,69,32,16,21,29,55,11,10,17,31,38,27,5,46,46,5,86,10,30,10,19,17,3,32,93,41,107,5,16,3,44,30,29,39,40,36,26,9,370,103,105,28,32,39,33,27,18,80,26,11,69,9,42,151,33,63,90,67,11,9,60,7,64,57,21,32,7,31,12,94,5,45,3,55,30,13,62,87,99,69,3,76,98,68,22,60,5,66,46,36,136,9,7,5,20,3,30,22,58,72,39,35,96,14,59,7,5,20,3,69,15,82,58,5,38,29,14,60,92,14,136,7,60,85,31,40,35,11,41,39,11,9,57,7,35,59,24,11,7,102,72,46,41,14,35,7,29,38,33,9,39,37,9,7,55,5,40,22,5,37,54,92,45,48,14,39,7,61,5,35,51,51,87,9,35,43,9,86,23,5,36,48,98,7,37,19,7,43,5,40,3,30,55,32,30,5,14,3,44,82,16,5,36,78,5,21,31,27,31,33,53,33,61,9,12,62,5,91,3,44,27,80,5,72,38,128,23,64,45,113,7,5,48,58,49,59,71,24,42,5,67,25,38,21,7,52,79,7,5,25,78,88,5,17,125,88,5,99,47,5,36,44,21,14,100,7,5,60,55,5,23,82,5,24,84,5,58,125,88,5,89,50,5,48,76,5,18,82,5,24,43,105,7,100,5,33,125,106,5,122,85,3,28,24,27,5,91,46,5,107,54,5,3,40,87,54,31,35,86,128,39,9,25,47,50,12,60,5,54,21,5,56,3,44,33,57,33,67,9,12,75,5,56,62,3,35,21,44,25,52,77,14,66,7,5,47,21,23,8,111,7,37,61,7,56,53,3,51,13,47,52,20,37,5,62,32,48,50,27,62,15,34,26,23,11,9,70,94,9,43,85,9,13,5,35,91,3,23,17,3,36,78,15,111,5,34,3,23,36,32,5,32,27,5,37,23,5,11,3,49,15,19,5,32,63,5,40,48,3,28,47,44,70,5,33,53,27,15,38,29,10,7,81,5,62,3,27,17,44,67,7,54,5,15,3,66,26,33,24,71,21,7,5,71,19,17,20,45,80,9,27,134,9,53,79,9,18,18,18,64,31,152,9,101,22,25,138,18,111,18,45,33,31,19,42,35,12,9,138,25,23,24,47,45,28,9,34,33,32,34,33,89,5,27,67,6,33,26,101,7,26,36,157,7,26,36,157,7,5,67,120,5,67,121,5,105,3,66,21,35,31,37,33,7,5,28,29,21,5,56,84,5,32,41,23,37,26,9,5,63,72,35,37,14,27,7,32,42,23,36,9,5,35,41,23,36,9,5,32,31,5,30,71,21,43,41,84,7,98,5,23,41,23,36,9,5,197,3,42,22,57,30,81,7,53,20,11,3,23,17,3,19,34,3,1,80,82,32,43,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/dialects/abstract/query-generator.js"],"sourcesContent":["'use strict';\n\nconst util = require('util');\nconst _ = require('lodash');\nconst uuidv4 = require('uuid').v4;\n\nconst Utils = require('../../utils');\nconst deprecations = require('../../utils/deprecations');\nconst SqlString = require('../../sql-string');\nconst DataTypes = require('../../data-types');\nconst Model = require('../../model');\nconst Association = require('../../associations/base');\nconst BelongsTo = require('../../associations/belongs-to');\nconst BelongsToMany = require('../../associations/belongs-to-many');\nconst HasMany = require('../../associations/has-many');\nconst Op = require('../../operators');\nconst sequelizeError = require('../../errors');\nconst IndexHints = require('../../index-hints');\n\n\n/**\n * Abstract Query Generator\n *\n * @private\n */\nclass QueryGenerator {\n  constructor(options) {\n    if (!options.sequelize) throw new Error('QueryGenerator initialized without options.sequelize');\n    if (!options._dialect) throw new Error('QueryGenerator initialized without options._dialect');\n\n    this.sequelize = options.sequelize;\n    this.options = options.sequelize.options;\n\n    // dialect name\n    this.dialect = options._dialect.name;\n    this._dialect = options._dialect;\n\n    // wrap quoteIdentifier with common logic\n    this._initQuoteIdentifier();\n  }\n\n  extractTableDetails(tableName, options) {\n    options = options || {};\n    tableName = tableName || {};\n    return {\n      schema: tableName.schema || options.schema || this.options.schema || 'public',\n      tableName: _.isPlainObject(tableName) ? tableName.tableName : tableName,\n      delimiter: tableName.delimiter || options.delimiter || '.'\n    };\n  }\n\n  addSchema(param) {\n    if (!param._schema) return param.tableName || param;\n    const self = this;\n    return {\n      tableName: param.tableName || param,\n      table: param.tableName || param,\n      name: param.name || param,\n      schema: param._schema,\n      delimiter: param._schemaDelimiter || '.',\n      toString() {\n        return self.quoteTable(this);\n      }\n    };\n  }\n\n  dropSchema(tableName, options) {\n    return this.dropTableQuery(tableName, options);\n  }\n\n  describeTableQuery(tableName, schema, schemaDelimiter) {\n    const table = this.quoteTable(\n      this.addSchema({\n        tableName,\n        _schema: schema,\n        _schemaDelimiter: schemaDelimiter\n      })\n    );\n\n    return `DESCRIBE ${table};`;\n  }\n\n  dropTableQuery(tableName) {\n    return `DROP TABLE IF EXISTS ${this.quoteTable(tableName)};`;\n  }\n\n  renameTableQuery(before, after) {\n    return `ALTER TABLE ${this.quoteTable(before)} RENAME TO ${this.quoteTable(after)};`;\n  }\n\n  /**\n   * Helper method for populating the returning into bind information\n   * that is needed by some dialects (currently Oracle)\n   *\n   * @private\n   */\n  populateInsertQueryReturnIntoBinds() {\n    // noop by default\n  }\n\n  /**\n   * Returns an insert into command\n   *\n   * @param {string} table\n   * @param {object} valueHash       attribute value pairs\n   * @param {object} modelAttributes\n   * @param {object} [options]\n   *\n   * @private\n   */\n  insertQuery(table, valueHash, modelAttributes, options) {\n    options = options || {};\n    _.defaults(options, this.options);\n\n    const modelAttributeMap = {};\n    const bind = options.bind || [];\n    const fields = [];\n    const returningModelAttributes = [];\n    const returnTypes = [];\n    const values = [];\n    const quotedTable = this.quoteTable(table);\n    const bindParam = options.bindParam === undefined ? this.bindParam(bind) : options.bindParam;\n    const returnAttributes = [];\n    let query;\n    let valueQuery = '';\n    let emptyQuery = '';\n    let outputFragment = '';\n    let returningFragment = '';\n    let identityWrapperRequired = false;\n    let tmpTable = ''; //tmpTable declaration for trigger\n\n    if (modelAttributes) {\n      _.each(modelAttributes, (attribute, key) => {\n        modelAttributeMap[key] = attribute;\n        if (attribute.field) {\n          modelAttributeMap[attribute.field] = attribute;\n        }\n      });\n    }\n\n    if (this._dialect.supports['DEFAULT VALUES']) {\n      emptyQuery += ' DEFAULT VALUES';\n    } else if (this._dialect.supports['VALUES ()']) {\n      emptyQuery += ' VALUES ()';\n    }\n\n    if ((this._dialect.supports.returnValues || this._dialect.supports.returnIntoValues) && options.returning) {\n      const returnValues = this.generateReturnValues(modelAttributes, options);\n\n      returningModelAttributes.push(...returnValues.returnFields);\n      // Storing the returnTypes for dialects that need to have returning into bind information for outbinds\n      if (this._dialect.supports.returnIntoValues) {\n        returnTypes.push(...returnValues.returnTypes);\n      }\n      returningFragment = returnValues.returningFragment;\n      tmpTable = returnValues.tmpTable || '';\n      outputFragment = returnValues.outputFragment || '';\n    }\n\n    if (_.get(this, ['sequelize', 'options', 'dialectOptions', 'prependSearchPath']) || options.searchPath) {\n      // Not currently supported with search path (requires output of multiple queries)\n      options.bindParam = false;\n    }\n\n    if (this._dialect.supports.EXCEPTION && options.exception) {\n      // Not currently supported with bind parameters (requires output of multiple queries)\n      options.bindParam = false;\n    }\n\n    valueHash = Utils.removeNullValuesFromHash(valueHash, this.options.omitNull);\n    for (const key in valueHash) {\n      if (Object.prototype.hasOwnProperty.call(valueHash, key)) {\n        const value = valueHash[key];\n        fields.push(this.quoteIdentifier(key));\n\n        // SERIALS' can't be NULL in postgresql, use DEFAULT where supported\n        if (modelAttributeMap && modelAttributeMap[key] && modelAttributeMap[key].autoIncrement === true && value == null) {\n          if (!this._dialect.supports.autoIncrement.defaultValue) {\n            fields.splice(-1, 1);\n          } else if (this._dialect.supports.DEFAULT) {\n            values.push('DEFAULT');\n          } else {\n            values.push(this.escape(null));\n          }\n        } else {\n          if (modelAttributeMap && modelAttributeMap[key] && modelAttributeMap[key].autoIncrement === true) {\n            identityWrapperRequired = true;\n          }\n\n          if (value instanceof Utils.SequelizeMethod || options.bindParam === false) {\n            values.push(this.escape(value, modelAttributeMap && modelAttributeMap[key] || undefined, { context: 'INSERT' }));\n          } else {\n            values.push(this.format(value, modelAttributeMap && modelAttributeMap[key] || undefined, { context: 'INSERT' }, bindParam));\n          }\n        }\n      }\n    }\n\n    let onDuplicateKeyUpdate = '';\n\n    if (\n      !_.isEmpty(options.conflictWhere)\n      && !this._dialect.supports.inserts.onConflictWhere\n    ) {\n      throw new Error('missing dialect support for conflictWhere option');\n    }\n\n    // `options.updateOnDuplicate` is the list of field names to update if a duplicate key is hit during the insert.  It\n    // contains just the field names.  This option is _usually_ explicitly set by the corresponding query-interface\n    // upsert function.\n    if (this._dialect.supports.inserts.updateOnDuplicate && options.updateOnDuplicate) {\n      if (this._dialect.supports.inserts.updateOnDuplicate == ' ON CONFLICT DO UPDATE SET') { // postgres / sqlite\n        // If no conflict target columns were specified, use the primary key names from options.upsertKeys\n        const conflictKeys = options.upsertKeys.map(attr => this.quoteIdentifier(attr));\n        const updateKeys = options.updateOnDuplicate.map(attr => `${this.quoteIdentifier(attr)}=EXCLUDED.${this.quoteIdentifier(attr)}`);\n\n        const fragments = [\n          'ON CONFLICT',\n          '(',\n          conflictKeys.join(','),\n          ')'\n        ];\n\n        if (!_.isEmpty(options.conflictWhere)) {\n          fragments.push(this.whereQuery(options.conflictWhere, options));\n        }\n\n        // if update keys are provided, then apply them here.  if there are no updateKeys provided, then do not try to\n        // do an update.  Instead, fall back to DO NOTHING.\n        if (_.isEmpty(updateKeys)) {\n          fragments.push('DO NOTHING');\n        } else {\n          fragments.push('DO UPDATE SET', updateKeys.join(','));\n        }\n\n        onDuplicateKeyUpdate = ` ${Utils.joinSQLFragments(fragments)}`;\n\n      } else {\n        const valueKeys = options.updateOnDuplicate.map(attr => `${this.quoteIdentifier(attr)}=VALUES(${this.quoteIdentifier(attr)})`);\n        // the rough equivalent to ON CONFLICT DO NOTHING in mysql, etc is ON DUPLICATE KEY UPDATE id = id\n        // So, if no update values were provided, fall back to the identifier columns provided in the upsertKeys array.\n        // This will be the primary key in most cases, but it could be some other constraint.\n        if (_.isEmpty(valueKeys) && options.upsertKeys) {\n          valueKeys.push(...options.upsertKeys.map(attr => `${this.quoteIdentifier(attr)}=${this.quoteIdentifier(attr)}`));\n        }\n\n        // edge case... but if for some reason there were no valueKeys, and there were also no upsertKeys... then we\n        // can no longer build the requested query without a syntax error.  Let's throw something more graceful here\n        // so the devs know what the problem is.\n        if (_.isEmpty(valueKeys)) {\n          throw new Error('No update values found for ON DUPLICATE KEY UPDATE clause, and no identifier fields could be found to use instead.');\n        }\n        onDuplicateKeyUpdate += `${this._dialect.supports.inserts.updateOnDuplicate} ${valueKeys.join(',')}`;\n      }\n    }\n\n    const replacements = {\n      ignoreDuplicates: options.ignoreDuplicates ? this._dialect.supports.inserts.ignoreDuplicates : '',\n      onConflictDoNothing: options.ignoreDuplicates ? this._dialect.supports.inserts.onConflictDoNothing : '',\n      attributes: fields.join(','),\n      output: outputFragment,\n      values: values.join(','),\n      tmpTable\n    };\n\n    valueQuery = `${tmpTable}INSERT${replacements.ignoreDuplicates} INTO ${quotedTable} (${replacements.attributes})${replacements.output} VALUES (${replacements.values})${onDuplicateKeyUpdate}${replacements.onConflictDoNothing}${valueQuery}`;\n    emptyQuery = `${tmpTable}INSERT${replacements.ignoreDuplicates} INTO ${quotedTable}${replacements.output}${onDuplicateKeyUpdate}${replacements.onConflictDoNothing}${emptyQuery}`;\n\n    // Mostly for internal use, so we expect the user to know what he's doing!\n    // pg_temp functions are private per connection, so we never risk this function interfering with another one.\n    if (this._dialect.supports.EXCEPTION && options.exception) {\n      const dropFunction = 'DROP FUNCTION IF EXISTS pg_temp.testfunc()';\n\n      if (returningModelAttributes.length === 0) {\n        returningModelAttributes.push('*');\n      }\n\n      const delimiter = `$func_${uuidv4().replace(/-/g, '')}$`;\n      const selectQuery = `SELECT (testfunc.response).${returningModelAttributes.join(', (testfunc.response).')}, testfunc.sequelize_caught_exception FROM pg_temp.testfunc();`;\n\n      options.exception = 'WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL;';\n      valueQuery = `CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response ${quotedTable}, OUT sequelize_caught_exception text) RETURNS RECORD AS ${delimiter} BEGIN ${valueQuery} RETURNING * INTO response; EXCEPTION ${options.exception} END ${delimiter} LANGUAGE plpgsql; ${selectQuery} ${dropFunction}`;\n    } else {\n      valueQuery += returningFragment;\n      emptyQuery += returningFragment;\n    }\n\n    if (this._dialect.supports.returnIntoValues && options.returning) {\n      // Populating the returnAttributes array and performing operations needed for output binds of insertQuery\n      this.populateInsertQueryReturnIntoBinds(returningModelAttributes, returnTypes, bind.length, returnAttributes, options);\n    }\n\n    query = `${replacements.attributes.length ? valueQuery : emptyQuery}${returnAttributes.join(',')};`;\n    if (this._dialect.supports.finalTable) {\n      query = `SELECT * FROM FINAL TABLE(${ replacements.attributes.length ? valueQuery : emptyQuery });`;\n    }\n    if (identityWrapperRequired && this._dialect.supports.autoIncrement.identityInsert) {\n      query = `SET IDENTITY_INSERT ${quotedTable} ON; ${query} SET IDENTITY_INSERT ${quotedTable} OFF;`;\n    }\n\n    // Used by Postgres upsertQuery and calls to here with options.exception set to true\n    const result = { query };\n    if (options.bindParam !== false) {\n      result.bind = bind;\n    }\n\n    return result;\n  }\n\n  /**\n   * Returns an insert into command for multiple values.\n   *\n   * @param {string} tableName\n   * @param {object} fieldValueHashes\n   * @param {object} options\n   * @param {object} fieldMappedAttributes\n   *\n   * @private\n   */\n  bulkInsertQuery(tableName, fieldValueHashes, options, fieldMappedAttributes) {\n    options = options || {};\n    fieldMappedAttributes = fieldMappedAttributes || {};\n\n    const tuples = [];\n    const serials = {};\n    const allAttributes = [];\n    let onDuplicateKeyUpdate = '';\n\n    for (const fieldValueHash of fieldValueHashes) {\n      _.forOwn(fieldValueHash, (value, key) => {\n        if (!allAttributes.includes(key)) {\n          allAttributes.push(key);\n        }\n        if (\n          fieldMappedAttributes[key]\n          && fieldMappedAttributes[key].autoIncrement === true\n        ) {\n          serials[key] = true;\n        }\n      });\n    }\n\n    for (const fieldValueHash of fieldValueHashes) {\n      const values = allAttributes.map(key => {\n        if (\n          this._dialect.supports.bulkDefault\n          && serials[key] === true\n        ) {\n          // fieldValueHashes[key] ?? 'DEFAULT'\n          return fieldValueHash[key] != null ? fieldValueHash[key] : 'DEFAULT';\n        }\n\n        return this.escape(fieldValueHash[key], fieldMappedAttributes[key], { context: 'INSERT' });\n      });\n\n      tuples.push(`(${values.join(',')})`);\n    }\n\n    // `options.updateOnDuplicate` is the list of field names to update if a duplicate key is hit during the insert.  It\n    // contains just the field names.  This option is _usually_ explicitly set by the corresponding query-interface\n    // upsert function.\n    if (this._dialect.supports.inserts.updateOnDuplicate && options.updateOnDuplicate) {\n      if (this._dialect.supports.inserts.updateOnDuplicate == ' ON CONFLICT DO UPDATE SET') { // postgres / sqlite\n        // If no conflict target columns were specified, use the primary key names from options.upsertKeys\n        const conflictKeys = options.upsertKeys.map(attr => this.quoteIdentifier(attr));\n        const updateKeys = options.updateOnDuplicate.map(attr => `${this.quoteIdentifier(attr)}=EXCLUDED.${this.quoteIdentifier(attr)}`);\n\n        let whereClause = false;\n        if (options.conflictWhere) {\n          if (!this._dialect.supports.inserts.onConflictWhere) {\n            throw new Error(`conflictWhere not supported for dialect ${this._dialect.name}`);\n          }\n\n          whereClause = this.whereQuery(options.conflictWhere, options);\n        }\n\n        // The Utils.joinSQLFragments later on will join this as it handles nested arrays.\n        onDuplicateKeyUpdate = [\n          'ON CONFLICT',\n          '(',\n          conflictKeys.join(','),\n          ')',\n          whereClause,\n          'DO UPDATE SET',\n          updateKeys.join(',')\n        ];\n      } else { // mysql / maria\n        if (options.conflictWhere) {\n          throw new Error(`conflictWhere not supported for dialect ${this._dialect.name}`);\n        }\n\n        const valueKeys = options.updateOnDuplicate.map(attr => `${this.quoteIdentifier(attr)}=VALUES(${this.quoteIdentifier(attr)})`);\n        onDuplicateKeyUpdate = `${this._dialect.supports.inserts.updateOnDuplicate} ${valueKeys.join(',')}`;\n      }\n    }\n\n    const ignoreDuplicates = options.ignoreDuplicates ? this._dialect.supports.inserts.ignoreDuplicates : '';\n    const attributes = allAttributes.map(attr => this.quoteIdentifier(attr)).join(',');\n    const onConflictDoNothing = options.ignoreDuplicates ? this._dialect.supports.inserts.onConflictDoNothing : '';\n    let returning = '';\n\n    if (this._dialect.supports.returnValues && options.returning) {\n      const returnValues = this.generateReturnValues(fieldMappedAttributes, options);\n\n      returning += returnValues.returningFragment;\n    }\n\n    return Utils.joinSQLFragments([\n      'INSERT',\n      ignoreDuplicates,\n      'INTO',\n      this.quoteTable(tableName),\n      `(${attributes})`,\n      'VALUES',\n      tuples.join(','),\n      onDuplicateKeyUpdate,\n      onConflictDoNothing,\n      returning,\n      ';'\n    ]);\n  }\n\n  /**\n   * Returns an update query\n   *\n   * @param {string} tableName\n   * @param {object} attrValueHash\n   * @param {object} where A hash with conditions (e.g. {name: 'foo'}) OR an ID as integer\n   * @param {object} options\n   * @param {object} attributes\n   *\n   * @private\n   */\n  updateQuery(tableName, attrValueHash, where, options, attributes) {\n    options = options || {};\n    _.defaults(options, this.options);\n\n    attrValueHash = Utils.removeNullValuesFromHash(attrValueHash, options.omitNull, options);\n\n    const values = [];\n    const bind = [];\n    const modelAttributeMap = {};\n    let outputFragment = '';\n    let tmpTable = ''; // tmpTable declaration for trigger\n    let suffix = '';\n\n    if (_.get(this, ['sequelize', 'options', 'dialectOptions', 'prependSearchPath']) || options.searchPath) {\n      // Not currently supported with search path (requires output of multiple queries)\n      options.bindParam = false;\n    }\n\n    const bindParam = options.bindParam === undefined ? this.bindParam(bind) : options.bindParam;\n\n    if (this._dialect.supports['LIMIT ON UPDATE'] && options.limit) {\n      if (!['mssql', 'db2', 'oracle'].includes(this.dialect)) {\n        suffix = ` LIMIT ${this.escape(options.limit)} `;\n      } else if (this.dialect === 'oracle') {\n        // This cannot be setted in where because rownum will be quoted\n        if (where && (where.length && where.length > 0 || Object.keys(where).length > 0)) {\n          // If we have a where clause, we add AND\n          suffix += ' AND ';\n        } else {\n          // No where clause, we add where\n          suffix += ' WHERE ';\n        }\n        suffix += `rownum <= ${this.escape(options.limit)} `;\n      }\n    }\n\n    if (this._dialect.supports.returnValues && options.returning) {\n      const returnValues = this.generateReturnValues(attributes, options);\n\n      suffix += returnValues.returningFragment;\n      tmpTable = returnValues.tmpTable || '';\n      outputFragment = returnValues.outputFragment || '';\n\n      // ensure that the return output is properly mapped to model fields.\n      if (!this._dialect.supports.returnValues.output && options.returning) {\n        options.mapToModel = true;\n      }\n    }\n\n    if (attributes) {\n      _.each(attributes, (attribute, key) => {\n        modelAttributeMap[key] = attribute;\n        if (attribute.field) {\n          modelAttributeMap[attribute.field] = attribute;\n        }\n      });\n    }\n\n    for (const key in attrValueHash) {\n      if (modelAttributeMap && modelAttributeMap[key] &&\n        modelAttributeMap[key].autoIncrement === true &&\n        !this._dialect.supports.autoIncrement.update) {\n        // not allowed to update identity column\n        continue;\n      }\n\n      const value = attrValueHash[key];\n\n      if (value instanceof Utils.SequelizeMethod || options.bindParam === false) {\n        values.push(`${this.quoteIdentifier(key)}=${this.escape(value, modelAttributeMap && modelAttributeMap[key] || undefined, { context: 'UPDATE' })}`);\n      } else {\n        values.push(`${this.quoteIdentifier(key)}=${this.format(value, modelAttributeMap && modelAttributeMap[key] || undefined, { context: 'UPDATE' }, bindParam)}`);\n      }\n    }\n\n    const whereOptions = { ...options, bindParam };\n\n    if (values.length === 0) {\n      return '';\n    }\n\n    const query = `${tmpTable}UPDATE ${this.quoteTable(tableName)} SET ${values.join(',')}${outputFragment} ${this.whereQuery(where, whereOptions)}${suffix}`.trim();\n    // Used by Postgres upsertQuery and calls to here with options.exception set to true\n    const result = { query };\n    if (options.bindParam !== false) {\n      result.bind = bind;\n    }\n    return result;\n  }\n\n  /**\n   * Returns an update query using arithmetic operator\n   *\n   * @param {string} operator                    String with the arithmetic operator (e.g. '+' or '-')\n   * @param {string} tableName                   Name of the table\n   * @param {object} where                       A plain-object with conditions (e.g. {name: 'foo'}) OR an ID as integer\n   * @param {object} incrementAmountsByField     A plain-object with attribute-value-pairs\n   * @param {object} extraAttributesToBeUpdated  A plain-object with attribute-value-pairs\n   * @param {object} options\n   *\n   * @private\n   */\n  arithmeticQuery(operator, tableName, where, incrementAmountsByField, extraAttributesToBeUpdated, options) {\n    options = options || {};\n    _.defaults(options, { returning: true });\n\n    extraAttributesToBeUpdated = Utils.removeNullValuesFromHash(extraAttributesToBeUpdated, this.options.omitNull);\n\n    let outputFragment = '';\n    let returningFragment = '';\n\n    if (this._dialect.supports.returnValues && options.returning) {\n      const returnValues = this.generateReturnValues(null, options);\n\n      outputFragment = returnValues.outputFragment;\n      returningFragment = returnValues.returningFragment;\n    }\n\n    const updateSetSqlFragments = [];\n    for (const field in incrementAmountsByField) {\n      const incrementAmount = incrementAmountsByField[field];\n      const quotedField = this.quoteIdentifier(field);\n      const escapedAmount = this.escape(incrementAmount);\n      updateSetSqlFragments.push(`${quotedField}=${quotedField}${operator} ${escapedAmount}`);\n    }\n    for (const field in extraAttributesToBeUpdated) {\n      const newValue = extraAttributesToBeUpdated[field];\n      const quotedField = this.quoteIdentifier(field);\n      const escapedValue = this.escape(newValue);\n      updateSetSqlFragments.push(`${quotedField}=${escapedValue}`);\n    }\n\n    return Utils.joinSQLFragments([\n      'UPDATE',\n      this.quoteTable(tableName),\n      'SET',\n      updateSetSqlFragments.join(','),\n      outputFragment,\n      this.whereQuery(where),\n      returningFragment\n    ]);\n  }\n\n  /*\n    Returns an add index query.\n    Parameters:\n      - tableName -> Name of an existing table, possibly with schema.\n      - options:\n        - type: UNIQUE|FULLTEXT|SPATIAL\n        - name: The name of the index. Default is <table>_<attr1>_<attr2>\n        - fields: An array of attributes as string or as hash.\n                  If the attribute is a hash, it must have the following content:\n                  - name: The name of the attribute/column\n                  - length: An integer. Optional\n                  - order: 'ASC' or 'DESC'. Optional\n        - parser\n        - using\n        - operator\n        - concurrently: Pass CONCURRENT so other operations run while the index is created\n      - rawTablename, the name of the table, without schema. Used to create the name of the index\n   @private\n  */\n  addIndexQuery(tableName, attributes, options, rawTablename) {\n    options = options || {};\n\n    if (!Array.isArray(attributes)) {\n      options = attributes;\n      attributes = undefined;\n    } else {\n      options.fields = attributes;\n    }\n\n    options.prefix = options.prefix || rawTablename || tableName;\n    if (options.prefix && typeof options.prefix === 'string') {\n      options.prefix = options.prefix.replace(/\\./g, '_');\n      options.prefix = options.prefix.replace(/(\"|')/g, '');\n    }\n\n    const fieldsSql = options.fields.map(field => {\n      if (field instanceof Utils.SequelizeMethod) {\n        return this.handleSequelizeMethod(field);\n      }\n      if (typeof field === 'string') {\n        field = {\n          name: field\n        };\n      }\n      let result = '';\n\n      if (field.attribute) {\n        field.name = field.attribute;\n      }\n\n      if (!field.name) {\n        throw new Error(`The following index field has no name: ${util.inspect(field)}`);\n      }\n\n      result += this.quoteIdentifier(field.name);\n\n      if (this._dialect.supports.index.collate && field.collate) {\n        result += ` COLLATE ${this.quoteIdentifier(field.collate)}`;\n      }\n\n      if (this._dialect.supports.index.operator) {\n        const operator = field.operator || options.operator;\n        if (operator) {\n          result += ` ${operator}`;\n        }\n      }\n\n      if (this._dialect.supports.index.length && field.length) {\n        result += `(${field.length})`;\n      }\n\n      if (field.order) {\n        result += ` ${field.order}`;\n      }\n\n      return result;\n    });\n\n    if (!options.name) {\n      // Mostly for cases where addIndex is called directly by the user without an options object (for example in migrations)\n      // All calls that go through sequelize should already have a name\n      options = Utils.nameIndex(options, options.prefix);\n    }\n\n    options = Model._conformIndex(options);\n\n    if (!this._dialect.supports.index.type) {\n      delete options.type;\n    }\n\n    if (options.where) {\n      options.where = this.whereQuery(options.where);\n    }\n\n    if (typeof tableName === 'string') {\n      tableName = this.quoteIdentifiers(tableName);\n    } else {\n      tableName = this.quoteTable(tableName);\n    }\n\n    const concurrently = this._dialect.supports.index.concurrently && options.concurrently ? 'CONCURRENTLY' : undefined;\n    let ind;\n    if (this._dialect.supports.indexViaAlter) {\n      ind = [\n        'ALTER TABLE',\n        tableName,\n        concurrently,\n        'ADD'\n      ];\n    } else {\n      ind = ['CREATE'];\n    }\n\n    ind = ind.concat(\n      options.unique ? 'UNIQUE' : '',\n      options.type, 'INDEX',\n      !this._dialect.supports.indexViaAlter ? concurrently : undefined,\n      this.quoteIdentifiers(options.name),\n      this._dialect.supports.index.using === 1 && options.using ? `USING ${options.using}` : '',\n      !this._dialect.supports.indexViaAlter ? `ON ${tableName}` : undefined,\n      this._dialect.supports.index.using === 2 && options.using ? `USING ${options.using}` : '',\n      `(${fieldsSql.join(', ')})`,\n      this._dialect.supports.index.parser && options.parser ? `WITH PARSER ${options.parser}` : undefined,\n      this._dialect.supports.index.where && options.where ? options.where : undefined\n    );\n\n    return _.compact(ind).join(' ');\n  }\n\n  addConstraintQuery(tableName, options) {\n    if (typeof tableName === 'string') {\n      tableName = this.quoteIdentifiers(tableName);\n    } else {\n      tableName = this.quoteTable(tableName);\n    }\n\n    return Utils.joinSQLFragments([\n      'ALTER TABLE',\n      tableName,\n      'ADD',\n      this.getConstraintSnippet(tableName, options || {}),\n      ';'\n    ]);\n  }\n\n  getConstraintSnippet(tableName, options) {\n    let constraintSnippet, constraintName;\n\n    const fieldsSql = options.fields.map(field => {\n      if (typeof field === 'string') {\n        return this.quoteIdentifier(field);\n      }\n      if (field instanceof Utils.SequelizeMethod) {\n        return this.handleSequelizeMethod(field);\n      }\n      if (field.attribute) {\n        field.name = field.attribute;\n      }\n\n      if (!field.name) {\n        throw new Error(`The following index field has no name: ${field}`);\n      }\n\n      return this.quoteIdentifier(field.name);\n    });\n\n    const fieldsSqlQuotedString = fieldsSql.join(', ');\n    const fieldsSqlString = fieldsSql.join('_');\n\n    switch (options.type.toUpperCase()) {\n      case 'UNIQUE':\n        constraintName = this.quoteIdentifier(options.name || `${tableName}_${fieldsSqlString}_uk`);\n        constraintSnippet = `CONSTRAINT ${constraintName} UNIQUE (${fieldsSqlQuotedString})`;\n        break;\n      case 'CHECK':\n        options.where = this.whereItemsQuery(options.where);\n        constraintName = this.quoteIdentifier(options.name || `${tableName}_${fieldsSqlString}_ck`);\n        constraintSnippet = `CONSTRAINT ${constraintName} CHECK (${options.where})`;\n        break;\n      case 'DEFAULT':\n        if (options.defaultValue === undefined) {\n          throw new Error('Default value must be specified for DEFAULT CONSTRAINT');\n        }\n\n        if (this._dialect.name !== 'mssql') {\n          throw new Error('Default constraints are supported only for MSSQL dialect.');\n        }\n\n        constraintName = this.quoteIdentifier(options.name || `${tableName}_${fieldsSqlString}_df`);\n        constraintSnippet = `CONSTRAINT ${constraintName} DEFAULT (${this.escape(options.defaultValue)}) FOR ${fieldsSql[0]}`;\n        break;\n      case 'PRIMARY KEY':\n        constraintName = this.quoteIdentifier(options.name || `${tableName}_${fieldsSqlString}_pk`);\n        constraintSnippet = `CONSTRAINT ${constraintName} PRIMARY KEY (${fieldsSqlQuotedString})`;\n        break;\n      case 'FOREIGN KEY':\n        const references = options.references;\n        if (!references || !references.table || !(references.field || references.fields)) {\n          throw new Error('references object with table and field must be specified');\n        }\n        constraintName = this.quoteIdentifier(options.name || `${tableName}_${fieldsSqlString}_${references.table}_fk`);\n        const quotedReferences =\n          typeof references.field !== 'undefined'\n            ? this.quoteIdentifier(references.field)\n            : references.fields.map(f => this.quoteIdentifier(f)).join(', ');\n        const referencesSnippet = `${this.quoteTable(references.table)} (${quotedReferences})`;\n        constraintSnippet = `CONSTRAINT ${constraintName} `;\n        constraintSnippet += `FOREIGN KEY (${fieldsSqlQuotedString}) REFERENCES ${referencesSnippet}`;\n        if (options.onUpdate) {\n          constraintSnippet += ` ON UPDATE ${options.onUpdate.toUpperCase()}`;\n        }\n        if (options.onDelete) {\n          constraintSnippet += ` ON DELETE ${options.onDelete.toUpperCase()}`;\n        }\n        break;\n      default: throw new Error(`${options.type} is invalid.`);\n    }\n\n    if (options.deferrable && ['UNIQUE', 'PRIMARY KEY', 'FOREIGN KEY'].includes(options.type.toUpperCase())) {\n      constraintSnippet += ` ${this.deferConstraintsQuery(options)}`;\n    }\n\n    return constraintSnippet;\n  }\n\n  removeConstraintQuery(tableName, constraintName) {\n    if (typeof tableName === 'string') {\n      tableName = this.quoteIdentifiers(tableName);\n    } else {\n      tableName = this.quoteTable(tableName);\n    }\n\n    return Utils.joinSQLFragments([\n      'ALTER TABLE',\n      tableName,\n      'DROP CONSTRAINT',\n      this.quoteIdentifiers(constraintName)\n    ]);\n  }\n\n  /*\n    Quote an object based on its type. This is a more general version of quoteIdentifiers\n    Strings: should proxy to quoteIdentifiers\n    Arrays:\n      * Expects array in the form: [<model> (optional), <model> (optional),... String, String (optional)]\n        Each <model> can be a model, or an object {model: Model, as: String}, matching include, or an\n        association object, or the name of an association.\n      * Zero or more models can be included in the array and are used to trace a path through the tree of\n        included nested associations. This produces the correct table name for the ORDER BY/GROUP BY SQL\n        and quotes it.\n      * If a single string is appended to end of array, it is quoted.\n        If two strings appended, the 1st string is quoted, the 2nd string unquoted.\n    Objects:\n      * If raw is set, that value should be returned verbatim, without quoting\n      * If fn is set, the string should start with the value of fn, starting paren, followed by\n        the values of cols (which is assumed to be an array), quoted and joined with ', ',\n        unless they are themselves objects\n      * If direction is set, should be prepended\n\n    Currently this function is only used for ordering / grouping columns and Sequelize.col(), but it could\n    potentially also be used for other places where we want to be able to call SQL functions (e.g. as default values)\n   @private\n  */\n  quote(collection, parent, connector) {\n    // init\n    const validOrderOptions = [\n      'ASC',\n      'DESC',\n      'ASC NULLS LAST',\n      'DESC NULLS LAST',\n      'ASC NULLS FIRST',\n      'DESC NULLS FIRST',\n      'NULLS FIRST',\n      'NULLS LAST'\n    ];\n\n    // default\n    connector = connector || '.';\n\n    // just quote as identifiers if string\n    if (typeof collection === 'string') {\n      return this.quoteIdentifiers(collection);\n    }\n    if (Array.isArray(collection)) {\n      // iterate through the collection and mutate objects into associations\n      collection.forEach((item, index) => {\n        const previous = collection[index - 1];\n        let previousAssociation;\n        let previousModel;\n\n        // set the previous as the parent when previous is undefined or the target of the association\n        if (!previous && parent !== undefined) {\n          previousModel = parent;\n        } else if (previous && previous instanceof Association) {\n          previousAssociation = previous;\n          previousModel = previous.target;\n        }\n\n        // if the previous item is a model, then attempt getting an association\n        if (previousModel && previousModel.prototype instanceof Model) {\n          let model;\n          let as;\n\n          if (typeof item === 'function' && item.prototype instanceof Model) {\n            // set\n            model = item;\n          } else if (_.isPlainObject(item) && item.model && item.model.prototype instanceof Model) {\n            // set\n            model = item.model;\n            as = item.as;\n          }\n\n          if (model) {\n            // set the as to either the through name or the model name\n            if (!as && previousAssociation && previousAssociation instanceof Association && previousAssociation.through && previousAssociation.through.model === model) {\n              // get from previous association\n              item = new Association(previousModel, model, {\n                as: model.name\n              });\n            } else {\n              // get association from previous model\n              item = previousModel.getAssociationForAlias(model, as);\n\n              // attempt to use the model name if the item is still null\n              if (!item) {\n                item = previousModel.getAssociationForAlias(model, model.name);\n              }\n            }\n\n            // make sure we have an association\n            if (!(item instanceof Association)) {\n              throw new Error(util.format('Unable to find a valid association for model, \\'%s\\'', model.name));\n            }\n          }\n        }\n\n        if (typeof item === 'string') {\n          // get order index\n          const orderIndex = validOrderOptions.indexOf(item.toUpperCase());\n\n          // see if this is an order\n          if (index > 0 && orderIndex !== -1) {\n            item = this.sequelize.literal(` ${validOrderOptions[orderIndex]}`);\n          } else if (previousModel && previousModel.prototype instanceof Model) {\n            // only go down this path if we have preivous model and check only once\n            if (previousModel.associations !== undefined && previousModel.associations[item]) {\n              // convert the item to an association\n              item = previousModel.associations[item];\n            } else if (previousModel.rawAttributes !== undefined && previousModel.rawAttributes[item] && item !== previousModel.rawAttributes[item].field) {\n              // convert the item attribute from its alias\n              item = previousModel.rawAttributes[item].field;\n            } else if (\n              item.includes('.')\n              && previousModel.rawAttributes !== undefined\n            ) {\n              const itemSplit = item.split('.');\n\n              if (previousModel.rawAttributes[itemSplit[0]].type instanceof DataTypes.JSON) {\n                // just quote identifiers for now\n                const identifier = this.quoteIdentifiers(`${previousModel.name}.${previousModel.rawAttributes[itemSplit[0]].field}`);\n\n                // get path\n                const path = itemSplit.slice(1);\n\n                // extract path\n                item = this.jsonPathExtractionQuery(identifier, path);\n\n                // literal because we don't want to append the model name when string\n                item = this.sequelize.literal(item);\n              }\n            }\n          }\n        }\n\n        collection[index] = item;\n      }, this);\n\n      // loop through array, adding table names of models to quoted\n      const collectionLength = collection.length;\n      const tableNames = [];\n      let item;\n      let i = 0;\n\n      for (i = 0; i < collectionLength - 1; i++) {\n        item = collection[i];\n        if (typeof item === 'string' || item._modelAttribute || item instanceof Utils.SequelizeMethod) {\n          break;\n        } else if (item instanceof Association) {\n          tableNames[i] = item.as;\n        }\n      }\n\n      // start building sql\n      let sql = '';\n\n      if (i > 0) {\n        sql += `${this.quoteIdentifier(tableNames.join(connector))}.`;\n      } else if (typeof collection[0] === 'string' && parent) {\n        sql += `${this.quoteIdentifier(parent.name)}.`;\n      }\n\n      // loop through everything past i and append to the sql\n      collection.slice(i).forEach(collectionItem => {\n        sql += this.quote(collectionItem, parent, connector);\n      }, this);\n\n      return sql;\n    }\n    if (collection._modelAttribute) {\n      return `${this.quoteTable(collection.Model.name)}.${this.quoteIdentifier(collection.fieldName)}`;\n    }\n    if (collection instanceof Utils.SequelizeMethod) {\n      return this.handleSequelizeMethod(collection);\n    }\n    if (_.isPlainObject(collection) && collection.raw) {\n      // simple objects with raw is no longer supported\n      throw new Error('The `{raw: \"...\"}` syntax is no longer supported.  Use `sequelize.literal` instead.');\n    }\n    throw new Error(`Unknown structure passed to order / group: ${util.inspect(collection)}`);\n  }\n\n  _initQuoteIdentifier() {\n    this._quoteIdentifier = this.quoteIdentifier;\n    this.quoteIdentifier = function(identifier, force) {\n      if (identifier === '*') return identifier;\n      return this._quoteIdentifier(identifier, force);\n    };\n  }\n\n  /**\n   * Adds quotes to identifier\n   *\n   * @param {string} identifier\n   * @param {boolean} force\n   *\n   * @returns {string}\n   */\n  quoteIdentifier(identifier, force) {\n    throw new Error(`quoteIdentifier for Dialect \"${this.dialect}\" is not implemented`);\n  }\n\n  /**\n   * Split a list of identifiers by \".\" and quote each part.\n   *\n   * @param {string} identifiers\n   *\n   * @returns {string}\n   */\n  quoteIdentifiers(identifiers) {\n    if (identifiers.includes('.')) {\n      identifiers = identifiers.split('.');\n\n      const head = identifiers.slice(0, identifiers.length - 1).join('->');\n      const tail = identifiers[identifiers.length - 1];\n\n      return `${this.quoteIdentifier(head)}.${this.quoteIdentifier(tail)}`;\n    }\n\n    return this.quoteIdentifier(identifiers);\n  }\n\n  quoteAttribute(attribute, model) {\n    if (model && attribute in model.rawAttributes) {\n      return this.quoteIdentifier(attribute);\n    }\n    return this.quoteIdentifiers(attribute);\n  }\n\n  /**\n   * Returns the alias token\n   *\n   * @returns {string}\n   */\n  getAliasToken() {\n    return 'AS';\n  }\n\n  /**\n   * Quote table name with optional alias and schema attribution\n   *\n   * @param {string|object}  param table string or object\n   * @param {string|boolean} alias alias name\n   *\n   * @returns {string}\n   */\n  quoteTable(param, alias) {\n    let table = '';\n\n    if (alias === true) {\n      alias = param.as || param.name || param;\n    }\n\n    if (_.isObject(param)) {\n      if (this._dialect.supports.schemas) {\n        if (param.schema) {\n          table += `${this.quoteIdentifier(param.schema)}.`;\n        }\n\n        table += this.quoteIdentifier(param.tableName);\n      } else {\n        if (param.schema) {\n          table += param.schema + (param.delimiter || '.');\n        }\n\n        table += param.tableName;\n        table = this.quoteIdentifier(table);\n      }\n    } else {\n      table = this.quoteIdentifier(param);\n    }\n\n    if (alias) {\n      table += ` ${this.getAliasToken()} ${this.quoteIdentifier(alias)}`;\n    }\n\n    return table;\n  }\n\n  /*\n    Escape a value (e.g. a string, number or date)\n    @private\n  */\n  escape(value, field, options) {\n    options = options || {};\n\n    if (value !== null && value !== undefined) {\n      if (value instanceof Utils.SequelizeMethod) {\n        return this.handleSequelizeMethod(value);\n      }\n      if (field && field.type) {\n        this.validate(value, field, options);\n\n        if (field.type.stringify) {\n          // Users shouldn't have to worry about these args - just give them a function that takes a single arg\n          const simpleEscape = escVal => SqlString.escape(escVal, this.options.timezone, this.dialect);\n\n          value = field.type.stringify(value, { escape: simpleEscape, field, timezone: this.options.timezone, operation: options.operation });\n\n          if (field.type.escape === false) {\n            // The data-type already did the required escaping\n            return value;\n          }\n        }\n      }\n    }\n    return SqlString.escape(value, this.options.timezone, this.dialect);\n  }\n\n  bindParam(bind) {\n    return value => {\n      bind.push(value);\n      return `$${bind.length}`;\n    };\n  }\n\n  /*\n    Returns a bind parameter representation of a value (e.g. a string, number or date)\n    @private\n  */\n  format(value, field, options, bindParam) {\n    options = options || {};\n\n    if (value !== null && value !== undefined) {\n      if (value instanceof Utils.SequelizeMethod) {\n        throw new Error('Cannot pass SequelizeMethod as a bind parameter - use escape instead');\n      }\n      if (field && field.type) {\n        this.validate(value, field, options);\n\n        if (field.type.bindParam) {\n          return field.type.bindParam(value, { escape: _.identity, field, timezone: this.options.timezone, operation: options.operation, bindParam });\n        }\n      }\n    }\n\n    return bindParam(value);\n  }\n\n  /*\n    Validate a value against a field specification\n    @private\n  */\n  validate(value, field, options) {\n    if (this.typeValidation && field.type.validate && value) {\n      try {\n        if (options.isList && Array.isArray(value)) {\n          for (const item of value) {\n            field.type.validate(item, options);\n          }\n        } else {\n          field.type.validate(value, options);\n        }\n      } catch (error) {\n        if (error instanceof sequelizeError.ValidationError) {\n          error.errors.push(new sequelizeError.ValidationErrorItem(\n            error.message,\n            'Validation error',\n            field.fieldName,\n            value,\n            null,\n            `${field.type.key} validator`\n          ));\n        }\n\n        throw error;\n      }\n    }\n  }\n\n  isIdentifierQuoted(identifier) {\n    return /^\\s*(?:([`\"'])(?:(?!\\1).|\\1{2})*\\1\\.?)+\\s*$/i.test(identifier);\n  }\n\n  /**\n   * Generates an SQL query that extract JSON property of given path.\n   *\n   * @param   {string}               column   The JSON column\n   * @param   {string|Array<string>} [path]   The path to extract (optional)\n   * @param   {boolean}              [isJson] The value is JSON use alt symbols (optional)\n   * @returns {string}                        The generated sql query\n   * @private\n   */\n  jsonPathExtractionQuery(column, path, isJson) {\n    let paths = _.toPath(path);\n    let pathStr;\n    const quotedColumn = this.isIdentifierQuoted(column)\n      ? column\n      : this.quoteIdentifier(column);\n\n    switch (this.dialect) {\n      case 'mysql':\n      case 'mariadb':\n      case 'sqlite':\n        /**\n         * Non digit sub paths need to be quoted as ECMAScript identifiers\n         * https://bugs.mysql.com/bug.php?id=81896\n         */\n        if (this.dialect === 'mysql') {\n          paths = paths.map(subPath => {\n            return /\\D/.test(subPath)\n              ? Utils.addTicks(subPath, '\"')\n              : subPath;\n          });\n        }\n\n        pathStr = this.escape(['$']\n          .concat(paths)\n          .join('.')\n          .replace(/\\.(\\d+)(?:(?=\\.)|$)/g, (__, digit) => `[${digit}]`));\n\n        if (this.dialect === 'sqlite') {\n          return `json_extract(${quotedColumn},${pathStr})`;\n        }\n\n        return `json_unquote(json_extract(${quotedColumn},${pathStr}))`;\n\n      case 'postgres':\n        const join = isJson ? '#>' : '#>>';\n        pathStr = this.escape(`{${paths.join(',')}}`);\n        return `(${quotedColumn}${join}${pathStr})`;\n\n      default:\n        throw new Error(`Unsupported ${this.dialect} for JSON operations`);\n    }\n  }\n\n  /*\n    Returns a query for selecting elements in the table <tableName>.\n    Options:\n      - attributes -> An array of attributes (e.g. ['name', 'birthday']). Default: *\n      - where -> A hash with conditions (e.g. {name: 'foo'})\n                 OR an ID as integer\n      - order -> e.g. 'id DESC'\n      - group\n      - limit -> The maximum count you want to get.\n      - offset -> An offset value to start from. Only useable with limit!\n   @private\n  */\n  selectQuery(tableName, options, model) {\n    options = options || {};\n    const limit = options.limit;\n    const mainQueryItems = [];\n    const subQueryItems = [];\n    const subQuery = options.subQuery === undefined ? limit && options.hasMultiAssociation : options.subQuery;\n    const attributes = {\n      main: options.attributes && options.attributes.slice(),\n      subQuery: null\n    };\n    const mainTable = {\n      name: tableName,\n      quotedName: null,\n      as: null,\n      model\n    };\n    const topLevelInfo = {\n      names: mainTable,\n      options,\n      subQuery\n    };\n    let mainJoinQueries = [];\n    let subJoinQueries = [];\n    let query;\n\n    // Aliases can be passed through subqueries and we don't want to reset them\n    if (this.options.minifyAliases && !options.aliasesMapping) {\n      options.aliasesMapping = new Map();\n      options.aliasesByTable = {};\n      options.includeAliases = new Map();\n    }\n\n    // resolve table name options\n    if (options.tableAs) {\n      mainTable.as = this.quoteIdentifier(options.tableAs);\n    } else if (!Array.isArray(mainTable.name) && mainTable.model) {\n      mainTable.as = this.quoteIdentifier(mainTable.model.name);\n    }\n\n    mainTable.quotedName = !Array.isArray(mainTable.name) ? this.quoteTable(mainTable.name) : tableName.map(t => {\n      return Array.isArray(t) ? this.quoteTable(t[0], t[1]) : this.quoteTable(t, true);\n    }).join(', ');\n\n    if (subQuery && attributes.main) {\n      for (const keyAtt of mainTable.model.primaryKeyAttributes) {\n        // Check if mainAttributes contain the primary key of the model either as a field or an aliased field\n        if (!attributes.main.some(attr => keyAtt === attr || keyAtt === attr[0] || keyAtt === attr[1])) {\n          attributes.main.push(mainTable.model.rawAttributes[keyAtt].field ? [keyAtt, mainTable.model.rawAttributes[keyAtt].field] : keyAtt);\n        }\n      }\n    }\n\n    attributes.main = this.escapeAttributes(attributes.main, options, mainTable.as);\n    attributes.main = attributes.main || (options.include ? [`${mainTable.as}.*`] : ['*']);\n\n    // If subquery, we add the mainAttributes to the subQuery and set the mainAttributes to select * from subquery\n    if (subQuery || options.groupedLimit) {\n      // We need primary keys\n      attributes.subQuery = attributes.main;\n      attributes.main = [`${mainTable.as || mainTable.quotedName}.*`];\n    }\n\n    if (options.include) {\n      for (const include of options.include) {\n        if (include.separate) {\n          continue;\n        }\n        const joinQueries = this.generateInclude(include, { externalAs: mainTable.as, internalAs: mainTable.as }, topLevelInfo);\n\n        subJoinQueries = subJoinQueries.concat(joinQueries.subQuery);\n        mainJoinQueries = mainJoinQueries.concat(joinQueries.mainQuery);\n\n        if (joinQueries.attributes.main.length > 0) {\n          attributes.main = _.uniq(attributes.main.concat(joinQueries.attributes.main));\n        }\n        if (joinQueries.attributes.subQuery.length > 0) {\n          attributes.subQuery = _.uniq(attributes.subQuery.concat(joinQueries.attributes.subQuery));\n        }\n      }\n    }\n\n    if (subQuery) {\n      subQueryItems.push(this.selectFromTableFragment(options, mainTable.model, attributes.subQuery, mainTable.quotedName, mainTable.as));\n      subQueryItems.push(subJoinQueries.join(''));\n    } else {\n      if (options.groupedLimit) {\n        if (!mainTable.as) {\n          mainTable.as = mainTable.quotedName;\n        }\n        const where = { ...options.where };\n        let groupedLimitOrder,\n          whereKey,\n          include,\n          groupedTableName = mainTable.as;\n\n        if (typeof options.groupedLimit.on === 'string') {\n          whereKey = options.groupedLimit.on;\n        } else if (options.groupedLimit.on instanceof HasMany) {\n          whereKey = options.groupedLimit.on.foreignKeyField;\n        }\n\n        if (options.groupedLimit.on instanceof BelongsToMany) {\n          // BTM includes needs to join the through table on to check ID\n          groupedTableName = options.groupedLimit.on.manyFromSource.as;\n          const groupedLimitOptions = Model._validateIncludedElements({\n            include: [{\n              association: options.groupedLimit.on.manyFromSource,\n              duplicating: false, // The UNION'ed query may contain duplicates, but each sub-query cannot\n              required: true,\n              where: {\n                [Op.placeholder]: true,\n                ...options.groupedLimit.through && options.groupedLimit.through.where\n              }\n            }],\n            model\n          });\n\n          // Make sure attributes from the join table are mapped back to models\n          options.hasJoin = true;\n          options.hasMultiAssociation = true;\n          options.includeMap = Object.assign(groupedLimitOptions.includeMap, options.includeMap);\n          options.includeNames = groupedLimitOptions.includeNames.concat(options.includeNames || []);\n          include = groupedLimitOptions.include;\n\n          if (Array.isArray(options.order)) {\n            // We need to make sure the order by attributes are available to the parent query\n            options.order.forEach((order, i) => {\n              if (Array.isArray(order)) {\n                order = order[0];\n              }\n\n              let alias = `subquery_order_${i}`;\n              options.attributes.push([order, alias]);\n\n              // We don't want to prepend model name when we alias the attributes, so quote them here\n              alias = this.sequelize.literal(this.quote(alias));\n\n              if (Array.isArray(options.order[i])) {\n                options.order[i][0] = alias;\n              } else {\n                options.order[i] = alias;\n              }\n            });\n            groupedLimitOrder = options.order;\n          }\n        } else {\n          // Ordering is handled by the subqueries, so ordering the UNION'ed result is not needed\n          groupedLimitOrder = options.order;\n\n          // For the Oracle dialect, the result of a select is a set, not a sequence, and so is the result of UNION.\n          // So the top level ORDER BY is required\n          if (!this._dialect.supports.topLevelOrderByRequired) {\n            delete options.order;\n          }\n          where[Op.placeholder] = true;\n        }\n\n        // Caching the base query and splicing the where part into it is consistently > twice\n        // as fast than generating from scratch each time for values.length >= 5\n        const baseQuery = `SELECT * FROM (${this.selectQuery(\n          tableName,\n          {\n            attributes: options.attributes,\n            offset: options.offset,\n            limit: options.groupedLimit.limit,\n            order: groupedLimitOrder,\n            aliasesMapping: options.aliasesMapping,\n            aliasesByTable: options.aliasesByTable,\n            where,\n            include,\n            model\n          },\n          model\n        ).replace(/;$/, '')}) ${this.getAliasToken()} sub`; // Every derived table must have its own alias\n        const placeHolder = this.whereItemQuery(Op.placeholder, true, { model });\n        const splicePos = baseQuery.indexOf(placeHolder);\n\n        mainQueryItems.push(this.selectFromTableFragment(options, mainTable.model, attributes.main, `(${\n          options.groupedLimit.values.map(value => {\n            let groupWhere;\n            if (whereKey) {\n              groupWhere = {\n                [whereKey]: value\n              };\n            }\n            if (include) {\n              groupWhere = {\n                [options.groupedLimit.on.foreignIdentifierField]: value\n              };\n            }\n\n            return Utils.spliceStr(baseQuery, splicePos, placeHolder.length, this.getWhereConditions(groupWhere, groupedTableName));\n          }).join(\n            this._dialect.supports['UNION ALL'] ? ' UNION ALL ' : ' UNION '\n          )\n        })`, mainTable.as));\n      } else {\n        mainQueryItems.push(this.selectFromTableFragment(options, mainTable.model, attributes.main, mainTable.quotedName, mainTable.as));\n      }\n\n      mainQueryItems.push(mainJoinQueries.join(''));\n    }\n\n    // Add WHERE to sub or main query\n    if (Object.prototype.hasOwnProperty.call(options, 'where') && !options.groupedLimit) {\n      options.where = this.getWhereConditions(options.where, mainTable.as || tableName, model, options);\n      if (options.where) {\n        if (subQuery) {\n          subQueryItems.push(` WHERE ${options.where}`);\n        } else {\n          mainQueryItems.push(` WHERE ${options.where}`);\n          // Walk the main query to update all selects\n          mainQueryItems.forEach((value, key) => {\n            if (value.startsWith('SELECT')) {\n              mainQueryItems[key] = this.selectFromTableFragment(options, model, attributes.main, mainTable.quotedName, mainTable.as, options.where);\n            }\n          });\n        }\n      }\n    }\n\n    // Add GROUP BY to sub or main query\n    if (options.group) {\n      options.group = Array.isArray(options.group) ? options.group.map(t => this.aliasGrouping(t, model, mainTable.as, options)).join(', ') : this.aliasGrouping(options.group, model, mainTable.as, options);\n\n      if (subQuery && options.group) {\n        subQueryItems.push(` GROUP BY ${options.group}`);\n      } else if (options.group) {\n        mainQueryItems.push(` GROUP BY ${options.group}`);\n      }\n    }\n\n    // Add HAVING to sub or main query\n    if (Object.prototype.hasOwnProperty.call(options, 'having')) {\n      options.having = this.getWhereConditions(options.having, tableName, model, options, false);\n      if (options.having) {\n        if (subQuery) {\n          subQueryItems.push(` HAVING ${options.having}`);\n        } else {\n          mainQueryItems.push(` HAVING ${options.having}`);\n        }\n      }\n    }\n\n    // Add ORDER to sub or main query\n    if (options.order) {\n      const orders = this.getQueryOrders(options, model, subQuery);\n      if (orders.mainQueryOrder.length) {\n        mainQueryItems.push(` ORDER BY ${orders.mainQueryOrder.join(', ')}`);\n      }\n      if (orders.subQueryOrder.length) {\n        subQueryItems.push(` ORDER BY ${orders.subQueryOrder.join(', ')}`);\n      }\n    }\n\n    // Add LIMIT, OFFSET to sub or main query\n    const limitOrder = this.addLimitAndOffset(options, mainTable.model);\n    if (limitOrder && !options.groupedLimit) {\n      if (subQuery) {\n        subQueryItems.push(limitOrder);\n      } else {\n        mainQueryItems.push(limitOrder);\n      }\n    }\n\n    if (subQuery) {\n      this._throwOnEmptyAttributes(attributes.main, { modelName: model && model.name, as: mainTable.as });\n      query = `SELECT ${attributes.main.join(', ')} FROM (${subQueryItems.join('')}) ${this.getAliasToken()} ${mainTable.as}${mainJoinQueries.join('')}${mainQueryItems.join('')}`;\n    } else {\n      query = mainQueryItems.join('');\n    }\n\n    if (options.lock && this._dialect.supports.lock) {\n      let lock = options.lock;\n      if (typeof options.lock === 'object') {\n        lock = options.lock.level;\n      }\n      if (this._dialect.supports.lockKey && ['KEY SHARE', 'NO KEY UPDATE'].includes(lock)) {\n        query += ` FOR ${lock}`;\n      } else if (lock === 'SHARE') {\n        query += ` ${this._dialect.supports.forShare}`;\n      } else {\n        query += ' FOR UPDATE';\n      }\n      if (this._dialect.supports.lockOf && options.lock.of && options.lock.of.prototype instanceof Model) {\n        query += ` OF ${this.quoteTable(options.lock.of.name)}`;\n      }\n      if (this._dialect.supports.skipLocked && options.skipLocked) {\n        query += ' SKIP LOCKED';\n      }\n    }\n\n    return `${query};`;\n  }\n\n  aliasGrouping(field, model, tableName, options) {\n    const src = Array.isArray(field) ? field[0] : field;\n\n    return this.quote(this._getAliasForField(tableName, src, options) || src, model);\n  }\n\n  escapeAttributes(attributes, options, mainTableAs) {\n    return attributes && attributes.map(attr => {\n      let addTable = true;\n\n      if (attr instanceof Utils.SequelizeMethod) {\n        return this.handleSequelizeMethod(attr);\n      }\n      if (Array.isArray(attr)) {\n        if (attr.length !== 2) {\n          throw new Error(`${JSON.stringify(attr)} is not a valid attribute definition. Please use the following format: ['attribute definition', 'alias']`);\n        }\n        attr = attr.slice();\n\n        if (attr[0] instanceof Utils.SequelizeMethod) {\n          attr[0] = this.handleSequelizeMethod(attr[0]);\n          addTable = false;\n        } else if (this.options.attributeBehavior === 'escape' || !attr[0].includes('(') && !attr[0].includes(')')) {\n          attr[0] = this.quoteIdentifier(attr[0]);\n        } else if (this.options.attributeBehavior !== 'unsafe-legacy') {\n          throw new Error(`Attributes cannot include parentheses in Sequelize 6:\nIn order to fix the vulnerability CVE-2023-22578, we had to remove support for treating attributes as raw SQL if they included parentheses.\nSequelize 7 escapes all attributes, even if they include parentheses.\nFor Sequelize 6, because we're introducing this change in a minor release, we've opted for throwing an error instead of silently escaping the attribute as a way to warn you about this change.\n\nHere is what you can do to fix this error:\n- Wrap the attribute in a literal() call. This will make Sequelize treat it as raw SQL.\n- Set the \"attributeBehavior\" sequelize option to \"escape\" to make Sequelize escape the attribute, like in Sequelize v7. We highly recommend this option.\n- Set the \"attributeBehavior\" sequelize option to \"unsafe-legacy\" to make Sequelize escape the attribute, like in Sequelize v5.\n\nWe sincerely apologize for the inconvenience this may cause you. You can find more information on the following threads:\nhttps://github.com/sequelize/sequelize/security/advisories/GHSA-f598-mfpv-gmfx\nhttps://github.com/sequelize/sequelize/discussions/15694`);\n        }\n\n        let alias = attr[1];\n\n        if (this.options.minifyAliases) {\n          alias = this._getMinifiedAlias(alias, mainTableAs, options);\n        }\n\n        attr = [attr[0], this.quoteIdentifier(alias)].join(' AS ');\n      } else {\n        attr = !attr.includes(Utils.TICK_CHAR) && !attr.includes('\"')\n          ? this.quoteAttribute(attr, options.model)\n          : this.escape(attr);\n      }\n      if (!_.isEmpty(options.include) && (!attr.includes('.') || options.dotNotation) && addTable) {\n        attr = `${mainTableAs}.${attr}`;\n      }\n\n      return attr;\n    });\n  }\n\n  generateInclude(include, parentTableName, topLevelInfo) {\n    const joinQueries = {\n      mainQuery: [],\n      subQuery: []\n    };\n    const mainChildIncludes = [];\n    const subChildIncludes = [];\n    let requiredMismatch = false;\n    const includeAs = {\n      internalAs: include.as,\n      externalAs: include.as\n    };\n    const attributes = {\n      main: [],\n      subQuery: []\n    };\n    let joinQuery;\n\n    topLevelInfo.options.keysEscaped = true;\n\n    if (topLevelInfo.names.name !== parentTableName.externalAs && topLevelInfo.names.as !== parentTableName.externalAs) {\n      includeAs.internalAs = `${parentTableName.internalAs}->${include.as}`;\n      includeAs.externalAs = `${parentTableName.externalAs}.${include.as}`;\n    }\n\n    // includeIgnoreAttributes is used by aggregate functions\n    if (topLevelInfo.options.includeIgnoreAttributes !== false) {\n      include.model._expandAttributes(include);\n      Utils.mapFinderOptions(include, include.model);\n\n      const includeAttributes = include.attributes.map(attr => {\n        let attrAs = attr;\n        let verbatim = false;\n\n        if (Array.isArray(attr) && attr.length === 2) {\n          if (attr[0] instanceof Utils.SequelizeMethod && (\n            attr[0] instanceof Utils.Literal ||\n            attr[0] instanceof Utils.Cast ||\n            attr[0] instanceof Utils.Fn\n          )) {\n            verbatim = true;\n          }\n\n          attr = attr.map(attr => attr instanceof Utils.SequelizeMethod ? this.handleSequelizeMethod(attr) : attr);\n\n          attrAs = attr[1];\n          attr = attr[0];\n        }\n        if (attr instanceof Utils.Literal) {\n          return attr.val; // We trust the user to rename the field correctly\n        }\n        if (attr instanceof Utils.Cast || attr instanceof Utils.Fn) {\n          throw new Error(\n            'Tried to select attributes using Sequelize.cast or Sequelize.fn without specifying an alias for the result, during eager loading. ' +\n            'This means the attribute will not be added to the returned instance'\n          );\n        }\n\n        let prefix;\n        if (verbatim === true) {\n          prefix = attr;\n        } else if (/#>>|->>/.test(attr)) {\n          prefix = `(${this.quoteIdentifier(includeAs.internalAs)}.${attr.replace(/\\(|\\)/g, '')})`;\n        } else if (/json_extract\\(/.test(attr)) {\n          prefix = attr.replace(/json_extract\\(/i, `json_extract(${this.quoteIdentifier(includeAs.internalAs)}.`);\n        } else if (/json_value\\(/.test(attr)) {\n          prefix = attr.replace(/json_value\\(/i, `json_value(${this.quoteIdentifier(includeAs.internalAs)}.`);\n        } else {\n          prefix = `${this.quoteIdentifier(includeAs.internalAs)}.${this.quoteIdentifier(attr)}`;\n        }\n        let alias = `${includeAs.externalAs}.${attrAs}`;\n\n        if (this.options.minifyAliases) {\n          alias = this._getMinifiedAlias(alias, includeAs.internalAs, topLevelInfo.options);\n        }\n\n        return Utils.joinSQLFragments([\n          prefix,\n          'AS',\n          this.quoteIdentifier(alias, true)\n        ]);\n      });\n      if (include.subQuery && topLevelInfo.subQuery) {\n        for (const attr of includeAttributes) {\n          attributes.subQuery.push(attr);\n        }\n      } else {\n        for (const attr of includeAttributes) {\n          attributes.main.push(attr);\n        }\n      }\n    }\n\n    //through\n    if (include.through) {\n      joinQuery = this.generateThroughJoin(include, includeAs, parentTableName.internalAs, topLevelInfo);\n    } else {\n      this._generateSubQueryFilter(include, includeAs, topLevelInfo);\n      joinQuery = this.generateJoin(include, topLevelInfo);\n    }\n\n    // handle possible new attributes created in join\n    if (joinQuery.attributes.main.length > 0) {\n      attributes.main = attributes.main.concat(joinQuery.attributes.main);\n    }\n\n    if (joinQuery.attributes.subQuery.length > 0) {\n      attributes.subQuery = attributes.subQuery.concat(joinQuery.attributes.subQuery);\n    }\n\n    if (include.include) {\n      for (const childInclude of include.include) {\n        if (childInclude.separate || childInclude._pseudo) {\n          continue;\n        }\n\n        const childJoinQueries = this.generateInclude(childInclude, includeAs, topLevelInfo);\n\n        if (include.required === false && childInclude.required === true) {\n          requiredMismatch = true;\n        }\n        // if the child is a sub query we just give it to the\n        if (childInclude.subQuery && topLevelInfo.subQuery) {\n          subChildIncludes.push(childJoinQueries.subQuery);\n        }\n        if (childJoinQueries.mainQuery) {\n          mainChildIncludes.push(childJoinQueries.mainQuery);\n        }\n        if (childJoinQueries.attributes.main.length > 0) {\n          attributes.main = attributes.main.concat(childJoinQueries.attributes.main);\n        }\n        if (childJoinQueries.attributes.subQuery.length > 0) {\n          attributes.subQuery = attributes.subQuery.concat(childJoinQueries.attributes.subQuery);\n        }\n      }\n    }\n\n    if (include.subQuery && topLevelInfo.subQuery) {\n      if (requiredMismatch && subChildIncludes.length > 0) {\n        joinQueries.subQuery.push(` ${joinQuery.join} ( ${joinQuery.body}${subChildIncludes.join('')} ) ON ${joinQuery.condition}`);\n      } else {\n        joinQueries.subQuery.push(` ${joinQuery.join} ${joinQuery.body} ON ${joinQuery.condition}`);\n        if (subChildIncludes.length > 0) {\n          joinQueries.subQuery.push(subChildIncludes.join(''));\n        }\n      }\n      joinQueries.mainQuery.push(mainChildIncludes.join(''));\n    } else {\n      if (requiredMismatch && mainChildIncludes.length > 0) {\n        joinQueries.mainQuery.push(` ${joinQuery.join} ( ${joinQuery.body}${mainChildIncludes.join('')} ) ON ${joinQuery.condition}`);\n      } else {\n        joinQueries.mainQuery.push(` ${joinQuery.join} ${joinQuery.body} ON ${joinQuery.condition}`);\n        if (mainChildIncludes.length > 0) {\n          joinQueries.mainQuery.push(mainChildIncludes.join(''));\n        }\n      }\n      joinQueries.subQuery.push(subChildIncludes.join(''));\n    }\n\n    return {\n      mainQuery: joinQueries.mainQuery.join(''),\n      subQuery: joinQueries.subQuery.join(''),\n      attributes\n    };\n  }\n\n  _getMinifiedAlias(alias, tableName, options) {\n    // We do not want to re-alias in case of a subquery\n    if (options.aliasesByTable[`${tableName}${alias}`]) {\n      return options.aliasesByTable[`${tableName}${alias}`];\n    }\n\n    // Do not alias custom suquery_orders\n    if (alias.match(/subquery_order_[0-9]/)) {\n      return alias;\n    }\n\n    const minifiedAlias = `_${options.aliasesMapping.size}`;\n\n    options.aliasesMapping.set(minifiedAlias, alias);\n    options.aliasesByTable[`${tableName}${alias}`] = minifiedAlias;\n\n    return minifiedAlias;\n  }\n\n  _getAliasForField(tableName, field, options) {\n    if (this.options.minifyAliases) {\n      if (options.aliasesByTable[`${tableName}${field}`]) {\n        return options.aliasesByTable[`${tableName}${field}`];\n      }\n    }\n    return null;\n  }\n\n  generateJoin(include, topLevelInfo) {\n    const association = include.association;\n    const parent = include.parent;\n    const parentIsTop = !!parent && !include.parent.association && include.parent.model.name === topLevelInfo.options.model.name;\n    let $parent;\n    let joinWhere;\n    /* Attributes for the left side */\n    const left = association.source;\n    const attrLeft = association instanceof BelongsTo ?\n      association.identifier :\n      association.sourceKeyAttribute || left.primaryKeyAttribute;\n    const fieldLeft = association instanceof BelongsTo ?\n      association.identifierField :\n      left.rawAttributes[association.sourceKeyAttribute || left.primaryKeyAttribute].field;\n    let asLeft;\n    /* Attributes for the right side */\n    const right = include.model;\n    const tableRight = right.getTableName();\n    const fieldRight = association instanceof BelongsTo ?\n      right.rawAttributes[association.targetIdentifier || right.primaryKeyAttribute].field :\n      association.identifierField;\n    let asRight = include.as;\n\n    while (($parent = $parent && $parent.parent || include.parent) && $parent.association) {\n      if (asLeft) {\n        asLeft = `${$parent.as}->${asLeft}`;\n      } else {\n        asLeft = $parent.as;\n      }\n    }\n\n    if (!asLeft) asLeft = parent.as || parent.model.name;\n    else asRight = `${asLeft}->${asRight}`;\n\n    let joinOn = `${this.quoteTable(asLeft)}.${this.quoteIdentifier(fieldLeft)}`;\n    const subqueryAttributes = [];\n\n    if (topLevelInfo.options.groupedLimit && parentIsTop || topLevelInfo.subQuery && include.parent.subQuery && !include.subQuery) {\n      if (parentIsTop) {\n        // The main model attributes is not aliased to a prefix\n        const tableName = this.quoteTable(parent.as || parent.model.name);\n\n        // Check for potential aliased JOIN condition\n        joinOn = this._getAliasForField(tableName, attrLeft, topLevelInfo.options) || `${tableName}.${this.quoteIdentifier(attrLeft)}`;\n\n        if (topLevelInfo.subQuery) {\n          const dbIdentifier = `${tableName}.${this.quoteIdentifier(fieldLeft)}`;\n          subqueryAttributes.push(dbIdentifier !== joinOn ? `${dbIdentifier} AS ${this.quoteIdentifier(attrLeft)}` : dbIdentifier);\n        }\n      } else {\n        const joinSource = `${asLeft.replace(/->/g, '.')}.${attrLeft}`;\n\n        // Check for potential aliased JOIN condition\n        joinOn = this._getAliasForField(asLeft, joinSource, topLevelInfo.options) || this.quoteIdentifier(joinSource);\n      }\n    }\n\n    joinOn += ` = ${this.quoteIdentifier(asRight)}.${this.quoteIdentifier(fieldRight)}`;\n\n    if (include.on) {\n      joinOn = this.whereItemsQuery(include.on, {\n        prefix: this.sequelize.literal(this.quoteIdentifier(asRight)),\n        model: include.model\n      });\n    }\n\n    if (include.where) {\n      joinWhere = this.whereItemsQuery(include.where, {\n        prefix: this.sequelize.literal(this.quoteIdentifier(asRight)),\n        model: include.model\n      });\n      if (joinWhere) {\n        if (include.or) {\n          joinOn += ` OR ${joinWhere}`;\n        } else {\n          joinOn += ` AND ${joinWhere}`;\n        }\n      }\n    }\n\n    this.aliasAs(asRight, topLevelInfo);\n\n    return {\n      join: include.required ? 'INNER JOIN' : include.right && this._dialect.supports['RIGHT JOIN'] ? 'RIGHT OUTER JOIN' : 'LEFT OUTER JOIN',\n      body: this.quoteTable(tableRight, asRight),\n      condition: joinOn,\n      attributes: {\n        main: [],\n        subQuery: subqueryAttributes\n      }\n    };\n  }\n\n  /**\n   * Returns the SQL fragments to handle returning the attributes from an insert/update query.\n   *\n   * @param  {object} modelAttributes An object with the model attributes.\n   * @param  {object} options         An object with options.\n   *\n   * @private\n   */\n  generateReturnValues(modelAttributes, options) {\n    const returnFields = [];\n    const returnTypes = [];\n    let outputFragment = '';\n    let returningFragment = '';\n    let tmpTable = '';\n\n    if (Array.isArray(options.returning)) {\n      returnFields.push(...options.returning.map(field => this.quoteIdentifier(field)));\n    } else if (modelAttributes) {\n      _.each(modelAttributes, attribute => {\n        if (!(attribute.type instanceof DataTypes.VIRTUAL)) {\n          returnFields.push(this.quoteIdentifier(attribute.field));\n          returnTypes.push(attribute.type);\n        }\n      });\n    }\n\n    if (_.isEmpty(returnFields)) {\n      returnFields.push('*');\n    }\n\n    if (this._dialect.supports.returnValues.returning) {\n      returningFragment = ` RETURNING ${returnFields.join(',')}`;\n    } else if (this._dialect.supports.returnIntoValues) {\n      returningFragment = ` RETURNING ${returnFields.join(',')} INTO `;\n    } else if (this._dialect.supports.returnValues.output) {\n      outputFragment = ` OUTPUT ${returnFields.map(field => `INSERTED.${field}`).join(',')}`;\n\n      //To capture output rows when there is a trigger on MSSQL DB\n      if (options.hasTrigger && this._dialect.supports.tmpTableTrigger) {\n        const tmpColumns = returnFields.map((field, i) => `${field} ${returnTypes[i].toSql()}`);\n\n        tmpTable = `DECLARE @tmp TABLE (${tmpColumns.join(',')}); `;\n        outputFragment += ' INTO @tmp';\n        returningFragment = '; SELECT * FROM @tmp';\n      }\n    }\n\n    return { outputFragment, returnFields, returnTypes, returningFragment, tmpTable };\n  }\n\n  generateThroughJoin(include, includeAs, parentTableName, topLevelInfo) {\n    const through = include.through;\n    const throughTable = through.model.getTableName();\n    const throughAs = `${includeAs.internalAs}->${through.as}`;\n    const externalThroughAs = `${includeAs.externalAs}.${through.as}`;\n    const throughAttributes = through.attributes.map(attr => {\n      let alias = `${externalThroughAs}.${Array.isArray(attr) ? attr[1] : attr}`;\n\n      if (this.options.minifyAliases) {\n        alias = this._getMinifiedAlias(alias, throughAs, topLevelInfo.options);\n      }\n\n      return Utils.joinSQLFragments([\n        `${this.quoteIdentifier(throughAs)}.${this.quoteIdentifier(Array.isArray(attr) ? attr[0] : attr)}`,\n        'AS',\n        this.quoteIdentifier(alias)\n      ]);\n    });\n    const association = include.association;\n    const parentIsTop = !include.parent.association && include.parent.model.name === topLevelInfo.options.model.name;\n    const tableSource = parentTableName;\n    const identSource = association.identifierField;\n    const tableTarget = includeAs.internalAs;\n    const identTarget = association.foreignIdentifierField;\n    const attrTarget = association.targetKeyField;\n\n    const joinType = include.required ? 'INNER JOIN' : include.right && this._dialect.supports['RIGHT JOIN'] ? 'RIGHT OUTER JOIN' : 'LEFT OUTER JOIN';\n    let joinBody;\n    let joinCondition;\n    const attributes = {\n      main: [],\n      subQuery: []\n    };\n    let attrSource = association.sourceKey;\n    let sourceJoinOn;\n    let targetJoinOn;\n    let throughWhere;\n    let targetWhere;\n\n    if (topLevelInfo.options.includeIgnoreAttributes !== false) {\n      // Through includes are always hasMany, so we need to add the attributes to the mainAttributes no matter what (Real join will never be executed in subquery)\n      for (const attr of throughAttributes) {\n        attributes.main.push(attr);\n      }\n    }\n\n    // Figure out if we need to use field or attribute\n    if (!topLevelInfo.subQuery) {\n      attrSource = association.sourceKeyField;\n    }\n    if (topLevelInfo.subQuery && !include.subQuery && !include.parent.subQuery && include.parent.model !== topLevelInfo.options.mainModel) {\n      attrSource = association.sourceKeyField;\n    }\n\n    // Filter statement for left side of through\n    // Used by both join and subquery where\n    // If parent include was in a subquery need to join on the aliased attribute\n    if (topLevelInfo.subQuery && !include.subQuery && include.parent.subQuery && !parentIsTop) {\n      // If we are minifying aliases and our JOIN target has been minified, we need to use the alias instead of the original column name\n      const joinSource = this._getAliasForField(tableSource, `${tableSource}.${attrSource}`, topLevelInfo.options) || `${tableSource}.${attrSource}`;\n\n      sourceJoinOn = `${this.quoteIdentifier(joinSource)} = `;\n    } else {\n      // If we are minifying aliases and our JOIN target has been minified, we need to use the alias instead of the original column name\n      const aliasedSource = this._getAliasForField(tableSource, attrSource, topLevelInfo.options) || attrSource;\n\n      sourceJoinOn = `${this.quoteTable(tableSource)}.${this.quoteIdentifier(aliasedSource)} = `;\n    }\n    sourceJoinOn += `${this.quoteIdentifier(throughAs)}.${this.quoteIdentifier(identSource)}`;\n\n    // Filter statement for right side of through\n    // Used by both join and subquery where\n    targetJoinOn = `${this.quoteIdentifier(tableTarget)}.${this.quoteIdentifier(attrTarget)} = `;\n    targetJoinOn += `${this.quoteIdentifier(throughAs)}.${this.quoteIdentifier(identTarget)}`;\n\n    if (through.where) {\n      throughWhere = this.getWhereConditions(through.where, this.sequelize.literal(this.quoteIdentifier(throughAs)), through.model);\n    }\n\n    this.aliasAs(includeAs.internalAs, topLevelInfo);\n\n    // Generate a wrapped join so that the through table join can be dependent on the target join\n    joinBody = `( ${this.quoteTable(throughTable, throughAs)} INNER JOIN ${this.quoteTable(include.model.getTableName(), includeAs.internalAs)} ON ${targetJoinOn}`;\n    if (throughWhere) {\n      joinBody += ` AND ${throughWhere}`;\n    }\n    joinBody += ')';\n    joinCondition = sourceJoinOn;\n\n    if (include.where || include.through.where) {\n      if (include.where) {\n        targetWhere = this.getWhereConditions(include.where, this.sequelize.literal(this.quoteIdentifier(includeAs.internalAs)), include.model, topLevelInfo.options);\n        if (targetWhere) {\n          joinCondition += ` AND ${targetWhere}`;\n        }\n      }\n    }\n\n    this._generateSubQueryFilter(include, includeAs, topLevelInfo);\n\n    return {\n      join: joinType,\n      body: joinBody,\n      condition: joinCondition,\n      attributes\n    };\n  }\n\n  /*\n   * Appends to the alias cache if the alias 64+ characters long and minifyAliases is true.\n   * This helps to avoid character limits in PostgreSQL.\n   */\n  aliasAs(as, topLevelInfo) {\n    if (this.options.minifyAliases && as.length >= 64) {\n      const alias = `%${topLevelInfo.options.includeAliases.size}`;\n\n      topLevelInfo.options.includeAliases.set(alias, as);\n    }\n  }\n\n  /*\n   * Generates subQueryFilter - a select nested in the where clause of the subQuery.\n   * For a given include a query is generated that contains all the way from the subQuery\n   * table to the include table plus everything that's in required transitive closure of the\n   * given include.\n   */\n  _generateSubQueryFilter(include, includeAs, topLevelInfo) {\n    if (!topLevelInfo.subQuery || !include.subQueryFilter) {\n      return;\n    }\n\n    if (!topLevelInfo.options.where) {\n      topLevelInfo.options.where = {};\n    }\n    let parent = include;\n    let child = include;\n    let nestedIncludes = this._getRequiredClosure(include).include;\n    let query;\n\n    while ((parent = parent.parent)) { // eslint-disable-line\n      if (parent.parent && !parent.required) {\n        return; // only generate subQueryFilter if all the parents of this include are required\n      }\n\n      if (parent.subQueryFilter) {\n        // the include is already handled as this parent has the include on its required closure\n        // skip to prevent duplicate subQueryFilter\n        return;\n      }\n\n      nestedIncludes = [{ ...child, include: nestedIncludes, attributes: [] }];\n      child = parent;\n    }\n\n    const topInclude = nestedIncludes[0];\n    const topParent = topInclude.parent;\n    const topAssociation = topInclude.association;\n    topInclude.association = undefined;\n\n    if (topInclude.through && Object(topInclude.through.model) === topInclude.through.model) {\n      query = this.selectQuery(topInclude.through.model.getTableName(), {\n        attributes: [topInclude.through.model.primaryKeyField],\n        include: Model._validateIncludedElements({\n          model: topInclude.through.model,\n          include: [{\n            association: topAssociation.toTarget,\n            required: true,\n            where: topInclude.where,\n            include: topInclude.include\n          }]\n        }).include,\n        model: topInclude.through.model,\n        where: {\n          [Op.and]: [\n            this.sequelize.literal([\n              `${this.quoteTable(topParent.model.name)}.${this.quoteIdentifier(topParent.model.primaryKeyField)}`,\n              `${this.quoteIdentifier(topInclude.through.model.name)}.${this.quoteIdentifier(topAssociation.identifierField)}`\n            ].join(' = ')),\n            topInclude.through.where\n          ]\n        },\n        limit: 1,\n        includeIgnoreAttributes: false\n      }, topInclude.through.model);\n    } else {\n      const isBelongsTo = topAssociation.associationType === 'BelongsTo';\n      const sourceField = isBelongsTo ? topAssociation.identifierField : topAssociation.sourceKeyField || topParent.model.primaryKeyField;\n      const targetField = isBelongsTo ? topAssociation.sourceKeyField || topInclude.model.primaryKeyField : topAssociation.identifierField;\n\n      const join = [\n        `${this.quoteIdentifier(topInclude.as)}.${this.quoteIdentifier(targetField)}`,\n        `${this.quoteTable(topParent.as || topParent.model.name)}.${this.quoteIdentifier(sourceField)}`\n      ].join(' = ');\n\n      query = this.selectQuery(topInclude.model.getTableName(), {\n        attributes: [targetField],\n        include: Model._validateIncludedElements(topInclude).include,\n        model: topInclude.model,\n        where: {\n          [Op.and]: [\n            topInclude.where,\n            { [Op.join]: this.sequelize.literal(join) }\n          ]\n        },\n        limit: 1,\n        tableAs: topInclude.as,\n        includeIgnoreAttributes: false\n      }, topInclude.model);\n    }\n\n    if (!topLevelInfo.options.where[Op.and]) {\n      topLevelInfo.options.where[Op.and] = [];\n    }\n\n    topLevelInfo.options.where[`__${includeAs.internalAs}`] = this.sequelize.literal([\n      '(',\n      query.replace(/;$/, ''),\n      ')',\n      'IS NOT NULL'\n    ].join(' '));\n  }\n\n  /*\n   * For a given include hierarchy creates a copy of it where only the required includes\n   * are preserved.\n   */\n  _getRequiredClosure(include) {\n    const copy = { ...include, attributes: [], include: [] };\n\n    if (Array.isArray(include.include)) {\n      copy.include = include.include\n        .filter(i => i.required)\n        .map(inc => this._getRequiredClosure(inc));\n    }\n\n    return copy;\n  }\n\n  getQueryOrders(options, model, subQuery) {\n    const mainQueryOrder = [];\n    const subQueryOrder = [];\n\n    if (Array.isArray(options.order)) {\n      for (let order of options.order) {\n\n        // wrap if not array\n        if (!Array.isArray(order)) {\n          order = [order];\n        }\n\n        if (\n          subQuery\n          && Array.isArray(order)\n          && order[0]\n          && !(order[0] instanceof Association)\n          && !(typeof order[0] === 'function' && order[0].prototype instanceof Model)\n          && !(typeof order[0].model === 'function' && order[0].model.prototype instanceof Model)\n          && !(typeof order[0] === 'string' && model && model.associations !== undefined && model.associations[order[0]])\n        ) {\n          const field = model.rawAttributes[order[0]] ? model.rawAttributes[order[0]].field : order[0];\n          const subQueryAlias = this._getAliasForField(this.quoteIdentifier(model.name), field, options);\n\n          let parent = null;\n          let orderToQuote = [];\n\n          // we need to ensure that the parent is null if we use the subquery alias, else we'll get an exception since\n          // \"model_name\".\"alias\" doesn't exist - only \"alias\" does. we also need to ensure that we preserve order direction\n          // by pushing order[1] to the subQueryOrder as well - in case it doesn't exist, we want to push \"ASC\"\n          if (subQueryAlias === null) {\n            orderToQuote = order;\n            parent = model;\n          } else {\n            orderToQuote = [subQueryAlias, order.length > 1 ? order[1] : 'ASC'];\n            parent = null;\n          }\n\n          subQueryOrder.push(this.quote(orderToQuote, parent, '->'));\n        }\n\n        // Handle case where renamed attributes are used to order by,\n        // see https://github.com/sequelize/sequelize/issues/8739\n        // need to check if either of the attribute options match the order\n        if (options.attributes && model) {\n          const aliasedAttribute = options.attributes.find(attr => Array.isArray(attr)\n              && attr[1]\n              && (attr[0] === order[0] || attr[1] === order[0]));\n\n          if (aliasedAttribute) {\n            const modelName = this.quoteIdentifier(model.name);\n            const alias = this._getAliasForField(modelName, aliasedAttribute[1], options);\n\n            order[0] = new Utils.Col(alias || aliasedAttribute[1]);\n          }\n        }\n\n        mainQueryOrder.push(this.quote(order, model, '->'));\n      }\n    } else if (options.order instanceof Utils.SequelizeMethod) {\n      const sql = this.quote(options.order, model, '->');\n      if (subQuery) {\n        subQueryOrder.push(sql);\n      }\n      mainQueryOrder.push(sql);\n    } else {\n      throw new Error('Order must be type of array or instance of a valid sequelize method.');\n    }\n\n    return { mainQueryOrder, subQueryOrder };\n  }\n\n  _throwOnEmptyAttributes(attributes, extraInfo = {}) {\n    if (attributes.length > 0) return;\n    const asPart = extraInfo.as && `as ${extraInfo.as}` || '';\n    const namePart = extraInfo.modelName && `for model '${extraInfo.modelName}'` || '';\n    const message = `Attempted a SELECT query ${namePart} ${asPart} without selecting any columns`;\n    throw new sequelizeError.QueryError(message.replace(/ +/g, ' '));\n  }\n\n  selectFromTableFragment(options, model, attributes, tables, mainTableAs) {\n    this._throwOnEmptyAttributes(attributes, { modelName: model && model.name, as: mainTableAs });\n\n    let fragment = `SELECT ${attributes.join(', ')} FROM ${tables}`;\n\n    if (mainTableAs) {\n      fragment += ` ${this.getAliasToken()} ${mainTableAs}`;\n    }\n\n    if (options.indexHints && this._dialect.supports.indexHints) {\n      for (const hint of options.indexHints) {\n        if (IndexHints[hint.type]) {\n          fragment += ` ${IndexHints[hint.type]} INDEX (${hint.values.map(indexName => this.quoteIdentifiers(indexName)).join(',')})`;\n        }\n      }\n    }\n\n    return fragment;\n  }\n\n  /**\n   * Returns an SQL fragment for adding result constraints.\n   *\n   * @param  {object} options An object with selectQuery options.\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  addLimitAndOffset(options) {\n    let fragment = '';\n\n    /* eslint-disable */\n    if (options.offset != null && options.limit == null) {\n      fragment += ' LIMIT ' + this.escape(options.offset) + ', ' + 10000000000000;\n    } else if (options.limit != null) {\n      if (options.offset != null) {\n        fragment += ' LIMIT ' + this.escape(options.offset) + ', ' + this.escape(options.limit);\n      } else {\n        fragment += ' LIMIT ' + this.escape(options.limit);\n      }\n    }\n    /* eslint-enable */\n\n    return fragment;\n  }\n\n  handleSequelizeMethod(smth, tableName, factory, options, prepend) {\n    let result;\n\n    if (Object.prototype.hasOwnProperty.call(this.OperatorMap, smth.comparator)) {\n      smth.comparator = this.OperatorMap[smth.comparator];\n    }\n\n    if (smth instanceof Utils.Where) {\n      let value = smth.logic;\n      let key;\n\n      if (smth.attribute instanceof Utils.SequelizeMethod) {\n        key = this.getWhereConditions(smth.attribute, tableName, factory, options, prepend);\n      } else {\n        key = `${this.quoteTable(smth.attribute.Model.name)}.${this.quoteIdentifier(smth.attribute.field || smth.attribute.fieldName)}`;\n      }\n\n      if (value && value instanceof Utils.SequelizeMethod) {\n        value = this.getWhereConditions(value, tableName, factory, options, prepend);\n\n        if (value === 'NULL') {\n          if (smth.comparator === '=') {\n            smth.comparator = 'IS';\n          }\n          if (smth.comparator === '!=') {\n            smth.comparator = 'IS NOT';\n          }\n        }\n\n        return [key, value].join(` ${smth.comparator} `);\n      }\n      if (_.isPlainObject(value)) {\n        return this.whereItemQuery(smth.attribute, value, {\n          model: factory\n        });\n      }\n      if ([this.OperatorMap[Op.between], this.OperatorMap[Op.notBetween]].includes(smth.comparator)) {\n        value = `${this.escape(value[0])} AND ${this.escape(value[1])}`;\n      } else if (typeof value === 'boolean') {\n        value = this.booleanValue(value);\n      } else {\n        value = this.escape(value);\n      }\n\n      if (value === 'NULL') {\n        if (smth.comparator === '=') {\n          smth.comparator = 'IS';\n        }\n        if (smth.comparator === '!=') {\n          smth.comparator = 'IS NOT';\n        }\n      }\n\n      return [key, value].join(` ${smth.comparator} `);\n    }\n    if (smth instanceof Utils.Literal) {\n      return smth.val;\n    }\n    if (smth instanceof Utils.Cast) {\n      if (smth.val instanceof Utils.SequelizeMethod) {\n        result = this.handleSequelizeMethod(smth.val, tableName, factory, options, prepend);\n      } else if (_.isPlainObject(smth.val)) {\n        result = this.whereItemsQuery(smth.val);\n      } else {\n        result = this.escape(smth.val);\n      }\n\n      return `CAST(${result} AS ${smth.type.toUpperCase()})`;\n    }\n    if (smth instanceof Utils.Fn) {\n      return `${smth.fn}(${\n        smth.args.map(arg => {\n          if (arg instanceof Utils.SequelizeMethod) {\n            return this.handleSequelizeMethod(arg, tableName, factory, options, prepend);\n          }\n          if (_.isPlainObject(arg)) {\n            return this.whereItemsQuery(arg);\n          }\n          return this.escape(typeof arg === 'string' ? arg.replace(/\\$/g, '$$$') : arg);\n        }).join(', ')\n      })`;\n    }\n    if (smth instanceof Utils.Col) {\n      if (Array.isArray(smth.col) && !factory) {\n        throw new Error('Cannot call Sequelize.col() with array outside of order / group clause');\n      }\n      if (smth.col.startsWith('*')) {\n        return '*';\n      }\n      return this.quote(smth.col, factory);\n    }\n    return smth.toString(this, factory);\n  }\n\n  whereQuery(where, options) {\n    const query = this.whereItemsQuery(where, options);\n    if (query && query.length) {\n      return `WHERE ${query}`;\n    }\n    return '';\n  }\n\n  whereItemsQuery(where, options, binding) {\n    if (\n      where === null ||\n      where === undefined ||\n      Utils.getComplexSize(where) === 0\n    ) {\n      // NO OP\n      return '';\n    }\n\n    if (typeof where === 'string') {\n      throw new Error('Support for `{where: \\'raw query\\'}` has been removed.');\n    }\n\n    const items = [];\n\n    binding = binding || 'AND';\n    if (binding[0] !== ' ') binding = ` ${binding} `;\n\n    if (_.isPlainObject(where)) {\n      Utils.getComplexKeys(where).forEach(prop => {\n        const item = where[prop];\n        items.push(this.whereItemQuery(prop, item, options));\n      });\n    } else {\n      items.push(this.whereItemQuery(undefined, where, options));\n    }\n\n    return items.length && items.filter(item => item && item.length).join(binding) || '';\n  }\n\n  whereItemQuery(key, value, options = {}) {\n    if (value === undefined) {\n      throw new Error(`WHERE parameter \"${key}\" has invalid \"undefined\" value`);\n    }\n\n    if (typeof key === 'string' && key.includes('.') && options.model) {\n      const keyParts = key.split('.');\n      if (options.model.rawAttributes[keyParts[0]] && options.model.rawAttributes[keyParts[0]].type instanceof DataTypes.JSON) {\n        const tmp = {};\n        const field = options.model.rawAttributes[keyParts[0]];\n        _.set(tmp, keyParts.slice(1), value);\n        return this.whereItemQuery(field.field || keyParts[0], tmp, { field, ...options });\n      }\n    }\n\n    const field = this._findField(key, options);\n    const fieldType = field && field.type || options.type;\n\n    const isPlainObject = _.isPlainObject(value);\n    const isArray = !isPlainObject && Array.isArray(value);\n    key = this.OperatorsAliasMap && this.OperatorsAliasMap[key] || key;\n    if (isPlainObject) {\n      value = this._replaceAliases(value);\n    }\n    const valueKeys = isPlainObject && Utils.getComplexKeys(value);\n\n    if (key === undefined) {\n      if (typeof value === 'string') {\n        return value;\n      }\n\n      if (isPlainObject && valueKeys.length === 1) {\n        return this.whereItemQuery(valueKeys[0], value[valueKeys[0]], options);\n      }\n    }\n\n    if (value === null) {\n      const opValue = options.bindParam ? 'NULL' : this.escape(value, field);\n      return this._joinKeyValue(key, opValue, this.OperatorMap[Op.is], options.prefix);\n    }\n\n    if (!value) {\n      const opValue = options.bindParam ? this.format(value, field, options, options.bindParam) : this.escape(value, field);\n      return this._joinKeyValue(key, opValue, this.OperatorMap[Op.eq], options.prefix);\n    }\n\n    if (value instanceof Utils.SequelizeMethod && !(key !== undefined && value instanceof Utils.Fn)) {\n      return this.handleSequelizeMethod(value);\n    }\n\n    // Convert where: [] to Op.and if possible, else treat as literal/replacements\n    if (key === undefined && isArray) {\n      if (Utils.canTreatArrayAsAnd(value)) {\n        key = Op.and;\n      } else {\n        throw new Error('Support for literal replacements in the `where` object has been removed.');\n      }\n    }\n\n    if (key === Op.or || key === Op.and || key === Op.not) {\n      return this._whereGroupBind(key, value, options);\n    }\n\n\n    if (value[Op.or]) {\n      return this._whereBind(this.OperatorMap[Op.or], key, value[Op.or], options);\n    }\n\n    if (value[Op.and]) {\n      return this._whereBind(this.OperatorMap[Op.and], key, value[Op.and], options);\n    }\n\n    if (isArray && fieldType instanceof DataTypes.ARRAY) {\n      const opValue = options.bindParam ? this.format(value, field, options, options.bindParam) : this.escape(value, field);\n      return this._joinKeyValue(key, opValue, this.OperatorMap[Op.eq], options.prefix);\n    }\n\n    if (isPlainObject && fieldType instanceof DataTypes.JSON && options.json !== false) {\n      return this._whereJSON(key, value, options);\n    }\n    // If multiple keys we combine the different logic conditions\n    if (isPlainObject && valueKeys.length > 1) {\n      return this._whereBind(this.OperatorMap[Op.and], key, value, options);\n    }\n\n    if (isArray) {\n      return this._whereParseSingleValueObject(key, field, Op.in, value, options);\n    }\n    if (isPlainObject) {\n      if (this.OperatorMap[valueKeys[0]]) {\n        return this._whereParseSingleValueObject(key, field, valueKeys[0], value[valueKeys[0]], options);\n      }\n      return this._whereParseSingleValueObject(key, field, this.OperatorMap[Op.eq], value, options);\n    }\n\n    if (key === Op.placeholder) {\n      const opValue = options.bindParam ? this.format(value, field, options, options.bindParam) : this.escape(value, field);\n      return this._joinKeyValue(this.OperatorMap[key], opValue, this.OperatorMap[Op.eq], options.prefix);\n    }\n\n    const opValue = options.bindParam ? this.format(value, field, options, options.bindParam) : this.escape(value, field);\n    return this._joinKeyValue(key, opValue, this.OperatorMap[Op.eq], options.prefix);\n  }\n\n  _findField(key, options) {\n    if (options.field) {\n      return options.field;\n    }\n\n    if (options.model && options.model.rawAttributes && options.model.rawAttributes[key]) {\n      return options.model.rawAttributes[key];\n    }\n\n    if (options.model && options.model.fieldRawAttributesMap && options.model.fieldRawAttributesMap[key]) {\n      return options.model.fieldRawAttributesMap[key];\n    }\n  }\n\n  // OR/AND/NOT grouping logic\n  _whereGroupBind(key, value, options) {\n    const binding = key === Op.or ? this.OperatorMap[Op.or] : this.OperatorMap[Op.and];\n    const outerBinding = key === Op.not ? 'NOT ' : '';\n\n    if (Array.isArray(value)) {\n      value = value.map(item => {\n        let itemQuery = this.whereItemsQuery(item, options, this.OperatorMap[Op.and]);\n        if (itemQuery && itemQuery.length && (Array.isArray(item) || _.isPlainObject(item)) && Utils.getComplexSize(item) > 1) {\n          itemQuery = `(${itemQuery})`;\n        }\n        return itemQuery;\n      }).filter(item => item && item.length);\n\n      value = value.length && value.join(binding);\n    } else {\n      value = this.whereItemsQuery(value, options, binding);\n    }\n    // Op.or: [] should return no data.\n    // Op.not of no restriction should also return no data\n    if ((key === Op.or || key === Op.not) && !value) {\n      return '0 = 1';\n    }\n\n    return value ? `${outerBinding}(${value})` : undefined;\n  }\n\n  _whereBind(binding, key, value, options) {\n    if (_.isPlainObject(value)) {\n      value = Utils.getComplexKeys(value).map(prop => {\n        const item = value[prop];\n        return this.whereItemQuery(key, { [prop]: item }, options);\n      });\n    } else {\n      value = value.map(item => this.whereItemQuery(key, item, options));\n    }\n\n    value = value.filter(item => item && item.length);\n\n    return value.length ? `(${value.join(binding)})` : undefined;\n  }\n\n  _whereJSON(key, value, options) {\n    const items = [];\n    let baseKey = this.quoteIdentifier(key);\n    if (options.prefix) {\n      if (options.prefix instanceof Utils.Literal) {\n        baseKey = `${this.handleSequelizeMethod(options.prefix)}.${baseKey}`;\n      } else {\n        baseKey = `${this.quoteTable(options.prefix)}.${baseKey}`;\n      }\n    }\n\n    Utils.getOperators(value).forEach(op => {\n      const where = {\n        [op]: value[op]\n      };\n      items.push(this.whereItemQuery(key, where, { ...options, json: false }));\n    });\n\n    _.forOwn(value, (item, prop) => {\n      this._traverseJSON(items, baseKey, prop, item, [prop]);\n    });\n\n    const result = items.join(this.OperatorMap[Op.and]);\n    return items.length > 1 ? `(${result})` : result;\n  }\n\n  _traverseJSON(items, baseKey, prop, item, path) {\n    let cast;\n\n    if (path[path.length - 1].includes('::')) {\n      const tmp = path[path.length - 1].split('::');\n      cast = tmp[1];\n      path[path.length - 1] = tmp[0];\n    }\n\n    let pathKey = this.jsonPathExtractionQuery(baseKey, path);\n\n    if (_.isPlainObject(item)) {\n      Utils.getOperators(item).forEach(op => {\n        const value = this._toJSONValue(item[op]);\n        let isJson = false;\n        if (typeof value === 'string' && op === Op.contains) {\n          try {\n            JSON.stringify(value);\n            isJson = true;\n          } catch (e) {\n            // failed to parse, is not json so isJson remains false\n          }\n        }\n        pathKey = this.jsonPathExtractionQuery(baseKey, path, isJson);\n        items.push(this.whereItemQuery(this._castKey(pathKey, value, cast), { [op]: value }));\n      });\n      _.forOwn(item, (value, itemProp) => {\n        this._traverseJSON(items, baseKey, itemProp, value, path.concat([itemProp]));\n      });\n\n      return;\n    }\n\n    item = this._toJSONValue(item);\n    items.push(this.whereItemQuery(this._castKey(pathKey, item, cast), { [Op.eq]: item }));\n  }\n\n  _toJSONValue(value) {\n    return value;\n  }\n\n  _castKey(key, value, cast, json) {\n    cast = cast || this._getJsonCast(Array.isArray(value) ? value[0] : value);\n    if (cast) {\n      return new Utils.Literal(this.handleSequelizeMethod(new Utils.Cast(new Utils.Literal(key), cast, json)));\n    }\n\n    return new Utils.Literal(key);\n  }\n\n  _getJsonCast(value) {\n    if (typeof value === 'number') {\n      return 'double precision';\n    }\n    if (value instanceof Date) {\n      return 'timestamptz';\n    }\n    if (typeof value === 'boolean') {\n      return 'boolean';\n    }\n    return;\n  }\n\n  _joinKeyValue(key, value, comparator, prefix) {\n    if (!key) {\n      return value;\n    }\n    if (comparator === undefined) {\n      throw new Error(`${key} and ${value} has no comparator`);\n    }\n    key = this._getSafeKey(key, prefix);\n    return [key, value].join(` ${comparator} `);\n  }\n\n  _getSafeKey(key, prefix) {\n    if (key instanceof Utils.SequelizeMethod) {\n      key = this.handleSequelizeMethod(key);\n      return this._prefixKey(this.handleSequelizeMethod(key), prefix);\n    }\n\n    if (Utils.isColString(key)) {\n      key = key.substr(1, key.length - 2).split('.');\n\n      if (key.length > 2) {\n        key = [\n          // join the tables by -> to match out internal namings\n          key.slice(0, -1).join('->'),\n          key[key.length - 1]\n        ];\n      }\n\n      return key.map(identifier => this.quoteIdentifier(identifier)).join('.');\n    }\n\n    return this._prefixKey(this.quoteIdentifier(key), prefix);\n  }\n\n  _prefixKey(key, prefix) {\n    if (prefix) {\n      if (prefix instanceof Utils.Literal) {\n        return [this.handleSequelizeMethod(prefix), key].join('.');\n      }\n\n      return [this.quoteTable(prefix), key].join('.');\n    }\n\n    return key;\n  }\n\n  _whereParseSingleValueObject(key, field, prop, value, options) {\n    if (prop === Op.not) {\n      if (Array.isArray(value)) {\n        prop = Op.notIn;\n      } else if (value !== null && value !== true && value !== false) {\n        prop = Op.ne;\n      }\n    }\n\n    let comparator = this.OperatorMap[prop] || this.OperatorMap[Op.eq];\n\n    switch (prop) {\n      case Op.in:\n      case Op.notIn:\n        if (value instanceof Utils.Literal) {\n          return this._joinKeyValue(key, value.val, comparator, options.prefix);\n        }\n\n        if (value.length) {\n          return this._joinKeyValue(key, `(${value.map(item => this.escape(item, field)).join(', ')})`, comparator, options.prefix);\n        }\n\n        if (comparator === this.OperatorMap[Op.in]) {\n          return this._joinKeyValue(key, '(NULL)', comparator, options.prefix);\n        }\n\n        return '';\n      case Op.any:\n      case Op.all:\n        comparator = `${this.OperatorMap[Op.eq]} ${comparator}`;\n        if (value[Op.values]) {\n          return this._joinKeyValue(key, `(VALUES ${value[Op.values].map(item => `(${this.escape(item)})`).join(', ')})`, comparator, options.prefix);\n        }\n\n        return this._joinKeyValue(key, `(${this.escape(value, field)})`, comparator, options.prefix);\n      case Op.between:\n      case Op.notBetween:\n        return this._joinKeyValue(key, `${this.escape(value[0], field)} AND ${this.escape(value[1], field)}`, comparator, options.prefix);\n      case Op.raw:\n        throw new Error('The `$raw` where property is no longer supported.  Use `sequelize.literal` instead.');\n      case Op.col:\n        comparator = this.OperatorMap[Op.eq];\n        value = value.split('.');\n\n        if (value.length > 2) {\n          value = [\n            // join the tables by -> to match out internal namings\n            value.slice(0, -1).join('->'),\n            value[value.length - 1]\n          ];\n        }\n\n        return this._joinKeyValue(key, value.map(identifier => this.quoteIdentifier(identifier)).join('.'), comparator, options.prefix);\n      case Op.startsWith:\n      case Op.endsWith:\n      case Op.substring:\n        comparator = this.OperatorMap[Op.like];\n\n        if (value instanceof Utils.Literal) {\n          value = value.val;\n        }\n\n        let pattern = `${value}%`;\n\n        if (prop === Op.endsWith) pattern = `%${value}`;\n        if (prop === Op.substring) pattern = `%${value}%`;\n\n        return this._joinKeyValue(key, this.escape(pattern), comparator, options.prefix);\n    }\n\n    const escapeOptions = {\n      acceptStrings: comparator.includes(this.OperatorMap[Op.like])\n    };\n\n    if (_.isPlainObject(value)) {\n      if (value[Op.col]) {\n        return this._joinKeyValue(key, this.whereItemQuery(null, value), comparator, options.prefix);\n      }\n      if (value[Op.any]) {\n        escapeOptions.isList = true;\n        return this._joinKeyValue(key, `(${this.escape(value[Op.any], field, escapeOptions)})`, `${comparator} ${this.OperatorMap[Op.any]}`, options.prefix);\n      }\n      if (value[Op.all]) {\n        escapeOptions.isList = true;\n        return this._joinKeyValue(key, `(${this.escape(value[Op.all], field, escapeOptions)})`, `${comparator} ${this.OperatorMap[Op.all]}`, options.prefix);\n      }\n    }\n\n    if (value === null && comparator === this.OperatorMap[Op.eq]) {\n      return this._joinKeyValue(key, this.escape(value, field, escapeOptions), this.OperatorMap[Op.is], options.prefix);\n    }\n    if (value === null && comparator === this.OperatorMap[Op.ne]) {\n      return this._joinKeyValue(key, this.escape(value, field, escapeOptions), this.OperatorMap[Op.not], options.prefix);\n    }\n\n    return this._joinKeyValue(key, this.escape(value, field, escapeOptions), comparator, options.prefix);\n  }\n\n  /*\n    Takes something and transforms it into values of a where condition.\n   @private\n  */\n  getWhereConditions(smth, tableName, factory, options, prepend) {\n    const where = {};\n\n    if (Array.isArray(tableName)) {\n      tableName = tableName[0];\n      if (Array.isArray(tableName)) {\n        tableName = tableName[1];\n      }\n    }\n\n    options = options || {};\n\n    if (prepend === undefined) {\n      prepend = true;\n    }\n\n    if (smth && smth instanceof Utils.SequelizeMethod) { // Checking a property is cheaper than a lot of instanceof calls\n      return this.handleSequelizeMethod(smth, tableName, factory, options, prepend);\n    }\n    if (_.isPlainObject(smth)) {\n      return this.whereItemsQuery(smth, {\n        model: factory,\n        prefix: prepend && tableName,\n        type: options.type\n      });\n    }\n    if (typeof smth === 'number' || typeof smth === 'bigint') {\n      let primaryKeys = factory ? Object.keys(factory.primaryKeys) : [];\n\n      if (primaryKeys.length > 0) {\n        // Since we're just a number, assume only the first key\n        primaryKeys = primaryKeys[0];\n      } else {\n        primaryKeys = 'id';\n      }\n\n      where[primaryKeys] = smth;\n\n      return this.whereItemsQuery(where, {\n        model: factory,\n        prefix: prepend && tableName\n      });\n    }\n    if (typeof smth === 'string') {\n      return this.whereItemsQuery(smth, {\n        model: factory,\n        prefix: prepend && tableName\n      });\n    }\n    if (Buffer.isBuffer(smth)) {\n      return this.escape(smth);\n    }\n    if (Array.isArray(smth)) {\n      if (smth.length === 0 || smth.length > 0 && smth[0].length === 0) return '1=1';\n      if (Utils.canTreatArrayAsAnd(smth)) {\n        const _smth = { [Op.and]: smth };\n        return this.getWhereConditions(_smth, tableName, factory, options, prepend);\n      }\n      throw new Error('Support for literal replacements in the `where` object has been removed.');\n    }\n    if (smth == null) {\n      return this.whereItemsQuery(smth, {\n        model: factory,\n        prefix: prepend && tableName\n      });\n    }\n\n    throw new Error(`Unsupported where option value: ${util.inspect(smth)}. Please refer to the Sequelize documentation to learn more about which values are accepted as part of the where option.`);\n  }\n\n  // A recursive parser for nested where conditions\n  parseConditionObject(conditions, path) {\n    path = path || [];\n    return _.reduce(conditions, (result, value, key) => {\n      if (_.isObject(value)) {\n        return result.concat(this.parseConditionObject(value, path.concat(key))); // Recursively parse objects\n      }\n      result.push({ path: path.concat(key), value });\n      return result;\n    }, []);\n  }\n\n  booleanValue(value) {\n    return value;\n  }\n\n  /**\n   * Returns the authenticate test query string\n   */\n  authTestQuery() {\n    return 'SELECT 1+1 AS result';\n  }\n}\n\nObject.assign(QueryGenerator.prototype, require('./query-generator/operators'));\nObject.assign(QueryGenerator.prototype, require('./query-generator/transaction'));\n\nmodule.exports = QueryGenerator;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/abstract/query-generator/operators.js":{"lineLengths":[13,38,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,28,41,40,25,16,17,18,19,17,19,17,23,18,18,25,22,29,24,31,28,26,27,21,25,23,27,28,35,23,24,25,25,26,27,29,28,20,20,22,20,20,40,20,4,24,32,41,37,12,59,5,4,25,19,34,18,5,46,28,34,45,14,23,7,7,36,50,34,42,7,23,7,15,3,2,33,37,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/dialects/abstract/query-generator/operators.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst Op = require('../../../operators');\nconst Utils = require('../../../utils');\n\nconst OperatorHelpers = {\n  OperatorMap: {\n    [Op.eq]: '=',\n    [Op.ne]: '!=',\n    [Op.gte]: '>=',\n    [Op.gt]: '>',\n    [Op.lte]: '<=',\n    [Op.lt]: '<',\n    [Op.not]: 'IS NOT',\n    [Op.is]: 'IS',\n    [Op.in]: 'IN',\n    [Op.notIn]: 'NOT IN',\n    [Op.like]: 'LIKE',\n    [Op.notLike]: 'NOT LIKE',\n    [Op.iLike]: 'ILIKE',\n    [Op.notILike]: 'NOT ILIKE',\n    [Op.startsWith]: 'LIKE',\n    [Op.endsWith]: 'LIKE',\n    [Op.substring]: 'LIKE',\n    [Op.regexp]: '~',\n    [Op.notRegexp]: '!~',\n    [Op.iRegexp]: '~*',\n    [Op.notIRegexp]: '!~*',\n    [Op.between]: 'BETWEEN',\n    [Op.notBetween]: 'NOT BETWEEN',\n    [Op.overlap]: '&&',\n    [Op.contains]: '@>',\n    [Op.contained]: '<@',\n    [Op.adjacent]: '-|-',\n    [Op.strictLeft]: '<<',\n    [Op.strictRight]: '>>',\n    [Op.noExtendRight]: '&<',\n    [Op.noExtendLeft]: '&>',\n    [Op.any]: 'ANY',\n    [Op.all]: 'ALL',\n    [Op.and]: ' AND ',\n    [Op.or]: ' OR ',\n    [Op.col]: 'COL',\n    [Op.placeholder]: '$$PLACEHOLDER$$',\n    [Op.match]: '@@'\n  },\n\n  OperatorsAliasMap: {},\n\n  setOperatorsAliases(aliases) {\n    if (!aliases || _.isEmpty(aliases)) {\n      this.OperatorsAliasMap = false;\n    } else {\n      this.OperatorsAliasMap = { ...aliases };\n    }\n  },\n\n  _replaceAliases(orig) {\n    const obj = {};\n    if (!this.OperatorsAliasMap) {\n      return orig;\n    }\n\n    Utils.getOperators(orig).forEach(op => {\n      const item = orig[op];\n      if (_.isPlainObject(item)) {\n        obj[op] = this._replaceAliases(item);\n      } else {\n        obj[op] = item;\n      }\n    });\n\n    _.forOwn(orig, (item, prop) => {\n      prop = this.OperatorsAliasMap[prop] || prop;\n      if (_.isPlainObject(item)) {\n        item = this._replaceAliases(item);\n      }\n      obj[prop] = item;\n    });\n    return obj;\n  }\n};\n\nmodule.exports = OperatorHelpers;\n"],"mappings":";;;;;;;;;;;;;;;;;AAEA,MAAM,IAAI,QAAQ;AAClB,MAAM,KAAK,QAAQ;AACnB,MAAM,QAAQ,QAAQ;AAEtB,MAAM,kBAAkB;AAAA,EACtB,aAAa;AAAA,KACV,GAAG,KAAK;AAAA,KACR,GAAG,KAAK;AAAA,KACR,GAAG,MAAM;AAAA,KACT,GAAG,KAAK;AAAA,KACR,GAAG,MAAM;AAAA,KACT,GAAG,KAAK;AAAA,KACR,GAAG,MAAM;AAAA,KACT,GAAG,KAAK;AAAA,KACR,GAAG,KAAK;AAAA,KACR,GAAG,QAAQ;AAAA,KACX,GAAG,OAAO;AAAA,KACV,GAAG,UAAU;AAAA,KACb,GAAG,QAAQ;AAAA,KACX,GAAG,WAAW;AAAA,KACd,GAAG,aAAa;AAAA,KAChB,GAAG,WAAW;AAAA,KACd,GAAG,YAAY;AAAA,KACf,GAAG,SAAS;AAAA,KACZ,GAAG,YAAY;AAAA,KACf,GAAG,UAAU;AAAA,KACb,GAAG,aAAa;AAAA,KAChB,GAAG,UAAU;AAAA,KACb,GAAG,aAAa;AAAA,KAChB,GAAG,UAAU;AAAA,KACb,GAAG,WAAW;AAAA,KACd,GAAG,YAAY;AAAA,KACf,GAAG,WAAW;AAAA,KACd,GAAG,aAAa;AAAA,KAChB,GAAG,cAAc;AAAA,KACjB,GAAG,gBAAgB;AAAA,KACnB,GAAG,eAAe;AAAA,KAClB,GAAG,MAAM;AAAA,KACT,GAAG,MAAM;AAAA,KACT,GAAG,MAAM;AAAA,KACT,GAAG,KAAK;AAAA,KACR,GAAG,MAAM;AAAA,KACT,GAAG,cAAc;AAAA,KACjB,GAAG,QAAQ;AAAA;AAAA,EAGd,mBAAmB;AAAA,EAEnB,oBAAoB,SAAS;AAC3B,QAAI,CAAC,WAAW,EAAE,QAAQ,UAAU;AAClC,WAAK,oBAAoB;AAAA,WACpB;AACL,WAAK,oBAAoB,mBAAK;AAAA;AAAA;AAAA,EAIlC,gBAAgB,MAAM;AACpB,UAAM,MAAM;AACZ,QAAI,CAAC,KAAK,mBAAmB;AAC3B,aAAO;AAAA;AAGT,UAAM,aAAa,MAAM,QAAQ,QAAM;AACrC,YAAM,OAAO,KAAK;AAClB,UAAI,EAAE,cAAc,OAAO;AACzB,YAAI,MAAM,KAAK,gBAAgB;AAAA,aAC1B;AACL,YAAI,MAAM;AAAA;AAAA;AAId,MAAE,OAAO,MAAM,CAAC,MAAM,SAAS;AAC7B,aAAO,KAAK,kBAAkB,SAAS;AACvC,UAAI,EAAE,cAAc,OAAO;AACzB,eAAO,KAAK,gBAAgB;AAAA;AAE9B,UAAI,QAAQ;AAAA;AAEd,WAAO;AAAA;AAAA;AAIX,OAAO,UAAU;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/abstract/query-generator/transaction.js":{"lineLengths":[13,34,28,42,25,13,5,55,4,27,20,4,38,29,74,5,32,4,27,4,24,4,22,4,23,4,39,29,13,5,21,4,41,29,86,5,23,3,2,36,39,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/dialects/abstract/query-generator/transaction.js"],"sourcesContent":["'use strict';\n\nconst uuidv4 = require('uuid').v4;\n\nconst TransactionQueries = {\n  /**\n   * Returns a query that sets the transaction isolation level.\n   *\n   * @param  {string} value   The isolation level.\n   * @param  {object} options An object with options.\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  setIsolationLevelQuery(value, options) {\n    if (options.parent) {\n      return;\n    }\n\n    return `SET TRANSACTION ISOLATION LEVEL ${value};`;\n  },\n\n  generateTransactionId() {\n    return uuidv4();\n  },\n\n  /**\n   * Returns a query that starts a transaction.\n   *\n   * @param  {Transaction} transaction\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  startTransactionQuery(transaction) {\n    if (transaction.parent) {\n      // force quoting of savepoint identifiers for postgres\n      return `SAVEPOINT ${this.quoteIdentifier(transaction.name, true)};`;\n    }\n\n    return 'START TRANSACTION;';\n  },\n\n  deferConstraintsQuery() {},\n\n  setConstraintQuery() {},\n  setDeferredQuery() {},\n  setImmediateQuery() {},\n\n  /**\n   * Returns a query that commits a transaction.\n   *\n   * @param  {Transaction} transaction An object with options.\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  commitTransactionQuery(transaction) {\n    if (transaction.parent) {\n      return;\n    }\n\n    return 'COMMIT;';\n  },\n\n  /**\n   * Returns a query that rollbacks a transaction.\n   *\n   * @param  {Transaction} transaction\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  rollbackTransactionQuery(transaction) {\n    if (transaction.parent) {\n      // force quoting of savepoint identifiers for postgres\n      return `ROLLBACK TO SAVEPOINT ${this.quoteIdentifier(transaction.name, true)};`;\n    }\n\n    return 'ROLLBACK;';\n  }\n};\n\nmodule.exports = TransactionQueries;\n"],"mappings":";AAEA,MAAM,SAAS,QAAQ,QAAQ;AAE/B,MAAM,qBAAqB;AAAA,EASzB,uBAAuB,OAAO,SAAS;AACrC,QAAI,QAAQ,QAAQ;AAClB;AAAA;AAGF,WAAO,mCAAmC;AAAA;AAAA,EAG5C,wBAAwB;AACtB,WAAO;AAAA;AAAA,EAUT,sBAAsB,aAAa;AACjC,QAAI,YAAY,QAAQ;AAEtB,aAAO,aAAa,KAAK,gBAAgB,YAAY,MAAM;AAAA;AAG7D,WAAO;AAAA;AAAA,EAGT,wBAAwB;AAAA;AAAA,EAExB,qBAAqB;AAAA;AAAA,EACrB,mBAAmB;AAAA;AAAA,EACnB,oBAAoB;AAAA;AAAA,EASpB,uBAAuB,aAAa;AAClC,QAAI,YAAY,QAAQ;AACtB;AAAA;AAGF,WAAO;AAAA;AAAA,EAUT,yBAAyB,aAAa;AACpC,QAAI,YAAY,QAAQ;AAEtB,aAAO,yBAAyB,KAAK,gBAAgB,YAAY,MAAM;AAAA;AAGzE,WAAO;AAAA;AAAA;AAIX,OAAO,UAAU;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/lib/dialects/postgres/query-interface.js":{"lineLengths":[13,38,41,57,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,66,38,18,26,69,34,44,51,71,36,5,16,2,46,48,66,37,47,53,60,41,31,17,22,14,34,44,34,117,94,146,7,5,48,18,20,111,55,33,32,25,21,45,16,22,16,46,16,7,45,120,9,6,34,44,34,41,47,116,32,31,164,13,51,86,39,31,36,74,47,49,39,32,23,13,58,51,94,67,22,15,107,13,44,40,13,11,71,73,98,94,13,11,20,9,7,5,130,26,75,5,18,3,57,69,34,7,139,67,35,158,59,152,9,7,3,37,28,183,3,31,28,56,233,3,41,28,59,135,3,39,46,24,102,25,13,5,126,58,31,38,80,74,43,108,7,5,32,3,1,56,43,0],"data":{"version":3,"sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/sequelize/src/dialects/postgres/query-interface.js"],"sourcesContent":["'use strict';\n\nconst DataTypes = require('../../data-types');\nconst QueryTypes = require('../../query-types');\nconst { QueryInterface } = require('../abstract/query-interface');\nconst Utils = require('../../utils');\nconst Deferrable = require('../../deferrable');\n\n/**\n * The interface that Sequelize uses to talk with Postgres database\n */\nclass PostgresQueryInterface extends QueryInterface {\n  /**\n   * Ensure enum and their values.\n   *\n   * @param {string} tableName  Name of table to create\n   * @param {object} attributes Object representing a list of normalized table attributes\n   * @param {object} [options]\n   * @param {Model}  [model]\n   *\n   * @protected\n   */\n  async ensureEnums(tableName, attributes, options, model) {\n    const keys = Object.keys(attributes);\n    const keyLen = keys.length;\n\n    let sql = '';\n    let promises = [];\n    let i = 0;\n\n    for (i = 0; i < keyLen; i++) {\n      const attribute = attributes[keys[i]];\n      const type = attribute.type;\n\n      if (\n        type instanceof DataTypes.ENUM ||\n        type instanceof DataTypes.ARRAY && type.type instanceof DataTypes.ENUM //ARRAY sub type is ENUM\n      ) {\n        sql = this.queryGenerator.pgListEnums(tableName, attribute.field || keys[i], options);\n        promises.push(this.sequelize.query(\n          sql,\n          { ...options, plain: true, raw: true, type: QueryTypes.SELECT }\n        ));\n      }\n    }\n\n    const results = await Promise.all(promises);\n    promises = [];\n    let enumIdx = 0;\n\n    // This little function allows us to re-use the same code that prepends or appends new value to enum array\n    const addEnumValue = (field, value, relativeValue, position = 'before', spliceStart = promises.length) => {\n      const valueOptions = { ...options };\n      valueOptions.before = null;\n      valueOptions.after = null;\n\n      switch (position) {\n        case 'after':\n          valueOptions.after = relativeValue;\n          break;\n        case 'before':\n        default:\n          valueOptions.before = relativeValue;\n          break;\n      }\n\n      promises.splice(spliceStart, 0, () => {\n        return this.sequelize.query(this.queryGenerator.pgEnumAdd(\n          tableName, field, value, valueOptions\n        ), valueOptions);\n      });\n    };\n\n    for (i = 0; i < keyLen; i++) {\n      const attribute = attributes[keys[i]];\n      const type = attribute.type;\n      const enumType = type.type || type;\n      const field = attribute.field || keys[i];\n\n      if (\n        type instanceof DataTypes.ENUM ||\n        type instanceof DataTypes.ARRAY && enumType instanceof DataTypes.ENUM //ARRAY sub type is ENUM\n      ) {\n        // If the enum type doesn't exist then create it\n        if (!results[enumIdx]) {\n          promises.push(() => {\n            return this.sequelize.query(this.queryGenerator.pgEnum(tableName, field, enumType, options), { ...options, raw: true });\n          });\n        } else if (!!results[enumIdx] && !!model) {\n          const enumVals = this.queryGenerator.fromArray(results[enumIdx].enum_value);\n          const vals = enumType.values;\n\n          // Going through already existing values allows us to make queries that depend on those values\n          // We will prepend all new values between the old ones, but keep in mind - we can't change order of already existing values\n          // Then we append the rest of new values AFTER the latest already existing value\n          // E.g.: [1,2] -> [0,2,1] ==> [1,0,2]\n          // E.g.: [1,2,3] -> [2,1,3,4] ==> [1,2,3,4]\n          // E.g.: [1] -> [0,2,3] ==> [1,0,2,3]\n          let lastOldEnumValue;\n          let rightestPosition = -1;\n          for (let oldIndex = 0; oldIndex < enumVals.length; oldIndex++) {\n            const enumVal = enumVals[oldIndex];\n            const newIdx = vals.indexOf(enumVal);\n            lastOldEnumValue = enumVal;\n\n            if (newIdx === -1) {\n              continue;\n            }\n\n            const newValuesBefore = vals.slice(0, newIdx);\n            const promisesLength = promises.length;\n            // we go in reverse order so we could stop when we meet old value\n            for (let reverseIdx = newValuesBefore.length - 1; reverseIdx >= 0; reverseIdx--) {\n              if (~enumVals.indexOf(newValuesBefore[reverseIdx])) {\n                break;\n              }\n\n              addEnumValue(field, newValuesBefore[reverseIdx], lastOldEnumValue, 'before', promisesLength);\n            }\n\n            // we detect the most 'right' position of old value in new enum array so we can append new values to it\n            if (newIdx > rightestPosition) {\n              rightestPosition = newIdx;\n            }\n          }\n\n          if (lastOldEnumValue && rightestPosition < vals.length - 1) {\n            const remainingEnumValues = vals.slice(rightestPosition + 1);\n            for (let reverseIdx = remainingEnumValues.length - 1; reverseIdx >= 0; reverseIdx--) {\n              addEnumValue(field, remainingEnumValues[reverseIdx], lastOldEnumValue, 'after');\n            }\n          }\n\n          enumIdx++;\n        }\n      }\n    }\n\n    const result = await promises\n      .reduce(async (promise, asyncFunction) => await asyncFunction(await promise), Promise.resolve());\n\n    // If ENUM processed, then refresh OIDs\n    if (promises.length) {\n      await this.sequelize.dialect.connectionManager._refreshDynamicOIDs();\n    }\n    return result;\n  }\n\n  /**\n   * @override\n   */\n  async getForeignKeyReferencesForTable(table, options) {\n    const queryOptions = {\n      ...options,\n      type: QueryTypes.FOREIGNKEYS\n    };\n\n    // postgres needs some special treatment as those field names returned are all lowercase\n    // in order to keep same result with other dialects.\n    const query = this.queryGenerator.getForeignKeyReferencesQuery(table.tableName || table, this.sequelize.config.database, table.schema);\n    const result = await this.sequelize.query(query, queryOptions);\n\n    return result.map(fkMeta => {\n      const { initiallyDeferred, isDeferrable, ...remaining } = Utils.camelizeObjectKeys(fkMeta);\n\n      return {\n        ...remaining,\n        deferrable: isDeferrable === 'NO' ? Deferrable.NOT\n          : initiallyDeferred === 'NO' ? Deferrable.INITIALLY_IMMEDIATE\n            : Deferrable.INITIALLY_DEFERRED\n      };\n    });\n  }\n\n  /**\n   * Drop specified enum from database (Postgres only)\n   *\n   * @param {string} [enumName]  Enum name to drop\n   * @param {object} options Query options\n   *\n   * @returns {Promise}\n   */\n  async dropEnum(enumName, options) {\n    options = options || {};\n\n    return this.sequelize.query(\n      this.queryGenerator.pgEnumDrop(null, null, this.queryGenerator.pgEscapeAndQuote(enumName)),\n      { ...options, raw: true }\n    );\n  }\n\n  /**\n   * Drop all enums from database (Postgres only)\n   *\n   * @param {object} options Query options\n   *\n   * @returns {Promise}\n   */\n  async dropAllEnums(options) {\n    options = options || {};\n\n    const enums = await this.pgListEnums(null, options);\n\n    return await Promise.all(enums.map(result => this.sequelize.query(\n      this.queryGenerator.pgEnumDrop(null, null, this.queryGenerator.pgEscapeAndQuote(result.enum_name)),\n      { ...options, raw: true }\n    )));\n  }\n\n  /**\n   * List all enums (Postgres only)\n   *\n   * @param {string} [tableName]  Table whose enum to list\n   * @param {object} [options]    Query options\n   *\n   * @returns {Promise}\n   */\n  async pgListEnums(tableName, options) {\n    options = options || {};\n    const sql = this.queryGenerator.pgListEnums(tableName);\n    return this.sequelize.query(sql, { ...options, plain: false, raw: true, type: QueryTypes.SELECT });\n  }\n\n  /**\n   * Since postgres has a special case for enums, we should drop the related\n   * enum type within the table and attribute\n   *\n   * @override\n   */\n  async dropTable(tableName, options) {\n    await super.dropTable(tableName, options);\n    const promises = [];\n    const instanceTable = this.sequelize.modelManager.getModel(tableName, { attribute: 'tableName' });\n\n    if (!instanceTable) {\n      // Do nothing when model is not available\n      return;\n    }\n\n    const getTableName = (!options || !options.schema || options.schema === 'public' ? '' : `${options.schema}_`) + tableName;\n\n    const keys = Object.keys(instanceTable.rawAttributes);\n    const keyLen = keys.length;\n\n    for (let i = 0; i < keyLen; i++) {\n      if (instanceTable.rawAttributes[keys[i]].type instanceof DataTypes.ENUM) {\n        const sql = this.queryGenerator.pgEnumDrop(getTableName, keys[i]);\n        options.supportsSearchPath = false;\n        promises.push(this.sequelize.query(sql, { ...options, raw: true }));\n      }\n    }\n\n    await Promise.all(promises);\n  }\n}\n\nexports.PostgresQueryInterface = PostgresQueryInterface;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,MAAM,YAAY,QAAQ;AAC1B,MAAM,aAAa,QAAQ;AAC3B,MAAM,EAAE,mBAAmB,QAAQ;AACnC,MAAM,QAAQ,QAAQ;AACtB,MAAM,aAAa,QAAQ;AAK3B,qCAAqC,eAAe;AAAA,QAW5C,YAAY,WAAW,YAAY,SAAS,OAAO;AACvD,UAAM,OAAO,OAAO,KAAK;AACzB,UAAM,SAAS,KAAK;AAEpB,QAAI,MAAM;AACV,QAAI,WAAW;AACf,QAAI,IAAI;AAER,SAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC3B,YAAM,YAAY,WAAW,KAAK;AAClC,YAAM,OAAO,UAAU;AAEvB,UACE,gBAAgB,UAAU,QAC1B,gBAAgB,UAAU,SAAS,KAAK,gBAAgB,UAAU,MAClE;AACA,cAAM,KAAK,eAAe,YAAY,WAAW,UAAU,SAAS,KAAK,IAAI;AAC7E,iBAAS,KAAK,KAAK,UAAU,MAC3B,KACA,iCAAK,UAAL,EAAc,OAAO,MAAM,KAAK,MAAM,MAAM,WAAW;AAAA;AAAA;AAK7D,UAAM,UAAU,MAAM,QAAQ,IAAI;AAClC,eAAW;AACX,QAAI,UAAU;AAGd,UAAM,eAAe,CAAC,OAAO,OAAO,eAAe,WAAW,UAAU,cAAc,SAAS,WAAW;AACxG,YAAM,eAAe,mBAAK;AAC1B,mBAAa,SAAS;AACtB,mBAAa,QAAQ;AAErB,cAAQ;AAAA,aACD;AACH,uBAAa,QAAQ;AACrB;AAAA,aACG;AAAA;AAEH,uBAAa,SAAS;AACtB;AAAA;AAGJ,eAAS,OAAO,aAAa,GAAG,MAAM;AACpC,eAAO,KAAK,UAAU,MAAM,KAAK,eAAe,UAC9C,WAAW,OAAO,OAAO,eACxB;AAAA;AAAA;AAIP,SAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC3B,YAAM,YAAY,WAAW,KAAK;AAClC,YAAM,OAAO,UAAU;AACvB,YAAM,WAAW,KAAK,QAAQ;AAC9B,YAAM,QAAQ,UAAU,SAAS,KAAK;AAEtC,UACE,gBAAgB,UAAU,QAC1B,gBAAgB,UAAU,SAAS,oBAAoB,UAAU,MACjE;AAEA,YAAI,CAAC,QAAQ,UAAU;AACrB,mBAAS,KAAK,MAAM;AAClB,mBAAO,KAAK,UAAU,MAAM,KAAK,eAAe,OAAO,WAAW,OAAO,UAAU,UAAU,iCAAK,UAAL,EAAc,KAAK;AAAA;AAAA,mBAEzG,CAAC,CAAC,QAAQ,YAAY,CAAC,CAAC,OAAO;AACxC,gBAAM,WAAW,KAAK,eAAe,UAAU,QAAQ,SAAS;AAChE,gBAAM,OAAO,SAAS;AAQtB,cAAI;AACJ,cAAI,mBAAmB;AACvB,mBAAS,WAAW,GAAG,WAAW,SAAS,QAAQ,YAAY;AAC7D,kBAAM,UAAU,SAAS;AACzB,kBAAM,SAAS,KAAK,QAAQ;AAC5B,+BAAmB;AAEnB,gBAAI,WAAW,IAAI;AACjB;AAAA;AAGF,kBAAM,kBAAkB,KAAK,MAAM,GAAG;AACtC,kBAAM,iBAAiB,SAAS;AAEhC,qBAAS,aAAa,gBAAgB,SAAS,GAAG,cAAc,GAAG,cAAc;AAC/E,kBAAI,CAAC,SAAS,QAAQ,gBAAgB,cAAc;AAClD;AAAA;AAGF,2BAAa,OAAO,gBAAgB,aAAa,kBAAkB,UAAU;AAAA;AAI/E,gBAAI,SAAS,kBAAkB;AAC7B,iCAAmB;AAAA;AAAA;AAIvB,cAAI,oBAAoB,mBAAmB,KAAK,SAAS,GAAG;AAC1D,kBAAM,sBAAsB,KAAK,MAAM,mBAAmB;AAC1D,qBAAS,aAAa,oBAAoB,SAAS,GAAG,cAAc,GAAG,cAAc;AACnF,2BAAa,OAAO,oBAAoB,aAAa,kBAAkB;AAAA;AAAA;AAI3E;AAAA;AAAA;AAAA;AAKN,UAAM,SAAS,MAAM,SAClB,OAAO,OAAO,SAAS,kBAAkB,MAAM,cAAc,MAAM,UAAU,QAAQ;AAGxF,QAAI,SAAS,QAAQ;AACnB,YAAM,KAAK,UAAU,QAAQ,kBAAkB;AAAA;AAEjD,WAAO;AAAA;AAAA,QAMH,gCAAgC,OAAO,SAAS;AACpD,UAAM,eAAe,iCAChB,UADgB;AAAA,MAEnB,MAAM,WAAW;AAAA;AAKnB,UAAM,QAAQ,KAAK,eAAe,6BAA6B,MAAM,aAAa,OAAO,KAAK,UAAU,OAAO,UAAU,MAAM;AAC/H,UAAM,SAAS,MAAM,KAAK,UAAU,MAAM,OAAO;AAEjD,WAAO,OAAO,IAAI,YAAU;AAC1B,YAA0D,WAAM,mBAAmB,SAA3E,qBAAmB,iBAA+B,IAAd,sBAAc,IAAd,CAApC,qBAAmB;AAE3B,aAAO,iCACF,YADE;AAAA,QAEL,YAAY,iBAAiB,OAAO,WAAW,MAC3C,sBAAsB,OAAO,WAAW,sBACtC,WAAW;AAAA;AAAA;AAAA;AAAA,QAajB,SAAS,UAAU,SAAS;AAChC,cAAU,WAAW;AAErB,WAAO,KAAK,UAAU,MACpB,KAAK,eAAe,WAAW,MAAM,MAAM,KAAK,eAAe,iBAAiB,YAChF,iCAAK,UAAL,EAAc,KAAK;AAAA;AAAA,QAWjB,aAAa,SAAS;AAC1B,cAAU,WAAW;AAErB,UAAM,QAAQ,MAAM,KAAK,YAAY,MAAM;AAE3C,WAAO,MAAM,QAAQ,IAAI,MAAM,IAAI,YAAU,KAAK,UAAU,MAC1D,KAAK,eAAe,WAAW,MAAM,MAAM,KAAK,eAAe,iBAAiB,OAAO,aACvF,iCAAK,UAAL,EAAc,KAAK;AAAA;AAAA,QAYjB,YAAY,WAAW,SAAS;AACpC,cAAU,WAAW;AACrB,UAAM,MAAM,KAAK,eAAe,YAAY;AAC5C,WAAO,KAAK,UAAU,MAAM,KAAK,iCAAK,UAAL,EAAc,OAAO,OAAO,KAAK,MAAM,MAAM,WAAW;AAAA;AAAA,QASrF,UAAU,WAAW,SAAS;AAClC,UAAM,MAAM,UAAU,WAAW;AACjC,UAAM,WAAW;AACjB,UAAM,gBAAgB,KAAK,UAAU,aAAa,SAAS,WAAW,EAAE,WAAW;AAEnF,QAAI,CAAC,eAAe;AAElB;AAAA;AAGF,UAAM,eAAgB,EAAC,WAAW,CAAC,QAAQ,UAAU,QAAQ,WAAW,WAAW,KAAK,GAAG,QAAQ,aAAa;AAEhH,UAAM,OAAO,OAAO,KAAK,cAAc;AACvC,UAAM,SAAS,KAAK;AAEpB,aAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,UAAI,cAAc,cAAc,KAAK,IAAI,gBAAgB,UAAU,MAAM;AACvE,cAAM,MAAM,KAAK,eAAe,WAAW,cAAc,KAAK;AAC9D,gBAAQ,qBAAqB;AAC7B,iBAAS,KAAK,KAAK,UAAU,MAAM,KAAK,iCAAK,UAAL,EAAc,KAAK;AAAA;AAAA;AAI/D,UAAM,QAAQ,IAAI;AAAA;AAAA;AAItB,QAAQ,yBAAyB;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg-protocol/dist/index.js":{"lineLengths":[13,62,67,41,125,45,119,37,34,41,66,71,1,22,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg-protocol/src/index.ts"],"names":[],"mappings":";;;AAAA,yCAA0D;AAUtC,8FAVK,wBAAa,OAUL;AATjC,6CAAwC;AAS/B,0FATA,sBAAS,OASA;AARlB,qCAAkD;AAElD,SAAgB,KAAK,CAAC,MAA6B,EAAE,QAAyB;IAC5E,MAAM,MAAM,GAAG,IAAI,eAAM,EAAE,CAAA;IAC3B,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,MAAc,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAA;IACrE,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,CAAA;AACpE,CAAC;AAJD,sBAIC"},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg-protocol/dist/messages.js":{"lineLengths":[13,62,599,25,26,14,2,24,25,14,2,25,26,14,2,18,19,14,2,27,28,14,2,28,29,14,2,22,23,14,2,20,21,14,2,35,40,23,29,25,5,1,38,23,32,29,27,31,5,1,42,20,52,29,25,29,50,5,1,36,13,94,25,31,33,37,41,49,29,5,1,22,29,37,29,37,37,49,5,1,54,35,41,29,45,43,58,5,1,66,30,56,29,43,45,38,5,1,56,33,31,29,25,48,5,1,62,29,47,29,35,35,37,5,1,54,35,54,29,35,31,31,35,5,1,66,28,33,29,29,36,5,1,52,30,31,29,25,38,5,1,56,22,33,29,29,30,40,5,1,40,21,34,29,31,29,5,1,38,36],"data":{"version":3,"file":"messages.js","sourceRoot":"","sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg-protocol/src/messages.ts"],"names":[],"mappings":"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"},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg-protocol/dist/serializer.js":{"lineLengths":[13,62,27,51,44,27,23,35,42,53,5,60,51,42,39,81,2,26,43,32,39,20,2,32,69,2,78,17,105,48,2,63,74,2,25,62,2,22,26,34,27,36,34,54,34,27,39,88,65,86,38,5,44,27,23,42,52,23,35,34,5,45,2,49,52,45,78,32,56,54,60,37,9,47,56,54,49,51,39,9,14,56,54,63,45,9,5,2,31,23,39,45,42,47,30,52,25,44,25,36,18,82,44,2,112,29,46,54,28,5,39,34,51,41,29,45,36,30,35,64,46,16,2,42,42,31,33,33,38,39,18,2,42,48,34,29,47,21,32,37,46,18,2,81,84,27,19,80,26,33,37,2,24,48,53,2,29,65,2,31,60,2,77,56,54,52,62,19,12,13,15,35,32,10,10,9,12,13,10,29,27,25,13,35,13,11,2,30,38],"data":{"version":3,"file":"serializer.js","sourceRoot":"","sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg-protocol/src/serializer.ts"],"names":[],"mappings":"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"},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg-protocol/dist/buffer-writer.js":{"lineLengths":[13,87,62,24,14,29,25,24,32,47,5,18,57,31,40,56,81,76,54,40,9,5,19,23,57,57,56,56,20,5,19,23,56,56,20,5,24,22,27,9,14,48,59,60,31,9,58,20,5,28,44,25,47,27,20,5,22,40,51,42,20,5,16,19,52,64,67,70,9,60,5,17,37,24,32,52,22,5,1,24,41],"data":{"version":3,"file":"buffer-writer.js","sourceRoot":"","sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg-protocol/src/buffer-writer.ts"],"names":[],"mappings":"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"},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg-protocol/dist/parser.js":{"lineLengths":[13,62,24,41,51,46,22,67,37,21,47,42,14,23,34,30,30,57,83,61,9,86,5,29,33,71,39,60,67,45,88,74,59,65,101,34,44,13,18,22,13,9,42,41,38,34,34,9,14,52,58,39,9,5,25,36,68,64,57,72,30,100,118,44,17,22,51,69,58,45,21,68,17,59,105,40,38,13,59,76,42,9,14,33,34,50,9,5,47,23,52,47,53,48,53,48,47,41,56,50,48,43,56,51,50,45,47,71,55,79,53,77,60,76,62,79,55,79,54,71,52,78,53,79,61,78,68,84,46,70,47,71,49,65,20,120,9,5,54,45,45,67,5,56,45,43,67,5,42,65,61,5,47,78,5,48,79,5,58,45,50,48,96,47,57,9,23,5,53,45,46,46,46,95,5,55,45,47,81,46,50,9,23,5,18,43,44,45,47,49,53,67,111,5,61,45,51,91,50,57,9,23,5,48,45,47,45,46,44,67,68,9,61,5,56,45,43,44,74,5,48,45,46,46,82,5,56,45,41,45,25,37,19,10,23,39,22,54,43,69,17,22,48,44,63,54,82,17,22,42,52,40,30,20,54,36,59,21,36,22,50,60,62,22,47,57,62,22,20,81,9,23,5,52,45,26,46,36,54,46,9,38,154,36,32,34,32,36,44,41,33,34,33,34,36,38,32,32,35,23,5,1,24,34],"data":{"version":3,"file":"parser.js","sourceRoot":"","sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg-protocol/src/parser.ts"],"names":[],"mappings":"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"},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg-protocol/dist/buffer-reader.js":{"lineLengths":[13,62,30,42,20,29,29,34,48,32,5,31,29,29,5,13,60,25,22,5,12,48,22,22,5,13,60,25,22,5,20,94,30,22,5,15,34,24,44,26,67,5,19,76,30,22,5,1,36,41],"data":{"version":3,"file":"buffer-reader.js","sourceRoot":"","sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/pg-protocol/src/buffer-reader.ts"],"names":[],"mappings":";;;AAAA,MAAM,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;AAEzC,MAAa,YAAY;IAMvB,YAAoB,SAAiB,CAAC;QAAlB,WAAM,GAAN,MAAM,CAAY;QAL9B,WAAM,GAAW,WAAW,CAAA;QAEpC,wCAAwC;QAChC,aAAQ,GAAW,OAAO,CAAA;IAEO,CAAC;IAEnC,SAAS,CAAC,MAAc,EAAE,MAAc;QAC7C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;QACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;IACtB,CAAC;IAEM,KAAK;QACV,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QACnD,IAAI,CAAC,MAAM,IAAI,CAAC,CAAA;QAChB,OAAO,MAAM,CAAA;IACf,CAAC;IAEM,IAAI;QACT,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QACvC,IAAI,CAAC,MAAM,EAAE,CAAA;QACb,OAAO,MAAM,CAAA;IACf,CAAC;IAEM,KAAK;QACV,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QACnD,IAAI,CAAC,MAAM,IAAI,CAAC,CAAA;QAChB,OAAO,MAAM,CAAA;IACf,CAAC;IAEM,MAAM,CAAC,MAAc;QAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAA;QACrF,IAAI,CAAC,MAAM,IAAI,MAAM,CAAA;QACrB,OAAO,MAAM,CAAA;IACf,CAAC;IAEM,OAAO;QACZ,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAA;QACzB,IAAI,GAAG,GAAG,KAAK,CAAA;QACf,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,GAAE;QACnC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAA;QACjB,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC,CAAC,CAAA;IAC5D,CAAC;IAEM,KAAK,CAAC,MAAc;QACzB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAA;QACnE,IAAI,CAAC,MAAM,IAAI,MAAM,CAAA;QACrB,OAAO,MAAM,CAAA;IACf,CAAC;CACF;AAlDD,oCAkDC"},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@jsdevtools/ono/cjs/index.js":{"lineLengths":[13,97,33,89,29,33,17,4,72,103,2,62,21,25,43,106,45,108,42,34,31,71,75,1,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@jsdevtools/ono/src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,yBAAyB;AACzB,2CAAkC;AAIzB,oFAJA,eAAG,OAIA;AAFZ,6CAAoC;AAA3B,kGAAA,GAAG,OAAA;AACZ,0CAAwB;AAGxB,kBAAe,eAAG,CAAC;AAEnB,+BAA+B;AAC/B,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK,QAAQ,EAAE;IACpE,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;CACxE"},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@jsdevtools/ono/cjs/singleton.js":{"lineLengths":[13,62,21,47,22,24,41,44,46,54,48,44,42,19,3,82,86,3,23,32,50,86,75,53,76,55,128,55,59,17,13,9,5,45,44,1,37],"data":{"version":3,"file":"singleton.js","sourceRoot":"","sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@jsdevtools/ono/src/singleton.ts"],"names":[],"mappings":";;;AACA,+CAAsD;AAGtD,MAAM,SAAS,GAAG,GAAmB,CAAC;AAChB,wBAAG;AAEzB,GAAG,CAAC,KAAK,GAAG,IAAI,iBAAc,CAAC,KAAK,CAAC,CAAC;AACtC,GAAG,CAAC,IAAI,GAAG,IAAI,iBAAc,CAAC,SAAS,CAAC,CAAC;AACzC,GAAG,CAAC,KAAK,GAAG,IAAI,iBAAc,CAAC,UAAU,CAAC,CAAC;AAC3C,GAAG,CAAC,SAAS,GAAG,IAAI,iBAAc,CAAC,cAAc,CAAC,CAAC;AACnD,GAAG,CAAC,MAAM,GAAG,IAAI,iBAAc,CAAC,WAAW,CAAC,CAAC;AAC7C,GAAG,CAAC,IAAI,GAAG,IAAI,iBAAc,CAAC,SAAS,CAAC,CAAC;AACzC,GAAG,CAAC,GAAG,GAAG,IAAI,iBAAc,CAAC,QAAQ,CAAC,CAAC;AAEvC,MAAM,MAAM,GAAG,GAA4C,CAAC;AAE5D;;;GAGG;AACH,SAAS,GAAG,CAAwC,GAAG,IAAe;IACpE,IAAI,aAAa,GAAG,IAAI,CAAC,CAAC,CAA0B,CAAC;IAErD,8CAA8C;IAC9C,IAAI,OAAO,aAAa,KAAK,QAAQ,IAAI,OAAO,aAAa,CAAC,IAAI,KAAK,QAAQ,EAAE;QAE/E,mEAAmE;QACnE,KAAK,IAAI,QAAQ,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;YAC1C,IAAI,OAAO,QAAQ,KAAK,UAAU,IAAI,QAAQ,CAAC,IAAI,KAAK,KAAK,EAAE;gBAC7D,IAAI,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBAEvC,IAAI,OAAO,IAAI,OAAO,KAAK,KAAK,IAAI,CAAC,aAAa,YAAY,OAAO,IAAI,aAAa,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,CAAC,EAAE;oBAC7G,mCAAmC;oBACnC,OAAO,QAAQ,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;iBACxC;aACF;SACF;KACF;IAED,yCAAyC;IACzC,OAAO,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAC1C,CAAC"},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@jsdevtools/ono/cjs/constructor.js":{"lineLengths":[13,62,21,49,43,39,24,26,3,54,3,64,41,52,27,89,51,53,92,74,5,43,15,1,3,73,45,3,37,40,2,3,95,70,3,59,50,71,5,29,75,5,10,49,5,2,39],"data":{"version":3,"file":"constructor.js","sourceRoot":"","sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@jsdevtools/ono/src/constructor.ts"],"names":[],"mappings":";;;AAAA,iDAA6C;AAC7C,2CAA8D;AAC9D,uCAAkD;AAGlD,MAAM,WAAW,GAAG,GAAqB,CAAC;AAClB,0BAAG;AAE3B;;GAEG;AACH,gEAAgE;AAChE,SAAS,GAAG,CAAsB,gBAAyC,EAAE,OAAoB;IAC/F,OAAO,GAAG,4BAAgB,CAAC,OAAO,CAAC,CAAC;IAEpC,SAAS,GAAG,CAAwC,GAAG,IAAe;QACpE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,yBAAa,CAAO,IAAI,EAAE,OAAQ,CAAC,CAAC;QAE5E,2CAA2C;QAC3C,IAAI,QAAQ,GAAG,IAAK,gBAAiD,CAAC,OAAO,CAAC,CAAC;QAE/E,oFAAoF;QACpF,OAAO,0BAAW,CAAC,QAAQ,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;IACrD,CAAC;IAED,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,gBAAgB,CAAC;IACvC,OAAO,GAAG,CAAC;AACb,CAAC;AAED;;;GAGG;AACH,GAAG,CAAC,MAAM,GAAG,SAAS,MAAM,CAAC,KAAgB;IAC3C,OAAO,gBAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACjC,CAAC,CAAC;AAEF;;;GAGG;AACH,GAAG,CAAC,MAAM,GAAG,SAAS,MAAM,CAAC,KAAgB,EAAE,aAAyB,EAAE,KAAc;IACtF,IAAI,KAAK,IAAI,aAAa,YAAY,KAAK,EAAE;QAC3C,OAAO,0BAAW,CAAC,KAAK,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;KACjD;SACI,IAAI,aAAa,EAAE;QACtB,OAAO,0BAAW,CAAC,KAAK,EAAE,SAAS,EAAE,aAAa,CAAC,CAAC;KACrD;SACI;QACH,OAAO,0BAAW,CAAC,KAAK,CAAC,CAAC;KAC3B;AACH,CAAC,CAAC"},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@jsdevtools/ono/cjs/extend-error.js":{"lineLengths":[13,62,29,55,35,39,52,3,90,2,47,59,54,3,51,25,41,46,61,45,5,93,71,39,62,75,45,53,5,71,47,45,39,5,20,1,34,3,46,3,47,71,41,67,5,50,69,5,1,3,62,2,47,59,3,47,36,90,89,41,68,79,62,29,39,27,43,17,53,13,23,68,13,9,5,1,40],"data":{"version":3,"file":"extend-error.js","sourceRoot":"","sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@jsdevtools/ono/src/extend-error.ts"],"names":[],"mappings":";;;AAAA,uDAAqD;AACrD,mCAAmF;AACnF,uCAAgD;AAGhD,MAAM,cAAc,GAA2B,CAAC,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;AAE5E;;;;;;GAMG;AACH,SAAgB,WAAW,CAA6D,KAAQ,EAAE,aAAiB,EAAE,KAAS;IAC5H,IAAI,QAAQ,GAAG,KAAmD,CAAC;IAEnE,WAAW,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;IAErC,0CAA0C;IAC1C,IAAI,aAAa,IAAI,OAAO,aAAa,KAAK,QAAQ,EAAE;QACtD,WAAW,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;KACtC;IAED,yFAAyF;IACzF,mEAAmE;IACnE,QAAQ,CAAC,MAAM,GAAG,gBAAM,CAAC;IAEzB,0DAA0D;IAC1D,uEAAuE;IACvE,IAAI,kCAAgB,EAAE;QACpB,kCAAgB,CAAC,QAAQ,CAAC,CAAC;KAC5B;IAED,mEAAmE;IACnE,2CAA2C;IAC3C,IAAI,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QACtC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;KAChC;IAED,OAAO,QAAQ,CAAC;AAClB,CAAC;AA3BD,kCA2BC;AAED;;GAEG;AACH,SAAS,WAAW,CAAC,QAAmB,EAAE,aAAyB;IACjE,IAAI,SAAS,GAAG,MAAM,CAAC,wBAAwB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IAEnE,IAAI,mBAAW,CAAC,SAAS,CAAC,EAAE;QAC1B,sBAAc,CAAC,SAAS,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC;KACpD;SACI,IAAI,uBAAe,CAAC,SAAS,CAAC,EAAE;QACnC,QAAQ,CAAC,KAAK,GAAG,kBAAU,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;KACtD;AACH,CAAC;AAED;;;;;GAKG;AACH,SAAS,WAAW,CAAC,QAAmB,EAAE,aAAwB;IAChE,gCAAgC;IAChC,sFAAsF;IACtF,qFAAqF;IACrF,qCAAqC;IACrC,IAAI,IAAI,GAAG,qBAAW,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;IAEtD,2EAA2E;IAC3E,0DAA0D;IAC1D,IAAI,SAAS,GAAG,QAAe,CAAC;IAChC,IAAI,cAAc,GAAG,aAAoB,CAAC;IAE1C,KAAK,IAAI,GAAG,IAAI,IAAI,EAAE;QACpB,IAAI,SAAS,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;YAChC,IAAI;gBACF,SAAS,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC;aACtC;YACD,OAAO,CAAC,EAAE;gBACR,oDAAoD;aACrD;SACF;KACF;AACH,CAAC"},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@jsdevtools/ono/cjs/isomorphic.node.js":{"lineLengths":[13,62,51,29,39,65,60,86,3,69,2,69,3,29,3,74,2,65,3,37,68,38,1,44,3,76,2,84,3,20,80,62,18,21,51,31,26,5,65,75,68,31,16,1,43],"data":{"version":3,"file":"isomorphic.node.js","sourceRoot":"","sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@jsdevtools/ono/src/isomorphic.node.ts"],"names":[],"mappings":";;;AAAA,6BAA6B;AAC7B,uCAAwC;AAGxC,iEAAiE;AACjE,4DAA4D;AAC5D,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,MAAM,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;AAEtF;;;;GAIG;AACU,QAAA,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAElC;;;;GAIG;AACH,SAAgB,gBAAgB,CAAI,QAAqB;IACvD,gEAAgE;IAChE,QAAQ,CAAC,aAAa,CAAC,GAAG,OAAO,CAAC;AACpC,CAAC;AAHD,4CAGC;AAED;;;;GAIG;AACH,SAAS,OAAO;IACd,4EAA4E;IAC5E,0DAA0D;IAC1D,IAAI,IAAI,GAAQ,EAAE,CAAC;IACnB,IAAI,KAAK,GAAG,IAAW,CAAC;IAExB,KAAK,IAAI,GAAG,IAAI,qBAAW,CAAC,KAAK,CAAC,EAAE;QAClC,IAAI,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;KACnB;IAED,6DAA6D;IAC7D,uEAAuE;IACvE,gEAAgE;IAChE,OAAO,IAAI,CAAC,aAAa,CAAC,CAAC;IAE3B,OAAO,IAAqB,CAAC;AAC/B,CAAC"},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@jsdevtools/ono/cjs/to-json.js":{"lineLengths":[13,62,46,57,65,50,3,44,73,3,19,80,62,18,21,41,38,35,36,47,34,13,9,5,16,1,24,3,88,87,3,38,18,72,44,95,41,5,36,35,30,50,31,5,22,1,34,35],"data":{"version":3,"file":"to-json.js","sourceRoot":"","sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@jsdevtools/ono/src/to-json.ts"],"names":[],"mappings":";;;AAEA,MAAM,YAAY,GAAG,CAAC,UAAU,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;AACzD,MAAM,cAAc,GAAG,CAAC,aAAa,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;AACjE,MAAM,eAAe,GAAG,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;AAElD;;;GAGG;AACH,SAAgB,MAAM;IACpB,4EAA4E;IAC5E,0DAA0D;IAC1D,IAAI,IAAI,GAAQ,EAAE,CAAC;IACnB,IAAI,KAAK,GAAG,IAAW,CAAC;IAExB,KAAK,IAAI,GAAG,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE;QAClC,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAC3B,IAAI,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;YACvB,IAAI,IAAI,GAAG,OAAO,KAAK,CAAC;YAExB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBAChC,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;aACnB;SACF;KACF;IAED,OAAO,IAAqB,CAAC;AAC/B,CAAC;AAlBD,wBAkBC;AAGD;;;GAGG;AACH,SAAgB,WAAW,CAAC,GAAW,EAAE,OAA+B,EAAE;IACxE,IAAI,IAAI,GAA2B,EAAE,CAAC;IAEtC,oEAAoE;IACpE,OAAO,GAAG,IAAI,GAAG,KAAK,eAAe,EAAE;QACrC,IAAI,GAAG,IAAI,CAAC,MAAM,CAChB,MAAM,CAAC,mBAAmB,CAAC,GAAG,CAAC,EAC/B,MAAM,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAClC,CAAC;QACF,GAAG,GAAG,MAAM,CAAC,cAAc,CAAC,GAAG,CAAW,CAAC;KAC5C;IAED,gCAAgC;IAChC,IAAI,UAAU,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;IAE/B,0BAA0B;IAC1B,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE;QAC3C,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;KACxB;IAED,OAAO,UAAU,CAAC;AACpB,CAAC;AArBD,kCAqBC"},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@jsdevtools/ono/cjs/stack.js":{"lineLengths":[13,62,101,24,28,3,35,3,33,31,33,45,1,34,3,34,3,37,19,91,17,29,45,1,42,3,72,3,46,44,72,36,49,5,10,41,5,1,32,3,74,3,61,24,50,24,61,70,14,30,30,11,5,10,42,5,1,40,3,86,3,26,16,41,61,21,48,32,37,45,70,71,33,17,13,46,79,68,53,22,13,9,31,36,9,5,70,77,38,17,1,3,72,3,41,43,56,26,26,7,1,33],"data":{"version":3,"file":"stack.js","sourceRoot":"","sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@jsdevtools/ono/src/stack.ts"],"names":[],"mappings":"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"},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@jsdevtools/ono/cjs/normalize.js":{"lineLengths":[13,62,58,55,3,72,3,36,28,12,102,71,78,6,1,44,3,90,3,39,22,14,19,21,56,38,26,5,43,39,36,9,14,28,9,35,5,10,32,24,35,5,71,32,29,66,9,14,43,9,5,75,69,66,5,45,1,38,37],"data":{"version":3,"file":"normalize.js","sourceRoot":"","sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@jsdevtools/ono/src/normalize.ts"],"names":[],"mappings":";;;AAAA,uDAA2C;AAG3C;;GAEG;AACH,SAAgB,gBAAgB,CAAC,OAAoB;IACnD,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;IACxB,OAAO;QACL,cAAc,EAAE,OAAO,CAAC,cAAc,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC;QAC7F,MAAM,EAAE,OAAO,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,wBAAM;YAC3C,CAAC,CAAC,CAAC,OAAO,OAAO,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC;KACpE,CAAC;AACJ,CAAC;AAPD,4CAOC;AAED;;GAEG;AACH,SAAgB,aAAa,CAAwC,IAAe,EAAE,OAAmB;IACvG,IAAI,aAA4B,CAAC;IACjC,IAAI,KAAoB,CAAC;IACzB,IAAI,UAAqB,CAAC;IAC1B,IAAI,OAAO,GAAG,EAAE,CAAC;IAEjB,oDAAoD;IACpD,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;QAC/B,UAAU,GAAG,IAAI,CAAC;KACnB;SACI,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;QACpC,IAAI,IAAI,CAAC,CAAC,CAAC,YAAY,KAAK,EAAE;YAC5B,aAAa,GAAG,IAAI,CAAC,CAAC,CAAM,CAAC;SAC9B;aACI;YACH,KAAK,GAAG,IAAI,CAAC,CAAC,CAAM,CAAC;SACtB;QACD,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAC5B;SACI;QACH,aAAa,GAAG,IAAI,CAAC,CAAC,CAAM,CAAC;QAC7B,KAAK,GAAG,IAAI,CAAC,CAAC,CAAM,CAAC;QACrB,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAC5B;IAED,mEAAmE;IACnE,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;QACzB,IAAI,OAAO,CAAC,MAAM,EAAE;YAClB,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;SACvD;aACI;YACH,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAChC;KACF;IAED,IAAI,OAAO,CAAC,cAAc,IAAI,aAAa,IAAI,aAAa,CAAC,OAAO,EAAE;QACpE,6DAA6D;QAC7D,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,OAAO,CAAC;KAC3D;IAED,OAAO,EAAE,aAAa,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC;AAC3C,CAAC;AAzCD,sCAyCC"},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@jsdevtools/ono/cjs/types.js":{"lineLengths":[13,62,31,33],"data":{"version":3,"file":"types.js","sourceRoot":"","sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@jsdevtools/ono/src/types.ts"],"names":[],"mappings":";;AAAA,+BAA+B"},"url":null,"sourceURL":null},"file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@apidevtools/openapi-schemas/lib/index.js":{"lineLengths":[13,62,106,3,45,3,67,3,45,3,59,3,45,3,59,3,45,3,60,3,62,3,19,26,26,26,28,2,41,34,31,25,71,75,1,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///D:/ATLP/E-Commerce/e-commerce-lydia-32-bn/node_modules/@apidevtools/openapi-schemas/src/index.ts"],"names":[],"mappings":";;;AAIA;;GAEG;AACU,QAAA,SAAS,GAAG,OAAO,CAAC,qCAAqC,CAAqB,CAAC;AAE5F;;GAEG;AACU,QAAA,SAAS,GAAG,OAAO,CAAC,6BAA6B,CAAqB,CAAC;AAEpF;;GAEG;AACU,QAAA,SAAS,GAAG,OAAO,CAAC,6BAA6B,CAAqB,CAAC;AAEpF;;GAEG;AACU,QAAA,UAAU,GAAG,OAAO,CAAC,6BAA6B,CAA0B,CAAC;AAE1F;;GAEG;AACU,QAAA,OAAO,GAAG;IACrB,EAAE,EAAE,iBAAS;IACb,EAAE,EAAE,iBAAS;IACb,EAAE,EAAE,iBAAS;IACb,GAAG,EAAE,kBAAU;CAChB,CAAC;AAEF,yCAAyC;AACzC,kBAAe,eAAO,CAAC;AAEvB,+BAA+B;AAC/B,yBAAyB;AACzB,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK,QAAQ,EAAE;IACpE,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;CACxE"},"url":null,"sourceURL":null}}}